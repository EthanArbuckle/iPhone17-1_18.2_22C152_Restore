uint64_t sub_416C(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  int64_t v33;

  v3 = a1 + 64;
  v32 = (char *)&_swiftEmptyDictionarySingleton;
  v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    v5 = ~(-1 << -(char)v4);
  }
  else {
    v5 = -1;
  }
  v6 = v5 & *(void *)(a1 + 64);
  v33 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v31 = v3;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v8 << 6);
  while (1)
  {
    v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    v15 = sub_F59AC(v14, a2);
    if (*(void *)(v15 + 16))
    {
      v19 = v32;
      v20 = *((void *)v32 + 2);
      if (*((void *)v32 + 3) <= v20)
      {
        sub_DFC2C(v20 + 1, 1);
        v19 = (char *)&_swiftEmptyDictionarySingleton;
      }
      v32 = v19;
      sub_F7C20();
      sub_F72C0();
      result = sub_F7C50();
      v21 = v32 + 64;
      v22 = -1 << v32[32];
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)&v32[8 * (v23 >> 6) + 64]) == 0)
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        v3 = v31;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          v28 = v24 == v27;
          if (v24 == v27) {
            v24 = 0;
          }
          v26 |= v28;
          v29 = *(void *)&v21[8 * v24];
          if (v29 != -1)
          {
            v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      v25 = __clz(__rbit64((-1 << v23) & ~*(void *)&v32[8 * (v23 >> 6) + 64])) | v23 & 0x7FFFFFFFFFFFFFC0;
      v3 = v31;
LABEL_37:
      *(void *)&v21[(v25 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v25;
      v30 = (void *)(*((void *)v32 + 6) + 16 * v25);
      *v30 = v12;
      v30[1] = v13;
      *(void *)(*((void *)v32 + 7) + 8 * v25) = v15;
      ++*((void *)v32 + 2);
      result = swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_5;
      }
    }
LABEL_8:
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v16 >= v33) {
      goto LABEL_39;
    }
    v17 = *(void *)(v3 + 8 * v16);
    if (!v17) {
      break;
    }
LABEL_20:
    v6 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v16 << 6);
    v8 = v16;
  }
  v18 = v8 + 2;
  if (v8 + 2 >= v33) {
    goto LABEL_39;
  }
  v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  v18 = v8 + 3;
  if (v8 + 3 >= v33) {
    goto LABEL_39;
  }
  v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  v18 = v8 + 4;
  if (v8 + 4 >= v33) {
    goto LABEL_39;
  }
  v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  v18 = v8 + 5;
  if (v8 + 5 >= v33)
  {
LABEL_39:
    sub_44A8();
    return (uint64_t)v32;
  }
  v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
LABEL_19:
    v16 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v33) {
      goto LABEL_39;
    }
    v17 = *(void *)(v3 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_44A8()
{
  return swift_release();
}

uint64_t sub_44B0()
{
  v1[13] = v0;
  uint64_t v2 = type metadata accessor for TypingIndicator();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_F43B4, v0, 0);
}

uint64_t type metadata accessor for TypingIndicator()
{
  uint64_t result = qword_12B260;
  if (!qword_12B260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RCSServiceSession.cancelTypingIndicator(chatID:guid:sender:subscriptionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_127C10
                                                                                     + dword_127C10);
  v15 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v15;
  void *v15 = v8;
  v15[1] = sub_46BC;
  return v17(a3, a4, a5, a6, a7, a8);
}

uint64_t sub_46BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_47B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_127C10
                                                                                     + dword_127C10);
  v15 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v15;
  void *v15 = v8;
  v15[1] = sub_57A4;
  return v17(a3, a4, a5, a6, a7, a8);
}

id variable initialization expression of RCSOutgoingMessageController.client()
{
  id v0 = (id)im_primary_queue();
  id v1 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:v0];

  return v1;
}

BOOL sub_48FC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_4910(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_491C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

_DWORD *sub_492C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_493C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

unsigned __int8 *sub_4948@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_4958(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_4964(void *a1, void *a2)
{
  return *a1 == *a2;
}

BOOL sub_4978(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_498C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[32] = a7;
  v8[33] = v7;
  v8[30] = a5;
  v8[31] = a6;
  v8[28] = a3;
  v8[29] = a4;
  v8[26] = a1;
  v8[27] = a2;
  uint64_t v9 = sub_F70F0();
  v8[34] = v9;
  v8[35] = *(void *)(v9 - 8);
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v8[38] = swift_task_alloc();
  v8[39] = type metadata accessor for RCSMessage(0);
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  sub_F74E0();
  v8[42] = sub_F74D0();
  uint64_t v11 = sub_F7470();
  v8[43] = v11;
  v8[44] = v10;
  return _swift_task_switch(sub_4B0C, v11, v10);
}

uint64_t sub_4B0C()
{
  id v1 = *(void **)(v0 + 320);
  uint64_t v2 = *(int **)(v0 + 312);
  uint64_t v27 = *(void *)(v0 + 328);
  uint64_t v29 = *(void *)(v0 + 264);
  uint64_t v20 = *(void *)(v0 + 256);
  uint64_t v26 = *(void *)(v0 + 248);
  v22 = *(unsigned char **)(v0 + 304);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v3 = *(long long **)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v24 = *(void *)(v0 + 208);
  long long v6 = v3[1];
  long long v5 = v3[2];
  long long v7 = *v3;
  *(_OWORD *)(v0 + 57) = *(long long *)((char *)v3 + 41);
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v5;
  *(_OWORD *)(v0 + 16) = v7;
  long long v9 = v3[1];
  long long v8 = v3[2];
  long long v10 = *v3;
  *(_OWORD *)(v0 + 121) = *(long long *)((char *)v3 + 41);
  *(_OWORD *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 80) = v10;
  *(_WORD *)(v0 + 137) = 256;
  unsigned char *v22 = 0;
  uint64_t v11 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  v12 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v22, 0, 1, v11);
  *(_OWORD *)(v0 + 144) = 0u;
  *(void *)(v0 + 176) = 0;
  *(_OWORD *)(v0 + 160) = 0u;
  sub_5560((uint64_t)v3);
  sub_5560((uint64_t)v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  rawValue = RCSMessageMetadata.init()().entries._rawValue;
  uint64_t v13 = (uint64_t)v1 + v2[7];
  v12((unsigned char *)v13, 1, 1, v11);
  uint64_t v14 = (uint64_t)v1 + v2[8];
  *(void *)(v14 + 32) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *((unsigned char *)v1 + v2[11]) = 0;
  *(void *)((char *)v1 + v2[12]) = 0;
  sub_55B4(v0 + 16, (uint64_t)v1);
  v1[16] = v24;
  v1[17] = v4;
  v1[18] = 0;
  v1[19] = 0;
  v15 = (void *)((char *)v1 + v2[13]);
  void *v15 = v25;
  v15[1] = v23;
  v15[2] = v26;
  v15[3] = v20;
  sub_5610((uint64_t)v22, v13, (uint64_t *)&unk_128170);
  sub_5610(v0 + 144, v14, &qword_127C38);
  *(void *)((char *)v1 + v2[9]) = rawValue;
  *((unsigned char *)v1 + v2[10]) = 0;
  uint64_t result = sub_5674((uint64_t)v1, v27);
  uint64_t v17 = *(void *)(*(void *)(v29 + OBJC_IVAR___RCSServiceSession_state) + 80);
  *(void *)(v0 + 360) = v17;
  if (v17)
  {
    v28 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v17 + 144) + **(int **)(*(void *)v17 + 144));
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_4E28;
    uint64_t v19 = *(void *)(v0 + 328);
    return v28(v19);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_4E28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    long long v5 = sub_51AC;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    long long v5 = sub_4F44;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_4F44()
{
  v22 = v0;
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  uint64_t v4 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_bridgeObjectRetain_n();
  long long v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7670();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v19 = v0[37];
    uint64_t v20 = v0[41];
    uint64_t v17 = v0[35];
    uint64_t v18 = v0[34];
    unint64_t v7 = v0[27];
    uint64_t v8 = v0[26];
    long long v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)long long v9 = 136315138;
    swift_bridgeObjectRetain();
    v0[25] = sub_A3FC(v8, v7, &v21);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v5, v6, "Cancelled typing indicator for %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
    uint64_t v10 = v20;
  }
  else
  {
    uint64_t v11 = v0[41];
    uint64_t v12 = v0[37];
    uint64_t v13 = v0[34];
    uint64_t v14 = v0[35];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    uint64_t v10 = v11;
  }
  sub_56D8(v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_51AC()
{
  uint64_t v24 = v0;
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[34];
  swift_release();
  swift_release();
  uint64_t v4 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  long long v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7690();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v21 = v0[36];
    uint64_t v22 = v0[41];
    uint64_t v19 = v0[35];
    uint64_t v20 = v0[34];
    uint64_t v8 = v0[26];
    unint64_t v7 = v0[27];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    v0[23] = sub_A3FC(v8, v7, &v23);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[24] = v11;
    sub_F77B0();
    *uint64_t v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v5, v6, "Failed to cancel typing indicator for %s: %@", (uint8_t *)v9, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
    uint64_t v12 = v22;
  }
  else
  {
    uint64_t v13 = v0[41];
    uint64_t v15 = v0[35];
    uint64_t v14 = v0[36];
    uint64_t v16 = v0[34];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v12 = v13;
  }
  sub_56D8(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

void type metadata accessor for IMAccountRegistrationStatus(uint64_t a1)
{
}

void type metadata accessor for IMChatStyle(uint64_t a1)
{
}

void type metadata accessor for FZErrorType(uint64_t a1)
{
}

uint64_t sub_551C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_5560(uint64_t a1)
{
  return a1;
}

uint64_t sub_55B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_5610(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_551C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_5674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_56D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RCSMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for FZChatMemberStatus(uint64_t a1)
{
}

void sub_5748(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_57A8(void *a1, void *a2, unint64_t a3)
{
  switch(a3 >> 62)
  {
    case 1uLL:
      id v9 = a1;
      sub_F78A0(32);
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xD00000000000001ELL;
      id v7 = [v9 description];
      goto LABEL_6;
    case 2uLL:
      unint64_t v15 = 0;
      id v6 = a1;
      sub_F78A0(95);
      v19._countAndFlagsBits = 0xD00000000000005DLL;
      v19._object = (void *)0x8000000000101C90;
      sub_F72E0(v19);
      id v7 = [v6 description];
      goto LABEL_6;
    case 3uLL:
      unint64_t v15 = 0;
      id v8 = a1;
      sub_F78A0(61);
      v20._countAndFlagsBits = 0xD00000000000003BLL;
      v20._object = (void *)0x8000000000101C50;
      sub_F72E0(v20);
      id v7 = [v8 description];
LABEL_6:
      id v10 = v7;
      uint64_t v11 = sub_F7220();
      uint64_t v13 = v12;

      v21._countAndFlagsBits = v11;
      v21._object = v13;
      sub_F72E0(v21);
      swift_bridgeObjectRelease();
      sub_6EA8(a1, (uint64_t)a2, a3);
      break;
    default:
      swift_errorRetain();
      sub_F78A0(26);
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xD000000000000014;
      v16._countAndFlagsBits = (uint64_t)a1;
      v16._object = a2;
      sub_F72E0(v16);
      v17._countAndFlagsBits = 8250;
      v17._object = (void *)0xE200000000000000;
      sub_F72E0(v17);
      swift_getErrorValue();
      v18._countAndFlagsBits = sub_F7BD0();
      sub_F72E0(v18);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      break;
  }
  return v15;
}

unint64_t sub_5A1C()
{
  return sub_57A8(*(void **)v0, *(void **)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_5A28()
{
  return sub_F6CE0();
}

uint64_t sub_5A40()
{
  return sub_F6D00();
}

uint64_t sub_5A58()
{
  return sub_F6CD0();
}

uint64_t variable initialization expression of RCSHandle.alternateHandle()
{
  return 0;
}

uint64_t sub_5A8C(void *a1)
{
  id v1 = objc_msgSend(self, "IMCountryCodeForSimSlot:", objc_msgSend(a1, "slotID"));
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_F7220();

  return v3;
}

uint64_t sub_5B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[38] = a3;
  v4[39] = v3;
  v4[36] = a1;
  v4[37] = a2;
  uint64_t v5 = sub_F70F0();
  v4[40] = v5;
  v4[41] = *(void *)(v5 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v4[44] = sub_F74E0();
  v4[45] = sub_F74D0();
  uint64_t v7 = sub_F7470();
  v4[46] = v7;
  v4[47] = v6;
  return _swift_task_switch(sub_5C28, v7, v6);
}

uint64_t sub_5C28()
{
  uint64_t v49 = v0;
  unsigned int v1 = [*(id *)(v0 + 296) style];
  if (v1 != 43)
  {
    if (v1 == 45)
    {
      uint64_t v2 = *(void **)(v0 + 296);
      swift_release();
      id v3 = [v2 chatIdentifier];
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = sub_F7220();
        uint64_t v7 = v6;

        sub_6CA4(0, &qword_127C60);
        id v8 = CTLazuliDestination.init(uri:)(v5, v7);
LABEL_10:
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v11 = *(uint64_t (**)(id))(v0 + 8);
        return v11(v8);
      }
      uint64_t v12 = *(void *)(v0 + 344);
      uint64_t v13 = *(void *)(v0 + 320);
      uint64_t v14 = *(void *)(v0 + 328);
      Swift::String v16 = *(void **)(v0 + 288);
      unint64_t v15 = *(void **)(v0 + 296);
      uint64_t v17 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v17, v13);
      id v18 = v16;
      id v19 = v15;
      id v20 = v18;
      id v21 = v19;
      uint64_t v22 = sub_F70D0();
      os_log_type_t v23 = sub_F7690();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = *(void **)(v0 + 288);
        uint64_t v25 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315394;
        id v26 = [v24 guid];
        if (v26)
        {
          uint64_t v27 = v26;
          unint64_t v28 = sub_F7220();
          unint64_t v30 = v29;
        }
        else
        {
          unint64_t v30 = 0x8000000000101C30;
          unint64_t v28 = 0xD000000000000010;
        }
        v36 = *(void **)(v0 + 288);
        v37 = *(void **)(v0 + 296);
        *(void *)(v0 + 272) = sub_A3FC(v28, v30, &v48);
        sub_F77B0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v25 + 12) = 2080;
        id v38 = [v37 guid];
        if (v38)
        {
          v39 = v38;
          unint64_t v40 = sub_F7220();
          unint64_t v42 = v41;
        }
        else
        {
          unint64_t v40 = 0xD000000000000011;
          unint64_t v42 = 0x8000000000101C10;
        }
        uint64_t v47 = *(void *)(v0 + 344);
        uint64_t v44 = *(void *)(v0 + 320);
        uint64_t v43 = *(void *)(v0 + 328);
        v45 = *(void **)(v0 + 296);
        *(void *)(v0 + 280) = sub_A3FC(v40, v42, &v48);
        sub_F77B0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_0, v22, v23, "Failed to find chatIdentifier for %s in %s", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v47, v44);
      }
      else
      {
        uint64_t v31 = *(void *)(v0 + 344);
        uint64_t v32 = *(void *)(v0 + 320);
        uint64_t v33 = *(void *)(v0 + 328);
        v35 = *(void **)(v0 + 288);
        v34 = *(void **)(v0 + 296);

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
    }
    else
    {
      swift_release();
    }
    id v8 = 0;
    goto LABEL_10;
  }
  *(void *)(v0 + 384) = sub_F74D0();
  uint64_t v10 = sub_F7470();
  *(void *)(v0 + 392) = v10;
  *(void *)(v0 + 400) = v9;
  return _swift_task_switch(sub_6058, v10, v9);
}

void sub_6058()
{
  uint64_t v1 = *(void *)(*(void *)(v0[39] + OBJC_IVAR___RCSServiceSession_state) + 40);
  v0[51] = v1;
  if (v1)
  {
    uint64_t v2 = v0[38];
    v0[31] = v0[37];
    v0[32] = v2;
    swift_retain();
    id v3 = (void *)swift_task_alloc();
    v0[52] = v3;
    *id v3 = v0;
    v3[1] = sub_614C;
    RCSGroupController.resolveGroupIdentity(for:subscriptionContext:)((uint64_t)(v0 + 26), (uint64_t)(v0 + 31), (uint64_t)(v0 + 32));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_614C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 392);
  uint64_t v4 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v5 = sub_6484;
  }
  else {
    uint64_t v5 = sub_6284;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_6284()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 376);
  return _swift_task_switch(sub_62E8, v1, v2);
}

uint64_t sub_62E8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  sub_6BA8((void *)(v0 + 208), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 192);
  char v10 = *(unsigned char *)(v0 + 200);
  sub_6C3C(v0 + 144, v0 + 80);
  if (*(void *)(v0 + 88))
  {
    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 24) = v3;
    *(void *)(v0 + 32) = v5;
    *(void *)(v0 + 40) = v6;
    *(void *)(v0 + 48) = v8;
    *(void *)(v0 + 56) = v7;
    *(void *)(v0 + 64) = v9;
    *(unsigned char *)(v0 + 72) = v10;
    sub_6CA4(0, &qword_127C60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = CTLazuliDestination.init(handle:countryCode:)(v0 + 16, (void (*)(void))variable initialization expression of RCSHandle.alternateHandle);
    sub_6D74((uint64_t *)(v0 + 144));
  }
  else
  {
    id v11 = 0;
  }
  sub_6BEC(v0 + 208);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(id))(v0 + 8);
  return v12(v11);
}

uint64_t sub_6484()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 376);
  return _swift_task_switch(sub_64E8, v1, v2);
}

uint64_t sub_64E8()
{
  uint64_t v27 = v0;
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[40];
  uint64_t v4 = (void *)v0[37];
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  id v6 = v4;
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F7690();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v0[37];
    char v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)char v10 = 136315138;
    id v11 = [v9 guid];
    if (v11)
    {
      uint64_t v12 = v11;
      unint64_t v13 = sub_F7220();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0x8000000000101C10;
      unint64_t v13 = 0xD000000000000011;
    }
    uint64_t v20 = v0[41];
    uint64_t v25 = v0[42];
    uint64_t v24 = v0[40];
    id v21 = (void *)v0[37];
    v0[33] = sub_A3FC(v13, v15, &v26);
    sub_F77B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v7, v8, "Failed to resolve GroupURI for %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v25, v24);
  }
  else
  {
    uint64_t v17 = v0[41];
    uint64_t v16 = v0[42];
    uint64_t v18 = v0[40];
    id v19 = (void *)v0[37];

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22(0);
}

long long *sub_6768(void *a1, long long *a2)
{
  id v3 = a1;
  if ([a1 style] != 45)
  {
    *((void *)&v18 + 1) = sub_6CA4(0, &qword_127C48);
    id v19 = &protocol witness table for IMDChat;
    *(void *)&long long v17 = v3;
    id v3 = v3;
    a2 = &v17;
    if (IMDChatRCSGroupIdentity.isValid.getter())
    {
      *((void *)&v21 + 1) = &type metadata for IMDChatRCSGroupIdentity;
      uint64_t v22 = &protocol witness table for IMDChatRCSGroupIdentity;
      uint64_t v11 = swift_allocObject();
      long long v12 = v18;
      *(_OWORD *)(v11 + 16) = v17;
      *(_OWORD *)(v11 + 32) = v12;
      *(void *)(v11 + 48) = v19;
      *(void *)&long long v20 = v11;
      a2 = (long long *)sub_6BA8(&v20, (uint64_t)&type metadata for IMDChatRCSGroupIdentity);
      sub_F1084((uint64_t)v24);
      sub_6BEC((uint64_t)&v20);
      sub_6C3C((uint64_t)v24, (uint64_t)v25);
      if (*((void *)&v25[0] + 1))
      {
        v27[0] = v25[0];
        v27[1] = v25[1];
        v28[0] = v26[0];
        *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v26 + 9);
        sub_6CA4(0, &qword_127C60);
        return (long long *)CTLazuliDestination.init(handle:countryCode:)((uint64_t)v27, (void (*)(void))variable initialization expression of RCSHandle.alternateHandle);
      }
    }
    else
    {
      sub_6AA0((uint64_t)&v17);
      long long v20 = 0u;
      long long v21 = 0u;
      uint64_t v22 = 0;
      sub_6AF4((uint64_t)&v20);
    }
    sub_6B54();
    swift_allocError();
    *(void *)uint64_t v13 = v3;
    long long v14 = xmmword_F8DB0;
LABEL_13:
    *(_OWORD *)(v13 + 8) = v14;
    id v15 = v3;
    swift_willThrow();
    return a2;
  }
  uint64_t result = (long long *)[v3 participantHandles];
  if (result)
  {
    uint64_t v5 = result;
    id v6 = (void *)sub_F7410();

    if (v6[2])
    {
      uint64_t v8 = v6[4];
      uint64_t v7 = (void *)v6[5];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = v8;
      v9._object = v7;
      RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v23, v9, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
      if (!v10)
      {
        uint64_t v16 = sub_6CA4(0, &qword_127C60);
        __chkstk_darwin(v16);
        sub_5560((uint64_t)&v23);
        a2 = (long long *)CTLazuliDestination.init(handle:countryCode:)((uint64_t)&v23, (void (*)(void))sub_6D18);
        sub_6D20((uint64_t)&v23);
      }
      swift_bridgeObjectRelease();
      return a2;
    }
    swift_bridgeObjectRelease();
    sub_6B54();
    swift_allocError();
    *(void *)uint64_t v13 = v3;
    long long v14 = xmmword_F8DC0;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_6AA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_6AF4(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_127C38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_6B54()
{
  unint64_t result = qword_127C50;
  if (!qword_127C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_127C50);
  }
  return result;
}

void *sub_6BA8(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_6BEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_6C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_127C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6CA4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_6CE0()
{
  sub_6BEC(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_6D18()
{
  return sub_5A8C(*(void **)(v0 + 16));
}

uint64_t sub_6D20(uint64_t a1)
{
  return a1;
}

uint64_t *sub_6D74(uint64_t *a1)
{
  return a1;
}

uint64_t sub_6DB0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_6E18(void *a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 62)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
      id result = a1;
      break;
    default:
      swift_bridgeObjectRetain();
      id result = (id)swift_errorRetain();
      break;
  }
  return result;
}

void _s16DestinationErrorOwxx(uint64_t a1)
{
}

void sub_6EA8(void *a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 62)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:

      break;
    default:
      swift_bridgeObjectRelease();
      swift_errorRelease();
      break;
  }
}

void *_s16DestinationErrorOwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_6E18(*(void **)a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t _s16DestinationErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_6E18(*(void **)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_6EA8(v6, v7, v8);
  return a1;
}

__n128 _s16DestinationErrorOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s16DestinationErrorOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_6EA8(v4, v6, v5);
  return a1;
}

uint64_t _s16DestinationErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 57) >> 5) | (4
                                                           * ((*(void *)(a1 + 16) >> 57) & 0x18 | *(void *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s16DestinationErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_70D8(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 62;
}

uint64_t sub_70E4(uint64_t result)
{
  *(void *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_70F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *_s16DestinationErrorOMa()
{
  return &_s16DestinationErrorON;
}

void sub_711C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  id v9 = a1;
  uint64_t v10 = sub_F70D0();
  os_log_type_t v11 = sub_F7670();
  long long v12 = &off_126000;
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v29 = v2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v32 = v28;
    *(_DWORD *)uint64_t v13 = 136315138;
    id v14 = [v9 guid];
    id v30 = v9;
    if (!v14)
    {
LABEL_12:

      __break(1u);
      return;
    }
    id v15 = v14;
    uint64_t v16 = sub_F7220();
    unint64_t v18 = v17;

    uint64_t v31 = sub_A3FC(v16, v18, &v32);
    sub_F77B0();
    id v9 = v30;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v11, "Marking message %s as interworked", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v2 = v29;
    long long v12 = &off_126000;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v19 = [v2 relayController];
  id v20 = [v9 v12[224]];
  [v19 messageSent:v20 onService:IMServiceNameSMS compatibilityService:0 wasInterworked:1];

  id v21 = [self sharedAccountController];
  if (!v21)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v22 = v21;
  id v23 = [v21 anySessionForServiceName:IMServiceNameSMS];

  if (!v23) {
    return;
  }
  id v24 = [v9 v12[224]];
  if (!v24) {
    goto LABEL_11;
  }
  uint64_t v25 = v24;
  id v26 = [v2 account];
  [v23 notifyDidSendMessageID:v25 account:v26 shouldNotify:0 wasDowngraded:0 wasInterworked:1];
}

void sub_74B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  id v9 = a1;
  uint64_t v10 = sub_F70D0();
  os_log_type_t v11 = sub_F7670();
  long long v12 = &off_126000;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v30 = v4;
    uint64_t v31 = v2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v33 = v29;
    *(_DWORD *)uint64_t v13 = 136315138;
    id v14 = [v9 guid];
    if (!v14) {
      goto LABEL_8;
    }
    id v15 = v14;
    uint64_t v16 = sub_F7220();
    unint64_t v18 = v17;

    uint64_t v32 = sub_A3FC(v16, v18, &v33);
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v11, "Marking message %s as delivered", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v30);
    uint64_t v2 = v31;
    long long v12 = &off_126000;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v19 = [v9 v12[224]];
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = sub_F6EE0();
    uint64_t v22 = *(void *)(v21 - 8);
    __chkstk_darwin(v21);
    id v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_F6EB0();
    uint64_t v25 = (void *)sub_F6E60();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    [v2 didReceiveMessageDeliveryReceiptForMessageID:v20 date:v25];

    id v26 = [v2 relayController];
    id v27 = [v9 v12[224]];
    [v26 messageDelivered:v27];

    return;
  }
  __break(1u);
LABEL_8:

  __break(1u);
}

void sub_7858(int *a1, void *a2, void *a3, NSObject *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_551C(&qword_127C70);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7E14(a1, a2, a3, a4);
  if ((v14 & 1) == 0) {
    return;
  }
  switch((unint64_t)a1)
  {
    case 0uLL:
      if (qword_127BE0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_8B44(v10, (uint64_t)qword_127F58);
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, v10);
      sub_F6FF0();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (v35 != 1) {
        goto LABEL_11;
      }
      goto LABEL_15;
    case 1uLL:
      if (qword_127BE8 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_8B44(v10, (uint64_t)qword_127F70);
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
      sub_F6FF0();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (v34 == 1) {
LABEL_11:
      }
        sub_74B4(a2);
      else {
LABEL_15:
      }
        sub_711C(a2);
      return;
    case 2uLL:
      id v15 = (char **)sub_F6EE0();
      uint64_t v11 = (uint64_t)*(v15 - 1);
      uint64_t v21 = *(void *)(v11 + 64);
      __chkstk_darwin(v15);
      uint64_t v13 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_F6EB0();
      uint64_t v22 = (void *)sub_F6E60();
      uint64_t v23 = *(void (**)(char *, char **))(v11 + 8);
      v23(v13, v15);
      [a2 setTimeRead:v22];

      id v24 = [a2 guid];
      if (!v24) {
        goto LABEL_23;
      }
      uint64_t v25 = v24;
      uint64_t v33 = v23;
      id v26 = [a2 timeRead];
      uint64_t v27 = sub_551C(&qword_127C78);
      v32[1] = v32;
      uint64_t v28 = __chkstk_darwin(v27 - 8);
      uint64_t v13 = (char *)v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (!v26) {
        goto LABEL_24;
      }
      __chkstk_darwin(v28);
      sub_F6EA0();

      (*(void (**)(char *, char *, char **))(v11 + 32))(v13, (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
      (*(void (**)(char *, void, uint64_t, char **))(v11 + 56))(v13, 0, 1, v15);
      if ((*(unsigned int (**)(char *, uint64_t, char **))(v11 + 48))(v13, 1, v15) == 1) {
        goto LABEL_25;
      }
      uint64_t v30 = (void *)sub_F6E60();
      v33(v13, v15);
      [v5 didReceiveMessageReadReceiptForMessageID:v25 date:v30 completionBlock:0];

      id v31 = [v5 relayController];
      [v31 messageReadByRemote:a2];

      return;
    case 3uLL:
    case 4uLL:
      id v15 = &off_126000;
      uint64_t v16 = (char *)[a2 guid];
      if (!v16)
      {
        __break(1u);
        goto LABEL_22;
      }
      uint64_t v13 = v16;
      [v5 didReceiveError:4 forMessageID:v16 forceError:1];

      unint64_t v17 = (void (*)(char *, char **))[a2 guid];
      if (!v17)
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        (*(void (**)(char *, uint64_t, uint64_t, char **))(v11 + 56))(v13, 1, 1, v15);
LABEL_25:
        __break(1u);
        JUMPOUT(0x7E00);
      }
      uint64_t v33 = v17;
      objc_msgSend(v5, "processMessageSendFailure:");
      unint64_t v18 = v33;

      return;
    default:
      return;
  }
}

void sub_7E14(int *a1, void *a2, void *a3, NSObject *a4)
{
  v116 = a4;
  id v107 = a2;
  uint64_t v112 = sub_F70F0();
  uint64_t v110 = *(void *)(v112 - 8);
  uint64_t v6 = __chkstk_darwin(v112);
  v111 = (char *)v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char **)((char *)v102 - v9);
  uint64_t v11 = __chkstk_darwin(v8);
  v108 = (char *)v102 - v12;
  __chkstk_darwin(v11);
  char v14 = (char *)v102 - v13;
  id v15 = (_DWORD *)sub_551C(&qword_127C70);
  uint64_t v16 = *((void *)v15 - 1);
  __chkstk_darwin(v15);
  unint64_t v18 = ((char *)v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_127B88 != -1) {
LABEL_56:
  }
    swift_once();
  uint64_t v19 = sub_8B44((uint64_t)v15, (uint64_t)qword_127E50);
  uint64_t v20 = *(void (**)(NSObject *, uint64_t, _DWORD *))(v16 + 16);
  v20(v18, v19, v15);
  sub_F6FF0();
  uint64_t v21 = *(void (**)(NSObject *, _DWORD *))(v16 + 8);
  v21(v18, v15);
  if (LOBYTE(v120.scheme._countAndFlagsBits) == 1)
  {
    uint64_t v22 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v23 = v110;
    uint64_t v24 = v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v14, v22, v112);
    uint64_t v25 = sub_F70D0();
    os_log_type_t v26 = sub_F7670();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "Dropping disposition due to override", v27, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v24);
    return;
  }
  if ([a3 style] == 45
    || a1 == (int *)((char *)&dword_0 + 1)
    || a1 == &dword_4
    || a1 == (int *)((char *)&dword_0 + 3))
  {
    goto LABEL_13;
  }
  if (qword_127B20 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_8B44((uint64_t)v15, (uint64_t)qword_127D18);
  v20(v18, v28, v15);
  sub_F6FF0();
  v21(v18, v15);
  if (LOBYTE(v120.scheme._countAndFlagsBits) == 1)
  {
LABEL_13:
    v119 = &_swiftEmptySetSingleton;
    id v29 = [a3 participants];
    if (!v29)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      swift_bridgeObjectRelease();
      sub_6D20((uint64_t)v116);

      __break(1u);
      return;
    }
    uint64_t v30 = v29;
    sub_8B7C();
    unint64_t v31 = sub_F7410();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_F79B0();
      swift_bridgeObjectRelease();
      a3 = (void *)v112;
      if (v33)
      {
LABEL_16:
        unint64_t v113 = v31 & 0xC000000000000001;
        uint64_t v114 = 0;
        v106 = (void (**)(char *, uint64_t, void *))(v110 + 16);
        v105 = (void (**)(char *, uint64_t))(v110 + 8);
        v104 = &v118;
        uint64_t v34 = 4;
        uint64_t v10 = &off_126000;
        *(void *)&long long v32 = 136315138;
        long long v103 = v32;
        v102[1] = (char *)&type metadata for Any + 8;
        unint64_t v109 = v31;
        while (1)
        {
          uint64_t v16 = v34 - 4;
          if (v113) {
            char v35 = (int *)sub_F78D0();
          }
          else {
            char v35 = (int *)*(id *)(v31 + 8 * v34);
          }
          a1 = v35;
          char v14 = (char *)(v34 - 3);
          if (__OFADD__(v16, 1))
          {
            __break(1u);
            goto LABEL_56;
          }
          id v36 = [v35 v10[242]];
          if (v36)
          {
            v37 = v36;
            uint64_t v38 = sub_F7220();
            unint64_t v40 = v39;

            if ((Class)v38 == v116[2].isa && v40 == v116[3].isa)
            {
LABEL_52:

LABEL_53:
              swift_bridgeObjectRelease();
LABEL_54:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
            char v42 = sub_F7B60();
            swift_bridgeObjectRelease();
            if (v42)
            {

              goto LABEL_54;
            }
          }
          uint64_t v115 = v34 - 3;
          uint64_t v43 = v33;
          id v44 = [a1 v10[242]];
          if (!v44) {
            break;
          }
          v45 = v44;
          Swift::Int v46 = sub_F7220();
          id v15 = v47;

          sub_52430(&v118, v46, (Swift::Int)v15);
          swift_bridgeObjectRelease();
          unint64_t v18 = v116;
          RCSHandle.chatBotId.getter();
          if (v48)
          {
            uint64_t v49 = (void *)sub_F71F0();
            swift_bridgeObjectRelease();
            id v50 = objc_msgSend(v49, "__im_stripSip");

            Swift::Int v51 = sub_F7220();
            id v15 = v52;

            id v53 = [a1 v10[242]];
            if (v53)
            {
              v54 = v53;
              uint64_t v55 = sub_F7220();
              v57 = v56;

              if (v55 == v51 && v57 == v15)
              {

                swift_bridgeObjectRelease();
                goto LABEL_53;
              }
              char v58 = sub_F7B60();
              swift_bridgeObjectRelease();
              if (v58) {
                goto LABEL_52;
              }
            }
            unint64_t v18 = &v119;
            sub_52430(&v118, v51, (Swift::Int)v15);
            swift_bridgeObjectRelease();
            unint64_t v31 = v109;
          }
          id v59 = [a1 personCentricID];
          if (v59)
          {
            v60 = v59;
            Swift::Int v61 = sub_F7220();
            id v15 = v62;

            swift_bridgeObjectRetain();
            unint64_t v18 = &v119;
            sub_52430(&v118, v61, (Swift::Int)v15);
            swift_bridgeObjectRelease();
            v63._countAndFlagsBits = v61;
            v63._object = v15;
            RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v120, v63, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
            if (v64)
            {
              uint64_t v65 = Logger.rcs.unsafeMutableAddressor();
              v66 = v111;
              (*v106)(v111, v65, a3);
              v67 = a1;
              unint64_t v18 = sub_F70D0();
              os_log_type_t v68 = sub_F7680();
              if (os_log_type_enabled(v18, v68))
              {
                uint64_t v114 = v64;
                id v15 = (_DWORD *)swift_slowAlloc();
                uint64_t v118 = swift_slowAlloc();
                _DWORD *v15 = v103;
                id v69 = [v67 personCentricID];
                if (v69)
                {
                  v70 = v69;
                  uint64_t v71 = sub_F7220();
                  unint64_t v73 = v72;
                }
                else
                {
                  unint64_t v73 = 0xE500000000000000;
                  uint64_t v71 = 0x3E6C696E3CLL;
                }
                uint64_t v117 = sub_A3FC(v71, v73, &v118);
                sub_F77B0();

                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v18, v68, "Failed to parse person centric ID into RCSHandle, likely not a chatbot: %s", (uint8_t *)v15, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                swift_errorRelease();

                a3 = (void *)v112;
                (*v105)(v111, v112);
                uint64_t v114 = 0;
                unint64_t v31 = v109;
                uint64_t v10 = &off_126000;
              }
              else
              {

                swift_errorRelease();
                (*v105)(v66, (uint64_t)a3);
                uint64_t v114 = 0;
                uint64_t v10 = &off_126000;
              }
            }
            else
            {
              uint64_t v114 = 0;
              char v74 = static RCSHandle.== infix(_:_:)(&v120, v116);

              sub_6D20((uint64_t)&v120);
              uint64_t v10 = &off_126000;
              if (v74) {
                goto LABEL_54;
              }
            }
          }
          else
          {
          }
          ++v34;
          uint64_t v33 = v43;
          if (v115 == v43) {
            goto LABEL_58;
          }
        }
        __break(1u);
        goto LABEL_63;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8));
      a3 = (void *)v112;
      if (v33) {
        goto LABEL_16;
      }
    }
LABEL_58:
    swift_bridgeObjectRelease();
    uint64_t v81 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v82 = v110;
    v83 = v108;
    (*(void (**)(char *, uint64_t, void *))(v110 + 16))(v108, v81, a3);
    uint64_t v84 = (uint64_t)v119;
    id v85 = v107;
    v86 = v116;
    sub_5560((uint64_t)v116);
    a1 = (int *)v85;
    sub_5560((uint64_t)v86);
    swift_bridgeObjectRetain();
    v87 = sub_F70D0();
    v88 = a3;
    os_log_type_t v89 = sub_F7690();
    if (!os_log_type_enabled(v87, v89))
    {

      sub_6D20((uint64_t)v86);
      sub_6D20((uint64_t)v86);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, void *))(v82 + 8))(v83, v88);
      return;
    }
    uint64_t v90 = swift_slowAlloc();
    uint64_t v115 = swift_slowAlloc();
    uint64_t v118 = v115;
    *(_DWORD *)uint64_t v90 = 136315650;
    id v91 = [a1 guid];
    if (v91)
    {
      v92 = v91;
      uint64_t v93 = sub_F7220();
      unint64_t v95 = v94;

      uint64_t v117 = sub_A3FC(v93, v95, &v118);
      sub_F77B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 12) = 2080;
      v96 = v116;
      uint64_t v97 = RCSHandle.rawValue.getter();
      uint64_t v117 = sub_A3FC(v97, v98, &v118);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6D20((uint64_t)v96);
      sub_6D20((uint64_t)v96);
      *(_WORD *)(v90 + 22) = 2080;
      uint64_t v117 = v84;
      swift_bridgeObjectRetain();
      sub_551C(&qword_127C88);
      sub_8BBC();
      sub_8C60();
      uint64_t v99 = sub_F7370();
      unint64_t v101 = v100;
      swift_bridgeObjectRelease();
      uint64_t v117 = sub_A3FC(v99, v101, &v118);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v87, v89, "Dropping disposition notification for %s as it is from an unexpected sender %s - would allow from %s", (uint8_t *)v90, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v110 + 8))(v108, v112);
      return;
    }
    goto LABEL_64;
  }
  uint64_t v75 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v76 = v110;
  uint64_t v77 = v112;
  (*(void (**)(char **, uint64_t, uint64_t))(v110 + 16))(v10, v75, v112);
  v78 = sub_F70D0();
  os_log_type_t v79 = sub_F7690();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v80 = 0;
    _os_log_impl(&dword_0, v78, v79, "Dropping disposition notification as it is not supported for this chat", v80, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char **, uint64_t))(v76 + 8))(v10, v77);
}

uint64_t sub_8B44(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_8B7C()
{
  unint64_t result = qword_127C80;
  if (!qword_127C80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_127C80);
  }
  return result;
}

unint64_t sub_8BBC()
{
  unint64_t result = qword_127C90;
  if (!qword_127C90)
  {
    sub_8C18(&qword_127C88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_127C90);
  }
  return result;
}

uint64_t sub_8C18(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_8C60()
{
  unint64_t result = qword_127C98;
  if (!qword_127C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_127C98);
  }
  return result;
}

void RCSServiceSession.reportSpam(forDestination:withInfo:operation:from:)(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
}

void RCSServiceSession.reportChatbotSpam(forChatbot:withInfo:operation:from:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
}

void RCSServiceSession.sendLazuliSpamReport(_:isBot:spamType:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v103 = a3;
  int v102 = a2;
  uint64_t v6 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_F70F0();
  v106 = *(char **)(v9 - 8);
  id v107 = (id)v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  v104 = (char *)&v100 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v100 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v100 - v18;
  id v20 = [a1 sender];
  if (!v20)
  {
    __break(1u);
LABEL_36:

    __break(1u);
LABEL_37:

    __break(1u);
    goto LABEL_38;
  }
  uint64_t v21 = v20;
  uint64_t v22 = sub_F7220();
  uint64_t v24 = v23;

  id v25 = sub_72318(v22, v24, 0, 0, 0);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    uint64_t v31 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v19 = v106;
    id v32 = v107;
    (*((void (**)(char *, uint64_t, id))v106 + 2))(v12, v31, v107);
    id v4 = a1;
    uint64_t v33 = sub_F70D0();
    os_log_type_t v34 = sub_F7690();
    if (!os_log_type_enabled(v33, v34))
    {

      (*((void (**)(char *, id))v19 + 1))(v12, v32);
      return;
    }
    char v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    *(_DWORD *)char v35 = 136315138;
    id v36 = [v4 guid];
    if (v36)
    {
      v37 = v36;
      uint64_t v38 = sub_F7220();
      unint64_t v40 = v39;

      uint64_t v108 = sub_A3FC(v38, v40, &v109);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v33, v34, "Can't resolve a chat to report spam %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char *, id))v106 + 1))(v12, v107);
      return;
    }
    goto LABEL_36;
  }
  v105 = v25;
  id v26 = [v105 chatIdentifier];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = sub_F7220();
    unint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  id v41 = [a1 sender];
  if (v41)
  {
    char v42 = v41;
    uint64_t v43 = sub_F7220();
    unint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    unint64_t v45 = 0xE000000000000000;
  }
  uint64_t v46 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v46 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v46)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = Logger.rcs.unsafeMutableAddressor();
    Swift::Int v61 = v106;
    id v62 = v107;
    (*((void (**)(char *, uint64_t, id))v106 + 2))(v19, v60, v107);
    uint64_t v12 = a1;
    Swift::String v63 = sub_F70D0();
    os_log_type_t v64 = sub_F7690();
    if (!os_log_type_enabled(v63, v64))
    {

      unint64_t v98 = v105;
      (*((void (**)(char *, id))v61 + 1))(v19, v62);
      return;
    }
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136315138;
    id v66 = [v12 guid];
    if (v66)
    {
      v67 = v66;
      uint64_t v68 = sub_F7220();
      unint64_t v70 = v69;

      uint64_t v108 = sub_A3FC(v68, v70, &v109);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v63, v64, "Can't report spam %s with empty chatIdentifier", v65, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v71 = v105;
      (*((void (**)(char *, id))v106 + 1))(v19, v107);
      return;
    }
    goto LABEL_37;
  }
  uint64_t v47 = HIBYTE(v45) & 0xF;
  if ((v45 & 0x2000000000000000) == 0) {
    uint64_t v47 = v43 & 0xFFFFFFFFFFFFLL;
  }
  if (v47)
  {
    uint64_t v48 = v105;
    sub_1EEBC(v105, a1);
    unint64_t v101 = v49;
    if ((v50 & 1) == 0)
    {
      sub_B750(v49, 0);
      id v51 = sub_B054(v43, v45, v102 & 1, a1, v103);
      sub_F74F0();
      uint64_t v52 = sub_F7520();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v8, 0, 1, v52);
      sub_F74E0();
      id v107 = a1;
      id v53 = v51;
      v54 = v48;
      id v55 = v3;
      uint64_t v56 = sub_F74D0();
      v57 = (void *)swift_allocObject();
      v57[2] = v56;
      v57[3] = &protocol witness table for MainActor;
      v57[4] = v55;
      v57[5] = v28;
      v57[6] = v30;
      v57[7] = v43;
      v57[8] = v45;
      v57[9] = v53;
      char v58 = v101;
      id v59 = v107;
      v57[10] = v101;
      v57[11] = v59;
      sub_9F00((uint64_t)v8, (uint64_t)&unk_127CA8, (uint64_t)v57);
      sub_B8C4(v58, 0);
      swift_release();

      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v83 = Logger.rcs.unsafeMutableAddressor();
    id v85 = v106;
    id v84 = v107;
    v86 = v104;
    (*((void (**)(char *, uint64_t, id))v106 + 2))(v104, v83, v107);
    uint64_t v19 = a1;
    v87 = sub_F70D0();
    os_log_type_t v88 = sub_F7690();
    if (!os_log_type_enabled(v87, v88))
    {

      (*((void (**)(char *, id))v85 + 1))(v86, v84);
      return;
    }
    uint64_t v89 = swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    *(_DWORD *)uint64_t v89 = 136315394;
    id v90 = [v19 guid];
    if (v90)
    {
      id v91 = v90;
      uint64_t v92 = sub_F7220();
      unint64_t v94 = v93;

      uint64_t v108 = sub_A3FC(v92, v94, &v109);
      sub_F77B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v89 + 12) = 2080;
      LODWORD(v108) = v101;
      type metadata accessor for FZErrorType(0);
      uint64_t v95 = sub_F7270();
      uint64_t v108 = sub_A3FC(v95, v96, &v109);
      sub_F77B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v87, v88, "No CTXPCContext found to report spam %s error %s", (uint8_t *)v89, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v97 = v105;
      (*((void (**)(char *, id))v85 + 1))(v104, v107);
      return;
    }
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v72 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v19 = v106;
  id v73 = v107;
  (*((void (**)(char *, uint64_t, id))v106 + 2))(v17, v72, v107);
  uint64_t v12 = a1;
  char v74 = sub_F70D0();
  os_log_type_t v75 = sub_F7690();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = (uint8_t *)swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    *(_DWORD *)uint64_t v76 = 136315138;
    id v77 = [v12 guid];
    if (v77)
    {
      v78 = v77;
      uint64_t v79 = sub_F7220();
      unint64_t v81 = v80;

      uint64_t v108 = sub_A3FC(v79, v81, &v109);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v74, v75, "Can't report spam %s with empty destination URI", v76, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v82 = v105;
      (*((void (**)(char *, id))v106 + 1))(v17, v107);
      return;
    }
LABEL_38:

    __break(1u);
LABEL_39:

    __break(1u);
    return;
  }

  uint64_t v99 = v105;
  (*((void (**)(char *, id))v19 + 1))(v17, v73);
}

uint64_t sub_97DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 96) = v15;
  *(_OWORD *)(v8 + 80) = v14;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 40) = a4;
  uint64_t v9 = sub_F70F0();
  *(void *)(v8 + 104) = v9;
  *(void *)(v8 + 112) = *(void *)(v9 - 8);
  *(void *)(v8 + 120) = swift_task_alloc();
  sub_F74E0();
  *(void *)(v8 + 128) = sub_F74D0();
  uint64_t v11 = sub_F7470();
  *(void *)(v8 + 136) = v11;
  *(void *)(v8 + 144) = v10;
  return _swift_task_switch(sub_98EC, v11, v10);
}

void sub_98EC()
{
  uint64_t v1 = *(void *)(*(void *)(v0[5] + OBJC_IVAR___RCSServiceSession_state) + 56);
  v0[19] = v1;
  if (v1)
  {
    v0[2] = v0[11];
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[20] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_99D0;
    uint64_t v3 = v0[9];
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[7];
    uint64_t v6 = v0[8];
    uint64_t v7 = v0[6];
    RCSSpamReportingController.reportSpam(to:forDestination:withSpamReportInfo:from:)(v7, v5, v6, v3, v4, (uint64_t)(v0 + 2));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_99D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_9B70;
  }
  else {
    uint64_t v5 = sub_9B08;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_9B08()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_9B70()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = (void *)v0[12];
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  swift_errorRetain();
  id v6 = v4;
  swift_errorRetain();
  id v7 = v6;
  uint64_t v8 = sub_F70D0();
  os_log_type_t v9 = sub_F7690();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v29 = v9;
    log = v8;
    uint64_t v10 = (void *)v0[12];
    uint64_t v11 = swift_slowAlloc();
    unint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    id v12 = [v10 guid];
    if (!v12)
    {
      id v25 = (void *)v0[12];
      swift_errorRelease();

      uint64_t result = swift_errorRelease();
      __break(1u);
      return result;
    }
    uint64_t v13 = v12;
    uint64_t v26 = v0[14];
    long long v14 = (void *)v0[12];
    uint64_t v27 = v0[13];
    uint64_t v28 = v0[15];
    uint64_t v15 = sub_F7220();
    unint64_t v17 = v16;

    v0[3] = sub_A3FC(v15, v17, &v32);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v18;
    sub_F77B0();
    *unint64_t v30 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, log, v29, "Could not report spam %s. Error: %@", (uint8_t *)v11, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    uint64_t v20 = v0[14];
    uint64_t v19 = v0[15];
    uint64_t v22 = (void *)v0[12];
    uint64_t v21 = v0[13];
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_9EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_9F00(a1, a2, a3);
}

uint64_t sub_9ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_9F00(a1, a2, a3);
}

uint64_t sub_9F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_F7520();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_F7510();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_B8D0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_F7470();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_A114(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
}

void sub_A128(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
}

uint64_t sub_A13C(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_A14C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_A188(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_A264;
  return v6(a1);
}

uint64_t sub_A264()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_A35C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_A384(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_A3FC(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_F77B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_A3FC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_A4D0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_BAD8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_BAD8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_6BEC((uint64_t)v12);
  return v7;
}

uint64_t sub_A4D0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_F77C0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_A68C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_F78E0();
  if (!v8)
  {
    sub_F79A0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_F79F0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_A68C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_A724(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_A904(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_A904(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_A724(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_A89C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_F78B0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_F79A0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_F72F0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_F79F0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_F79A0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_A89C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_551C(&qword_127D00);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_A904(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_551C(&qword_127D00);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

unsigned char **sub_AA54(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_AA64(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  size_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *unint64_t v3 = v2;
  v3[1] = sub_AB44;
  return v5(v2 + 32);
}

uint64_t sub_AB44()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  unint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

void sub_AC58(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v37 = a6;
  uint64_t v38 = a4;
  unint64_t v39 = a5;
  uint64_t v11 = sub_F70F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  long long v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  swift_bridgeObjectRetain_n();
  id v16 = a3;
  unint64_t v17 = sub_F70D0();
  os_log_type_t v18 = sub_F7670();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v36 = v7;
    id v41 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v35 = v11;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_A3FC(a1, a2, (uint64_t *)&v41);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 1024;
    unsigned int v21 = [v16 isChatbot];

    LODWORD(v40) = v21;
    sub_F77B0();

    _os_log_impl(&dword_0, v17, v18, "Reporting spam about destination: %s, isBot: %{BOOL}d", (uint8_t *)v19, 0x12u);
    swift_arrayDestroy();
    uint64_t v7 = v36;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v35);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  id v22 = [objc_allocWithZone((Class)CTLazuliDestination) init];
  uint64_t v23 = (void *)sub_F71F0();
  [v22 setUri:v23];

  uint64_t v24 = *(void *)(v7 + OBJC_IVAR___RCSServiceSession_state);
  id v25 = *(void **)(v24 + 16);
  sub_6CA4(0, &qword_128020);
  id v26 = v25;
  unint64_t v27 = v39;
  swift_bridgeObjectRetain();
  uint64_t v28 = v38;
  id v29 = CTLazuliOperationID.init(id:)(v38, v27);
  id v41 = 0;
  unsigned int v30 = [v26 reportLazuliSpamWithContext:v37 destination:v22 spamReportInfo:v16 operationID:v29 error:&v41];

  if (v30)
  {
    id v31 = v41;
  }
  else
  {
    id v32 = v41;
    uint64_t v33 = sub_F6D30();

    swift_willThrow();
    if (*(void *)(v24 + 56))
    {
      swift_retain();
      RCSSpamReportingController.spamReportFailed(with:operationID:)(v33, v28, v27);
      swift_release();

      swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_B054(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  id v7 = [objc_allocWithZone((Class)CTLazuliMessageID) init];
  id v8 = [a4 fallbackHash];
  if (v8 || (id result = [a4 guid], (v8 = result) != 0))
  {
    sub_F7220();

    uint64_t v10 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v7 setUuid:v10];

    id v11 = [objc_allocWithZone((Class)CTLazuliMessageIDList) init];
    id v12 = v7;
    id v13 = [v11 list];
    sub_6CA4(0, &qword_127CF8);
    uint64_t v14 = sub_F7410();

    sub_F73F0();
    if (*(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                   + (v14 & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_F7440();
    sub_F7450();
    sub_F7430();
    uint64_t v15 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    [v11 setList:v15];

    id v16 = [objc_allocWithZone((Class)CTLazuliSpamReportInformation) init];
    [v16 setIsChatbot:a3 & 1];
    unint64_t v17 = (void *)sub_F71F0();
    [v16 setDestinationUri:v17];

    [v16 setMessageIDList:v11];
    id v18 = [a4 body];
    uint64_t v19 = v18;
    if (v18)
    {
      id v20 = [v18 string];

      sub_F7220();
      uint64_t v19 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = a5;
    objc_msgSend(v16, "setContent:", v19, a5);

    if ((unint64_t)(v21 - 1) > 3) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = qword_F8EC0[v21 - 1];
    }
    [v16 setSpamType:v22];
    uint64_t v23 = (void *)sub_F71F0();
    [v16 setFreeBodyText:v23];

    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_B394(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v12 = sub_F70F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  swift_bridgeObjectRetain_n();
  unint64_t v17 = sub_F70D0();
  os_log_type_t v18 = sub_F7670();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v33 = v12;
    uint64_t v19 = swift_slowAlloc();
    unint64_t v36 = a5;
    id v20 = (uint8_t *)v19;
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v34 = v7;
    id v40 = v21;
    uint64_t v35 = a6;
    *(_DWORD *)id v20 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_A3FC(a1, a2, (uint64_t *)&v40);
    a6 = v35;
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v17, v18, "Reporting chatbot spam to %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v7 = v34;
    swift_slowDealloc();
    a5 = v36;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v33);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  id v22 = [objc_allocWithZone((Class)CTLazuliDestination) init];
  uint64_t v23 = (void *)sub_F71F0();
  [v22 setUri:v23];

  uint64_t v24 = *(void *)(v7 + OBJC_IVAR___RCSServiceSession_state);
  id v25 = *(void **)(v24 + 16);
  sub_6CA4(0, &qword_128020);
  id v26 = v25;
  swift_bridgeObjectRetain();
  uint64_t v27 = v38;
  id v28 = CTLazuliOperationID.init(id:)(v38, a5);
  id v40 = 0;
  unsigned int v29 = [v26 reportChatbotSpam:a6 forChatbot:v22 withSpamReportInfo:v37 andOperationID:v28 withError:&v40];

  if (v29)
  {
    id v30 = v40;
  }
  else
  {
    id v31 = v40;
    uint64_t v32 = sub_F6D30();

    swift_willThrow();
    if (*(void *)(v24 + 56))
    {
      swift_retain();
      RCSSpamReportingController.spamReportFailed(with:operationID:)(v32, v27, a5);
      swift_release();

      swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_B750(id result, char a2)
{
  if ((a2 & 1) == 0) {
    return result;
  }
  return result;
}

uint64_t sub_B75C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_B7C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *id v11 = v2;
  v11[1] = sub_46BC;
  return sub_97DC(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_B8C4(id a1, char a2)
{
  if ((a2 & 1) == 0) {
}
  }

uint64_t sub_B8D0(uint64_t a1)
{
  uint64_t v2 = sub_551C((uint64_t *)&unk_128000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_B930()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_B968(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_46BC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_127CD8 + dword_127CD8);
  return v6(a1, v4);
}

uint64_t sub_BA20(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_57A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_127CE8 + dword_127CE8);
  return v6(a1, v4);
}

uint64_t sub_BAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_BB90(uint64_t a1, uint64_t a2)
{
}

void sub_BB9C(uint64_t a1, uint64_t a2)
{
}

void sub_BBA8(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + OBJC_IVAR___RCSServiceSession_state) + 24);
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1C9BC(a1, a2);
    if (v9)
    {
      id v10 = *(id *)(*(void *)(v4 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v11 = [v10 fileTransferCapabilities];
      if (v11)
      {
        uint64_t v12 = v11;
        id v13 = [v11 *a3];
        if (v13)
        {
          uint64_t v14 = v13;
          if ([v13 longLongValue])
          {
            id v15 = [v14 longLongValue];

            if (((unint64_t)v15 - 0x20000000000000) >> 54 != 1023) {
              __break(1u);
            }
          }
          else
          {
          }
        }
        else
        {
        }
      }
      else
      {
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

Swift::Int64 __swiftcall RCSServiceSession.maxSizePerAttachment(withCount:lastAddressedHandle:lastAddressedSIMID:)(Swift::Int32 withCount, Swift::String lastAddressedHandle, Swift::String_optional lastAddressedSIMID)
{
  if (!lastAddressedSIMID.value._object) {
    return 104857600;
  }
  sub_BBA8(lastAddressedSIMID.value._countAndFlagsBits, (uint64_t)lastAddressedSIMID.value._object, (SEL *)&selRef_maxTransferSize);
  if (v4) {
    return 104857600;
  }
  return result;
}

uint64_t sub_BDAC(void *a1, int a2)
{
  uint64_t v4 = sub_F70F0();
  __chkstk_darwin(v4);
  id v5 = sub_3D95C(a1);
  unsigned __int8 v6 = sub_C8E0(v5, a2);

  return v6 & 1;
}

BOOL sub_C038(void *a1)
{
  uint64_t v2 = sub_F70F0();
  __chkstk_darwin(v2);
  uint64_t v3 = (char *)sub_3D95C(a1);
  BOOL v4 = sub_CECC(v3);

  return v4;
}

void *sub_C2BC(void *a1)
{
  id v2 = [a1 identity];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 impus];

    uint64_t v5 = sub_F7410();
    id v6 = v1;
    uint64_t v7 = sub_D3B4(v5);
    swift_bridgeObjectRelease();

    uint64_t v8 = *((void *)v7 + 2);
    if (v8)
    {
      char v9 = (uint64_t *)(v7 + 40);
      do
      {
        uint64_t v11 = *(v9 - 1);
        uint64_t v10 = *v9;
        swift_bridgeObjectRetain();
        uint64_t v12 = (void *)sub_F71F0();
        int IsPhoneNumber = IMStringIsPhoneNumber();

        if (IsPhoneNumber)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_4FE88(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v15 = _swiftEmptyArrayStorage[2];
          unint64_t v14 = _swiftEmptyArrayStorage[3];
          if (v15 >= v14 >> 1) {
            sub_4FE88(v14 > 1, v15 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v15 + 1;
          uint64_t v16 = (char *)&_swiftEmptyArrayStorage[2 * v15];
          *((void *)v16 + 4) = v11;
          *((void *)v16 + 5) = v10;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v9 += 2;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_C454@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v8 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v9;
  v10._object = v8;
  RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v28, v10, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
  if (v11)
  {
    uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v13 = sub_F70D0();
    os_log_type_t v14 = sub_F76A0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      id v26 = a2;
      uint64_t v16 = v15;
      uint64_t v24 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v29 = v25;
      *(_DWORD *)uint64_t v16 = 136315394;
      os_log_t v23 = v13;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_A3FC(v9, (unint64_t)v8, &v29);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2112;
      swift_errorRetain();
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v27 = v17;
      sub_F77B0();
      *uint64_t v24 = v17;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v18 = v23;
      _os_log_impl(&dword_0, v23, v14, "failed to parse self-URI %s into RCSHandle: %@", (uint8_t *)v16, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v26;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    uint64_t countAndFlagsBits = v28.id._countAndFlagsBits;
    object = v28.id._object;
    swift_bridgeObjectRetain();
    uint64_t result = sub_6D20((uint64_t)&v28);
    *a2 = countAndFlagsBits;
    a2[1] = (uint64_t)object;
  }
  return result;
}

id _sSo17RCSServiceSessionC3RCSE23isGroupMessagingEnabled3forSbSo7IMDChatC_tF_0(void *a1)
{
  id v2 = [a1 lastAddressedLocalHandle];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_F7220();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v6 = [a1 lastAddressedSIMID];
  if (v6)
  {
    uint64_t v7 = v6;
    sub_F7220();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = [self sharedManager];
  if (!v5)
  {
    uint64_t v11 = 0;
    if (v9) {
      goto LABEL_9;
    }
LABEL_11:
    uint64_t v12 = 0;
    goto LABEL_12;
  }
  uint64_t v11 = (void *)sub_F71F0();
  if (!v9) {
    goto LABEL_11;
  }
LABEL_9:
  uint64_t v12 = (void *)sub_F71F0();
LABEL_12:
  id v13 = [v10 groupMessagingEnabledForPhoneNumber:v11 simID:v12];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v13;
}

id sub_C8E0(void *a1, int a2)
{
  LODWORD(v2) = a2;
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (void **)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v44 - v10;
  __chkstk_darwin(v9);
  id v13 = (char *)&v44 - v12;
  uint64_t v14 = sub_551C(&qword_127D10);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (void **)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_127BA8 != -1) {
    goto LABEL_42;
  }
  while (1)
  {
    uint64_t v18 = sub_8B44(v14, (uint64_t)qword_127EB0);
    (*(void (**)(void *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
    sub_F6FF0();
    (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v17 = v53;
    if (!v53[2] || (id v19 = [a1 identity]) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    id v20 = v19;
    int v51 = v2;
    id v21 = [v19 impus];

    uint64_t v14 = sub_F7410();
    uint64_t v15 = *(void *)(v14 + 16);
    if (!v15) {
      break;
    }
    unint64_t v44 = a1;
    unint64_t v45 = v11;
    uint64_t v46 = v8;
    uint64_t v47 = v13;
    uint64_t v48 = v5;
    uint64_t v49 = v4;
    uint64_t v5 = 0;
    uint64_t v52 = v14 + 32;
    uint64_t v11 = (char *)v17[2];
    char v50 = v17 + 7;
    while (1)
    {
      if (v11)
      {
        uint64_t v22 = (uint64_t *)(v52 + 16 * v5);
        uint64_t v2 = *v22;
        a1 = (void *)v22[1];
        BOOL v23 = v17[4] == *v22 && v17[5] == (void)a1;
        if (v23 || (sub_F7B60() & 1) != 0)
        {
LABEL_31:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v32 = Logger.rcs.unsafeMutableAddressor();
          uint64_t v34 = v47;
          uint64_t v33 = v48;
          uint64_t v35 = v49;
          (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v32, v49);
          unint64_t v36 = sub_F70D0();
          os_log_type_t v37 = sub_F7670();
          if (os_log_type_enabled(v36, v37))
          {
            uint64_t v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v38 = 0;
            _os_log_impl(&dword_0, v36, v37, "Assuming we can't send read receipts due to user-default override", v38, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
          return 0;
        }
        if (v11 != (unsigned char *)&dword_0 + 1) {
          break;
        }
      }
LABEL_6:
      if (++v5 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = v48;
        uint64_t v4 = v49;
        uint64_t v11 = v45;
        uint64_t v8 = v46;
        a1 = v44;
        LOBYTE(v2) = v51;
        goto LABEL_24;
      }
    }
    uint64_t v8 = v50;
    uint64_t v4 = 1;
    while (1)
    {
      id v13 = (char *)(v4 + 1);
      if (__OFADD__(v4, 1)) {
        break;
      }
      BOOL v24 = *(v8 - 1) == v2 && *v8 == (void)a1;
      if (v24 || (sub_F7B60() & 1) != 0) {
        goto LABEL_31;
      }
      v8 += 2;
      ++v4;
      if (v13 == v11) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_42:
    swift_once();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v2) = v51;
LABEL_24:
  if (v2 == 45)
  {
    id v25 = [a1 messagingCapabilities];
    if (!v25)
    {
      uint64_t v26 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, v26, v4);
      uint64_t v27 = sub_F70D0();
      os_log_type_t v28 = sub_F7670();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_0, v27, v28, "Assuming we can't send typing indicators as system configuration has no messaging capabilities", v29, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      return 0;
    }
  }
  else
  {
    id v25 = [a1 groupChatCapabilites];
    if (!v25)
    {
      uint64_t v39 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v8, v39, v4);
      id v40 = sub_F70D0();
      os_log_type_t v41 = sub_F7670();
      if (os_log_type_enabled(v40, v41))
      {
        char v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v42 = 0;
        _os_log_impl(&dword_0, v40, v41, "Assuming we can't send typing indicators as system configuration has no group chat capabilities", v42, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(void *, uint64_t))(v5 + 8))(v8, v4);
      return 0;
    }
  }
  id v30 = v25;
  id v31 = objc_msgSend(v25, "supportsComposingIndicator", v44, v45, v46);

  return v31;
}

BOOL sub_CECC(char *a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char **)((char *)&v37 - v7);
  uint64_t v9 = sub_551C(&qword_127D10);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char **)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_127BA0 != -1) {
    goto LABEL_36;
  }
  while (1)
  {
    uint64_t v13 = sub_8B44(v9, (uint64_t)qword_127E98);
    (*(void (**)(void *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
    sub_F6FF0();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v12 = v44;
    if (!v44[2]) {
      break;
    }
    id v14 = [a1 identity];
    if (!v14) {
      break;
    }
    uint64_t v15 = v14;
    char v42 = v8;
    id v16 = [v14 impus];

    uint64_t v9 = sub_F7410();
    uint64_t v17 = *(void *)(v9 + 16);
    if (!v17)
    {
      swift_bridgeObjectRelease();
      break;
    }
    os_log_type_t v37 = a1;
    uint64_t v38 = v6;
    uint64_t v39 = v3;
    uint64_t v40 = v2;
    uint64_t v10 = 0;
    uint64_t v43 = v9 + 32;
    uint64_t v6 = (char *)v12[2];
    os_log_type_t v41 = v12 + 7;
    while (1)
    {
      if (v6)
      {
        uint64_t v18 = (uint64_t *)(v43 + 16 * v10);
        uint64_t v19 = *v18;
        uint64_t v3 = v18[1];
        BOOL v20 = v12[4] == *v18 && v12[5] == v3;
        if (v20 || (sub_F7B60() & 1) != 0)
        {
LABEL_23:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v22 = Logger.rcs.unsafeMutableAddressor();
          uint64_t v24 = v39;
          uint64_t v23 = v40;
          id v25 = v42;
          (*(void (**)(void *, uint64_t, uint64_t))(v39 + 16))(v42, v22, v40);
          uint64_t v26 = sub_F70D0();
          os_log_type_t v27 = sub_F7670();
          if (os_log_type_enabled(v26, v27))
          {
            os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v28 = 0;
            _os_log_impl(&dword_0, v26, v27, "Assuming we can't send read receipts due to user-default override", v28, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(void *, uint64_t))(v24 + 8))(v25, v23);
          return 0;
        }
        if (v6 != (unsigned char *)&dword_0 + 1) {
          break;
        }
      }
LABEL_6:
      if (++v10 == v17)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v39;
        uint64_t v2 = v40;
        a1 = v37;
        uint64_t v6 = v38;
        goto LABEL_28;
      }
    }
    uint64_t v8 = v41;
    uint64_t v2 = 1;
    while (1)
    {
      a1 = (char *)(v2 + 1);
      if (__OFADD__(v2, 1)) {
        break;
      }
      BOOL v21 = *(v8 - 1) == v19 && *v8 == v3;
      if (v21 || (sub_F7B60() & 1) != 0) {
        goto LABEL_23;
      }
      v8 += 2;
      ++v2;
      if (a1 == v6) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_36:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_28:
  id v29 = objc_msgSend(a1, "messagingCapabilities", v37, v38);
  if (v29)
  {
    id v30 = v29;
    id v31 = [v29 notificationDisplay];

    return v31 == 0;
  }
  else
  {
    uint64_t v33 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v33, v2);
    uint64_t v34 = sub_F70D0();
    os_log_type_t v35 = sub_F7670();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl(&dword_0, v34, v35, "Assuming we can't send read receipts as system configuration has no messaging capabilities", v36, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
}

char *sub_D3B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v3 = (uint64_t *)(v15 + 40);
  uint64_t v4 = (char *)&_swiftEmptyArrayStorage;
  do
  {
    uint64_t v6 = *v3;
    v14[0] = *(v3 - 1);
    v14[1] = v6;
    swift_bridgeObjectRetain();
    sub_C454(v14, &v12);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = v13;
    if (v13)
    {
      uint64_t v8 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_350A4(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v10 = *((void *)v4 + 2);
      unint64_t v9 = *((void *)v4 + 3);
      if (v10 >= v9 >> 1) {
        uint64_t v4 = sub_350A4((char *)(v9 > 1), v10 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v10 + 1;
      uint64_t v5 = &v4[16 * v10];
      *((void *)v5 + 4) = v8;
      *((void *)v5 + 5) = v7;
    }
    v3 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_D50C(uint64_t a1)
{
  return sub_DD10(a1, qword_127D18);
}

uint64_t sub_D534()
{
  uint64_t v0 = sub_551C(&qword_127FB8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_551C(&qword_127C70);
  sub_D994(v3, qword_127D30);
  sub_8B44(v3, (uint64_t)qword_127D30);
  uint64_t v4 = sub_551C(&qword_127FC0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  [self isInternalCarryDevice];
  return sub_F7010();
}

uint64_t sub_D65C(uint64_t a1)
{
  return sub_D6B0(a1, qword_127D48);
}

uint64_t sub_D688(uint64_t a1)
{
  return sub_D6B0(a1, qword_127D60);
}

uint64_t sub_D6B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_551C(&qword_127FD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_551C(&qword_127FE0);
  sub_D994(v6, a2);
  sub_8B44(v6, (uint64_t)a2);
  uint64_t v7 = sub_551C(&qword_127FE8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  return sub_F7020();
}

uint64_t sub_D7CC(uint64_t a1)
{
  return sub_DD10(a1, qword_127D78);
}

uint64_t sub_D7F4(uint64_t a1)
{
  return sub_DD10(a1, qword_127D90);
}

uint64_t sub_D81C(uint64_t a1)
{
  return sub_DD10(a1, qword_127DA8);
}

uint64_t sub_D84C(uint64_t a1)
{
  return sub_DD10(a1, qword_127DC0);
}

uint64_t sub_D87C(uint64_t a1)
{
  return sub_DD10(a1, qword_127DD8);
}

uint64_t sub_D8A4(uint64_t a1)
{
  return sub_DD10(a1, qword_127DF0);
}

uint64_t sub_D8CC(uint64_t a1)
{
  return sub_DD10(a1, qword_127E08);
}

uint64_t sub_D8F4(uint64_t a1)
{
  return sub_DD10(a1, qword_127E20);
}

uint64_t sub_D91C(uint64_t a1)
{
  return sub_DD10(a1, qword_127E38);
}

uint64_t sub_D944(uint64_t a1)
{
  return sub_DD10(a1, qword_127E50);
}

uint64_t sub_D96C(uint64_t a1)
{
  return sub_DD10(a1, qword_127E68);
}

uint64_t *sub_D994(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_D9F8(uint64_t a1)
{
  return sub_DD10(a1, qword_127E80);
}

uint64_t sub_DA20(uint64_t a1)
{
  return sub_DA68(a1, qword_127E98);
}

uint64_t sub_DA44(uint64_t a1)
{
  return sub_DA68(a1, qword_127EB0);
}

uint64_t sub_DA68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_551C(&qword_127FC8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_551C(&qword_127D10);
  sub_D994(v6, a2);
  sub_8B44(v6, (uint64_t)a2);
  uint64_t v7 = sub_551C(&qword_127FD0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  return sub_F7000();
}

uint64_t sub_DB80(uint64_t a1)
{
  return sub_DD10(a1, qword_127EC8);
}

uint64_t sub_DBA8(uint64_t a1)
{
  return sub_DD10(a1, qword_127EE0);
}

uint64_t sub_DBD0(uint64_t a1)
{
  return sub_DD10(a1, qword_127EF8);
}

uint64_t sub_DBF8(uint64_t a1)
{
  return sub_DD10(a1, qword_127F10);
}

uint64_t sub_DC20(uint64_t a1)
{
  return sub_DD10(a1, qword_127F28);
}

uint64_t sub_DC48(uint64_t a1)
{
  return sub_DD10(a1, qword_127F40);
}

uint64_t sub_DC70(uint64_t a1)
{
  return sub_DD10(a1, qword_127F58);
}

uint64_t sub_DC98(uint64_t a1)
{
  return sub_DD10(a1, qword_127F70);
}

uint64_t sub_DCC0(uint64_t a1)
{
  return sub_DD10(a1, qword_127F88);
}

uint64_t sub_DCE8(uint64_t a1)
{
  return sub_DD10(a1, qword_127FA0);
}

uint64_t sub_DD10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_551C(&qword_127FB8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_551C(&qword_127C70);
  sub_D994(v6, a2);
  sub_8B44(v6, (uint64_t)a2);
  uint64_t v7 = sub_551C(&qword_127FC0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  return sub_F7010();
}

uint64_t CTLazuliCapabilitiesInformation.recipientUri.getter()
{
  id v1 = [v0 recipient];
  id v2 = [v1 extractedUri];

  uint64_t v3 = sub_F7220();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  if ((v5 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(v5) & 0xF;
  }
  else {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  id v7 = [v0 recipient];
  uint64_t v8 = v7;
  uint64_t v9 = &selRef_uri;
  if (v6) {
    uint64_t v9 = &selRef_extractedUri;
  }
  id v10 = [v7 *v9];

  uint64_t v11 = sub_F7220();
  return v11;
}

id CTLazuliCapabilitiesInformation.offline.getter()
{
  id result = [v0 respondsToSelector:"availibility"];
  if (result) {
    return (id)([v0 availibility] == (char *)&dword_0 + 1);
  }
  return result;
}

uint64_t sub_DF5C()
{
  return CTLazuliCapabilitiesInformation.recipientUri.getter();
}

id sub_DF80()
{
  return [*v0 supportsVideoSharing];
}

id sub_DFA4()
{
  return [*v0 supportsImageSharing];
}

id sub_DFC8()
{
  return [*v0 supportsChat];
}

id sub_DFEC()
{
  return [*v0 supportsFileTransfer];
}

id sub_E010()
{
  return [*v0 supportsGeolocationCapabilities];
}

id sub_E034()
{
  return [*v0 isBot];
}

id sub_E058()
{
  id v1 = *v0;
  id result = [*v0 respondsToSelector:"availibility"];
  if (result) {
    return (id)([v1 availibility] == (char *)&dword_0 + 1);
  }
  return result;
}

uint64_t RCSHandle.scheme.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall RCSServiceSession.replicationRequiredForMultipleMessageParts()()
{
  return 0;
}

uint64_t sub_E0E0()
{
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_E0E8()
{
  uint64_t v59 = sub_F70F0();
  uint64_t v0 = *(void *)(v59 - 8);
  uint64_t v1 = __chkstk_darwin(v59);
  uint64_t v3 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v6 = (char *)&v57 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v57 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = sub_551C(&qword_127C70);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_127B80 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_8B44(v12, (uint64_t)qword_127E38);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v60 == 1)
  {
    uint64_t v17 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v18 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v11, v17, v59);
    uint64_t v19 = sub_F70D0();
    os_log_type_t v20 = sub_F7670();
    if (os_log_type_enabled(v19, v20))
    {
      BOOL v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "Dropping send success due to override", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v0 + 8))(v11, v18);
  }
  else
  {
    uint64_t v22 = self;
    id v23 = [v22 sharedInstance];
    uint64_t v24 = (void *)sub_F71F0();
    id v25 = [v23 messageWithGUID:v24];

    if (v25)
    {
      if ([v25 isFromMe])
      {
        uint64_t v26 = (void *)sub_F71F0();
        id v27 = v58;
        [v58 _markMessageAsSent:v26];

        id v28 = [v27 relayController];
        id v29 = (void *)sub_F71F0();
        id v30 = [v27 service];
        id v31 = [v30 internalName];

        if (!v31)
        {
          sub_F7220();
          id v31 = (id)sub_F71F0();
          swift_bridgeObjectRelease();
        }
        id v32 = [v27 service];
        id v33 = [v32 internalName];

        if (!v33)
        {
          sub_F7220();
          id v33 = (id)sub_F71F0();
          swift_bridgeObjectRelease();
        }
        [v28 messageSent:v29 onService:v31 compatibilityService:v33];

        id v34 = [v22 sharedInstance];
        id v35 = [v34 chatForMessage:v25];

        if (v35)
        {
          id v36 = [v35 style];
          id v37 = [v35 chatIdentifier];
          if (v37)
          {
            uint64_t v38 = v37;
            [v58 didSendMessage:v25 forChat:v37 style:v36];
          }
          else
          {
            __break(1u);
          }
          return;
        }
        uint64_t v52 = Logger.rcs.unsafeMutableAddressor();
        uint64_t v45 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v6, v52, v59);
        id v53 = sub_F70D0();
        os_log_type_t v54 = sub_F7690();
        if (os_log_type_enabled(v53, v54))
        {
          id v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v55 = 0;
          _os_log_impl(&dword_0, v53, v54, "Ignoring message sent due to due to missing chat", v55, 2u);
          swift_slowDealloc();
          uint64_t v56 = v25;
        }
        else
        {
          uint64_t v56 = v53;
          id v53 = v25;
        }

        char v50 = *(void (**)(char *, uint64_t))(v0 + 8);
        int v51 = v6;
      }
      else
      {
        uint64_t v44 = Logger.rcs.unsafeMutableAddressor();
        uint64_t v45 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v9, v44, v59);
        uint64_t v46 = sub_F70D0();
        os_log_type_t v47 = sub_F7690();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v48 = 0;
          _os_log_impl(&dword_0, v46, v47, "Ignoring message sent for a message I didn't send", v48, 2u);
          swift_slowDealloc();
          uint64_t v49 = v25;
        }
        else
        {
          uint64_t v49 = v46;
          uint64_t v46 = v25;
        }

        char v50 = *(void (**)(char *, uint64_t))(v0 + 8);
        int v51 = v9;
      }
      v50(v51, v45);
      return;
    }
    uint64_t v39 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v40 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v3, v39, v59);
    os_log_type_t v41 = sub_F70D0();
    os_log_type_t v42 = sub_F7690();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_0, v41, v42, "Ignoring message sent due to unknown message UUID", v43, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v40);
  }
}

void RCSServiceSession.systemConfigurationChanged(_:with:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  id v11 = a1;
  id v12 = a2;
  id v13 = v11;
  id v14 = v12;
  uint64_t v15 = sub_F70D0();
  int v16 = sub_F7670();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v43 = v16;
    os_log_t v44 = v15;
    uint64_t v45 = v6;
    uint64_t v46 = v3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v48 = v42;
    *(_DWORD *)uint64_t v17 = 136446722;
    uint64_t v47 = sub_A3FC(0xD000000000000023, 0x8000000000102360, &v48);
    sub_F77B0();
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = [v13 labelID];
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = sub_F7220();
      unint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v47 = sub_A3FC(v20, v22, &v48);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    id v23 = [v14 description];
    uint64_t v24 = sub_F7220();
    unint64_t v26 = v25;

    uint64_t v47 = sub_A3FC(v24, v26, &v48);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v27 = v44;
    _os_log_impl(&dword_0, v44, (os_log_type_t)v43, "%{public}s simID: %s configuration: %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v45);
    uint64_t v3 = v46;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  id v28 = [v13 labelID];
  if (v28)
  {
    id v29 = v28;
    uint64_t v30 = sub_F7220();
    uint64_t v32 = v31;

    uint64_t v33 = *(void *)&v3[OBJC_IVAR___RCSServiceSession_state];
    uint64_t v34 = *(void *)(v33 + 24);
    id v35 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v34;
    sub_1CBE0((uint64_t)v35, v30, v32, isUniquelyReferenced_nonNull_native);
    uint64_t v37 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v33 + 24) = v37;
    swift_bridgeObjectRelease();
    id v38 = [v3 account];
    uint64_t v39 = sub_3DE5C();
    sub_1BC40(v39);
    swift_bridgeObjectRelease();
    uint64_t v40 = (void *)sub_F71A0();
    swift_bridgeObjectRelease();
    [v38 writeAccountDefaults:v40];
    swift_bridgeObjectRelease();
  }
}

uint64_t RCSServiceSession.messageReceived(_:with:ofType:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_F70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = v13;
  id v17 = v14;
  id v18 = v15;
  uint64_t v19 = sub_F70D0();
  int v20 = sub_F7670();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    int v43 = v20;
    os_log_t v44 = v19;
    id v46 = v17;
    uint64_t v47 = v8;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v50 = v42;
    *(_DWORD *)uint64_t v21 = 136446978;
    uint64_t v49 = sub_A3FC(0xD00000000000001FLL, 0x8000000000102390, &v50);
    sub_F77B0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = v16;
    id v23 = [v16 labelID];
    uint64_t v48 = v4;
    uint64_t v45 = v9;
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = sub_F7220();
      unint64_t v27 = v26;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    uint64_t v49 = sub_A3FC(v25, v27, &v50);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    id v17 = v46;
    id v29 = [v46 uuid];
    uint64_t v30 = sub_F7220();
    unint64_t v32 = v31;

    uint64_t v49 = sub_A3FC(v30, v32, &v50);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2080;
    id v33 = [v18 description];
    uint64_t v34 = sub_F7220();
    unint64_t v36 = v35;

    uint64_t v37 = v34;
    id v16 = v22;
    uint64_t v49 = sub_A3FC(v37, v36, &v50);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v38 = v44;
    _os_log_impl(&dword_0, v44, (os_log_type_t)v43, "%{public}s simID: %s id: %s type: %s", (uint8_t *)v21, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v11, v47);
    uint64_t v4 = v48;
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v39 = *(void *)(*(void *)(v4 + OBJC_IVAR___RCSServiceSession_state) + 112);
  if (v39)
  {
    uint64_t v49 = (uint64_t)v16;
    uint64_t v50 = (uint64_t)v17;
    uint64_t v40 = *(void (**)(uint64_t *, uint64_t *))(*(void *)v39 + 136);
    swift_retain();
    v40(&v50, &v49);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t RCSServiceSession.dispositionInformation(_:with:)(void *a1, void *a2)
{
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v71 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v69 = (char *)&v67 - v9;
  __chkstk_darwin(v8);
  id v11 = (char *)&v67 - v10;
  uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
  id v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v73 = v12;
  uint64_t v75 = v5 + 16;
  char v74 = v13;
  ((void (*)(char *))v13)(v11);
  id v14 = a1;
  id v15 = a2;
  id v16 = v14;
  id v17 = v15;
  id v18 = sub_F70D0();
  int v19 = sub_F7670();
  BOOL v20 = os_log_type_enabled(v18, (os_log_type_t)v19);
  uint64_t v76 = v5;
  id v77 = v17;
  if (v20)
  {
    LODWORD(v72) = v19;
    uint64_t v70 = v4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(void *)&long long v79 = v68;
    *(_DWORD *)uint64_t v21 = 136446722;
    *(void *)&v81[0] = sub_A3FC(0xD00000000000001FLL, 0x8000000000102410, (uint64_t *)&v79);
    sub_F77B0();
    *(_WORD *)(v21 + 12) = 2080;
    id v22 = [v16 labelID];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = sub_F7220();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    *(void *)&v81[0] = sub_A3FC(v24, v26, (uint64_t *)&v79);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    id v28 = v77;
    id v29 = [v77 description];
    uint64_t v30 = sub_F7220();
    unint64_t v32 = v31;

    *(void *)&v81[0] = sub_A3FC(v30, v32, (uint64_t *)&v79);
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v18, (os_log_type_t)v72, "%{public}s simID: %s status: %s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v27 = *(void (**)(char *, uint64_t))(v76 + 8);
    uint64_t v4 = v70;
    v27(v11, v70);
  }
  else
  {

    unint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v11, v4);
  }
  id v33 = [self sharedInstance];
  sub_551C(&qword_127FF0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_F8F10;
  *(void *)(v34 + 32) = 5456722;
  *(void *)(v34 + 40) = 0xE300000000000000;
  *(void *)(v34 + 88) = &type metadata for String;
  *(void *)(v34 + 56) = &type metadata for String;
  *(void *)(v34 + 64) = 0xD000000000000019;
  *(void *)(v34 + 72) = 0x80000000001023B0;
  unint64_t v35 = (void *)sub_F7400();
  swift_bridgeObjectRelease();
  unint64_t v36 = (void *)sub_F7460();
  uint64_t v37 = (void *)sub_F7460();
  id v38 = [v33 copyCarrierBundleValueForSubscriptionContext:v16 keyHierarchy:v35 defaultValue:v36 valueIfError:v37];

  if (v38)
  {
    sub_F77F0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v81, 0, sizeof(v81));
  }
  sub_1E74C((uint64_t)v81, (uint64_t)&v79, &qword_127FF8);
  uint64_t v72 = (uint64_t (*)(char *, uint64_t))v27;
  if (v80)
  {
    if (swift_dynamicCast())
    {
      char v39 = v78;
      goto LABEL_15;
    }
  }
  else
  {
    sub_1E944((uint64_t)&v79, &qword_127FF8);
  }
  char v39 = 0;
LABEL_15:
  id v40 = v77;
  id v41 = [v77 forMessageID];
  id v42 = [v41 uuid];

  uint64_t v43 = sub_F7220();
  uint64_t v45 = v44;

  id v46 = sub_725C0(v43, v45, v39);
  swift_bridgeObjectRelease();
  if (v46)
  {
    id v47 = [self sharedInstance];
    id v48 = [v47 chatForMessage:v46];

    if (v48)
    {
      id v49 = v77;
      RCSHandle.init(destination:)([v77 from], &v79);
      sub_7858((int *)[v49 deliveryType], v46, v48, &v79);

      return sub_6D20((uint64_t)&v79);
    }
    id v62 = v69;
    v74(v69, v73, v4);
    Swift::String v63 = sub_F70D0();
    os_log_type_t v64 = sub_F7690();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl(&dword_0, v63, v64, "Dropping disposition notification due to missing chat", v65, 2u);
      swift_slowDealloc();
    }

    char v60 = v62;
    goto LABEL_24;
  }
  uint64_t v50 = v71;
  v74(v71, v73, v4);
  id v51 = v40;
  uint64_t v52 = sub_F70D0();
  os_log_type_t v53 = sub_F7690();
  if (!os_log_type_enabled(v52, v53))
  {

    char v60 = v50;
LABEL_24:
    uint64_t v61 = v4;
    return v72(v60, v61);
  }
  uint64_t v70 = v4;
  os_log_type_t v54 = (uint8_t *)swift_slowAlloc();
  *(void *)&long long v79 = swift_slowAlloc();
  *(_DWORD *)os_log_type_t v54 = 136315138;
  id v55 = [v51 forMessageID];
  id v56 = [v55 uuid];

  uint64_t v57 = sub_F7220();
  unint64_t v59 = v58;

  *(void *)&v81[0] = sub_A3FC(v57, v59, (uint64_t *)&v79);
  sub_F77B0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_0, v52, v53, "Dropping disposition notification due to unrecognized message ID %s", v54, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  char v60 = v71;
  uint64_t v61 = v70;
  return v72(v60, v61);
}

void RCSServiceSession.composingIndicator(_:from:with:withIndication:)(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v8 - 8);
  unint64_t v94 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_F70F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  int v102 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v93 = (char *)&v88 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v96 = (char *)&v88 - v17;
  __chkstk_darwin(v16);
  int v19 = (char *)&v88 - v18;
  uint64_t v20 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v98 = v20;
  uint64_t v100 = (void (*)(char *, uint64_t))(v11 + 16);
  uint64_t v99 = v21;
  ((void (*)(char *))v21)(v19);
  id v22 = a1;
  id v23 = a2;
  id v24 = a3;
  id v25 = a4;
  id v26 = v22;
  id v27 = v23;
  id v28 = v24;
  id v29 = v25;
  uint64_t v30 = sub_F70D0();
  int v31 = sub_F7670();
  BOOL v32 = os_log_type_enabled(v30, (os_log_type_t)v31);
  uint64_t v101 = v11;
  if (v32)
  {
    int v89 = v31;
    os_log_t v90 = v30;
    id v91 = v19;
    id v92 = v29;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(void *)&long long v106 = v34;
    *(_DWORD *)uint64_t v33 = 136447234;
    *(void *)&v104[0] = sub_A3FC(0xD00000000000002FLL, 0x8000000000102430, (uint64_t *)&v106);
    sub_F77B0();
    *(_WORD *)(v33 + 12) = 2080;
    id v35 = [v26 labelID];
    uint64_t v97 = v10;
    uint64_t v88 = v34;
    if (v35)
    {
      unint64_t v36 = v35;
      uint64_t v37 = sub_F7220();
      unint64_t v39 = v38;
    }
    else
    {
      uint64_t v37 = 0;
      unint64_t v39 = 0xE000000000000000;
    }
    *(void *)&v104[0] = sub_A3FC(v37, v39, (uint64_t *)&v106);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 22) = 2080;
    id v41 = objc_msgSend(v27, "uri", v88);
    uint64_t v42 = sub_F7220();
    unint64_t v44 = v43;

    *(void *)&v104[0] = sub_A3FC(v42, v44, (uint64_t *)&v106);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 32) = 2080;
    id v45 = [v28 uuid];
    uint64_t v46 = sub_F7220();
    unint64_t v48 = v47;

    *(void *)&v104[0] = sub_A3FC(v46, v48, (uint64_t *)&v106);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 42) = 2080;
    id v29 = v92;
    id v49 = [v92 description];
    uint64_t v50 = sub_F7220();
    unint64_t v52 = v51;

    *(void *)&v104[0] = sub_A3FC(v50, v52, (uint64_t *)&v106);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v53 = v90;
    _os_log_impl(&dword_0, v90, (os_log_type_t)v89, "%{public}s simID: %s from: %s id: %s indication: %s", (uint8_t *)v33, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v40 = *(void (**)(char *, uint64_t))(v101 + 8);
    uint64_t v10 = v97;
    v40(v91, v97);
  }
  else
  {

    id v40 = *(void (**)(char *, uint64_t))(v11 + 8);
    v40(v19, v10);
  }
  RCSHandle.init(destination:)(v27, v104);
  id v55 = v96;
  if (!v105[24]) {
    goto LABEL_10;
  }
  id v56 = [self sharedInstance];
  if (!v56)
  {
    __break(1u);
    return;
  }
  uint64_t v57 = v56;
  unsigned __int8 v58 = [v56 isRBMEnabled];

  if ((v58 & 1) == 0)
  {
    sub_6D20((uint64_t)v104);
    v99(v55, v98, v10);
    id v73 = v28;
    char v74 = v55;
    uint64_t v75 = sub_F70D0();
    os_log_type_t v76 = sub_F76A0();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      *(void *)&long long v106 = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 136446466;
      uint64_t v100 = v40;
      uint64_t v103 = sub_A3FC(0xD00000000000002FLL, 0x8000000000102430, (uint64_t *)&v106);
      sub_F77B0();
      *(_WORD *)(v77 + 12) = 2080;
      id v78 = [v73 uuid];
      uint64_t v97 = v10;
      id v79 = v78;
      uint64_t v80 = sub_F7220();
      unint64_t v82 = v81;

      uint64_t v103 = sub_A3FC(v80, v82, (uint64_t *)&v106);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v75, v76, "%{public}s dropping message %s because RBM is disabled in Settings", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v100(v96, v97);
      return;
    }

    v87 = v74;
  }
  else
  {
LABEL_10:
    __chkstk_darwin(v54);
    *(&v88 - 2) = (uint64_t)v26;
    RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))RCSPersistentMenu.menu.getter, &v106);
    uint64_t v59 = v107;
    uint64_t v60 = v108;
    swift_bridgeObjectRetain();
    sub_6D20((uint64_t)&v106);
    uint64_t v61 = v95;
    id v62 = sub_72318(v59, v60, 0, 0, 0);
    swift_bridgeObjectRelease();
    if (v62)
    {
      uint64_t v63 = (uint64_t)v94;
      sub_F74F0();
      uint64_t v64 = sub_F7520();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
      sub_F74E0();
      id v65 = v26;
      id v66 = v28;
      id v67 = v29;
      id v68 = v61;
      id v69 = v62;
      uint64_t v70 = sub_F74D0();
      uint64_t v71 = swift_allocObject();
      long long v72 = v104[1];
      *(_OWORD *)(v71 + 56) = v104[0];
      *(void *)(v71 + 16) = v70;
      *(void *)(v71 + 24) = &protocol witness table for MainActor;
      *(void *)(v71 + 32) = v65;
      *(void *)(v71 + 40) = v67;
      *(void *)(v71 + 48) = v68;
      *(_OWORD *)(v71 + 72) = v72;
      *(_OWORD *)(v71 + 88) = *(_OWORD *)v105;
      *(_OWORD *)(v71 + 97) = *(_OWORD *)&v105[9];
      *(void *)(v71 + 120) = v69;
      *(void *)(v71 + 128) = v66;
      sub_9EAC(v63, (uint64_t)&unk_128018, v71);
      swift_release();

      return;
    }
    sub_6D20((uint64_t)v104);
    uint64_t v83 = v93;
    v99(v93, v98, v10);
    id v84 = sub_F70D0();
    os_log_type_t v85 = sub_F76A0();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v86 = 0;
      _os_log_impl(&dword_0, v84, v85, "Failed to find an instant message chat to process typing indicator in", v86, 2u);
      swift_slowDealloc();
    }

    v87 = v83;
  }
  v40(v87, v10);
}

uint64_t sub_10990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[49] = a8;
  v8[50] = v14;
  v8[47] = a6;
  v8[48] = a7;
  v8[45] = a4;
  v8[46] = a5;
  uint64_t v9 = sub_F70F0();
  v8[51] = v9;
  v8[52] = *(void *)(v9 - 8);
  v8[53] = swift_task_alloc();
  v8[54] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v8[55] = swift_task_alloc();
  v8[56] = type metadata accessor for RCSMessage(0);
  v8[57] = swift_task_alloc();
  v8[58] = swift_task_alloc();
  sub_F74E0();
  v8[59] = sub_F74D0();
  uint64_t v11 = sub_F7470();
  v8[60] = v11;
  v8[61] = v10;
  return _swift_task_switch(sub_10B14, v11, v10);
}

id sub_10B14()
{
  id v1 = [*(id *)(v0 + 360) phoneNumber];
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 360);
    uint64_t v3 = sub_F7220();
    uint64_t v5 = v4;

    unint64_t v6 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
    v7._uint64_t countAndFlagsBits = 7103860;
    v7._object = (void *)0xE300000000000000;
    v8._uint64_t countAndFlagsBits = v3;
    v8._object = v5;
    RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)((CoreRCS::RCSHandle *)(v0 + 208), v7, v8, (Swift::OpaquePointer)v6, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    *(void *)(swift_task_alloc() + 16) = v2;
    RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1EE00, (_OWORD *)(v0 + 144));
    sub_6D20(v0 + 208);
    swift_task_dealloc();
    id v1 = *(id *)(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 168);
    swift_bridgeObjectRetain();
    sub_6D20(v0 + 144);
  }
  else
  {
    uint64_t v9 = 0;
  }
  *(void *)(v0 + 496) = v1;
  *(void *)(v0 + 504) = v9;
  id v10 = [*(id *)(v0 + 360) labelID];
  uint64_t v11 = *(void **)(v0 + 360);
  if (v10)
  {
    uint64_t v12 = v10;
    uint64_t v13 = sub_F7220();
    uint64_t v15 = v14;
  }
  else
  {

    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  *(void *)(v0 + 520) = v15;
  *(void *)(v0 + 512) = v13;
  uint64_t v16 = *(void *)(v0 + 376);
  id result = [*(id *)(v0 + 368) active];
  uint64_t v18 = *(void *)(v16 + OBJC_IVAR___RCSServiceSession_state);
  *(void *)(v0 + 528) = v18;
  uint64_t v19 = *(void *)(v18 + 88);
  *(void *)(v0 + 536) = v19;
  if (result)
  {
    if (v19)
    {
      uint64_t v20 = *(void **)(v0 + 392);
      swift_retain();
      id result = [v20 guid];
      if (result)
      {
        uint64_t v21 = result;
        uint64_t v22 = sub_F7220();
        uint64_t v24 = v23;

        *(void *)(v0 + 544) = v24;
        uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, id, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v19 + 160)
                                                                                               + **(int **)(*(void *)v19 + 160));
        id v25 = (void *)swift_task_alloc();
        *(void *)(v0 + 552) = v25;
        *id v25 = v0;
        v25[1] = sub_10F30;
        uint64_t v26 = *(void *)(v0 + 384);
        return (id)v34(v26, v22, v24, v1, v9, v13, v15);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  if (!v19)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v27 = *(void **)(v0 + 392);
  swift_retain();
  id result = [v27 guid];
  if (!result)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  id v28 = result;
  uint64_t v29 = sub_F7220();
  uint64_t v31 = v30;

  *(void *)(v0 + 576) = v31;
  id v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v19 + 144)
                                                          + **(int **)(*(void *)v19 + 144));
  BOOL v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v32;
  *BOOL v32 = v0;
  v32[1] = sub_113D4;
  uint64_t v33 = *(void *)(v0 + 384);
  return (id)v35(v33, v29, v31);
}

uint64_t sub_10F30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 560) = a1;
  *(void *)(v4 + 568) = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = *(void *)(v3 + 488);
  uint64_t v6 = *(void *)(v3 + 480);
  return _swift_task_switch(sub_1109C, v6, v5);
}

uint64_t sub_1109C()
{
  uint64_t v34 = *(void *)(v0 + 528);
  uint64_t v30 = *(void *)(v0 + 568);
  uint64_t v31 = *(void *)(v0 + 520);
  uint64_t v28 = *(void *)(v0 + 560);
  uint64_t v29 = *(void *)(v0 + 512);
  long long v27 = *(_OWORD *)(v0 + 496);
  id v1 = *(void **)(v0 + 456);
  uint64_t v32 = *(void *)(v0 + 464);
  uint64_t v3 = *(unsigned char **)(v0 + 440);
  uint64_t v2 = *(int **)(v0 + 448);
  uint64_t v4 = *(void **)(v0 + 400);
  uint64_t v5 = *(long long **)(v0 + 384);
  uint64_t v6 = *(void **)(v0 + 368);
  long long v7 = *v5;
  long long v8 = v5[1];
  long long v9 = v5[2];
  *(_OWORD *)(v0 + 57) = *(long long *)((char *)v5 + 41);
  *(_OWORD *)(v0 + 32) = v8;
  *(_OWORD *)(v0 + 48) = v9;
  *(_OWORD *)(v0 + 16) = v7;
  long long v10 = *v5;
  long long v11 = v5[1];
  long long v12 = v5[2];
  *(_OWORD *)(v0 + 121) = *(long long *)((char *)v5 + 41);
  *(_OWORD *)(v0 + 96) = v11;
  *(_OWORD *)(v0 + 112) = v12;
  *(_OWORD *)(v0 + 80) = v10;
  *(_WORD *)(v0 + 137) = 256;
  sub_5560((uint64_t)v5);
  sub_5560((uint64_t)v5);
  id v13 = [v4 uuid];
  uint64_t v26 = sub_F7220();
  uint64_t v15 = v14;

  *uint64_t v3 = RCSMessage.Typing.init(indication:)(v6) & 1;
  uint64_t v16 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v3, 0, 1, v16);
  *(void *)(v0 + 304) = 0;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  rawValue = RCSMessageMetadata.init()().entries._rawValue;
  uint64_t v19 = (uint64_t)v1 + v2[7];
  v17((unsigned char *)v19, 1, 1, v16);
  uint64_t v20 = (uint64_t)v1 + v2[8];
  *(void *)(v20 + 32) = 0;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *((unsigned char *)v1 + v2[11]) = 0;
  *(void *)((char *)v1 + v2[12]) = 0;
  sub_55B4(v0 + 16, (uint64_t)v1);
  v1[16] = v26;
  v1[17] = v15;
  v1[18] = v28;
  v1[19] = v30;
  uint64_t v21 = (char *)v1 + v2[13];
  *(_OWORD *)uint64_t v21 = v27;
  *((void *)v21 + 2) = v29;
  *((void *)v21 + 3) = v31;
  sub_5610((uint64_t)v3, v19, (uint64_t *)&unk_128170);
  sub_5610(v0 + 272, v20, &qword_127C38);
  *(void *)((char *)v1 + v2[9]) = rawValue;
  *((unsigned char *)v1 + v2[10]) = 0;
  uint64_t result = sub_5674((uint64_t)v1, v32);
  uint64_t v23 = *(void *)(v34 + 80);
  *(void *)(v0 + 600) = v23;
  if (v23)
  {
    uint64_t v33 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v23 + 144) + **(int **)(*(void *)v23 + 144));
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1190C;
    uint64_t v25 = *(void *)(v0 + 464);
    return v33(v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_113D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[39] = v2;
  v4[40] = a1;
  v4[41] = a2;
  v4[74] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v3[61];
  uint64_t v6 = v3[60];
  return _swift_task_switch(sub_1153C, v6, v5);
}

uint64_t sub_1153C()
{
  uint64_t v1 = *(void *)(v0 + 592);
  if (v1)
  {
    uint64_t v31 = *(void *)(v0 + 320);
    uint64_t v36 = *(void *)(v0 + 528);
    uint64_t v32 = *(void *)(v0 + 512);
    uint64_t v33 = *(void *)(v0 + 520);
    long long v30 = *(_OWORD *)(v0 + 496);
    uint64_t v2 = *(void **)(v0 + 456);
    uint64_t v34 = *(void *)(v0 + 464);
    uint64_t v4 = *(unsigned char **)(v0 + 440);
    uint64_t v3 = *(int **)(v0 + 448);
    uint64_t v5 = *(void **)(v0 + 400);
    uint64_t v6 = *(long long **)(v0 + 384);
    long long v7 = *(void **)(v0 + 368);
    long long v9 = v6[1];
    long long v8 = v6[2];
    long long v10 = *v6;
    *(_OWORD *)(v0 + 57) = *(long long *)((char *)v6 + 41);
    *(_OWORD *)(v0 + 32) = v9;
    *(_OWORD *)(v0 + 48) = v8;
    *(_OWORD *)(v0 + 16) = v10;
    long long v12 = v6[1];
    long long v11 = v6[2];
    long long v13 = *v6;
    *(_OWORD *)(v0 + 121) = *(long long *)((char *)v6 + 41);
    *(_OWORD *)(v0 + 96) = v12;
    *(_OWORD *)(v0 + 112) = v11;
    *(_OWORD *)(v0 + 80) = v13;
    *(_WORD *)(v0 + 137) = 256;
    sub_5560((uint64_t)v6);
    sub_5560((uint64_t)v6);
    id v14 = [v5 uuid];
    uint64_t v15 = sub_F7220();
    uint64_t v28 = v16;
    uint64_t v29 = v15;

    *uint64_t v4 = RCSMessage.Typing.init(indication:)(v7) & 1;
    uint64_t v17 = type metadata accessor for RCSMessage.Content(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    v18(v4, 0, 1, v17);
    *(void *)(v0 + 304) = 0;
    *(_OWORD *)(v0 + 272) = 0u;
    *(_OWORD *)(v0 + 288) = 0u;
    rawValue = RCSMessageMetadata.init()().entries._rawValue;
    uint64_t v20 = (uint64_t)v2 + v3[7];
    v18((unsigned char *)v20, 1, 1, v17);
    uint64_t v21 = (uint64_t)v2 + v3[8];
    *(void *)(v21 + 32) = 0;
    *(_OWORD *)uint64_t v21 = 0u;
    *(_OWORD *)(v21 + 16) = 0u;
    *((unsigned char *)v2 + v3[11]) = 0;
    *(void *)((char *)v2 + v3[12]) = 0;
    sub_55B4(v0 + 16, (uint64_t)v2);
    v2[16] = v29;
    v2[17] = v28;
    v2[18] = v31;
    v2[19] = v1;
    uint64_t v22 = (char *)v2 + v3[13];
    *(_OWORD *)uint64_t v22 = v30;
    *((void *)v22 + 2) = v32;
    *((void *)v22 + 3) = v33;
    sub_5610((uint64_t)v4, v20, (uint64_t *)&unk_128170);
    sub_5610(v0 + 272, v21, &qword_127C38);
    *(void *)((char *)v2 + v3[9]) = rawValue;
    *((unsigned char *)v2 + v3[10]) = 0;
    uint64_t result = sub_5674((uint64_t)v2, v34);
    uint64_t v24 = *(void *)(v36 + 80);
    *(void *)(v0 + 600) = v24;
    if (v24)
    {
      uint64_t v35 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v24 + 144) + **(int **)(*(void *)v24 + 144));
      swift_retain();
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 608) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_1190C;
      uint64_t v26 = *(void *)(v0 + 464);
      return v35(v26);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  return result;
}

uint64_t sub_1190C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 616) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 480);
    uint64_t v4 = *(void *)(v2 + 488);
    uint64_t v5 = sub_11CD0;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 480);
    uint64_t v4 = *(void *)(v2 + 488);
    uint64_t v5 = sub_11A28;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_11A28()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  uint64_t v4 = (void *)v0[50];
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  id v6 = v4;
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F7670();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = v0[54];
    uint64_t v26 = v0[58];
    uint64_t v23 = v0[52];
    long long v9 = (void *)v0[50];
    uint64_t v24 = v0[51];
    long long v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)long long v10 = 136315138;
    id v11 = [v9 uuid];
    uint64_t v12 = sub_F7220();
    unint64_t v14 = v13;

    v0[44] = sub_A3FC(v12, v14, &v27);
    sub_F77B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v7, v8, "Processed typing indicator for %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
    uint64_t v15 = v26;
  }
  else
  {
    uint64_t v16 = v0[58];
    uint64_t v17 = v0[54];
    uint64_t v18 = v0[51];
    uint64_t v19 = v0[52];
    uint64_t v20 = (void *)v0[50];

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    uint64_t v15 = v16;
  }
  sub_1EDA0(v15, type metadata accessor for RCSMessage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_11CD0()
{
  uint64_t v31 = v0;
  uint64_t v2 = v0[52];
  uint64_t v1 = v0[53];
  uint64_t v4 = (void *)v0[50];
  uint64_t v3 = v0[51];
  swift_release();
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  id v6 = v4;
  swift_errorRetain();
  id v7 = v6;
  swift_errorRetain();
  os_log_type_t v8 = sub_F70D0();
  os_log_type_t v9 = sub_F7690();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v28 = v0[53];
    uint64_t v29 = v0[58];
    long long v10 = (void *)v0[50];
    uint64_t v26 = v0[52];
    uint64_t v27 = v0[51];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    id v12 = [v10 uuid];
    uint64_t v13 = sub_F7220();
    unint64_t v15 = v14;

    v0[42] = sub_A3FC(v13, v15, &v30);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[43] = v16;
    sub_F77B0();
    *uint64_t v25 = v16;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v8, v9, "Failed to process typing indicator for %s: %@", (uint8_t *)v11, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
    uint64_t v17 = v29;
  }
  else
  {
    uint64_t v18 = v0[58];
    uint64_t v20 = v0[52];
    uint64_t v19 = v0[53];
    uint64_t v22 = (void *)v0[50];
    uint64_t v21 = v0[51];

    swift_errorRelease();
    swift_errorRelease();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t v17 = v18;
  }
  sub_1EDA0(v17, type metadata accessor for RCSMessage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t RCSServiceSession.request(toDisableAnonymization:from:with:)(void *a1, void *a2, void *a3)
{
  return sub_1DE64(a1, a2, a3, 0xD00000000000002ALL, 0x8000000000102AC0);
}

uint64_t RCSServiceSession.request(toEnableDisplayedNotifications:from:with:)(void *a1, void *a2, void *a3)
{
  return sub_1DE64(a1, a2, a3, 0xD000000000000032, 0x8000000000102A80);
}

void RCSServiceSession.didFinishFetchChatBotRenderInformation(_:forChatBot:withRenderData:with:)(uint64_t a1, void *a2, void *a3)
{
}

void sub_122A4(uint64_t a1, void *a2, uint64_t a3, void *a4, int a5)
{
  LODWORD(v150) = a5;
  os_log_type_t v9 = (void *)sub_F70F0();
  uint64_t v10 = *(v9 - 1);
  uint64_t v11 = __chkstk_darwin(v9);
  v153 = (id *)((char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (id *)((char *)&v143 - v14);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (id *)((char *)&v143 - v17);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v143 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (id *)((char *)&v143 - v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v152 = (void *)a3;
  v24._uint64_t countAndFlagsBits = a3;
  v24._object = a4;
  v25.value._uint64_t countAndFlagsBits = a1;
  v25.value._object = a2;
  RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v156, v24, CoreRCS_RCSHandle_BotStatus_isChatBot, v25);
  if (v26)
  {
    swift_errorRelease();
    uint64_t v27 = Logger.chatbot.unsafeMutableAddressor();
    uint64_t v28 = v10;
    uint64_t v29 = *(void (**)(id *, uint64_t, void *))(v10 + 16);
    uint64_t v30 = v153;
    v29(v153, v27, v9);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_F70D0();
    os_log_type_t v32 = sub_F7690();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v150 = swift_slowAlloc();
      aBlock[0] = v150;
      *(_DWORD *)uint64_t v33 = 136315394;
      id v151 = v9;
      swift_bridgeObjectRetain();
      uint64_t v155 = sub_A3FC((uint64_t)v152, (unint64_t)a4, aBlock);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v155 = sub_A3FC(a1, (unint64_t)a2, aBlock);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v31, v32, "Discover a chat bot, but cannot create RCSHandle for %s, using sip handle: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_4:
      swift_slowDealloc();

      (*(void (**)(id *, id))(v28 + 8))(v30, v151);
      return;
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    id v66 = *(void (**)(id *, void *))(v28 + 8);
    id v67 = v30;
    goto LABEL_21;
  }
  v145 = v15;
  v148 = v18;
  v144 = v23;
  uint64_t v147 = (uint64_t)v21;
  uint64_t v149 = a1;
  v153 = (id *)a2;
  uint64_t v34 = v9;
  uint64_t countAndFlagsBits = v156.id._countAndFlagsBits;
  object = v156.id._object;
  id v37 = objc_allocWithZone((Class)IMDHandle);
  swift_bridgeObjectRetain();
  v146 = (id *)countAndFlagsBits;
  unint64_t v38 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  unint64_t v39 = (void *)sub_F71F0();
  id v40 = (void *)sub_F71F0();
  id v41 = (char *)[v37 initWithID:v38 unformattedID:v39 countryCode:v40];

  if (!v41)
  {
    unint64_t v68 = (unint64_t)object;
    uint64_t v69 = Logger.chatbot.unsafeMutableAddressor();
    uint64_t v28 = v10;
    uint64_t v70 = *(void (**)(id *, uint64_t, void *))(v10 + 16);
    uint64_t v71 = v145;
    long long v72 = v34;
    v70(v145, v69, v34);
    unint64_t v73 = (unint64_t)v153;
    swift_bridgeObjectRetain_n();
    sub_5560((uint64_t)&v156);
    uint64_t v31 = sub_F70D0();
    os_log_type_t v74 = sub_F7690();
    if (os_log_type_enabled(v31, v74))
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      id v151 = v72;
      aBlock[0] = v76;
      *(_DWORD *)uint64_t v75 = 136315394;
      uint64_t v30 = v71;
      swift_bridgeObjectRetain();
      uint64_t v155 = sub_A3FC((uint64_t)v146, v68, aBlock);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6D20((uint64_t)&v156);
      sub_6D20((uint64_t)&v156);
      *(_WORD *)(v75 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v155 = sub_A3FC(v149, v73, aBlock);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v31, v74, "Discover a chat bot, but cannot create imdHandle for %s, using sip handle: %s", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_4;
    }
    sub_6D20((uint64_t)&v156);
    sub_6D20((uint64_t)&v156);

    swift_bridgeObjectRelease_n();
    (*(void (**)(id *, void *))(v28 + 8))(v71, v72);
    return;
  }
  uint64_t v42 = v41;
  unint64_t v43 = (void *)sub_F71F0();
  [v41 setPersonCentricID:v43];

  id v44 = [v41 ID];
  if (!v44)
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  id v45 = v44;
  uint64_t v46 = v10;
  id v47 = [v151 chatForChatIdentifier:v44 style:45];

  unint64_t v48 = &off_126000;
  id v49 = v148;
  if (!v47)
  {
    v145 = (id *)v42;
    uint64_t v77 = Logger.chatbot.unsafeMutableAddressor();
    (*(void (**)(id *, uint64_t, void *))(v46 + 16))(v49, v77, v34);
    swift_bridgeObjectRetain_n();
    unint64_t v78 = (unint64_t)v153;
    swift_bridgeObjectRetain_n();
    id v79 = sub_F70D0();
    os_log_type_t v80 = sub_F7670();
    int v81 = v80;
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v82 = swift_slowAlloc();
      LODWORD(v147) = v81;
      uint64_t v83 = v82;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v155 = sub_A3FC((uint64_t)v152, (unint64_t)a4, aBlock);
      id v151 = v34;
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v83 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v155 = sub_A3FC(v149, v78, aBlock);
      unint64_t v48 = &off_126000;
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v79, (os_log_type_t)v147, "Discover a chat bot for %s, using sip handle in a pending chat: %s", (uint8_t *)v83, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(id *, id))(v46 + 8))(v49, v151);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(id *, void *))(v46 + 8))(v49, v34);
    }
    uint64_t v42 = (char *)v145;
    char v84 = v150;
    id v85 = [self v48[286]];
    id v86 = (id)sub_F71F0();
    v87 = (void *)sub_F71F0();
    [v85 pendingAlternateID:v86 forHandle:v87];

    goto LABEL_57;
  }
  id v50 = [v47 participants];
  if (!v50) {
    goto LABEL_67;
  }
  unint64_t v51 = v50;
  v148 = (id *)sub_6CA4(0, (unint64_t *)&qword_127C80);
  unint64_t v52 = sub_F7410();

  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_F79B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = *(void *)((char *)&dword_10 + (v52 & 0xFFFFFFFFFFFFFF8));
  }
  unint64_t v54 = (unint64_t)a4;
  swift_bridgeObjectRelease();
  id v143 = v47;
  if (!v53) {
    goto LABEL_53;
  }
  id v55 = [v47 participants];
  if (!v55)
  {
LABEL_68:
    __break(1u);
    return;
  }
  id v56 = v55;
  unint64_t v57 = sub_F7410();

  if (!(v57 >> 62))
  {
    uint64_t v58 = *(void *)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFFF8));
    if (v58) {
      goto LABEL_15;
    }
LABEL_32:
    uint64_t v61 = v46;
    id v63 = v47;
    swift_bridgeObjectRelease();
    uint64_t v64 = 0;
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  uint64_t v58 = sub_F79B0();
  swift_bridgeObjectRelease();
  if (!v58) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v57 & 0xC000000000000001) == 0)
  {
    if (*(void *)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFFF8)))
    {
      id v59 = *(id *)(v57 + 32);
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_66;
  }
  id v59 = (id)sub_F78D0();
LABEL_18:
  uint64_t v60 = v59;
  uint64_t v61 = v46;
  swift_bridgeObjectRelease();
  id v62 = [v60 ID];

  id v63 = v47;
  if (v62)
  {
    uint64_t v64 = sub_F7220();
    uint64_t v58 = v65;
  }
  else
  {
    uint64_t v64 = 0;
    uint64_t v58 = 0;
  }
LABEL_33:
  id v88 = objc_msgSend(v42, "ID", v143);
  if (!v88)
  {
    id v47 = v63;
    uint64_t v46 = v61;
    if (!v58) {
      goto LABEL_44;
    }
    goto LABEL_52;
  }
  int v89 = v88;
  uint64_t v90 = sub_F7220();
  uint64_t v92 = v91;

  id v47 = v63;
  uint64_t v46 = v61;
  if (!v58)
  {
    if (!v92) {
      goto LABEL_44;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  if (!v92) {
    goto LABEL_52;
  }
  if (v64 == v90 && v58 == v92)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v93 = sub_F7B60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v93 & 1) == 0)
    {
LABEL_53:
      uint64_t v103 = Logger.chatbot.unsafeMutableAddressor();
      uint64_t v104 = v147;
      v105 = v34;
      (*(void (**)(uint64_t, uint64_t, void *))(v46 + 16))(v147, v103, v34);
      swift_bridgeObjectRetain_n();
      unint64_t v106 = (unint64_t)v153;
      swift_bridgeObjectRetain_n();
      id v107 = v47;
      uint64_t v108 = v46;
      id v86 = v107;
      uint64_t v109 = sub_F70D0();
      os_log_type_t v110 = sub_F7670();
      if (os_log_type_enabled(v109, v110))
      {
        uint64_t v111 = swift_slowAlloc();
        v144 = (id *)swift_slowAlloc();
        v146 = (id *)swift_slowAlloc();
        aBlock[0] = (uint64_t)v146;
        *(_DWORD *)uint64_t v111 = 136315650;
        id v151 = v105;
        swift_bridgeObjectRetain();
        uint64_t v155 = sub_A3FC((uint64_t)v152, v54, aBlock);
        v145 = (id *)v42;
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v111 + 12) = 2112;
        uint64_t v155 = (uint64_t)v86;
        id v112 = v86;
        sub_F77B0();
        id *v144 = v143;

        *(_WORD *)(v111 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v155 = sub_A3FC(v149, v106, aBlock);
        uint64_t v42 = (char *)v145;
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v109, v110, "Discover a chat bot for %s, replacing handle in chat: %@ with sip handle: %s", (uint8_t *)v111, 0x20u);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, id))(v108 + 8))(v147, v151);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, void *))(v108 + 8))(v104, v105);
      }
      char v84 = v150;
      sub_551C(&qword_127FF0);
      uint64_t v113 = swift_allocObject();
      *(_OWORD *)(v113 + 16) = xmmword_F8F20;
      *(void *)(v113 + 56) = v148;
      *(void *)(v113 + 32) = v42;
      uint64_t v114 = v42;
      v87 = (void *)sub_F7400();
      swift_bridgeObjectRelease();
      [v86 resetParticipants:v87];
      unint64_t v48 = &off_126000;
LABEL_57:

      id v115 = [self v48[286]];
      RCSHandle.chatBotId.getter();
      sub_6D20((uint64_t)&v156);
      v116 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      uint64_t v117 = (void *)sub_F71F0();
      [v115 updateHandle:v42 sourceMessage:0 personCentricID:v116 onService:v117];

      if (v84)
      {
        sub_6CA4(0, (unint64_t *)&qword_128148);
        v152 = (void *)sub_F7700();
        uint64_t v118 = sub_F7180();
        v153 = &v143;
        uint64_t v150 = v118;
        uint64_t v119 = *(void *)(v118 - 8);
        uint64_t v120 = __chkstk_darwin(v118);
        v122 = (char *)&v143 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
        __chkstk_darwin(v120);
        v124 = (char *)&v143 - v123;
        sub_F7160();
        sub_F7190();
        v125 = *(void **)(v119 + 8);
        uint64_t v149 = v119 + 8;
        id v151 = v125;
        ((void (*)(char *, uint64_t))v125)(v124, v118);
        aBlock[4] = (uint64_t)sub_14A08;
        aBlock[5] = 0;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_552C4;
        aBlock[3] = (uint64_t)&unk_11DF60;
        v126 = _Block_copy(aBlock);
        uint64_t v147 = sub_F7150();
        v148 = &v143;
        uint64_t v127 = *(void *)(v147 - 8);
        __chkstk_darwin(v147);
        v129 = (char *)&v143 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_F7130();
        uint64_t v130 = sub_F7110();
        v146 = &v143;
        uint64_t v131 = *(void *)(v130 - 8);
        __chkstk_darwin(v130);
        v133 = v42;
        v134 = (char *)&v143 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        sub_1ECF8();
        sub_551C(&qword_128158);
        sub_1ED44();
        sub_F7810();
        v135 = v152;
        sub_F76E0();
        _Block_release(v126);

        (*(void (**)(char *, uint64_t))(v131 + 8))(v134, v130);
        (*(void (**)(char *, uint64_t))(v127 + 8))(v129, v147);
        ((void (*)(char *, uint64_t))v151)(v122, v150);
      }
      else
      {
      }
      return;
    }
  }
LABEL_44:
  id v94 = [v47 personCentricID];
  if (!v94)
  {
    RCSHandle.chatBotId.getter();
    uint64_t v101 = v102;
LABEL_51:
    if (!v101) {
      goto LABEL_61;
    }
    goto LABEL_52;
  }
  uint64_t v95 = v94;
  uint64_t v96 = sub_F7220();
  uint64_t v98 = v97;

  uint64_t v99 = RCSHandle.chatBotId.getter();
  uint64_t v101 = v100;
  if (!v98) {
    goto LABEL_51;
  }
  if (!v100) {
    goto LABEL_52;
  }
  if (v96 != v99 || v100 != v98)
  {
    char v136 = sub_F7B60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v136) {
      goto LABEL_61;
    }
    goto LABEL_53;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_61:
  sub_6D20((uint64_t)&v156);
  uint64_t v137 = Logger.chatbot.unsafeMutableAddressor();
  v138 = v144;
  os_log_type_t v9 = v34;
  (*(void (**)(id *, uint64_t, void *))(v46 + 16))(v144, v137, v34);
  swift_bridgeObjectRetain_n();
  unint64_t v139 = (unint64_t)v153;
  swift_bridgeObjectRetain_n();
  v140 = sub_F70D0();
  os_log_type_t v141 = sub_F7670();
  if (!os_log_type_enabled(v140, v141))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    id v66 = *(void (**)(id *, void *))(v46 + 8);
    id v67 = v138;
LABEL_21:
    v66(v67, v9);
    return;
  }
  uint64_t v142 = swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v142 = 136315394;
  swift_bridgeObjectRetain();
  uint64_t v155 = sub_A3FC((uint64_t)v152, v54, aBlock);
  id v151 = v9;
  sub_F77B0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v142 + 12) = 2080;
  swift_bridgeObjectRetain();
  uint64_t v155 = sub_A3FC(v149, v139, aBlock);
  sub_F77B0();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_0, v140, v141, "Discover a chat bot for %s, chat is already with sip handle: %s", (uint8_t *)v142, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(id *, id))(v46 + 8))(v144, v151);
}

void RCSServiceSession.destinationCapabilitiesUpdated(_:withCapabilities:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Logger.chatbot.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  id v11 = a1;
  id v12 = a2;
  uint64_t v13 = (uint8_t *)v11;
  id v14 = v12;
  unint64_t v15 = sub_F70D0();
  int v16 = sub_F7670();
  BOOL v17 = os_log_type_enabled(v15, (os_log_type_t)v16);
  unint64_t v51 = v13;
  if (v17)
  {
    int v48 = v16;
    uint64_t v49 = v6;
    uint64_t v50 = v3;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v53 = v47;
    *(_DWORD *)uint64_t v18 = 136446722;
    uint64_t v52 = sub_A3FC(0xD000000000000033, 0x8000000000102460, &v53);
    sub_F77B0();
    *(_WORD *)(v18 + 12) = 2080;
    id v19 = [(uint8_t *)v13 labelID];
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_F7220();
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      unint64_t v23 = 0xE000000000000000;
    }
    uint64_t v52 = sub_A3FC(v21, v23, &v53);
    sub_F77B0();
    Swift::String v24 = v51;

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2080;
    id v25 = [v14 description];
    uint64_t v26 = sub_F7220();
    unint64_t v28 = v27;

    uint64_t v52 = sub_A3FC(v26, v28, &v53);
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v15, (os_log_type_t)v48, "%{public}s simID: %s destinationUpdated: %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v49);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if ([v14 isBot])
  {
    id v29 = [v14 discovered];
    id v30 = [v29 uri];

    uint64_t v31 = sub_F7220();
    uint64_t v33 = v32;

    id v34 = [v14 previous];
    id v35 = [v34 uri];

    uint64_t v36 = sub_F7220();
    unint64_t v38 = v37;

    sub_122A4(v31, v33, v36, v38, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v39 = [v14 discovered];
    sub_6CA4(0, &qword_128020);
    id v40 = [v14 previous];
    id v41 = [v40 uri];

    uint64_t v42 = sub_F7220();
    uint64_t v44 = v43;

    id v45 = CTLazuliOperationID.init(id:)(v42, v44);
    sub_2C894(v51, v39, (uint64_t)v45);
  }
}

void RCSServiceSession.didDiscover(_:destination:withCapabilities:with:)(void *a1, void *a2, void *a3, void *a4)
{
  id v75 = a4;
  uint64_t v7 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v9 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_F70F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = Logger.reachability.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  id v15 = a3;
  id v16 = a1;
  id v17 = a2;
  id v18 = v15;
  id v19 = v16;
  id v20 = v17;
  uint64_t v21 = sub_F70D0();
  int v22 = sub_F7670();
  BOOL v23 = os_log_type_enabled(v21, (os_log_type_t)v22);
  id v76 = v20;
  if (v23)
  {
    int v69 = v22;
    os_log_t v70 = v21;
    uint64_t v71 = v10;
    long long v72 = v9;
    unint64_t v73 = a3;
    uint64_t v24 = swift_slowAlloc();
    v81[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136447234;
    *(void *)&long long v77 = sub_A3FC(0xD000000000000031, 0x80000000001024A0, v81);
    sub_F77B0();
    *(_WORD *)(v24 + 12) = 2080;
    id v25 = [v19 labelID];
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_F7220();
      unint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    *(void *)&long long v77 = sub_A3FC(v27, v29, v81);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    id v30 = v73;
    if (v73)
    {
      id v31 = [v18 description];
      uint64_t v32 = sub_F7220();
      unint64_t v34 = v33;
    }
    else
    {
      uint64_t v32 = 0;
      unint64_t v34 = 0xE000000000000000;
    }
    *(void *)&long long v77 = sub_A3FC(v32, v34, v81);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 32) = 1024;
    BOOL v36 = 0;
    if (v30)
    {
      unsigned __int8 v35 = [v18 isBot];

      if (v35) {
        BOOL v36 = 1;
      }
    }
    LODWORD(v77) = v36;
    sub_F77B0();

    *(_WORD *)(v24 + 38) = 2080;
    id v37 = v76;
    id v38 = [v76 identities];
    if (v38)
    {
      id v39 = v38;
      id v40 = [v38 identityList];

      id v41 = (void *)sub_F7410();
      if (!v41[2])
      {
        __break(1u);
LABEL_33:
        __break(1u);
        return;
      }
      uint64_t v43 = v41[4];
      unint64_t v42 = v41[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v37 = v76;
    }
    else
    {
      unint64_t v42 = 0xE400000000000000;
      uint64_t v43 = 1701736270;
    }
    *(void *)&long long v77 = sub_A3FC(v43, v42, v81);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v44 = v70;
    _os_log_impl(&dword_0, v70, (os_log_type_t)v69, "%{public}s simID: %s didDiscover: %s, is chat bot: %{BOOL}d, alternate handle: %s", (uint8_t *)v24, 0x30u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v71);
    os_log_type_t v9 = v72;
    a3 = v73;
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }
  id v45 = v75;
  id v46 = [v75 error];
  if (v46)
  {
    *(void *)&long long v77 = v46;
    char v80 = 1;
    sub_1E74C((uint64_t)&v77, (uint64_t)v81, &qword_128030);
  }
  else
  {
    if (a3)
    {
      uint64_t v78 = sub_6CA4(0, (unint64_t *)&unk_128040);
      id v79 = &protocol witness table for CTLazuliCapabilitiesInformation;
      *(void *)&long long v77 = v18;
      sub_1E87C(&v77, (uint64_t)v81);
    }
    else
    {
      id v47 = v76;
      uint64_t v48 = sub_1DD9C(v47);
      uint64_t v50 = v49;
      char v52 = v51;

      uint64_t v83 = &type metadata for NullCapabilities;
      char v84 = &off_11DF18;
      v81[0] = v48;
      v81[1] = v50;
      char v82 = v52 & 1;
    }
    char v85 = 0;
    id v53 = v18;
  }
  sub_F74F0();
  uint64_t v54 = sub_F7520();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v9, 0, 1, v54);
  sub_1E680((uint64_t)v81, (uint64_t)&v77);
  sub_F74E0();
  id v55 = v74;
  id v56 = v45;
  uint64_t v57 = sub_F74D0();
  uint64_t v58 = (void *)swift_allocObject();
  v58[2] = v57;
  v58[3] = &protocol witness table for MainActor;
  v58[4] = v55;
  sub_1E74C((uint64_t)&v77, (uint64_t)(v58 + 5), &qword_128030);
  v58[11] = v56;
  sub_9EAC((uint64_t)v9, (uint64_t)&unk_128038, (uint64_t)v58);
  swift_release();
  if (!a3) {
    goto LABEL_29;
  }
  id v59 = v18;
  if ([v59 isBot])
  {
    id v60 = [v76 identities];
    if (v60)
    {
      uint64_t v61 = v60;
      id v62 = [v60 identityList];

      id v63 = (void *)sub_F7410();
      if (v63[2])
      {
        uint64_t v64 = v63[4];
        uint64_t v65 = (void *)v63[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v66 = CTLazuliCapabilitiesInformation.recipientUri.getter();
        sub_122A4(v64, v65, v66, v67, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_29:
        sub_1E944((uint64_t)v81, &qword_128030);
        return;
      }
      goto LABEL_33;
    }
  }
  sub_1E944((uint64_t)v81, &qword_128030);
}

uint64_t sub_14570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_F74E0();
  v6[5] = sub_F74D0();
  uint64_t v8 = sub_F7470();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_1460C, v8, v7);
}

void sub_1460C()
{
  uint64_t v1 = *(void *)(*(void *)(v0[2] + OBJC_IVAR___RCSServiceSession_state) + 96);
  v0[8] = v1;
  if (v1)
  {
    uint64_t v2 = (void *)v0[4];
    swift_retain();
    id v3 = [v2 operation];
    id v4 = [v3 uuid];

    uint64_t v5 = sub_F7220();
    uint64_t v7 = v6;

    v0[9] = v7;
    uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 120)
                                                         + **(int **)(*(void *)v1 + 120));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[10] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1479C;
    uint64_t v9 = v0[3];
    v10(v9, v5, v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1479C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_148FC, v3, v2);
}

uint64_t sub_148FC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_14A08()
{
  id v0 = [self sharedInstance];
  [v0 _forceReloadChats:1];
}

void RCSServiceSession.capabilitiesFound(_:destination:withCapabilities:)(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v47 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v13 = *(void (**)(void))(v7 + 16);
  uint64_t v43 = v12;
  uint64_t v44 = v7 + 16;
  unint64_t v42 = v13;
  v13(v11);
  id v14 = a1;
  id v15 = a2;
  id v16 = a3;
  id v17 = v14;
  id v18 = v15;
  id v19 = v16;
  id v20 = sub_F70D0();
  int v21 = sub_F7670();
  if (os_log_type_enabled(v20, (os_log_type_t)v21))
  {
    int v40 = v21;
    uint64_t v45 = v7;
    uint64_t v46 = v6;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(void *)&long long v49 = v39;
    *(_DWORD *)uint64_t v22 = 136446978;
    uint64_t v48 = sub_A3FC(0xD000000000000032, 0x80000000001024E0, (uint64_t *)&v49);
    sub_F77B0();
    *(_WORD *)(v22 + 12) = 2080;
    id v23 = [v17 labelID];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = sub_F7220();
      unint64_t v27 = v26;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    uint64_t v48 = sub_A3FC(v25, v27, (uint64_t *)&v49);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    id v28 = [v18 uri];
    uint64_t v29 = sub_F7220();
    unint64_t v31 = v30;

    uint64_t v48 = sub_A3FC(v29, v31, (uint64_t *)&v49);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2080;
    id v32 = [v19 description];
    uint64_t v33 = sub_F7220();
    unint64_t v35 = v34;

    uint64_t v48 = sub_A3FC(v33, v35, (uint64_t *)&v49);
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v20, (os_log_type_t)v40, "%{public}s simID: %s from: %s cap: %s", (uint8_t *)v22, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v7 = v45;
    uint64_t v6 = v46;
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  RCSHandle.init(destination:)(v18, &v49);
  id v36 = [v41 broadcasterForChatListeners];
  id v37 = (void *)sub_F71F0();
  sub_6D20((uint64_t)&v49);
  [v36 capabilitiesUpdatedForHandle:v37];
  swift_unknownObjectRelease();
}

id RCSServiceSession.subjectUpdated(_:forGroupChat:withNewSubject:updatedBy:)(void *a1, void *a2, void *a3, void *a4)
{
  os_log_t v167 = (os_log_t)sub_551C(&qword_127C70);
  isa = v167[-1].isa;
  __chkstk_darwin(v167);
  uint64_t v168 = (uint64_t)v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_F70F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  v157 = (char *)v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v158 = (char *)v150 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v154 = (char *)v150 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v153 = (char *)v150 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v159 = (char *)v150 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v150 - v21;
  uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v163 = v23;
  v164 = v24;
  uint64_t v165 = v10 + 16;
  ((void (*)(char *))v24)(v22);
  id v171 = a4;
  id v25 = a4;
  id v26 = a1;
  id v27 = a2;
  id v161 = a3;
  id v28 = a3;
  id v29 = v25;
  id v30 = v26;
  id v31 = v27;
  id v32 = v28;
  uint64_t v33 = sub_F70D0();
  int v34 = sub_F7670();
  BOOL v35 = os_log_type_enabled(v33, (os_log_type_t)v34);
  id v162 = v30;
  id v160 = v32;
  id v166 = v29;
  if (v35)
  {
    int v151 = v34;
    id v169 = v31;
    uint64_t v156 = v10;
    uint64_t v152 = v9;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(void *)&long long v178 = v37;
    *(_DWORD *)uint64_t v36 = 136447234;
    *(void *)&long long v172 = sub_A3FC(0xD000000000000038, 0x8000000000102580, (uint64_t *)&v178);
    sub_F77B0();
    *(_WORD *)(v36 + 12) = 2080;
    id v38 = [v30 labelID];
    v150[1] = v37;
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v40 = sub_F7220();
      unint64_t v42 = v41;
    }
    else
    {
      uint64_t v40 = 0;
      unint64_t v42 = 0xE000000000000000;
    }
    os_log_t v47 = v167;
    *(void *)&long long v172 = sub_A3FC(v40, v42, (uint64_t *)&v178);
    sub_F77B0();
    id v48 = v162;

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2080;
    id v49 = [v169 remoteUri];
    if (v49)
    {
      uint64_t v50 = v49;
      id v51 = [v49 destination];

      uint64_t v52 = sub_F7220();
      unint64_t v54 = v53;
    }
    else
    {
      unint64_t v54 = 0xE500000000000000;
      uint64_t v52 = 0x3E6C696E3CLL;
    }
    *(void *)&long long v172 = sub_A3FC(v52, v54, (uint64_t *)&v178);
    sub_F77B0();
    id v55 = v169;

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 32) = 2080;
    if (v161)
    {
      id v56 = v160;
      id v57 = [v160 displayString];
      uint64_t v58 = sub_F7220();
      unint64_t v60 = v59;
    }
    else
    {
      unint64_t v60 = 0xE500000000000000;
      uint64_t v58 = 0x3E6C696E3CLL;
      id v56 = v160;
    }
    os_log_t v167 = v33;
    *(void *)&long long v172 = sub_A3FC(v58, v60, (uint64_t *)&v178);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 42) = 2080;
    if (v171)
    {
      id v61 = v166;
      id v62 = [v166 member];
      uint64_t v63 = sub_F7220();
      unint64_t v65 = v64;

      uint64_t v66 = v152;
      uint64_t v45 = isa;
    }
    else
    {
      unint64_t v65 = 0xE500000000000000;
      uint64_t v66 = v152;
      uint64_t v45 = isa;
      id v61 = v166;
      uint64_t v63 = 0x3E6C696E3CLL;
    }
    *(void *)&long long v172 = sub_A3FC(v63, v65, (uint64_t *)&v178);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v67 = v167;
    _os_log_impl(&dword_0, v167, (os_log_type_t)v151, "%{public}s simID: %s remoteUri: %s newSubject: %s updatedBy: %s", (uint8_t *)v36, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v44 = v156;
    uint64_t v43 = *(void (**)(char *, uint64_t))(v156 + 8);
    v43(v22, v66);
    id v31 = v169;
    uint64_t v46 = v66;
  }
  else
  {

    uint64_t v43 = *(void (**)(char *, uint64_t))(v10 + 8);
    v43(v22, v9);
    uint64_t v44 = v10;
    uint64_t v45 = isa;
    uint64_t v46 = v9;
    os_log_t v47 = v167;
  }
  if (qword_127B70 != -1) {
    swift_once();
  }
  uint64_t v68 = sub_8B44((uint64_t)v47, (uint64_t)qword_127E08);
  uint64_t v69 = v168;
  ((void (*)(uint64_t, uint64_t, os_log_t))v45[2])(v168, v68, v47);
  sub_F6FF0();
  ((void (*)(uint64_t, os_log_t))v45[1])(v69, v47);
  if (v178 == 1)
  {
    os_log_t v70 = v159;
    v164(v159, v163, v46);
    uint64_t v71 = sub_F70D0();
    os_log_type_t v72 = sub_F7670();
    if (os_log_type_enabled(v71, v72))
    {
      unint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v73 = 0;
      id v74 = "Dropping subject change due to override";
LABEL_28:
      _os_log_impl(&dword_0, v71, v72, v74, v73, 2u);
      swift_slowDealloc();
      goto LABEL_29;
    }
    goto LABEL_29;
  }
  if (!v171)
  {
    os_log_t v70 = v158;
    v164(v158, v163, v46);
    uint64_t v71 = sub_F70D0();
    os_log_type_t v72 = sub_F7690();
    if (os_log_type_enabled(v71, v72))
    {
      unint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v73 = 0;
      id v74 = "Dropping subject update due to missing attribution info";
      goto LABEL_28;
    }
LABEL_29:

    return (id)((uint64_t (*)(char *, uint64_t))v43)(v70, v46);
  }
  id v75 = v166;
  id v76 = [v31 remoteUri];
  if (v76)
  {
    v186.id._object = &type metadata for CTRCSGroupIdentity;
    v186.attributes._rawValue = &off_11ECA0;
    v186.scheme._uint64_t countAndFlagsBits = (uint64_t)v76;
    RCSGroup.init(group:identity:)(v31, (uint64_t)&v186, &v172);
    long long v181 = v174;
    long long v182 = v175;
    long long v183 = v176;
    long long v184 = v177;
    long long v178 = v172;
    long long v179 = *(_OWORD *)v173;
    long long v180 = *(_OWORD *)&v173[16];
    id v77 = [v75 member];
    uint64_t v78 = sub_F7220();
    char v80 = v79;

    v81._uint64_t countAndFlagsBits = v78;
    v81._object = v80;
    RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v185, v81, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    if (v82)
    {
      uint64_t v83 = v157;
      v164(v157, v163, v46);
      swift_errorRetain();
      swift_errorRetain();
      char v84 = sub_F70D0();
      os_log_type_t v85 = sub_F7690();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v156 = v44;
        id v86 = (uint8_t *)swift_slowAlloc();
        isa = (void *)swift_slowAlloc();
        id v171 = v75;
        *(_DWORD *)id v86 = 138412290;
        swift_errorRetain();
        uint64_t v87 = v46;
        uint64_t v88 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v172 = v88;
        sub_F77B0();
        void *isa = v88;
        uint64_t v46 = v87;
        uint64_t v83 = v157;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v84, v85, "Dropping subject change due to malformed sender: %@", v86, 0xCu);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v123 = v83;
      goto LABEL_51;
    }
    isa = 0;
    uint64_t countAndFlagsBits = (void *)v185.id._countAndFlagsBits;
    object = v185.id._object;
    swift_bridgeObjectRetain();
    sub_6D20((uint64_t)&v185);
    id v104 = [v162 phoneNumber];
    if (v104)
    {
      v105 = v104;
      id v169 = countAndFlagsBits;
      id v171 = v75;
      uint64_t v168 = sub_F7220();
      id v107 = v106;

      uint64_t v108 = *((void *)&v179 + 1);
      uint64_t v109 = v180;
      os_log_type_t v110 = sub_6BA8(&v178, *((uint64_t *)&v179 + 1));
      uint64_t v111 = v155;
      sub_35F9C((uint64_t)v110, v155, v108, v109);
      if (v112)
      {
        uint64_t v113 = v112;
        os_log_t v167 = v107;
        uint64_t v114 = *((void *)&v179 + 1);
        uint64_t v115 = v180;
        sub_6BA8(&v178, *((uint64_t *)&v179 + 1));
        id result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v115 + 16))(v114, v115);
        if (v116)
        {
          uint64_t v117 = v116;
          id v118 = v162;
          if (*(void *)(*(void *)(*(void *)&v111[OBJC_IVAR___RCSServiceSession_state] + 72) + 16))
          {
            uint64_t v119 = (uint64_t)result;
            swift_bridgeObjectRetain();
            sub_1C9BC(v119, v117);
            LOBYTE(v119) = v120;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v119)
            {
              if (v161)
              {
                id v121 = [v160 displayString];
                uint64_t v165 = sub_F7220();
                id v166 = v122;
              }
              else
              {
                uint64_t v165 = 0;
                id v166 = 0;
              }
              id v131 = v118;
              id v132 = [v131 phoneNumber];
              if (v132)
              {
                v133 = v132;
                uint64_t v134 = sub_F7220();
                char v136 = v135;

                unint64_t v137 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
                v138._uint64_t countAndFlagsBits = 7103860;
                v138._object = (void *)0xE300000000000000;
                v139._uint64_t countAndFlagsBits = v134;
                v139._object = v136;
                RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v186, v138, v139, (Swift::OpaquePointer)v137, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
                __chkstk_darwin(v140);
                v150[-2] = v131;
                RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1E93C, &v172);
                sub_6D20((uint64_t)&v186);
                swift_bridgeObjectRetain();
                sub_6D20((uint64_t)&v172);
              }
              os_log_type_t v141 = isa;
              uint64_t v142 = (uint64_t)v166;
              id v143 = [v131 labelID];
              if (v143)
              {
                v144 = v143;
                sub_F7220();
              }
              else
              {
              }
              sub_2B700(v165, v142, (uint64_t)v169, (uint64_t)object, &v178);
              if (!v141)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                return (id)sub_1E8E8((uint64_t)&v178);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v187[0] = v141;
              swift_errorRetain();
              sub_551C(&qword_127D08);
              char v145 = swift_dynamicCast();
              os_log_t v146 = v167;
              if (v145)
              {
                swift_errorRelease();
                sub_162D8(v155, v161, (uint64_t)v169, (uint64_t)object, v168, (uint64_t)v146, v113);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_errorRelease();
                return (id)sub_1E8E8((uint64_t)&v178);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_errorRelease();
              id result = [self sharedInstance];
              if (result)
              {
                uint64_t v147 = result;
                uint64_t v148 = sub_F78C0();
                LOBYTE(v187[0]) = 1;
                v187[1] = v148;
                v187[2] = v149;
                v187[3] = 0;
                v187[4] = 0;
                v187[5] = v141;
                char v188 = 0;
                swift_errorRetain();
                sub_6204C((unsigned __int8 *)v187);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_errorRelease();

                swift_errorRelease();
                return (id)sub_1E8E8((uint64_t)&v178);
              }
              goto LABEL_69;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          sub_162D8(v111, v161, (uint64_t)v169, (uint64_t)object, v168, (uint64_t)v167, v113);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return (id)sub_1E8E8((uint64_t)&v178);
        }
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v124 = v153;
      v164(v153, v163, v46);
      uint64_t v128 = sub_F70D0();
      os_log_type_t v129 = sub_F7670();
      if (os_log_type_enabled(v128, v129))
      {
        uint64_t v130 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v130 = 0;
        _os_log_impl(&dword_0, v128, v129, "Dropping subject change for group that doesn't already exist in the database", v130, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v124 = v154;
      v164(v154, v163, v46);
      v125 = sub_F70D0();
      os_log_type_t v126 = sub_F7690();
      if (os_log_type_enabled(v125, v126))
      {
        uint64_t v127 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v127 = 0;
        _os_log_impl(&dword_0, v125, v126, "Dropping subject change due to missing phone number on subscription context", v127, 2u);
        swift_slowDealloc();
      }
    }
    uint64_t v123 = v124;
LABEL_51:
    v43(v123, v46);
    return (id)sub_1E8E8((uint64_t)&v178);
  }
  sub_1E894();
  uint64_t v90 = swift_allocError();
  swift_willThrow();
  id result = [self sharedInstance];
  if (!result)
  {
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v91 = result;
  *(void *)&long long v172 = 0x52552070756F7267;
  *((void *)&v172 + 1) = 0xEA00000000002049;
  id v92 = [v31 remoteUri];
  if (v92)
  {
    char v93 = v92;
    id v94 = v75;
    id v95 = [v92 focus];

    uint64_t v96 = sub_F7220();
    uint64_t v98 = v97;

    id v75 = v94;
  }
  else
  {
    uint64_t v96 = 0x3E6C696E3CLL;
    uint64_t v98 = (void *)0xE500000000000000;
  }
  v189._uint64_t countAndFlagsBits = v96;
  v189._object = v98;
  sub_F72E0(v189);
  swift_bridgeObjectRelease();
  long long v99 = v172;
  uint64_t v100 = sub_F78C0();
  LOBYTE(v172) = 1;
  *((void *)&v172 + 1) = v100;
  *(void *)v173 = v101;
  *(_OWORD *)&v173[8] = v99;
  *(void *)&v173[24] = v90;
  LOBYTE(v174) = 0;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_6204C((unsigned __int8 *)&v172);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  swift_bridgeObjectRelease();
  return (id)swift_errorRelease();
}

void sub_162D8(void *a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  id v24 = a1;
  if (a2)
  {
    id v8 = [a2 displayString];
    sub_F7220();

    uint64_t v9 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = sub_F6F30();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6F20();
  sub_F6F00();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v14 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_F71F0();
  uint64_t v16 = (void *)sub_F71F0();
  id v17 = [a7 chatIdentifier];
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = [a7 style];
    id v20 = v24;
    id v21 = [v24 account];
    LOBYTE(v22) = 1;
    [v20 didReceiveDisplayNameChange:v9 guid:v14 fromID:v15 toIdentifier:v16 forChat:v18 style:v19 account:v21 shouldRelay:v22];
  }
  else
  {
    __break(1u);
  }
}

id RCSServiceSession.incomingGroupChat(_:withGroupInformation:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  id v11 = a1;
  id v12 = a2;
  id v13 = v11;
  id v14 = v12;
  uint64_t v15 = sub_F70D0();
  int v16 = sub_F7670();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v47 = v16;
    os_log_t v50 = v15;
    uint64_t v51 = v6;
    uint64_t v53 = v3;
    uint64_t v17 = swift_slowAlloc();
    id v48 = (void *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(void *)&long long v61 = v49;
    *(_DWORD *)uint64_t v17 = 136446722;
    *(void *)&long long v54 = sub_A3FC(0xD00000000000002ALL, 0x80000000001025F0, (uint64_t *)&v61);
    sub_F77B0();
    *(_WORD *)(v17 + 12) = 2080;
    id v52 = v13;
    id v18 = [v13 labelID];
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = sub_F7220();
      unint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    *(void *)&long long v54 = sub_A3FC(v20, v22, (uint64_t *)&v61);
    sub_F77B0();
    id v13 = v52;

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2112;
    *(void *)&long long v54 = v14;
    id v23 = v14;
    sub_F77B0();
    *id v48 = v14;

    os_log_t v24 = v50;
    _os_log_impl(&dword_0, v50, (os_log_type_t)v47, "%{public}s simID: %s groupInformation: %@", (uint8_t *)v17, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v51);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
  id v25 = [v14 remoteUri];
  if (v25)
  {
    *((void *)&v62 + 1) = &type metadata for CTRCSGroupIdentity;
    *(void *)&long long v63 = &off_11ECA0;
    *(void *)&long long v61 = v25;
    RCSGroup.init(group:identity:)(v14, (uint64_t)&v61, &v54);
    long long v64 = v57;
    long long v65 = v58;
    long long v66 = v59;
    long long v67 = v60;
    long long v61 = v54;
    long long v62 = v55;
    long long v63 = v56;
    id v26 = v13;
    id v27 = [v26 phoneNumber];
    if (v27)
    {
      uint64_t v28 = sub_F7220();
      id v30 = v29;

      unint64_t v31 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
      v32._uint64_t countAndFlagsBits = 7103860;
      v32._object = (void *)0xE300000000000000;
      v33._uint64_t countAndFlagsBits = v28;
      v33._object = v30;
      RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v68, v32, v33, (Swift::OpaquePointer)v31, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
      __chkstk_darwin(v34);
      *(void *)&v46[-16] = v26;
      RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1EE00, &v54);
      sub_6D20((uint64_t)&v68);
      uint64_t v35 = *((void *)&v55 + 1);
      id v27 = (id)v55;
      swift_bridgeObjectRetain();
      sub_6D20((uint64_t)&v54);
    }
    else
    {
      uint64_t v35 = 0;
    }
    id v41 = [v26 labelID];
    if (v41)
    {
      unint64_t v42 = v41;
      uint64_t v43 = sub_F7220();
      uint64_t v45 = v44;
    }
    else
    {

      uint64_t v43 = 0;
      uint64_t v45 = 0;
    }
    sub_29478(&v61, (uint64_t)v27, v35, v43, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)sub_1E8E8((uint64_t)&v61);
  }
  else
  {
    sub_1E894();
    uint64_t v36 = swift_allocError();
    swift_willThrow();
    id result = [self sharedInstance];
    if (result)
    {
      id v38 = result;
      uint64_t v39 = sub_F78C0();
      LOBYTE(v61) = 1;
      *((void *)&v61 + 1) = v39;
      long long v62 = v40;
      *(void *)&long long v63 = 0;
      *((void *)&v63 + 1) = v36;
      LOBYTE(v64) = 0;
      swift_errorRetain();
      sub_6204C((unsigned __int8 *)&v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      return (id)swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t RCSServiceSession.participantsRemoved(_:fromGroupChat:withRemovedParticipants:removedBy:)(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = _s17ParticipantChangeVMa();
  __chkstk_darwin(v8 - 8);
  uint64_t v109 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_551C(&qword_127C70);
  uint64_t v125 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v124 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_F70F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v108 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v113 = (char *)&v104 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v114 = (char *)&v104 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v117 = (char *)&v104 - v21;
  __chkstk_darwin(v20);
  id v23 = (char *)&v104 - v22;
  uint64_t v24 = Logger.rcs.unsafeMutableAddressor();
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v121 = v24;
  v122 = v25;
  uint64_t v123 = v13 + 16;
  ((void (*)(char *))v25)(v23);
  id v118 = a4;
  id v26 = a4;
  id v27 = a1;
  id v28 = a2;
  id v29 = a3;
  id v30 = v26;
  id v31 = v27;
  id v32 = v28;
  id v33 = v29;
  uint64_t v34 = sub_F70D0();
  LODWORD(v120) = sub_F7670();
  BOOL v35 = os_log_type_enabled(v34, (os_log_type_t)v120);
  id v126 = v31;
  id v119 = v32;
  if (v35)
  {
    os_log_t v107 = v34;
    id v116 = v33;
    id v105 = v30;
    uint64_t v111 = v13;
    uint64_t v112 = v12;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v115 = (void *)swift_slowAlloc();
    uint64_t v106 = swift_slowAlloc();
    *(void *)&long long v134 = v106;
    *(_DWORD *)uint64_t v36 = 136447234;
    *(void *)&long long v127 = sub_A3FC(0xD000000000000047, 0x8000000000102690, (uint64_t *)&v134);
    sub_F77B0();
    *(_WORD *)(v36 + 12) = 2080;
    id v37 = [v31 labelID];
    if (v37)
    {
      id v38 = v37;
      uint64_t v39 = sub_F7220();
      unint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = 0;
      unint64_t v41 = 0xE000000000000000;
    }
    id v44 = v119;
    *(void *)&long long v127 = sub_A3FC(v39, v41, (uint64_t *)&v134);
    sub_F77B0();
    id v45 = v126;

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2080;
    id v46 = [v44 remoteUri];
    if (v46)
    {
      int v47 = v46;
      id v48 = [v46 destination];

      uint64_t v49 = sub_F7220();
      unint64_t v51 = v50;
    }
    else
    {
      unint64_t v51 = 0xE500000000000000;
      uint64_t v49 = 0x3E6C696E3CLL;
    }
    *(void *)&long long v127 = sub_A3FC(v49, v51, (uint64_t *)&v134);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 32) = 2112;
    id v52 = v116;
    *(void *)&long long v127 = v116;
    id v53 = v116;
    sub_F77B0();
    *uint64_t v115 = v52;

    *(_WORD *)(v36 + 42) = 2080;
    if (v118)
    {
      id v54 = v105;
      id v55 = [v105 member];
      uint64_t v56 = sub_F7220();
      unint64_t v58 = v57;

      uint64_t v42 = v112;
    }
    else
    {
      unint64_t v58 = 0xE500000000000000;
      uint64_t v42 = v112;
      id v54 = v105;
      uint64_t v56 = 0x3E6C696E3CLL;
    }
    *(void *)&long long v127 = sub_A3FC(v56, v58, (uint64_t *)&v134);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v59 = v107;
    _os_log_impl(&dword_0, v107, (os_log_type_t)v120, "%{public}s simID: %s remoteUri: %s removedParticipants: %@ removedBy: %s", (uint8_t *)v36, 0x34u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v43 = v111;
    char v120 = *(void (**)(char *, uint64_t))(v111 + 8);
    v120(v23, v42);
    id v30 = v54;
    id v33 = v116;
  }
  else
  {

    char v120 = *(void (**)(char *, uint64_t))(v13 + 8);
    v120(v23, v12);
    uint64_t v42 = v12;
    uint64_t v43 = v13;
  }
  if (qword_127B60 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_8B44(v10, (uint64_t)qword_127DD8);
  long long v61 = v124;
  uint64_t v62 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v124, v60, v10);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v10);
  if (v134 == 1)
  {
    long long v63 = v117;
    v122(v117, v121, v42);
    long long v64 = sub_F70D0();
    os_log_type_t v65 = sub_F7680();
    if (os_log_type_enabled(v64, v65))
    {
      long long v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v66 = 0;
      long long v67 = "Dropping participant removal due to override";
LABEL_26:
      _os_log_impl(&dword_0, v64, v65, v67, v66, 2u);
      swift_slowDealloc();
      goto LABEL_27;
    }
    goto LABEL_27;
  }
  id v68 = [v126 phoneNumber];
  if (!v68)
  {
    long long v63 = v113;
    v122(v113, v121, v42);
    long long v64 = sub_F70D0();
    os_log_type_t v65 = sub_F7690();
    if (os_log_type_enabled(v64, v65))
    {
      long long v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v66 = 0;
      long long v67 = "Dropping participant removal due to missing phone number on subscription context";
      goto LABEL_26;
    }
    goto LABEL_27;
  }
  uint64_t v69 = v68;
  uint64_t v70 = sub_F7220();
  uint64_t v72 = v71;

  id v73 = v119;
  id v74 = [v119 remoteUri];
  if (!v74)
  {
    long long v127 = 0u;
    long long v128 = 0u;
    long long v129 = 0u;
    long long v130 = 0u;
    long long v131 = 0u;
    long long v132 = 0u;
    long long v133 = 0u;
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)&v127, &qword_128060);
    goto LABEL_22;
  }
  v141.id._object = &type metadata for CTRCSGroupIdentity;
  v141.attributes._rawValue = &off_11ECA0;
  v141.scheme._uint64_t countAndFlagsBits = (uint64_t)v74;
  RCSGroup.init(group:identity:)(v73, (uint64_t)&v141, &v127);
  uint64_t v111 = v43;
  uint64_t v112 = v42;
  long long v137 = v130;
  long long v138 = v131;
  long long v139 = v132;
  long long v140 = v133;
  long long v134 = v127;
  long long v135 = v128;
  long long v136 = v129;
  uint64_t v76 = *((void *)&v128 + 1);
  uint64_t v77 = v129;
  uint64_t v78 = sub_6BA8(&v134, *((uint64_t *)&v128 + 1));
  sub_35F9C((uint64_t)v78, v110, v76, v77);
  if (!v79)
  {
    swift_bridgeObjectRelease();
    sub_1E8E8((uint64_t)&v134);
    uint64_t v42 = v112;
LABEL_22:
    long long v63 = v114;
    v122(v114, v121, v42);
    long long v64 = sub_F70D0();
    os_log_type_t v65 = sub_F7690();
    if (os_log_type_enabled(v64, v65))
    {
      long long v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v66 = 0;
      long long v67 = "Dropping participantsRemoved for unknown group";
      goto LABEL_26;
    }
LABEL_27:

    return ((uint64_t (*)(char *, uint64_t))v120)(v63, v42);
  }
  char v80 = v79;
  id v81 = v33;
  id v82 = v30;
  id v83 = v80;
  uint64_t v84 = v109;
  sub_43418(v83, v70, v72, v81, v118, 1, 0, v109);
  uint64_t v85 = *((void *)&v135 + 1);
  uint64_t v86 = v136;
  sub_6BA8(&v134, *((uint64_t *)&v135 + 1));
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 16))(v85, v86);
  if (v87)
  {
    uint64_t v88 = v87;
    id v89 = v126;
    if (*(void *)(*(void *)(*(void *)&v110[OBJC_IVAR___RCSServiceSession_state] + 72) + 16))
    {
      uint64_t v90 = result;
      swift_bridgeObjectRetain();
      sub_1C9BC(v90, v88);
      LOBYTE(v90) = v91;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v90)
      {
        id v92 = v89;
        id v93 = [v92 phoneNumber];
        if (v93)
        {
          id v94 = v93;
          uint64_t v95 = sub_F7220();
          uint64_t v97 = v96;

          unint64_t v98 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
          v99._uint64_t countAndFlagsBits = 7103860;
          v99._object = (void *)0xE300000000000000;
          v100._uint64_t countAndFlagsBits = v95;
          v100._object = v97;
          RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v141, v99, v100, (Swift::OpaquePointer)v98, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
          __chkstk_darwin(v101);
          *(&v104 - 2) = (uint64_t)v92;
          RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1EE00, &v127);
          sub_6D20((uint64_t)&v141);
          swift_bridgeObjectRetain();
          sub_6D20((uint64_t)&v127);
        }
        id v102 = [v92 labelID];
        if (v102)
        {
          uint64_t v103 = v102;
          sub_F7220();
        }
        else
        {
        }
        sub_2BEBC(v84, &v134);
        sub_1EDA0(v84, (uint64_t (*)(void))_s17ParticipantChangeVMa);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return sub_1E8E8((uint64_t)&v134);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_49E54(v84);
    sub_43B14(v84, 1);

    sub_1EDA0(v84, (uint64_t (*)(void))_s17ParticipantChangeVMa);
    return sub_1E8E8((uint64_t)&v134);
  }
  __break(1u);
  __break(1u);
  return result;
}

uint64_t RCSServiceSession.participantsAdded(_:toGroupChat:withAddedParticipants:addedBy:)(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = _s17ParticipantChangeVMa();
  __chkstk_darwin(v8 - 8);
  uint64_t v109 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_551C(&qword_127C70);
  uint64_t v125 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v124 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_F70F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v108 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v113 = (char *)&v104 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v114 = (char *)&v104 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v117 = (char *)&v104 - v21;
  __chkstk_darwin(v20);
  id v23 = (char *)&v104 - v22;
  uint64_t v24 = Logger.rcs.unsafeMutableAddressor();
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v121 = v24;
  v122 = v25;
  uint64_t v123 = v13 + 16;
  ((void (*)(char *))v25)(v23);
  id v118 = a4;
  id v26 = a4;
  id v27 = a1;
  id v28 = a2;
  id v29 = a3;
  id v30 = v26;
  id v31 = v27;
  id v32 = v28;
  id v33 = v29;
  uint64_t v34 = sub_F70D0();
  LODWORD(v120) = sub_F7670();
  BOOL v35 = os_log_type_enabled(v34, (os_log_type_t)v120);
  id v126 = v31;
  id v119 = v32;
  if (v35)
  {
    os_log_t v107 = v34;
    id v116 = v33;
    id v105 = v30;
    uint64_t v111 = v13;
    uint64_t v112 = v12;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v115 = (void *)swift_slowAlloc();
    uint64_t v106 = swift_slowAlloc();
    *(void *)&long long v134 = v106;
    *(_DWORD *)uint64_t v36 = 136447234;
    *(void *)&long long v127 = sub_A3FC(0xD00000000000003FLL, 0x8000000000102720, (uint64_t *)&v134);
    sub_F77B0();
    *(_WORD *)(v36 + 12) = 2080;
    id v37 = [v31 labelID];
    if (v37)
    {
      id v38 = v37;
      uint64_t v39 = sub_F7220();
      unint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = 0;
      unint64_t v41 = 0xE000000000000000;
    }
    id v44 = v119;
    *(void *)&long long v127 = sub_A3FC(v39, v41, (uint64_t *)&v134);
    sub_F77B0();
    id v45 = v126;

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2080;
    id v46 = [v44 remoteUri];
    if (v46)
    {
      int v47 = v46;
      id v48 = [v46 destination];

      uint64_t v49 = sub_F7220();
      unint64_t v51 = v50;
    }
    else
    {
      unint64_t v51 = 0xE500000000000000;
      uint64_t v49 = 0x3E6C696E3CLL;
    }
    *(void *)&long long v127 = sub_A3FC(v49, v51, (uint64_t *)&v134);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 32) = 2112;
    id v52 = v116;
    *(void *)&long long v127 = v116;
    id v53 = v116;
    sub_F77B0();
    *uint64_t v115 = v52;

    *(_WORD *)(v36 + 42) = 2080;
    if (v118)
    {
      id v54 = v105;
      id v55 = [v105 member];
      uint64_t v56 = sub_F7220();
      unint64_t v58 = v57;

      uint64_t v42 = v112;
    }
    else
    {
      unint64_t v58 = 0xE500000000000000;
      uint64_t v42 = v112;
      id v54 = v105;
      uint64_t v56 = 0x3E6C696E3CLL;
    }
    *(void *)&long long v127 = sub_A3FC(v56, v58, (uint64_t *)&v134);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v59 = v107;
    _os_log_impl(&dword_0, v107, (os_log_type_t)v120, "%{public}s simID: %s remoteUri: %s addedParticipants: %@ addedBy: %s", (uint8_t *)v36, 0x34u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v43 = v111;
    char v120 = *(void (**)(char *, uint64_t))(v111 + 8);
    v120(v23, v42);
    id v30 = v54;
    id v33 = v116;
  }
  else
  {

    char v120 = *(void (**)(char *, uint64_t))(v13 + 8);
    v120(v23, v12);
    uint64_t v42 = v12;
    uint64_t v43 = v13;
  }
  if (qword_127B68 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_8B44(v10, (uint64_t)qword_127DF0);
  long long v61 = v124;
  uint64_t v62 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v124, v60, v10);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v10);
  if (v134 == 1)
  {
    long long v63 = v117;
    v122(v117, v121, v42);
    long long v64 = sub_F70D0();
    os_log_type_t v65 = sub_F7680();
    if (os_log_type_enabled(v64, v65))
    {
      long long v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v66 = 0;
      long long v67 = "Dropping participant addition due to override";
LABEL_26:
      _os_log_impl(&dword_0, v64, v65, v67, v66, 2u);
      swift_slowDealloc();
      goto LABEL_27;
    }
    goto LABEL_27;
  }
  id v68 = [v126 phoneNumber];
  if (!v68)
  {
    long long v63 = v113;
    v122(v113, v121, v42);
    long long v64 = sub_F70D0();
    os_log_type_t v65 = sub_F7690();
    if (os_log_type_enabled(v64, v65))
    {
      long long v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v66 = 0;
      long long v67 = "Dropping participant addition due to missing phone number on subscription context";
      goto LABEL_26;
    }
    goto LABEL_27;
  }
  uint64_t v69 = v68;
  uint64_t v70 = sub_F7220();
  uint64_t v72 = v71;

  id v73 = v119;
  id v74 = [v119 remoteUri];
  if (!v74)
  {
    long long v127 = 0u;
    long long v128 = 0u;
    long long v129 = 0u;
    long long v130 = 0u;
    long long v131 = 0u;
    long long v132 = 0u;
    long long v133 = 0u;
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)&v127, &qword_128060);
    goto LABEL_22;
  }
  v141.id._object = &type metadata for CTRCSGroupIdentity;
  v141.attributes._rawValue = &off_11ECA0;
  v141.scheme._uint64_t countAndFlagsBits = (uint64_t)v74;
  RCSGroup.init(group:identity:)(v73, (uint64_t)&v141, &v127);
  uint64_t v111 = v43;
  uint64_t v112 = v42;
  long long v137 = v130;
  long long v138 = v131;
  long long v139 = v132;
  long long v140 = v133;
  long long v134 = v127;
  long long v135 = v128;
  long long v136 = v129;
  uint64_t v76 = *((void *)&v128 + 1);
  uint64_t v77 = v129;
  uint64_t v78 = sub_6BA8(&v134, *((uint64_t *)&v128 + 1));
  sub_35F9C((uint64_t)v78, v110, v76, v77);
  if (!v79)
  {
    swift_bridgeObjectRelease();
    sub_1E8E8((uint64_t)&v134);
    uint64_t v42 = v112;
LABEL_22:
    long long v63 = v114;
    v122(v114, v121, v42);
    long long v64 = sub_F70D0();
    os_log_type_t v65 = sub_F7690();
    if (os_log_type_enabled(v64, v65))
    {
      long long v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v66 = 0;
      long long v67 = "Dropping participantsAdded for unknown group";
      goto LABEL_26;
    }
LABEL_27:

    return ((uint64_t (*)(char *, uint64_t))v120)(v63, v42);
  }
  char v80 = v79;
  id v81 = v33;
  id v82 = v30;
  id v83 = v80;
  uint64_t v84 = v109;
  sub_43418(v83, v70, v72, v81, v118, 0, 0, v109);
  uint64_t v85 = *((void *)&v135 + 1);
  uint64_t v86 = v136;
  sub_6BA8(&v134, *((uint64_t *)&v135 + 1));
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 16))(v85, v86);
  if (v87)
  {
    uint64_t v88 = v87;
    id v89 = v126;
    if (*(void *)(*(void *)(*(void *)&v110[OBJC_IVAR___RCSServiceSession_state] + 72) + 16))
    {
      uint64_t v90 = result;
      swift_bridgeObjectRetain();
      sub_1C9BC(v90, v88);
      LOBYTE(v90) = v91;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v90)
      {
        id v92 = v89;
        id v93 = [v92 phoneNumber];
        if (v93)
        {
          id v94 = v93;
          uint64_t v95 = sub_F7220();
          uint64_t v97 = v96;

          unint64_t v98 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
          v99._uint64_t countAndFlagsBits = 7103860;
          v99._object = (void *)0xE300000000000000;
          v100._uint64_t countAndFlagsBits = v95;
          v100._object = v97;
          RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v141, v99, v100, (Swift::OpaquePointer)v98, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
          __chkstk_darwin(v101);
          *(&v104 - 2) = (uint64_t)v92;
          RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1EE00, &v127);
          sub_6D20((uint64_t)&v141);
          swift_bridgeObjectRetain();
          sub_6D20((uint64_t)&v127);
        }
        id v102 = [v92 labelID];
        if (v102)
        {
          uint64_t v103 = v102;
          sub_F7220();
        }
        else
        {
        }
        sub_2BEBC(v84, &v134);
        sub_1EDA0(v84, (uint64_t (*)(void))_s17ParticipantChangeVMa);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return sub_1E8E8((uint64_t)&v134);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_49E54(v84);
    sub_43B14(v84, 1);

    sub_1EDA0(v84, (uint64_t (*)(void))_s17ParticipantChangeVMa);
    return sub_1E8E8((uint64_t)&v134);
  }
  __break(1u);
  __break(1u);
  return result;
}

void sub_18CC4(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void (*a7)(id, id, id, void *))
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a1;
  a7(v12, v13, v14, a6);
}

uint64_t RCSServiceSession.didFinishGroupUpdate(_:forGroupChat:)(void *a1, void *a2)
{
  uint64_t v4 = sub_551C(&qword_127C70);
  uint64_t v81 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v80 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v74 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v71 = (char *)&v67 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v67 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v67 - v15;
  uint64_t v17 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v76 = v17;
  uint64_t v77 = v18;
  uint64_t v78 = v7 + 16;
  ((void (*)(char *))v18)(v16);
  id v19 = a1;
  id v20 = a2;
  id v21 = v19;
  id v22 = v20;
  id v23 = sub_F70D0();
  int v75 = sub_F7670();
  BOOL v24 = os_log_type_enabled(v23, (os_log_type_t)v75);
  id v79 = v21;
  if (v24)
  {
    id v70 = v22;
    uint64_t v72 = v7;
    uint64_t v73 = v6;
    uint64_t v25 = swift_slowAlloc();
    long long v67 = (void *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(void *)&v83[0] = v68;
    *(_DWORD *)uint64_t v25 = 136446722;
    v82[0] = sub_A3FC(0xD000000000000025, 0x8000000000102790, (uint64_t *)v83);
    sub_F77B0();
    *(_WORD *)(v25 + 12) = 2080;
    id v26 = [v21 labelID];
    uint64_t v69 = v14;
    if (v26)
    {
      id v27 = v26;
      uint64_t v28 = sub_F7220();
      unint64_t v30 = v29;
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v30 = 0xE000000000000000;
    }
    v82[0] = sub_A3FC(v28, v30, (uint64_t *)v83);
    sub_F77B0();
    id v32 = v79;

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2112;
    id v22 = v70;
    v82[0] = v70;
    id v33 = v70;
    sub_F77B0();
    void *v67 = v22;

    _os_log_impl(&dword_0, v23, (os_log_type_t)v75, "%{public}s simID: %s forGroupChat: %@", (uint8_t *)v25, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v73;
    id v31 = *(void (**)(char *, uint64_t))(v72 + 8);
    v31(v16, v73);
    id v14 = v69;
  }
  else
  {

    id v31 = *(void (**)(char *, uint64_t))(v7 + 8);
    v31(v16, v6);
  }
  if (qword_127BF0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_8B44(v4, (uint64_t)qword_127F88);
  BOOL v35 = v80;
  uint64_t v36 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v34, v4);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v4);
  if (LOBYTE(v83[0]) == 1)
  {
    v77(v14, v76, v6);
    id v37 = sub_F70D0();
    os_log_type_t v38 = sub_F7690();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_0, v37, v38, "Dropping group update completion due to override", v39, 2u);
      swift_slowDealloc();
    }

    unint64_t v40 = v14;
  }
  else
  {
    unint64_t v41 = v22;
    id v42 = v79;
    id v43 = [v42 phoneNumber];
    if (v43)
    {
      uint64_t v44 = sub_F7220();
      id v46 = v45;

      unint64_t v47 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
      v48._uint64_t countAndFlagsBits = 7103860;
      v48._object = (void *)0xE300000000000000;
      v49._uint64_t countAndFlagsBits = v44;
      v49._object = v46;
      RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v84, v48, v49, (Swift::OpaquePointer)v47, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
      __chkstk_darwin(v50);
      *(&v67 - 2) = v42;
      RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1EE00, &v85);
      sub_6D20((uint64_t)&v84);
      swift_bridgeObjectRetain();
      sub_6D20((uint64_t)&v85);
    }
    id v51 = [v42 labelID];
    if (v51)
    {
      id v52 = v51;
      sub_F7220();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    id v53 = [v41 remoteUri];
    if (v53)
    {
      id v54 = v53;
      v82[3] = &type metadata for CTRCSGroupIdentity;
      v82[4] = &off_11ECA0;
      v82[0] = v53;
      id v55 = v41;
      id v56 = v54;
      RCSGroup.init(group:identity:)(v55, (uint64_t)v82, v83);
      id v61 = [v56 conversationID];
      uint64_t v62 = sub_F7220();
      uint64_t v64 = v63;

      sub_1E9A0((uint64_t)v83, (uint64_t)v82);
      id v65 = sub_29934(v62, v64, (uint64_t)v82);

      swift_bridgeObjectRelease();
      sub_1E944((uint64_t)v82, &qword_128060);
      return sub_1E8E8((uint64_t)v83);
    }
    unint64_t v57 = v71;
    v77(v71, v76, v6);
    unint64_t v58 = sub_F70D0();
    os_log_type_t v59 = sub_F7690();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl(&dword_0, v58, v59, "Dropping didFinishGroupUpdate for group with no remoteUri", v60, 2u);
      swift_slowDealloc();
    }

    unint64_t v40 = v57;
  }
  return ((uint64_t (*)(char *, uint64_t))v31)(v40, v6);
}

uint64_t RCSServiceSession.didFinishExit(_:with:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  id v11 = a1;
  id v12 = a2;
  id v13 = v11;
  id v14 = v12;
  uint64_t v15 = sub_F70D0();
  int v16 = sub_F7670();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v27 = v16;
    uint64_t v30 = v6;
    uint64_t v31 = v3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v33[0] = v29;
    *(_DWORD *)uint64_t v17 = 136446722;
    uint64_t v32 = sub_A3FC(0xD000000000000016, 0x80000000001027C0, v33);
    sub_F77B0();
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = [v13 labelID];
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = sub_F7220();
      unint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v32 = sub_A3FC(v20, v22, v33);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2112;
    uint64_t v32 = (uint64_t)v14;
    id v24 = v14;
    sub_F77B0();
    *uint64_t v28 = v14;

    _os_log_impl(&dword_0, v15, (os_log_type_t)v27, "%{public}s simID: %s operationResult: %@", (uint8_t *)v17, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v30);
    uint64_t v3 = v31;
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(void *)(*(void *)(v3 + OBJC_IVAR___RCSServiceSession_state) + 40))
  {
    v33[3] = sub_6CA4(0, &qword_128068);
    v33[4] = (uint64_t)&protocol witness table for CTLazuliOperationResult;
    v33[0] = (uint64_t)v14;
    id v25 = v14;
    swift_retain();
    RCSGroupController.groupExitCompleted(with:)(v33);
    swift_release();
    return sub_6BEC((uint64_t)v33);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void RCSServiceSession.evicted(fromGroup:withGroupInfo:evictedBy:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_F70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v66 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v13 = (char *)&v57 - v12;
  uint64_t v14 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v64 = v14;
  uint64_t v65 = v9 + 16;
  uint64_t v63 = v15;
  ((void (*)(char *))v15)(v13);
  long long v67 = a3;
  id v16 = a3;
  id v17 = a1;
  id v18 = a2;
  id v19 = v16;
  id v20 = v17;
  id v21 = v18;
  unint64_t v22 = sub_F70D0();
  int v23 = sub_F7670();
  if (os_log_type_enabled(v22, (os_log_type_t)v23))
  {
    int v60 = v23;
    os_log_t v61 = v22;
    uint64_t v57 = v9;
    uint64_t v62 = v8;
    unint64_t v58 = v4;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    *(void *)&v69[0] = v59;
    *(_DWORD *)uint64_t v24 = 136446978;
    uint64_t v68 = sub_A3FC(0xD00000000000002BLL, 0x80000000001027E0, (uint64_t *)v69);
    sub_F77B0();
    *(_WORD *)(v24 + 12) = 2080;
    id v25 = [v20 labelID];
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_F7220();
      unint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    uint64_t v68 = sub_A3FC(v27, v29, (uint64_t *)v69);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    id v31 = [v21 destination];
    uint64_t v32 = sub_F7220();
    unint64_t v34 = v33;

    uint64_t v68 = sub_A3FC(v32, v34, (uint64_t *)v69);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 32) = 2080;
    if (v67)
    {
      id v35 = [v19 member];
      uint64_t v36 = sub_F7220();
      unint64_t v38 = v37;
    }
    else
    {
      unint64_t v38 = 0xE600000000000000;
      uint64_t v36 = 0x296C6C756E28;
    }
    uint64_t v4 = v58;
    uint64_t v39 = v57;
    uint64_t v68 = sub_A3FC(v36, v38, (uint64_t *)v69);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v40 = v61;
    _os_log_impl(&dword_0, v61, (os_log_type_t)v60, "%{public}s simID: %s evicted from group %s by %s", (uint8_t *)v24, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v30 = *(void (**)(char *, uint64_t))(v39 + 8);
    uint64_t v8 = v62;
    v30(v13, v62);
  }
  else
  {

    uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
    v30(v13, v8);
  }
  id v41 = v21;
  sub_1D3F8(v41, v4);
  id v43 = v42;

  if (v43)
  {
    id v44 = [v41 conversationID];
    uint64_t v45 = sub_F7220();
    uint64_t v47 = v46;

    memset(v69, 0, 112);
    id v48 = sub_29934(v45, v47, (uint64_t)v69);
    swift_bridgeObjectRelease();

    sub_1E944((uint64_t)v69, &qword_128060);
    id v49 = [v43 chatIdentifier];
    if (v49)
    {
      uint64_t v50 = v49;
      id v51 = [v43 style];
      id v52 = [v4 account];
      [v4 didLeaveChat:v50 style:v51 account:v52];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    id v53 = v66;
    v63(v66, v64, v8);
    id v54 = sub_F70D0();
    os_log_type_t v55 = sub_F7690();
    if (os_log_type_enabled(v54, v55))
    {
      id v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v56 = 0;
      _os_log_impl(&dword_0, v54, v55, "Dropping eviction from unknown group", v56, 2u);
      swift_slowDealloc();
    }

    v30(v53, v8);
  }
}

void *RCSServiceSession.didFinishParticipantsAddition(_:added:didNotAdd:with:)(void *a1, void *a2, void *a3, void *a4)
{
  return sub_1A468(a1, a2, a3, a4, 0xD000000000000036, 0x8000000000102810, "%{public}s simID: %s added %s notAdded %s operationResult: %@");
}

void *RCSServiceSession.didFinishParticipantsRemoval(_:removed:didNotRemove:with:)(void *a1, void *a2, void *a3, void *a4)
{
  return sub_1A468(a1, a2, a3, a4, 0xD00000000000003ALL, 0x8000000000102850, "%{public}s simID: %s removed %s notRemoved %s operationResult: %@");
}

void *sub_1A468(void *a1, void *a2, void *a3, void *a4, uint64_t a5, unint64_t a6, const char *a7)
{
  uint64_t v59 = a7;
  unint64_t v57 = a6;
  uint64_t v9 = v7;
  uint64_t v14 = sub_F70F0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  id v62 = a3;
  id v19 = a3;
  id v20 = a4;
  id v21 = a1;
  id v61 = a2;
  id v22 = a2;
  id v23 = v19;
  id v24 = v20;
  id v25 = v21;
  id v26 = v22;
  uint64_t v27 = sub_F70D0();
  int v58 = sub_F7670();
  if (os_log_type_enabled(v27, (os_log_type_t)v58))
  {
    os_log_t v54 = v27;
    uint64_t v55 = v14;
    id v60 = v23;
    uint64_t v56 = v9;
    uint64_t v28 = swift_slowAlloc();
    id v52 = (void *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    v64[0] = v53;
    *(_DWORD *)uint64_t v28 = 136447234;
    uint64_t v63 = sub_A3FC(a5, v57, v64);
    sub_F77B0();
    *(_WORD *)(v28 + 12) = 2080;
    id v29 = [v25 labelID];
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = sub_F7220();
      unint64_t v33 = v32;
    }
    else
    {
      uint64_t v31 = 0;
      unint64_t v33 = 0xE000000000000000;
    }
    uint64_t v63 = sub_A3FC(v31, v33, v64);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 2080;
    if (v61)
    {
      id v34 = [v26 description];
      uint64_t v35 = sub_F7220();
      unint64_t v37 = v36;
    }
    else
    {
      unint64_t v37 = 0xE500000000000000;
      uint64_t v35 = 0x3E6C696E3CLL;
    }
    uint64_t v63 = sub_A3FC(v35, v37, v64);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 32) = 2080;
    if (v62)
    {
      id v38 = v60;
      id v39 = [v60 description];
      uint64_t v40 = sub_F7220();
      unint64_t v42 = v41;
    }
    else
    {
      unint64_t v42 = 0xE500000000000000;
      id v38 = v60;
      uint64_t v40 = 0x3E6C696E3CLL;
    }
    uint64_t v63 = sub_A3FC(v40, v42, v64);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 42) = 2112;
    uint64_t v63 = (uint64_t)v24;
    id v43 = v24;
    sub_F77B0();
    void *v52 = v24;

    id v23 = v60;
    os_log_t v44 = v54;
    _os_log_impl(&dword_0, v54, (os_log_type_t)v58, v59, (uint8_t *)v28, 0x34u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v55);
    uint64_t v9 = v56;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  type metadata accessor for RCSServiceSession(0);
  id v45 = v26;
  id v46 = v23;
  uint64_t result = RCSGroupController.ParticipantModificationResult.init(modified:notModified:)(v61, v62);
  if (*(void *)(*(void *)(v9 + OBJC_IVAR___RCSServiceSession_state) + 40))
  {
    uint64_t v49 = (uint64_t)result;
    uint64_t v50 = v48;
    v64[3] = sub_6CA4(0, &qword_128068);
    v64[4] = (uint64_t)&protocol witness table for CTLazuliOperationResult;
    v64[0] = (uint64_t)v24;
    id v51 = v24;
    swift_retain();
    RCSGroupController.participantRemovalCompleted(with:groupOperation:)(v49, v50, v64);
    swift_release();
    sub_1E9FC(v49);
    return (void *)sub_6BEC((uint64_t)v64);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1AA80(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void (*a7)(id, void *, void *, id))
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a1;
  a7(v12, a4, a5, v15);
}

uint64_t RCSServiceSession.didFinishGroupChatCreation(_:forGroupChat:with:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_F70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = v13;
  id v17 = v14;
  id v18 = v15;
  id v19 = sub_F70D0();
  int v20 = sub_F7670();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    int v34 = v20;
    uint64_t v35 = v11;
    os_log_t v38 = v19;
    uint64_t v41 = v8;
    uint64_t v42 = v4;
    uint64_t v21 = swift_slowAlloc();
    unint64_t v36 = (void *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v44[0] = v37;
    *(_DWORD *)uint64_t v21 = 136446978;
    uint64_t v43 = sub_A3FC(0xD000000000000030, 0x8000000000102890, v44);
    sub_F77B0();
    *(_WORD *)(v21 + 12) = 2080;
    id v22 = [v16 labelID];
    uint64_t v39 = v9;
    id v40 = v17;
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = sub_F7220();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    uint64_t v43 = sub_A3FC(v24, v26, v44);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2112;
    id v17 = v40;
    uint64_t v43 = (uint64_t)v40;
    id v28 = v40;
    sub_F77B0();
    id v29 = v36;
    void *v36 = v17;

    *(_WORD *)(v21 + 32) = 2112;
    uint64_t v43 = (uint64_t)v18;
    id v30 = v18;
    sub_F77B0();
    v29[1] = v18;

    os_log_t v31 = v38;
    _os_log_impl(&dword_0, v38, (os_log_type_t)v34, "%{public}s simID: %s forGroupChat: %@ operationResult: %@", (uint8_t *)v21, 0x2Au);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v35, v41);
    uint64_t v4 = v42;
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(void *)(*(void *)(v4 + OBJC_IVAR___RCSServiceSession_state) + 40))
  {
    v44[3] = sub_6CA4(0, &qword_128068);
    v44[4] = (uint64_t)&protocol witness table for CTLazuliOperationResult;
    uint64_t v43 = (uint64_t)v16;
    v44[0] = (uint64_t)v18;
    id v32 = v18;
    swift_retain();
    RCSGroupController.groupCreationCompleted(with:operationResult:subscriptionContext:)((uint64_t)v17, v44, (uint64_t)&v43);
    swift_release();
    return sub_6BEC((uint64_t)v44);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t RCSServiceSession.didFinishSubjectChange(_:withNewSubject:with:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_F70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  id v13 = a2;
  id v14 = a3;
  id v15 = a1;
  id v16 = v13;
  id v17 = v14;
  id v18 = v15;
  id v19 = sub_F70D0();
  int v20 = sub_F7670();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    int v38 = v20;
    os_log_t v42 = v19;
    uint64_t v43 = v8;
    uint64_t v44 = v4;
    id v45 = a2;
    uint64_t v21 = swift_slowAlloc();
    id v40 = (void *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v47[0] = v41;
    *(_DWORD *)uint64_t v21 = 136446978;
    uint64_t v46 = sub_A3FC(0xD00000000000002ELL, 0x80000000001028D0, v47);
    sub_F77B0();
    *(_WORD *)(v21 + 12) = 2080;
    id v22 = [v18 labelID];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = sub_F7220();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    uint64_t v46 = sub_A3FC(v24, v26, v47);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2112;
    a2 = v45;
    uint64_t v39 = v9;
    if (v45)
    {
      uint64_t v46 = (uint64_t)v16;
      id v27 = v16;
    }
    else
    {
      uint64_t v46 = 0;
    }
    sub_F77B0();
    id v28 = v40;
    *id v40 = a2;

    *(_WORD *)(v21 + 32) = 2112;
    uint64_t v46 = (uint64_t)v17;
    id v29 = v17;
    sub_F77B0();
    v28[1] = v17;

    os_log_t v30 = v42;
    _os_log_impl(&dword_0, v42, (os_log_type_t)v38, "%{public}s simID: %s newSubject: %@ operationResult: %@", (uint8_t *)v21, 0x2Au);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v43);
    uint64_t v4 = v44;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (!*(void *)(*(void *)(v4 + OBJC_IVAR___RCSServiceSession_state) + 40)) {
    __break(1u);
  }
  swift_retain();
  if (a2)
  {
    id v31 = [v16 displayString];
    uint64_t v32 = sub_F7220();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v34 = 0;
  }
  v47[3] = sub_6CA4(0, &qword_128068);
  v47[4] = (uint64_t)&protocol witness table for CTLazuliOperationResult;
  v47[0] = (uint64_t)v17;
  id v35 = v17;
  RCSGroupController.groupRenameCompleted(with:operationResult:)(v32, v34, v47);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_6BEC((uint64_t)v47);
}

uint64_t RCSServiceSession.didReportChatbotSpam(_:forChatbot:with:)(void *a1, void *a2, void *a3)
{
  return sub_1B648(a1, a2, a3, 0xD000000000000028, 0x8000000000102900, "%{public}s simID: %s forChatbot: %@ operationResult: %@");
}

uint64_t RCSServiceSession.didReportSpam(_:for:with:)(void *a1, void *a2, void *a3)
{
  return sub_1B648(a1, a2, a3, 0xD00000000000001ALL, 0x8000000000102930, "%{public}s simID: %s forDestination: %@ operationResult: %@");
}

uint64_t sub_1B648(void *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, const char *a6)
{
  unint64_t v45 = a5;
  uint64_t v46 = a6;
  uint64_t v8 = v6;
  uint64_t v12 = sub_F70F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  id v17 = a1;
  id v18 = a2;
  id v19 = a3;
  id v20 = v17;
  id v21 = v18;
  id v22 = v19;
  id v23 = sub_F70D0();
  int v24 = sub_F7670();
  if (os_log_type_enabled(v23, (os_log_type_t)v24))
  {
    int v40 = v24;
    os_log_t v42 = v23;
    uint64_t v43 = v12;
    uint64_t v44 = v8;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v39 = (void *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v48[0] = v41;
    *(_DWORD *)uint64_t v25 = 136446978;
    uint64_t v47 = sub_A3FC(a4, v45, v48);
    sub_F77B0();
    *(_WORD *)(v25 + 12) = 2080;
    id v26 = [v20 labelID];
    uint64_t v38 = v13;
    if (v26)
    {
      id v27 = v26;
      uint64_t v28 = sub_F7220();
      unint64_t v30 = v29;
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v30 = 0xE000000000000000;
    }
    uint64_t v47 = sub_A3FC(v28, v30, v48);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2112;
    uint64_t v47 = (uint64_t)v21;
    id v32 = v21;
    sub_F77B0();
    uint64_t v33 = v39;
    void *v39 = v21;

    *(_WORD *)(v25 + 32) = 2112;
    uint64_t v47 = (uint64_t)v22;
    id v34 = v22;
    sub_F77B0();
    v33[1] = v22;

    os_log_t v35 = v42;
    _os_log_impl(&dword_0, v42, (os_log_type_t)v40, v46, (uint8_t *)v25, 0x2Au);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v43);
    uint64_t v8 = v44;
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  if (*(void *)(*(void *)(v8 + OBJC_IVAR___RCSServiceSession_state) + 56))
  {
    v48[3] = sub_6CA4(0, &qword_128068);
    v48[4] = (uint64_t)&protocol witness table for CTLazuliOperationResult;
    v48[0] = (uint64_t)v22;
    id v36 = v22;
    swift_retain();
    RCSSpamReportingController.spamReportCompleted(operationResult:)(v48);
    swift_release();
    return sub_6BEC((uint64_t)v48);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CTLazuliOperationResult.operationId.getter()
{
  id v1 = [v0 operation];
  id v2 = [v1 uuid];

  uint64_t v3 = sub_F7220();
  return v3;
}

uint64_t sub_1BB6C()
{
  id v1 = [*v0 operation];
  id v2 = [v1 uuid];

  uint64_t v3 = sub_F7220();
  return v3;
}

id sub_1BBE4()
{
  return [*v0 didSucceed];
}

id sub_1BC08()
{
  id v1 = [*v0 error];

  return v1;
}

uint64_t sub_1BC40(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_551C((uint64_t *)&unk_128130);
    id v2 = (void *)sub_F79E0();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_BAD8(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1EBC4(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1EBC4(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1EBC4(v36, v37);
    sub_1EBC4(v37, &v33);
    uint64_t result = sub_F7840(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1EBC4(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_44A8();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C008(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_551C((uint64_t *)&unk_128130);
    id v2 = (void *)sub_F79E0();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1EBC4(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1EBC4(v35, v36);
    sub_1EBC4(v36, &v32);
    uint64_t result = sub_F7840(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1EBC4(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_44A8();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C3B0(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1C3E8(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1C410(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_128140);
  id v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C520(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    *uint64_t v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C520(unsigned __int8 a1)
{
  sub_F7C20();
  sub_F72C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_F7C50();

  return sub_1C5F0(a1, v2);
}

unint64_t sub_1C5F0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        uint64_t v7 = 0x6E657265666E6F63;
        unint64_t v8 = 0xEA00000000006563;
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v8 = 0xE400000000000000;
          uint64_t v7 = 1919251317;
        }
        int v9 = a1;
        if (!a1)
        {
LABEL_16:
          unint64_t v11 = 0xED0000747865746ELL;
          if (v7 != 0x6F632D656E6F6870) {
            goto LABEL_18;
          }
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v7 = 0x6F632D656E6F6870;
        unint64_t v8 = 0xED0000747865746ELL;
        int v9 = a1;
        if (!a1) {
          goto LABEL_16;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 1919251317;
      }
      else {
        uint64_t v10 = 0x6E657265666E6F63;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE400000000000000;
      }
      else {
        unint64_t v11 = 0xEA00000000006563;
      }
      if (v7 != v10) {
        goto LABEL_18;
      }
LABEL_17:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_18:
      char v12 = sub_F7B60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

void *sub_1C798(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_F79F0();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

void sub_1C83C(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_F77B0();
  *a1 = v7;
  unint64_t v8 = *a2;
  if (*a2)
  {
    *unint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1C8F4(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1C920(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C948@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_1C978(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_F7840(*(void *)(v2 + 40));

  return sub_1CA34(a1, v4);
}

unint64_t sub_1C9BC(uint64_t a1, uint64_t a2)
{
  sub_F7C20();
  sub_F72C0();
  Swift::Int v4 = sub_F7C50();

  return sub_1CAFC(a1, a2, v4);
}

unint64_t sub_1CA34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1EBD4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_F7850();
      sub_1EC30((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1CAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_F7B60() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_F7B60() & 1) == 0);
    }
  }
  return v6;
}

void sub_1CBE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C9BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_428F0();
    goto LABEL_7;
  }
  sub_40F98(v15, a4 & 1);
  unint64_t v20 = sub_1C9BC(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_F7BA0();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_42544(v12, a2, a3, a1, v18);

  swift_bridgeObjectRetain();
}

void *RCSPersistentMenu.menu.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_1CD48()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_1CDC8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[15];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_57A4;
  return sub_10990(a1, v4, v5, v6, v7, v8, (uint64_t)(v1 + 7), v9);
}

_OWORD *sub_1CEB8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C9BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_42AA4();
      goto LABEL_7;
    }
    sub_412A8(v15, a4 & 1);
    unint64_t v21 = sub_1C9BC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_F7BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_6BEC((uint64_t)v19);
    return sub_1EBC4(a1, v19);
  }
LABEL_13:
  sub_4258C(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1D00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1C9BC(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_42C8C();
    goto LABEL_7;
  }
  sub_415A8(v17, a5 & 1);
  unint64_t v23 = sub_1C9BC(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_F7BA0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_425F8(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1D160(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C9BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_42E48();
      goto LABEL_7;
    }
    sub_418D0(v15, a4 & 1);
    unint64_t v21 = sub_1C9BC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_F7BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 160 * v12;
    return sub_1EC84((uint64_t)a1, v19);
  }
LABEL_13:
  sub_42648(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1D2AC(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C978(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_4306C();
      goto LABEL_7;
    }
    sub_41C2C(v13, a3 & 1);
    unint64_t v19 = sub_1C978(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1EBD4(a2, (uint64_t)v21);
      return sub_426BC(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_F7BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_6BEC((uint64_t)v17);

  return sub_1EBC4(a1, v17);
}

void sub_1D3F8(void *a1, char *a2)
{
  uint64_t v75 = sub_F70F0();
  uint64_t v77 = *(void *)(v75 - 8);
  uint64_t v4 = __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v72 - v6;
  v86[3] = &type metadata for CTRCSGroupIdentity;
  v86[4] = &off_11ECA0;
  v86[0] = a1;
  id v8 = a1;
  id v9 = [v8 conversationID];
  unint64_t v10 = sub_F7220();
  BOOL v12 = v11;

  uint64_t v13 = self;
  id v14 = [v13 sharedInstance];
  unint64_t v74 = v10;
  static IMDChatRCSGroupIdentity.encodeGroupID(_:)(v10, (unint64_t)v12);
  uint64_t v15 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v76 = a2;
  id v16 = [a2 service];
  id v17 = [v16 internalName];

  if (!v17)
  {
    sub_F7220();
    id v17 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  char v18 = (char *)[v14 newestExistingChatWithOriginalGroupID:v15 onService:v17];

  if (v18)
  {
    uint64_t v73 = v18;
    unint64_t v19 = v18;
    uint64_t v20 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v21 = v77;
    uint64_t v22 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v7, v20, v75);
    unint64_t v23 = v19;
    swift_bridgeObjectRetain();
    char v24 = sub_F70D0();
    os_log_type_t v25 = sub_F76B0();
    if (!os_log_type_enabled(v24, v25))
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
LABEL_11:
      long long v33 = v76;
      char v40 = static IMDChatRCSGroupIdentity.migrationEnabled.getter();
      char v18 = v73;
      if (v40)
      {
LABEL_14:
        uint64_t v41 = v23;
        uint64_t v42 = sub_6CA4(0, &qword_127C48);
        *(void *)&long long v81 = &protocol witness table for IMDChat;
        *((void *)&v80 + 1) = v42;
        *(void *)&long long v79 = v41;
        IMDChatRCSGroupIdentity.converge(identity:)(v86);
        sub_6AA0((uint64_t)&v79);
        goto LABEL_15;
      }
      goto LABEL_12;
    }
    uint64_t v26 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    *(void *)&long long v79 = v72;
    *(_DWORD *)uint64_t v26 = 136315394;
    id v27 = objc_msgSend(v23, "guid", v72);
    if (v27)
    {
      long long v28 = v27;
      uint64_t v29 = sub_F7220();
      unint64_t v31 = v30;

      v87.scheme._uint64_t countAndFlagsBits = sub_A3FC(v29, v31, (uint64_t *)&v79);
      sub_F77B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v87.scheme._uint64_t countAndFlagsBits = sub_A3FC(v74, (unint64_t)v12, (uint64_t *)&v79);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v24, v25, "Found chat %s for conversation ID %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v77 + 8))(v7, v75);
      goto LABEL_11;
    }

    swift_bridgeObjectRelease();
    __break(1u);
LABEL_30:
    sub_6D20((uint64_t)&v87);

    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  char v32 = static IMDChatRCSGroupIdentity.migrationEnabled.getter();
  long long v33 = v76;
  if ((v32 & 1) == 0)
  {
LABEL_12:
    if (!v18) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  id v34 = [v8 focus];
  uint64_t v35 = sub_F7220();
  uint64_t v37 = v36;

  swift_bridgeObjectRetain();
  v38._uint64_t countAndFlagsBits = v35;
  v38._object = v37;
  RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v87, v38, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
  if (v39)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    char v18 = 0;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  id v50 = [v13 sharedInstance];
  unint64_t v51 = RCSHandle.rawValue.getter();
  static IMDChatRCSGroupIdentity.encodeGroupID(_:)(v51, v52);
  swift_bridgeObjectRelease();
  uint64_t v53 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v54 = [v33 service];
  id v55 = [v54 internalName];

  if (!v55)
  {
    sub_F7220();
    id v55 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  char v18 = (char *)[v50 newestExistingChatWithOriginalGroupID:v53 onService:v55];

  uint64_t v56 = v77;
  unint64_t v57 = v73;
  if (v18)
  {
    int v58 = v18;
    uint64_t v59 = v18;
    uint64_t v60 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v61 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v57, v60, v75);
    BOOL v12 = v59;
    sub_5560((uint64_t)&v87);
    id v62 = sub_F70D0();
    os_log_type_t v63 = sub_F76B0();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      *(void *)&long long v79 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136315394;
      id v65 = [v12 guid];
      if (!v65) {
        goto LABEL_30;
      }
      long long v66 = v65;
      uint64_t v67 = sub_F7220();
      unint64_t v69 = v68;

      uint64_t v78 = sub_A3FC(v67, v69, (uint64_t *)&v79);
      sub_F77B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 12) = 2080;
      uint64_t v70 = RCSHandle.rawValue.getter();
      uint64_t v78 = sub_A3FC(v70, v71, (uint64_t *)&v79);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6D20((uint64_t)&v87);
      sub_6D20((uint64_t)&v87);
      _os_log_impl(&dword_0, v62, v63, "Found chat %s for group URI %s", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v77 + 8))(v73, v75);
      long long v33 = v76;
    }
    else
    {

      sub_6D20((uint64_t)&v87);
      sub_6D20((uint64_t)&v87);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v61);
    }
    char v18 = v58;
LABEL_13:
    unint64_t v23 = v18;
    goto LABEL_14;
  }
  sub_6D20((uint64_t)&v87);
LABEL_15:
  id v43 = [v86[0] conversationID];
  uint64_t v44 = sub_F7220();
  uint64_t v46 = v45;

  if (*(void *)(*(void *)(*(void *)&v33[OBJC_IVAR___RCSServiceSession_state] + 72) + 16)
    && (uint64_t v47 = v18,
        swift_bridgeObjectRetain(),
        sub_1C9BC(v44, v46),
        char v49 = v48,
        swift_bridgeObjectRelease(),
        (v49 & 1) != 0))
  {
    long long v84 = 0u;
    long long v85 = 0u;
    long long v82 = 0u;
    long long v83 = 0u;
    long long v81 = 0u;
    long long v80 = 0u;
    long long v79 = 0u;
    sub_29934(v44, v46, (uint64_t)&v79);
    swift_bridgeObjectRelease();

    sub_1E944((uint64_t)&v79, &qword_128060);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_6BEC((uint64_t)v86);
}

uint64_t sub_1DD9C(void *a1)
{
  id v2 = [a1 extractedUri];
  uint64_t v3 = sub_F7220();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6) {
    uint64_t v7 = &selRef_extractedUri;
  }
  else {
    uint64_t v7 = &selRef_uri;
  }
  id v8 = [a1 *v7];
  uint64_t v9 = sub_F7220();

  [a1 isBot];
  return v9;
}

uint64_t sub_1DE64(void *a1, void *a2, void *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_F70F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = v15;
  id v19 = v16;
  id v20 = v17;
  uint64_t v21 = sub_F70D0();
  int v22 = sub_F7670();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    int v39 = v22;
    uint64_t v40 = v11;
    uint64_t v41 = v10;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v43 = v38;
    *(_DWORD *)uint64_t v23 = 136446978;
    uint64_t v42 = sub_A3FC(a4, a5, &v43);
    sub_F77B0();
    *(_WORD *)(v23 + 12) = 2080;
    id v24 = [v18 labelID];
    if (v24)
    {
      os_log_type_t v25 = v24;
      uint64_t v26 = sub_F7220();
      unint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      unint64_t v28 = 0xE000000000000000;
    }
    uint64_t v42 = sub_A3FC(v26, v28, &v43);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    id v30 = [v19 uri];
    uint64_t v31 = sub_F7220();
    unint64_t v33 = v32;

    uint64_t v42 = sub_A3FC(v31, v33, &v43);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2080;
    id v34 = [v20 uuid];
    uint64_t v35 = sub_F7220();
    unint64_t v37 = v36;

    uint64_t v42 = sub_A3FC(v35, v37, &v43);
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v21, (os_log_type_t)v39, "%{public}s simID: %s from: %s id: %s", (uint8_t *)v23, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v13, v41);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_1E22C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Logger.chatbot.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  id v11 = a2;
  id v12 = a1;
  id v13 = v11;
  id v14 = v12;
  id v15 = sub_F70D0();
  int v16 = sub_F7670();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v42 = v16;
    os_log_t v43 = v15;
    uint64_t v44 = v6;
    id v40 = v13;
    uint64_t v45 = v3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v47[0] = v41;
    *(_DWORD *)uint64_t v17 = 136446722;
    uint64_t v46 = sub_A3FC(0xD000000000000049, 0x8000000000102A30, v47);
    sub_F77B0();
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = [v14 uri];
    id v19 = a2;
    uint64_t v20 = sub_F7220();
    unint64_t v22 = v21;

    uint64_t v23 = v20;
    a2 = v19;
    uint64_t v46 = sub_A3FC(v23, v22, v47);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    if (v19)
    {
      id v13 = v40;
      id v24 = [v40 description];
      uint64_t v25 = sub_F7220();
      unint64_t v27 = v26;
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v27 = 0xE000000000000000;
      id v13 = v40;
    }
    uint64_t v46 = sub_A3FC(v25, v27, v47);
    sub_F77B0();

    swift_bridgeObjectRelease();
    os_log_t v28 = v43;
    _os_log_impl(&dword_0, v43, (os_log_type_t)v42, "%{public}s destination: %s info: %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  id v29 = sub_2C764(v14);
  if (v29)
  {
    if (([v14 isBot] & 1) != 0
      || a2 && [v13 cacheType] == (char *)&dword_0 + 1)
    {
      id v30 = a2;
      id v31 = [v14 uri];
      uint64_t v32 = sub_F7220();
      id v34 = v33;

      id v35 = [v14 uri];
      uint64_t v36 = sub_F7220();
      uint64_t v38 = v37;

      sub_122A4(v32, v34, v36, v38, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2D9D0(v29, v30);
    }
  }
}

uint64_t sub_1E680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_128030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E6E8()
{
  swift_unknownObjectRelease();

  if (*(unsigned char *)(v0 + 80)) {
    swift_errorRelease();
  }
  else {
    sub_6BEC(v0 + 40);
  }

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1E74C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_551C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E7B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 5);
  uint64_t v8 = v1[11];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_46BC;
  return sub_14570(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1E87C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1E894()
{
  unint64_t result = qword_128050;
  if (!qword_128050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128050);
  }
  return result;
}

uint64_t sub_1E8E8(uint64_t a1)
{
  return a1;
}

void *sub_1E93C()
{
  return sub_722F0(*(void **)(v0 + 16));
}

uint64_t sub_1E944(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_551C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E9A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E9FC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for NullCapabilities()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s3RCS16NullCapabilitiesVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NullCapabilities(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for NullCapabilities(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for NullCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NullCapabilities(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NullCapabilities(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NullCapabilities()
{
  return &type metadata for NullCapabilities;
}

_OWORD *sub_1EBC4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1EBD4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1EC30(uint64_t a1)
{
  return a1;
}

uint64_t sub_1EC84(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1ECE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1ECF0()
{
  return swift_release();
}

unint64_t sub_1ECF8()
{
  unint64_t result = qword_128150;
  if (!qword_128150)
  {
    sub_F7110();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128150);
  }
  return result;
}

unint64_t sub_1ED44()
{
  unint64_t result = qword_128160;
  if (!qword_128160)
  {
    sub_8C18(&qword_128158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128160);
  }
  return result;
}

uint64_t sub_1EDA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s23RCSServiceSessionErrorsOwCP(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t _s23RCSServiceSessionErrorsOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s23RCSServiceSessionErrorsOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_1EE6C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1EE8C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *_s23RCSServiceSessionErrorsOMa()
{
  return &_s23RCSServiceSessionErrorsON;
}

void sub_1EEBC(void *a1, void *a2)
{
  char v3 = v2;
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v42 - v11;
  id v13 = [a2 destinationCallerID];
  if (!v13)
  {
    uint64_t v31 = 33;
    goto LABEL_7;
  }
  id v14 = v13;
  uint64_t v15 = sub_F7220();
  uint64_t v17 = v16;

  id v18 = sub_28A88(v15, v17);
  LOBYTE(v15) = v19;
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v31 = v18;
LABEL_7:
    uint64_t v32 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v32, v6);
    id v33 = a2;
    id v34 = sub_F70D0();
    os_log_type_t v35 = sub_F7670();
    if (os_log_type_enabled(v34, v35))
    {
      v42[1] = v31;
      os_log_t v43 = v3;
      uint64_t v44 = a1;
      uint64_t v45 = v6;
      uint64_t v46 = v7;
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      char v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315138;
      id v37 = [v33 guid];
      if (!v37)
      {

        __break(1u);
        return;
      }
      uint64_t v38 = v37;
      uint64_t v39 = sub_F7220();
      unint64_t v41 = v40;

      uint64_t v47 = sub_A3FC(v39, v41, (uint64_t *)&v48);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v34, v35, "Couldn't find a context for message %s, trying to resolve using the chat", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v45);
      char v3 = v43;
      a1 = v44;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    [v3 subscriptionContextForChat:a1];
    return;
  }
  uint64_t v20 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v20, v6);
  sub_B750(v18, 0);
  id v21 = a2;
  sub_B750(v18, 0);
  unint64_t v22 = v21;
  uint64_t v23 = sub_F70D0();
  os_log_type_t v24 = sub_F7680();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v46 = v7;
    uint64_t v27 = v26;
    os_log_t v28 = (void *)swift_slowAlloc();
    uint64_t v44 = v28;
    *(_DWORD *)uint64_t v27 = 138412546;
    char v48 = v18;
    LODWORD(v45) = v25;
    id v29 = v18;
    sub_F77B0();
    *os_log_t v28 = v18;
    sub_B8C4(v18, 0);
    sub_B8C4(v18, 0);
    *(_WORD *)(v27 + 12) = 2112;
    char v48 = v22;
    id v30 = v22;
    sub_F77B0();
    v44[1] = v22;

    _os_log_impl(&dword_0, v23, (os_log_type_t)v45, "Using context %@ for interacting with message %@", (uint8_t *)v27, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v7 = v46;
    swift_slowDealloc();
  }
  else
  {
    sub_B8C4(v18, 0);
    sub_B8C4(v18, 0);

    uint64_t v23 = v22;
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_1F3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  uint64_t v7 = sub_F70F0();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  sub_F74E0();
  v6[18] = sub_F74D0();
  uint64_t v9 = sub_F7470();
  v6[19] = v9;
  v6[20] = v8;
  return _swift_task_switch(sub_1F4C8, v9, v8);
}

void sub_1F4C8()
{
  uint64_t v76 = v0;
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = sub_F6F30();
  *(void *)(v0 + 168) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 184) = v4;
  sub_551C(&qword_1281E8);
  uint64_t v5 = swift_task_alloc();
  id v6 = [v1 guid];
  if (!v6)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = v6;
  sub_F7220();

  sub_F6EF0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v11 = *(void **)(v0 + 72);
    swift_release();
    sub_1E944(v5, &qword_1281E8);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v12, v10);
    id v13 = v11;
    id v14 = sub_F70D0();
    os_log_type_t v15 = sub_F76A0();
    if (!os_log_type_enabled(v14, v15))
    {
      uint64_t v51 = *(void *)(v0 + 120);
      uint64_t v50 = *(void *)(v0 + 128);
      uint64_t v52 = *(void *)(v0 + 112);
      uint64_t v53 = *(void **)(v0 + 72);

      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
      goto LABEL_10;
    }
    int v16 = *(void **)(v0 + 72);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v75[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    id v18 = [v16 guid];
    if (v18)
    {
      char v19 = v18;
      uint64_t v68 = *(void *)(v0 + 120);
      id v69 = *(id *)(v0 + 112);
      uint64_t v72 = *(void *)(v0 + 128);
      uint64_t v20 = *(void **)(v0 + 72);
      uint64_t v21 = sub_F7220();
      unint64_t v23 = v22;

      *(void *)(v0 + 16) = sub_A3FC(v21, v23, v75);
      sub_F77B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v14, v15, "Non-UUID message GUID %s passed to RCSServiceSession?!", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, id))(v68 + 8))(v72, v69);
LABEL_10:
      sub_1FF84();
      swift_allocError();
      *(_DWORD *)uint64_t v54 = 0;
      *(unsigned char *)(v54 + 4) = 1;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      id v55 = *(void (**)(void))(v0 + 8);
      v55();
      return;
    }
    goto LABEL_20;
  }
  uint64_t v24 = *(void *)(v0 + 136);
  uint64_t v25 = *(void *)(v0 + 112);
  uint64_t v26 = *(void *)(v0 + 120);
  uint64_t v27 = *(void **)(v0 + 96);
  uint64_t v73 = *(void **)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v5, v2);
  swift_task_dealloc();
  uint64_t v28 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v28, v25);
  uint64_t v74 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v74, v4, v2);
  id v29 = v27;
  id v30 = v73;
  id v31 = v29;
  id v32 = v30;
  id v33 = sub_F70D0();
  os_log_type_t v34 = sub_F7680();
  if (os_log_type_enabled(v33, v34))
  {
    os_log_type_t v66 = v34;
    log = v33;
    os_log_type_t v35 = *(void **)(v0 + 96);
    id v70 = *(id *)(v0 + 88);
    uint64_t v36 = swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    v75[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 138412802;
    *(void *)(v0 + 40) = v35;
    id v38 = v35;
    sub_F77B0();
    void *v37 = v35;

    *(_WORD *)(v36 + 12) = 2080;
    sub_27EAC();
    uint64_t v39 = sub_F7B20();
    *(void *)(v0 + 48) = sub_A3FC(v39, v40, v75);
    sub_F77B0();
    swift_bridgeObjectRelease();
    unint64_t v41 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v41(v74, v2);
    *(_WORD *)(v36 + 22) = 2080;
    id v42 = [v70 chatIdentifier];
    if (!v42)
    {
LABEL_21:

      __break(1u);
      return;
    }
    os_log_t v43 = v42;
    id v71 = *(id *)(v0 + 136);
    uint64_t v45 = *(void *)(v0 + 112);
    uint64_t v44 = *(void *)(v0 + 120);
    uint64_t v46 = *(void **)(v0 + 88);
    uint64_t v47 = sub_F7220();
    unint64_t v49 = v48;

    *(void *)(v0 + 56) = sub_A3FC(v47, v49, v75);
    sub_F77B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, log, v66, "Using context %@ for sending message %s to chat %s", (uint8_t *)v36, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(id, uint64_t))(v44 + 8))(v71, v45);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v56 = *(void *)(v0 + 136);
    uint64_t v58 = *(void *)(v0 + 112);
    uint64_t v57 = *(void *)(v0 + 120);
    uint64_t v60 = *(void **)(v0 + 88);
    uint64_t v59 = *(void **)(v0 + 96);

    unint64_t v41 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v41(v74, v2);

    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  }
  *(void *)(v0 + 192) = v41;
  uint64_t v61 = *(void *)(*(void *)(*(void *)(v0 + 104) + OBJC_IVAR___RCSServiceSession_state) + 48);
  *(void *)(v0 + 200) = v61;
  if (!v61)
  {
LABEL_19:
    __break(1u);
LABEL_20:

    __break(1u);
    goto LABEL_21;
  }
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 88);
  swift_retain();
  id v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v62;
  void *v62 = v0;
  v62[1] = sub_1FCC0;
  uint64_t v63 = *(void *)(v0 + 72);
  uint64_t v64 = *(void *)(v0 + 80);
  uint64_t v65 = *(void *)(v0 + 64);
  RCSMessageCreator.createRCSMessage(with:originalItem:in:using:)(v65, v63, v64, v0 + 24, v0 + 32);
}

uint64_t sub_1FCC0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v5 = sub_1FEE0;
  }
  else {
    uint64_t v5 = sub_1FDE4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1FDE4()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[8];
  swift_release();
  v2(v1, v3);
  uint64_t v5 = type metadata accessor for RCSMessage(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1FEE0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v3 = v0[21];
  swift_release();
  v2(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

unint64_t sub_1FF84()
{
  unint64_t result = qword_1281F0;
  if (!qword_1281F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1281F0);
  }
  return result;
}

uint64_t sub_1FFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[40] = a5;
  v6[41] = v5;
  v6[38] = a3;
  v6[39] = a4;
  v6[36] = a1;
  v6[37] = a2;
  uint64_t v7 = sub_F70F0();
  v6[42] = v7;
  v6[43] = *(void *)(v7 - 8);
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  sub_F74E0();
  v6[46] = sub_F74D0();
  uint64_t v9 = sub_F7470();
  v6[47] = v9;
  v6[48] = v8;
  return _swift_task_switch(sub_200E4, v9, v8);
}

void sub_200E4()
{
  uint64_t v51 = v0;
  uint64_t v1 = *(void **)(v0 + 296);
  uint64_t v2 = sub_F6F30();
  *(void *)(v0 + 392) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = v3;
  *(void *)(v0 + 400) = v3;
  *(void *)(v0 + 408) = *(void *)(v3 + 64);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 416) = v5;
  sub_551C(&qword_1281E8);
  uint64_t v6 = swift_task_alloc();
  id v7 = [v1 guid];
  if (!v7)
  {
    __break(1u);
LABEL_32:

    __break(1u);
LABEL_33:
    __break(1u);
    return;
  }
  uint64_t v8 = v7;
  sub_F7220();

  sub_F6EF0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v2) == 1)
  {
    uint64_t v10 = *(void *)(v0 + 344);
    uint64_t v9 = *(void *)(v0 + 352);
    uint64_t v11 = *(void *)(v0 + 336);
    uint64_t v12 = *(void **)(v0 + 296);
    swift_release();
    sub_1E944(v6, &qword_1281E8);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v13, v11);
    id v14 = v12;
    os_log_type_t v15 = sub_F70D0();
    os_log_type_t v16 = sub_F76A0();
    if (!os_log_type_enabled(v15, v16))
    {
      uint64_t v38 = *(void *)(v0 + 344);
      uint64_t v37 = *(void *)(v0 + 352);
      uint64_t v39 = *(void *)(v0 + 336);
      unint64_t v40 = *(void **)(v0 + 296);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
      goto LABEL_17;
    }
    uint64_t v17 = *(void **)(v0 + 296);
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(_DWORD *)id v18 = 136315138;
    id v19 = [v17 guid];
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v47 = *(void *)(v0 + 344);
      uint64_t v48 = *(void *)(v0 + 336);
      uint64_t v49 = *(void *)(v0 + 352);
      uint64_t v21 = *(void **)(v0 + 296);
      uint64_t v22 = sub_F7220();
      unint64_t v24 = v23;

      *(void *)(v0 + 240) = sub_A3FC(v22, v24, &v50);
      sub_F77B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v15, v16, "Non-UUID message GUID %s passed to RCSServiceSession?!", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
LABEL_17:
      sub_1FF84();
      swift_allocError();
      *(_DWORD *)uint64_t v41 = 0;
      *(unsigned char *)(v41 + 4) = 1;
      swift_willThrow();
      goto LABEL_18;
    }
    goto LABEL_32;
  }
  uint64_t v25 = *(void *)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v6, v2);
  swift_task_dealloc();
  uint64_t v26 = sub_F7220();
  if (!*(void *)(v25 + 16) || (unint64_t v28 = sub_1C9BC(v26, v27), (v29 & 1) == 0))
  {
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_BAD8(*(void *)(*(void *)(v0 + 312) + 56) + 32 * v28, v0 + 144);
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 168))
  {
LABEL_14:
    swift_release();
    sub_1E944(v0 + 144, &qword_127FF8);
LABEL_15:
    sub_1FF84();
    swift_allocError();
    *(_DWORD *)uint64_t v36 = 4;
    *(unsigned char *)(v36 + 4) = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v2);
    swift_task_dealloc();
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    id v42 = *(void (**)(void))(v0 + 8);
    v42();
    return;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    goto LABEL_15;
  }
  uint64_t v31 = *(void *)(v0 + 224);
  uint64_t v30 = *(void *)(v0 + 232);
  uint64_t v32 = sub_F7220();
  if (*(void *)(v25 + 16) && (unint64_t v34 = sub_1C9BC(v32, v33), (v35 & 1) != 0))
  {
    sub_BAD8(*(void *)(*(void *)(v0 + 312) + 56) + 32 * v34, v0 + 176);
  }
  else
  {
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 200))
  {
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v0 + 208);
      uint64_t v30 = *(void *)(v0 + 216);
    }
  }
  else
  {
    sub_1E944(v0 + 176, &qword_127FF8);
  }
  *(void *)(v0 + 424) = v31;
  *(void *)(v0 + 432) = v30;
  uint64_t v43 = *(void *)(*(void *)(v0 + 328) + OBJC_IVAR___RCSServiceSession_state);
  *(void *)(v0 + 440) = v43;
  uint64_t v44 = *(void *)(v43 + 48);
  *(void *)(v0 + 448) = v44;
  if (!v44) {
    goto LABEL_33;
  }
  *(void *)(v0 + 280) = *(void *)(v0 + 320);
  swift_retain();
  uint64_t v45 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v45;
  void *v45 = v0;
  v45[1] = sub_20758;
  uint64_t v46 = *(void *)(v0 + 296);
  RCSMessageCreator.createSenderInfo(with:for:using:)(v0 + 16, v46, v31, v30);
}

uint64_t sub_20758()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 376);
    uint64_t v4 = *(void *)(v2 + 384);
    uint64_t v5 = sub_20EDC;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 376);
    uint64_t v4 = *(void *)(v2 + 384);
    uint64_t v5 = sub_20888;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_20888()
{
  unint64_t v40 = v0;
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[42];
  uint64_t v6 = v0[43];
  uint64_t v7 = (void *)v0[40];
  uint64_t v8 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v8, v5);
  uint64_t v9 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v9, v1, v2);
  id v10 = v7;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_F70D0();
  os_log_type_t v12 = sub_F7680();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v34 = v0[54];
    uint64_t v35 = v0[53];
    uint64_t v13 = v0[50];
    uint64_t v32 = v0[49];
    uint64_t v36 = v0[43];
    uint64_t v37 = v0[42];
    uint64_t v38 = v0[45];
    id v14 = (void *)v0[40];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412802;
    v0[32] = v14;
    id v16 = v14;
    sub_F77B0();
    *uint64_t v33 = v14;

    *(_WORD *)(v15 + 12) = 2080;
    sub_27EAC();
    uint64_t v17 = sub_F7B20();
    v0[33] = sub_A3FC(v17, v18, &v39);
    sub_F77B0();
    swift_bridgeObjectRelease();
    id v19 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v19(v9, v32);
    *(_WORD *)(v15 + 22) = 2080;
    swift_bridgeObjectRetain();
    v0[34] = sub_A3FC(v35, v34, &v39);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v11, v12, "Using context %@ for sending message %s to broadcast recipient %s", (uint8_t *)v15, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v37);
    uint64_t result = swift_task_dealloc();
  }
  else
  {
    uint64_t v22 = v0[49];
    uint64_t v21 = v0[50];
    uint64_t v23 = v0[45];
    uint64_t v24 = v0[42];
    uint64_t v25 = v0[43];
    uint64_t v26 = (void *)v0[40];

    id v19 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v19(v9, v22);
    swift_bridgeObjectRelease_n();

    swift_task_dealloc();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
  v0[59] = v19;
  uint64_t v27 = *(void *)(v0[55] + 48);
  v0[60] = v27;
  if (v27)
  {
    v0[31] = v0[40];
    swift_retain();
    unint64_t v28 = (void *)swift_task_alloc();
    v0[61] = v28;
    *unint64_t v28 = v0;
    v28[1] = sub_20CAC;
    uint64_t v29 = v0[37];
    uint64_t v30 = v0[38];
    uint64_t v31 = v0[36];
    return RCSMessageCreator.createRCSMessage(with:originalItem:with:using:)(v31, v29, v30, (uint64_t)(v0 + 2), (uint64_t)(v0 + 31));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20CAC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 376);
  uint64_t v4 = *(void *)(v2 + 384);
  if (v0) {
    uint64_t v5 = sub_20F80;
  }
  else {
    uint64_t v5 = sub_20DD0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_20DD0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[59];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[49];
  uint64_t v4 = v0[36];
  swift_release();
  sub_27EF8((uint64_t)(v0 + 2));
  v1(v2, v3);
  uint64_t v5 = type metadata accessor for RCSMessage(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_20EDC()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[50];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_20F80()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[59];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[49];
  swift_release();
  sub_27EF8((uint64_t)(v0 + 2));
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2103C(uint64_t a1, void *a2)
{
  id v102 = a2;
  uint64_t v3 = type metadata accessor for RCSMessage(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v97 = (uint64_t)v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v95 = (uint64_t)v89 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v94 = (uint64_t)v89 - v9;
  __chkstk_darwin(v8);
  id v93 = (char *)v89 - v10;
  uint64_t v101 = sub_F70F0();
  uint64_t v99 = *(void *)(v101 - 8);
  uint64_t v11 = __chkstk_darwin(v101);
  uint64_t v13 = (char *)v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  unint64_t v98 = (char *)v89 - v15;
  __chkstk_darwin(v14);
  uint64_t v96 = (char *)v89 - v16;
  uint64_t v17 = sub_551C((uint64_t *)&unk_128170);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v89 - v21;
  uint64_t v23 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)v89 - v29;
  uint64_t v31 = v3;
  uint64_t v32 = *(int *)(v3 + 28);
  uint64_t v33 = v28;
  uint64_t v104 = (uint8_t *)a1;
  uint64_t v100 = a1 + v32;
  sub_28874(a1 + v32, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v33) == 1)
  {
    sub_1E944((uint64_t)v22, (uint64_t *)&unk_128170);
    uint64_t v34 = v31;
    goto LABEL_16;
  }
  id v92 = v20;
  char v91 = v13;
  uint64_t v35 = type metadata accessor for RCSMessage.Content;
  sub_2896C((uint64_t)v22, (uint64_t)v30, type metadata accessor for RCSMessage.Content);
  sub_28FD8((uint64_t)v30, (uint64_t)v27, type metadata accessor for RCSMessage.Content);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v90 = v31;
    uint64_t v38 = v24;
  }
  else
  {
    uint64_t v37 = v33;
    uint64_t v34 = v31;
    if (EnumCaseMultiPayload != 1)
    {
      sub_288DC((uint64_t)v27, type metadata accessor for RCSMessage.Content);
      uint64_t v65 = (uint64_t)v30;
LABEL_15:
      sub_288DC(v65, type metadata accessor for RCSMessage.Content);
      goto LABEL_16;
    }
    uint64_t v38 = v24;
    uint64_t v90 = v31;
    sub_551C(&qword_128218);
    swift_release();
    uint64_t v35 = type metadata accessor for RCSFile;
    uint64_t v33 = v37;
  }
  sub_288DC((uint64_t)v27, v35);
  uint64_t v39 = sub_F6F30();
  v89[2] = v89;
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v42 = (char *)v89 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6F20();
  uint64_t v43 = sub_F6F00();
  unint64_t v45 = v44;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
  uint64_t v46 = v105;
  sub_27F4C((uint64_t)v104, (uint64_t)v105);
  if (v107 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = (uint64_t *)v106;
  }
  sub_27FFC((uint64_t)v46, (uint64_t)&v108);
  uint64_t v47 = (uint64_t)v92;
  unsigned char *v92 = 0;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v47, 0, 1, v33);
  uint64_t v48 = v103;
  sub_21E9C(v43, v45, (uint64_t)&v108, v47, 0, v102);
  uint64_t v34 = v90;
  if (v48)
  {
    v89[1] = v48;
    uint64_t v103 = 0;
    swift_bridgeObjectRelease();
    sub_1E944(v47, (uint64_t *)&unk_128170);
    sub_27FA8((uint64_t)&v108);
    uint64_t v49 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v50 = v99;
    uint64_t v51 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v91, v49, v101);
    uint64_t v52 = (uint64_t)v104;
    uint64_t v53 = v95;
    sub_28FD8((uint64_t)v104, v95, type metadata accessor for RCSMessage);
    uint64_t v54 = v97;
    sub_28FD8(v52, v97, type metadata accessor for RCSMessage);
    id v55 = sub_F70D0();
    int v56 = sub_F7690();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      LODWORD(v92) = v56;
      uint64_t v57 = v54;
      uint64_t v58 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 136315394;
      uint64_t v60 = *(void *)(v53 + 128);
      unint64_t v59 = *(void *)(v53 + 136);
      swift_bridgeObjectRetain();
      v105[0] = sub_A3FC(v60, v59, &v109);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_288DC(v53, type metadata accessor for RCSMessage);
      *(_WORD *)(v58 + 12) = 2080;
      sub_27F4C(v57, (uint64_t)v105);
      uint64_t v61 = v105;
      if (v107 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v61 = (uint64_t *)v106;
      }
      sub_27FFC((uint64_t)v61, (uint64_t)&v108);
      unint64_t v62 = RCSDestination.description.getter();
      unint64_t v64 = v63;
      sub_27FA8((uint64_t)&v108);
      v105[0] = sub_A3FC(v62, v64, &v109);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_288DC(v97, type metadata accessor for RCSMessage);
      _os_log_impl(&dword_0, v55, (os_log_type_t)v92, "Failed to revoke typing indicator while sending %s to %s, still attempting to send", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v99 + 8))(v91, v101);
      uint64_t v65 = (uint64_t)v30;
      goto LABEL_15;
    }
    swift_errorRelease();

    sub_288DC(v54, type metadata accessor for RCSMessage);
    sub_288DC(v53, type metadata accessor for RCSMessage);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v101);
    sub_288DC((uint64_t)v30, type metadata accessor for RCSMessage.Content);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1E944(v47, (uint64_t *)&unk_128170);
    sub_27FA8((uint64_t)&v108);
    sub_288DC((uint64_t)v30, type metadata accessor for RCSMessage.Content);
    uint64_t v103 = 0;
  }
LABEL_16:
  uint64_t v66 = *((void *)v104 + 16);
  unint64_t v67 = *((void *)v104 + 17);
  uint64_t v68 = v105;
  sub_27F4C((uint64_t)v104, (uint64_t)v105);
  if (v107 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v68 = (uint64_t *)v106;
  }
  sub_27FFC((uint64_t)v68, (uint64_t)&v108);
  uint64_t v69 = v103;
  char v70 = sub_21E9C(v66, v67, (uint64_t)&v108, v100, *(void *)&v104[*(int *)(v34 + 36)], v102);
  uint64_t result = sub_27FA8((uint64_t)&v108);
  if (!v69)
  {
    uint64_t v72 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v73 = v99;
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
    if (v70)
    {
      uint64_t v75 = (uint64_t)v93;
      uint64_t v76 = v96;
      v74(v96, v72, v101);
      sub_28FD8((uint64_t)v104, v75, type metadata accessor for RCSMessage);
      uint64_t v77 = sub_F70D0();
      os_log_type_t v78 = sub_F7670();
      if (os_log_type_enabled(v77, v78))
      {
        long long v79 = (uint8_t *)swift_slowAlloc();
        v105[0] = swift_slowAlloc();
        *(_DWORD *)long long v79 = 136315138;
        uint64_t v104 = v79 + 4;
        uint64_t v80 = v73;
        uint64_t v81 = *(void *)(v75 + 128);
        unint64_t v82 = *(void *)(v75 + 136);
        swift_bridgeObjectRetain();
        uint64_t v108 = sub_A3FC(v81, v82, v105);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_288DC(v75, type metadata accessor for RCSMessage);
        _os_log_impl(&dword_0, v77, v78, "Handed %s off to CT!", v79, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v80 + 8))(v96, v101);
      }
      else
      {
        sub_288DC(v75, type metadata accessor for RCSMessage);

        (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v101);
      }
      return 0;
    }
    else
    {
      v74(v98, v72, v101);
      uint64_t v83 = v94;
      sub_28FD8((uint64_t)v104, v94, type metadata accessor for RCSMessage);
      long long v84 = sub_F70D0();
      os_log_type_t v85 = sub_F7690();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        v105[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        uint64_t v87 = *(void *)(v83 + 128);
        unint64_t v88 = *(void *)(v83 + 136);
        swift_bridgeObjectRetain();
        uint64_t v108 = sub_A3FC(v87, v88, v105);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_288DC(v83, type metadata accessor for RCSMessage);
        _os_log_impl(&dword_0, v84, v85, "Didn't send message %s!", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v101);
      }
      else
      {
        sub_288DC(v83, type metadata accessor for RCSMessage);

        (*(void (**)(char *, uint64_t))(v73 + 8))(v98, v101);
      }
      return 5;
    }
  }
  return result;
}

uint64_t sub_21E9C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  os_log_type_t v85 = a6;
  uint64_t v87 = a5;
  uint64_t v89 = a1;
  uint64_t v9 = type metadata accessor for RCSFile(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v75 = &v73[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_551C((uint64_t *)&unk_128170);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v82 = &v73[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v73[-v15];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v73[-v18];
  __chkstk_darwin(v17);
  uint64_t v21 = &v73[-v20];
  uint64_t v22 = sub_F70F0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v81 = &v73[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v27 = &v73[-v26];
  uint64_t v28 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v29 = *(void (**)(void))(v23 + 16);
  uint64_t v78 = v28;
  uint64_t v79 = v23 + 16;
  uint64_t v77 = (void (*)(unsigned char *, uint64_t, uint64_t))v29;
  v29(v27);
  uint64_t v84 = a4;
  sub_28874(a4, (uint64_t)v21);
  uint64_t v83 = a3;
  sub_28058(a3, (uint64_t)v91);
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_F70D0();
  int v31 = sub_F7670();
  BOOL v32 = os_log_type_enabled(v30, (os_log_type_t)v31);
  uint64_t v88 = v23;
  if (v32)
  {
    int v74 = v31;
    uint64_t v76 = v22;
    uint64_t v80 = v16;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315650;
    sub_28874((uint64_t)v21, (uint64_t)v19);
    uint64_t v34 = type metadata accessor for RCSMessage.Content(0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v19, 1, v34) == 1)
    {
      sub_1E944((uint64_t)v19, (uint64_t *)&unk_128170);
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
    }
    else
    {
      char v55 = RCSMessage.Content.type.getter();
      sub_288DC((uint64_t)v19, type metadata accessor for RCSMessage.Content);
      unint64_t v36 = 0xE400000000000000;
      uint64_t v35 = 1954047348;
      switch(v55)
      {
        case 1:
          unint64_t v36 = 0xE800000000000000;
          uint64_t v35 = 0x726566736E617274;
          break;
        case 2:
          unint64_t v36 = 0xE800000000000000;
          uint64_t v35 = 0x6E6F697461636F6CLL;
          break;
        case 3:
          unint64_t v36 = 0xE500000000000000;
          uint64_t v35 = 0x70756F7267;
          break;
        case 4:
          unint64_t v36 = 0xE600000000000000;
          uint64_t v35 = 0x676E69707974;
          break;
        case 5:
          unint64_t v36 = 0xE900000000000073;
          uint64_t v35 = 0x6472614368636972;
          break;
        case 6:
          unint64_t v36 = 0xEE00796C70655264;
          goto LABEL_36;
        case 7:
          unint64_t v36 = 0xEF6E6F6974634164;
LABEL_36:
          uint64_t v35 = 0x6574736567677573;
          break;
        case 8:
          unint64_t v36 = 0xEC0000006E6F6974;
          uint64_t v35 = 0x6341656369766564;
          break;
        default:
          break;
      }
    }
    uint64_t v90 = sub_A3FC(v35, v36, &v93);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)v21, (uint64_t *)&unk_128170);
    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v37 = v89;
    uint64_t v90 = sub_A3FC(v89, a2, &v93);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 22) = 2080;
    unint64_t v38 = RCSDestination.description.getter();
    uint64_t v90 = sub_A3FC(v38, v39, &v93);
    sub_F77B0();
    uint64_t v40 = v37;
    swift_bridgeObjectRelease();
    sub_27FA8((uint64_t)v91);
    _os_log_impl(&dword_0, v30, (os_log_type_t)v74, "Sending %s message with ID %s to %s", (uint8_t *)v33, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v88 + 8);
    uint64_t v22 = v76;
    v41(v27, v76);
    id v42 = v85;
    uint64_t v43 = v86;
    uint64_t v16 = v80;
  }
  else
  {
    sub_1E944((uint64_t)v21, (uint64_t *)&unk_128170);
    swift_bridgeObjectRelease_n();
    sub_27FA8((uint64_t)v91);

    uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v23 + 8);
    v41(v27, v22);
    id v42 = v85;
    uint64_t v43 = v86;
    uint64_t v40 = v89;
  }
  uint64_t v44 = v84;
  sub_28058(v83, (uint64_t)v92);
  v91[0] = v40;
  v91[1] = a2;
  v92[8] = v42;
  v92[9] = v87;
  sub_28874(v44, (uint64_t)v16);
  uint64_t v45 = type metadata accessor for RCSMessage.Content(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v16, 1, v45) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v46 = v42;
LABEL_8:
    uint64_t v47 = v81;
    v77(v81, v78, v22);
    swift_bridgeObjectRetain_n();
    uint64_t v48 = sub_F70D0();
    os_log_type_t v49 = sub_F76A0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v80 = v16;
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      uint64_t v76 = v22;
      *(_DWORD *)uint64_t v50 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_A3FC(v89, a2, &v93);
      uint64_t v16 = v80;
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v48, v49, "Attempt to send invalid/unsupported message %s", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v51 = v81;
      uint64_t v52 = v76;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v51 = v47;
      uint64_t v52 = v22;
    }
    v41(v51, v52);
    sub_2893C((uint64_t)v91);
    LOBYTE(v45) = 0;
  }
  else
  {
    sub_28874((uint64_t)v16, (uint64_t)v82);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRetain();
        id v53 = v42;
        swift_bridgeObjectRetain();
        swift_release();
        char v54 = sub_264D8(v91);
        goto LABEL_18;
      case 1u:
        sub_551C(&qword_128218);
        int v56 = v82;
        swift_bridgeObjectRetain();
        id v57 = v42;
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v58 = v75;
        sub_2896C((uint64_t)v56, (uint64_t)v75, type metadata accessor for RCSFile);
        LOBYTE(v45) = sub_26DC4(v91, (uint64_t)v58);
        sub_288DC((uint64_t)v58, type metadata accessor for RCSFile);
        goto LABEL_28;
      case 2u:
        uint64_t v59 = *((void *)v82 + 2);
        uint64_t v60 = (void *)*((void *)v82 + 3);
        swift_bridgeObjectRetain();
        id v61 = v42;
        swift_bridgeObjectRetain();
        swift_release();
        char v54 = sub_269A0(v91, v59, v60);
LABEL_18:
        LOBYTE(v45) = v54;
        sub_2893C((uint64_t)v91);
        swift_bridgeObjectRelease();
        break;
      case 4u:
        char v63 = *v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v64 = v42;
        LOBYTE(v45) = sub_27270(v91, v63);
        goto LABEL_28;
      case 6u:
        uint64_t v65 = *(void *)v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v66 = v42;
        LOBYTE(v45) = sub_277E8(v91, v65, (void (*)(void))sub_29474, (uint64_t (*)(void))RCSSuggestedReply.responseForSuggestedReply.getter, (SEL *)&selRef_sendResponseForSuggestedReply_to_withMessageID_response_withError_);
        sub_2893C((uint64_t)v91);
        swift_release();
        break;
      case 7u:
        uint64_t v67 = *(void *)v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v68 = v42;
        char v69 = sub_277E8(v91, v67, (void (*)(void))sub_29474, (uint64_t (*)(void))RCSSuggestedAction.responseForSuggestedAction.getter, (SEL *)&selRef_sendResponseForSuggestedAction_to_withMessageID_response_withError_);
        if (!v43) {
          LOBYTE(v45) = v69;
        }
        sub_2893C((uint64_t)v91);
        swift_release();
        break;
      case 8u:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v70 = v42;
        unsigned __int8 v71 = sub_279FC(v91);
        if (!v43) {
          LOBYTE(v45) = v71;
        }
LABEL_28:
        sub_2893C((uint64_t)v91);
        break;
      default:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v62 = v42;
        sub_288DC((uint64_t)v82, type metadata accessor for RCSMessage.Content);
        goto LABEL_8;
    }
  }
  sub_1E944((uint64_t)v16, (uint64_t *)&unk_128170);
  return v45 & 1;
}

uint64_t sub_22B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[79] = v3;
  v4[78] = a3;
  v4[77] = a2;
  v4[76] = a1;
  type metadata accessor for RCSMessage(0);
  v4[80] = swift_task_alloc();
  v4[81] = swift_task_alloc();
  uint64_t v5 = sub_F70F0();
  v4[82] = v5;
  v4[83] = *(void *)(v5 - 8);
  v4[84] = swift_task_alloc();
  v4[85] = swift_task_alloc();
  v4[86] = swift_task_alloc();
  v4[87] = swift_task_alloc();
  uint64_t v6 = sub_551C(&qword_127C70);
  v4[88] = v6;
  v4[89] = *(void *)(v6 - 8);
  v4[90] = swift_task_alloc();
  v4[91] = sub_F74E0();
  v4[92] = sub_F74D0();
  uint64_t v8 = sub_F7470();
  v4[93] = v8;
  v4[94] = v7;
  return _swift_task_switch(sub_22CEC, v8, v7);
}

uint64_t sub_22CEC()
{
  uint64_t v1 = (void *)sub_F6D20();
  *(void *)(v0 + 760) = v1;
  id v2 = [v1 domain];
  uint64_t v3 = sub_F7220();
  uint64_t v5 = v4;

  uint64_t v6 = CTLazuliOperationError.errorDomain.unsafeMutableAddressor();
  if (v3 == *v6 && v5 == v6[1])
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_F7B60();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
LABEL_6:
      swift_release();
LABEL_22:
      id v36 = [v1 domain];
      uint64_t v37 = sub_F7220();
      uint64_t v39 = v38;

      if (v37 == *v6 && v39 == v6[1])
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v40 = sub_F7B60();
        swift_bridgeObjectRelease();
        if ((v40 & 1) == 0) {
          goto LABEL_30;
        }
      }
      uint64_t v41 = (char *)[v1 code];
      if (qword_127BD8 != -1) {
        swift_once();
      }
      uint64_t v42 = *(void *)(v0 + 720);
      uint64_t v43 = *(void *)(v0 + 712);
      uint64_t v44 = *(void *)(v0 + 704);
      uint64_t v45 = sub_8B44(v44, (uint64_t)qword_127F40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v45, v44);
      sub_F6FF0();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
      if ((*(unsigned char *)(v0 + 140) & 1) != 0 || v41 == (unsigned char *)&dword_8 + 1)
      {
        uint64_t v46 = v0 + 144;
        sub_27F4C(*(void *)(v0 + 608), v0 + 144);
        if (*(unsigned char *)(v0 + 266) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v0 + 208;
        }
        sub_27FFC(v46, v0 + 336);
        if ((*(unsigned char *)(v0 + 393) & 1) == 0)
        {

          sub_27FA8(v0 + 336);
          goto LABEL_39;
        }
        uint64_t v47 = *(char **)(v0 + 632);
        sub_1E87C((long long *)(v0 + 336), v0 + 480);
        uint64_t v48 = *(void *)(v0 + 504);
        uint64_t v49 = *(void *)(v0 + 512);
        uint64_t v50 = sub_6BA8((void *)(v0 + 480), v48);
        sub_35F9C((uint64_t)v50, v47, v48, v49);
        if (v51)
        {
          uint64_t v52 = v51;
          uint64_t v53 = *(void *)(v0 + 688);
          uint64_t v54 = *(void *)(v0 + 664);
          uint64_t v55 = *(void *)(v0 + 656);
          uint64_t v56 = Logger.rcs.unsafeMutableAddressor();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v56, v55);
          id v57 = sub_F70D0();
          os_log_type_t v58 = sub_F7670();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v59 = 0;
            _os_log_impl(&dword_0, v57, v58, "We were evicted from the group, failing message send and updating chat join state", v59, 2u);
            swift_slowDealloc();
          }
          uint64_t v60 = *(void *)(v0 + 688);
          uint64_t v61 = *(void *)(v0 + 664);
          uint64_t v62 = *(void *)(v0 + 656);

          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
          sub_6BEC(v0 + 480);
          unsigned __int8 v63 = 0;
          uint64_t v64 = 20;
          goto LABEL_40;
        }
        sub_6BEC(v0 + 480);
      }
LABEL_30:

LABEL_39:
      uint64_t v64 = 0;
      unsigned __int8 v63 = 1;
LABEL_40:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v65 = *(uint64_t (**)(unint64_t))(v0 + 8);
      return v65(v64 | ((unint64_t)v63 << 32));
    }
  }
  uint64_t v9 = (int *)[v1 code];
  if (qword_127BD0 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)(v0 + 720);
  uint64_t v11 = *(void *)(v0 + 712);
  uint64_t v12 = *(void *)(v0 + 704);
  uint64_t v13 = sub_8B44(v12, (uint64_t)qword_127F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
  sub_F6FF0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  if ((*(unsigned char *)(v0 + 139) & 1) == 0 && v9 != &dword_8) {
    goto LABEL_6;
  }
  uint64_t v14 = v0 + 16;
  sub_27F4C(*(void *)(v0 + 608), v0 + 16);
  if (*(unsigned char *)(v0 + 138) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v0 + 80;
  }
  sub_27FFC(v14, v0 + 272);
  if ((*(unsigned char *)(v0 + 329) & 1) == 0)
  {
    swift_release();
    sub_27FA8(v0 + 272);
    goto LABEL_22;
  }
  uint64_t v15 = *(char **)(v0 + 632);
  sub_1E87C((long long *)(v0 + 272), v0 + 440);
  uint64_t v16 = *(void *)(v0 + 464);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = sub_6BA8((void *)(v0 + 440), v16);
  sub_35F9C((uint64_t)v18, v15, v16, v17);
  *(void *)(v0 + 768) = v19;
  if (!v19)
  {
    sub_6BEC(v0 + 440);
    goto LABEL_6;
  }
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v0 + 696);
  uint64_t v22 = *(void *)(v0 + 664);
  uint64_t v23 = *(void *)(v0 + 656);
  uint64_t v24 = Logger.rcs.unsafeMutableAddressor();
  *(void *)(v0 + 776) = v24;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  *(void *)(v0 + 784) = v25;
  *(void *)(v0 + 792) = (v22 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v25(v21, v24, v23);
  uint64_t v26 = sub_F70D0();
  os_log_type_t v27 = sub_F7670();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v26, v27, "Group recreation requested, recreating group", v28, 2u);
    swift_slowDealloc();
  }
  uint64_t v29 = *(void *)(v0 + 696);
  uint64_t v30 = *(void *)(v0 + 664);
  uint64_t v31 = *(void *)(v0 + 656);

  BOOL v32 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  *(void *)(v0 + 800) = v32;
  *(void *)(v0 + 808) = (v30 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v32(v29, v31);
  *(void *)(v0 + 424) = sub_6CA4(0, &qword_127C48);
  *(void *)(v0 + 432) = &protocol witness table for IMDChat;
  *(void *)(v0 + 400) = v20;
  id v33 = v20;
  IMDChatRCSGroupIdentity.reset()();
  sub_6AA0(v0 + 400);
  *(void *)(v0 + 816) = sub_F74D0();
  uint64_t v35 = sub_F7470();
  *(void *)(v0 + 824) = v35;
  *(void *)(v0 + 832) = v34;
  return _swift_task_switch(sub_2342C, v35, v34);
}

void sub_2342C()
{
  uint64_t v1 = *(void *)(*(void *)(v0[79] + OBJC_IVAR___RCSServiceSession_state) + 40);
  v0[105] = v1;
  if (v1)
  {
    uint64_t v2 = v0[77];
    v0[72] = v0[96];
    v0[73] = v2;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[106] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_23524;
    RCSGroupController.resolveGroupIdentity(for:subscriptionContext:)((uint64_t)(v0 + 65), (uint64_t)(v0 + 72), (uint64_t)(v0 + 73));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23524()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 856) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 832);
  uint64_t v4 = *(void *)(v2 + 824);
  if (v0) {
    uint64_t v5 = sub_23AA0;
  }
  else {
    uint64_t v5 = sub_23650;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_23650()
{
  swift_release();
  sub_6BEC(v0 + 520);
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  return _swift_task_switch(sub_236C4, v2, v1);
}

uint64_t sub_236C4()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 856);
  uint64_t v2 = *(void **)(v0 + 616);
  uint64_t v3 = *(void *)(v0 + 608);
  swift_release();
  unsigned int v4 = sub_2103C(v3, v2);
  if (v1)
  {
    uint64_t v5 = *(void *)(v0 + 640);
    uint64_t v6 = *(void *)(v0 + 608);
    (*(void (**)(void, void, void))(v0 + 784))(*(void *)(v0 + 672), *(void *)(v0 + 776), *(void *)(v0 + 656));
    sub_28FD8(v6, v5, type metadata accessor for RCSMessage);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = sub_F70D0();
    os_log_type_t v8 = sub_F7690();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
    uint64_t v29 = *(void **)(v0 + 768);
    uint64_t v11 = *(void *)(v0 + 672);
    uint64_t v12 = *(void *)(v0 + 656);
    uint64_t v13 = *(void *)(v0 + 640);
    if (v9)
    {
      os_log_type_t v27 = *(void **)(v0 + 760);
      uint64_t v14 = swift_slowAlloc();
      uint64_t v28 = v12;
      uint64_t v15 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v26 = v10;
      uint64_t v25 = v11;
      uint64_t v16 = *(void *)(v13 + 128);
      unint64_t v17 = *(void *)(v13 + 136);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 592) = sub_A3FC(v16, v17, &v30);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_288DC(v13, type metadata accessor for RCSMessage);
      *(_WORD *)(v14 + 12) = 2112;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 560) = v18;
      sub_F77B0();
      void *v15 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v7, v8, "Re-send after group creation failed, failing message %s due to error %@", (uint8_t *)v14, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v26(v25, v28);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      sub_288DC(v13, type metadata accessor for RCSMessage);
      swift_errorRelease();

      v10(v11, v12);
    }
    sub_6BEC(v0 + 440);
    uint64_t v22 = 4;
  }
  else
  {
    unsigned int v19 = v4;
    uint64_t v20 = *(void **)(v0 + 768);
    uint64_t v21 = *(void **)(v0 + 760);
    sub_6BEC(v0 + 440);

    uint64_t v22 = v19;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  LOBYTE(v30) = 0;
  uint64_t v23 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v23(v22);
}

uint64_t sub_23AA0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  return _swift_task_switch(sub_23B08, v2, v1);
}

uint64_t sub_23B08()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 784);
  uint64_t v2 = *(void *)(v0 + 776);
  uint64_t v3 = *(void *)(v0 + 680);
  uint64_t v4 = *(void *)(v0 + 656);
  uint64_t v5 = *(void *)(v0 + 648);
  uint64_t v6 = *(void *)(v0 + 608);
  swift_release();
  v1(v3, v2, v4);
  sub_28FD8(v6, v5, type metadata accessor for RCSMessage);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F7690();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
    uint64_t v22 = *(void **)(v0 + 760);
    uint64_t v25 = *(void *)(v0 + 680);
    uint64_t v23 = *(void **)(v0 + 768);
    uint64_t v24 = *(void *)(v0 + 656);
    uint64_t v9 = *(void *)(v0 + 648);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v12 = *(void *)(v9 + 128);
    unint64_t v13 = *(void *)(v9 + 136);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 568) = sub_A3FC(v12, v13, &v27);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_288DC(v9, type metadata accessor for RCSMessage);
    *(_WORD *)(v10 + 12) = 2112;
    swift_errorRetain();
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 600) = v14;
    sub_F77B0();
    *uint64_t v11 = v14;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v7, v8, "Failed to re-create group, failing message %s due to error %@", (uint8_t *)v10, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v26(v25, v24);
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
    uint64_t v16 = *(void **)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 680);
    uint64_t v18 = *(void *)(v0 + 656);
    uint64_t v19 = *(void *)(v0 + 648);

    swift_errorRelease();
    swift_errorRelease();
    sub_288DC(v19, type metadata accessor for RCSMessage);
    swift_errorRelease();

    v15(v17, v18);
  }
  sub_6BEC(v0 + 440);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(4);
}

uint64_t sub_23ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[103] = v6;
  v7[102] = a6;
  v7[101] = a5;
  v7[100] = a4;
  v7[99] = a3;
  v7[98] = a2;
  v7[97] = a1;
  uint64_t v8 = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  v7[104] = v8;
  v7[105] = *(void *)(v8 + 64);
  v7[106] = swift_task_alloc();
  v7[107] = swift_task_alloc();
  v7[108] = swift_task_alloc();
  v7[109] = swift_task_alloc();
  v7[110] = swift_task_alloc();
  uint64_t v9 = sub_F70F0();
  v7[111] = v9;
  v7[112] = *(void *)(v9 - 8);
  v7[113] = swift_task_alloc();
  v7[114] = swift_task_alloc();
  v7[115] = swift_task_alloc();
  v7[116] = swift_task_alloc();
  sub_F74E0();
  v7[117] = sub_F74D0();
  uint64_t v11 = sub_F7470();
  v7[118] = v11;
  v7[119] = v10;
  return _swift_task_switch(sub_24098, v11, v10);
}

uint64_t sub_24098()
{
  uint64_t v92 = v0;
  sub_27F4C(*(void *)(v0 + 776), v0 + 16);
  if (*(unsigned char *)(v0 + 138))
  {
    uint64_t v1 = *(void *)(v0 + 912);
    uint64_t v2 = *(void *)(v0 + 896);
    uint64_t v3 = *(void *)(v0 + 888);
    uint64_t v4 = *(void *)(v0 + 856);
    uint64_t v5 = *(void *)(v0 + 776);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_27FA8(v0 + 80);
    uint64_t v6 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
    sub_28FD8(v5, v4, type metadata accessor for RCSMessage);
    uint64_t v7 = sub_F70D0();
    os_log_type_t v8 = sub_F7690();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 912);
    uint64_t v11 = *(void *)(v0 + 896);
    uint64_t v12 = *(void *)(v0 + 888);
    uint64_t v13 = *(void *)(v0 + 856);
    if (v9)
    {
      uint64_t v88 = *(void *)(v0 + 912);
      uint64_t v86 = *(void *)(v0 + 888);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v15 = *(void *)(v13 + 128);
      unint64_t v16 = *(void *)(v13 + 136);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 736) = sub_A3FC(v15, v16, &v91);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_288DC(v13, type metadata accessor for RCSMessage);
      _os_log_impl(&dword_0, v7, v8, "Not sending message %s, not from me", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v88, v86);
    }
    else
    {
      sub_288DC(*(void *)(v0 + 856), type metadata accessor for RCSMessage);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    uint64_t v89 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 808) + **(int **)(v0 + 808));
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 1048) = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_253F4;
    uint64_t v31 = 5;
    goto LABEL_15;
  }
  uint64_t v17 = v0 + 272;
  uint64_t v18 = *(void *)(v0 + 776);
  sub_27EF8(v0 + 16);
  sub_27F4C(v18, v0 + 272);
  if (*(unsigned char *)(v0 + 394) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v0 + 336;
  }
  sub_27FFC(v17, v0 + 400);
  sub_28058(v0 + 400, v0 + 464);
  if (*(unsigned char *)(v0 + 521))
  {
    uint64_t v19 = v0 + 144;
    uint64_t v20 = *(void *)(v0 + 776);
    sub_27FA8(v0 + 464);
    sub_27F4C(v20, v0 + 144);
    if (*(unsigned char *)(v0 + 266) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v0 + 208;
    }
    sub_27FFC(v19, v0 + 592);
    if ((*(unsigned char *)(v0 + 649) & 1) == 0)
    {
      id v27 = (id)sub_27FA8(v0 + 592);
      goto LABEL_25;
    }
    uint64_t v21 = *(char **)(v0 + 824);
    sub_1E87C((long long *)(v0 + 592), v0 + 696);
    uint64_t v22 = *(void *)(v0 + 720);
    uint64_t v23 = *(void *)(v0 + 728);
    uint64_t v24 = sub_6BA8((void *)(v0 + 696), v22);
    sub_35F9C((uint64_t)v24, v21, v22, v23);
    *(void *)(v0 + 968) = v25;
    if (!v25)
    {
      id v27 = (id)sub_6BEC(v0 + 696);
      goto LABEL_25;
    }
    uint64_t v26 = v25;
    if ([v25 state])
    {
      sub_6BEC(v0 + 696);

      goto LABEL_25;
    }
    uint64_t v72 = *(void *)(v0 + 920);
    uint64_t v73 = *(void *)(v0 + 896);
    uint64_t v74 = *(void *)(v0 + 888);
    uint64_t v75 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v72, v75, v74);
    uint64_t v76 = sub_F70D0();
    os_log_type_t v77 = sub_F7690();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl(&dword_0, v76, v77, "Not sending group message, we are not a member anymore", v78, 2u);
      swift_slowDealloc();
    }
    uint64_t v79 = *(void *)(v0 + 920);
    uint64_t v80 = *(void *)(v0 + 896);
    uint64_t v81 = *(void *)(v0 + 888);
    unint64_t v82 = *(int **)(v0 + 808);

    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
    uint64_t v89 = (uint64_t (*)(uint64_t))((char *)v82 + *v82);
    id v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 976) = v70;
    void *v70 = v0;
    unsigned __int8 v71 = sub_24D10;
  }
  else
  {
    int v33 = *(unsigned __int8 *)(v0 + 520);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v27 = (id)swift_bridgeObjectRelease();
    if (!v33) {
      goto LABEL_25;
    }
    id v27 = [self sharedInstance];
    if (!v27) {
      goto LABEL_38;
    }
    uint64_t v34 = v27;
    unsigned __int8 v35 = [v27 isRBMEnabled];

    if (v35)
    {
LABEL_25:
      uint64_t v52 = *(void **)(*(void *)(*(void *)(v0 + 824) + OBJC_IVAR___RCSServiceSession_state) + 64);
      *(void *)(v0 + 984) = v52;
      if (v52)
      {
        sub_551C(&qword_1281E8);
        uint64_t v53 = swift_task_alloc();
        *(void *)(v0 + 992) = v53;
        id v54 = v52;
        sub_F6EF0();
        uint64_t v55 = sub_F6F30();
        *(void *)(v0 + 1000) = v55;
        uint64_t v56 = *(void *)(v55 - 8);
        *(void *)(v0 + 1008) = v56;
        id v27 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v53, 1, v55);
        if (v27 != 1)
        {
          uint64_t v57 = *(void *)(v0 + 872);
          uint64_t v58 = *(void *)(v0 + 840);
          uint64_t v59 = *(void *)(v0 + 832);
          uint64_t v60 = *(void **)(v0 + 824);
          uint64_t v87 = *(void *)(v0 + 816);
          uint64_t v90 = *(NSObject **)(v0 + 800);
          uint64_t v83 = *(void *)(v0 + 808);
          os_log_t loga = *(os_log_t *)(v0 + 792);
          uint64_t v61 = *(void **)(v0 + 784);
          sub_28FD8(*(void *)(v0 + 776), v57, type metadata accessor for RCSMessage);
          unint64_t v62 = (*(unsigned __int8 *)(v59 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
          unint64_t v63 = (v58 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v65 = swift_allocObject();
          *(void *)(v0 + 1016) = v65;
          *(void *)(v65 + 16) = v60;
          sub_2896C(v57, v65 + v62, type metadata accessor for RCSMessage);
          *(void *)(v65 + v63) = v61;
          id v66 = (void *)(v65 + v64);
          void *v66 = v83;
          v66[1] = v87;
          uint64_t v67 = (os_log_t *)(v65 + ((v64 + 23) & 0xFFFFFFFFFFFFFFF8));
          os_log_t *v67 = loga;
          v67[1] = v90;
          id v68 = v60;
          id v69 = v61;
          swift_retain();
          swift_retain();
          id v27 = sub_24F30;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          return _swift_task_switch(v27, v28, v29);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_38:
      __break(1u);
      return _swift_task_switch(v27, v28, v29);
    }
    uint64_t v36 = *(void *)(v0 + 928);
    uint64_t v37 = *(void *)(v0 + 896);
    uint64_t v38 = *(void *)(v0 + 888);
    uint64_t v39 = *(void *)(v0 + 880);
    uint64_t v40 = *(void *)(v0 + 776);
    uint64_t v41 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v41, v38);
    sub_28FD8(v40, v39, type metadata accessor for RCSMessage);
    uint64_t v42 = sub_F70D0();
    os_log_type_t v43 = sub_F7690();
    BOOL v44 = os_log_type_enabled(v42, v43);
    uint64_t v45 = *(void *)(v0 + 928);
    uint64_t v46 = *(void *)(v0 + 896);
    uint64_t v47 = *(void *)(v0 + 888);
    uint64_t v48 = *(void *)(v0 + 880);
    if (v44)
    {
      log = v42;
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315138;
      uint64_t v50 = *(void *)(v48 + 128);
      unint64_t v51 = *(void *)(v48 + 136);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 768) = sub_A3FC(v50, v51, &v91);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_288DC(v48, type metadata accessor for RCSMessage);
      _os_log_impl(&dword_0, log, v43, "Not sending RBM message %s, RBM is disabled in Settings", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    }
    else
    {
      sub_288DC(*(void *)(v0 + 880), type metadata accessor for RCSMessage);

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    }
    uint64_t v89 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 808) + **(int **)(v0 + 808));
    id v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 960) = v70;
    void *v70 = v0;
    unsigned __int8 v71 = sub_24B04;
  }
  v70[1] = v71;
  uint64_t v31 = 4;
LABEL_15:
  return v89(v31);
}

uint64_t sub_24B04()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 952);
  uint64_t v3 = *(void *)(v1 + 944);
  return _swift_task_switch(sub_24C24, v3, v2);
}

uint64_t sub_24C24()
{
  swift_release();
  sub_27FA8(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24D10()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 952);
  uint64_t v3 = *(void *)(v1 + 944);
  return _swift_task_switch(sub_24E30, v3, v2);
}

uint64_t sub_24E30()
{
  uint64_t v1 = *(void **)(v0 + 968);
  swift_release();

  sub_6BEC(v0 + 696);
  sub_27FA8(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24F30()
{
  uint64_t v1 = v0[127];
  uint64_t v2 = v0[126];
  uint64_t v3 = v0[125];
  uint64_t v4 = v0[124];
  uint64_t v5 = *(void *)(v0[123] + OBJC_IVAR____TtC3RCS28RCSOutgoingMessageController_operationController);
  v0[85] = type metadata accessor for RCSOutgoingMessageController.OperationID();
  v0[86] = sub_286D0();
  uint64_t v6 = sub_28728(v0 + 82);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16))(v6, v4, v3);
  uint64_t v7 = swift_allocObject();
  v0[128] = v7;
  *(void *)(v7 + 16) = &unk_128220;
  *(void *)(v7 + 24) = v1;
  uint64_t v10 = (uint64_t (*)(uint64_t *, void *, uint64_t))(*(void *)(*(void *)v5 + 216)
                                                           + **(int **)(*(void *)v5 + 216));
  swift_retain();
  os_log_type_t v8 = (void *)swift_task_alloc();
  v0[129] = (uint64_t)v8;
  *os_log_type_t v8 = v0;
  v8[1] = sub_250EC;
  return v10(v0 + 82, &unk_128BF0, v7);
}

uint64_t sub_250EC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_255F4;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v6 = v2[126];
    uint64_t v7 = v2[125];
    uint64_t v8 = v2[124];
    BOOL v9 = (void *)v2[123];
    sub_6BEC((uint64_t)(v2 + 82));

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v7);
    swift_task_dealloc();
    uint64_t v5 = v2[119];
    uint64_t v4 = v2[118];
    uint64_t v3 = sub_25280;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_25280()
{
  uint64_t v1 = v0[108];
  uint64_t v2 = v0[97];
  swift_release();
  uint64_t v3 = *(void *)(v2 + 152);
  sub_28FD8(v2, v1, type metadata accessor for RCSMessage);
  uint64_t v4 = v0[108];
  if (!v3) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_288DC(v4, type metadata accessor for RCSMessage);
  sub_E0E8();
  swift_bridgeObjectRelease();
  sub_27FA8((uint64_t)(v0 + 50));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_253F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 952);
  uint64_t v3 = *(void *)(v1 + 944);
  return _swift_task_switch(sub_25514, v3, v2);
}

uint64_t sub_25514()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255F4()
{
  uint64_t v1 = (void *)v0[123];
  sub_6BEC((uint64_t)(v0 + 82));
  swift_release();

  uint64_t v2 = v0[119];
  uint64_t v3 = v0[118];
  return _swift_task_switch(sub_25670, v3, v2);
}

uint64_t sub_25670()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[113];
  uint64_t v2 = v0[112];
  uint64_t v3 = v0[111];
  uint64_t v4 = v0[106];
  uint64_t v5 = v0[97];
  (*(void (**)(void, void))(v0[126] + 8))(v0[124], v0[125]);
  swift_task_dealloc();
  uint64_t v6 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  sub_28FD8(v5, v4, type metadata accessor for RCSMessage);
  sub_28058((uint64_t)(v0 + 50), (uint64_t)(v0 + 66));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F7690();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = v0[112];
    uint64_t v26 = v0[111];
    uint64_t v27 = v0[113];
    uint64_t v9 = v0[106];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v12 = *(void *)(v9 + 128);
    unint64_t v11 = *(void *)(v9 + 136);
    swift_bridgeObjectRetain();
    v0[93] = sub_A3FC(v12, v11, &v28);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_288DC(v9, type metadata accessor for RCSMessage);
    *(_WORD *)(v10 + 12) = 2080;
    unint64_t v13 = RCSDestination.description.getter();
    v0[94] = sub_A3FC(v13, v14, &v28);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_27FA8((uint64_t)(v0 + 66));
    *(_WORD *)(v10 + 22) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[95] = v15;
    sub_F77B0();
    *uint64_t v24 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v7, v8, "Failed to send %s to %s via CT: %@", (uint8_t *)v10, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    uint64_t v16 = v0[113];
    uint64_t v17 = v0[112];
    uint64_t v18 = v0[111];
    sub_288DC(v0[106], type metadata accessor for RCSMessage);
    sub_27FA8((uint64_t)(v0 + 66));
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  uint64_t v19 = (void *)swift_task_alloc();
  v0[132] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_25A6C;
  uint64_t v20 = v0[130];
  uint64_t v21 = v0[98];
  uint64_t v22 = v0[97];
  return sub_22B20(v22, v21, v20);
}

uint64_t sub_25A6C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))(*(void *)(v3 + 808) + **(int **)(v3 + 808));
  uint64_t v6 = (void *)swift_task_alloc();
  if ((a1 & 0x100000000) != 0)
  {
    *(void *)(v4 + 1072) = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_25E94;
    uint64_t v7 = 4;
  }
  else
  {
    *(void *)(v4 + 1064) = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_25C7C;
    uint64_t v7 = a1;
  }
  return v9(v7);
}

uint64_t sub_25C7C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 952);
  uint64_t v3 = *(void *)(v1 + 944);
  return _swift_task_switch(sub_25D9C, v3, v2);
}

uint64_t sub_25D9C()
{
  swift_release();
  swift_errorRelease();
  sub_27FA8(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25E94()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 952);
  uint64_t v3 = *(void *)(v1 + 944);
  return _swift_task_switch(sub_2946C, v3, v2);
}

uint64_t sub_25FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  sub_F74E0();
  v7[9] = sub_F74D0();
  uint64_t v9 = sub_F7470();
  v7[10] = v9;
  v7[11] = v8;
  return _swift_task_switch(sub_26058, v9, v8);
}

uint64_t sub_26058()
{
  uint64_t v1 = sub_2103C(*(void *)(v0 + 24), *(void **)(v0 + 32));
  if (v1)
  {
    uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_26234;
    return v5(v1);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))(*(void *)(v0 + 56) + **(int **)(v0 + 56));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_263B8;
    return v6();
  }
}

uint64_t sub_26234()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_26354, v3, v2);
}

uint64_t sub_26354()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_263B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_29470, v3, v2);
}

uint64_t sub_264D8(uint64_t *a1)
{
  uint64_t v2 = v1;
  id v4 = [objc_allocWithZone((Class)CTLazuliMessageText) init];
  uint64_t v5 = (void *)sub_F71F0();
  [v4 setContent:v5];

  if (a1[11])
  {
    id v6 = v4;
    id v7 = sub_28DE0();
    [v6 setMetaData:v7];
  }
  sub_28058((uint64_t)(a1 + 2), (uint64_t)v40);
  if (v42)
  {
    sub_1E87C(v40, (uint64_t)v39);
    uint64_t v8 = *(void **)(*(void *)(v2 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v9 = a1[10];
    uint64_t v10 = sub_6CA4(0, &qword_128230);
    sub_289D4((uint64_t)v39, (uint64_t)v36);
    uint64_t v11 = v37;
    uint64_t v12 = v38;
    uint64_t v13 = sub_28A38((uint64_t)v36, v37);
    __chkstk_darwin(v13);
    uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v15);
    id v17 = v8;
    id v18 = sub_6E35C((uint64_t)v15, v10, v11, v12);
    sub_6BEC((uint64_t)v36);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v19 = *a1;
    uint64_t v20 = a1[1];
    swift_bridgeObjectRetain();
    id v21 = CTLazuliOperationID.init(id:)(v19, v20);
    v36[0] = 0;
    LODWORD(v9) = [v17 sendTextMessage:v9 toGroupDestination:v18 withMessageID:v21 withMessage:v4 withError:v36];

    if (v9)
    {
      id v22 = v36[0];
      sub_6BEC((uint64_t)v39);
    }
    else
    {
      id v33 = v36[0];
      sub_F6D30();

      swift_willThrow();
      sub_6BEC((uint64_t)v39);
    }
  }
  else
  {
    v43[0] = v40[0];
    v43[1] = v40[1];
    *(_OWORD *)BOOL v44 = *(_OWORD *)v41;
    *(_OWORD *)&v44[9] = *(_OWORD *)&v41[9];
    uint64_t v23 = sub_6CA4(0, &qword_127C60);
    __chkstk_darwin(v23);
    sub_5560((uint64_t)v43);
    id v24 = CTLazuliDestination.init(handle:countryCode:)((uint64_t)v43, (void (*)(void))sub_6D18);
    uint64_t v25 = *(void **)(*(void *)(v2 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v26 = (uint8_t *)a1[10];
    sub_6CA4(0, &qword_127CF8);
    uint64_t v28 = *a1;
    uint64_t v27 = a1[1];
    id v29 = v25;
    swift_bridgeObjectRetain();
    id v30 = CTLazuliOperationID.init(id:)(v28, v27);
    v39[0] = 0;
    LODWORD(v25) = [v29 sendTextMessage:v26 to:v24 withMessageID:v30 withMessage:v4 withError:v39];

    id v31 = v39[0];
    sub_6D20((uint64_t)v43);
    if (v25)
    {
      if (v44[24])
      {
        sub_6CA4(0, &qword_128020);
        swift_bridgeObjectRetain();
        id v32 = CTLazuliOperationID.init(id:)(v28, v27);
        sub_2C894(v26, v24, (uint64_t)v32);
      }
    }
    else
    {
      sub_F6D30();

      swift_willThrow();
    }
  }
  return 1;
}

uint64_t sub_269A0(uint64_t *a1, uint64_t a2, void *a3)
{
  id v6 = RCSMessage.Coordinates.toCTCoordinates()(a2, a3);
  id v7 = v6;
  if (a1[11])
  {
    id v8 = v6;
    id v9 = sub_28DE0();
    [v8 setMetaData:v9];
  }
  sub_28058((uint64_t)(a1 + 2), (uint64_t)v42);
  if (v44)
  {
    v37[1] = v4;
    sub_1E87C(v42, (uint64_t)v41);
    uint64_t v10 = *(void **)(*(void *)(v3 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v11 = a1[10];
    uint64_t v12 = sub_6CA4(0, &qword_128230);
    sub_289D4((uint64_t)v41, (uint64_t)v38);
    uint64_t v13 = v39;
    uint64_t v14 = v40;
    uint64_t v15 = sub_28A38((uint64_t)v38, v39);
    __chkstk_darwin(v15);
    id v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v17);
    id v19 = v10;
    id v20 = sub_6E35C((uint64_t)v17, v12, v13, v14);
    sub_6BEC((uint64_t)v38);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v21 = *a1;
    uint64_t v22 = a1[1];
    swift_bridgeObjectRetain();
    id v23 = CTLazuliOperationID.init(id:)(v21, v22);
    v38[0] = 0;
    LODWORD(v22) = [v19 sendGeolocationMessage:v11 toGroupDestination:v20 withMessageID:v23 withGeoPush:v7 withError:v38];

    if (v22)
    {
      id v24 = v38[0];
      sub_6BEC((uint64_t)v41);
    }
    else
    {
      id v35 = v38[0];
      sub_F6D30();

      swift_willThrow();
      sub_6BEC((uint64_t)v41);
    }
  }
  else
  {
    v46[0] = *(_OWORD *)v43;
    *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)&v43[9];
    v45[0] = v42[0];
    v45[1] = v42[1];
    uint64_t v25 = *(void **)(*(void *)(v3 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v26 = a1[10];
    uint64_t v27 = sub_6CA4(0, &qword_127C60);
    __chkstk_darwin(v27);
    id v28 = v25;
    sub_5560((uint64_t)v45);
    id v29 = CTLazuliDestination.init(handle:countryCode:)((uint64_t)v45, (void (*)(void))sub_29474);
    sub_6D20((uint64_t)v45);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v30 = *a1;
    uint64_t v31 = a1[1];
    swift_bridgeObjectRetain();
    id v32 = CTLazuliOperationID.init(id:)(v30, v31);
    v41[0] = 0;
    LODWORD(v31) = [v28 sendGeolocationMessage:v26 to:v29 withMessageID:v32 withGeoPush:v7 withError:v41];

    id v33 = v41[0];
    if (!v31)
    {
      uint64_t v34 = v33;
      sub_F6D30();

      swift_willThrow();
    }
  }
  return 1;
}

uint64_t sub_26DC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for RCSFile(0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6CA4(0, &qword_128240);
  sub_28FD8(a2, (uint64_t)v9, type metadata accessor for RCSFile);
  id v10 = CTLazuliFileTransferDescriptor.init(file:)((uint64_t)v9);
  uint64_t v11 = v10;
  if (a1[11])
  {
    id v12 = v10;
    id v13 = sub_28DE0();
    [v12 setMetaData:v13];
  }
  sub_28058((uint64_t)(a1 + 2), (uint64_t)v46);
  if (v48)
  {
    v41[1] = v3;
    sub_1E87C(v46, (uint64_t)v45);
    uint64_t v14 = *(void **)(*(void *)(v4 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v15 = a1[10];
    uint64_t v16 = sub_6CA4(0, &qword_128230);
    sub_289D4((uint64_t)v45, (uint64_t)v42);
    uint64_t v17 = v43;
    uint64_t v18 = v44;
    uint64_t v19 = sub_28A38((uint64_t)v42, v43);
    __chkstk_darwin(v19);
    uint64_t v21 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v21);
    id v23 = v14;
    id v24 = sub_6E35C((uint64_t)v21, v16, v17, v18);
    sub_6BEC((uint64_t)v42);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v25 = *a1;
    uint64_t v26 = a1[1];
    swift_bridgeObjectRetain();
    id v27 = CTLazuliOperationID.init(id:)(v25, v26);
    v42[0] = 0;
    LODWORD(v26) = [v23 sendFileTransferMessage:v15 toGroupDestination:v24 withMessageID:v27 withFileInformation:v11 withError:v42];

    if (v26)
    {
      id v28 = v42[0];
      sub_6BEC((uint64_t)v45);
    }
    else
    {
      id v39 = v42[0];
      sub_F6D30();

      swift_willThrow();
      sub_6BEC((uint64_t)v45);
    }
  }
  else
  {
    v50[0] = *(_OWORD *)v47;
    *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)&v47[9];
    v49[0] = v46[0];
    v49[1] = v46[1];
    id v29 = *(void **)(*(void *)(v4 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v30 = a1[10];
    uint64_t v31 = sub_6CA4(0, &qword_127C60);
    __chkstk_darwin(v31);
    v41[-2] = v30;
    id v32 = v29;
    sub_5560((uint64_t)v49);
    id v33 = CTLazuliDestination.init(handle:countryCode:)((uint64_t)v49, (void (*)(void))sub_29474);
    sub_6D20((uint64_t)v49);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v34 = *a1;
    uint64_t v35 = a1[1];
    swift_bridgeObjectRetain();
    id v36 = CTLazuliOperationID.init(id:)(v34, v35);
    v45[0] = 0;
    LODWORD(v35) = [v32 sendFileTransferMessage:v30 to:v33 withMessageID:v36 withFileInformation:v11 withError:v45];

    id v37 = v45[0];
    if (!v35)
    {
      uint64_t v38 = v37;
      sub_F6D30();

      swift_willThrow();
    }
  }
  return 1;
}

uint64_t sub_27270(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_551C(&qword_127C70);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)CTLazuliMessageComposingIndicator) init];
  [v10 setActive:a2 & 1];
  if (a2)
  {
    sub_6CA4(0, (unint64_t *)&qword_128248);
    uint64_t v11 = (void *)sub_F7760();
    [v10 setRefreshTime:v11];
  }
  sub_28058((uint64_t)(a1 + 2), (uint64_t)v46);
  if (v48)
  {
    sub_1E87C(v46, (uint64_t)v45);
    if (qword_127B48 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_8B44(v6, (uint64_t)qword_127D90);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_F6FF0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (LOBYTE(v42[0]) != 1)
    {
      sub_6BEC((uint64_t)v45);

      char v36 = 0;
      return v36 & 1;
    }
    id v13 = *(void **)(*(void *)(v3 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v41 = a1[10];
    uint64_t v14 = sub_6CA4(0, &qword_128230);
    sub_289D4((uint64_t)v45, (uint64_t)v42);
    uint64_t v15 = v43;
    uint64_t v16 = v44;
    uint64_t v17 = sub_28A38((uint64_t)v42, v43);
    __chkstk_darwin(v17);
    uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v19);
    id v21 = v13;
    id v22 = sub_6E35C((uint64_t)v19, v14, v15, v16);
    sub_6BEC((uint64_t)v42);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v23 = *a1;
    uint64_t v24 = a1[1];
    swift_bridgeObjectRetain();
    id v25 = CTLazuliOperationID.init(id:)(v23, v24);
    v42[0] = 0;
    LODWORD(v24) = [v21 sendComposingIndicator:v41 toGroupDestination:v22 withMessageID:v25 withIndication:v10 withError:v42];

    if (!v24)
    {
      id v38 = v42[0];
      sub_F6D30();

      swift_willThrow();
      sub_6BEC((uint64_t)v45);
      return v36 & 1;
    }
    id v26 = v42[0];
    sub_6BEC((uint64_t)v45);
  }
  else
  {
    v50[0] = *(_OWORD *)v47;
    *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)&v47[9];
    v49[0] = v46[0];
    v49[1] = v46[1];
    id v27 = *(void **)(*(void *)(v3 + OBJC_IVAR___RCSServiceSession_state) + 16);
    uint64_t v28 = a1[10];
    uint64_t v29 = sub_6CA4(0, &qword_127C60);
    __chkstk_darwin(v29);
    *(&v40 - 2) = v28;
    id v30 = v27;
    sub_5560((uint64_t)v49);
    id v31 = CTLazuliDestination.init(handle:countryCode:)((uint64_t)v49, (void (*)(void))sub_29474);
    sub_6D20((uint64_t)v49);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v32 = *a1;
    uint64_t v33 = a1[1];
    swift_bridgeObjectRetain();
    id v34 = CTLazuliOperationID.init(id:)(v32, v33);
    v45[0] = 0;
    LODWORD(v33) = [v30 sendComposingIndicatorForContext:v28 to:v31 messageID:v34 indication:v10 error:v45];

    id v35 = v45[0];
    if (!v33)
    {
      id v37 = v35;
      sub_F6D30();

      swift_willThrow();
      return v36 & 1;
    }
  }

  char v36 = 1;
  return v36 & 1;
}

uint64_t sub_277E8(uint64_t *a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(void), SEL *a5)
{
  sub_28058((uint64_t)(a1 + 2), (uint64_t)v27);
  char v10 = v29;
  if (v29)
  {
    sub_27FA8((uint64_t)v27);
  }
  else
  {
    v31[0] = *(_OWORD *)v28;
    *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)&v28[9];
    v30[0] = v27[0];
    v30[1] = v27[1];
    uint64_t v11 = *(void **)(*(void *)(v5 + OBJC_IVAR___RCSServiceSession_state) + 16);
    id v25 = a4;
    uint64_t v12 = a1[10];
    uint64_t v13 = sub_6CA4(0, &qword_127C60);
    __chkstk_darwin(v13);
    id v14 = v11;
    sub_5560((uint64_t)v30);
    id v15 = CTLazuliDestination.init(handle:countryCode:)((uint64_t)v30, a3);
    sub_6D20((uint64_t)v30);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v16 = *a1;
    uint64_t v17 = a1[1];
    swift_bridgeObjectRetain();
    id v18 = CTLazuliOperationID.init(id:)(v16, v17);
    uint64_t v19 = (void *)v25();
    id v26 = 0;
    unsigned __int8 v20 = objc_msgSend(v14, *a5, v12, v15, v18, v19, &v26);

    id v21 = v26;
    if ((v20 & 1) == 0)
    {
      uint64_t v23 = v21;
      sub_F6D30();

      swift_willThrow();
      return v22 & 1;
    }
  }
  char v22 = v10 ^ 1;
  return v22 & 1;
}

id sub_279FC(uint64_t *a1)
{
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_28058((uint64_t)(a1 + 2), (uint64_t)v43);
  unsigned __int8 v8 = v45;
  if (v45)
  {
    sub_27FA8((uint64_t)v43);
LABEL_13:
    char v27 = v8 ^ 1;
    return (id)(v27 & 1);
  }
  id v37 = v7;
  uint64_t v35 = v5;
  uint64_t v36 = v4;
  int v38 = v45;
  uint64_t v39 = v2;
  v46[0] = v43[0];
  v46[1] = v43[1];
  v47[0] = *(_OWORD *)v44;
  *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)&v44[9];
  id v9 = [objc_allocWithZone((Class)CTLazuliSuggestedActionDevice) init];
  [v9 setType:0];
  uint64_t v40 = *(void *)(v1 + OBJC_IVAR___RCSServiceSession_state);
  char v10 = *(void **)(v40 + 16);
  uint64_t v11 = a1[10];
  uint64_t v12 = sub_6CA4(0, &qword_127C60);
  __chkstk_darwin(v12);
  *(&v35 - 2) = v11;
  id v13 = v10;
  sub_5560((uint64_t)v46);
  id v14 = CTLazuliDestination.init(handle:countryCode:)((uint64_t)v46, (void (*)(void))sub_29474);
  sub_6D20((uint64_t)v46);
  sub_6CA4(0, &qword_127CF8);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  swift_bridgeObjectRetain();
  id v17 = CTLazuliOperationID.init(id:)(v15, v16);
  id v42 = 0;
  LODWORD(v11) = [v13 sendDeviceAction:v11 to:v14 withMessageID:v17 withAction:v9 withError:&v42];

  id v18 = v42;
  if (!v11)
  {
    id v26 = v18;
    sub_F6D30();

    swift_willThrow();
    return (id)(v27 & 1);
  }
  uint64_t v19 = v40;
  id result = *(id *)(v40 + 64);
  if (result)
  {
    id result = [result respondsToSelector:"messageSendSuccess:withID:"];
    id v21 = v9;
    if (!result)
    {
      uint64_t v28 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v29 = v35;
      id v30 = v37;
      uint64_t v31 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v37, v28, v36);
      uint64_t v32 = sub_F70D0();
      os_log_type_t v33 = sub_F7690();
      if (os_log_type_enabled(v32, v33))
      {
        id v34 = (uint8_t *)swift_slowAlloc();
        id v42 = (id)swift_slowAlloc();
        *(_DWORD *)id v34 = 136315138;
        uint64_t v41 = sub_A3FC(0xD00000000000001BLL, 0x8000000000102AF0, (uint64_t *)&v42);
        sub_F77B0();
        _os_log_impl(&dword_0, v32, v33, "OutgoingMessageController no longer responds to selector %s", v34, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v31);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      }
      goto LABEL_12;
    }
    char v22 = *(void **)(v19 + 64);
    if (v22)
    {
      uint64_t v23 = (void *)a1[10];
      swift_bridgeObjectRetain();
      id v24 = v22;
      id v25 = CTLazuliOperationID.init(id:)(v15, v16);
      RCSOutgoingMessageController.messageSendSuccess(_:with:)(v23, v25);

LABEL_12:
      unsigned __int8 v8 = v38;
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_27EAC()
{
  unint64_t result = qword_1281F8;
  if (!qword_1281F8)
  {
    sub_F6F30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1281F8);
  }
  return result;
}

uint64_t sub_27EF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_27F4C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_27FA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_27FFC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_28058(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_280B4()
{
  uint64_t v1 = type metadata accessor for RCSMessage(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = v0 + v3;
  if (*(unsigned char *)(v0 + v3 + 122))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v5 + 121))
    {
      uint64_t v6 = v5 + 64;
LABEL_6:
      sub_6BEC(v6);
      goto LABEL_8;
    }
  }
  else if (*(unsigned char *)(v5 + 57))
  {
    uint64_t v6 = v0 + v3;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(v5 + *(int *)(v1 + 28));
  uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      case 1u:
        uint64_t v9 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
        {
          swift_bridgeObjectRelease();
          char v10 = (char *)v7 + *(int *)(v9 + 24);
          uint64_t v11 = sub_F6DC0();
          (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
          uint64_t v12 = (char *)v7 + *(int *)(v9 + 28);
          uint64_t v13 = sub_F6EE0();
          (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        }
        id v14 = (char *)v7 + *(int *)(type metadata accessor for RCSFile(0) + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v16 = &v14[*(int *)(v15 + 28)];
        uint64_t v17 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        id v18 = &v14[*(int *)(v15 + 32)];
        uint64_t v19 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        sub_551C(&qword_128218);
        goto LABEL_14;
      case 3u:
        sub_6BEC((uint64_t)v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v7[9])
        {
          swift_bridgeObjectRelease();
          sub_2852C(v7[10], v7[11]);
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
      case 6u:
      case 7u:
LABEL_14:
        swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v20 = v5 + *(int *)(v1 + 32);
  if (*(void *)(v20 + 24)) {
    sub_6BEC(v20);
  }
  unint64_t v21 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_2852C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_28584()
{
  uint64_t v2 = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = *(void *)(v0 + v4);
  uint64_t v9 = *(void *)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + v5 + 8);
  uint64_t v11 = (uint64_t *)(v0 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *id v14 = v1;
  v14[1] = sub_57A4;
  return sub_25FB4(v6, v7, v8, v9, v10, v12, v13);
}

unint64_t sub_286D0()
{
  unint64_t result = qword_128BE0;
  if (!qword_128BE0)
  {
    type metadata accessor for RCSOutgoingMessageController.OperationID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_128BE0);
  }
  return result;
}

uint64_t *sub_28728(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2878C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_287C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_46BC;
  return sub_657B8(a1, a2, v6);
}

uint64_t sub_28874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_288DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2893C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2896C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_289D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_28A38(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_28A88(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = a1;
  v8._object = a2;
  RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v22, v8, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
  if (v9)
  {
    swift_errorRelease();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_6D20((uint64_t)&v22);
  }
  id v10 = [self sharedInstance];
  id v11 = [v10 ctSubscriptionInfo];

  if (v11)
  {
    uint64_t v12 = (void *)sub_F71F0();
    uint64_t v13 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v11, "__im_subscriptionContextForForSimID:phoneNumber:", v12, v13);

    if (v14) {
      return (uint64_t)v14;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_F70D0();
  os_log_type_t v17 = sub_F7690();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v20[0] = v4;
    *(_DWORD *)id v18 = 136315138;
    swift_bridgeObjectRetain();
    v20[1] = sub_A3FC(a1, (unint64_t)a2, &v21);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v16, v17, "Can't find a subscription context for destination caller ID %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return 31;
}

id sub_28DE0()
{
  uint64_t v0 = RCSMessageMetadata.toPairs()();
  uint64_t v1 = v0[2];
  if (v1)
  {
    id v11 = [objc_allocWithZone((Class)CTLazuliCustomMetaData) init];
    uint64_t v2 = v0 + 7;
    do
    {
      id v3 = objc_allocWithZone((Class)CTLazuliCustomMetaDataWrapper);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v4 = [v3 init];
      uint64_t v5 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      [v4 setHeader:v5];

      uint64_t v6 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      [v4 setValue:v6];

      id v7 = v4;
      sub_F73F0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_F7440();
      }
      v2 += 4;
      sub_F7450();
      sub_F7430();

      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    sub_6CA4(0, &qword_128238);
    Swift::String v8 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    id v9 = v11;
    [v11 setList:v8];
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_28FD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for RCSHandle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s26OutgoingMessageInformationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 73))
  {
    sub_6BEC(a1 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s26OutgoingMessageInformationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  char v5 = *(unsigned char *)(a2 + 73);
  swift_bridgeObjectRetain();
  if (v5)
  {
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 73) = v5;
  id v10 = *(void **)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  id v12 = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s26OutgoingMessageInformationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_27FA8(a1 + 16);
    if (*(unsigned char *)(a2 + 73))
    {
      uint64_t v4 = *(void *)(a2 + 40);
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      *(unsigned char *)(a1 + 73) = 1;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_WORD *)(a1 + 72) = *(unsigned __int8 *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  char v5 = *(void **)(a2 + 80);
  long long v6 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v5;
  id v7 = v5;

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s26OutgoingMessageInformationVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t _s26OutgoingMessageInformationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_27FA8(a1 + 16);
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  }
  long long v6 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s26OutgoingMessageInformationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s26OutgoingMessageInformationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s26OutgoingMessageInformationVMa()
{
  return &_s26OutgoingMessageInformationVN;
}

id sub_29478(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a4;
  uint64_t v47 = a3;
  uint64_t v48 = sub_F70F0();
  uint64_t v9 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_6BA8(a1, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  if (v15)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    uint64_t v44 = v11;
    uint64_t v45 = v9;
    v43[1] = v5;
    uint64_t v18 = *(void *)(v5 + OBJC_IVAR___RCSServiceSession_state);
    if (*(void *)(*(void *)(v18 + 72) + 16)
      && (swift_bridgeObjectRetain(), sub_1C9BC(v16, v17), char v20 = v19, swift_bridgeObjectRelease(), (v20 & 1) != 0))
    {
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      sub_1E9A0((uint64_t)a1, (uint64_t)&v51);
      *(void *)&long long v60 = _swiftEmptyArrayStorage;
      *((void *)&v60 + 1) = _swiftEmptyArrayStorage;
      *(void *)&long long v58 = a2;
      *((void *)&v58 + 1) = v47;
      *(void *)&long long v59 = v46;
      *((void *)&v59 + 1) = a5;
      uint64_t v22 = *(void *)(v18 + 72);
      v50[6] = v57;
      v50[7] = v58;
      v50[8] = v59;
      v50[9] = v60;
      _OWORD v50[2] = v53;
      v50[3] = v54;
      v50[4] = v55;
      v50[5] = v56;
      v50[0] = v51;
      v50[1] = v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = v22;
      sub_1D160(v50, v16, v17, isUniquelyReferenced_nonNull_native);
      uint64_t v24 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v18 + 72) = v24;
      swift_bridgeObjectRelease();
      sub_2AE7C(a1);
      uint64_t v25 = Logger.rcs.unsafeMutableAddressor();
      char v27 = v44;
      uint64_t v26 = v45;
      uint64_t v28 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v25, v48);
      sub_1E9A0((uint64_t)a1, (uint64_t)&v51);
      uint64_t v29 = sub_F70D0();
      os_log_type_t v30 = sub_F7670();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(void *)&v50[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315138;
        uint64_t v32 = *((void *)&v52 + 1);
        uint64_t v33 = v53;
        sub_6BA8(&v51, *((uint64_t *)&v52 + 1));
        uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
        if (v35)
        {
          unint64_t v36 = v35;
        }
        else
        {
          uint64_t v34 = 0x3E6C696E3CLL;
          unint64_t v36 = 0xE500000000000000;
        }
        uint64_t v49 = sub_A3FC(v34, v36, (uint64_t *)v50);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_1E8E8((uint64_t)&v51);
        _os_log_impl(&dword_0, v29, v30, "Queued incoming group change for group: %s", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (id)(*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v44, v28);
      }
      else
      {
        sub_1E8E8((uint64_t)&v51);

        return (id)(*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v27, v28);
      }
    }
  }
  else
  {
    id result = [self sharedInstance];
    if (result)
    {
      id v37 = result;
      sub_1E9A0((uint64_t)a1, (uint64_t)&v51);
      uint64_t v38 = sub_F7290();
      unint64_t v40 = v39;
      uint64_t v41 = sub_F78C0();
      LOBYTE(v51) = 1;
      *((void *)&v51 + 1) = v41;
      *(void *)&long long v52 = v42;
      *((void *)&v52 + 1) = v38;
      long long v53 = v40;
      LOBYTE(v54) = 0;
      swift_bridgeObjectRetain();
      sub_6204C((unsigned __int8 *)&v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_29934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_F70F0();
  uint64_t v61 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v60 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s17ParticipantChangeVMa();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v66 = v3;
  uint64_t v13 = *(void *)&v3[OBJC_IVAR___RCSServiceSession_state];
  *(void *)&v97[0] = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  sub_356D8(a1, a2, &v87);
  *(void *)(v13 + 72) = *(void *)&v97[0];
  swift_bridgeObjectRelease();
  if (!*((void *)&v88 + 1))
  {
    sub_1E944((uint64_t)&v87, &qword_128258);
    return 0;
  }
  v97[6] = v93;
  v97[7] = v94;
  v97[8] = v95;
  long long v98 = v96;
  v97[2] = v89;
  v97[3] = v90;
  v97[4] = v91;
  v97[5] = v92;
  v97[0] = v87;
  v97[1] = v88;
  uint64_t v14 = *((void *)&v94 + 1);
  uint64_t v63 = v94;
  long long v15 = v95;
  sub_2C4C0(a3, (uint64_t)&v73, &qword_128060);
  sub_2B188((uint64_t)v97, (uint64_t)&v87);
  long long v62 = v15;
  if (*((void *)&v74 + 1))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2B1C0(&v87);
    long long v84 = v77;
    long long v85 = v78;
    long long v86 = v79;
    long long v80 = v73;
    long long v81 = v74;
    long long v82 = v75;
    long long v83 = v76;
    if (!v14) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  sub_1E9A0((uint64_t)&v87, (uint64_t)&v80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2B1C0(&v87);
  sub_1E944((uint64_t)&v73, &qword_128060);
  if (v14)
  {
LABEL_4:
    sub_551C(&qword_128260);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_F8F20;
    *(void *)(v16 + 32) = v63;
    *(void *)(v16 + 40) = v14;
    swift_bridgeObjectRetain();
    RCSGroup.removing(participants:)((void *)v16, (uint64_t)&v70);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1E8E8((uint64_t)&v80);
    long long v84 = v72[2];
    long long v85 = v72[3];
    long long v86 = v72[4];
    long long v80 = v70;
    long long v81 = v71;
    long long v82 = v72[0];
    long long v83 = v72[1];
  }
LABEL_5:
  uint64_t v65 = v14;
  uint64_t v17 = *(void *)(v98 + 16);
  if (v17)
  {
    uint64_t v18 = v98 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_2B33C(v18, (uint64_t)v12);
      sub_49E54((uint64_t)v12);
      sub_43B14((uint64_t)v12, 1);
      sub_2B3A0((uint64_t)v12);
      v18 += v19;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *((void *)&v81 + 1);
  uint64_t v21 = v82;
  uint64_t v22 = sub_6BA8(&v80, *((uint64_t *)&v81 + 1));
  id v23 = v66;
  uint64_t v24 = (void *)sub_35F9C(v22, v66, v20, v21);
  uint64_t v25 = v65;
  if (v24)
  {
    uint64_t v26 = *((void *)&v98 + 1);
    uint64_t v27 = *(void *)(*((void *)&v98 + 1) + 16);
    if (v27)
    {
      id v64 = v24;
      uint64_t v59 = v7;
      swift_bridgeObjectRetain();
      v58[1] = v26;
      uint64_t v28 = v26 + 56;
      while (1)
      {
        uint64_t v30 = *(void *)(v28 - 16);
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v68 = v27;
        uint64_t v69 = v29;
        swift_bridgeObjectRetain();
        if (v30)
        {
          swift_bridgeObjectRetain();
          uint64_t v67 = sub_F71F0();
        }
        else
        {
          uint64_t v67 = 0;
        }
        uint64_t v31 = sub_F6F30();
        uint64_t v32 = *(void *)(v31 - 8);
        __chkstk_darwin(v31);
        uint64_t v34 = (char *)v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_F6F20();
        sub_F6F00();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
        unint64_t v35 = (void *)sub_F71F0();
        swift_bridgeObjectRelease();
        unint64_t v36 = (void *)sub_F71F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = v65;
        if (v65)
        {
          swift_bridgeObjectRetain();
          id v37 = (void *)sub_F71F0();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v37 = 0;
        }
        id v38 = v64;
        id result = [v64 chatIdentifier];
        if (!result) {
          break;
        }
        unint64_t v40 = result;
        v28 += 32;
        id v41 = [v38 style];
        id v42 = v66;
        id v43 = [v66 account];
        LOBYTE(v57) = 1;
        uint64_t v44 = v42;
        uint64_t v45 = (void *)v67;
        [v44 didReceiveDisplayNameChange:v67 guid:v35 fromID:v36 toIdentifier:v37 forChat:v40 style:v41 account:v43 shouldRelay:v57];

        uint64_t v27 = v68 - 1;
        if (v68 == 1)
        {

          swift_bridgeObjectRelease();
          uint64_t v7 = v59;
          id v23 = v66;
          goto LABEL_25;
        }
      }
      __break(1u);
      __break(1u);
      goto LABEL_35;
    }
  }
LABEL_25:
  long long v71 = 0u;
  memset(v72, 0, 25);
  long long v70 = 0u;
  RCSServiceSession.groupChat(from:subscriptionInfo:group:)((uint64_t)&v70, v63, v25, v62, *((uint64_t *)&v62 + 1), &v80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = *((void *)&v81 + 1);
  uint64_t v49 = v82;
  uint64_t v50 = sub_6BA8(&v80, *((uint64_t *)&v81 + 1));
  long long v51 = (void *)sub_35F9C(v50, v23, v48, v49);
  if (!v51)
  {
    uint64_t v53 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v53, v7);
    long long v54 = sub_F70D0();
    os_log_type_t v55 = sub_F7670();
    if (os_log_type_enabled(v54, v55))
    {
      long long v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v56 = 0;
      _os_log_impl(&dword_0, v54, v55, "Dropping incoming group for group that doesn't already exist in the database", v56, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v7);
    sub_1E8E8((uint64_t)&v80);
    sub_2B1C0(v97);
    return 0;
  }
  uint64_t v46 = v51;
  id result = [v51 chatIdentifier];
  if (result)
  {
    long long v52 = result;
    objc_msgSend(v23, "didJoinChat:style:", result, objc_msgSend(v46, "style"));

    sub_1E8E8((uint64_t)&v80);
    sub_2B1C0(v97);
    return v46;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t static IMDChatRCSGroupIdentity.latestVersion.getter()
{
  return 1;
}

Swift::Int sub_2A1B8()
{
  return sub_F7C50();
}

void sub_2A1FC()
{
}

Swift::Int sub_2A224()
{
  return sub_F7C50();
}

uint64_t sub_2A264(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)(*(void *)(v2 + OBJC_IVAR___RCSServiceSession_state) + 72) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C9BC(a1, a2);
    char v11 = v10;
    uint64_t result = swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v12, v5);
      uint64_t v13 = sub_F70D0();
      os_log_type_t v14 = sub_F7670();
      if (os_log_type_enabled(v13, v14))
      {
        long long v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)long long v15 = 134217984;
        *(void *)&v16[0] = 5;
        sub_F77B0();
        _os_log_impl(&dword_0, v13, v14, "Finishing group change after %ld timeout", v15, 0xCu);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      memset(v16, 0, sizeof(v16));

      return sub_1E944((uint64_t)v16, &qword_128060);
    }
  }
  return result;
}

uint64_t sub_2A4E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t _s18PendingGroupChangeVwxx(void *a1)
{
  sub_6BEC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[9])
  {
    swift_bridgeObjectRelease();
    sub_2852C(a1[10], a1[11]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s18PendingGroupChangeVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v6;
    uint64_t v7 = *(void *)(a2 + 80);
    unint64_t v8 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    sub_2A4E4(v7, v8);
    *(void *)(a1 + 80) = v7;
    *(void *)(a1 + 88) = v8;
    uint64_t v9 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  }
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v14 = *(void *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = v14;
  *(void *)(a1 + 152) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s18PendingGroupChangeVwca(uint64_t *a1, uint64_t *a2)
{
  sub_2A890(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  uint64_t v6 = a2[9];
  if (a1[9])
  {
    if (v6)
    {
      a1[8] = a2[8];
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = a2[10];
      unint64_t v8 = a2[11];
      sub_2A4E4(v7, v8);
      uint64_t v9 = a1[10];
      unint64_t v10 = a1[11];
      a1[10] = v7;
      a1[11] = v8;
      sub_2852C(v9, v10);
      a1[12] = a2[12];
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2AAC0((uint64_t)(a1 + 8));
      long long v14 = *((_OWORD *)a2 + 5);
      long long v13 = *((_OWORD *)a2 + 6);
      *long long v4 = *v5;
      *((_OWORD *)a1 + 5) = v14;
      *((_OWORD *)a1 + 6) = v13;
    }
  }
  else if (v6)
  {
    a1[8] = a2[8];
    a1[9] = a2[9];
    uint64_t v11 = a2[10];
    unint64_t v12 = a2[11];
    swift_bridgeObjectRetain();
    sub_2A4E4(v11, v12);
    a1[10] = v11;
    a1[11] = v12;
    a1[12] = a2[12];
    a1[13] = a2[13];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *v5;
    long long v16 = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 6) = v16;
    *long long v4 = v15;
  }
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_2A890(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_2AAC0(uint64_t a1)
{
  return a1;
}

__n128 _s18PendingGroupChangeVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t _s18PendingGroupChangeVwta(uint64_t a1, uint64_t a2)
{
  sub_6BEC(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 72)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 72);
  if (!v7)
  {
    sub_2AAC0(a1 + 64);
LABEL_5:
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    goto LABEL_6;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a1 + 80);
  unint64_t v9 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  sub_2852C(v8, v9);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18PendingGroupChangeVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s18PendingGroupChangeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s18PendingGroupChangeVMa()
{
  return &_s18PendingGroupChangeVN;
}

uint64_t getEnumTagSinglePayload for RCSMessageMetadata.Entry.HeaderKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s19ChangesNotHeldErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2ADECLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s19ChangesNotHeldErrorOMa()
{
  return &_s19ChangesNotHeldErrorON;
}

unint64_t sub_2AE28()
{
  unint64_t result = qword_128250;
  if (!qword_128250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128250);
  }
  return result;
}

void sub_2AE7C(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_6BA8(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if (v5)
  {
    uint64_t v6 = self;
    uint64_t v7 = (void *)sub_F71F0();
    [v6 cancelPreviousPerformRequestsWithTarget:v1 selector:"cleanupPendingGroupChangesFor:" object:v7];

    id v15 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
    [v1 performSelector:"cleanupPendingGroupChangesFor:" withObject:v15 afterDelay:5.0];
  }
  else
  {
    id v8 = [self sharedInstance];
    if (v8)
    {
      unint64_t v9 = v8;
      sub_1E9A0((uint64_t)a1, (uint64_t)v16);
      uint64_t v10 = sub_F7290();
      uint64_t v12 = v11;
      uint64_t v13 = sub_F78C0();
      v16[0] = 1;
      uint64_t v17 = v13;
      uint64_t v18 = v14;
      uint64_t v19 = v10;
      uint64_t v20 = v12;
      uint64_t v21 = 0;
      char v22 = 0;
      swift_bridgeObjectRetain();
      sub_6204C(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_2B04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17ParticipantChangeVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2B33C(a2, (uint64_t)v7);
  unint64_t v8 = *(void *)(a1 + 144);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v8 = sub_351B4(0, *(void *)(v8 + 16) + 1, 1, v8);
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_351B4(v9 > 1, v10 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v10 + 1;
  uint64_t result = sub_2C524((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v10);
  *(void *)(a1 + 144) = v8;
  return result;
}

uint64_t sub_2B188(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_2B1C0(void *a1)
{
  return a1;
}

unint64_t sub_2B1F0(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t result = sub_2C4C0(a1, (uint64_t)&v19, &qword_128258);
  if (*((void *)&v20 + 1))
  {
    long long v35 = v25;
    long long v36 = v26;
    long long v37 = v27;
    long long v38 = v28;
    long long v31 = v21;
    long long v32 = v22;
    long long v33 = v23;
    long long v34 = v24;
    long long v29 = v19;
    long long v30 = v20;
    uint64_t v12 = (void *)*a3;
    if (a2)
    {
      uint64_t v13 = (_OWORD *)(v12[7] + 160 * a4);
      long long v14 = v36;
      v13[6] = v35;
      v13[7] = v14;
      long long v15 = v38;
      v13[8] = v37;
      v13[9] = v15;
      long long v16 = v32;
      v13[2] = v31;
      v13[3] = v16;
      long long v17 = v34;
      v13[4] = v33;
      v13[5] = v17;
      long long v18 = v30;
      *uint64_t v13 = v29;
      v13[1] = v18;
    }
    else
    {
      long long v25 = v35;
      long long v26 = v36;
      long long v27 = v37;
      long long v28 = v38;
      long long v21 = v31;
      long long v22 = v32;
      long long v23 = v33;
      long long v24 = v34;
      long long v19 = v29;
      long long v20 = v30;
      sub_42648(a4, a5, a6, &v19, v12);
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    unint64_t result = sub_1E944((uint64_t)&v19, &qword_128258);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_4211C(a4, *a3);
    }
  }
  return result;
}

uint64_t sub_2B33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17ParticipantChangeVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2B3A0(uint64_t a1)
{
  uint64_t v2 = _s17ParticipantChangeVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2B3FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_6BA8(a1, v11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  if (!v14) {
    return result;
  }
  uint64_t v15 = v14;
  uint64_t v45 = a3;
  uint64_t v16 = *(void *)(a2 + OBJC_IVAR___RCSServiceSession_state);
  if (!*(void *)(*(void *)(v16 + 72) + 16)
    || (uint64_t v17 = result,
        swift_bridgeObjectRetain(),
        sub_1C9BC(v17, v15),
        char v19 = v18,
        swift_bridgeObjectRelease(),
        (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_2C46C();
    swift_allocError();
    return swift_willThrow();
  }
  uint64_t v44 = a5;
  long long v20 = *(void **)(v16 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v48 = v20;
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_1C9BC(v17, v15);
  uint64_t v24 = v20[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
  }
  else
  {
    char v27 = v22;
    if (v20[3] >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v22 & 1) == 0) {
          goto LABEL_20;
        }
      }
      else
      {
        unint64_t v42 = v23;
        sub_42E48();
        unint64_t v23 = v42;
        if ((v27 & 1) == 0) {
          goto LABEL_20;
        }
      }
    }
    else
    {
      sub_418D0(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_1C9BC(v17, v15);
      if ((v27 & 1) != (v29 & 1))
      {
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = sub_F7BA0();
        __break(1u);
        return result;
      }
      unint64_t v23 = v28;
      if ((v27 & 1) == 0)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    unint64_t v43 = v23;
    long long v30 = (_OWORD *)(v48[7] + 160 * v23);
    long long v31 = v30[1];
    v46[0] = *v30;
    v46[1] = v31;
    long long v32 = v30[5];
    long long v34 = v30[2];
    long long v33 = v30[3];
    unsigned char v46[4] = v30[4];
    v46[5] = v32;
    _OWORD v46[2] = v34;
    v46[3] = v33;
    long long v35 = v30[9];
    long long v37 = v30[6];
    long long v36 = v30[7];
    v46[8] = v30[8];
    long long v47 = v35;
    v46[6] = v37;
    v46[7] = v36;
    long long v20 = (void *)*((void *)&v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_13;
    }
  }
  long long v20 = sub_351E8(0, v20[2] + 1, 1, v20);
LABEL_13:
  unint64_t v39 = v20[2];
  unint64_t v38 = v20[3];
  if (v39 >= v38 >> 1) {
    long long v20 = sub_351E8((void *)(v38 > 1), v39 + 1, 1, v20);
  }
  void v20[2] = v39 + 1;
  unint64_t v40 = &v20[4 * v39];
  v40[4] = v45;
  v40[5] = a4;
  v40[6] = v44;
  v40[7] = a6;
  *((void *)&v47 + 1) = v20;
  sub_2B1F0((uint64_t)v46, 1, (uint64_t *)&v48, v43, v17, v15);
  sub_1E944((uint64_t)v46, &qword_128258);
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t)v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = v41;
  return swift_bridgeObjectRelease();
}

void sub_2B700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v43 = a5;
  uint64_t v41 = a1;
  uint64_t v44 = sub_F70F0();
  uint64_t v9 = *(void *)(v44 - 8);
  uint64_t v10 = __chkstk_darwin(v44);
  unint64_t v40 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = sub_551C(&qword_127C70);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_127BF8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_8B44(v14, (uint64_t)qword_127FA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (LOBYTE(v46[0]) == 1)
  {
    uint64_t v19 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v20 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v19, v44);
    long long v21 = sub_F70D0();
    os_log_type_t v22 = sub_F7670();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      _os_log_impl(&dword_0, v21, v22, "Dropping pending name change due to override", v23, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v20);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = v43;
    sub_2B3FC(v43, v42, v41, a2, a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v5)
    {
      uint64_t v25 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v26 = v40;
      uint64_t v27 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v40, v25, v44);
      sub_1E9A0((uint64_t)v24, (uint64_t)v46);
      swift_bridgeObjectRetain_n();
      unint64_t v28 = sub_F70D0();
      os_log_type_t v29 = sub_F7670();
      int v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v31 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v49 = v39;
        *(_DWORD *)uint64_t v31 = 136315394;
        if (a2) {
          uint64_t v32 = v41;
        }
        else {
          uint64_t v32 = 0x3E6C696E3CLL;
        }
        LODWORD(v41) = v30;
        if (a2) {
          unint64_t v33 = a2;
        }
        else {
          unint64_t v33 = 0xE500000000000000;
        }
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_A3FC(v32, v33, &v49);
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        uint64_t v34 = v47;
        uint64_t v35 = v48;
        sub_6BA8(v46, v47);
        uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
        if (v37)
        {
          unint64_t v38 = v37;
        }
        else
        {
          uint64_t v36 = 0x3E6C696E3CLL;
          unint64_t v38 = 0xE500000000000000;
        }
        uint64_t v45 = sub_A3FC(v36, v38, &v49);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_1E8E8((uint64_t)v46);
        _os_log_impl(&dword_0, v28, (os_log_type_t)v41, "Added pending name change %s to group: %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v9 + 8))(v40, v27);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1E8E8((uint64_t)v46);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v26, v27);
      }
      sub_2AE7C(v43);
    }
  }
}

uint64_t sub_2BC54(void *a1, void (*a2)(_OWORD *))
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_6BA8(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR___RCSServiceSession_state);
    if (!*(void *)(*(void *)(v9 + 72) + 16)
      || (uint64_t v10 = result,
          swift_bridgeObjectRetain(),
          sub_1C9BC(v10, v8),
          char v12 = v11,
          swift_bridgeObjectRelease(),
          (v12 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_2C46C();
      swift_allocError();
      return swift_willThrow();
    }
    uint64_t v31 = a2;
    uint64_t v13 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = v13;
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1C9BC(v10, v8);
    uint64_t v17 = *(void *)(v13 + 16);
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18))
    {
      __break(1u);
    }
    else
    {
      LOBYTE(a2) = v15;
      if (*(void *)(v13 + 24) < v19)
      {
        sub_418D0(v19, isUniquelyReferenced_nonNull_native);
        unint64_t v20 = sub_1C9BC(v10, v8);
        if ((a2 & 1) != (v21 & 1))
        {
LABEL_17:
          uint64_t result = sub_F7BA0();
          __break(1u);
          return result;
        }
        unint64_t v16 = v20;
        if ((a2 & 1) == 0)
        {
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
        goto LABEL_12;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v15 & 1) == 0) {
          goto LABEL_16;
        }
        goto LABEL_12;
      }
    }
    sub_42E48();
    if ((a2 & 1) == 0) {
      goto LABEL_16;
    }
LABEL_12:
    os_log_type_t v22 = (_OWORD *)(*(void *)(v33 + 56) + 160 * v16);
    long long v23 = v22[1];
    v32[0] = *v22;
    v32[1] = v23;
    long long v24 = v22[5];
    long long v26 = v22[2];
    long long v25 = v22[3];
    v32[4] = v22[4];
    v32[5] = v24;
    _OWORD v32[2] = v26;
    v32[3] = v25;
    long long v27 = v22[9];
    long long v29 = v22[6];
    long long v28 = v22[7];
    v32[8] = v22[8];
    v32[9] = v27;
    v32[6] = v29;
    v32[7] = v28;
    v31(v32);
    sub_2B1F0((uint64_t)v32, 1, &v33, v16, v10, v8);
    sub_1E944((uint64_t)v32, &qword_128258);
    swift_bridgeObjectRelease();
    uint64_t v30 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 72) = v30;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2BEBC(uint64_t a1, void *a2)
{
  uint64_t v41 = a2;
  uint64_t v3 = _s17ParticipantChangeVMa();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v40 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v11 = (char *)v39 - v10;
  uint64_t v12 = sub_551C(&qword_127C70);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_127BF8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_8B44(v12, (uint64_t)qword_127FA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_F6FF0();
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (LOBYTE(v44[0]) == 1)
  {
    uint64_t v18 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, v18, v6);
    uint64_t v19 = sub_F70D0();
    os_log_type_t v20 = sub_F7670();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "Dropping pending participant change due to override", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  else
  {
    __chkstk_darwin(v17);
    v39[-2] = a1;
    os_log_type_t v22 = v41;
    uint64_t v23 = v42;
    sub_2BC54(v41, (void (*)(_OWORD *))sub_2C464);
    if (!v23)
    {
      uint64_t v24 = Logger.rcs.unsafeMutableAddressor();
      long long v25 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v40, v24, v6);
      sub_2B33C(a1, (uint64_t)v5);
      sub_1E9A0((uint64_t)v22, (uint64_t)v44);
      long long v26 = sub_F70D0();
      os_log_type_t v27 = sub_F7670();
      LODWORD(v42) = v27;
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        v39[1] = v29;
        *(_DWORD *)uint64_t v28 = 136315394;
        int v30 = v5[*(int *)(v3 + 24)];
        uint64_t v47 = v29;
        if (v30) {
          uint64_t v31 = 0x65766F6D6572;
        }
        else {
          uint64_t v31 = 6579297;
        }
        if (v30) {
          unint64_t v32 = 0xE600000000000000;
        }
        else {
          unint64_t v32 = 0xE300000000000000;
        }
        uint64_t v43 = sub_A3FC(v31, v32, &v47);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_2B3A0((uint64_t)v5);
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v33 = v6;
        uint64_t v34 = v45;
        uint64_t v35 = v46;
        sub_6BA8(v44, v45);
        uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
        if (v37)
        {
          unint64_t v38 = v37;
        }
        else
        {
          uint64_t v36 = 0x3E6C696E3CLL;
          unint64_t v38 = 0xE500000000000000;
        }
        uint64_t v43 = sub_A3FC(v36, v38, &v47);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_1E8E8((uint64_t)v44);
        _os_log_impl(&dword_0, v26, (os_log_type_t)v42, "Added pending participant change: %s to group: %s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        os_log_type_t v22 = v41;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v7 + 8))(v40, v33);
      }
      else
      {
        sub_2B3A0((uint64_t)v5);
        sub_1E8E8((uint64_t)v44);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
      }
      sub_2AE7C(v22);
    }
  }
}

uint64_t sub_2C464(uint64_t a1)
{
  return sub_2B04C(a1, *(void *)(v1 + 16));
}

unint64_t sub_2C46C()
{
  unint64_t result = qword_128268;
  if (!qword_128268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128268);
  }
  return result;
}

uint64_t sub_2C4C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_551C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2C524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17ParticipantChangeVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for RCSMessage.SubscriptionInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RCSMessage.SubscriptionInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RCSMessage.SubscriptionInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RCSMessage.Coordinates(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for RCSMessage.SubscriptionInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18PendingGroupChangeV10NameChangeVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s18PendingGroupChangeV10NameChangeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s18PendingGroupChangeV10NameChangeVMa()
{
  return &_s18PendingGroupChangeV10NameChangeVN;
}

id sub_2C764(void *a1)
{
  id v3 = [a1 extractedUri];
  uint64_t v4 = sub_F7220();
  unint64_t v6 = v5;

  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v7) {
    uint64_t v8 = &selRef_extractedUri;
  }
  else {
    uint64_t v8 = &selRef_uri;
  }
  id v9 = [a1 *v8];
  uint64_t v10 = sub_F7220();
  uint64_t v12 = v11;

  v13._uint64_t countAndFlagsBits = v10;
  v13._object = v12;
  RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v17, v13, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
  if (!v14)
  {
    char v15 = (void *)sub_F71F0();
    sub_6D20((uint64_t)&v17);
    id v1 = [v1 chatForChatIdentifier:v15 style:45];
  }
  return v1;
}

void sub_2C894(uint8_t *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_F70F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v101 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v13 = (char *)&v95 - v12;
  __chkstk_darwin(v11);
  char v15 = (char *)&v95 - v14;
  id v16 = sub_2C764(a2);
  long long v96 = v15;
  uint64_t v97 = a1;
  if (!v16) {
    return;
  }
  long long v98 = v16;
  if (sub_2E20C(v16))
  {
    uint64_t v99 = v7;
    uint64_t v32 = *(void *)(v3 + OBJC_IVAR___RCSServiceSession_state);
    uint64_t v33 = *(void **)(v32 + 16);
    id v103 = 0;
    id v34 = [v33 readCachedChatBotRenderInformation:v97 forChatBot:a2 withError:&v103];
    id v35 = v103;
    uint64_t v100 = v8;
    if (v34)
    {
      uint64_t v36 = v34;
      id v37 = v34;
      id v38 = v35;
      sub_2D9D0(v98, v36);

      uint64_t v39 = (char *)v37;
      id v40 = [v39 renderInformation];
      if (v40)
      {
        uint64_t v41 = v40;
        type metadata accessor for RCSPersistentMenu();
        swift_initStackObject();
        uint64_t v42 = *(void **)(RCSPersistentMenu.init(menu:)(v41) + 16);
        id v43 = v42;
        swift_release();

        if (v42)
        {

          uint64_t v44 = Logger.rcs.unsafeMutableAddressor();
          uint64_t v46 = v99;
          uint64_t v45 = v100;
          (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v13, v44, v99);
          id v47 = a2;
          uint64_t v48 = sub_F70D0();
          os_log_type_t v49 = sub_F7670();
          if (os_log_type_enabled(v48, v49))
          {
            uint64_t v50 = (uint8_t *)swift_slowAlloc();
            id v103 = (id)swift_slowAlloc();
            *(_DWORD *)uint64_t v50 = 136315138;
            uint64_t v97 = v50 + 4;
            id v51 = [v47 extractedUri];
            uint64_t v101 = v39;
            id v52 = v51;
            uint64_t v53 = sub_F7220();
            unint64_t v55 = v54;

            uint64_t v102 = sub_A3FC(v53, v55, (uint64_t *)&v103);
            sub_F77B0();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v48, v49, "Read cached chatbot info for %s", v50, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v100 + 8))(v13, v99);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
          }
          return;
        }
      }
      else
      {
      }
      id v62 = [self emptyStampProperty];
      uint64_t v63 = sub_F71B0();

      sub_1BC40(v63);
      swift_bridgeObjectRelease();
      id v64 = (void *)sub_F71A0();
      swift_bridgeObjectRelease();
      [v98 updateProperties:v64];

      uint64_t v65 = *(void **)(v32 + 16);
      id v103 = 0;
      id v66 = v97;
      if ([v65 fetchRenderInformation:v97 forChatBot:a2 withOperationID:a3 withError:&v103])
      {
        id v67 = v103;
        uint64_t v68 = Logger.rcs.unsafeMutableAddressor();
        uint64_t v61 = v99;
        uint64_t v69 = v100;
        long long v70 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v96, v68, v99);
        long long v71 = v66;
        id v72 = a2;
        long long v73 = v71;
        id v74 = v72;
        long long v75 = sub_F70D0();
        int v76 = sub_F7670();
        if (os_log_type_enabled(v75, (os_log_type_t)v76))
        {
          LODWORD(v97) = v76;
          uint64_t v101 = v39;
          uint64_t v77 = swift_slowAlloc();
          long long v95 = (void *)swift_slowAlloc();
          id v103 = v95;
          *(_DWORD *)uint64_t v77 = 136315650;
          id v78 = objc_msgSend(v74, "extractedUri", v95);
          uint64_t v79 = sub_F7220();
          unint64_t v81 = v80;

          uint64_t v102 = sub_A3FC(v79, v81, (uint64_t *)&v103);
          sub_F77B0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v77 + 12) = 2080;
          id v82 = [(uint8_t *)v73 label];
          if (v82)
          {
            long long v83 = v82;
            uint64_t v84 = sub_F7220();
            unint64_t v86 = v85;
          }
          else
          {
            unint64_t v86 = 0xEB0000000064656CLL;
            uint64_t v84 = 0x6562616C2D746F6ELL;
          }
          uint64_t v102 = sub_A3FC(v84, v86, (uint64_t *)&v103);
          sub_F77B0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v77 + 22) = 2080;
          id v88 = [(uint8_t *)v73 phoneNumber];
          if (v88)
          {
            long long v89 = v88;
            uint64_t v90 = sub_F7220();
            unint64_t v92 = v91;
          }
          else
          {
            unint64_t v92 = 0xE400000000000000;
            uint64_t v90 = 1701736302;
          }
          uint64_t v93 = v100;
          long long v94 = v101;
          uint64_t v102 = sub_A3FC(v90, v92, (uint64_t *)&v103);
          sub_F77B0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v75, (os_log_type_t)v97, "Fetch chatbot info for %s, with %s number: %s", (uint8_t *)v77, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v93 + 8))(v70, v99);
          return;
        }

        long long v56 = *(void (**)(char *, uint64_t))(v69 + 8);
        uint64_t v57 = v70;
LABEL_13:
        v56(v57, v61);
        return;
      }
      id v87 = v103;
      sub_F6D30();

      swift_willThrow();
      uint64_t v61 = v99;
      uint64_t v60 = v100;
    }
    else
    {
      id v59 = v103;
      sub_F6D30();

      uint64_t v60 = v100;
      swift_willThrow();

      uint64_t v61 = v99;
    }
    uint64_t v17 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v18 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v101, v17, v61);
    id v19 = a2;
    swift_errorRetain();
    id v20 = v19;
    swift_errorRetain();
    char v21 = sub_F70D0();
    os_log_type_t v22 = sub_F7690();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      id v103 = v98;
      *(_DWORD *)uint64_t v23 = 136315394;
      id v25 = [v20 extractedUri];
      uint64_t v100 = v60;
      id v26 = v25;
      uint64_t v27 = sub_F7220();
      uint64_t v99 = v61;
      uint64_t v28 = v27;
      unint64_t v30 = v29;

      uint64_t v102 = sub_A3FC(v28, v30, (uint64_t *)&v103);
      sub_F77B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2112;
      swift_errorRetain();
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v102 = v31;
      sub_F77B0();
      *uint64_t v24 = v31;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v21, v22, "Failed to fetch chatbot info for %s with error %@", (uint8_t *)v23, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v99);
      return;
    }
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();

    long long v56 = *(void (**)(char *, uint64_t))(v60 + 8);
    uint64_t v57 = v18;
    goto LABEL_13;
  }
  long long v58 = v98;
}

unint64_t sub_2D354(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_551C(&qword_128278);
    unint64_t v2 = (void *)sub_F79E0();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v23 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v12 = v7;
    }
    else
    {
      int64_t v13 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_37;
      }
      if (v13 >= v22)
      {
LABEL_33:
        sub_44A8();
        return (unint64_t)v2;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v7 + 1;
      if (!v14)
      {
        int64_t v12 = v7 + 2;
        if (v7 + 2 >= v22) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v7 + 3;
          if (v7 + 3 >= v22) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v7 + 4;
            if (v7 + 4 >= v22) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v7 + 5;
              if (v7 + 5 >= v22) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_38;
                  }
                  if (v12 >= v22) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1EBD4(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_BAD8(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1EBD4((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_2E564((uint64_t)v30);
      swift_bridgeObjectRelease();
      sub_44A8();
      swift_release();
      return 0;
    }
    sub_BAD8((uint64_t)v31 + 8, (uint64_t)v25);
    sub_2E564((uint64_t)v30);
    sub_1EBC4(v25, v26);
    long long v27 = v24;
    sub_1EBC4(v26, v28);
    long long v16 = v27;
    sub_1EBC4(v28, v29);
    sub_1EBC4(v29, &v27);
    unint64_t result = sub_1C9BC(v16, *((uint64_t *)&v16 + 1));
    unint64_t v17 = result;
    if (v18)
    {
      uint64_t v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v8 = v16;
      uint64_t v9 = (_OWORD *)(v2[7] + 32 * v17);
      sub_6BEC((uint64_t)v9);
      unint64_t result = (unint64_t)sub_1EBC4(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)sub_1EBC4(&v27, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_36;
    }
    v2[2] = v21;
LABEL_8:
    int64_t v7 = v12;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2D718@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_BAD8((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2D76C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v38 = v8;
  uint64_t v39 = 0;
  uint64_t v40 = v11 & v9;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_35BAC(&v34);
  uint64_t v12 = *((void *)&v34 + 1);
  if (!*((void *)&v34 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_44A8();
    return swift_release();
  }
  while (1)
  {
    uint64_t v15 = v34;
    sub_1EBC4(&v35, v33);
    uint64_t v16 = *a5;
    unint64_t v18 = sub_1C9BC(v15, v12);
    uint64_t v19 = *(void *)(v16 + 16);
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (*(void *)(v16 + 24) >= v21)
    {
      if (a4)
      {
        if (v17) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_42AA4();
        if (v22) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_412A8(v21, a4 & 1);
      unint64_t v23 = sub_1C9BC(v15, v12);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_22;
      }
      unint64_t v18 = v23;
      if (v22)
      {
LABEL_6:
        uint64_t v13 = 32 * v18;
        sub_BAD8(*(void *)(*a5 + 56) + v13, (uint64_t)v31);
        sub_BAD8((uint64_t)v31, (uint64_t)v32);
        sub_6BEC((uint64_t)v31);
        sub_6BEC((uint64_t)v33);
        swift_bridgeObjectRelease();
        unint64_t v14 = (_OWORD *)(*(void *)(*a5 + 56) + v13);
        sub_6BEC((uint64_t)v14);
        sub_1EBC4(v32, v14);
        goto LABEL_7;
      }
    }
    id v25 = (void *)*a5;
    *(void *)(*a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    id v26 = (uint64_t *)(v25[6] + 16 * v18);
    *id v26 = v15;
    v26[1] = v12;
    sub_1EBC4(v33, (_OWORD *)(v25[7] + 32 * v18));
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_21;
    }
    _OWORD v25[2] = v29;
LABEL_7:
    sub_35BAC(&v34);
    uint64_t v12 = *((void *)&v34 + 1);
    a4 = 1;
    if (!*((void *)&v34 + 1)) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_F7BA0();
  __break(1u);
  return result;
}

void sub_2D9D0(void *a1, void *a2)
{
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v58 - v9;
  if (a2)
  {
    id v11 = [a2 renderInformation];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = (void *)sub_4B338((uint64_t)_swiftEmptyArrayStorage);
      id v14 = [v12 botInfo];
      id v15 = [v14 pcc];

      id v16 = [v15 orgDetails];
      if (!v16) {
        goto LABEL_18;
      }
      id v17 = [v16 orgName];

      if (!v17) {
        goto LABEL_18;
      }
      id v18 = [v17 list];

      sub_2E524();
      unint64_t v19 = sub_F7410();

      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_F79B0();
        swift_bridgeObjectRelease();
        if (v41) {
          goto LABEL_7;
        }
      }
      else if (*(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8)))
      {
LABEL_7:
        if ((v19 & 0xC000000000000001) != 0)
        {
          id v20 = (id)sub_F78D0();
        }
        else
        {
          if (!*(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8)))
          {
            __break(1u);
LABEL_30:

            __break(1u);
            goto LABEL_31;
          }
          id v20 = *(id *)(v19 + 32);
        }
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        id v22 = [v21 displayName];

        if (v22)
        {
          uint64_t v65 = v8;
          uint64_t v23 = sub_F7220();
          unint64_t v25 = v24;

          uint64_t v26 = Logger.rcs.unsafeMutableAddressor();
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v26, v4);
          swift_bridgeObjectRetain_n();
          uint64_t v27 = a1;
          BOOL v28 = sub_F70D0();
          LODWORD(v63) = sub_F7670();
          if (os_log_type_enabled(v28, (os_log_type_t)v63))
          {
            os_log_t v60 = v28;
            id v66 = v13;
            uint64_t v64 = v5;
            uint64_t v29 = v23;
            uint64_t v30 = swift_slowAlloc();
            uint64_t v59 = swift_slowAlloc();
            *(void *)&long long v69 = v59;
            *(_DWORD *)uint64_t v30 = 136315394;
            swift_bridgeObjectRetain();
            uint64_t v62 = v29;
            *(void *)&v68[0] = sub_A3FC(v29, v25, (uint64_t *)&v69);
            long long v58 = (char *)v68 + 8;
            sub_F77B0();
            id v61 = (id)v25;
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v30 + 12) = 2080;
            uint64_t v8 = v27;
            id v31 = [v27 chatIdentifier];
            if (!v31)
            {
LABEL_31:

              __break(1u);
              swift_bridgeObjectRelease();
              __break(1u);
              return;
            }
            uint64_t v32 = v31;
            uint64_t v33 = sub_F7220();
            unint64_t v35 = v34;

            *(void *)&v68[0] = sub_A3FC(v33, v35, (uint64_t *)&v69);
            sub_F77B0();

            swift_bridgeObjectRelease();
            os_log_t v36 = v60;
            _os_log_impl(&dword_0, v60, (os_log_type_t)v63, "Populate business name %s for chat: %s", (uint8_t *)v30, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v5 = v64;
            (*(void (**)(char *, uint64_t))(v64 + 8))(v10, v4);
            uint64_t v13 = v66;
            unint64_t v25 = (unint64_t)v61;
            uint64_t v23 = v62;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
          }
          uint64_t v37 = sub_F7220();
          uint64_t v39 = v38;
          long long v70 = &type metadata for String;
          *(void *)&long long v69 = v23;
          *((void *)&v69 + 1) = v25;
          sub_1EBC4(&v69, v68);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v67 = v13;
          sub_1CEB8(v68, v37, v39, isUniquelyReferenced_nonNull_native);
          uint64_t v13 = v67;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v8 = v65;
        }
LABEL_18:
        type metadata accessor for RCSPersistentMenu();
        swift_allocObject();
        id v42 = v12;
        id v43 = (void *)RCSPersistentMenu.init(menu:)(v42);
        if (!v43[2]) {
          goto LABEL_24;
        }
        id v66 = v13;
        uint64_t v44 = Logger.rcs.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v44, v4);
        uint64_t v13 = a1;
        uint64_t v45 = sub_F70D0();
        uint64_t v46 = v8;
        uint64_t v8 = (char *)sub_F7670();
        if (!os_log_type_enabled(v45, (os_log_type_t)v8))
        {

          uint64_t v53 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v46, v4);
          goto LABEL_23;
        }
        id v61 = v42;
        uint64_t v62 = v4;
        uint64_t v64 = v5;
        uint64_t v65 = v46;
        uint64_t v63 = a1;
        id v47 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v69 = swift_slowAlloc();
        *(_DWORD *)id v47 = 136315138;
        id v48 = [v13 chatIdentifier];
        if (v48)
        {
          os_log_type_t v49 = v48;
          uint64_t v50 = sub_F7220();
          unint64_t v52 = v51;

          *(void *)&v68[0] = sub_A3FC(v50, v52, (uint64_t *)&v69);
          sub_F77B0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v45, (os_log_type_t)v8, "Populate persistent menu for chat: %s", v47, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v53 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v62);
          a1 = v63;
          id v42 = v61;
LABEL_23:
          uint64_t v54 = (*(uint64_t (**)(uint64_t))(*v43 + 88))(v53);
          unint64_t v55 = v66;
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v69 = v55;
          sub_2D76C(v54, (uint64_t)sub_2D718, 0, v56, (uint64_t *)&v69);
          uint64_t v13 = (void *)v69;
          swift_bridgeObjectRelease();
LABEL_24:
          if (v13[2])
          {
            sub_1BC40((uint64_t)v13);
            swift_bridgeObjectRelease();
            uint64_t v57 = (void *)sub_F71A0();
            swift_bridgeObjectRelease();
            [a1 updateProperties:v57 shouldBroadcast:1];

            swift_release();
          }
          else
          {
            swift_release();

            swift_bridgeObjectRelease();
          }
          return;
        }
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
}

id sub_2E20C(void *a1)
{
  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v3 = result;
    unsigned int v4 = [result isRBMEnabled];

    if (!v4) {
      return 0;
    }
    id v5 = [a1 properties];
    if (v5 && (v6 = v5, v7 = sub_F71B0(), v6, unint64_t v8 = sub_2D354(v7), swift_bridgeObjectRelease(), v8))
    {
      id v9 = objc_allocWithZone((Class)IMPersistentMenu);
      uint64_t v10 = (void *)sub_F71A0();
      swift_bridgeObjectRelease();
      id v11 = [v9 initWithDictionary:v10];

      if (v11)
      {

        return 0;
      }
      id v12 = [a1 properties];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = sub_F71B0();

        *(void *)&long long v27 = sub_F7220();
        *((void *)&v27 + 1) = v15;
        sub_F7860();
        if (*(void *)(v14 + 16) && (unint64_t v16 = sub_1C978((uint64_t)v26), (v17 & 1) != 0))
        {
          sub_BAD8(*(void *)(v14 + 56) + 32 * v16, (uint64_t)&v27);
        }
        else
        {
          long long v27 = 0u;
          long long v28 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_1EC30((uint64_t)v26);
        uint64_t v18 = *((void *)&v28 + 1);
        if (*((void *)&v28 + 1))
        {
          unint64_t v19 = sub_6BA8(&v27, *((uint64_t *)&v28 + 1));
          uint64_t v20 = *(void *)(v18 - 8);
          __chkstk_darwin(v19);
          id v22 = &v26[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
          (*(void (**)(unsigned char *))(v20 + 16))(v22);
          uint64_t v23 = sub_F7B50();
          (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v22, v18);
          sub_6BEC((uint64_t)&v27);
        }
        else
        {
          uint64_t v23 = 0;
        }
      }
      else
      {
        uint64_t v23 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
      }
      unsigned int v24 = [self isEmptyStamped:v23];
      swift_unknownObjectRelease();
      return (id)(v24 ^ 1);
    }
    else
    {
      return &dword_0 + 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_2E524()
{
  unint64_t result = qword_128270;
  if (!qword_128270)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_128270);
  }
  return result;
}

uint64_t sub_2E564(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_128280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id RCSAttachmentController.init(session:)(void *a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSession:a1];

  return v2;
}

{
  id v2;
  objc_super v4;

  v4.super_class = (Class)RCSAttachmentController;
  id v2 = objc_msgSendSuper2(&v4, "initWithSession:", a1);

  return v2;
}

void __swiftcall RCSAttachmentController.init()(RCSAttachmentController *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  [v1 init];
}

id RCSAttachmentController.init()()
{
  v1.super_class = (Class)RCSAttachmentController;
  return objc_msgSendSuper2(&v1, "init");
}

unint64_t type metadata accessor for RCSAttachmentController()
{
  unint64_t result = qword_1282B0;
  if (!qword_1282B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1282B0);
  }
  return result;
}

void RCSServiceSession.existingGroupChat(for:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  unsigned int v4 = sub_6BA8(a1, v2);

  sub_35F9C((uint64_t)v4, v1, v2, v3);
}

void RCSServiceSession.groupChat(from:subscriptionInfo:group:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v105 = a1;
  uint64_t v7 = v6;
  uint64_t v108 = a3;
  uint64_t v109 = a5;
  uint64_t v106 = a2;
  uint64_t v107 = a4;
  sub_1E74C(a1, (uint64_t)v118, &qword_127C58);
  uint64_t v102 = v118[0];
  uint64_t v9 = v118[2];
  uint64_t v144 = v118[1];
  uint64_t v10 = (char *)v118[3];
  uint64_t v112 = v118[5];
  uint64_t v113 = (void *)v118[4];
  uint64_t v111 = (uint8_t *)v118[6];
  LODWORD(v110) = v119;
  uint64_t v11 = sub_F70F0();
  uint64_t v101 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a6[3];
  uint64_t v15 = a6[4];
  unint64_t v16 = sub_6BA8(a6, v14);
  id v103 = v7;
  char v17 = (void *)sub_35F9C(v16, v7, v14, v15);
  if (v17)
  {
    uint64_t v18 = v102;
    v123[0] = v102;
    v123[1] = v144;
    uint64_t v100 = v10;
    uint64_t v101 = v9;
    v123[2] = v9;
    v123[3] = v10;
    v123[4] = v113;
    v123[5] = v112;
    v123[6] = v111;
    char v124 = (char)v110;
    uint64_t v125 = v106;
    uint64_t v126 = v108;
    uint64_t v127 = v107;
    uint64_t v128 = v109;
    long long v129 = v17;
    id v19 = v17;
    sub_36E80(v105, (void (*)(void, void, void, void, void, void, void, void))sub_36E1C);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = v104;
    uint64_t v21 = v103;
    sub_6F100((uint64_t)v123, a6);
    if (!v20)
    {
LABEL_5:
      sub_6F3AC((uint64_t)v123);
      sub_6DB0(v18, v144);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    id v22 = [self sharedInstance];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = sub_F78C0();
      v130[0] = 1;
      uint64_t v131 = v24;
      uint64_t v132 = v25;
      uint64_t v133 = 0;
      uint64_t v134 = 0;
      long long v135 = v20;
      char v136 = 0;
      swift_errorRetain();
      sub_6204C(v130);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_errorRelease();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v99 = v11;
  uint64_t v100 = v13;
  uint64_t v26 = v103;
  sub_30798((uint64_t)a6);
  int v28 = v27;
  uint64_t v144 = v29;
  id v31 = v30;
  uint64_t v32 = a6[3];
  uint64_t v33 = a6[4];
  sub_6BA8(a6, v32);
  unint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
  LODWORD(v113) = v28;
  if (v35)
  {
    static IMDChatRCSGroupIdentity.encodeGroupID(_:)(v34, v35);
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v38 = v104;
  }
  else
  {
    char v39 = static IMDChatRCSGroupIdentity.legacyInteractionEnabled.getter();
    uint64_t v38 = v104;
    if ((v39 & 1) != 0
      && (uint64_t v40 = a6[3],
          uint64_t v41 = a6[4],
          sub_6BA8(a6, v40),
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v41 + 8))(v117, v40, v41),
          sub_1E74C((uint64_t)v117, (uint64_t)v120, &qword_127C58),
          *((void *)&v120[0] + 1)))
    {
      v121[2] = v120[0];
      v121[3] = v120[1];
      v122[0] = v121[0];
      *(_OWORD *)((char *)v122 + 9) = *(_OWORD *)((char *)v121 + 9);
      unint64_t v42 = RCSHandle.rawValue.getter();
      unint64_t v44 = v43;
      sub_36E80((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
      static IMDChatRCSGroupIdentity.encodeGroupID(_:)(v42, v44);
      uint64_t v37 = v45;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v46 = [self sharedInstance];
      if (!v46)
      {
LABEL_42:
        __break(1u);
        return;
      }
      id v47 = v46;
      uint64_t v115 = 0x70756F7247534352;
      unint64_t v116 = 0xE900000000000020;
      sub_1E9A0((uint64_t)a6, (uint64_t)v114);
      v145._uint64_t countAndFlagsBits = sub_F7290();
      sub_F72E0(v145);
      swift_bridgeObjectRelease();
      uint64_t v48 = v115;
      unint64_t v49 = v116;
      uint64_t v50 = sub_F78C0();
      v137[0] = 1;
      uint64_t v138 = v50;
      uint64_t v139 = v51;
      uint64_t v140 = v48;
      unint64_t v141 = v49;
      uint64_t v142 = 0;
      char v143 = 0;
      swift_bridgeObjectRetain();
      sub_6204C(v137);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease();
      uint64_t v37 = 0;
    }
  }
  uint64_t v112 = sub_F71F0();
  if (a6[7])
  {
    unint64_t v52 = (void *)sub_F71F0();
    if (v37)
    {
LABEL_15:
      uint64_t v53 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  else
  {
    unint64_t v52 = 0;
    if (v37) {
      goto LABEL_15;
    }
  }
  uint64_t v53 = 0;
LABEL_18:
  if (v108) {
    uint64_t v54 = (void *)sub_F71F0();
  }
  else {
    uint64_t v54 = 0;
  }
  uint64_t v111 = v31;
  unint64_t v55 = v26;
  if (v109) {
    char v56 = (void *)sub_F71F0();
  }
  else {
    char v56 = 0;
  }
  uint64_t v57 = a6;
  uint64_t v58 = swift_bridgeObjectRetain();
  uint64_t v59 = v38;
  os_log_t v60 = sub_31010(v58);
  os_log_type_t v110 = v59;
  swift_bridgeObjectRelease();
  id v61 = sub_36BB4((uint64_t)v60);
  swift_bridgeObjectRelease();
  sub_3120C((uint64_t)v61);
  swift_bridgeObjectRelease();
  uint64_t v62 = (void *)sub_F7400();
  swift_bridgeObjectRelease();
  uint64_t v63 = v55;
  uint64_t v64 = v55;
  uint64_t v65 = (void *)v112;
  [v64 didJoinChat:v112 style:43 displayName:v52 groupID:v53 lastAddressedHandle:v54 lastAddressedSIMID:v56 handleInfo:v62];

  if ((v113 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v74 = v57[3];
    uint64_t v75 = v57[4];
    int v76 = sub_6BA8(v57, v74);
    uint64_t v77 = sub_35F9C(v76, v63, v74, v75);
    long long v69 = v57;
    uint64_t v70 = v105;
    if (v77) {
      return;
    }
LABEL_39:
    type metadata accessor for RCSServiceSession.ChatResolutionError();
    sub_36DC4();
    swift_allocError();
    long long v95 = (void *)v94;
    uint64_t v96 = v94 + 96;
    sub_1E74C(v70, v94, &qword_127C58);
    uint64_t v98 = v108;
    uint64_t v97 = v109;
    v95[8] = v106;
    v95[9] = v98;
    v95[10] = v107;
    v95[11] = v97;
    sub_1E9A0((uint64_t)v69, v96);
    swift_storeEnumTagMultiPayload();
    sub_36E80(v70, (void (*)(void, void, void, void, void, void, void, void))sub_36E1C);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    return;
  }
  uint64_t v113 = v57;
  id v66 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v67 = [v63 service];
  id v68 = [v67 internalName];

  if (!v68)
  {
    sub_F7220();
    id v68 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = (void *)IMCopyGUIDForChat();

  long long v69 = v113;
  uint64_t v70 = v105;
  long long v71 = v100;
  if (v21)
  {
    sub_F7220();
    uint64_t v73 = v72;
  }
  else
  {
    uint64_t v73 = 0;
  }
  id v78 = [self sharedInstance];
  if (!v73)
  {
LABEL_41:

    __break(1u);
    goto LABEL_42;
  }
  uint64_t v79 = v78;
  swift_bridgeObjectRelease();
  id v80 = [v79 existingChatWithGUID:v21];

  if (!v80) {
    goto LABEL_39;
  }
  id v81 = v80;
  uint64_t v82 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v83 = v101;
  uint64_t v84 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v71, v82, v99);
  id v85 = v81;
  unint64_t v86 = sub_F70D0();
  os_log_type_t v87 = sub_F7670();
  LODWORD(v144) = v87;
  if (os_log_type_enabled(v86, v87))
  {
    id v88 = (uint8_t *)swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    v114[0] = v112;
    uint64_t v111 = v88;
    *(_DWORD *)id v88 = 136315138;
    uint64_t v104 = v88 + 4;
    id v89 = v85;
    id v90 = [v89 description];
    uint64_t v91 = sub_F7220();
    unint64_t v93 = v92;

    uint64_t v115 = sub_A3FC(v91, v93, v114);
    long long v69 = v113;
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v86, (os_log_type_t)v144, "Updating identity for chat: %s", v111, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v99);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v83 + 8))(v71, v84);
  }
  v114[3] = sub_6CA4(0, &qword_127C48);
  v114[4] = (uint64_t)&protocol witness table for IMDChat;
  v114[0] = (uint64_t)v85;
  IMDChatRCSGroupIdentity.converge(identity:)(v69);
  sub_6AA0((uint64_t)v114);
}

uint64_t sub_2F238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v7 = (void *)(a1 + *(int *)(type metadata accessor for RCSFile(0) + 20));
  uint64_t v8 = sub_F71F0();
  if ((*v7 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_F79A0();
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)v8;
    id v10 = objc_msgSend(v4, "guidForNewIncomingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:", v8, 0);

    if (!v10) {
      return 0;
    }
    id v11 = [v4 transferForGUID:v10];

    if (v11)
    {
      unint64_t v12 = RCSFile.userInfoRepresentation(simID:)(a2, a3);
      sub_1BC40(v12);
      swift_bridgeObjectRelease();
      uint64_t v13 = (void *)sub_F71A0();
      swift_bridgeObjectRelease();
      [v11 setUserInfo:v13];
    }
    return (uint64_t)v11;
  }
  return result;
}

Swift::Bool __swiftcall RCSServiceSession.hasStoredMessage(withGUID:)(Swift::String withGUID)
{
  id v1 = [self sharedInstance];
  uint64_t v2 = (void *)sub_F71F0();
  unsigned __int8 v3 = [v1 hasStoredMessageWithGUID:v2];

  return v3;
}

void RCSServiceSession.didNativelyReceive(_:for:alreadyReceivedReplicatedVersion:)(uint64_t a1, void *a2, char a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = sub_F70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v12 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
    uint64_t v13 = sub_F70D0();
    os_log_type_t v14 = sub_F76B0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "Skipped didReceiveMessage, already has replicated version", v15, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    id v16 = [a2 chatIdentifier];
    if (!v16)
    {
      __break(1u);
      return;
    }
    char v17 = v16;
    objc_msgSend(v4, "didReceiveMessage:forChat:style:fromIDSID:", a1, v16, objc_msgSend(a2, "style"), 0);
  }
  id v18 = [v4 relayController];
  id v19 = [v4 service];
  id v20 = [v19 internalName];

  if (!v20)
  {
    sub_F7220();
    id v20 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  [v18 relayMessageToPeers:a1 forChat:a2 serviceName:v20 reflectOnly:0 requiredCapabilities:0];
}

void RCSServiceSession.didReceiveMessage(_:forChat:style:fromIDSID:)(void *a1, uint64_t a2, void *a3, unsigned __int8 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)sub_F71F0();
  id v13 = [v6 chatForChatIdentifier:v12 style:a4];

  if (v13)
  {
    id v14 = [v6 tapbackInterpreter];
    id v15 = [v14 interpretMessageItem:a1 inChat:v13];

    id v16 = (void *)sub_F71F0();
    if (a6) {
      char v17 = (void *)sub_F71F0();
    }
    else {
      char v17 = 0;
    }
    v28.receiver = v6;
    v28.super_class = (Class)RCSServiceSession;
    objc_msgSendSuper2(&v28, "didReceiveMessage:forChat:style:fromIDSID:", v15, v16, a4, v17);
  }
  else
  {
    id v18 = [self sharedInstance];
    if (v18)
    {
      id v19 = v18;
      sub_F78A0(41);
      swift_bridgeObjectRelease();
      uint64_t v30 = 0x206567617373656DLL;
      uint64_t v31 = 0xEB00000000204449;
      id v20 = [a1 guid];
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = sub_F7220();
        uint64_t v24 = v23;
      }
      else
      {
        uint64_t v24 = (void *)0xE500000000000000;
        uint64_t v22 = 0x3E6C696E3CLL;
      }
      v37._uint64_t countAndFlagsBits = v22;
      v37._object = v24;
      sub_F72E0(v37);
      swift_bridgeObjectRelease();
      v38._object = (void *)0x8000000000102CE0;
      v38._uint64_t countAndFlagsBits = 0xD000000000000011;
      sub_F72E0(v38);
      v39._uint64_t countAndFlagsBits = a2;
      v39._object = a3;
      sub_F72E0(v39);
      v40._uint64_t countAndFlagsBits = 0x20656C79747320;
      v40._object = (void *)0xE700000000000000;
      sub_F72E0(v40);
      unsigned __int8 v29 = a4;
      v41._uint64_t countAndFlagsBits = sub_F7B20();
      sub_F72E0(v41);
      swift_bridgeObjectRelease();
      uint64_t v26 = v30;
      uint64_t v25 = v31;
      LOBYTE(v30) = 3;
      uint64_t v31 = sub_F78C0();
      uint64_t v32 = v27;
      uint64_t v33 = v26;
      uint64_t v34 = v25;
      uint64_t v35 = 0;
      char v36 = 1;
      swift_bridgeObjectRetain();
      sub_6204C((unsigned __int8 *)&v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t RCSServiceSession.createTransfer(withFilename:size:localURL:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_36FB8(a1, a2, a3, a4);
}

id RCSServiceSession.newTransfer(file:simID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = sub_2F238(a1, a2, a3);

    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2FB30(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_35950(a1, (uint64_t)sub_3590C, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t RCSServiceSession.downloadTransfer(on:transferURL:destURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1282C8 + dword_1282C8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_2FC8C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2FC8C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  unsigned __int8 v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_2FD88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_F71B0();

  return swift_continuation_resume();
}

void RCSServiceSession.startFinalizingTransfer(_:)(void *a1)
{
  id v2 = [self sharedInstance];
  if (v2)
  {
    unsigned __int8 v3 = v2;
    id v4 = [a1 guid];
    [v3 startFinalizingTransfer:v4];
  }
  else
  {
    __break(1u);
  }
}

void RCSServiceSession.endTransfer(_:endState:updateByteCounts:)(void *a1, uint64_t a2, char a3)
{
  id v6 = [self sharedInstance];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [a1 guid];
    [v7 endTransfer:v8 endState:a2 updateByteCounts:a3 & 1];
  }
  else
  {
    __break(1u);
  }
}

void RCSServiceSession.failTransfer(_:error:)(void *a1)
{
  id v2 = [self sharedInstance];
  if (v2)
  {
    unsigned __int8 v3 = v2;
    id v4 = [a1 guid];
    id v5 = (id)sub_F6D20();
    [v3 failTransfer:v4 error:v5];
  }
  else
  {
    __break(1u);
  }
}

uint64_t RCSServiceSession.maxAutoDownloadSize(for:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_551C(&qword_1282D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_F70B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  uint64_t v12 = &v20[-v11];
  type metadata accessor for RCSFile(0);
  swift_bridgeObjectRetain();
  sub_F7070();
  sub_F7030();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1E944((uint64_t)v7, &qword_1282D0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v12, v7, v8);
    sub_F7040();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
  }
  char v21 = 0;
  id v13 = self;
  id v14 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t)[v13 largeFileSizeFor:v14 allowedLargerRepresentation:&v21];

  sub_BB9C(a2, a3);
  if (v15 >= v16) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v15;
  }
  if (v16 <= 0) {
    uint64_t v18 = v15;
  }
  if (v17) {
    return v15 & (v15 >> 63);
  }
  else {
    return v18;
  }
}

Swift::UInt64 __swiftcall RCSServiceSession.freeSpaceInHomeDirectory()()
{
  uint64_t v0 = self;

  return (Swift::UInt64)[v0 freeSpaceInHomeDirectory];
}

Swift::UInt64 __swiftcall RCSServiceSession.minimumFreeSpace()()
{
  uint64_t v0 = self;

  return (Swift::UInt64)[v0 minimumFreeSpace];
}

uint64_t RCSServiceSession.ChatResolutionError.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RCSMessage(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = type metadata accessor for RCSServiceSession.ChatResolutionError();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_37AAC(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for RCSServiceSession.ChatResolutionError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = (uint64_t *)&v10[*(int *)(sub_551C(&qword_1282D8) + 48)];
      uint64_t v14 = *v12;
      id v13 = (void *)v12[1];
      sub_5674((uint64_t)v10, (uint64_t)v7);
      *(void *)&v58[0] = 0;
      *((void *)&v58[0] + 1) = 0xE000000000000000;
      sub_F78A0(53);
      v59._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
      v59._object = (void *)0x8000000000102D30;
      sub_F72E0(v59);
    }
    else
    {
      uint64_t v35 = (uint64_t *)&v10[*(int *)(sub_551C(&qword_1282D8) + 48)];
      uint64_t v14 = *v35;
      id v13 = (void *)v35[1];
      sub_5674((uint64_t)v10, (uint64_t)v7);
      *(void *)&v58[0] = 0;
      *((void *)&v58[0] + 1) = 0xE000000000000000;
      sub_F78A0(49);
      swift_bridgeObjectRelease();
      *(void *)&v58[0] = 0xD00000000000002BLL;
      *((void *)&v58[0] + 1) = 0x8000000000102D00;
    }
    sub_37AAC((uint64_t)v7, (uint64_t)v5, type metadata accessor for RCSMessage);
    v63._uint64_t countAndFlagsBits = sub_F7270();
    sub_F72E0(v63);
    swift_bridgeObjectRelease();
    v64._uint64_t countAndFlagsBits = 8250;
    v64._object = (void *)0xE200000000000000;
    sub_F72E0(v64);
    v65._uint64_t countAndFlagsBits = v14;
    v65._object = v13;
    sub_F72E0(v65);
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)&v58[0];
    sub_3BDE0((uint64_t)v7, type metadata accessor for RCSMessage);
  }
  else
  {
    uint64_t v15 = *(void *)v10;
    uint64_t v16 = *((void *)v10 + 1);
    uint64_t v17 = *((void *)v10 + 2);
    uint64_t v18 = *((void *)v10 + 3);
    uint64_t v19 = *((void *)v10 + 4);
    uint64_t v20 = *((void *)v10 + 5);
    uint64_t v21 = *((void *)v10 + 6);
    char v22 = v10[56];
    uint64_t v23 = *((void *)v10 + 8);
    uint64_t v42 = *((void *)v10 + 9);
    uint64_t v43 = v23;
    uint64_t v41 = *((void *)v10 + 10);
    uint64_t v24 = *((void *)v10 + 11);
    uint64_t v39 = v15;
    uint64_t v40 = v24;
    long long v25 = *((_OWORD *)v10 + 11);
    v58[4] = *((_OWORD *)v10 + 10);
    v58[5] = v25;
    v58[6] = *((_OWORD *)v10 + 12);
    long long v26 = *((_OWORD *)v10 + 7);
    v58[0] = *((_OWORD *)v10 + 6);
    v58[1] = v26;
    long long v27 = *((_OWORD *)v10 + 9);
    void v58[2] = *((_OWORD *)v10 + 8);
    v58[3] = v27;
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    sub_F78A0(69);
    uint64_t v56 = v48;
    unint64_t v57 = v49;
    v60._uint64_t countAndFlagsBits = 0xD000000000000024;
    v60._object = (void *)0x8000000000102D60;
    sub_F72E0(v60);
    sub_1E9A0((uint64_t)v58, (uint64_t)&v48);
    v61._uint64_t countAndFlagsBits = sub_F7270();
    sub_F72E0(v61);
    swift_bridgeObjectRelease();
    v62._uint64_t countAndFlagsBits = 0x207265646E657320;
    v62._object = (void *)0xE800000000000000;
    sub_F72E0(v62);
    if (v16)
    {
      uint64_t v28 = v39;
      uint64_t v48 = v39;
      unint64_t v49 = v16;
      uint64_t v50 = v17;
      uint64_t v51 = v18;
      uint64_t v52 = v19;
      uint64_t v53 = v20;
      uint64_t v54 = v21;
      char v55 = v22;
      uint64_t v29 = RCSHandle.rawValue.getter();
      uint64_t v30 = v28;
      uint64_t v31 = v29;
      uint64_t v33 = v32;
      sub_6DB0(v30, v16);
      v34._uint64_t countAndFlagsBits = v31;
    }
    else
    {
      uint64_t v33 = (void *)0xE500000000000000;
      v34._uint64_t countAndFlagsBits = 0x3E6C696E3CLL;
    }
    v34._object = v33;
    sub_F72E0(v34);
    swift_bridgeObjectRelease();
    v66._object = (void *)0x8000000000102D90;
    v66._uint64_t countAndFlagsBits = 0xD000000000000012;
    sub_F72E0(v66);
    uint64_t v44 = v43;
    uint64_t v45 = v42;
    uint64_t v46 = v41;
    uint64_t v47 = v40;
    v67._uint64_t countAndFlagsBits = sub_F7270();
    sub_F72E0(v67);
    swift_bridgeObjectRelease();
    v68._uint64_t countAndFlagsBits = 46;
    v68._object = (void *)0xE100000000000000;
    sub_F72E0(v68);
    uint64_t v36 = v56;
    sub_1E8E8((uint64_t)v58);
  }
  return v36;
}

void sub_30798(uint64_t a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::String v67 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v63 = (char *)&v62 - v6;
  id v64 = self;
  id v7 = [v64 sharedInstance];
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_31010(v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_F7400();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    uint64_t v10 = (void *)sub_F71F0();
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v66 = v3;
  uint64_t v68 = v2;
  id v11 = [v7 existingChatsForIDs:v9 displayName:v10 groupID:0 style:43];

  sub_6CA4(0, &qword_127C48);
  unint64_t v12 = sub_F7410();

  uint64_t v73 = 0;
  unint64_t v74 = 0xE000000000000000;
  if (v12 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_F79B0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8));
    if (v13)
    {
LABEL_6:
      unint64_t v69 = v12 & 0xC000000000000001;
      uint64_t v14 = 4;
      do
      {
        if (v69) {
          id v15 = (id)sub_F78D0();
        }
        else {
          id v15 = *(id *)(v12 + 8 * v14);
        }
        uint64_t v16 = v15;
        uint64_t v17 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        id v18 = [v15 displayName];
        if (v18)
        {
          uint64_t v19 = v18;
          sub_F7220();
          uint64_t v21 = v20;

          swift_bridgeObjectRelease();
          sub_1E9A0(a1, (uint64_t)v72);
          if (v21)
          {
            sub_1E8E8((uint64_t)v72);
            goto LABEL_16;
          }
        }
        else
        {
          sub_1E9A0(a1, (uint64_t)v72);
        }
        uint64_t v22 = v72[7];
        sub_1E8E8((uint64_t)v72);
        if (!v22)
        {
          swift_bridgeObjectRelease();
          id v29 = [v16 chatIdentifier];
          if (!v29) {
            goto LABEL_26;
          }
          goto LABEL_22;
        }
LABEL_16:
        id v23 = [v16 displayName];
        if (!v23) {
          goto LABEL_28;
        }
        uint64_t v24 = v23;
        uint64_t v25 = sub_F7220();
        uint64_t v27 = v26;

        uint64_t v28 = *(void *)(a1 + 56);
        if (!v28)
        {
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
        if (v25 == *(void *)(a1 + 48) && v28 == v27)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v34 = sub_F7B60();
          swift_bridgeObjectRelease();
          if ((v34 & 1) == 0) {
            goto LABEL_28;
          }
        }
        swift_bridgeObjectRelease();
        id v29 = [v16 chatIdentifier];
        if (!v29)
        {
LABEL_26:
          uint64_t v31 = 0;
          unint64_t v33 = 0xE000000000000000;
          goto LABEL_27;
        }
LABEL_22:
        uint64_t v30 = v29;
        uint64_t v31 = sub_F7220();
        unint64_t v33 = v32;

LABEL_27:
        uint64_t v73 = v31;
        unint64_t v74 = v33;
LABEL_28:
        uint64_t v36 = v73;
        unint64_t v35 = v74;
        uint64_t v37 = HIBYTE(v74) & 0xF;
        if ((v74 & 0x2000000000000000) == 0) {
          uint64_t v37 = v73 & 0xFFFFFFFFFFFFLL;
        }
        if (v37)
        {
          swift_bridgeObjectRelease();
          uint64_t v38 = Logger.rcs.unsafeMutableAddressor();
          uint64_t v39 = v66;
          uint64_t v40 = v63;
          uint64_t v41 = v68;
          (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v63, v38, v68);
          sub_1E9A0(a1, (uint64_t)v72);
          swift_bridgeObjectRetain_n();
          uint64_t v42 = sub_F70D0();
          os_log_type_t v43 = sub_F7670();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = swift_slowAlloc();
            uint64_t v71 = swift_slowAlloc();
            *(_DWORD *)uint64_t v44 = 136315394;
            swift_bridgeObjectRetain();
            v70[0] = sub_A3FC(v36, v35, &v71);
            sub_F77B0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v44 + 12) = 2080;
            sub_1E9A0((uint64_t)v72, (uint64_t)v70);
            uint64_t v45 = sub_F7270();
            v70[0] = sub_A3FC(v45, v46, &v71);
            sub_F77B0();
            swift_bridgeObjectRelease();
            sub_1E8E8((uint64_t)v72);
            _os_log_impl(&dword_0, v42, v43, "reusing existing chatIdentifer %s for incoming group %s", (uint8_t *)v44, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v39 + 8))(v63, v68);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            sub_1E8E8((uint64_t)v72);

            (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
          }
LABEL_42:
          swift_beginAccess();
          return;
        }

        ++v14;
      }
      while (v17 != v13);
    }
  }
  swift_bridgeObjectRelease();
  id v47 = [v64 sharedInstance];
  id v48 = [v65 account];
  id v49 = [v47 generateUnusedChatIdentifierForGroupChatWithAccount:v48];

  if (v49)
  {
    uint64_t v50 = sub_F7220();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();

    uint64_t v73 = v50;
    unint64_t v74 = v52;
    swift_bridgeObjectRetain();
    uint64_t v53 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v55 = v66;
    uint64_t v54 = v67;
    uint64_t v56 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v67, v53, v68);
    sub_1E9A0(a1, (uint64_t)v72);
    swift_bridgeObjectRetain();
    unint64_t v57 = sub_F70D0();
    os_log_type_t v58 = sub_F7670();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136315394;
      swift_bridgeObjectRetain();
      v70[0] = sub_A3FC(v50, v52, &v71);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v59 + 12) = 2080;
      sub_1E9A0((uint64_t)v72, (uint64_t)v70);
      uint64_t v60 = sub_F7270();
      v70[0] = sub_A3FC(v60, v61, &v71);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_1E8E8((uint64_t)v72);
      _os_log_impl(&dword_0, v57, v58, "creating a new chatIdentifer %sfor incoming group %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v67, v56);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1E8E8((uint64_t)v72);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
    }
    goto LABEL_42;
  }
  __break(1u);
}

void *sub_31010(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_4FE88(0, v1, 0);
    uint64_t v3 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_4FE88(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v5;
      v8[5] = v4;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t RCSServiceSession.groupChat(for:group:)(uint64_t a1, void *a2)
{
  sub_27F4C(a1, (uint64_t)v16);
  if (v18[58])
  {
    uint64_t v3 = v16[0];
    uint64_t v4 = v16[1];
    uint64_t v5 = v16[2];
    uint64_t v6 = v16[3];
    uint64_t v7 = v16[4];
    uint64_t v8 = v16[5];
    uint64_t v9 = v16[6];
    char v10 = v17;
    sub_27FA8((uint64_t)v18);
  }
  else
  {
    sub_27EF8((uint64_t)v16);
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    char v10 = 0;
  }
  v19[0] = v3;
  v19[1] = v4;
  v19[2] = v5;
  v19[3] = v6;
  v19[4] = v7;
  v19[5] = v8;
  v19[6] = v9;
  char v20 = v10;
  uint64_t v11 = type metadata accessor for RCSMessage(0);
  RCSServiceSession.groupChat(from:subscriptionInfo:group:)((uint64_t)v19, *(void *)(a1 + *(int *)(v11 + 52)), *(void *)(a1 + *(int *)(v11 + 52) + 8), *(void *)(a1 + *(int *)(v11 + 52) + 16), *(void *)(a1 + *(int *)(v11 + 52) + 24), a2);
  uint64_t v13 = v12;
  sub_6DB0(v3, v4);
  return v13;
}

void *sub_3120C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_4FF08(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      sub_551C(&qword_1284E8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_4FF08(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_4FF08(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_1EBC4(&v8, &v2[4 * v6 + 4]);
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_3133C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_4FF08(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_4FF08(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_4FF08(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_1EBC4(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_31464(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_4FF08(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      v4 += 8;
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_4FF08(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_4FF08(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_1EBC4(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

id RCSServiceSession.instantMessageChat(for:)(uint64_t a1)
{
  id v2 = (id)a1;
  sub_27F4C(a1, (uint64_t)v39);
  if (v42 == 1)
  {
    sub_27F4C((uint64_t)v39, (uint64_t)v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v38)
    {
      uint64_t v3 = v36;
LABEL_6:
      sub_27FA8((uint64_t)v3);
      type metadata accessor for RCSServiceSession.ChatResolutionError();
      sub_36DC4();
      swift_allocError();
      uint64_t v5 = v4;
      unint64_t v6 = (void *)(v4 + *(int *)(sub_551C(&qword_1282D8) + 48));
      sub_37AAC((uint64_t)v2, v5, type metadata accessor for RCSMessage);
      *unint64_t v6 = 0xD00000000000005CLL;
      v6[1] = 0x8000000000102DB0;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_27EF8((uint64_t)v39);
      return v2;
    }
    uint64_t v32 = (uint64_t)v2;
    uint64_t v57 = v1;
    uint64_t v7 = v36[0];
    uint64_t v8 = v36[1];
    uint64_t v10 = v36[2];
    uint64_t v9 = v36[3];
    uint64_t v11 = v36[4];
    uint64_t v12 = v36[5];
    uint64_t v13 = v36[6];
    int v14 = v37;
  }
  else
  {
    sub_27F4C((uint64_t)v39, (uint64_t)v33);
    if (v35)
    {
      uint64_t v3 = v33;
      goto LABEL_6;
    }
    uint64_t v32 = (uint64_t)v2;
    uint64_t v57 = v1;
    uint64_t v7 = v33[0];
    uint64_t v8 = v33[1];
    uint64_t v10 = v33[2];
    uint64_t v9 = v33[3];
    uint64_t v11 = v33[4];
    uint64_t v12 = v33[5];
    uint64_t v13 = v33[6];
    int v14 = v34;
  }
  sub_27EF8((uint64_t)v39);
  uint64_t v49 = v7;
  uint64_t v50 = v8;
  uint64_t v51 = v10;
  uint64_t v52 = v9;
  uint64_t v53 = v11;
  uint64_t v54 = v12;
  uint64_t v55 = v13;
  char v56 = v14;
  uint64_t v15 = RCSHandle.chatBotId.getter();
  id v2 = sub_72318(v10, v9, (v14 - 1) < 2, v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    sub_27F4C(v32, (uint64_t)v39);
    if (v42)
    {
      uint64_t v17 = v39[0];
      uint64_t v18 = v39[1];
      uint64_t v19 = v39[3];
      uint64_t v31 = v39[2];
      uint64_t v20 = v39[4];
      uint64_t v21 = v39[5];
      uint64_t v22 = v39[6];
      char v23 = v40;
      sub_27FA8((uint64_t)&v41);
    }
    else
    {
      sub_27EF8((uint64_t)v39);
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v31 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      char v23 = 0;
    }
    uint64_t v27 = v32 + *(int *)(type metadata accessor for RCSMessage(0) + 52);
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *(void *)(v27 + 24);
    v43[0] = v17;
    v43[1] = v18;
    void v43[2] = v31;
    v43[3] = v19;
    v43[4] = v20;
    v43[5] = v21;
    v43[6] = v22;
    char v44 = v23;
    uint64_t v45 = v28;
    long long v46 = *(_OWORD *)(v27 + 8);
    uint64_t v47 = v29;
    id v48 = v2;
    swift_bridgeObjectRetain();
    id v2 = v2;
    swift_bridgeObjectRetain();
    sub_6F3AC((uint64_t)v43);
    sub_6DB0(v17, v18);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for RCSServiceSession.ChatResolutionError();
    sub_36DC4();
    swift_allocError();
    uint64_t v25 = v24;
    uint64_t v26 = (void *)(v24 + *(int *)(sub_551C(&qword_1282D8) + 48));
    sub_37AAC(v32, v25, type metadata accessor for RCSMessage);
    *uint64_t v26 = 0xD000000000000013;
    v26[1] = 0x8000000000102E10;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v2;
}

uint64_t RCSServiceSession.generatePreview(for:attachmentPath:balloonBundleID:senderContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 56) = a1;
  unint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1282E8
                                                                                              + dword_1282E8);
  int v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 64) = v14;
  *int v14 = v7;
  v14[1] = sub_31A50;
  return v16(v7 + 16, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_31A50()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = *(void *)(*v1 + 24);
  char v6 = *(unsigned char *)(v2 + 32);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void *)(v2 + 48);
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v9 = *(void *)(v2 + 56);
    *(void *)uint64_t v9 = v4;
    *(void *)(v9 + 8) = v5;
    *(unsigned char *)(v9 + 16) = v6;
    *(void *)(v9 + 24) = v7;
    *(void *)(v9 + 32) = v8;
  }
  uint64_t v10 = *(uint64_t (**)(void))(v3 + 8);
  return v10();
}

uint64_t sub_31BA0(uint64_t a1, uint64_t a2, char a3, void *a4, double a5, double a6)
{
  uint64_t v6 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_551C(&qword_127D08);
    uint64_t v8 = swift_allocError();
    *uint64_t v9 = a4;
    id v10 = a4;
    return _swift_continuation_throwingResumeWithError(v6, v8);
  }
  else
  {
    if (a2) {
      uint64_t v14 = sub_F7220();
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v15 = *(void *)(*(void *)(v6 + 64) + 40);
    *(void *)uint64_t v15 = v14;
    *(void *)(v15 + 8) = a2;
    *(unsigned char *)(v15 + 16) = a3;
    *(double *)(v15 + 24) = a5;
    *(double *)(v15 + 32) = a6;
    return swift_continuation_throwingResume();
  }
}

uint64_t RCSServiceSession.generateSafeRender(for:)(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  sub_F74E0();
  v2[17] = sub_F74D0();
  uint64_t v4 = sub_F7470();
  v2[18] = v4;
  v2[19] = v3;
  return _swift_task_switch(sub_31D20, v4, v3);
}

uint64_t sub_31D20()
{
  id v1 = [self sharedInstance];
  v0[20] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_551C(&qword_1282F8);
    v0[21] = v3;
    v0[22] = *(void *)(*(void *)(v3 - 8) + 64);
    uint64_t v4 = swift_task_alloc();
    v0[23] = v4;
    uint64_t v5 = sub_F6D70();
    v0[24] = v5;
    v0[2] = v0;
    v0[7] = v4;
    v0[3] = sub_31F24;
    uint64_t v6 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_321D0;
    v0[13] = &unk_11E288;
    v0[14] = v6;
    [v2 generateSafeRender:v5 completionBlock:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    uint64_t v7 = v0[15];
    swift_release();
    uint64_t v8 = sub_F6DC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9(0);
  }
}

uint64_t sub_31F24()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 200) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 144);
    uint64_t v4 = *(void *)(v1 + 152);
    uint64_t v5 = sub_32138;
  }
  else
  {
    *(_DWORD *)(v1 + 208) = *(_DWORD *)(*(void *)(v1 + 168) + 48);
    uint64_t v3 = *(void *)(v1 + 144);
    uint64_t v4 = *(void *)(v1 + 152);
    uint64_t v5 = sub_32040;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_32040()
{
  uint64_t v1 = *(int *)(v0 + 208);
  uint64_t v2 = *(unsigned __int8 **)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 120);

  swift_release();
  uint64_t v6 = swift_task_alloc() + *(int *)(v4 + 48);
  uint64_t v7 = *v2;
  sub_1E74C((uint64_t)&v2[v1], v6, &qword_128300);
  sub_1E74C(v6, v5, &qword_128300);
  swift_task_dealloc();

  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v7);
}

uint64_t sub_32138()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = (void *)v0[20];
  swift_release();
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3(0);
}

uint64_t sub_321D0(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_551C(&qword_127D08);
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = a4;
    id v8 = a4;
    return _swift_continuation_throwingResumeWithError(v4, v6);
  }
  else
  {
    uint64_t v11 = sub_551C(&qword_1282F8);
    __chkstk_darwin(v11);
    uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    *uint64_t v13 = a2;
    uint64_t v14 = sub_551C(&qword_128300);
    __chkstk_darwin(v14 - 8);
    unint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a3)
    {
      sub_F6D80();
      uint64_t v17 = sub_F6DC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
    }
    else
    {
      uint64_t v18 = sub_F6DC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
    }
    sub_1E74C((uint64_t)v16, (uint64_t)&v13[*(int *)(v11 + 48)], &qword_128300);
    sub_1E74C((uint64_t)v13, *(void *)(*(void *)(v4 + 64) + 40), &qword_1282F8);
    return swift_continuation_throwingResume();
  }
}

uint64_t RCSServiceSession.categorize(_:rcsMessage:foundChat:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_F70F0();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = sub_F74E0();
  v4[16] = sub_F74D0();
  uint64_t v6 = sub_F7470();
  v4[17] = v6;
  v4[18] = v7;
  return _swift_task_switch(sub_3252C, v6, v7);
}

uint64_t sub_3252C()
{
  uint64_t v98 = v0;
  id v1 = [*(id *)(v0 + 80) participants];
  if (!v1) {
LABEL_57:
  }
    __break(1u);
  uint64_t v2 = v1;
  sub_6CA4(0, (unint64_t *)&qword_127C80);
  unint64_t v3 = sub_F7410();

  uint64_t v94 = (void *)v0;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_4;
    }
LABEL_18:
    uint64_t v6 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_F79B0();
  if (!v4) {
    goto LABEL_18;
  }
LABEL_4:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)sub_F78D0();
    }
    else {
      id v7 = *(id *)(v3 + 8 * v5 + 32);
    }
    id v8 = v7;
    id v9 = [v7 ID];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_F7220();
      uint64_t v13 = v12;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_350A4(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v15 = *((void *)v6 + 2);
      unint64_t v14 = *((void *)v6 + 3);
      if (v15 >= v14 >> 1) {
        uint64_t v6 = sub_350A4((char *)(v14 > 1), v15 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v15 + 1;
      unint64_t v16 = &v6[16 * v15];
      *((void *)v16 + 4) = v11;
      *((void *)v16 + 5) = v13;
    }
    else
    {
    }
    ++v5;
  }
  while (v4 != v5);
LABEL_19:
  uint64_t v17 = (void *)v0;
  *(void *)(v0 + 152) = v6;
  uint64_t v18 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease_n();
  *(unsigned char *)(v0 + 200) = 0;
  id v19 = [v18 lastAddressedLocalHandle];
  if (v19)
  {
    uint64_t v90 = sub_F7220();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v90 = 0;
    unint64_t v21 = 0;
  }
  id v22 = [*(id *)(v0 + 80) lastAddressedSIMID];
  if (v22)
  {
    char v23 = v22;
    uint64_t v96 = sub_F7220();
    unint64_t v25 = v24;
  }
  else
  {
    uint64_t v96 = 0;
    unint64_t v25 = 0xE000000000000000;
  }
  *(void *)(v0 + 160) = v25;
  uint64_t v26 = self;
  uint64_t v27 = (void *)sub_F71F0();
  id v28 = [v26 IMMMSEmailAddressToMatchForPhoneNumber:v19 simID:v27];

  if (v28)
  {
    uint64_t v89 = sub_F7220();
    unint64_t v30 = v29;
  }
  else
  {
    uint64_t v89 = 0;
    unint64_t v30 = 0;
  }
  unint64_t v93 = v25;
  uint64_t v31 = (void *)sub_F71F0();
  id v32 = [v26 IMCountryCodeForPhoneNumber:v19 simID:v31];

  unint64_t v33 = v30;
  if (v32)
  {
    uint64_t v92 = sub_F7220();
    unint64_t v35 = v34;
  }
  else
  {
    uint64_t v92 = 0;
    unint64_t v35 = 0;
  }
  unsigned __int8 v37 = (void **)(v0 + 64);
  uint64_t v36 = *(void **)(v0 + 64);
  v94[21] = v35;
  uint64_t v39 = v94[13];
  uint64_t v38 = v94[14];
  uint64_t v40 = v94[12];
  uint64_t v41 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v41, v40);
  unint64_t v42 = v33;
  swift_bridgeObjectRetain();
  id v43 = v36;
  unint64_t v44 = v93;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v45 = v43;
  swift_bridgeObjectRetain();
  long long v46 = sub_F70D0();
  os_log_type_t v47 = sub_F7670();
  if (os_log_type_enabled(v46, v47))
  {
    os_log_type_t v85 = v47;
    log = v46;
    unint64_t v87 = v42;
    unint64_t v88 = v21;
    id v48 = *v37;
    uint64_t v49 = swift_slowAlloc();
    v97[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136316162;
    id v50 = [v48 guid];
    if (!v50)
    {
      id v80 = *v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      __break(1u);
      return withCheckedContinuation<A>(isolation:function:_:)(v73, v77, v75, v78, v74, v76, v79, v72);
    }
    uint64_t v51 = v50;
    uint64_t v17 = v94;
    uint64_t v82 = v94[13];
    uint64_t v83 = v94[12];
    uint64_t v84 = v94[14];
    uint64_t v52 = (void *)v94[8];
    uint64_t v53 = sub_F7220();
    unint64_t v55 = v54;

    v94[4] = sub_A3FC(v53, v55, v97);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v49 + 12) = 2080;
    if (v88) {
      uint64_t v56 = v90;
    }
    else {
      uint64_t v56 = 7104878;
    }
    if (v88) {
      unint64_t v57 = v88;
    }
    else {
      unint64_t v57 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    v94[2] = sub_A3FC(v56, v57, v97);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v49 + 22) = 2080;
    unint64_t v44 = v93;
    swift_bridgeObjectRetain();
    v94[6] = sub_A3FC(v96, v93, v97);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v49 + 32) = 2080;
    if (v87) {
      uint64_t v58 = v89;
    }
    else {
      uint64_t v58 = 7104878;
    }
    if (v87) {
      unint64_t v59 = v87;
    }
    else {
      unint64_t v59 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    v94[7] = sub_A3FC(v58, v59, v97);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v49 + 42) = 2080;
    if (v35) {
      uint64_t v60 = v92;
    }
    else {
      uint64_t v60 = 7104878;
    }
    if (v35) {
      unint64_t v61 = v35;
    }
    else {
      unint64_t v61 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    v94[5] = sub_A3FC(v60, v61, v97);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, log, v85, "Categorizing %s simNumber %s simID %s myEmail %s cc %s", (uint8_t *)v49, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v62 = v92;
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
  }
  else
  {
    uint64_t v63 = v94[13];
    uint64_t v91 = v94[14];
    uint64_t v64 = v94[12];
    id v65 = (void *)v94[8];

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v91, v64);
    uint64_t v62 = v92;
  }
  uint64_t v66 = v17[11];
  uint64_t v67 = v17[8];
  int8x16_t v95 = *(int8x16_t *)(v17 + 9);
  uint64_t v68 = sub_F74D0();
  v17[22] = v68;
  unint64_t v69 = (int8x16_t *)swift_task_alloc();
  v17[23] = v69;
  v69[1].i64[0] = v66;
  v69[1].i64[1] = v67;
  v69[2] = vextq_s8(v95, v95, 8uLL);
  v69[3].i64[0] = v96;
  v69[3].i64[1] = v44;
  v69[4].i64[0] = (uint64_t)v6;
  v69[4].i64[1] = (uint64_t)(v17 + 25);
  v69[5].i64[0] = v62;
  v69[5].i64[1] = v35;
  uint64_t v70 = (void *)swift_task_alloc();
  v17[24] = v70;
  uint64_t v71 = sub_6CA4(0, &qword_127C48);
  void *v70 = v17;
  v70[1] = sub_32DF4;
  uint64_t v72 = v71;
  uint64_t v73 = v17 + 3;
  unint64_t v74 = 0x8000000000102E50;
  uint64_t v75 = &protocol witness table for MainActor;
  int v76 = sub_3888C;
  uint64_t v77 = v68;
  unint64_t v78 = 0xD000000000000023;
  uint64_t v79 = v69;
  return withCheckedContinuation<A>(isolation:function:_:)(v73, v77, v75, v78, v74, v76, v79, v72);
}

uint64_t sub_32DF4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_32FE4, v3, v2);
}

uint64_t sub_32FE4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_3308C(char *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, void *a9)
{
  id v104 = a2;
  uint64_t v105 = a8;
  uint64_t v101 = a6;
  unint64_t v102 = a7;
  uint64_t v100 = a5;
  id v103 = a4;
  uint64_t v96 = a3;
  uint64_t v98 = a1;
  uint64_t v91 = sub_F70F0();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_551C((uint64_t *)&unk_128170);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v87 = (uint64_t)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v92 = (uint64_t)&v84 - v15;
  __chkstk_darwin(v14);
  int8x16_t v95 = (char *)&v84 - v16;
  uint64_t v17 = sub_551C(&qword_1284C0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v94 = *(void *)(v18 + 64);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v23 = (char *)&v84 - v22;
  uint64_t v99 = type metadata accessor for RCSMessage(0);
  unint64_t v93 = *(void **)(v99 - 8);
  uint64_t v24 = v93[8];
  uint64_t v25 = __chkstk_darwin(v99);
  uint64_t v88 = (uint64_t)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v25);
  id v28 = (char *)&v84 - v27;
  __chkstk_darwin(v26);
  unint64_t v30 = (char *)&v84 - v29;
  sub_37AAC(a5, (uint64_t)&v84 - v29, type metadata accessor for RCSMessage);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v31(v23, v98, v17);
  uint64_t v97 = v28;
  uint64_t v32 = (uint64_t)v28;
  unint64_t v33 = v96;
  sub_37AAC((uint64_t)v30, v32, type metadata accessor for RCSMessage);
  uint64_t v98 = v21;
  v31(v21, v23, v17);
  unint64_t v34 = (*((unsigned __int8 *)v93 + 80) + 40) & ~(unint64_t)*((unsigned __int8 *)v93 + 80);
  unint64_t v35 = (v24 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (*(unsigned __int8 *)(v18 + 80) + v36 + 8) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v38 = (void *)swift_allocObject();
  _OWORD v38[2] = v104;
  id v38[3] = v33;
  v38[4] = v103;
  sub_5674((uint64_t)v30, (uint64_t)v38 + v34);
  uint64_t v39 = (void *)((char *)v38 + v35);
  unint64_t v40 = v102;
  void *v39 = v101;
  v39[1] = v40;
  uint64_t v41 = (void *)v17;
  *(void *)((char *)v38 + v36) = v105;
  uint64_t v94 = (uint64_t)v38;
  unint64_t v42 = (char *)v38 + v37;
  uint64_t v43 = (uint64_t)v95;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v42, v23, v17);
  sub_28874(v100 + *(int *)(v99 + 28), v43);
  uint64_t v44 = type metadata accessor for RCSMessage.Content(0);
  id v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48);
  if (v45(v43, 1, v44) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v46 = v103;
    id v47 = v103;
    id v48 = v33;
    id v49 = v104;
    id v50 = v104;
    goto LABEL_8;
  }
  os_log_type_t v85 = v45;
  sub_28874(v43, v92);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v52 = v103;
  id v86 = v103;
  unint64_t v93 = v33;
  id v49 = v104;
  id v53 = v104;
  if (EnumCaseMultiPayload != 4)
  {
    sub_3BDE0(v92, type metadata accessor for RCSMessage.Content);
    id v46 = v52;
LABEL_8:
    sub_1E944(v43, (uint64_t *)&unk_128170);
    (*(void (**)(char *, void *))(v18 + 8))(v98, v41);
    sub_3BDE0((uint64_t)v97, type metadata accessor for RCSMessage);
    id v64 = [v49 filteringController];
    id v65 = [v33 guid];
    if (v65)
    {
      uint64_t v66 = v65;
      id v67 = [v33 sender];
      if (v67)
      {
        uint64_t v68 = v67;
        id v69 = [v46 chatIdentifier];
        if (v69)
        {
          uint64_t v70 = v69;
          id v104 = v64;
          id v103 = a9;
          uint64_t v71 = (void *)sub_F7400();
          swift_bridgeObjectRetain();
          uint64_t v72 = (void *)sub_F71F0();
          swift_bridgeObjectRelease();
          id v73 = [v33 body];
          if (!v73) {
            id v73 = [objc_allocWithZone((Class)NSAttributedString) init];
          }
          aBlock[4] = (uint64_t)sub_3D7BC;
          aBlock[5] = v94;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_34928;
          aBlock[3] = (uint64_t)&unk_11E358;
          unint64_t v74 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          id v75 = v104;
          [v104 categorizeIncomingMessageGUID:v66 sender:v68 wasRelayed:0 chatIdentifier:v70 participants:v71 checkingForSpam:v103 myReceiverISOCountryCode:v72 messageBody:v73 completion:v74];

          swift_release();
          _Block_release(v74);

          return;
        }
LABEL_21:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v96 = v53;
  id v103 = (id)v18;
  id v104 = v41;
  sub_1E944(v43, (uint64_t *)&unk_128170);
  uint64_t v54 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v55 = v90;
  uint64_t v56 = v89;
  uint64_t v57 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v54, v91);
  uint64_t v58 = v88;
  sub_37AAC(v100, v88, type metadata accessor for RCSMessage);
  unint64_t v59 = sub_F70D0();
  os_log_type_t v60 = sub_F7670();
  if (os_log_type_enabled(v59, v60))
  {
    unint64_t v61 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v61 = 136315138;
    uint64_t v62 = v87;
    sub_28874(v58 + *(int *)(v99 + 28), v87);
    if (v85(v62, 1, v44) == 1)
    {
      sub_1E944(v62, (uint64_t *)&unk_128170);
      char v63 = 9;
    }
    else
    {
      char v63 = RCSMessage.Content.type.getter();
      sub_3BDE0(v62, type metadata accessor for RCSMessage.Content);
    }
    uint64_t v78 = v90;
    uint64_t v79 = v89;
    LOBYTE(v106) = v63;
    sub_551C(&qword_1284C8);
    uint64_t v80 = sub_F7270();
    uint64_t v106 = sub_A3FC(v80, v81, aBlock);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_3BDE0(v88, type metadata accessor for RCSMessage);
    _os_log_impl(&dword_0, v59, v60, "Not categorizing message for message type %s", v61, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v91);
    unint64_t v77 = v102;
    id v76 = v104;
  }
  else
  {
    sub_3BDE0(v58, type metadata accessor for RCSMessage);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
    id v76 = v104;
    unint64_t v77 = v102;
  }
  uint64_t v82 = v98;
  uint64_t v83 = v97;
  sub_33B04(0, 0, 0, 0, v96, v93, v86, v97, v101, v77);
  swift_release();
  (*((void (**)(char *, id))v103 + 1))(v82, v76);
  sub_3BDE0((uint64_t)v83, type metadata accessor for RCSMessage);
}

void sub_33B04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void *a6, void *a7, char *a8, uint64_t a9, unint64_t a10)
{
  id v117 = a7;
  id v109 = a5;
  uint64_t v110 = a3;
  uint64_t v113 = a1;
  uint64_t v114 = a2;
  uint64_t v14 = sub_F70F0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v111 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v104 - v18;
  uint64_t v20 = Logger.rcs.unsafeMutableAddressor();
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v107 = v20;
  uint64_t v108 = v15 + 16;
  uint64_t v106 = v21;
  ((void (*)(char *))v21)(v19);
  swift_bridgeObjectRetain_n();
  id v22 = a6;
  char v23 = sub_F70D0();
  int v24 = sub_F7670();
  BOOL v25 = os_log_type_enabled(v23, (os_log_type_t)v24);
  uint64_t v115 = v14;
  id v116 = v22;
  uint64_t v112 = v15;
  if (v25)
  {
    LODWORD(v105) = v24;
    id v118 = a8;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v104 = swift_slowAlloc();
    v120[0] = v104;
    *(_DWORD *)uint64_t v26 = 136315906;
    id v27 = objc_msgSend(v22, "guid", v104);
    if (!v27)
    {
LABEL_69:

      swift_bridgeObjectRelease();
      __break(1u);
LABEL_70:

      __break(1u);
      goto LABEL_71;
    }
    id v28 = v27;
    uint64_t v29 = sub_F7220();
    unint64_t v31 = v30;

    uint64_t v119 = sub_A3FC(v29, v31, v120);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2048;
    uint64_t v32 = v113;
    uint64_t v119 = v113;
    sub_F77B0();
    *(_WORD *)(v26 + 22) = 2048;
    uint64_t v33 = v114;
    uint64_t v119 = v114;
    sub_F77B0();
    *(_WORD *)(v26 + 32) = 2080;
    if (a4) {
      uint64_t v34 = v110;
    }
    else {
      uint64_t v34 = 1701736302;
    }
    if (a4) {
      unint64_t v35 = a4;
    }
    else {
      unint64_t v35 = 0xE400000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v119 = sub_A3FC(v34, v35, v120);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v23, (os_log_type_t)v105, "Categorized %s as %ld / %ld ext %s", (uint8_t *)v26, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v36 = *(void (**)(char *, uint64_t))(v112 + 8);
    v36(v19, v115);
    a8 = v118;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    unint64_t v36 = *(void (**)(char *, uint64_t))(v15 + 8);
    v36(v19, v14);
    uint64_t v32 = v113;
    uint64_t v33 = v114;
  }
  unint64_t v10 = a10;
  unint64_t v37 = (char *)[objc_allocWithZone((Class)IMDTelephonyIncomingMessageContext) init];
  [v37 setCategory:v32];
  id v118 = v37;
  [v37 setSubCategory:v33];
  id v38 = v117;
  if (a4) {
    uint64_t v39 = (void *)sub_F71F0();
  }
  else {
    uint64_t v39 = 0;
  }
  unint64_t v40 = v118;
  [v118 setSpamExtensionName:v39];

  [v40 setIsSendEnabled:1];
  [v40 setCapability:1];
  id v41 = [v38 chatIdentifier];
  [v40 setChatIdentifier:v41];

  if (*(void *)&a8[*(int *)(type metadata accessor for RCSMessage(0) + 52) + 8]) {
    unint64_t v42 = (void *)sub_F71F0();
  }
  else {
    unint64_t v42 = 0;
  }
  uint64_t v15 = (uint64_t)v118;
  [v118 setMyNumberString:v42];

  uint64_t v43 = (void *)sub_F71F0();
  [(id)v15 setMySIMIDString:v43];

  id v44 = v116;
  id v45 = [v116 sender];
  [(id)v15 setSender:v45];

  id v46 = [v44 unformattedID];
  [(id)v15 setSenderUnformatted:v46];

  id v47 = [v44 countryCode];
  [(id)v15 setCountryCode:v47];

  id v22 = (id)sub_F7400();
  [(id)v15 replaceParticipants:v22];

  id v48 = [v38 participants];
  if (!v48) {
    goto LABEL_67;
  }
  id v22 = v48;
  uint64_t v49 = sub_6CA4(0, (unint64_t *)&qword_127C80);
  uint64_t v15 = sub_F7410();

  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0) {
      id v22 = (id)v15;
    }
    else {
      id v22 = (id)(v15 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_F79B0();
  }
  else
  {
    uint64_t v50 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v105 = v36;
  uint64_t v110 = v49;
  if (v50)
  {
    if (v50 < 1)
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    uint64_t v51 = 0;
    id v52 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v53 = (id)sub_F78D0();
      }
      else {
        id v53 = *(id *)(v15 + 8 * v51 + 32);
      }
      uint64_t v54 = v53;
      id v55 = [v53 ID];
      if (v55)
      {
        uint64_t v56 = v55;
        uint64_t v57 = sub_F7220();
        uint64_t v59 = v58;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v52 = sub_350A4(0, *((void *)v52 + 2) + 1, 1, v52);
        }
        unint64_t v10 = *((void *)v52 + 2);
        unint64_t v60 = *((void *)v52 + 3);
        if (v10 >= v60 >> 1) {
          id v52 = sub_350A4((char *)(v60 > 1), v10 + 1, 1, v52);
        }
        *((void *)v52 + 2) = v10 + 1;
        unint64_t v61 = &v52[16 * v10];
        *((void *)v61 + 4) = v57;
        *((void *)v61 + 5) = v59;
      }
      else
      {
      }
      ++v51;
    }
    while (v50 != v51);
  }
  swift_bridgeObjectRelease_n();
  id v22 = (id)sub_F7400();
  swift_bridgeObjectRelease();
  [v118 replaceUnformattedIDs:v22];

  id v62 = v117;
  id v63 = [v117 participants];
  if (!v63)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  id v22 = v63;
  uint64_t v64 = sub_F7410();

  if ((unint64_t)v64 >> 62)
  {
    if (v64 < 0) {
      id v22 = (id)v64;
    }
    else {
      id v22 = (id)(v64 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_F79B0();
    if (!v65) {
      goto LABEL_59;
    }
  }
  else
  {
    uint64_t v65 = *(void *)((char *)&dword_10 + (v64 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v65) {
      goto LABEL_59;
    }
  }
  if (v65 < 1) {
    goto LABEL_66;
  }
  uint64_t v66 = 0;
  id v67 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v64 & 0xC000000000000001) != 0) {
      id v68 = (id)sub_F78D0();
    }
    else {
      id v68 = *(id *)(v64 + 8 * v66 + 32);
    }
    id v69 = v68;
    id v70 = [v68 countryCode];
    if (v70)
    {
      uint64_t v71 = v70;
      uint64_t v72 = sub_F7220();
      unint64_t v74 = v73;
    }
    else
    {

      unint64_t v74 = 0xE200000000000000;
      uint64_t v72 = 29557;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v67 = sub_350A4(0, *((void *)v67 + 2) + 1, 1, v67);
    }
    unint64_t v76 = *((void *)v67 + 2);
    unint64_t v75 = *((void *)v67 + 3);
    if (v76 >= v75 >> 1) {
      id v67 = sub_350A4((char *)(v75 > 1), v76 + 1, 1, v67);
    }
    ++v66;
    *((void *)v67 + 2) = v76 + 1;
    unint64_t v77 = &v67[16 * v76];
    *((void *)v77 + 4) = v72;
    *((void *)v77 + 5) = v74;
  }
  while (v65 != v66);
LABEL_59:
  swift_bridgeObjectRelease_n();
  uint64_t v78 = (void *)sub_F7400();
  swift_bridgeObjectRelease();
  uint64_t v79 = v118;
  [v118 replaceCountryCodes:v78];

  objc_msgSend(v79, "setStyle:", objc_msgSend(v62, "style"));
  id v80 = [v62 groupID];
  [v79 setGroupID:v80];

  id v81 = [v62 originalGroupID];
  [v79 setOriginalGroupID:v81];

  id v82 = [v62 displayName];
  [v79 setDisplayName:v82];

  id v83 = [v109 findChatAndLinkMessage:v116 context:v79];
  uint64_t v84 = v111;
  os_log_type_t v85 = v62;
  uint64_t v86 = v115;
  v106(v111, v107, v115);
  id v87 = v83;
  id v88 = v85;
  uint64_t v15 = (uint64_t)v87;
  unint64_t v10 = (unint64_t)v88;
  uint64_t v89 = sub_F70D0();
  int v90 = sub_F7670();
  if (!os_log_type_enabled(v89, (os_log_type_t)v90))
  {

    unint64_t v102 = v84;
    uint64_t v103 = v86;
    goto LABEL_64;
  }
  LODWORD(v117) = v90;
  uint64_t v91 = swift_slowAlloc();
  v120[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v91 = 136315906;
  id v92 = [(id)v15 guid];
  if (!v92) {
    goto LABEL_70;
  }
  unint64_t v93 = v92;
  uint64_t v94 = sub_F7220();
  unint64_t v96 = v95;

  uint64_t v119 = sub_A3FC(v94, v96, v120);
  sub_F77B0();

  swift_bridgeObjectRelease();
  *(_WORD *)(v91 + 12) = 2080;
  id v97 = [(id)v10 guid];
  if (v97)
  {
    uint64_t v98 = v97;
    uint64_t v99 = sub_F7220();
    unint64_t v101 = v100;

    uint64_t v119 = sub_A3FC(v99, v101, v120);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v91 + 22) = 2048;
    uint64_t v119 = v113;
    sub_F77B0();
    *(_WORD *)(v91 + 32) = 2048;
    uint64_t v119 = v114;
    sub_F77B0();
    _os_log_impl(&dword_0, v89, (os_log_type_t)v117, "Found chat %s from %s cat %ld sub %ld", (uint8_t *)v91, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v102 = v111;
    uint64_t v103 = v115;
LABEL_64:
    v105(v102, v103);
    v120[0] = v15;
    sub_551C(&qword_1284C0);
    sub_F7490();

    return;
  }
LABEL_71:

  __break(1u);
}

uint64_t RCSServiceSession.shouldCategorize(_:)(uint64_t a1)
{
  uint64_t v2 = sub_551C((uint64_t *)&unk_128170);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v12 - v6;
  uint64_t v8 = type metadata accessor for RCSMessage(0);
  sub_28874(a1 + *(int *)(v8 + 28), (uint64_t)v7);
  uint64_t v9 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) != 1)
  {
    sub_28874((uint64_t)v7, (uint64_t)v5);
    if (swift_getEnumCaseMultiPayload() == 4) {
      uint64_t v10 = 0;
    }
    else {
      sub_3BDE0((uint64_t)v5, type metadata accessor for RCSMessage.Content);
    }
  }
  sub_1E944((uint64_t)v7, (uint64_t *)&unk_128170);
  return v10;
}

uint64_t sub_34928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a4)
  {
    uint64_t v7 = sub_F7220();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  swift_retain();
  v6(a2, a3, v7, v9);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_349BC(uint64_t a1, void **a2, char a3)
{
}

uint64_t sub_349C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1282C8 + dword_1282C8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_3D958;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_34A94@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  sub_27F4C(a1, (uint64_t)v21);
  uint64_t v18 = a3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  if (v23[58])
  {
    uint64_t v7 = v21[0];
    uint64_t v8 = v21[1];
    uint64_t v10 = v21[2];
    uint64_t v9 = v21[3];
    uint64_t v11 = v21[4];
    uint64_t v12 = v21[5];
    uint64_t v13 = v21[6];
    char v14 = v22;
    sub_27FA8((uint64_t)v23);
  }
  else
  {
    sub_27EF8((uint64_t)v21);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v10;
  v24[3] = v9;
  v24[4] = v11;
  v24[5] = v12;
  v24[6] = v13;
  char v25 = v14;
  uint64_t v15 = type metadata accessor for RCSMessage(0);
  RCSServiceSession.groupChat(from:subscriptionInfo:group:)((uint64_t)v24, *(void *)(v19 + *(int *)(v15 + 52)), *(void *)(v19 + *(int *)(v15 + 52) + 8), *(void *)(v19 + *(int *)(v15 + 52) + 16), *(void *)(v19 + *(int *)(v15 + 52) + 24), v20);
  uint64_t v26 = v16;
  uint64_t result = sub_6DB0(v7, v8);
  if (!v3) {
    *uint64_t v18 = v26;
  }
  return result;
}

void sub_34BCC(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = sub_6BA8(a1, v4);
  sub_35F9C((uint64_t)v6, v2, v4, v5);
  *a2 = v7;
}

id sub_34C14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = RCSServiceSession.instantMessageChat(for:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_34C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 56) = a1;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1282E8
                                                                                              + dword_1282E8);
  char v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 64) = v14;
  *char v14 = v7;
  v14[1] = sub_3D954;
  return v16(v7 + 16, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_34D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_34DDC;
  return RCSServiceSession.generateSafeRender(for:)(a1, a2);
}

uint64_t sub_34DDC(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t sub_34EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = *a4;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_34F94;
  return RCSServiceSession.categorize(_:rcsMessage:foundChat:)(a2, a3, v7);
}

uint64_t sub_34F94(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

char *sub_350A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_551C(&qword_128260);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_369B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_351B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_35314(a1, a2, a3, a4, &qword_1284F0, (uint64_t (*)(void))_s17ParticipantChangeVMa, (uint64_t (*)(void))_s17ParticipantChangeVMa);
}

void *sub_351E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_551C(&qword_1284F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_36EC4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_352F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_35314(a1, a2, a3, a4, &qword_1284B8, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_35314(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_551C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_F79A0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_3D150(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_35594(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_551C(&qword_1284A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_36AA8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_356A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_35314(a1, a2, a3, a4, &qword_1284A0, type metadata accessor for RCSMessage, type metadata accessor for RCSMessage);
}

double sub_356D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C9BC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v19 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_42E48();
      uint64_t v11 = v19;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = (_OWORD *)(*(void *)(v11 + 56) + 160 * v8);
    long long v13 = v12[7];
    a3[6] = v12[6];
    a3[7] = v13;
    long long v14 = v12[9];
    a3[8] = v12[8];
    a3[9] = v14;
    long long v15 = v12[3];
    a3[2] = v12[2];
    a3[3] = v15;
    long long v16 = v12[5];
    a3[4] = v12[4];
    a3[5] = v16;
    long long v17 = v12[1];
    *a3 = *v12;
    a3[1] = v17;
    sub_4211C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a3[8] = 0u;
    a3[9] = 0u;
    a3[6] = 0u;
    a3[7] = 0u;
    a3[4] = 0u;
    a3[5] = 0u;
    a3[2] = 0u;
    a3[3] = 0u;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_35810@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C978(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_4306C();
      uint64_t v9 = v11;
    }
    sub_1EC30(*(void *)(v9 + 48) + 40 * v6);
    sub_1EBC4((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_42300(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_3590C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1 + 40;
  uint64_t v3 = a2 + 40;
  sub_1EBD4(a1, a2);

  return sub_BAD8(v2, v3);
}

uint64_t sub_35950(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v39 = a1;
  uint64_t v40 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v41 = v8;
  uint64_t v42 = 0;
  uint64_t v43 = v11 & v9;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_35D98((uint64_t)&v35);
  if (!*((void *)&v36 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_44A8();
    return swift_release();
  }
  while (1)
  {
    long long v32 = v35;
    long long v33 = v36;
    uint64_t v34 = v37;
    sub_1EBC4(&v38, v31);
    uint64_t v13 = *a5;
    unint64_t v15 = sub_1C978((uint64_t)&v32);
    uint64_t v16 = *(void *)(v13 + 16);
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (*(void *)(v13 + 24) >= v18)
    {
      if (a4)
      {
        if (v14) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_4306C();
        if (v19) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_41C2C(v18, a4 & 1);
      unint64_t v20 = sub_1C978((uint64_t)&v32);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_22;
      }
      unint64_t v15 = v20;
      if (v19)
      {
LABEL_6:
        sub_BAD8((uint64_t)v31, (uint64_t)v30);
        sub_6BEC((uint64_t)v31);
        sub_1EC30((uint64_t)&v32);
        uint64_t v12 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v15);
        sub_6BEC((uint64_t)v12);
        sub_1EBC4(v30, v12);
        goto LABEL_7;
      }
    }
    unint64_t v22 = (void *)*a5;
    *(void *)(*a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    uint64_t v23 = v22[6] + 40 * v15;
    long long v24 = v32;
    long long v25 = v33;
    *(void *)(v23 + 32) = v34;
    *(_OWORD *)uint64_t v23 = v24;
    *(_OWORD *)(v23 + 16) = v25;
    sub_1EBC4(v31, (_OWORD *)(v22[7] + 32 * v15));
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_21;
    }
    v22[2] = v28;
LABEL_7:
    sub_35D98((uint64_t)&v35);
    a4 = 1;
    if (!*((void *)&v36 + 1)) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_F7BA0();
  __break(1u);
  return result;
}

uint64_t sub_35BAC@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_BAD8(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  char v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_1E74C((uint64_t)&v23, (uint64_t)v22, &qword_128500);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_1E944((uint64_t)v21, &qword_128508);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_35D98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    sub_1EBD4(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v25);
    sub_BAD8(*(void *)(v3 + 56) + 32 * v10, (uint64_t)&v25[2] + 8);
    goto LABEL_23;
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v11 < v12)
  {
    unint64_t v13 = *(void *)(v4 + 8 * v11);
    if (v13)
    {
LABEL_7:
      uint64_t v9 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
      int64_t v7 = v11;
      goto LABEL_3;
    }
    int64_t v14 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v12)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_10:
        int64_t v11 = v14;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v12)
      {
        unint64_t v13 = *(void *)(v4 + 8 * (v5 + 3));
        if (v13)
        {
          int64_t v11 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v14 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v12)
        {
          unint64_t v13 = *(void *)(v4 + 8 * v14);
          if (v13) {
            goto LABEL_10;
          }
          int64_t v11 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v12)
          {
            unint64_t v13 = *(void *)(v4 + 8 * v11);
            if (v13) {
              goto LABEL_7;
            }
            int64_t v7 = v12 - 1;
            int64_t v15 = v5 + 6;
            while (v12 != v15)
            {
              unint64_t v13 = *(void *)(v4 + 8 * v15++);
              if (v13)
              {
                int64_t v11 = v15 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v26 = 0;
  memset(v25, 0, sizeof(v25));
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  unint64_t v16 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_1E74C((uint64_t)v25, (uint64_t)&v20, &qword_1284D8);
  if (*((void *)&v21 + 1))
  {
    v18[2] = v22;
    v18[3] = v23;
    uint64_t v19 = v24;
    v18[0] = v20;
    v18[1] = v21;
    v16(v18);
    return sub_1E944((uint64_t)v18, &qword_128280);
  }
  else
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void sub_35F9C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_F70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v82 = v8;
  uint64_t v83 = v9;
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v77 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v72 - v12;
  v93[3] = a3;
  v93[4] = a4;
  int64_t v14 = sub_28728(v93);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v14, a1, a3);
  uint64_t v15 = a4 + 16;
  unint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v17 = v16(a3, a4);
  uint64_t v84 = v16;
  if (v18)
  {
    id v19 = v18;
    uint64_t v81 = a4 + 16;
    uint64_t v78 = v14;
    uint64_t v79 = a3;
    long long v20 = (void *)v17;
    id v21 = [self sharedInstance];
    id v76 = v20;
    static IMDChatRCSGroupIdentity.encodeGroupID(_:)((unint64_t)v20, (unint64_t)v19);
    long long v22 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    id v80 = a2;
    id v23 = [a2 service];
    id v24 = [v23 internalName];

    if (!v24)
    {
      sub_F7220();
      id v24 = (id)sub_F71F0();
      swift_bridgeObjectRelease();
    }
    id v25 = [v21 newestExistingChatWithOriginalGroupID:v22 onService:v24];

    if (v25)
    {
      uint64_t v26 = v13;
      id v27 = v25;
      uint64_t v28 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v29 = v82;
      uint64_t v30 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v26, v28, v82);
      id v31 = v27;
      swift_bridgeObjectRetain();
      long long v32 = sub_F70D0();
      LODWORD(v74) = sub_F76B0();
      BOOL v33 = os_log_type_enabled(v32, (os_log_type_t)v74);
      uint64_t v15 = v81;
      if (v33)
      {
        os_log_t v73 = v32;
        uint64_t v75 = a4;
        uint64_t v34 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        *(void *)&long long v86 = v72;
        *(_DWORD *)uint64_t v34 = 136315394;
        id v35 = objc_msgSend(v31, "guid", v72);
        if (!v35)
        {

          swift_bridgeObjectRelease();
          __break(1u);
          goto LABEL_34;
        }
        long long v36 = v35;
        uint64_t v37 = sub_F7220();
        unint64_t v39 = v38;

        *(void *)&long long v97 = sub_A3FC(v37, v39, (uint64_t *)&v86);
        sub_F77B0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v97 = sub_A3FC((uint64_t)v76, (unint64_t)v19, (uint64_t *)&v86);
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        os_log_t v40 = v73;
        _os_log_impl(&dword_0, v73, (os_log_type_t)v74, "Found chat %s for conversation ID %s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v83 + 8))(v26, v82);
        a3 = v79;
        a2 = v80;
        a4 = v75;
        int64_t v14 = v78;
        uint64_t v15 = v81;
        if ((static IMDChatRCSGroupIdentity.migrationEnabled.getter() & 1) == 0) {
          goto LABEL_25;
        }
LABEL_14:
        if (v25)
        {
LABEL_26:
          id v65 = v25;
          *((void *)&v87 + 1) = sub_6CA4(0, &qword_127C48);
          *(void *)&long long v88 = &protocol witness table for IMDChat;
          *(void *)&long long v86 = v65;
          IMDChatRCSGroupIdentity.converge(identity:)(v93);
          sub_6AA0((uint64_t)&v86);
          goto LABEL_27;
        }
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 8))(v94, a3, a4);
        sub_1E74C((uint64_t)v94, (uint64_t)v95, &qword_127C58);
        if (!*((void *)&v95[0] + 1))
        {
          id v25 = 0;
          goto LABEL_27;
        }
        uint64_t v81 = v15;
        uint64_t v75 = a4;
        long long v97 = v95[0];
        long long v98 = v95[1];
        v99[0] = v96[0];
        *(_OWORD *)((char *)v99 + 9) = *(_OWORD *)((char *)v96 + 9);
        id v41 = [self sharedInstance];
        unint64_t v42 = RCSHandle.rawValue.getter();
        static IMDChatRCSGroupIdentity.encodeGroupID(_:)(v42, v43);
        swift_bridgeObjectRelease();
        uint64_t v44 = (void *)sub_F71F0();
        swift_bridgeObjectRelease();
        id v45 = [a2 service];
        id v46 = [v45 internalName];

        if (!v46)
        {
          sub_F7220();
          id v46 = (id)sub_F71F0();
          swift_bridgeObjectRelease();
        }
        id v25 = [v41 newestExistingChatWithOriginalGroupID:v44 onService:v46];

        uint64_t v47 = v83;
        if (!v25)
        {
          sub_36E80((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
          a4 = v75;
          goto LABEL_27;
        }
        id v80 = a2;
        id v48 = v25;
        uint64_t v49 = Logger.rcs.unsafeMutableAddressor();
        uint64_t v50 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v77, v49, v82);
        id v76 = v48;
        sub_36E80((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void))sub_36E1C);
        uint64_t v51 = sub_F70D0();
        os_log_type_t v52 = sub_F76B0();
        BOOL v53 = os_log_type_enabled(v51, v52);
        a4 = v75;
        if (!v53)
        {
          id v64 = v76;

          sub_36E80((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
          sub_36E80((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v82);
          a2 = v80;
          goto LABEL_25;
        }
        os_log_type_t v54 = v52;
        os_log_t v74 = v51;
        uint64_t v78 = v14;
        uint64_t v79 = a3;
        uint64_t v55 = swift_slowAlloc();
        *(void *)&long long v86 = swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 136315394;
        id v19 = v76;
        id v56 = [v76 guid];
        if (v56)
        {
          uint64_t v57 = v56;
          uint64_t v58 = sub_F7220();
          unint64_t v60 = v59;

          uint64_t v85 = sub_A3FC(v58, v60, (uint64_t *)&v86);
          sub_F77B0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v55 + 12) = 2080;
          uint64_t v61 = RCSHandle.rawValue.getter();
          uint64_t v85 = sub_A3FC(v61, v62, (uint64_t *)&v86);
          sub_F77B0();
          swift_bridgeObjectRelease();
          sub_36E80((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
          sub_36E80((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
          os_log_t v63 = v74;
          _os_log_impl(&dword_0, v74, v54, "Found chat %s for group URI %s", (uint8_t *)v55, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v83 + 8))(v77, v82);
          a3 = v79;
          a2 = v80;
          a4 = v75;
          goto LABEL_25;
        }
LABEL_34:
        sub_36E80((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);

        __break(1u);
        return;
      }

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v29);
      int64_t v14 = v78;
      a3 = v79;
    }
    else
    {
      swift_bridgeObjectRelease();
      int64_t v14 = v78;
      a3 = v79;
      uint64_t v15 = v81;
    }
    a2 = v80;
    if ((static IMDChatRCSGroupIdentity.migrationEnabled.getter() & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_14;
  }
  id v25 = 0;
  if (static IMDChatRCSGroupIdentity.migrationEnabled.getter()) {
    goto LABEL_14;
  }
LABEL_25:
  if (v25) {
    goto LABEL_26;
  }
LABEL_27:
  uint64_t v66 = v84(a3, a4);
  if (v67)
  {
    uint64_t v68 = v67;
    if (*(void *)(*(void *)(*(void *)&a2[OBJC_IVAR___RCSServiceSession_state] + 72) + 16)
      && (uint64_t v69 = v66,
          swift_bridgeObjectRetain(),
          sub_1C9BC(v69, v68),
          char v71 = v70,
          swift_bridgeObjectRelease(),
          (v71 & 1) != 0))
    {
      long long v91 = 0u;
      long long v92 = 0u;
      long long v89 = 0u;
      long long v90 = 0u;
      long long v87 = 0u;
      long long v88 = 0u;
      long long v86 = 0u;
      sub_29934(v69, v68, (uint64_t)&v86);
      swift_bridgeObjectRelease();

      sub_1E944((uint64_t)&v86, &qword_128060);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_6BEC((uint64_t)v93);
}

uint64_t sub_369B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_36AA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_551C(&qword_1284B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

void *sub_36BB4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_4FED8(0, v1, 0);
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      sub_551C(&qword_1284D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_F8F10;
      sub_F7220();
      swift_bridgeObjectRetain();
      sub_F7860();
      type metadata accessor for FZChatMemberStatus(0);
      *(void *)(inited + 96) = v7;
      *(_DWORD *)(inited + 72) = 2;
      sub_F7220();
      sub_F7860();
      *(void *)(inited + 168) = &type metadata for String;
      *(void *)(inited + 144) = v4;
      *(void *)(inited + 152) = v5;
      unint64_t v8 = sub_4AFC4(inited);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_4FED8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_4FED8(v9 > 1, v10 + 1, 1);
      }
      v3 += 2;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for RCSServiceSession.ChatResolutionError()
{
  uint64_t result = qword_128468;
  if (!qword_128468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_36DC4()
{
  unint64_t result = qword_1282B8;
  if (!qword_1282B8)
  {
    type metadata accessor for RCSServiceSession.ChatResolutionError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1282B8);
  }
  return result;
}

uint64_t sub_36E1C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_36E80(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_36EC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_36FB8(uint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  id v8 = self;
  id v9 = [v8 sharedInstance];
  if (!v9)
  {
    __break(1u);
LABEL_10:

    __break(1u);
    goto LABEL_11;
  }
  unint64_t v10 = v9;
  uint64_t v11 = sub_F71F0();
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = (void *)v11;
    a4 = [v10 guidForNewIncomingTransferWithFilename:v11 isDirectory:0 totalBytes:a3 hfsType:0 hfsCreator:0 hfsFlags:0];

    if (!a4) {
      goto LABEL_7;
    }
    id v13 = [v8 sharedInstance];
    if (v13)
    {
      int64_t v14 = v13;
      id v8 = [v13 transferForGUID:a4];

      if (v8)
      {
        uint64_t v15 = (void *)sub_F6D70();
        [v8 _setLocalURL:v15];

        return (uint64_t)v8;
      }
LABEL_7:
      sub_3D900();
      swift_allocError();
      *unint64_t v16 = a1;
      v16[1] = a2;
      v16[2] = a3;
      swift_bridgeObjectRetain();
      swift_willThrow();
      return (uint64_t)v8;
    }
    goto LABEL_10;
  }
LABEL_11:
  uint64_t result = sub_F79A0();
  __break(1u);
  return result;
}

void _sSo17RCSServiceSessionC3RCSE4mark_15asThumbnailModeySo14IMFileTransferC_So0hifG0VtF_0(id a1, uint64_t a2)
{
  if (a2)
  {
    id v4 = [a1 userInfo];
    if (v4)
    {
      unint64_t v5 = v4;
      uint64_t v6 = sub_F71B0();

      sub_551C(&qword_1284D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_F8F20;
      v16[0] = sub_F7220();
      v16[1] = v8;
      sub_F7860();
      *(void *)(inited + 96) = &type metadata for Int;
      *(void *)(inited + 72) = a2;
      unint64_t v9 = sub_4AFC4(inited);
      sub_2FB30(v9, v6);
      unint64_t v10 = (void *)sub_F71A0();
      swift_bridgeObjectRelease();
      [a1 setUserInfo:v10];

      return;
    }
    __break(1u);
    goto LABEL_11;
  }
  *(void *)&v17[0] = sub_F7220();
  *((void *)&v17[0] + 1) = v11;
  swift_bridgeObjectRetain();
  sub_F7860();
  id v12 = [a1 userInfo];
  if (!v12)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v13 = v12;
  uint64_t v14 = sub_F71B0();
  swift_bridgeObjectRelease();

  sub_35810((uint64_t)v16, v17);
  sub_1EC30((uint64_t)v16);
  sub_1E944((uint64_t)v17, &qword_127FF8);
  if (v14)
  {
    uint64_t v15 = (void *)sub_F71A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  objc_msgSend(a1, "setUserInfo:", v15, v14);
}

void _sSo17RCSServiceSessionC3RCSE14acceptTransferyySo06IMFileE0CF_0(void *a1)
{
  id v2 = [self sharedInstance];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [a1 guid];
    uint64_t v5 = sub_551C(&qword_128300);
    uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
    __chkstk_darwin(v5 - 8);
    uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v8 = [a1 localURL];
    if (__chkstk_darwin(v8))
    {
      sub_F6D80();

      uint64_t v9 = sub_F6DC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
    }
    else
    {
      uint64_t v9 = sub_F6DC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    }
    sub_1E74C((uint64_t)v7, (uint64_t)v7, &qword_128300);
    sub_F6DC0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9);
    if (v11)
    {
      sub_1E944((uint64_t)v7, &qword_128300);
      id v12 = 0;
    }
    else
    {
      __chkstk_darwin(v11);
      uint64_t v14 = (char *)&v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v7, v9);
      sub_1E944((uint64_t)v7, &qword_128300);
      sub_F6D90();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      id v12 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
    }
    [v3 acceptTransfer:v4 path:v12];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_37700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  sub_F74E0();
  v4[20] = sub_F74D0();
  uint64_t v6 = sub_F7470();
  v4[21] = v6;
  v4[22] = v5;
  return _swift_task_switch(sub_3779C, v6, v5);
}

uint64_t sub_3779C()
{
  id v1 = [self sharedInstance];
  v0[23] = v1;
  uint64_t v2 = sub_F71F0();
  v0[24] = v2;
  uint64_t v3 = sub_F6D70();
  v0[25] = v3;
  uint64_t v4 = sub_F6D70();
  v0[26] = v4;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_37914;
  uint64_t v5 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_2FD88;
  v0[13] = &unk_11E398;
  v0[14] = v5;
  [v1 downloadRCSTransferOnSimID:v2 transferURL:v3 destURL:v4 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_37914()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  return _swift_task_switch(sub_37A1C, v2, v1);
}

uint64_t sub_37A1C()
{
  uint64_t v2 = (void *)v0[25];
  uint64_t v1 = (void *)v0[26];
  uint64_t v4 = (void *)v0[23];
  uint64_t v3 = (void *)v0[24];
  swift_release();
  uint64_t v5 = v0[15];

  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_37AAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_37B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a4;
  v7[24] = a5;
  v7[21] = a2;
  v7[22] = a3;
  v7[20] = a1;
  sub_F74E0();
  v7[27] = sub_F74D0();
  uint64_t v9 = sub_F7470();
  v7[28] = v9;
  v7[29] = v8;
  return _swift_task_switch(sub_37BB8, v9, v8);
}

uint64_t sub_37BB8()
{
  id v1 = [self sharedInstance];
  v0[30] = v1;
  if (v1)
  {
    uint64_t v2 = v0[25];
    uint64_t v3 = sub_F71F0();
    v0[31] = v3;
    if (v2) {
      uint64_t v2 = sub_F71F0();
    }
    v0[32] = v2;
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[21];
    v0[2] = v0;
    v0[7] = v0 + 10;
    v0[3] = sub_37D80;
    uint64_t v6 = swift_continuation_init();
    v0[15] = _NSConcreteStackBlock;
    v0[16] = 0x40000000;
    v0[17] = sub_31BA0;
    v0[18] = &unk_11E380;
    v0[19] = v6;
    [v1 generatePreviewForTransfer:v5 attachmentPath:v3 balloonBundleID:v2 senderContext:v4 completionBlock:v0 + 15];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    uint64_t v7 = v0[20];
    *(void *)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 16) = 0;
    *(void *)(v7 + 24) = 0;
    *(void *)(v7 + 32) = 0;
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_37D80()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 264) = v2;
  uint64_t v3 = *(void *)(v1 + 232);
  uint64_t v4 = *(void *)(v1 + 224);
  if (v2) {
    uint64_t v5 = sub_37F5C;
  }
  else {
    uint64_t v5 = sub_37EB0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_37EB0()
{
  uint64_t v2 = *(void **)(v0 + 248);
  uint64_t v1 = *(void **)(v0 + 256);

  swift_release();
  char v3 = *(unsigned char *)(v0 + 96);
  long long v7 = *(_OWORD *)(v0 + 80);
  long long v8 = *(_OWORD *)(v0 + 104);

  uint64_t v4 = *(void *)(v0 + 160);
  *(_OWORD *)uint64_t v4 = v7;
  *(unsigned char *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v8;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_37F5C()
{
  uint64_t v1 = (void *)v0[32];
  char v3 = (void *)v0[30];
  uint64_t v2 = (void *)v0[31];
  swift_release();
  swift_willThrow();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

id _sSo17RCSServiceSessionC3RCSE13senderContext3forSo08IMSenderE0C04CoreC010RCSMessageV_tF_0(uint64_t a1)
{
  sub_27F4C(a1, (uint64_t)&v8);
  if (v9[58])
  {
    id v1 = [self sharedInstance];
    uint64_t v2 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v3 = [v1 hasKnownSenderChatWithChatIdentifier:v2];

    sub_F7220();
    uint64_t v4 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    id v5 = [self contextWithKnownSender:v3 serviceName:v4];

    sub_27FA8((uint64_t)v9);
    return v5;
  }
  else
  {
    id v7 = [self fromMeContextWithServiceName:IMServiceNameRCS];
    sub_27EF8((uint64_t)&v8);
    return v7;
  }
}

BOOL _sSo17RCSServiceSessionC3RCSE15isSenderBlocked3forSb04CoreC010RCSMessageV_tF_0(uint64_t a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v53 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v53 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v53 - v16;
  sub_27F4C(a1, (uint64_t)v58);
  if (v59[58] == 1)
  {
    uint64_t v55 = v2;
    uint64_t v18 = v58[2];
    unint64_t v19 = v58[3];
    sub_27FA8((uint64_t)v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v57 = 0;
    uint64_t v54 = v18;
    long long v20 = (void *)sub_F71F0();
    id v21 = (void *)sub_F71F0();
    long long v22 = IMPhoneNumberRefCopyForPhoneNumber();

    if (v22)
    {
      if (CMFItemCreateWithPhoneNumber())
      {
        swift_unknownObjectRetain();
        int IsItemBlocked = CMFBlockListIsItemBlocked();
        swift_unknownObjectRelease_n();

        BOOL v57 = IsItemBlocked != 0;
        uint64_t v24 = v55;
        if (IsItemBlocked) {
          goto LABEL_23;
        }
LABEL_17:
        unint64_t v39 = sub_F71F0();
        if (CMFItemCreateWithEmailAddress())
        {
          swift_unknownObjectRetain();
          int v40 = CMFBlockListIsItemBlocked();
          swift_unknownObjectRelease_n();

          BOOL v57 = v40 != 0;
        }
        else
        {
          uint64_t v41 = Logger.rcs.unsafeMutableAddressor();
          (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v41, v24);
          unint64_t v42 = sub_F70D0();
          os_log_type_t v43 = sub_F7690();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v44 = 0;
            _os_log_impl(&dword_0, v42, v43, "Couldn't create email item", v44, 2u);
            uint64_t v24 = v55;
            swift_slowDealloc();
            id v45 = v39;
          }
          else
          {
            id v45 = v42;
            unint64_t v42 = v39;
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v24);
        }
LABEL_23:
        uint64_t v46 = Logger.rcs.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v46, v24);
        BOOL v47 = v57;
        swift_bridgeObjectRetain();
        id v48 = sub_F70D0();
        os_log_type_t v49 = sub_F7670();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v50 = swift_slowAlloc();
          v58[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v50 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v56 = sub_A3FC(v54, v19, v58);
          sub_F77B0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v50 + 12) = 2080;
          if (v47) {
            uint64_t v51 = 0;
          }
          else {
            uint64_t v51 = 7630702;
          }
          if (v47) {
            unint64_t v52 = 0xE000000000000000;
          }
          else {
            unint64_t v52 = 0xE300000000000000;
          }
          uint64_t v56 = sub_A3FC(v51, v52, v58);
          sub_F77B0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v48, v49, "Message for sender handle: %s is %s blocked.", (uint8_t *)v50, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v55);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v24);
        }
        swift_beginAccess();
        return v57;
      }
      uint64_t v34 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v17, v34, v55);
      id v35 = sub_F70D0();
      os_log_type_t v36 = sub_F7690();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_0, v35, v36, "Couldn't create phone item.", v37, 2u);
        swift_slowDealloc();
        unint64_t v38 = v22;
      }
      else
      {
        unint64_t v38 = v35;
        id v35 = v22;
      }
      uint64_t v24 = v55;

      (*(void (**)(char *, uint64_t))(v3 + 8))(v17, v24);
    }
    else
    {
      uint64_t v30 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v24 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v15, v30, v55);
      id v31 = sub_F70D0();
      uint64_t v32 = sub_F7690();
      if (os_log_type_enabled(v31, (os_log_type_t)v32))
      {
        BOOL v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v33 = 0;
        _os_log_impl(&dword_0, v31, (os_log_type_t)v32, "Couldn't create phone number.", v33, 2u);
        uint64_t v24 = v55;
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v15, v24);
    }
    if (v57) {
      goto LABEL_23;
    }
    goto LABEL_17;
  }
  sub_27EF8((uint64_t)v58);
  uint64_t v25 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v25, v2);
  uint64_t v26 = sub_F70D0();
  os_log_type_t v27 = sub_F7690();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v26, v27, "Cannot determine whether sender is blocked because the sender is nil.", v28, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return 0;
}

void sub_3888C(char *a1)
{
  sub_3308C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72));
}

void *sub_388D4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *_s21TransferCreationErrorOwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *_s21TransferCreationErrorOwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t _s21TransferCreationErrorOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21TransferCreationErrorOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSServiceSession.TransferCreationError()
{
  return &type metadata for RCSServiceSession.TransferCreationError;
}

uint64_t _s19ChatResolutionErrorOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      char v14 = *((unsigned char *)a2 + 122);
      if (v14)
      {
        uint64_t v15 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v15;
        uint64_t v16 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v16;
        uint64_t v17 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v17;
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        char v18 = *((unsigned char *)a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18)
        {
          long long v19 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 88) = v19;
          (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 64, (uint64_t)(a2 + 8));
        }
        else
        {
          uint64_t v42 = a2[9];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = v42;
          uint64_t v43 = a2[11];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = v43;
          uint64_t v44 = a2[13];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = v44;
          *(void *)(a1 + 112) = a2[14];
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v18;
      }
      else
      {
        char v25 = *((unsigned char *)a2 + 57);
        if (v25)
        {
          long long v26 = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 24) = v26;
          (**(void (***)(uint64_t, uint64_t *))(v26 - 8))(a1, a2);
        }
        else
        {
          uint64_t v62 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v62;
          uint64_t v63 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v63;
          uint64_t v64 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v64;
          *(void *)(a1 + 48) = a2[6];
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v25;
      }
      *(unsigned char *)(a1 + 122) = v14;
      uint64_t v65 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v65;
      uint64_t v66 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v66;
      unint64_t v59 = (int *)type metadata accessor for RCSMessage(0);
      uint64_t v67 = v59[7];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (uint64_t *)((char *)a2 + v67);
      uint64_t v70 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v71 = *(void *)(v70 - 8);
      uint64_t v72 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v71 + 48);
      uint64_t v73 = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v72(v69, 1, v73))
      {
        uint64_t v74 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v68, v69, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        uint64_t v185 = v71;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v75 = v69[1];
            id v76 = v68;
            *uint64_t v68 = *v69;
            v68[1] = v75;
            _OWORD v68[2] = v69[2];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_65;
          case 1u:
            uint64_t v183 = v73;
            uint64_t v91 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            uint64_t v92 = *(void *)(v91 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v92 + 48))(v69, 1, v91))
            {
              uint64_t v93 = sub_551C(&qword_1283F0);
              uint64_t v94 = v68;
              memcpy(v68, v69, *(void *)(*(void *)(v93 - 8) + 64));
            }
            else
            {
              uint64_t v176 = v92;
              uint64_t v94 = v68;
              *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
              _OWORD v68[2] = v69[2];
              uint64_t v131 = *(int *)(v91 + 24);
              long long v179 = (char *)v69 + v131;
              long long v181 = (char *)v68 + v131;
              uint64_t v132 = sub_F6DC0();
              v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16);
              swift_bridgeObjectRetain();
              v173(v181, v179, v132);
              uint64_t v133 = *(int *)(v91 + 28);
              uint64_t v134 = (char *)v68 + v133;
              long long v135 = (char *)v69 + v133;
              uint64_t v136 = sub_F6EE0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v176 + 56))(v68, 0, 1, v91);
            }
            uint64_t v137 = *(int *)(type metadata accessor for RCSFile(0) + 20);
            uint64_t v138 = (char *)v94 + v137;
            uint64_t v139 = (char *)v69 + v137;
            *(_OWORD *)uint64_t v138 = *(_OWORD *)((char *)v69 + v137);
            uint64_t v141 = *(void *)((char *)v69 + v137 + 16);
            uint64_t v140 = *(void *)((char *)v69 + v137 + 24);
            *((void *)v138 + 2) = v141;
            *((void *)v138 + 3) = v140;
            *((void *)v138 + 4) = *((void *)v139 + 4);
            uint64_t v142 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v143 = v142[7];
            long long v174 = &v139[v143];
            long long v177 = &v138[v143];
            uint64_t v170 = sub_F6DC0();
            uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v144(v177, v174, v170);
            id v76 = v68;
            uint64_t v145 = v142[8];
            os_log_t v146 = &v138[v145];
            uint64_t v147 = &v139[v145];
            uint64_t v148 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
            v138[v142[9]] = v139[v142[9]];
            uint64_t v149 = v142[10];
            uint64_t v150 = &v138[v149];
            int v151 = &v139[v149];
            v150[8] = v151[8];
            *(void *)uint64_t v150 = *(void *)v151;
            uint64_t v152 = sub_551C(&qword_128218);
            *(void *)((char *)v76 + *(int *)(v152 + 48)) = *(void *)((char *)v69 + *(int *)(v152 + 48));
            swift_retain();
            uint64_t v73 = v183;
            goto LABEL_65;
          case 2u:
            id v76 = v68;
            *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
            uint64_t v95 = v69[3];
            _OWORD v68[2] = v69[2];
            v68[3] = v95;
            v68[4] = v69[4];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_65;
          case 3u:
            uint64_t v96 = v73;
            long long v97 = *(_OWORD *)(v69 + 3);
            id v76 = v68;
            *(_OWORD *)(v68 + 3) = v97;
            (**(void (***)(void *, void *))(v97 - 8))(v68, v69);
            uint64_t v98 = v69[6];
            v68[5] = v69[5];
            v68[6] = v98;
            v68[7] = v69[7];
            uint64_t v99 = v69[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v99)
            {
              v68[8] = v69[8];
              v68[9] = v99;
              uint64_t v101 = v69[10];
              unint64_t v100 = v69[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v101, v100);
              v68[10] = v101;
              v68[11] = v100;
              uint64_t v102 = v69[13];
              unsigned char v68[12] = v69[12];
              v68[13] = v102;
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v153 = *((_OWORD *)v69 + 5);
              *((_OWORD *)v68 + 4) = *((_OWORD *)v69 + 4);
              *((_OWORD *)v68 + 5) = v153;
              *((_OWORD *)v68 + 6) = *((_OWORD *)v69 + 6);
            }
            uint64_t v73 = v96;
            goto LABEL_65;
          case 5u:
          case 6u:
          case 7u:
            id v76 = v68;
            *uint64_t v68 = *v69;
            swift_retain();
LABEL_65:
            swift_storeEnumTagMultiPayload();
            uint64_t v71 = v185;
            break;
          default:
            id v76 = v68;
            memcpy(v68, v69, *(void *)(v71 + 64));
            break;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v76, 0, 1, v73);
      }
      uint64_t v154 = v59[8];
      uint64_t v127 = a1 + v154;
      uint64_t v128 = (uint64_t)a2 + v154;
      uint64_t v129 = *(uint64_t *)((char *)a2 + v154 + 24);
      if (!v129)
      {
        long long v156 = *(_OWORD *)(v128 + 16);
        *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
        *(_OWORD *)(v127 + 16) = v156;
        *(void *)(v127 + 32) = *(void *)(v128 + 32);
        goto LABEL_70;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v20 = a2[1];
        if (v20)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v20;
          uint64_t v21 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v21;
          uint64_t v22 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v22;
          *(void *)(a1 + 48) = a2[6];
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v27 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v27;
          *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
        }
        uint64_t v28 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v28;
        uint64_t v29 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v29;
        long long v30 = *(_OWORD *)(a2 + 15);
        *(_OWORD *)(a1 + 120) = v30;
        uint64_t v31 = v30;
        uint64_t v32 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v30 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32(a1 + 96, a2 + 12, v31);
        uint64_t v33 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v33;
        *(void *)(a1 + 152) = a2[19];
        uint64_t v34 = a2[21];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34)
        {
          *(void *)(a1 + 160) = a2[20];
          *(void *)(a1 + 168) = v34;
          uint64_t v35 = a2[22];
          unint64_t v36 = a2[23];
          swift_bridgeObjectRetain();
          sub_2A4E4(v35, v36);
          *(void *)(a1 + 176) = v35;
          *(void *)(a1 + 184) = v36;
          uint64_t v37 = a2[25];
          *(void *)(a1 + 192) = a2[24];
          *(void *)(a1 + 200) = v37;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v38 = *((_OWORD *)a2 + 11);
          *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
          *(_OWORD *)(a1 + 176) = v38;
          *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
        }
        goto LABEL_71;
      }
      char v7 = *((unsigned char *)a2 + 122);
      if (v7)
      {
        uint64_t v8 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v8;
        uint64_t v9 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v9;
        uint64_t v10 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v10;
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        char v11 = *((unsigned char *)a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v11)
        {
          long long v12 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 88) = v12;
          (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 64, (uint64_t)(a2 + 8));
        }
        else
        {
          uint64_t v39 = a2[9];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = v39;
          uint64_t v40 = a2[11];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = v40;
          uint64_t v41 = a2[13];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = v41;
          *(void *)(a1 + 112) = a2[14];
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v11;
      }
      else
      {
        char v23 = *((unsigned char *)a2 + 57);
        if (v23)
        {
          long long v24 = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 24) = v24;
          (**(void (***)(uint64_t, uint64_t *))(v24 - 8))(a1, a2);
        }
        else
        {
          uint64_t v45 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v45;
          uint64_t v46 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v46;
          uint64_t v47 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v47;
          *(void *)(a1 + 48) = a2[6];
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v23;
      }
      *(unsigned char *)(a1 + 122) = v7;
      uint64_t v48 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v48;
      uint64_t v49 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v49;
      uint64_t v184 = type metadata accessor for RCSMessage(0);
      uint64_t v50 = *(int *)(v184 + 28);
      uint64_t v51 = (void *)(a1 + v50);
      unint64_t v52 = (uint64_t *)((char *)a2 + v50);
      uint64_t v53 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v55 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v54 + 48);
      uint64_t v56 = v53;
      swift_bridgeObjectRetain();
      BOOL v57 = v52;
      swift_bridgeObjectRetain();
      if (v55(v52, 1, v56))
      {
        uint64_t v58 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
        unint64_t v59 = (int *)v184;
      }
      else
      {
        uint64_t v182 = v54;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v60 = v52[1];
            uint64_t v61 = v51;
            *uint64_t v51 = *v52;
            v51[1] = v60;
            v51[2] = v52[2];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_44;
          case 1u:
            uint64_t v180 = v56;
            uint64_t v77 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            uint64_t v78 = *(void *)(v77 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v78 + 48))(v57, 1, v77))
            {
              uint64_t v79 = sub_551C(&qword_1283F0);
              id v80 = v51;
              memcpy(v51, v57, *(void *)(*(void *)(v79 - 8) + 64));
              uint64_t v81 = v57;
            }
            else
            {
              id v80 = v51;
              *(_OWORD *)uint64_t v51 = *(_OWORD *)v57;
              v51[2] = v57[2];
              uint64_t v103 = *(int *)(v77 + 24);
              id v171 = (char *)v57 + v103;
              long long v175 = (char *)v51 + v103;
              uint64_t v81 = v57;
              uint64_t v104 = sub_F6DC0();
              os_log_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
              swift_bridgeObjectRetain();
              v167(v175, v171, v104);
              uint64_t v105 = *(int *)(v77 + 28);
              uint64_t v106 = (char *)v51 + v105;
              uint64_t v107 = (char *)v81 + v105;
              uint64_t v108 = sub_F6EE0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v51, 0, 1, v77);
            }
            unint64_t v59 = (int *)v184;
            long long v178 = v81;
            uint64_t v109 = *(int *)(type metadata accessor for RCSFile(0) + 20);
            uint64_t v110 = (char *)v80 + v109;
            uint64_t v111 = (char *)v81 + v109;
            *(_OWORD *)uint64_t v110 = *(_OWORD *)((char *)v81 + v109);
            uint64_t v113 = *(void *)((char *)v81 + v109 + 16);
            uint64_t v112 = *(void *)((char *)v81 + v109 + 24);
            *((void *)v110 + 2) = v113;
            *((void *)v110 + 3) = v112;
            *((void *)v110 + 4) = *((void *)v111 + 4);
            uint64_t v114 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v115 = v114[7];
            id v169 = &v111[v115];
            long long v172 = &v110[v115];
            uint64_t v168 = sub_F6DC0();
            id v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v116(v172, v169, v168);
            uint64_t v61 = v51;
            uint64_t v117 = v114[8];
            id v118 = &v110[v117];
            uint64_t v119 = &v111[v117];
            uint64_t v120 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
            v110[v114[9]] = v111[v114[9]];
            uint64_t v121 = v114[10];
            v122 = &v110[v121];
            uint64_t v123 = &v111[v121];
            v122[8] = v123[8];
            *(void *)v122 = *(void *)v123;
            uint64_t v124 = sub_551C(&qword_128218);
            *(void *)((char *)v61 + *(int *)(v124 + 48)) = *(void *)((char *)v178 + *(int *)(v124 + 48));
            swift_retain();
            uint64_t v56 = v180;
            goto LABEL_57;
          case 2u:
            uint64_t v61 = v51;
            *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
            uint64_t v82 = v52[3];
            v51[2] = v52[2];
            v51[3] = v82;
            v51[4] = v52[4];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_44;
          case 3u:
            uint64_t v83 = v56;
            long long v84 = *(_OWORD *)(v52 + 3);
            uint64_t v61 = v51;
            *(_OWORD *)(v51 + 3) = v84;
            (**(void (***)(void *, void *))(v84 - 8))(v51, v52);
            uint64_t v85 = v52[6];
            v51[5] = v52[5];
            v51[6] = v85;
            long long v86 = v52;
            v61[7] = v52[7];
            uint64_t v87 = v52[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v87)
            {
              v61[8] = v52[8];
              v61[9] = v87;
              uint64_t v89 = v52[10];
              unint64_t v88 = v52[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v89, v88);
              v61[10] = v89;
              v61[11] = v88;
              uint64_t v90 = v86[13];
              v61[12] = v86[12];
              v61[13] = v90;
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v125 = *((_OWORD *)v52 + 5);
              *((_OWORD *)v61 + 4) = *((_OWORD *)v52 + 4);
              *((_OWORD *)v61 + 5) = v125;
              *((_OWORD *)v61 + 6) = *((_OWORD *)v52 + 6);
            }
            unint64_t v59 = (int *)v184;
            uint64_t v56 = v83;
LABEL_57:
            swift_storeEnumTagMultiPayload();
            uint64_t v54 = v182;
            goto LABEL_58;
          case 5u:
          case 6u:
          case 7u:
            uint64_t v61 = v51;
            *uint64_t v51 = *v52;
            swift_retain();
LABEL_44:
            swift_storeEnumTagMultiPayload();
            goto LABEL_45;
          default:
            uint64_t v61 = v51;
            memcpy(v51, v52, *(void *)(v54 + 64));
LABEL_45:
            unint64_t v59 = (int *)v184;
LABEL_58:
            (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v61, 0, 1, v56);
            break;
        }
      }
      uint64_t v126 = v59[8];
      uint64_t v127 = a1 + v126;
      uint64_t v128 = (uint64_t)a2 + v126;
      uint64_t v129 = *(uint64_t *)((char *)a2 + v126 + 24);
      if (!v129)
      {
        long long v130 = *(_OWORD *)(v128 + 16);
        *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
        *(_OWORD *)(v127 + 16) = v130;
        *(void *)(v127 + 32) = *(void *)(v128 + 32);
LABEL_70:
        *(void *)(a1 + v59[9]) = *(uint64_t *)((char *)a2 + v59[9]);
        *(unsigned char *)(a1 + v59[10]) = *((unsigned char *)a2 + v59[10]);
        *(unsigned char *)(a1 + v59[11]) = *((unsigned char *)a2 + v59[11]);
        *(void *)(a1 + v59[12]) = *(uint64_t *)((char *)a2 + v59[12]);
        uint64_t v157 = v59[13];
        v158 = (void *)(a1 + v157);
        v159 = (uint64_t *)((char *)a2 + v157);
        uint64_t v160 = v159[1];
        void *v158 = *v159;
        v158[1] = v160;
        uint64_t v161 = v159[3];
        v158[2] = v159[2];
        v158[3] = v161;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v162 = *(int *)(sub_551C(&qword_1282D8) + 48);
        uint64_t v163 = (void *)(a1 + v162);
        v164 = (uint64_t *)((char *)a2 + v162);
        uint64_t v165 = v164[1];
        *uint64_t v163 = *v164;
        v163[1] = v165;
        swift_bridgeObjectRetain();
LABEL_71:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    uint64_t v155 = *(void *)(v128 + 32);
    *(void *)(v127 + 24) = v129;
    *(void *)(v127 + 32) = v155;
    (**(void (***)(void))(v129 - 8))();
    goto LABEL_70;
  }
  uint64_t v13 = *a2;
  *(void *)a1 = *a2;
  a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t _s19ChatResolutionErrorOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      if (*(unsigned char *)(a1 + 122))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(a1 + 121))
        {
          uint64_t v3 = a1 + 64;
LABEL_17:
          sub_6BEC(v3);
          goto LABEL_24;
        }
      }
      else if (*(unsigned char *)(a1 + 57))
      {
        uint64_t v3 = a1;
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for RCSMessage(0);
      uint64_t v6 = (void *)(a1 + *(int *)(v5 + 28));
      uint64_t v7 = type metadata accessor for RCSMessage.Content(0);
      if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
LABEL_32:
            swift_bridgeObjectRelease();
            goto LABEL_33;
          case 1u:
LABEL_29:
            uint64_t v9 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9))
            {
              swift_bridgeObjectRelease();
              uint64_t v10 = (char *)v6 + *(int *)(v9 + 24);
              uint64_t v11 = sub_F6DC0();
              (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
              long long v12 = (char *)v6 + *(int *)(v9 + 28);
              uint64_t v13 = sub_F6EE0();
              (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
            }
            char v14 = (char *)v6 + *(int *)(type metadata accessor for RCSFile(0) + 20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v15 = type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v16 = &v14[*(int *)(v15 + 28)];
            uint64_t v17 = sub_F6DC0();
            (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
            char v18 = &v14[*(int *)(v15 + 32)];
            uint64_t v19 = sub_F6EE0();
            (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
            sub_551C(&qword_128218);
            goto LABEL_33;
          case 3u:
LABEL_40:
            sub_6BEC((uint64_t)v6);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v6[9])
            {
              swift_bridgeObjectRelease();
              sub_2852C(v6[10], v6[11]);
              swift_bridgeObjectRelease();
            }
            goto LABEL_34;
          case 5u:
          case 6u:
          case 7u:
LABEL_33:
            swift_release();
            break;
          default:
            goto LABEL_34;
        }
      }
      goto LABEL_34;
    case 1:
      if (*(unsigned char *)(a1 + 122))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(a1 + 121))
        {
          uint64_t v4 = a1 + 64;
LABEL_20:
          sub_6BEC(v4);
          goto LABEL_27;
        }
      }
      else if (*(unsigned char *)(a1 + 57))
      {
        uint64_t v4 = a1;
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for RCSMessage(0);
      uint64_t v6 = (void *)(a1 + *(int *)(v5 + 28));
      uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
      if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
            goto LABEL_32;
          case 1u:
            goto LABEL_29;
          case 3u:
            goto LABEL_40;
          case 5u:
          case 6u:
          case 7u:
            goto LABEL_33;
          default:
            break;
        }
      }
LABEL_34:
      uint64_t v20 = a1 + *(int *)(v5 + 32);
      if (*(void *)(v20 + 24)) {
        sub_6BEC(v20);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_551C(&qword_1282D8);
      goto LABEL_37;
    case 0:
      if (*(void *)(a1 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_6BEC(a1 + 96);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = *(void *)(a1 + 168);
      if (result)
      {
        swift_bridgeObjectRelease();
        sub_2852C(*(void *)(a1 + 176), *(void *)(a1 + 184));
LABEL_37:
        return swift_bridgeObjectRelease();
      }
      break;
  }
  return result;
}

uint64_t _s19ChatResolutionErrorOwcp(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    char v11 = *(unsigned char *)(a2 + 122);
    if (v11)
    {
      uint64_t v12 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      uint64_t v13 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v13;
      uint64_t v14 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v14;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      char v15 = *(unsigned char *)(a2 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
      {
        long long v16 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 88) = v16;
        (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 64, a2 + 64);
      }
      else
      {
        uint64_t v39 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v39;
        uint64_t v40 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v40;
        uint64_t v41 = *(void *)(a2 + 104);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = v41;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 121) = v15;
    }
    else
    {
      char v22 = *(unsigned char *)(a2 + 57);
      if (v22)
      {
        long long v23 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v23;
        (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1, a2);
      }
      else
      {
        uint64_t v55 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v55;
        uint64_t v56 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v56;
        uint64_t v57 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v57;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 57) = v22;
    }
    *(unsigned char *)(a1 + 122) = v11;
    uint64_t v58 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v58;
    uint64_t v59 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v59;
    uint64_t v47 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v60 = v47[7];
    uint64_t v49 = (void *)(a1 + v60);
    uint64_t v50 = (void *)(a2 + v60);
    uint64_t v61 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v62 = *(void *)(v61 - 8);
    uint64_t v63 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v62 + 48);
    uint64_t v54 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v63(v50, 1, v54))
    {
      uint64_t v127 = v62;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
LABEL_32:
          uint64_t v65 = v50[1];
          uint64_t v66 = v49;
          *uint64_t v49 = *v50;
          v49[1] = v65;
          _OWORD v49[2] = v50[2];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_42;
        case 1u:
LABEL_33:
          uint64_t v125 = v54;
          uint64_t v67 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v68 = *(void *)(v67 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v68 + 48))(v50, 1, v67))
          {
            uint64_t v69 = sub_551C(&qword_1283F0);
            uint64_t v70 = v49;
            memcpy(v49, v50, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            uint64_t v121 = v68;
            uint64_t v70 = v49;
            *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
            _OWORD v49[2] = v50[2];
            uint64_t v79 = *(int *)(v67 + 24);
            uint64_t v123 = (char *)v50 + v79;
            uint64_t v124 = (char *)v49 + v79;
            uint64_t v80 = sub_F6DC0();
            uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
            swift_bridgeObjectRetain();
            v119(v124, v123, v80);
            uint64_t v81 = *(int *)(v67 + 28);
            uint64_t v82 = (char *)v49 + v81;
            uint64_t v83 = (char *)v50 + v81;
            uint64_t v84 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v49, 0, 1, v67);
          }
          uint64_t v85 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          long long v86 = (char *)v70 + v85;
          uint64_t v87 = (char *)v50 + v85;
          *(_OWORD *)long long v86 = *(_OWORD *)((char *)v50 + v85);
          uint64_t v89 = *(void *)((char *)v50 + v85 + 16);
          uint64_t v88 = *(void *)((char *)v50 + v85 + 24);
          *((void *)v86 + 2) = v89;
          *((void *)v86 + 3) = v88;
          *((void *)v86 + 4) = *((void *)v87 + 4);
          uint64_t v90 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v91 = v90[7];
          uint64_t v120 = &v87[v91];
          v122 = &v86[v91];
          uint64_t v118 = sub_F6DC0();
          uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v92(v122, v120, v118);
          uint64_t v66 = v49;
          uint64_t v93 = v90[8];
          uint64_t v94 = &v86[v93];
          uint64_t v95 = &v87[v93];
          uint64_t v96 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
          v86[v90[9]] = v87[v90[9]];
          uint64_t v97 = v90[10];
          uint64_t v98 = &v86[v97];
          uint64_t v99 = &v87[v97];
          v98[8] = v99[8];
          *(void *)uint64_t v98 = *(void *)v99;
          uint64_t v100 = sub_551C(&qword_128218);
          *(void *)((char *)v66 + *(int *)(v100 + 48)) = *(void *)((char *)v50 + *(int *)(v100 + 48));
          swift_retain();
          uint64_t v54 = v125;
          goto LABEL_42;
        case 2u:
LABEL_35:
          uint64_t v66 = v49;
          *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          uint64_t v71 = v50[3];
          _OWORD v49[2] = v50[2];
          v49[3] = v71;
          v49[4] = v50[4];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_42;
        case 3u:
LABEL_36:
          uint64_t v126 = v54;
          long long v72 = *(_OWORD *)(v50 + 3);
          uint64_t v66 = v49;
          *(_OWORD *)(v49 + 3) = v72;
          (**(void (***)(void *, void *))(v72 - 8))(v49, v50);
          uint64_t v73 = v50[6];
          v49[5] = v50[5];
          v49[6] = v73;
          v49[7] = v50[7];
          uint64_t v74 = v50[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v74)
          {
            v49[8] = v50[8];
            v49[9] = v74;
            uint64_t v76 = v50[10];
            unint64_t v75 = v50[11];
            swift_bridgeObjectRetain();
            sub_2A4E4(v76, v75);
            v49[10] = v76;
            v49[11] = v75;
            uint64_t v77 = v50[13];
            v49[12] = v50[12];
            v49[13] = v77;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v117 = *((_OWORD *)v50 + 5);
            *((_OWORD *)v49 + 4) = *((_OWORD *)v50 + 4);
            *((_OWORD *)v49 + 5) = v117;
            *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
          }
          uint64_t v54 = v126;
          swift_storeEnumTagMultiPayload();
          goto LABEL_43;
        case 5u:
        case 6u:
        case 7u:
LABEL_39:
          uint64_t v66 = v49;
          *uint64_t v49 = *v50;
          swift_retain();
LABEL_42:
          swift_storeEnumTagMultiPayload();
LABEL_43:
          uint64_t v78 = v127;
          break;
        default:
LABEL_38:
          uint64_t v78 = v127;
          uint64_t v66 = v49;
          memcpy(v49, v50, *(void *)(v127 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v66, 0, 1, v54);
      goto LABEL_45;
    }
LABEL_30:
    uint64_t v64 = sub_551C((uint64_t *)&unk_128170);
    memcpy(v49, v50, *(void *)(*(void *)(v64 - 8) + 64));
LABEL_45:
    uint64_t v101 = v47[8];
    uint64_t v102 = a1 + v101;
    uint64_t v103 = a2 + v101;
    uint64_t v104 = *(void *)(a2 + v101 + 24);
    if (v104)
    {
      uint64_t v105 = *(void *)(v103 + 32);
      *(void *)(v102 + 24) = v104;
      *(void *)(v102 + 32) = v105;
      (**(void (***)(void))(v104 - 8))();
    }
    else
    {
      long long v106 = *(_OWORD *)(v103 + 16);
      *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
      *(_OWORD *)(v102 + 16) = v106;
      *(void *)(v102 + 32) = *(void *)(v103 + 32);
    }
    *(void *)(a1 + v47[9]) = *(void *)(a2 + v47[9]);
    *(unsigned char *)(a1 + v47[10]) = *(unsigned char *)(a2 + v47[10]);
    *(unsigned char *)(a1 + v47[11]) = *(unsigned char *)(a2 + v47[11]);
    *(void *)(a1 + v47[12]) = *(void *)(a2 + v47[12]);
    uint64_t v107 = v47[13];
    uint64_t v108 = (void *)(a1 + v107);
    uint64_t v109 = (void *)(a2 + v107);
    uint64_t v110 = v109[1];
    void *v108 = *v109;
    v108[1] = v110;
    uint64_t v111 = v109[3];
    v108[2] = v109[2];
    v108[3] = v111;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v112 = *(int *)(sub_551C(&qword_1282D8) + 48);
    uint64_t v113 = (void *)(a1 + v112);
    uint64_t v114 = (void *)(a2 + v112);
    uint64_t v115 = v114[1];
    *uint64_t v113 = *v114;
    v113[1] = v115;
    goto LABEL_49;
  }
  if (EnumCaseMultiPayload == 1)
  {
    char v5 = *(unsigned char *)(a2 + 122);
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      char v9 = *(unsigned char *)(a2 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9)
      {
        long long v10 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 88) = v10;
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 64, a2 + 64);
      }
      else
      {
        uint64_t v36 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v36;
        uint64_t v37 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v37;
        uint64_t v38 = *(void *)(a2 + 104);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = v38;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 121) = v9;
    }
    else
    {
      char v20 = *(unsigned char *)(a2 + 57);
      if (v20)
      {
        long long v21 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v21;
        (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1, a2);
      }
      else
      {
        uint64_t v42 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v42;
        uint64_t v43 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v43;
        uint64_t v44 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v44;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 57) = v20;
    }
    *(unsigned char *)(a1 + 122) = v5;
    uint64_t v45 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v45;
    uint64_t v46 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v46;
    uint64_t v47 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v48 = v47[7];
    uint64_t v49 = (void *)(a1 + v48);
    uint64_t v50 = (void *)(a2 + v48);
    uint64_t v51 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48);
    uint64_t v54 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v53(v50, 1, v54))
    {
      uint64_t v127 = v52;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_32;
        case 1u:
          goto LABEL_33;
        case 2u:
          goto LABEL_35;
        case 3u:
          goto LABEL_36;
        case 5u:
        case 6u:
        case 7u:
          goto LABEL_39;
        default:
          goto LABEL_38;
      }
    }
    goto LABEL_30;
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v17;
    uint64_t v18 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v18;
    uint64_t v19 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v19;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v24;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  uint64_t v25 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v25;
  uint64_t v26 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v26;
  long long v27 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v27;
  uint64_t v28 = v27;
  uint64_t v29 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(a1 + 96, a2 + 96, v28);
  uint64_t v30 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v30;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v31 = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31)
  {
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v31;
    uint64_t v32 = *(void *)(a2 + 176);
    unint64_t v33 = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    sub_2A4E4(v32, v33);
    *(void *)(a1 + 176) = v32;
    *(void *)(a1 + 184) = v33;
    uint64_t v34 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v34;
LABEL_49:
    swift_bridgeObjectRetain();
    goto LABEL_50;
  }
  long long v35 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v35;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
LABEL_50:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s19ChatResolutionErrorOwca(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_3BDE0(a1, (uint64_t (*)(void))type metadata accessor for RCSServiceSession.ChatResolutionError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      char v8 = *((unsigned char *)a2 + 122);
      if (v8)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        char v9 = *((unsigned char *)a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9)
        {
          uint64_t v10 = *((void *)a2 + 11);
          *(void *)(a1 + 88) = v10;
          *(void *)(a1 + 96) = *((void *)a2 + 12);
          (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 64, (uint64_t)(a2 + 4));
        }
        else
        {
          *(void *)(a1 + 64) = *((void *)a2 + 8);
          *(void *)(a1 + 72) = *((void *)a2 + 9);
          *(void *)(a1 + 80) = *((void *)a2 + 10);
          *(void *)(a1 + 88) = *((void *)a2 + 11);
          *(void *)(a1 + 96) = *((void *)a2 + 12);
          *(void *)(a1 + 104) = *((void *)a2 + 13);
          *(void *)(a1 + 112) = *((void *)a2 + 14);
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v9;
      }
      else
      {
        char v13 = *((unsigned char *)a2 + 57);
        if (v13)
        {
          uint64_t v14 = *((void *)a2 + 3);
          *(void *)(a1 + 24) = v14;
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          (**(void (***)(uint64_t, long long *))(v14 - 8))(a1, a2);
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *((void *)a2 + 1);
          *(void *)(a1 + 16) = *((void *)a2 + 2);
          *(void *)(a1 + 24) = *((void *)a2 + 3);
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          *(void *)(a1 + 40) = *((void *)a2 + 5);
          *(void *)(a1 + 48) = *((void *)a2 + 6);
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v13;
      }
      *(unsigned char *)(a1 + 122) = v8;
      *(void *)(a1 + 128) = *((void *)a2 + 16);
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      uint64_t v25 = (int *)type metadata accessor for RCSMessage(0);
      uint64_t v37 = v25[7];
      long long v27 = (void *)(a1 + v37);
      uint64_t v28 = (void *)((char *)a2 + v37);
      uint64_t v38 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48);
      uint64_t v32 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v40(v28, 1, v32))
      {
        uint64_t v99 = v39;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
LABEL_35:
            uint64_t v42 = v27;
            *long long v27 = *v28;
            v27[1] = v28[1];
            _OWORD v27[2] = v28[2];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_45;
          case 1u:
LABEL_36:
            uint64_t v97 = v32;
            uint64_t v43 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            uint64_t v44 = *(void *)(v43 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v44 + 48))(v28, 1, v43))
            {
              uint64_t v45 = sub_551C(&qword_1283F0);
              uint64_t v46 = v27;
              memcpy(v27, v28, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              uint64_t v92 = v44;
              uint64_t v46 = v27;
              *long long v27 = *v28;
              v27[1] = v28[1];
              _OWORD v27[2] = v28[2];
              uint64_t v51 = *(int *)(v43 + 24);
              uint64_t v94 = (char *)v28 + v51;
              uint64_t v95 = (char *)v27 + v51;
              uint64_t v52 = sub_F6DC0();
              uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
              swift_bridgeObjectRetain();
              v90(v95, v94, v52);
              uint64_t v53 = *(int *)(v43 + 28);
              uint64_t v54 = (char *)v27 + v53;
              uint64_t v55 = (char *)v28 + v53;
              uint64_t v56 = sub_F6EE0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v27, 0, 1, v43);
            }
            uint64_t v57 = *(int *)(type metadata accessor for RCSFile(0) + 20);
            uint64_t v58 = (void *)((char *)v46 + v57);
            uint64_t v59 = (char *)v28 + v57;
            *uint64_t v58 = *(void *)((char *)v28 + v57);
            v58[1] = *(void *)((char *)v28 + v57 + 8);
            void v58[2] = *(void *)((char *)v28 + v57 + 16);
            v58[3] = *(void *)((char *)v28 + v57 + 24);
            uint64_t v58[4] = *(void *)((char *)v28 + v57 + 32);
            uint64_t v60 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v61 = v60[7];
            uint64_t v91 = &v59[v61];
            uint64_t v93 = (char *)v58 + v61;
            uint64_t v89 = sub_F6DC0();
            uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v62(v93, v91, v89);
            uint64_t v42 = v27;
            uint64_t v63 = v60[8];
            uint64_t v64 = (char *)v58 + v63;
            uint64_t v65 = &v59[v63];
            uint64_t v66 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
            *((unsigned char *)v58 + v60[9]) = v59[v60[9]];
            uint64_t v67 = v60[10];
            uint64_t v68 = (char *)v58 + v67;
            uint64_t v69 = &v59[v67];
            char v70 = v69[8];
            *(void *)uint64_t v68 = *(void *)v69;
            v68[8] = v70;
            uint64_t v71 = sub_551C(&qword_128218);
            *(void *)((char *)v42 + *(int *)(v71 + 48)) = *(void *)((char *)v28 + *(int *)(v71 + 48));
            swift_retain();
            uint64_t v32 = v97;
            goto LABEL_45;
          case 2u:
LABEL_38:
            uint64_t v42 = v27;
            *long long v27 = *v28;
            v27[1] = v28[1];
            _OWORD v27[2] = v28[2];
            v27[3] = v28[3];
            v27[4] = v28[4];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_45;
          case 3u:
            uint64_t v98 = v32;
            uint64_t v47 = v28[3];
            v27[3] = v47;
            v27[4] = v28[4];
            (**(void (***)(void *, void *))(v47 - 8))(v27, v28);
            v27[5] = v28[5];
            v27[6] = v28[6];
            v27[7] = v28[7];
            uint64_t v48 = v28[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v48)
            {
              v27[8] = v28[8];
              v27[9] = v28[9];
              uint64_t v49 = v28[10];
              unint64_t v50 = v28[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v49, v50);
              v27[10] = v49;
              v27[11] = v50;
              v27[12] = v28[12];
              v27[13] = v28[13];
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v87 = *((_OWORD *)v28 + 4);
              long long v88 = *((_OWORD *)v28 + 6);
              *((_OWORD *)v27 + 5) = *((_OWORD *)v28 + 5);
              *((_OWORD *)v27 + 6) = v88;
              *((_OWORD *)v27 + 4) = v87;
            }
            uint64_t v32 = v98;
            uint64_t v42 = v27;
            swift_storeEnumTagMultiPayload();
            break;
          case 5u:
          case 6u:
          case 7u:
LABEL_40:
            uint64_t v42 = v27;
            *long long v27 = *v28;
            swift_retain();
LABEL_45:
            swift_storeEnumTagMultiPayload();
LABEL_46:
            uint64_t v39 = v99;
            break;
          default:
LABEL_39:
            uint64_t v39 = v99;
            uint64_t v42 = v27;
            memcpy(v27, v28, *(void *)(v99 + 64));
            break;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v42, 0, 1, v32);
        goto LABEL_48;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (*((void *)a2 + 1))
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *((void *)a2 + 1);
          *(void *)(a1 + 16) = *((void *)a2 + 2);
          *(void *)(a1 + 24) = *((void *)a2 + 3);
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          *(void *)(a1 + 40) = *((void *)a2 + 5);
          *(void *)(a1 + 48) = *((void *)a2 + 6);
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v15 = *a2;
          long long v16 = a2[1];
          long long v17 = a2[2];
          *(_OWORD *)(a1 + 41) = *(long long *)((char *)a2 + 41);
          *(_OWORD *)(a1 + 16) = v16;
          *(_OWORD *)(a1 + 32) = v17;
          *(_OWORD *)a1 = v15;
        }
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        *(void *)(a1 + 72) = *((void *)a2 + 9);
        *(void *)(a1 + 80) = *((void *)a2 + 10);
        *(void *)(a1 + 88) = *((void *)a2 + 11);
        uint64_t v18 = *((void *)a2 + 15);
        *(void *)(a1 + 120) = v18;
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        uint64_t v19 = **(void (***)(uint64_t, long long *, uint64_t))(v18 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19(a1 + 96, a2 + 6, v18);
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(void *)(a1 + 144) = *((void *)a2 + 18);
        *(void *)(a1 + 152) = *((void *)a2 + 19);
        uint64_t v20 = *((void *)a2 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v20)
        {
          long long v23 = a2[10];
          long long v24 = a2[12];
          *(_OWORD *)(a1 + 176) = a2[11];
          *(_OWORD *)(a1 + 192) = v24;
          *(_OWORD *)(a1 + 160) = v23;
LABEL_53:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *(void *)(a1 + 160) = *((void *)a2 + 20);
        *(void *)(a1 + 168) = *((void *)a2 + 21);
        uint64_t v21 = *((void *)a2 + 22);
        unint64_t v22 = *((void *)a2 + 23);
        swift_bridgeObjectRetain();
        sub_2A4E4(v21, v22);
        *(void *)(a1 + 176) = v21;
        *(void *)(a1 + 184) = v22;
        *(void *)(a1 + 192) = *((void *)a2 + 24);
        *(void *)(a1 + 200) = *((void *)a2 + 25);
LABEL_52:
        swift_bridgeObjectRetain();
        goto LABEL_53;
      }
      char v5 = *((unsigned char *)a2 + 122);
      if (v5)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        char v6 = *((unsigned char *)a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6)
        {
          uint64_t v7 = *((void *)a2 + 11);
          *(void *)(a1 + 88) = v7;
          *(void *)(a1 + 96) = *((void *)a2 + 12);
          (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 64, (uint64_t)(a2 + 4));
        }
        else
        {
          *(void *)(a1 + 64) = *((void *)a2 + 8);
          *(void *)(a1 + 72) = *((void *)a2 + 9);
          *(void *)(a1 + 80) = *((void *)a2 + 10);
          *(void *)(a1 + 88) = *((void *)a2 + 11);
          *(void *)(a1 + 96) = *((void *)a2 + 12);
          *(void *)(a1 + 104) = *((void *)a2 + 13);
          *(void *)(a1 + 112) = *((void *)a2 + 14);
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v6;
      }
      else
      {
        char v11 = *((unsigned char *)a2 + 57);
        if (v11)
        {
          uint64_t v12 = *((void *)a2 + 3);
          *(void *)(a1 + 24) = v12;
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          (**(void (***)(uint64_t, long long *))(v12 - 8))(a1, a2);
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *((void *)a2 + 1);
          *(void *)(a1 + 16) = *((void *)a2 + 2);
          *(void *)(a1 + 24) = *((void *)a2 + 3);
          *(void *)(a1 + 32) = *((void *)a2 + 4);
          *(void *)(a1 + 40) = *((void *)a2 + 5);
          *(void *)(a1 + 48) = *((void *)a2 + 6);
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v11;
      }
      *(unsigned char *)(a1 + 122) = v5;
      *(void *)(a1 + 128) = *((void *)a2 + 16);
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      uint64_t v25 = (int *)type metadata accessor for RCSMessage(0);
      uint64_t v26 = v25[7];
      long long v27 = (void *)(a1 + v26);
      uint64_t v28 = (void *)((char *)a2 + v26);
      uint64_t v29 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48);
      uint64_t v32 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v31(v28, 1, v32))
      {
        uint64_t v99 = v30;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            goto LABEL_35;
          case 1u:
            goto LABEL_36;
          case 2u:
            goto LABEL_38;
          case 3u:
            uint64_t v96 = v32;
            uint64_t v33 = v28[3];
            v27[3] = v33;
            v27[4] = v28[4];
            (**(void (***)(void *, void *))(v33 - 8))(v27, v28);
            v27[5] = v28[5];
            v27[6] = v28[6];
            v27[7] = v28[7];
            uint64_t v34 = v28[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v34)
            {
              v27[8] = v28[8];
              v27[9] = v28[9];
              uint64_t v35 = v28[10];
              unint64_t v36 = v28[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v35, v36);
              v27[10] = v35;
              v27[11] = v36;
              v27[12] = v28[12];
              v27[13] = v28[13];
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v85 = *((_OWORD *)v28 + 4);
              long long v86 = *((_OWORD *)v28 + 6);
              *((_OWORD *)v27 + 5) = *((_OWORD *)v28 + 5);
              *((_OWORD *)v27 + 6) = v86;
              *((_OWORD *)v27 + 4) = v85;
            }
            uint64_t v42 = v27;
            uint64_t v32 = v96;
            swift_storeEnumTagMultiPayload();
            goto LABEL_46;
          case 5u:
          case 6u:
          case 7u:
            goto LABEL_40;
          default:
            goto LABEL_39;
        }
      }
    }
    uint64_t v41 = sub_551C((uint64_t *)&unk_128170);
    memcpy(v27, v28, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_48:
    uint64_t v72 = v25[8];
    uint64_t v73 = a1 + v72;
    uint64_t v74 = (long long *)((char *)a2 + v72);
    uint64_t v75 = *(void *)((char *)a2 + v72 + 24);
    if (v75)
    {
      *(void *)(v73 + 24) = v75;
      *(void *)(v73 + 32) = *((void *)v74 + 4);
      (**(void (***)(void))(v75 - 8))();
    }
    else
    {
      long long v76 = *v74;
      long long v77 = v74[1];
      *(void *)(v73 + 32) = *((void *)v74 + 4);
      *(_OWORD *)uint64_t v73 = v76;
      *(_OWORD *)(v73 + 16) = v77;
    }
    *(void *)(a1 + v25[9]) = *(void *)((char *)a2 + v25[9]);
    *(unsigned char *)(a1 + v25[10]) = *((unsigned char *)a2 + v25[10]);
    *(unsigned char *)(a1 + v25[11]) = *((unsigned char *)a2 + v25[11]);
    *(void *)(a1 + v25[12]) = *(void *)((char *)a2 + v25[12]);
    uint64_t v78 = v25[13];
    uint64_t v79 = (void *)(a1 + v78);
    uint64_t v80 = (void *)((char *)a2 + v78);
    *uint64_t v79 = *v80;
    v79[1] = v80[1];
    v79[2] = v80[2];
    v79[3] = v80[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v81 = *(int *)(sub_551C(&qword_1282D8) + 48);
    uint64_t v82 = (void *)(a1 + v81);
    uint64_t v83 = (void *)((char *)a2 + v81);
    *uint64_t v82 = *v83;
    v82[1] = v83[1];
    goto LABEL_52;
  }
  return a1;
}

uint64_t sub_3BDE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *_s19ChatResolutionErrorOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v17 = a2[5];
    a1[4] = a2[4];
    a1[5] = v17;
    a1[6] = a2[6];
    *(_OWORD *)((char *)a1 + 107) = *(_OWORD *)((char *)a2 + 107);
    long long v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    long long v19 = a2[3];
    a1[2] = a2[2];
    a1[3] = v19;
    long long v20 = a2[9];
    a1[8] = a2[8];
    a1[9] = v20;
    char v11 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v21 = v11[7];
    char v13 = (void *)((char *)a1 + v21);
    uint64_t v14 = (void *)((char *)a2 + v21);
    uint64_t v15 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
LABEL_6:
      uint64_t v22 = sub_551C((uint64_t *)&unk_128170);
      memcpy(v13, v14, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_18:
      uint64_t v42 = v11[8];
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      long long v45 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v45;
      *((void *)v43 + 4) = *((void *)v44 + 4);
      *(void *)((char *)a1 + v11[9]) = *(void *)((char *)a2 + v11[9]);
      *((unsigned char *)a1 + v11[10]) = *((unsigned char *)a2 + v11[10]);
      *((unsigned char *)a1 + v11[11]) = *((unsigned char *)a2 + v11[11]);
      *(void *)((char *)a1 + v11[12]) = *(void *)((char *)a2 + v11[12]);
      uint64_t v46 = v11[13];
      uint64_t v47 = (_OWORD *)((char *)a1 + v46);
      uint64_t v48 = (_OWORD *)((char *)a2 + v46);
      long long v49 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v49;
      uint64_t v50 = sub_551C(&qword_1282D8);
      *(_OWORD *)((char *)a1 + *(int *)(v50 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v50 + 48));
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23))
      {
LABEL_13:
        uint64_t v25 = sub_551C(&qword_1283F0);
        memcpy(v13, v14, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_16:
        uint64_t v30 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v31 = (char *)v13 + v30;
        uint64_t v60 = v13;
        uint64_t v32 = (char *)v14 + v30;
        *(void *)uint64_t v31 = *(void *)((char *)v14 + v30);
        *(_OWORD *)(v31 + 8) = *(_OWORD *)((char *)v14 + v30 + 8);
        *(_OWORD *)(v31 + 24) = *(_OWORD *)((char *)v14 + v30 + 24);
        uint64_t v33 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v34 = v33[7];
        uint64_t v52 = &v32[v34];
        uint64_t v56 = &v31[v34];
        uint64_t v35 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v56, v52, v35);
        uint64_t v36 = v33[8];
        uint64_t v53 = &v32[v36];
        uint64_t v57 = &v31[v36];
        uint64_t v37 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v57, v53, v37);
        v31[v33[9]] = v32[v33[9]];
        uint64_t v38 = v33[10];
        uint64_t v39 = &v31[v38];
        uint64_t v40 = &v32[v38];
        char v13 = v60;
        v39[8] = v40[8];
        *(void *)uint64_t v39 = *(void *)v40;
        uint64_t v41 = sub_551C(&qword_128218);
        *(void *)((char *)v60 + *(int *)(v41 + 48)) = *(void *)((char *)v14 + *(int *)(v41 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
LABEL_15:
      *char v13 = *v14;
      *(_OWORD *)(v13 + 1) = *(_OWORD *)(v14 + 1);
      uint64_t v26 = *(int *)(v23 + 24);
      uint64_t v54 = (char *)v14 + v26;
      uint64_t v58 = (char *)v13 + v26;
      uint64_t v27 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v58, v54, v27);
      uint64_t v28 = *(int *)(v23 + 28);
      uint64_t v55 = (char *)v14 + v28;
      uint64_t v59 = (char *)v13 + v28;
      uint64_t v29 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v59, v55, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
      goto LABEL_16;
    }
LABEL_14:
    memcpy(v13, v14, *(void *)(v16 + 64));
LABEL_17:
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload == 1)
  {
    long long v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    a1[6] = a2[6];
    *(_OWORD *)((char *)a1 + 107) = *(_OWORD *)((char *)a2 + 107);
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    long long v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    long long v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    char v11 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v12 = v11[7];
    char v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      goto LABEL_6;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23)) {
        goto LABEL_13;
      }
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s19ChatResolutionErrorOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_3BDE0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for RCSServiceSession.ChatResolutionError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v17 = a2[5];
      a1[4] = a2[4];
      a1[5] = v17;
      a1[6] = a2[6];
      *(_OWORD *)((char *)a1 + 107) = *(_OWORD *)((char *)a2 + 107);
      long long v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      long long v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      long long v20 = a2[9];
      a1[8] = a2[8];
      a1[9] = v20;
      char v11 = (int *)type metadata accessor for RCSMessage(0);
      uint64_t v21 = v11[7];
      char v13 = (void *)((char *)a1 + v21);
      uint64_t v14 = (void *)((char *)a2 + v21);
      uint64_t v15 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
LABEL_7:
        uint64_t v22 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v13, v14, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_19:
        uint64_t v42 = v11[8];
        uint64_t v43 = (char *)a1 + v42;
        uint64_t v44 = (char *)a2 + v42;
        long long v45 = *((_OWORD *)v44 + 1);
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v45;
        *((void *)v43 + 4) = *((void *)v44 + 4);
        *(void *)((char *)a1 + v11[9]) = *(void *)((char *)a2 + v11[9]);
        *((unsigned char *)a1 + v11[10]) = *((unsigned char *)a2 + v11[10]);
        *((unsigned char *)a1 + v11[11]) = *((unsigned char *)a2 + v11[11]);
        *(void *)((char *)a1 + v11[12]) = *(void *)((char *)a2 + v11[12]);
        uint64_t v46 = v11[13];
        uint64_t v47 = (_OWORD *)((char *)a1 + v46);
        uint64_t v48 = (_OWORD *)((char *)a2 + v46);
        long long v49 = v48[1];
        *uint64_t v47 = *v48;
        v47[1] = v49;
        uint64_t v50 = sub_551C(&qword_1282D8);
        *(_OWORD *)((char *)a1 + *(int *)(v50 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v50 + 48));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v23 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23))
        {
LABEL_14:
          uint64_t v25 = sub_551C(&qword_1283F0);
          memcpy(v13, v14, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_17:
          uint64_t v30 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v31 = (char *)v13 + v30;
          uint64_t v60 = v13;
          uint64_t v32 = (char *)v14 + v30;
          *(void *)uint64_t v31 = *(void *)((char *)v14 + v30);
          *(_OWORD *)(v31 + 8) = *(_OWORD *)((char *)v14 + v30 + 8);
          *(_OWORD *)(v31 + 24) = *(_OWORD *)((char *)v14 + v30 + 24);
          uint64_t v33 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v34 = v33[7];
          uint64_t v52 = &v32[v34];
          uint64_t v56 = &v31[v34];
          uint64_t v35 = sub_F6DC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v56, v52, v35);
          uint64_t v36 = v33[8];
          uint64_t v53 = &v32[v36];
          uint64_t v57 = &v31[v36];
          uint64_t v37 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v57, v53, v37);
          v31[v33[9]] = v32[v33[9]];
          uint64_t v38 = v33[10];
          uint64_t v39 = &v31[v38];
          uint64_t v40 = &v32[v38];
          char v13 = v60;
          v39[8] = v40[8];
          *(void *)uint64_t v39 = *(void *)v40;
          uint64_t v41 = sub_551C(&qword_128218);
          *(void *)((char *)v60 + *(int *)(v41 + 48)) = *(void *)((char *)v14 + *(int *)(v41 + 48));
          swift_storeEnumTagMultiPayload();
          goto LABEL_18;
        }
LABEL_16:
        *char v13 = *v14;
        *(_OWORD *)(v13 + 1) = *(_OWORD *)(v14 + 1);
        uint64_t v26 = *(int *)(v23 + 24);
        uint64_t v54 = (char *)v14 + v26;
        uint64_t v58 = (char *)v13 + v26;
        uint64_t v27 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v58, v54, v27);
        uint64_t v28 = *(int *)(v23 + 28);
        uint64_t v55 = (char *)v14 + v28;
        uint64_t v59 = (char *)v13 + v28;
        uint64_t v29 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v59, v55, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
        goto LABEL_17;
      }
LABEL_15:
      memcpy(v13, v14, *(void *)(v16 + 64));
LABEL_18:
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_19;
    }
    if (EnumCaseMultiPayload == 1)
    {
      long long v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      a1[6] = a2[6];
      *(_OWORD *)((char *)a1 + 107) = *(_OWORD *)((char *)a2 + 107);
      long long v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      long long v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      long long v10 = a2[9];
      a1[8] = a2[8];
      a1[9] = v10;
      char v11 = (int *)type metadata accessor for RCSMessage(0);
      uint64_t v12 = v11[7];
      char v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (void *)((char *)a2 + v12);
      uint64_t v15 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
        goto LABEL_7;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v23 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23)) {
          goto LABEL_14;
        }
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSMessage.Content(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for RCSMessage.Content(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_3D070()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_3D080()
{
  uint64_t v4 = &unk_F92C8;
  uint64_t result = type metadata accessor for RCSMessage(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    char v5 = &v3;
    swift_getTupleTypeLayout2();
    char v6 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_3D150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_3D2AC()
{
  uint64_t v1 = type metadata accessor for RCSMessage(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_551C(&qword_1284C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);

  uint64_t v9 = (char *)v0 + v3;
  uint64_t v29 = v8;
  uint64_t v30 = v4;
  if (*((unsigned char *)v0 + v3 + 122))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9[121])
    {
      uint64_t v10 = (uint64_t)(v9 + 64);
LABEL_6:
      sub_6BEC(v10);
      goto LABEL_8;
    }
  }
  else if (v9[57])
  {
    uint64_t v10 = (uint64_t)v0 + v3;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = &v9[*(int *)(v1 + 28)];
  uint64_t v12 = type metadata accessor for RCSMessage.Content(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      case 1u:
        uint64_t v13 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13))
        {
          swift_bridgeObjectRelease();
          uint64_t v27 = &v11[*(int *)(v13 + 24)];
          uint64_t v14 = sub_F6DC0();
          (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v27, v14);
          uint64_t v15 = &v11[*(int *)(v13 + 28)];
          uint64_t v16 = sub_F6EE0();
          (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
        }
        long long v17 = &v11[*(int *)(type metadata accessor for RCSFile(0) + 20)];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v26 = &v17[*(int *)(v18 + 28)];
        uint64_t v28 = v18;
        uint64_t v19 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v26, v19);
        long long v20 = &v17[*(int *)(v28 + 32)];
        uint64_t v21 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
        sub_551C(&qword_128218);
        goto LABEL_14;
      case 3u:
        sub_6BEC((uint64_t)v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)v11 + 9))
        {
          swift_bridgeObjectRelease();
          sub_2852C(*((void *)v11 + 10), *((void *)v11 + 11));
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
      case 6u:
      case 7u:
LABEL_14:
        swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v22 = (uint64_t)&v9[*(int *)(v1 + 32)];
  if (*(void *)(v22 + 24)) {
    sub_6BEC(v22);
  }
  uint64_t v23 = v2 | v7 | 7;
  unint64_t v24 = (((((v30 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v0 + v24, v5);

  return _swift_deallocObject(v0, v24 + v29, v23);
}

void sub_3D7BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_551C(&qword_1284C0);
  sub_33B04(a1, a2, a3, a4, v4[2], v4[3], v4[4], (char *)v4 + v10, *(uint64_t *)((char *)v4 + v11), *(unint64_t *)((char *)v4 + v11 + 8));
}

uint64_t sub_3D8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_3D8F8()
{
  return swift_release();
}

unint64_t sub_3D900()
{
  unint64_t result = qword_1284E0;
  if (!qword_1284E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1284E0);
  }
  return result;
}

id sub_3D95C(void *a1)
{
  uint64_t v2 = v1;
  id v3 = a1;
  id v4 = [a1 labelID];
  if (!v4)
  {
    sub_3DC04();
    swift_allocError();
    void *v15 = v3;
    id v16 = v3;
LABEL_10:
    swift_willThrow();
    return v3;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_F7220();
  uint64_t v8 = v7;

  uint64_t v9 = *(void *)&v2[OBJC_IVAR___RCSServiceSession_state];
  uint64_t v10 = *(void *)(v9 + 24);
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1C9BC(v6, v8);
    if (v12)
    {
      id v13 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v13;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  long long v17 = *(void **)(v9 + 16);
  id v29 = 0;
  id v18 = [v17 _getSystemConfiguration:v3 withError:&v29];
  id v19 = v29;
  if (!v18)
  {
    id v28 = v29;
    swift_bridgeObjectRelease();
    sub_F6D30();

    goto LABEL_10;
  }
  long long v20 = v18;
  uint64_t v21 = *(void **)(v9 + 24);
  swift_bridgeObjectRetain();
  id v22 = v19;
  id v3 = v20;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v29 = v21;
  sub_1CBE0((uint64_t)v3, v6, v8, isUniquelyReferenced_nonNull_native);
  id v24 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 24) = v24;
  swift_bridgeObjectRelease();
  id v25 = [v2 account];
  uint64_t v26 = sub_3DE5C();
  sub_1BC40(v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)sub_F71A0();
  swift_bridgeObjectRelease();
  [v25 writeAccountDefaults:v27];
  swift_bridgeObjectRelease();

  return v3;
}

unint64_t sub_3DC04()
{
  unint64_t result = qword_128510;
  if (!qword_128510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128510);
  }
  return result;
}

void sub_3DC58()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___RCSServiceSession_state) + 24);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_23:
    id v13 = *(id *)(*(void *)(v1 + 56) + 8 * v9);
    id v14 = [v13 operationStatus];
    if (v14)
    {
      uint64_t v15 = v14;
      id v16 = (char *)[v14 registrationState];

      if (v16)
      {
        if (v16 == (unsigned char *)&dword_0 + 1)
        {
          uint64_t v17 = 5;
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t v17 = v18;
        if (v18 <= 4) {
          uint64_t v17 = 4;
        }
LABEL_29:
        unint64_t v18 = v17;
      }
    }
    else
    {
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v10 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v6) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11)
  {
LABEL_22:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_23;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v6)
  {
LABEL_30:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_32:
  __break(1u);
}

void *sub_3DE38(void *a1)
{
  return sub_C2BC(a1);
}

uint64_t sub_3DE5C()
{
  uint64_t v195 = sub_F70F0();
  uint64_t v1 = *(void *)(v195 - 8);
  __chkstk_darwin(v195 - 8);
  v196 = (char *)&v171 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (void *)sub_4B108((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = (void *)sub_4B108((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v172 = *(void *)&v0[OBJC_IVAR___RCSServiceSession_state];
  id v173 = v0;
  uint64_t v5 = *(void *)(v172 + 24);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v174 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v178 = v8 & v6;
  int64_t v175 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v176 = v5;
  v193 = (void *)(v1 + 8);
  *(void *)&long long v194 = v1 + 16;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int64_t v11 = 0;
  uint64_t v185 = 0;
  *(void *)&long long v12 = 136315394;
  long long v191 = v12;
  v190 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v178)
    {
      unint64_t v13 = __clz(__rbit64(v178));
      int64_t v177 = v11;
      v178 &= v178 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_19;
    }
    BOOL v15 = __OFADD__(v11, 1);
    int64_t v16 = v11 + 1;
    if (v15) {
      goto LABEL_128;
    }
    if (v16 >= v175) {
      goto LABEL_106;
    }
    unint64_t v17 = *(void *)(v174 + 8 * v16);
    if (!v17) {
      break;
    }
LABEL_18:
    int64_t v177 = v16;
    unint64_t v178 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
LABEL_19:
    uint64_t v19 = *(void *)(v176 + 56);
    long long v20 = (uint64_t *)(*(void *)(v176 + 48) + 16 * v14);
    uint64_t v21 = v20[1];
    uint64_t v183 = *v20;
    id v22 = *(void **)(v19 + 8 * v14);
    uint64_t v189 = v21;
    swift_bridgeObjectRetain();
    uint64_t v184 = v22;
    uint64_t v23 = (char *)_swiftEmptyArrayStorage;
    if (!sub_CECC(v184))
    {
      uint64_t v24 = v10;
      uint64_t v25 = sub_F7220();
      uint64_t v27 = v26;
      id v28 = sub_350A4(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v30 = *((void *)v28 + 2);
      unint64_t v29 = *((void *)v28 + 3);
      uint64_t v31 = v28;
      if (v30 >= v29 >> 1) {
        uint64_t v31 = sub_350A4((char *)(v29 > 1), v30 + 1, 1, v28);
      }
      *((void *)v31 + 2) = v30 + 1;
      uint64_t v23 = v31;
      uint64_t v32 = &v31[16 * v30];
      *((void *)v32 + 4) = v25;
      *((void *)v32 + 5) = v27;
      uint64_t v10 = v24;
    }
    uint64_t v33 = v184;
    if ((sub_C8E0(v184, 45) & 1) == 0 && (sub_C8E0(v33, 45) & 1) == 0)
    {
      uint64_t v34 = v10;
      uint64_t v35 = sub_F7220();
      uint64_t v37 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = sub_350A4(0, *((void *)v23 + 2) + 1, 1, v23);
      }
      unint64_t v39 = *((void *)v23 + 2);
      unint64_t v38 = *((void *)v23 + 3);
      uint64_t v40 = v23;
      if (v39 >= v38 >> 1) {
        uint64_t v40 = sub_350A4((char *)(v38 > 1), v39 + 1, 1, v23);
      }
      *((void *)v40 + 2) = v39 + 1;
      uint64_t v23 = v40;
      uint64_t v41 = &v40[16 * v39];
      *((void *)v41 + 4) = v35;
      *((void *)v41 + 5) = v37;
      uint64_t v10 = v34;
    }
    uint64_t v182 = *((void *)v23 + 2);
    if (v182)
    {
      unint64_t v42 = 0;
      uint64_t v180 = v23;
      long long v181 = v23 + 32;
      while (1)
      {
        if (v42 >= *((void *)v23 + 2))
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
          goto LABEL_126;
        }
        uint64_t v188 = v10;
        uint64_t v43 = &v181[16 * v42];
        uint64_t v44 = *(uint64_t **)v43;
        uint64_t v45 = *((void *)v43 + 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_43254(v9);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v200 = v44;
        v201 = v4;
        unint64_t v48 = sub_1C9BC((uint64_t)v44, v45);
        uint64_t v49 = v4[2];
        BOOL v50 = (v47 & 1) == 0;
        uint64_t v51 = v49 + v50;
        if (__OFADD__(v49, v50)) {
          goto LABEL_124;
        }
        char v52 = v47;
        if (v4[3] >= v51)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_42738();
          }
        }
        else
        {
          sub_40C80(v51, isUniquelyReferenced_nonNull_native);
          unint64_t v53 = sub_1C9BC((uint64_t)v200, v45);
          if ((v52 & 1) != (v54 & 1)) {
            goto LABEL_130;
          }
          unint64_t v48 = v53;
        }
        uint64_t v55 = v201;
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          v55[(v48 >> 6) + 8] |= 1 << v48;
          uint64_t v56 = (uint64_t **)(v55[6] + 16 * v48);
          char *v56 = v200;
          v56[1] = (uint64_t *)v45;
          *(void *)(v55[7] + 8 * v48) = _swiftEmptyArrayStorage;
          uint64_t v57 = v55[2];
          uint64_t v58 = v57 + 1;
          BOOL v59 = __OFADD__(v57, 1);
          swift_bridgeObjectRetain();
          if (v59) {
            goto LABEL_125;
          }
          v55[2] = v58;
        }
        unint64_t v186 = v42;
        swift_bridgeObjectRetain();
        uint64_t v60 = v55[7];
        swift_bridgeObjectRelease();
        uint64_t v61 = *(char **)(v60 + 8 * v48);
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v60 + 8 * v48) = v61;
        v187 = v55;
        if ((v62 & 1) == 0)
        {
          uint64_t v61 = sub_350A4(0, *((void *)v61 + 2) + 1, 1, v61);
          *(void *)(v60 + 8 * v48) = v61;
        }
        unint64_t v64 = *((void *)v61 + 2);
        unint64_t v63 = *((void *)v61 + 3);
        if (v64 >= v63 >> 1)
        {
          uint64_t v61 = sub_350A4((char *)(v63 > 1), v64 + 1, 1, v61);
          *(void *)(v60 + 8 * v48) = v61;
        }
        uint64_t v65 = v195;
        *((void *)v61 + 2) = v64 + 1;
        uint64_t v66 = &v61[16 * v64];
        uint64_t v67 = v189;
        *((void *)v66 + 4) = v183;
        *((void *)v66 + 5) = v67;
        swift_bridgeObjectRelease();
        id v68 = [v184 identity];
        uint64_t v198 = v45;
        if (v68)
        {
          uint64_t v69 = v68;
          id v70 = [v68 impus];

          uint64_t v71 = sub_F7410();
          uint64_t v72 = *(void *)(v71 + 16);
          if (v72)
          {
            swift_bridgeObjectRetain();
            uint64_t v179 = v71;
            uint64_t v73 = (void **)(v71 + 40);
            uint64_t v74 = (char *)_swiftEmptyArrayStorage;
            v197 = v3;
            do
            {
              uint64_t v199 = (uint64_t)v74;
              uint64_t v77 = (uint64_t)*(v73 - 1);
              long long v76 = *v73;
              swift_bridgeObjectRetain_n();
              v78._uint64_t countAndFlagsBits = v77;
              v78._object = v76;
              RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v205, v78, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
              if (v75)
              {
                uint64_t v79 = Logger.rcs.unsafeMutableAddressor();
                uint64_t v80 = v196;
                (*(void (**)(char *, uint64_t, uint64_t))v194)(v196, v79, v65);
                swift_bridgeObjectRetain();
                swift_errorRetain();
                swift_bridgeObjectRetain();
                swift_errorRetain();
                uint64_t v81 = sub_F70D0();
                os_log_type_t v82 = sub_F76A0();
                if (os_log_type_enabled(v81, v82))
                {
                  uint64_t v83 = swift_slowAlloc();
                  uint64_t v84 = (void *)swift_slowAlloc();
                  v192 = (void *)swift_slowAlloc();
                  v201 = v192;
                  *(_DWORD *)uint64_t v83 = v191;
                  swift_bridgeObjectRetain();
                  *(void *)(v83 + 4) = sub_A3FC(v77, (unint64_t)v76, (uint64_t *)&v201);
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v83 + 12) = 2112;
                  swift_errorRetain();
                  uint64_t v85 = _swift_stdlib_bridgeErrorToNSError();
                  *(void *)(v83 + 14) = v85;
                  *uint64_t v84 = v85;
                  swift_errorRelease();
                  swift_errorRelease();
                  _os_log_impl(&dword_0, v81, v82, "failed to parse self-URI %s into RCSHandle: %@", (uint8_t *)v83, 0x16u);
                  sub_551C(&qword_128C10);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  swift_errorRelease();
                  uint64_t v65 = v195;
                  ((void (*)(char *, uint64_t))*v193)(v196, v195);
                }
                else
                {
                  swift_errorRelease();
                  swift_bridgeObjectRelease_n();
                  swift_errorRelease();
                  swift_errorRelease();

                  ((void (*)(char *, uint64_t))*v193)(v80, v65);
                }
                swift_bridgeObjectRelease();
                uint64_t v75 = 0;
                uint64_t v3 = v197;
                uint64_t v74 = (char *)v199;
              }
              else
              {
                uint64_t countAndFlagsBits = v205.id._countAndFlagsBits;
                object = v205.id._object;
                swift_bridgeObjectRetain();
                sub_6D20((uint64_t)&v205);
                swift_bridgeObjectRelease();
                uint64_t v74 = (char *)v199;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v74 = sub_350A4(0, *((void *)v74 + 2) + 1, 1, v74);
                }
                uint64_t v3 = v197;
                unint64_t v89 = *((void *)v74 + 2);
                unint64_t v88 = *((void *)v74 + 3);
                if (v89 >= v88 >> 1) {
                  uint64_t v74 = sub_350A4((char *)(v88 > 1), v89 + 1, 1, v74);
                }
                *((void *)v74 + 2) = v89 + 1;
                uint64_t v90 = &v74[16 * v89];
                *((void *)v90 + 4) = countAndFlagsBits;
                *((void *)v90 + 5) = object;
                uint64_t v65 = v195;
              }
              v73 += 2;
              --v72;
            }
            while (v72);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v74 = (char *)_swiftEmptyArrayStorage;
            uint64_t v75 = v185;
          }
          swift_bridgeObjectRelease();
          uint64_t v92 = *((void *)v74 + 2);
          uint64_t v185 = v75;
          if (v92)
          {
            uint64_t v93 = (uint64_t *)(v74 + 40);
            uint64_t v91 = _swiftEmptyArrayStorage;
            do
            {
              uint64_t v94 = (uint64_t)v91;
              uint64_t v96 = *(v93 - 1);
              uint64_t v95 = *v93;
              swift_bridgeObjectRetain();
              uint64_t v97 = (void *)sub_F71F0();
              int IsPhoneNumber = IMStringIsPhoneNumber();

              if (IsPhoneNumber)
              {
                uint64_t v91 = (void *)v94;
                char v99 = swift_isUniquelyReferenced_nonNull_native();
                v201 = (void *)v94;
                if ((v99 & 1) == 0)
                {
                  sub_4FE88(0, *(void *)(v94 + 16) + 1, 1);
                  uint64_t v91 = v201;
                }
                unint64_t v101 = v91[2];
                unint64_t v100 = v91[3];
                if (v101 >= v100 >> 1)
                {
                  sub_4FE88(v100 > 1, v101 + 1, 1);
                  uint64_t v91 = v201;
                }
                uint64_t v91[2] = v101 + 1;
                uint64_t v102 = &v91[2 * v101];
                v102[4] = v96;
                v102[5] = v95;
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v91 = (void *)v94;
              }
              v93 += 2;
              --v92;
            }
            while (v92);
          }
          else
          {
            uint64_t v91 = _swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRelease();
          uint64_t v45 = v198;
        }
        else
        {
          uint64_t v91 = _swiftEmptyArrayStorage;
        }
        uint64_t v103 = v91[2];
        uint64_t v10 = v188;
        v192 = v91;
        if (v103) {
          break;
        }
LABEL_32:
        unint64_t v42 = v186 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = (uint64_t)sub_3EFC0;
        uint64_t v4 = v187;
        uint64_t v23 = v180;
        if (v42 == v182)
        {

          swift_bridgeObjectRelease();
          uint64_t v9 = (uint64_t)sub_3EFC0;
          goto LABEL_5;
        }
      }
      uint64_t v4 = v91 + 5;
      while (1)
      {
        uint64_t v104 = *v4;
        uint64_t v199 = *(v4 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_43254(v10);
        uint64_t v9 = swift_isUniquelyReferenced_nonNull_native();
        v201 = v3;
        unint64_t v106 = sub_1C9BC((uint64_t)v200, v45);
        uint64_t v107 = v3[2];
        BOOL v108 = (v105 & 1) == 0;
        uint64_t v109 = v107 + v108;
        if (__OFADD__(v107, v108)) {
          break;
        }
        char v110 = v105;
        if (v3[3] >= v109)
        {
          if ((v9 & 1) == 0) {
            sub_42738();
          }
        }
        else
        {
          sub_40C80(v109, v9);
          unint64_t v111 = sub_1C9BC((uint64_t)v200, v45);
          if ((v110 & 1) != (v112 & 1)) {
            goto LABEL_130;
          }
          unint64_t v106 = v111;
        }
        uint64_t v3 = v201;
        swift_bridgeObjectRelease();
        if ((v110 & 1) == 0)
        {
          v3[(v106 >> 6) + 8] |= 1 << v106;
          uint64_t v113 = (uint64_t **)(v3[6] + 16 * v106);
          *uint64_t v113 = v200;
          v113[1] = (uint64_t *)v45;
          *(void *)(v3[7] + 8 * v106) = _swiftEmptyArrayStorage;
          uint64_t v114 = v3[2];
          uint64_t v115 = v114 + 1;
          uint64_t v10 = __OFADD__(v114, 1);
          swift_bridgeObjectRetain();
          if (v10) {
            goto LABEL_105;
          }
          v3[2] = v115;
        }
        swift_bridgeObjectRetain();
        uint64_t v116 = v3[7];
        swift_bridgeObjectRelease();
        long long v117 = *(char **)(v116 + 8 * v106);
        char v118 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v116 + 8 * v106) = v117;
        uint64_t v119 = v3;
        if ((v118 & 1) == 0)
        {
          long long v117 = sub_350A4(0, *((void *)v117 + 2) + 1, 1, v117);
          *(void *)(v116 + 8 * v106) = v117;
        }
        unint64_t v121 = *((void *)v117 + 2);
        unint64_t v120 = *((void *)v117 + 3);
        if (v121 >= v120 >> 1)
        {
          long long v117 = sub_350A4((char *)(v120 > 1), v121 + 1, 1, v117);
          *(void *)(v116 + 8 * v106) = v117;
        }
        v4 += 2;
        *((void *)v117 + 2) = v121 + 1;
        v122 = &v117[16 * v121];
        uint64_t v123 = v198;
        *((void *)v122 + 4) = v199;
        *((void *)v122 + 5) = v104;
        swift_bridgeObjectRelease();
        uint64_t v10 = (uint64_t)sub_3EFC0;
        --v103;
        uint64_t v3 = v119;
        uint64_t v45 = v123;
        if (!v103) {
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      uint64_t v188 = v10;
      swift_release();
      uint64_t v199 = sub_551C(&qword_128538);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_F9300;
      *(void *)(inited + 32) = sub_F7220();
      *(void *)(inited + 40) = v125;
      sub_551C(&qword_128540);
      uint64_t v126 = swift_initStackObject();
      *(_OWORD *)(v126 + 16) = xmmword_F8F20;
      *(void *)(v126 + 32) = sub_F7220();
      *(void *)(v126 + 40) = v127;
      sub_3DC58();
      *(void *)(v126 + 48) = v128;
      unint64_t v129 = sub_4B224(v126);
      *(void *)(inited + 72) = sub_551C(&qword_128548);
      *(void *)(inited + 48) = v129;
      *(void *)(inited + 80) = sub_F7220();
      *(void *)(inited + 88) = v130;
      id v131 = [self IMPhoneNumbersEnabledForMultipleSubscriptionDevice];
      v192 = (void *)v9;
      if (v131)
      {
        uint64_t v132 = v131;
        uint64_t v133 = (void *)sub_F7410();
      }
      else
      {
        uint64_t v133 = _swiftEmptyArrayStorage;
      }
      *(void *)(inited + 120) = sub_551C(&qword_128550);
      *(void *)(inited + 96) = v133;
      *(void *)(inited + 128) = sub_F7220();
      *(void *)(inited + 136) = v134;
      v193 = (void *)inited;
      uint64_t v135 = swift_bridgeObjectRetain();
      uint64_t v136 = sub_52EC0(v135);
      swift_bridgeObjectRelease();
      id v137 = v173;
      uint64_t v138 = sub_51168(v136, v137);

      swift_release();
      int64_t v139 = v138[2];
      if (!v139)
      {
        swift_bridgeObjectRelease();
        uint64_t v161 = _swiftEmptyArrayStorage;
LABEL_122:
        uint64_t v164 = sub_551C(&qword_128560);
        uint64_t v165 = v193;
        v193[21] = v164;
        v165[18] = v161;
        v165[22] = sub_F7220();
        v165[23] = v166;
        uint64_t v167 = sub_551C(&qword_128568);
        v165[27] = v167;
        v165[24] = v3;
        v165[28] = sub_F7220();
        v165[29] = v168;
        v165[33] = v167;
        v165[30] = v4;
        unint64_t v169 = sub_4B338((uint64_t)v165);
        sub_43254((uint64_t)v192);
        sub_43254(v188);
        return v169;
      }
      v187 = v4;
      v204 = _swiftEmptyArrayStorage;
      sub_4FEA8(0, v139, 0);
      uint64_t v198 = sub_551C(&qword_128278);
      v196 = (char *)kFZServiceDefaultsAliasKey;
      uint64_t v195 = kFZServiceDefaultsAliasStatusKey;
      v200 = &v203;
      *(void *)&long long v191 = v138;
      uint64_t v140 = v138 + 5;
      long long v194 = xmmword_F8F10;
      v197 = v3;
      while (1)
      {
        uint64_t v141 = *(v140 - 1);
        uint64_t v142 = *v140;
        uint64_t v143 = swift_initStackObject();
        *(_OWORD *)(v143 + 16) = v194;
        *(void *)(v143 + 32) = sub_F7220();
        *(void *)(v143 + 72) = &type metadata for String;
        *(void *)(v143 + 40) = v144;
        *(void *)(v143 + 48) = v141;
        *(void *)(v143 + 56) = v142;
        *(void *)(v143 + 80) = sub_F7220();
        *(void *)(v143 + 120) = &type metadata for Int;
        *(void *)(v143 + 88) = v145;
        *(void *)(v143 + 96) = 3;
        os_log_t v146 = (void *)sub_F79E0();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_43264(v143 + 32, (uint64_t)&v201);
        uint64_t v148 = (uint64_t)v201;
        uint64_t v147 = v202;
        unint64_t v149 = sub_1C9BC((uint64_t)v201, v202);
        if (v150) {
          break;
        }
        *(void *)((char *)v146 + ((v149 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v149;
        int v151 = (uint64_t *)(v146[6] + 16 * v149);
        *int v151 = v148;
        v151[1] = v147;
        sub_1EBC4(v200, (_OWORD *)(v146[7] + 32 * v149));
        uint64_t v152 = v146[2];
        BOOL v15 = __OFADD__(v152, 1);
        uint64_t v153 = v152 + 1;
        if (v15) {
          goto LABEL_127;
        }
        v146[2] = v153;
        sub_43264(v143 + 80, (uint64_t)&v201);
        uint64_t v154 = (uint64_t)v201;
        uint64_t v155 = v202;
        unint64_t v156 = sub_1C9BC((uint64_t)v201, v202);
        if (v157) {
          break;
        }
        *(void *)((char *)v146 + ((v156 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v156;
        v158 = (uint64_t *)(v146[6] + 16 * v156);
        uint64_t *v158 = v154;
        v158[1] = v155;
        sub_1EBC4(v200, (_OWORD *)(v146[7] + 32 * v156));
        uint64_t v159 = v146[2];
        BOOL v15 = __OFADD__(v159, 1);
        uint64_t v160 = v159 + 1;
        if (v15) {
          goto LABEL_127;
        }
        v146[2] = v160;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v161 = v204;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_4FEA8(0, v161[2] + 1, 1);
          uint64_t v161 = v204;
        }
        uint64_t v3 = v197;
        unint64_t v163 = v161[2];
        unint64_t v162 = v161[3];
        if (v163 >= v162 >> 1)
        {
          sub_4FEA8(v162 > 1, v163 + 1, 1);
          uint64_t v161 = v204;
        }
        v140 += 2;
        v161[2] = v163 + 1;
        v161[v163 + 4] = v146;
        if (!--v139)
        {
          swift_bridgeObjectRelease();
          uint64_t v4 = v187;
          goto LABEL_122;
        }
      }
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
      goto LABEL_129;
    }

    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    int64_t v11 = v177;
  }
  int64_t v18 = v16 + 1;
  if (v16 + 1 >= v175) {
    goto LABEL_106;
  }
  unint64_t v17 = *(void *)(v174 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v175) {
    goto LABEL_106;
  }
  unint64_t v17 = *(void *)(v174 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v16 + 3;
  if (v16 + 3 >= v175) {
    goto LABEL_106;
  }
  unint64_t v17 = *(void *)(v174 + 8 * v18);
  if (v17)
  {
LABEL_17:
    int64_t v16 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v175) {
      goto LABEL_106;
    }
    unint64_t v17 = *(void *)(v174 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_129:
  __break(1u);
LABEL_130:
  uint64_t result = sub_F7BA0();
  __break(1u);
  return result;
}

void sub_3EFC0(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

void *sub_3EFD0()
{
  uint64_t v1 = sub_F70F0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony()) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = *(void **)(*(void *)(v0 + OBJC_IVAR___RCSServiceSession_state) + 16);
  id v20 = 0;
  id v6 = [v5 getSubscriptionInfoWithError:&v20];
  if (!v6)
  {
    id v12 = v20;
    sub_F6D30();

    swift_willThrow();
    uint64_t v13 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v13, v1);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v14 = sub_F70D0();
    os_log_type_t v15 = sub_F76A0();
    if (os_log_type_enabled(v14, v15))
    {
      int64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)int64_t v16 = 138412290;
      swift_errorRetain();
      unint64_t v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v20 = v17;
      sub_F77B0();
      *uint64_t v19 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v14, v15, "Error reading subscription info: %@", v16, 0xCu);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v7 = v6;
  id v8 = v20;
  id v9 = [v7 subscriptions];
  if (!v9)
  {

    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9;
  sub_424CC();
  uint64_t v11 = sub_F7410();

  return (void *)v11;
}

uint64_t sub_3F2F0()
{
  uint64_t v0 = sub_F70F0();
  uint64_t v98 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v1);
  id v6 = (char *)&v93 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  id v9 = (char *)&v93 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v93 - v10;
  *(void *)&long long v105 = sub_551C(&qword_127C70);
  uint64_t v12 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = os_variant_has_internal_ui();
  if (!result) {
    return result;
  }
  uint64_t v102 = swift_allocObject();
  *(void *)(v102 + 16) = 0;
  if (qword_127B50 != -1) {
    swift_once();
  }
  uint64_t v15 = v105;
  uint64_t v16 = sub_8B44(v105, (uint64_t)qword_127DA8);
  uint64_t v17 = v12;
  uint64_t v18 = v12 + 16;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  id v20 = v104;
  uint64_t v96 = v18;
  uint64_t v95 = v19;
  v19(v104, v16, v15);
  sub_F6FF0();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v97 = v17 + 8;
  uint64_t v94 = v21;
  v21(v20, v15);
  uint64_t v109 = v0;
  char v110 = v3;
  long long v117 = v9;
  if (v118 == 1)
  {
    unint64_t v22 = (unint64_t)sub_400C8(v102);
    unint64_t v24 = v22;
    if (v22 >> 62)
    {
      uint64_t v25 = sub_F79B0();
      if (v25) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
      if (v25)
      {
LABEL_7:
        if (v25 < 1)
        {
          __break(1u);
          goto LABEL_58;
        }
        uint64_t v26 = 0;
        unint64_t v27 = *(void *)(v103 + OBJC_IVAR___RCSServiceSession_state);
        uint64_t v114 = (void (**)(char *, uint64_t, uint64_t))(v24 & 0xC000000000000001);
        unint64_t v115 = v27;
        char v112 = (void (**)(char *, uint64_t))(v98 + 8);
        uint64_t v113 = (void (**)(char *, uint64_t, uint64_t))(v98 + 16);
        *(void *)&long long v23 = 136315138;
        long long v101 = v23;
        unint64_t v100 = (char *)&type metadata for Any + 8;
        *(void *)&long long v23 = 136315394;
        long long v99 = v23;
        BOOL v108 = v6;
        *(void *)&long long v107 = v11;
        unint64_t v111 = v24;
        uint64_t v116 = v25;
        do
        {
          if (v114) {
            id v28 = (id)sub_F78D0();
          }
          else {
            id v28 = *(id *)(v24 + 8 * v26 + 32);
          }
          unint64_t v29 = v28;
          unint64_t v30 = *(void **)(v115 + 16);
          id v118 = 0;
          if ([v30 enableLazuli:v29 withError:&v118])
          {
            id v31 = v118;
            uint64_t v32 = Logger.rcs.unsafeMutableAddressor();
            (*v113)(v11, v32, v0);
            id v33 = v29;
            uint64_t v34 = sub_F70D0();
            os_log_type_t v35 = sub_F7670();
            if (os_log_type_enabled(v34, v35))
            {
              uint64_t v36 = swift_slowAlloc();
              id v118 = (id)swift_slowAlloc();
              *(_DWORD *)uint64_t v36 = v101;
              id v37 = [v33 labelID];
              if (v37)
              {
                unint64_t v38 = v37;
                uint64_t v39 = sub_F7220();
                unint64_t v41 = v40;
              }
              else
              {
                uint64_t v39 = 0;
                unint64_t v41 = 0xE000000000000000;
              }
              id v9 = v117;
              *(void *)(v36 + 4) = sub_A3FC(v39, v41, (uint64_t *)&v118);

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v34, v35, "Successfully enabled RCS for simID %s", (uint8_t *)v36, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v11 = (char *)v107;
              (*v112)((char *)v107, v0);
              id v6 = v108;
              unint64_t v24 = v111;
            }
            else
            {

              (*v112)(v11, v0);
            }
          }
          else
          {
            id v42 = v118;
            sub_F6D30();

            swift_willThrow();
            uint64_t v43 = Logger.rcs.unsafeMutableAddressor();
            (*v113)(v6, v43, v0);
            id v44 = v29;
            swift_errorRetain();
            id v45 = v44;
            swift_errorRetain();
            uint64_t v46 = sub_F70D0();
            os_log_type_t v47 = sub_F7690();
            if (os_log_type_enabled(v46, v47))
            {
              uint64_t v48 = swift_slowAlloc();
              uint64_t v49 = (void *)swift_slowAlloc();
              unint64_t v106 = (char *)swift_slowAlloc();
              id v118 = v106;
              *(_DWORD *)uint64_t v48 = v99;
              id v50 = [v45 labelID];
              if (v50)
              {
                uint64_t v51 = v50;
                uint64_t v52 = sub_F7220();
                unint64_t v54 = v53;
              }
              else
              {
                uint64_t v52 = 0;
                unint64_t v54 = 0xE000000000000000;
              }
              *(void *)(v48 + 4) = sub_A3FC(v52, v54, (uint64_t *)&v118);

              swift_bridgeObjectRelease();
              *(_WORD *)(v48 + 12) = 2112;
              swift_errorRetain();
              uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)(v48 + 14) = v55;
              *uint64_t v49 = v55;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl(&dword_0, v46, v47, "Error enabling RCS for simID %s: %@", (uint8_t *)v48, 0x16u);
              sub_551C(&qword_128C10);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
              id v6 = v108;
              uint64_t v0 = v109;
              (*v112)(v108, v109);
              id v9 = v117;
              uint64_t v11 = (char *)v107;
              unint64_t v24 = v111;
            }
            else
            {

              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();

              (*v112)(v6, v0);
              unint64_t v24 = v111;
            }
          }
          ++v26;
        }
        while (v116 != v26);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = v110;
  }
  if (qword_127B58 != -1) {
    swift_once();
  }
  uint64_t v56 = v105;
  uint64_t v57 = sub_8B44(v105, (uint64_t)qword_127DC0);
  uint64_t v58 = v104;
  v95(v104, v57, v56);
  sub_F6FF0();
  v94(v58, v56);
  if (v118 != 1) {
    return swift_release();
  }
  unint64_t v59 = (unint64_t)sub_400C8(v102);
  unint64_t v61 = v59;
  if (v59 >> 62)
  {
    uint64_t v62 = sub_F79B0();
    if (v62)
    {
LABEL_33:
      if (v62 >= 1)
      {
        uint64_t v63 = 0;
        uint64_t v64 = *(void *)(v103 + OBJC_IVAR___RCSServiceSession_state);
        unint64_t v115 = v61 & 0xC000000000000001;
        uint64_t v116 = v64;
        uint64_t v113 = (void (**)(char *, uint64_t, uint64_t))(v98 + 8);
        uint64_t v114 = (void (**)(char *, uint64_t, uint64_t))(v98 + 16);
        *(void *)&long long v60 = 136315138;
        long long v107 = v60;
        unint64_t v106 = (char *)&type metadata for Any + 8;
        *(void *)&long long v60 = 136315394;
        long long v105 = v60;
        unint64_t v111 = v61;
        char v112 = (void (**)(char *, uint64_t))v62;
        while (1)
        {
          if (v115) {
            id v71 = (id)sub_F78D0();
          }
          else {
            id v71 = *(id *)(v61 + 8 * v63 + 32);
          }
          uint64_t v72 = v71;
          uint64_t v73 = *(void **)(v116 + 16);
          id v118 = 0;
          if ([v73 disableLazuli:v72 withError:&v118])
          {
            id v74 = v118;
            uint64_t v75 = Logger.rcs.unsafeMutableAddressor();
            (*v114)(v9, v75, v0);
            id v76 = v72;
            uint64_t v77 = sub_F70D0();
            os_log_type_t v78 = sub_F7670();
            if (!os_log_type_enabled(v77, v78))
            {

              ((void (*)(char *, uint64_t))*v113)(v9, v0);
              goto LABEL_39;
            }
            uint64_t v65 = swift_slowAlloc();
            id v118 = (id)swift_slowAlloc();
            *(_DWORD *)uint64_t v65 = v107;
            id v66 = [v76 labelID];
            if (v66)
            {
              uint64_t v67 = v66;
              uint64_t v68 = sub_F7220();
              unint64_t v70 = v69;
            }
            else
            {
              uint64_t v68 = 0;
              unint64_t v70 = 0xE000000000000000;
            }
            *(void *)(v65 + 4) = sub_A3FC(v68, v70, (uint64_t *)&v118);

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v77, v78, "Successfully disabled RCS for simID %s", (uint8_t *)v65, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            id v9 = v117;
            ((void (*)(char *, uint64_t))*v113)(v117, v0);
            uint64_t v3 = v110;
          }
          else
          {
            id v79 = v118;
            sub_F6D30();

            swift_willThrow();
            uint64_t v80 = Logger.rcs.unsafeMutableAddressor();
            (*v114)(v3, v80, v0);
            id v81 = v72;
            swift_errorRetain();
            id v82 = v81;
            swift_errorRetain();
            uint64_t v83 = sub_F70D0();
            os_log_type_t v84 = sub_F7690();
            if (!os_log_type_enabled(v83, v84))
            {

              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();

              ((void (*)(char *, uint64_t))*v113)(v3, v0);
              uint64_t v62 = (uint64_t)v112;
              goto LABEL_39;
            }
            uint64_t v85 = swift_slowAlloc();
            long long v86 = (void *)swift_slowAlloc();
            BOOL v108 = (char *)swift_slowAlloc();
            id v118 = v108;
            *(_DWORD *)uint64_t v85 = v105;
            id v87 = [v82 labelID];
            if (v87)
            {
              unint64_t v88 = v87;
              uint64_t v89 = sub_F7220();
              unint64_t v91 = v90;
            }
            else
            {
              uint64_t v89 = 0;
              unint64_t v91 = 0xE000000000000000;
            }
            *(void *)(v85 + 4) = sub_A3FC(v89, v91, (uint64_t *)&v118);

            swift_bridgeObjectRelease();
            *(_WORD *)(v85 + 12) = 2112;
            swift_errorRetain();
            uint64_t v92 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v85 + 14) = v92;
            void *v86 = v92;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl(&dword_0, v83, v84, "Error disabling RCS for simID %s: %@", (uint8_t *)v85, 0x16u);
            sub_551C(&qword_128C10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
            uint64_t v0 = v109;
            uint64_t v3 = v110;
            ((void (*)(char *, uint64_t))*v113)(v110, v109);
            id v9 = v117;
          }
          unint64_t v61 = v111;
          uint64_t v62 = (uint64_t)v112;
LABEL_39:
          if (v62 == ++v63) {
            goto LABEL_55;
          }
        }
      }
LABEL_58:
      __break(1u);
    }
  }
  else
  {
    uint64_t v62 = *(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFFF8));
    if (v62) {
      goto LABEL_33;
    }
  }
LABEL_55:
  swift_release();
  return swift_bridgeObjectRelease();
}

void *sub_400C8(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 16);
  uint64_t v1 = *(void **)(a1 + 16);
  if (v1)
  {
    uint64_t v3 = v1;
  }
  else
  {
    uint64_t v3 = sub_3EFD0();
    swift_beginAccess();
    *uint64_t v2 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v3;
}

void sub_4014C()
{
  uint64_t isUniquelyReferenced_nonNull_native = v0;
  uint64_t v2 = (void *)sub_F70F0();
  uint64_t v3 = (char *)*(v2 - 1);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v90 - v7;
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony()) {
    return;
  }
  unint64_t v9 = (unint64_t)sub_3EFD0();
  unint64_t v11 = v9;
  if (v9 >> 62)
  {
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_F79B0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
    if (v12)
    {
LABEL_4:
      if (v12 < 1) {
        __break(1u);
      }
      uint64_t v93 = v8;
      uint64_t v98 = v6;
      long long v99 = v2;
      uint64_t v13 = 0;
      uint64_t v104 = OBJC_IVAR___RCSServiceSession_state;
      unint64_t v105 = v11 & 0xC000000000000001;
      uint64_t v96 = (void (**)(char *, void *))(v3 + 8);
      uint64_t v97 = (void (**)(char *, uint64_t, void *))(v3 + 16);
      unint64_t v14 = (char *)_swiftEmptyArrayStorage;
      *(void *)&long long v10 = 136315138;
      long long v91 = v10;
      v90[1] = (char *)&type metadata for Any + 8;
      *(void *)&long long v10 = 136315394;
      long long v92 = v10;
      uint64_t v100 = isUniquelyReferenced_nonNull_native;
      uint64_t v102 = v12;
      uint64_t v103 = (void *)v11;
      while (1)
      {
        uint64_t v15 = v105 ? (char *)sub_F78D0() : (char *)*(id *)(v11 + 8 * v13 + 32);
        uint64_t v3 = v15;
        id v16 = [v15 labelID];
        if (v16) {
          break;
        }

LABEL_7:
        if (v12 == ++v13)
        {
          swift_bridgeObjectRelease();
          if (!*((void *)v14 + 2)) {
            goto LABEL_64;
          }
LABEL_59:
          id v87 = [(id)isUniquelyReferenced_nonNull_native account];
          uint64_t v88 = sub_3DE5C();
          sub_1BC40(v88);
          swift_bridgeObjectRelease();
          uint64_t v89 = (void *)sub_F71A0();
          swift_bridgeObjectRelease();
          [v87 writeAccountDefaults:v89];
          swift_bridgeObjectRelease();

          return;
        }
      }
      uint64_t v17 = v16;
      unint64_t v106 = v14;
      uint64_t v8 = (char *)sub_F7220();
      id v6 = v18;

      unint64_t v11 = *(void *)(isUniquelyReferenced_nonNull_native + v104);
      uint64_t v19 = *(void **)(v11 + 16);
      id v107 = 0;
      id v20 = [v19 _getSystemConfiguration:v3 withError:&v107];
      if (v20)
      {
        uint64_t v21 = v20;
        unint64_t v22 = *(void **)(v11 + 24);
        id v23 = v107;
        swift_bridgeObjectRetain();
        uint64_t v2 = v21;
        swift_bridgeObjectRetain();
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v107 = v22;
        unint64_t v25 = sub_1C9BC((uint64_t)v8, (uint64_t)v6);
        uint64_t v26 = v22[2];
        BOOL v27 = (v24 & 1) == 0;
        uint64_t v28 = v26 + v27;
        if (__OFADD__(v26, v27))
        {
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        char v29 = v24;
        if (v22[3] >= v28)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_428F0();
          }
        }
        else
        {
          sub_40F98(v28, isUniquelyReferenced_nonNull_native);
          unint64_t v30 = sub_1C9BC((uint64_t)v8, (uint64_t)v6);
          if ((v29 & 1) != (v31 & 1))
          {
            sub_F7BA0();
            __break(1u);
            return;
          }
          unint64_t v25 = v30;
        }
        uint64_t isUniquelyReferenced_nonNull_native = v100;
        unint64_t v38 = v107;
        if (v29)
        {
          uint64_t v39 = *((void *)v107 + 7);
          uint64_t v40 = 8 * v25;

          *(void *)(v39 + v40) = v2;
        }
        else
        {
          *((void *)v107 + (v25 >> 6) + 8) |= 1 << v25;
          unint64_t v41 = (void *)(v38[6] + 16 * v25);
          *unint64_t v41 = v8;
          v41[1] = v6;
          *(void *)(v38[7] + 8 * v25) = v2;
          uint64_t v42 = v38[2];
          BOOL v43 = __OFADD__(v42, 1);
          uint64_t v44 = v42 + 1;
          if (v43) {
            goto LABEL_61;
          }
          _OWORD v38[2] = v44;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v11 + 24) = v38;
        swift_bridgeObjectRelease();
        unint64_t v14 = v106;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v14 = sub_350A4(0, *((void *)v14 + 2) + 1, 1, v14);
        }
        unint64_t v11 = (unint64_t)v103;
        unint64_t v46 = *((void *)v14 + 2);
        unint64_t v45 = *((void *)v14 + 3);
        if (v46 >= v45 >> 1) {
          unint64_t v14 = sub_350A4((char *)(v45 > 1), v46 + 1, 1, v14);
        }
        *((void *)v14 + 2) = v46 + 1;
        os_log_type_t v47 = &v14[16 * v46];
        *((void *)v47 + 4) = v8;
        *((void *)v47 + 5) = v6;

        goto LABEL_31;
      }
      id v32 = v107;
      sub_F6D30();

      swift_willThrow();
      id v101 = (id)sub_F6D20();
      id v33 = [v101 domain];
      uint64_t v34 = sub_F7220();
      uint64_t v36 = v35;

      if (v34 == sub_F7220() && v36 == v37)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v48 = sub_F7B60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          goto LABEL_38;
        }
      }
      if ([v101 code] == (char *)&dword_4 + 2)
      {
        uint64_t v49 = *(void **)(v11 + 24);
        swift_bridgeObjectRetain_n();
        unint64_t v50 = sub_1C9BC((uint64_t)v8, (uint64_t)v6);
        char v52 = v51;
        swift_bridgeObjectRelease();
        if (v52)
        {
          int v53 = swift_isUniquelyReferenced_nonNull_native();
          id v107 = v49;
          if (!v53)
          {
            sub_428F0();
            uint64_t v49 = v107;
          }
          swift_bridgeObjectRelease();
          unint64_t v54 = *(void **)(v49[7] + 8 * v50);
          sub_41F44(v50, (uint64_t)v49);
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v54 = 0;
        }
        *(void *)(v11 + 24) = v49;
        swift_bridgeObjectRelease();

        unint64_t v14 = v106;
        if (v54)
        {
          uint64_t v68 = Logger.rcs.unsafeMutableAddressor();
          unint64_t v69 = v93;
          unint64_t v70 = v99;
          (*v97)(v93, v68, v99);
          id v71 = v3;
          uint64_t v72 = sub_F70D0();
          os_log_type_t v73 = sub_F7690();
          BOOL v74 = os_log_type_enabled(v72, v73);
          id v95 = v71;
          if (v74)
          {
            uint64_t v75 = swift_slowAlloc();
            uint64_t v94 = (void *)swift_slowAlloc();
            id v107 = v94;
            *(_DWORD *)uint64_t v75 = v91;
            id v76 = [v71 labelID];
            if (v76)
            {
              uint64_t v77 = v76;
              uint64_t v78 = sub_F7220();
              unint64_t v80 = v79;

              id v76 = (id)v78;
            }
            else
            {
              unint64_t v80 = 0xE000000000000000;
            }
            unint64_t v11 = (unint64_t)v103;
            *(void *)(v75 + 4) = sub_A3FC((uint64_t)v76, v80, (uint64_t *)&v107);
            id v82 = v95;

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v72, v73, "RCS was disabled for %s but we weren't notified, tearing down now", (uint8_t *)v75, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*v96)(v93, v99);
            unint64_t v14 = v106;
          }
          else
          {

            (*v96)(v69, v70);
            unint64_t v11 = (unint64_t)v103;
          }
          char v83 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t isUniquelyReferenced_nonNull_native = v100;
          if ((v83 & 1) == 0) {
            unint64_t v14 = sub_350A4(0, *((void *)v14 + 2) + 1, 1, v14);
          }
          unint64_t v85 = *((void *)v14 + 2);
          unint64_t v84 = *((void *)v14 + 3);
          if (v85 >= v84 >> 1) {
            unint64_t v14 = sub_350A4((char *)(v84 > 1), v85 + 1, 1, v14);
          }
          *((void *)v14 + 2) = v85 + 1;
          long long v86 = &v14[16 * v85];
          *((void *)v86 + 4) = v8;
          *((void *)v86 + 5) = v6;

          swift_errorRelease();
        }
        else
        {

          swift_errorRelease();
          swift_bridgeObjectRelease();

          uint64_t isUniquelyReferenced_nonNull_native = v100;
          unint64_t v11 = (unint64_t)v103;
        }
        goto LABEL_31;
      }
LABEL_38:
      swift_bridgeObjectRelease();
      uint64_t v55 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v56 = v98;
      uint64_t v57 = v99;
      (*v97)(v98, v55, v99);
      uint64_t v58 = v3;
      swift_errorRetain();
      unint64_t v59 = v58;
      swift_errorRetain();
      long long v60 = sub_F70D0();
      os_log_type_t v61 = sub_F7690();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = swift_slowAlloc();
        uint64_t v94 = (void *)swift_slowAlloc();
        id v95 = (id)swift_slowAlloc();
        id v107 = v95;
        *(_DWORD *)uint64_t v62 = v92;
        id v63 = [v59 labelID];
        unint64_t v11 = (unint64_t)v103;
        if (v63)
        {
          uint64_t v64 = v63;
          uint64_t v65 = sub_F7220();
          unint64_t v67 = v66;
        }
        else
        {
          uint64_t v65 = 0;
          unint64_t v67 = 0xE000000000000000;
        }
        uint64_t isUniquelyReferenced_nonNull_native = v100;
        *(void *)(v62 + 4) = sub_A3FC(v65, v67, (uint64_t *)&v107);

        swift_bridgeObjectRelease();
        *(_WORD *)(v62 + 12) = 2112;
        swift_errorRetain();
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v62 + 14) = v81;
        *uint64_t v94 = v81;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v60, v61, "Error reloading RCS configuration for %s: %@", (uint8_t *)v62, 0x16u);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        (*v96)(v98, v99);
        unint64_t v14 = v106;
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        (*v96)(v56, v57);
        unint64_t v14 = v106;
        unint64_t v11 = (unint64_t)v103;
      }
LABEL_31:
      uint64_t v12 = v102;
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  if (_swiftEmptyArrayStorage[2]) {
    goto LABEL_59;
  }
LABEL_64:
  swift_bridgeObjectRelease();
}

uint64_t sub_40C68()
{
  return sub_F6CF0();
}

uint64_t sub_40C80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_128570);
  char v36 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_F7C20();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_40F98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_128520);
  char v38 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_F7C20();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_412A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_128278);
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1EBC4(v24, v35);
      }
      else
      {
        sub_BAD8((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_F7C20();
      sub_F72C0();
      uint64_t result = sub_F7C50();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1EBC4(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_415A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_128528);
  char v42 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_F7C20();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_418D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_128530);
  char v50 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v49 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v48 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v24 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v25 = v24 | (v13 << 6);
      }
      else
      {
        int64_t v26 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v26 >= v48) {
          goto LABEL_34;
        }
        unint64_t v27 = v49[v26];
        ++v13;
        if (!v27)
        {
          int64_t v13 = v26 + 1;
          if (v26 + 1 >= v48) {
            goto LABEL_34;
          }
          unint64_t v27 = v49[v13];
          if (!v27)
          {
            int64_t v28 = v26 + 2;
            if (v28 >= v48)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v50)
              {
                uint64_t v47 = 1 << *(unsigned char *)(v5 + 32);
                if (v47 >= 64) {
                  bzero(v49, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v49 = -1 << v47;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v27 = v49[v28];
            if (!v27)
            {
              while (1)
              {
                int64_t v13 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v48) {
                  goto LABEL_34;
                }
                unint64_t v27 = v49[v13];
                ++v28;
                if (v27) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v28;
          }
        }
LABEL_21:
        unint64_t v10 = (v27 - 1) & v27;
        unint64_t v25 = __clz(__rbit64(v27)) + (v13 << 6);
      }
      BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v25);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (long long *)(*(void *)(v5 + 56) + 160 * v25);
      if (v50)
      {
        long long v33 = v32[1];
        long long v51 = *v32;
        long long v52 = v33;
        long long v34 = v32[2];
        long long v35 = v32[3];
        long long v36 = v32[5];
        long long v55 = v32[4];
        long long v56 = v36;
        long long v53 = v34;
        long long v54 = v35;
        long long v37 = v32[6];
        long long v38 = v32[7];
        long long v39 = v32[9];
        long long v59 = v32[8];
        long long v60 = v39;
        long long v57 = v37;
        long long v58 = v38;
      }
      else
      {
        sub_2B188((uint64_t)v32, (uint64_t)&v51);
        swift_bridgeObjectRetain();
      }
      sub_F7C20();
      sub_F72C0();
      uint64_t result = sub_F7C50();
      uint64_t v40 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v41 = result & ~v40;
      unint64_t v42 = v41 >> 6;
      if (((-1 << v41) & ~*(void *)(v11 + 8 * (v41 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v41) & ~*(void *)(v11 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v43 = 0;
        unint64_t v44 = (unint64_t)(63 - v40) >> 6;
        do
        {
          if (++v42 == v44 && (v43 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v45 = v42 == v44;
          if (v42 == v44) {
            unint64_t v42 = 0;
          }
          v43 |= v45;
          uint64_t v46 = *(void *)(v11 + 8 * v42);
        }
        while (v46 == -1);
        unint64_t v14 = __clz(__rbit64(~v46)) + (v42 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v31;
      v15[1] = v30;
      unint64_t v16 = (_OWORD *)(*(void *)(v7 + 56) + 160 * v14);
      long long v17 = v52;
      *unint64_t v16 = v51;
      v16[1] = v17;
      long long v18 = v53;
      long long v19 = v54;
      long long v20 = v56;
      v16[4] = v55;
      void v16[5] = v20;
      v16[2] = v18;
      v16[3] = v19;
      long long v21 = v57;
      long long v22 = v58;
      long long v23 = v60;
      unsigned __int8 v16[8] = v59;
      v16[9] = v23;
      v16[6] = v21;
      void v16[7] = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_41C2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C((uint64_t *)&unk_128130);
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    long long v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1EBC4((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1EBD4(v25, (uint64_t)&v38);
      sub_BAD8(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_F7840(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1EBC4(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  long long v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_41F44(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_F7C20();
        swift_bridgeObjectRetain();
        sub_F72C0();
        Swift::Int v9 = sub_F7C50();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    long long v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *long long v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_4211C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_F7C20();
        swift_bridgeObjectRetain();
        sub_F72C0();
        Swift::Int v9 = sub_F7C50();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 160 * v3;
          unint64_t v15 = (const void *)(v14 + 160 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 160))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0xA0uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_42300(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1EBD4(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        Swift::Int v10 = sub_F7840(*(void *)(a2 + 40));
        uint64_t result = sub_1EC30((uint64_t)v28);
        Swift::Int v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            BOOL v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *BOOL v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_424CC()
{
  unint64_t result = qword_128518;
  if (!qword_128518)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_128518);
  }
  return result;
}

uint64_t sub_4250C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_42544(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

_OWORD *sub_4258C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_1EBC4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_425F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_42648(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = (_OWORD *)(a5[7] + 160 * result);
  long long v7 = a4[5];
  v6[4] = a4[4];
  v6[5] = v7;
  long long v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  long long v9 = a4[9];
  v6[8] = a4[8];
  v6[9] = v9;
  long long v10 = a4[7];
  v6[6] = a4[6];
  v6[7] = v10;
  long long v11 = a4[1];
  *uint64_t v6 = *a4;
  v6[1] = v11;
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_426BC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  unint64_t result = sub_1EBC4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void *sub_42738()
{
  uint64_t v1 = v0;
  sub_551C(&qword_128570);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_428F0()
{
  uint64_t v1 = v0;
  sub_551C(&qword_128520);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_42AA4()
{
  uint64_t v1 = v0;
  sub_551C(&qword_128278);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_BAD8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1EBC4(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_42C8C()
{
  uint64_t v1 = v0;
  sub_551C(&qword_128528);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_42E48()
{
  uint64_t v1 = v0;
  sub_551C(&qword_128530);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  BOOL v33 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      int64_t v9 = v30 + 1;
      if (v30 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v9);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 160 * v15;
    sub_2B188(*(void *)(v2 + 56) + 160 * v15, (uint64_t)v34);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    uint64_t v22 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    long long v23 = v34[1];
    _OWORD *v22 = v34[0];
    long long v24 = v34[6];
    long long v25 = v34[7];
    long long v26 = v34[9];
    v22[8] = v34[8];
    v22[9] = v26;
    v22[6] = v24;
    v22[7] = v25;
    long long v27 = v34[2];
    long long v28 = v34[3];
    long long v29 = v34[5];
    v22[4] = v34[4];
    v22[5] = v29;
    v22[2] = v27;
    _OWORD v22[3] = v28;
    v22[1] = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v33;
    goto LABEL_28;
  }
  unint64_t v31 = *(void *)(v6 + 8 * v32);
  if (v31)
  {
    int64_t v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v9);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_4306C()
{
  uint64_t v1 = v0;
  sub_551C((uint64_t *)&unk_128130);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1EBD4(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_BAD8(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_1EBC4(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_43254(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_43264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_128558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void **_s21RCSConfigurationErrorOwCP(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void _s21RCSConfigurationErrorOwxx(id *a1)
{
}

void **_s21RCSConfigurationErrorOwca(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void *_s21RCSConfigurationErrorOwtk(void *result, void *a2)
{
  *id result = *a2;
  return result;
}

void **_s21RCSConfigurationErrorOwta(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t _s21RCSConfigurationErrorOwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21RCSConfigurationErrorOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s21RCSConfigurationErrorOMa()
{
  return &_s21RCSConfigurationErrorON;
}

void sub_43418(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, char a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v9 = v8;
  int v76 = a7;
  id v80 = a5;
  uint64_t v81 = a3;
  uint64_t v75 = a2;
  char v13 = a6 & 1;
  sub_F6F20();
  unint64_t v14 = (int *)_s17ParticipantChangeVMa();
  uint64_t v77 = v14[5];
  *(void *)(a8 + v77) = a1;
  uint64_t v15 = v14[6];
  uint64_t v82 = a8;
  *(unsigned char *)(a8 + v15) = v13;
  id v78 = a1;
  id v79 = a4;
  id v16 = [a4 memberList];
  sub_4A9F0();
  unint64_t v17 = sub_F7410();

  if (v17 >> 62) {
    goto LABEL_45;
  }
  uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    char v83 = v14;
    if (!v18) {
      break;
    }
    long long v92 = _swiftEmptyArrayStorage;
    sub_4FE88(0, v18 & ~(v18 >> 63), 0);
    if (v18 < 0)
    {
      __break(1u);
LABEL_47:
      sub_F7BA0();
      __break(1u);
      return;
    }
    uint64_t v19 = 0;
    long long v20 = v92;
    uint64_t v88 = (void *)(v17 & 0xC000000000000001);
    unint64_t v89 = v17;
    while (v18 != v19)
    {
      if (v88) {
        id v21 = (id)sub_F78D0();
      }
      else {
        id v21 = *(id *)(v17 + 8 * v19 + 32);
      }
      unint64_t v22 = v21;
      id v23 = objc_msgSend(v21, "member", v74[0]);
      uint64_t v24 = sub_F7220();
      uint64_t v26 = v25;

      v27._uint64_t countAndFlagsBits = v24;
      v27._object = v26;
      RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v90, v27, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
      if (v28)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_release();

        int v34 = 0;
        uint64_t v35 = v82;
LABEL_36:
        uint64_t v68 = sub_F6F30();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v35, v68);

        if (v34) {
          swift_bridgeObjectRelease();
        }
        return;
      }
      unint64_t v14 = 0;
      uint64_t countAndFlagsBits = v90.id._countAndFlagsBits;
      object = v90.id._object;
      swift_bridgeObjectRetain();
      sub_6D20((uint64_t)&v90);

      long long v92 = v20;
      unint64_t v32 = v20[2];
      unint64_t v31 = v20[3];
      if (v32 >= v31 >> 1)
      {
        sub_4FE88(v31 > 1, v32 + 1, 1);
        long long v20 = v92;
      }
      ++v19;
      void v20[2] = v32 + 1;
      BOOL v33 = &v20[2 * v32];
      v33[4] = countAndFlagsBits;
      uint64_t v33[5] = object;
      uint64_t v9 = 0;
      unint64_t v17 = v89;
      if (v18 == v19)
      {
        swift_bridgeObjectRelease();
        unint64_t v14 = v83;
        goto LABEL_17;
      }
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_F79B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  long long v20 = _swiftEmptyArrayStorage;
LABEL_17:
  uint64_t v36 = (void *)sub_4B470((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v37 = v20[2];
  if (v37)
  {
    v74[1] = v9;
    uint64_t v86 = sub_F6F30();
    uint64_t v38 = *(void *)(v86 - 8);
    uint64_t v85 = *(void *)(v38 + 64);
    unint64_t v84 = (void (**)(char *, uint64_t))(v38 + 8);
    uint64_t v39 = swift_bridgeObjectRetain();
    v74[0] = v20;
    uint64_t v40 = v20 + 5;
    while (1)
    {
      uint64_t v88 = v74;
      unint64_t v89 = v37;
      uint64_t v42 = *(v40 - 1);
      uint64_t v9 = *v40;
      id v87 = v40;
      __chkstk_darwin(v39);
      unint64_t v44 = (char *)v74 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_bridgeObjectRetain_n();
      sub_F6F20();
      uint64_t v45 = sub_F6F00();
      unint64_t v14 = v46;
      (*v84)(v44, v86);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v92 = v36;
      unint64_t v17 = v42;
      unint64_t v49 = sub_1C9BC(v42, v9);
      uint64_t v50 = v36[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51))
      {
        __break(1u);
        goto LABEL_43;
      }
      char v53 = v48;
      if (v36[3] >= v52)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v36 = v92;
          if ((v48 & 1) == 0) {
            goto LABEL_28;
          }
        }
        else
        {
          sub_42C8C();
          uint64_t v36 = v92;
          if ((v53 & 1) == 0) {
            goto LABEL_28;
          }
        }
      }
      else
      {
        sub_415A8(v52, isUniquelyReferenced_nonNull_native);
        unint64_t v54 = sub_1C9BC(v17, v9);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_47;
        }
        unint64_t v49 = v54;
        uint64_t v36 = v92;
        if ((v53 & 1) == 0)
        {
LABEL_28:
          v36[(v49 >> 6) + 8] |= 1 << v49;
          long long v56 = (unint64_t *)(v36[6] + 16 * v49);
          unint64_t *v56 = v17;
          v56[1] = v9;
          long long v57 = (uint64_t *)(v36[7] + 16 * v49);
          uint64_t *v57 = v45;
          v57[1] = (uint64_t)v14;
          uint64_t v58 = v36[2];
          BOOL v59 = __OFADD__(v58, 1);
          uint64_t v60 = v58 + 1;
          if (v59) {
            goto LABEL_44;
          }
          _OWORD v36[2] = v60;
          swift_bridgeObjectRetain();
          goto LABEL_20;
        }
      }
      unint64_t v41 = (uint64_t *)(v36[7] + 16 * v49);
      swift_bridgeObjectRelease();
      *unint64_t v41 = v45;
      v41[1] = (uint64_t)v14;
LABEL_20:
      uint64_t v40 = v87 + 2;
      swift_bridgeObjectRelease_n();
      uint64_t v39 = swift_bridgeObjectRelease();
      unint64_t v37 = v89 - 1;
      if (v89 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v14 = v83;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = v82;
  *(void *)(v82 + v14[7]) = v36;
  id v61 = v80;
  if (v80)
  {
    id v62 = [v80 member];
    uint64_t v63 = sub_F7220();
    uint64_t v65 = v64;

    v66._uint64_t countAndFlagsBits = v63;
    v66._object = v65;
    RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v91, v66, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    if (v67)
    {

      swift_bridgeObjectRelease();
      int v34 = 1;
      goto LABEL_36;
    }
    uint64_t v69 = v91.id._countAndFlagsBits;
    unint64_t v70 = v91.id._object;
    swift_bridgeObjectRetain();
    sub_6D20((uint64_t)&v91);
  }
  else
  {

    uint64_t v69 = 0;
    unint64_t v70 = 0;
  }
  uint64_t v71 = v81;

  uint64_t v72 = (uint64_t *)(v35 + v14[8]);
  *uint64_t v72 = v69;
  v72[1] = (uint64_t)v70;
  os_log_type_t v73 = (void *)(v35 + v14[9]);
  *os_log_type_t v73 = v75;
  v73[1] = v71;
  *(unsigned char *)(v35 + v14[10]) = v76 & 1;
}

void sub_43B14(uint64_t a1, int a2)
{
  id v4 = (int *)_s17ParticipantChangeVMa();
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v65 - v8;
  uint64_t v10 = sub_F70F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v65 - v15;
  uint64_t v17 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  int v70 = a2;
  if (a2)
  {
    v18(v16, v17, v10);
    sub_2B33C(a1, (uint64_t)v9);
    uint64_t v19 = sub_F70D0();
    os_log_type_t v20 = sub_F7670();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v74 = v69;
      uint64_t v68 = v21;
      *(_DWORD *)id v21 = 136446210;
      uint64_t v67 = v21 + 4;
      sub_F6F30();
      uint64_t v71 = v10;
      sub_27EAC();
      uint64_t v22 = sub_F7B20();
      uint64_t v73 = sub_A3FC(v22, v23, &v74);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_2B3A0((uint64_t)v9);
      _os_log_impl(&dword_0, v19, v20, "Relaying finished participant change ID %{public}s", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v71);
      goto LABEL_9;
    }
    sub_2B3A0((uint64_t)v9);

    long long v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    int64_t v30 = v16;
  }
  else
  {
    v18(v14, v17, v10);
    sub_2B33C(a1, (uint64_t)v7);
    uint64_t v24 = sub_F70D0();
    os_log_type_t v25 = sub_F7670();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v74 = v69;
      uint64_t v71 = v10;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v67 = v26 + 4;
      uint64_t v68 = v26;
      sub_F6F30();
      sub_27EAC();
      uint64_t v27 = sub_F7B20();
      uint64_t v73 = sub_A3FC(v27, v28, &v74);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_2B3A0((uint64_t)v7);
      _os_log_impl(&dword_0, v24, v25, "Asking phone to execute participant change ID %{public}s", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v71);
      goto LABEL_9;
    }
    sub_2B3A0((uint64_t)v7);

    long long v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    int64_t v30 = v14;
  }
  v29(v30, v10);
LABEL_9:
  uint64_t v31 = *(unsigned __int8 *)(a1 + v4[6]);
  uint64_t v32 = *(void *)(a1 + v4[7]);
  uint64_t v33 = a1 + v4[8];
  int v34 = *(uint8_t **)v33;
  uint64_t v35 = *(void *)(v33 + 8);
  swift_bridgeObjectRetain();
  uint64_t v71 = v32;
  swift_bridgeObjectRetain();
  id v36 = [v72 service];
  id v37 = [v36 internalName];

  uint64_t v38 = sub_F7220();
  uint64_t v40 = v39;

  unint64_t v41 = *(void **)(a1 + v4[5]);
  id v42 = [v41 groupID];
  if (!v42)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v43 = v42;
  uint64_t v65 = v40;
  uint64_t v66 = v38;
  uint64_t v67 = (uint8_t *)v35;
  uint64_t v68 = v34;
  uint64_t v69 = v31;
  uint64_t v44 = sub_F7220();
  uint64_t v46 = v45;

  id v47 = [v41 originalGroupID];
  if (!v47)
  {
LABEL_16:
    __break(1u);
    return;
  }
  char v48 = v47;
  uint64_t v49 = sub_F7220();
  uint64_t v51 = v50;

  uint64_t v52 = sub_F6F30();
  __chkstk_darwin(v52 - 8);
  unint64_t v54 = (char *)&v65 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6F20();
  uint64_t v55 = v4[10];
  long long v56 = (uint64_t *)(a1 + v4[9]);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  char v59 = *(unsigned char *)(a1 + v55);
  objc_allocWithZone((Class)IMDRelayGroupParticipantsUpdateMessage);
  swift_bridgeObjectRetain();
  HIBYTE(v64) = v59;
  LOBYTE(v64) = 0;
  id v60 = sub_4907C(v69, v71, (uint64_t)v68, (uint64_t)v67, v66, v65, v44, v46, v49, v51, (uint64_t)v54, v58, v57, v64);
  id v61 = [v72 relayController];
  id v62 = v60;
  if (v57) {
    uint64_t v63 = (void *)sub_F71F0();
  }
  else {
    uint64_t v63 = 0;
  }
  [v61 reflectGroupMutation:v62 callerID:v63 didOccurLocally:v70 & 1];
}

void RCSServiceSession.leaveChat(_:style:)(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_F71F0();
  id v27 = [v3 chatForChatIdentifier:v12 style:a3];

  if (v27)
  {
    if (IMSharedHelperRetrieveSimDetailsFromTelephony())
    {
      sub_F74F0();
      uint64_t v13 = sub_F7520();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
      sub_F74E0();
      id v14 = v3;
      id v15 = v27;
      uint64_t v16 = sub_F74D0();
      uint64_t v17 = (void *)swift_allocObject();
      _OWORD v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v14;
      v17[5] = v15;
      sub_9EAC((uint64_t)v11, (uint64_t)&unk_128580, (uint64_t)v17);
      swift_release();
      id v18 = [v15 chatIdentifier];
      if (v18)
      {
        uint64_t v19 = v18;
        id v20 = [v14 account];
        [v14 didLeaveChat:v19 style:a3 account:v20];
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      sub_444F4(v27, 0);
      os_log_type_t v25 = v27;
    }
  }
  else
  {
    uint64_t v21 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
    uint64_t v22 = sub_F70D0();
    os_log_type_t v23 = sub_F7690();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "Received request to update display name but could not find a chat", v24, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_444F4(void *a1, int a2)
{
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = _s17ParticipantChangeVMa();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v12 = [a1 lastAddressedLocalHandle];
  if (v12
    || (id v24 = [v2 account],
        id v25 = [v24 loginID],
        v24,
        v25)
    && (id v12 = [v25 _stripFZIDPrefix], v25, v12))
  {
    int v30 = a2;
    uint64_t v13 = sub_F7220();
    id v15 = v14;

    swift_bridgeObjectRetain();
    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v32, v16, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    if (v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v19 = sub_F70D0();
      os_log_type_t v20 = sub_F7690();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 138412546;
        swift_errorRetain();
        uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v31 = v23;
        sub_F77B0();
        void *v22 = v23;
        swift_errorRelease();
        swift_errorRelease();
        *(_WORD *)(v21 + 12) = 1024;
        LODWORD(v31) = v30 & 1;
        sub_F77B0();
        _os_log_impl(&dword_0, v19, v20, "Error processing self leaving a group chat: %@, occurredLocally: %{BOOL}d", (uint8_t *)v21, 0x12u);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      uint64_t countAndFlagsBits = v32.id._countAndFlagsBits;
      object = v32.id._object;
      swift_bridgeObjectRetain();
      sub_6D20((uint64_t)&v32);
      sub_551C(&qword_128260);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_F8F20;
      *(void *)(inited + 32) = countAndFlagsBits;
      *(void *)(inited + 40) = object;
      swift_bridgeObjectRetain();
      sub_45218(a1, 1, inited, countAndFlagsBits, (uint64_t)object, v13, (uint64_t)v15, 1, (uint64_t)v11);
      sub_43B14((uint64_t)v11, v30 & 1);
      sub_2B3A0((uint64_t)v11);
    }
  }
}

uint64_t sub_448F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  uint64_t v6 = sub_F70F0();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  sub_F74E0();
  v5[13] = sub_F74D0();
  uint64_t v8 = sub_F7470();
  v5[14] = v8;
  v5[15] = v7;
  return _swift_task_switch(sub_449F4, v8, v7);
}

void sub_449F4()
{
  uint64_t v1 = *(void *)(*(void *)(v0[7] + OBJC_IVAR___RCSServiceSession_state) + 40);
  v0[16] = v1;
  if (v1)
  {
    v0[2] = v0[8];
    v0[3] = 0;
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[17] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_44AD4;
    RCSGroupController.leaveGroup(chat:subscriptionContext:)((uint64_t)(v0 + 2), (uint64_t)(v0 + 3));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_44AD4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_44E68;
  }
  else {
    uint64_t v5 = sub_44C0C;
  }
  return _swift_task_switch(v5, v3, v4);
}

void sub_44C0C()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void **)(v0 + 64);
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  id v6 = v4;
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F7670();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 64);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    id v11 = [v9 guid];
    if (!v11)
    {

      __break(1u);
      return;
    }
    id v12 = v11;
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v13 = *(void **)(v0 + 64);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v24 = *(void *)(v0 + 96);
    uint64_t v14 = sub_F7220();
    unint64_t v16 = v15;

    *(void *)(v0 + 48) = sub_A3FC(v14, v16, &v25);
    sub_F77B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v7, v8, "Finished leaving group %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 72);
    uint64_t v19 = *(void *)(v0 + 80);
    os_log_type_t v20 = *(void **)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  sub_444F4(*(void **)(v0 + 64), 1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(void (**)(void))(v0 + 8);
  v21();
}

uint64_t sub_44E68()
{
  uint64_t v33 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = (void *)v0[8];
  uint64_t v3 = v0[9];
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  id v6 = v4;
  swift_errorRetain();
  id v7 = v6;
  swift_errorRetain();
  os_log_type_t v8 = sub_F70D0();
  os_log_type_t v9 = sub_F7690();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v29 = v9;
    log = v8;
    uint64_t v10 = (void *)v0[8];
    uint64_t v11 = swift_slowAlloc();
    int v30 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    id v12 = [v10 guid];
    if (!v12)
    {
      uint64_t v25 = (void *)v0[8];
      swift_errorRelease();

      uint64_t result = swift_errorRelease();
      __break(1u);
      return result;
    }
    uint64_t v13 = v12;
    uint64_t v26 = v0[10];
    uint64_t v14 = (void *)v0[8];
    uint64_t v27 = v0[9];
    uint64_t v28 = v0[11];
    uint64_t v15 = sub_F7220();
    unint64_t v17 = v16;

    v0[4] = sub_A3FC(v15, v17, &v32);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v18;
    sub_F77B0();
    *int v30 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, log, v29, "Failed to leave group %s: %@", (uint8_t *)v11, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    uint64_t v20 = v0[10];
    uint64_t v19 = v0[11];
    uint64_t v22 = (void *)v0[8];
    uint64_t v21 = v0[9];
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

void sub_45218(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  char v17 = a2 & 1;
  sub_F6F20();
  uint64_t v18 = (int *)_s17ParticipantChangeVMa();
  *(void *)(a9 + v18[5]) = a1;
  *(unsigned char *)(a9 + v18[6]) = v17;
  id v19 = a1;
  uint64_t v20 = a3;
  id v60 = v19;
  uint64_t v21 = (void *)sub_4B470((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v22 = *(void *)(v20 + 16);
  if (v22)
  {
    uint64_t v53 = v18;
    uint64_t v54 = a4;
    uint64_t v55 = a5;
    uint64_t v56 = a9;
    uint64_t v57 = a6;
    uint64_t v58 = a7;
    int v59 = a8;
    uint64_t v63 = sub_F6F30();
    uint64_t v23 = *(void *)(v63 - 8);
    uint64_t v62 = *(void *)(v23 + 64);
    id v61 = (void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v24 = swift_bridgeObjectRetain();
    v52[1] = v20;
    uint64_t v25 = (uint64_t *)(v20 + 40);
    while (1)
    {
      uint64_t v28 = v22;
      __int16 v64 = v52;
      uint64_t v30 = *(v25 - 1);
      uint64_t v29 = *v25;
      __chkstk_darwin(v24);
      uint64_t v32 = (char *)v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_bridgeObjectRetain_n();
      sub_F6F20();
      uint64_t v33 = sub_F6F00();
      uint64_t v65 = v34;
      (*v61)(v32, v63);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = v21;
      unint64_t v37 = sub_1C9BC(v30, v29);
      uint64_t v38 = v21[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39)) {
        break;
      }
      char v41 = v36;
      if (v21[3] >= v40)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_42C8C();
        }
      }
      else
      {
        sub_415A8(v40, isUniquelyReferenced_nonNull_native);
        unint64_t v42 = sub_1C9BC(v30, v29);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_18;
        }
        unint64_t v37 = v42;
      }
      uint64_t v21 = v66;
      if (v41)
      {
        uint64_t v26 = (uint64_t *)(v66[7] + 16 * v37);
        swift_bridgeObjectRelease();
        uint64_t v27 = v65;
        *uint64_t v26 = v33;
        v26[1] = v27;
      }
      else
      {
        v66[(v37 >> 6) + 8] |= 1 << v37;
        uint64_t v44 = (uint64_t *)(v21[6] + 16 * v37);
        *uint64_t v44 = v30;
        v44[1] = v29;
        uint64_t v45 = (uint64_t *)(v21[7] + 16 * v37);
        uint64_t v46 = v65;
        uint64_t *v45 = v33;
        v45[1] = v46;
        uint64_t v47 = v21[2];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_17;
        }
        v21[2] = v49;
        swift_bridgeObjectRetain();
      }
      v25 += 2;
      swift_bridgeObjectRelease_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      uint64_t v22 = v28 - 1;
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        LOBYTE(a8) = v59;
        a6 = v57;
        a7 = v58;
        a5 = v55;
        a9 = v56;
        uint64_t v18 = v53;
        a4 = v54;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    sub_F7BA0();
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();

    *(void *)(a9 + v18[7]) = v21;
    uint64_t v50 = (void *)(a9 + v18[8]);
    *uint64_t v50 = a4;
    v50[1] = a5;
    uint64_t v51 = (void *)(a9 + v18[9]);
    *uint64_t v51 = a6;
    v51[1] = a7;
    *(unsigned char *)(a9 + v18[10]) = a8 & 1;
  }
}

uint64_t sub_4555C(uint64_t a1)
{
  v2[38] = a1;
  v2[39] = v1;
  uint64_t v3 = sub_551C(&qword_127C70);
  v2[40] = v3;
  v2[41] = *(void *)(v3 - 8);
  v2[42] = swift_task_alloc();
  v2[43] = _s17ParticipantChangeVMa();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  uint64_t v4 = sub_F70F0();
  v2[47] = v4;
  v2[48] = *(void *)(v4 - 8);
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  uint64_t v5 = RCSActor.shared.unsafeMutableAddressor();
  uint64_t v6 = *v5;
  v2[52] = *v5;
  swift_retain();
  return _swift_task_switch(sub_456FC, v6, 0);
}

uint64_t sub_456FC()
{
  uint64_t v84 = v0;
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 304);
  *(_DWORD *)(v0 + 76) = *(_DWORD *)(*(void *)(v0 + 344) + 28);
  uint64_t v6 = swift_bridgeObjectRetain();
  id v7 = sub_49B6C(v6);
  *(void *)(v0 + 424) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = Logger.rcs.unsafeMutableAddressor();
  *(void *)(v0 + 432) = v8;
  os_log_type_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 440) = v9;
  *(void *)(v0 + 448) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v1, v8, v3);
  sub_2B33C(v5, v4);
  uint64_t v10 = sub_F70D0();
  os_log_type_t v11 = sub_F7670();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = *(void *)(v0 + 384);
    uint64_t v79 = *(void *)(v0 + 376);
    uint64_t v81 = *(void *)(v0 + 408);
    uint64_t v13 = *(void *)(v0 + 368);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v82 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446210;
    sub_F6F30();
    sub_27EAC();
    uint64_t v15 = sub_F7B20();
    *(void *)(v0 + 232) = sub_A3FC(v15, v16, &v82);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_2B3A0(v13);
    _os_log_impl(&dword_0, v10, v11, "Initiating participant change ID %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    char v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v17(v81, v79);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 408);
    uint64_t v19 = *(void *)(v0 + 376);
    uint64_t v20 = *(void *)(v0 + 384);
    sub_2B3A0(*(void *)(v0 + 368));

    char v17 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v17(v18, v19);
  }
  *(void *)(v0 + 456) = v17;
  if (qword_127BC0 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v21 = *(void *)(v0 + 336);
  uint64_t v23 = *(void *)(v0 + 320);
  uint64_t v24 = sub_8B44(v23, (uint64_t)qword_127EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v24, v23);
  sub_F6FF0();
  uint64_t v25 = (uint64_t (*)())(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  if (*(unsigned char *)(v0 + 73))
  {
    uint64_t v28 = (uint64_t *)(v0 + 216);
    sub_551C(&qword_128648);
    sub_4A94C(&qword_128660, &qword_128648);
    uint64_t v29 = swift_allocError();
    *(_OWORD *)uint64_t v30 = xmmword_F93D0;
    *(unsigned char *)(v30 + 16) = 3;
    swift_willThrow();
    *(void *)(v0 + 528) = v29;
    uint64_t v31 = *(void *)(v0 + 352);
    uint64_t v32 = *(void *)(v0 + 304);
    (*(void (**)(void, void, void))(v0 + 440))(*(void *)(v0 + 392), *(void *)(v0 + 432), *(void *)(v0 + 376));
    sub_2B33C(v32, v31);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v33 = sub_F70D0();
    os_log_type_t v34 = sub_F7690();
    BOOL v35 = os_log_type_enabled(v33, v34);
    char v36 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v37 = *(void *)(v0 + 392);
    uint64_t v38 = *(void *)(v0 + 376);
    uint64_t v39 = *(void *)(v0 + 352);
    if (v35)
    {
      uint64_t v80 = *(void *)(v0 + 376);
      uint64_t v40 = swift_slowAlloc();
      char v41 = (void *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136446466;
      id v78 = v36;
      sub_F6F30();
      sub_27EAC();
      uint64_t v42 = sub_F7B20();
      *(void *)(v0 + 264) = sub_A3FC(v42, v43, &v82);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_2B3A0(v39);
      *(_WORD *)(v40 + 12) = 2112;
      swift_errorRetain();
      uint64_t v44 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 272) = v44;
      sub_F77B0();
      *char v41 = v44;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v33, v34, "Failed participant change ID %{public}s: %@", (uint8_t *)v40, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      uint64_t v28 = (uint64_t *)(v0 + 216);
      swift_slowDealloc();
      swift_slowDealloc();

      v78(v37, v80);
    }
    else
    {
      sub_2B3A0(*(void *)(v0 + 352));
      swift_errorRelease();
      swift_errorRelease();

      v36(v37, v38);
    }
    *uint64_t v28 = v29;
    swift_errorRetain();
    sub_551C(&qword_127D08);
    sub_551C(&qword_128648);
    if (swift_dynamicCast())
    {
      uint64_t v53 = *(void **)(v0 + 176);
      uint64_t v54 = *(void *)(v0 + 184);
      *(void *)(v0 + 536) = v53;
      *(void *)(v0 + 544) = v54;
      int v55 = *(unsigned __int8 *)(v0 + 192);
      if (v55 == 1)
      {
        swift_release();
        sub_F74E0();
        *(void *)(v0 + 552) = sub_F74D0();
        uint64_t v56 = sub_F7470();
        uint64_t v58 = v57;
        int v59 = sub_46898;
        goto LABEL_35;
      }
      sub_4A924(v53, v54, v55);
    }
    swift_errorRelease();
    *(void *)(v0 + 224) = v29;
    swift_errorRetain();
    if (!swift_dynamicCast())
    {
LABEL_34:
      swift_errorRelease();
      sub_F74E0();
      *(void *)(v0 + 560) = sub_F74D0();
      uint64_t v56 = sub_F7470();
      uint64_t v58 = v77;
      int v59 = sub_46A0C;
LABEL_35:
      uint64_t v25 = v59;
      uint64_t v26 = v56;
      uint64_t v27 = v58;
      return _swift_task_switch(v25, v26, v27);
    }
    if (*(unsigned char *)(v0 + 72))
    {
      sub_4A8D0(v0 + 16);
      goto LABEL_34;
    }
    sub_1E87C((long long *)(v0 + 32), v0 + 136);
    uint64_t v25 = (uint64_t (*)())[self sharedInstance];
    if (v25)
    {
      uint64_t v63 = v25;
      uint64_t v64 = *(int *)(v0 + 76);
      uint64_t v65 = *(void *)(v0 + 344);
      uint64_t v66 = *(void *)(v0 + 304);
      uint64_t v82 = 0;
      unint64_t v83 = 0xE000000000000000;
      sub_F78A0(117);
      unint64_t v67 = v83;
      *(void *)(v0 + 200) = v82;
      *(void *)(v0 + 208) = v67;
      v86._uint64_t countAndFlagsBits = 0xD000000000000028;
      v86._object = (void *)0x80000000001030A0;
      sub_F72E0(v86);
      sub_F7600();
      v87._uint64_t countAndFlagsBits = 0x73646E6F63657320;
      v87._object = (void *)0xEA0000000000202CLL;
      sub_F72E0(v87);
      sub_F7600();
      v88._object = (void *)0x80000000001030D0;
      v88._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      sub_F72E0(v88);
      sub_6BA8((void *)(v0 + 136), *(void *)(v0 + 160));
      sub_F7B40();
      v89._uint64_t countAndFlagsBits = 0x2065676E6168430ALL;
      v89._object = (void *)0xED00002065707974;
      sub_F72E0(v89);
      if (*(unsigned char *)(v66 + *(int *)(v65 + 24))) {
        v68._uint64_t countAndFlagsBits = 0x65766F6D6552;
      }
      else {
        v68._uint64_t countAndFlagsBits = 6579265;
      }
      if (*(unsigned char *)(v66 + *(int *)(v65 + 24))) {
        uint64_t v69 = (void *)0xE600000000000000;
      }
      else {
        uint64_t v69 = (void *)0xE300000000000000;
      }
      v68._object = v69;
      sub_F72E0(v68);
      swift_bridgeObjectRelease();
      v90._uint64_t countAndFlagsBits = 0x696369747261500ALL;
      v90._object = (void *)0xEE002073746E6170;
      sub_F72E0(v90);
      *(void *)(v0 + 256) = *(void *)(v66 + v64);
      swift_bridgeObjectRetain();
      sub_551C(&qword_128650);
      sub_4A94C(&qword_128658, &qword_128650);
      sub_8C60();
      uint64_t v70 = sub_F7370();
      id v72 = v71;
      swift_bridgeObjectRelease();
      v91._uint64_t countAndFlagsBits = v70;
      v91._object = v72;
      sub_F72E0(v91);
      swift_bridgeObjectRelease();
      uint64_t v73 = *(void *)(v0 + 200);
      uint64_t v74 = *(void *)(v0 + 208);
      uint64_t v75 = sub_F78C0();
      *(unsigned char *)(v0 + 80) = 1;
      *(void *)(v0 + 88) = v75;
      *(void *)(v0 + 96) = v76;
      *(void *)(v0 + 104) = v73;
      *(void *)(v0 + 112) = v74;
      *(void *)(v0 + 120) = 0;
      *(unsigned char *)(v0 + 128) = 0;
      swift_bridgeObjectRetain();
      sub_6204C((unsigned __int8 *)(v0 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();

      sub_6BEC(v0 + 136);
      goto LABEL_34;
    }
LABEL_40:
    __break(1u);
    return _swift_task_switch(v25, v26, v27);
  }
  uint64_t v45 = *(void *)(v0 + 344);
  uint64_t v46 = *(void *)(v0 + 304);
  char v47 = *(unsigned char *)(v46 + *(int *)(v45 + 24));
  uint64_t v48 = *(void *)(*(void *)(*(void *)(v0 + 312) + OBJC_IVAR___RCSServiceSession_state) + 40);
  *(void *)(v0 + 464) = v48;
  if (v47)
  {
    if (v48)
    {
      uint64_t v49 = *(void **)(v46 + *(int *)(v45 + 20));
      *(void *)(v0 + 496) = v49;
      *(void *)(v0 + 240) = v49;
      *(void *)(v0 + 248) = 0;
      swift_retain();
      id v50 = v49;
      uint64_t v51 = (void *)swift_task_alloc();
      *(void *)(v0 + 504) = v51;
      *uint64_t v51 = v0;
      v51[1] = sub_46608;
      return RCSGroupController.removeParticipants(_:from:subscriptionContext:)((uint64_t)v7, v0 + 240, v0 + 248);
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (!v48) {
    goto LABEL_39;
  }
  id v60 = *(void **)(v46 + *(int *)(v45 + 20));
  *(void *)(v0 + 472) = v60;
  *(void *)(v0 + 288) = v60;
  *(void *)(v0 + 296) = 0;
  swift_retain();
  id v61 = v60;
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v62;
  void *v62 = v0;
  v62[1] = sub_46264;
  return RCSGroupController.addParticipants(_:to:subscriptionContext:)((uint64_t)v7, v0 + 288, v0 + 296);
}

uint64_t sub_46264()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 472);
  uint64_t v4 = *(void *)(v2 + 416);

  swift_release();
  if (v0)
  {
    uint64_t v5 = sub_46B60;
  }
  else
  {
    swift_release();
    uint64_t v5 = sub_463B0;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_463B0()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 304);
  (*(void (**)(void, void, void))(v0 + 440))(*(void *)(v0 + 400), *(void *)(v0 + 432), *(void *)(v0 + 376));
  sub_2B33C(v2, v1);
  uint64_t v3 = sub_F70D0();
  os_log_type_t v4 = sub_F7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v16 = *(void *)(v0 + 400);
    char v17 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v15 = *(void *)(v0 + 376);
    uint64_t v5 = *(void *)(v0 + 360);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    sub_F6F30();
    sub_27EAC();
    uint64_t v7 = sub_F7B20();
    *(void *)(v0 + 280) = sub_A3FC(v7, v8, &v18);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_2B3A0(v5);
    _os_log_impl(&dword_0, v3, v4, "Finished participant change ID %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v17(v16, v15);
  }
  else
  {
    os_log_type_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v10 = *(void *)(v0 + 400);
    uint64_t v11 = *(void *)(v0 + 376);
    sub_2B3A0(*(void *)(v0 + 360));

    v9(v10, v11);
  }
  sub_F74E0();
  *(void *)(v0 + 520) = sub_F74D0();
  uint64_t v13 = sub_F7470();
  return _swift_task_switch(sub_4675C, v13, v12);
}

uint64_t sub_46608()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 512) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 496);
  uint64_t v4 = *(void *)(v2 + 416);

  swift_release();
  if (v0)
  {
    uint64_t v5 = sub_4724C;
  }
  else
  {
    swift_release();
    uint64_t v5 = sub_4AC3C;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_4675C()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 304);
  swift_release();
  sub_43B14(v2, 1);
  return _swift_task_switch(sub_467E0, v1, 0);
}

uint64_t sub_467E0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_46898()
{
  uint64_t v1 = v0[68];
  uint64_t v2 = (void *)v0[67];
  uint64_t v3 = v0[52];
  uint64_t v5 = v0[38];
  uint64_t v4 = (void *)v0[39];
  swift_release();
  sub_47938((uint64_t)v2, v4, v5);
  sub_4A924(v2, v1, 1);
  return _swift_task_switch(sub_46940, v3, 0);
}

uint64_t sub_46940()
{
  swift_release();
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_46A0C()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[53];
  uint64_t v4 = v0[38];
  uint64_t v3 = (void *)v0[39];
  swift_release();
  sub_47938(v2, v3, v4);
  swift_release();
  return _swift_task_switch(sub_46A9C, v1, 0);
}

uint64_t sub_46A9C()
{
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_46B60()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = (void *)(v0 + 216);
  *(void *)(v0 + 528) = v1;
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 304);
  (*(void (**)(void, void, void))(v0 + 440))(*(void *)(v0 + 392), *(void *)(v0 + 432), *(void *)(v0 + 376));
  sub_2B33C(v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7690();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v43 = *(void *)(v0 + 392);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v42 = *(void *)(v0 + 376);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v8 = swift_slowAlloc();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    sub_F6F30();
    sub_27EAC();
    uint64_t v10 = sub_F7B20();
    *(void *)(v0 + 264) = sub_A3FC(v10, v11, &v45);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_2B3A0(v7);
    *(_WORD *)(v8 + 12) = 2112;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 272) = v12;
    sub_F77B0();
    *os_log_type_t v9 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v5, v6, "Failed participant change ID %{public}s: %@", (uint8_t *)v8, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    uint64_t v2 = (void *)(v0 + 216);
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v44(v43, v42);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v14 = *(void *)(v0 + 392);
    uint64_t v15 = *(void *)(v0 + 376);
    sub_2B3A0(*(void *)(v0 + 352));
    swift_errorRelease();
    swift_errorRelease();

    v13(v14, v15);
  }
  *uint64_t v2 = v1;
  swift_errorRetain();
  sub_551C(&qword_127D08);
  sub_551C(&qword_128648);
  if (swift_dynamicCast())
  {
    uint64_t v16 = *(void **)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 184);
    *(void *)(v0 + 536) = v16;
    *(void *)(v0 + 544) = v17;
    int v18 = *(unsigned __int8 *)(v0 + 192);
    if (v18 == 1)
    {
      swift_release();
      sub_F74E0();
      *(void *)(v0 + 552) = sub_F74D0();
      uint64_t v19 = sub_F7470();
      uint64_t v21 = v20;
      uint64_t v22 = sub_46898;
      goto LABEL_20;
    }
    sub_4A924(v16, v17, v18);
  }
  swift_errorRelease();
  *(void *)(v0 + 224) = v1;
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    if (*(unsigned char *)(v0 + 72))
    {
      sub_4A8D0(v0 + 16);
    }
    else
    {
      sub_1E87C((long long *)(v0 + 32), v0 + 136);
      uint64_t v23 = (uint64_t (*)())[self sharedInstance];
      if (!v23)
      {
        __break(1u);
        return _swift_task_switch(v23, v24, v25);
      }
      uint64_t v26 = v23;
      uint64_t v27 = *(int *)(v0 + 76);
      uint64_t v28 = *(void *)(v0 + 344);
      uint64_t v29 = *(void *)(v0 + 304);
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_F78A0(117);
      unint64_t v30 = v46;
      *(void *)(v0 + 200) = v45;
      *(void *)(v0 + 208) = v30;
      v49._uint64_t countAndFlagsBits = 0xD000000000000028;
      v49._object = (void *)0x80000000001030A0;
      sub_F72E0(v49);
      sub_F7600();
      v50._uint64_t countAndFlagsBits = 0x73646E6F63657320;
      v50._object = (void *)0xEA0000000000202CLL;
      sub_F72E0(v50);
      sub_F7600();
      v51._object = (void *)0x80000000001030D0;
      v51._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      sub_F72E0(v51);
      sub_6BA8((void *)(v0 + 136), *(void *)(v0 + 160));
      sub_F7B40();
      v52._uint64_t countAndFlagsBits = 0x2065676E6168430ALL;
      v52._object = (void *)0xED00002065707974;
      sub_F72E0(v52);
      if (*(unsigned char *)(v29 + *(int *)(v28 + 24))) {
        v31._uint64_t countAndFlagsBits = 0x65766F6D6552;
      }
      else {
        v31._uint64_t countAndFlagsBits = 6579265;
      }
      if (*(unsigned char *)(v29 + *(int *)(v28 + 24))) {
        uint64_t v32 = (void *)0xE600000000000000;
      }
      else {
        uint64_t v32 = (void *)0xE300000000000000;
      }
      v31._object = v32;
      sub_F72E0(v31);
      swift_bridgeObjectRelease();
      v53._uint64_t countAndFlagsBits = 0x696369747261500ALL;
      v53._object = (void *)0xEE002073746E6170;
      sub_F72E0(v53);
      *(void *)(v0 + 256) = *(void *)(v29 + v27);
      swift_bridgeObjectRetain();
      sub_551C(&qword_128650);
      sub_4A94C(&qword_128658, &qword_128650);
      sub_8C60();
      uint64_t v33 = sub_F7370();
      BOOL v35 = v34;
      swift_bridgeObjectRelease();
      v54._uint64_t countAndFlagsBits = v33;
      v54._object = v35;
      sub_F72E0(v54);
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)(v0 + 200);
      uint64_t v37 = *(void *)(v0 + 208);
      uint64_t v38 = sub_F78C0();
      *(unsigned char *)(v0 + 80) = 1;
      *(void *)(v0 + 88) = v38;
      *(void *)(v0 + 96) = v39;
      *(void *)(v0 + 104) = v36;
      *(void *)(v0 + 112) = v37;
      *(void *)(v0 + 120) = 0;
      *(unsigned char *)(v0 + 128) = 0;
      swift_bridgeObjectRetain();
      sub_6204C((unsigned __int8 *)(v0 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease();
      sub_6BEC(v0 + 136);
    }
  }
  swift_errorRelease();
  sub_F74E0();
  *(void *)(v0 + 560) = sub_F74D0();
  uint64_t v19 = sub_F7470();
  uint64_t v21 = v40;
  uint64_t v22 = sub_46A0C;
LABEL_20:
  uint64_t v23 = v22;
  uint64_t v24 = v19;
  uint64_t v25 = v21;
  return _swift_task_switch(v23, v24, v25);
}

uint64_t sub_4724C()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = (void *)(v0 + 216);
  *(void *)(v0 + 528) = v1;
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 304);
  (*(void (**)(void, void, void))(v0 + 440))(*(void *)(v0 + 392), *(void *)(v0 + 432), *(void *)(v0 + 376));
  sub_2B33C(v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7690();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v43 = *(void *)(v0 + 392);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v42 = *(void *)(v0 + 376);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v8 = swift_slowAlloc();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    sub_F6F30();
    sub_27EAC();
    uint64_t v10 = sub_F7B20();
    *(void *)(v0 + 264) = sub_A3FC(v10, v11, &v45);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_2B3A0(v7);
    *(_WORD *)(v8 + 12) = 2112;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 272) = v12;
    sub_F77B0();
    *os_log_type_t v9 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v5, v6, "Failed participant change ID %{public}s: %@", (uint8_t *)v8, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    uint64_t v2 = (void *)(v0 + 216);
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v44(v43, v42);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v14 = *(void *)(v0 + 392);
    uint64_t v15 = *(void *)(v0 + 376);
    sub_2B3A0(*(void *)(v0 + 352));
    swift_errorRelease();
    swift_errorRelease();

    v13(v14, v15);
  }
  *uint64_t v2 = v1;
  swift_errorRetain();
  sub_551C(&qword_127D08);
  sub_551C(&qword_128648);
  if (swift_dynamicCast())
  {
    uint64_t v16 = *(void **)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 184);
    *(void *)(v0 + 536) = v16;
    *(void *)(v0 + 544) = v17;
    int v18 = *(unsigned __int8 *)(v0 + 192);
    if (v18 == 1)
    {
      swift_release();
      sub_F74E0();
      *(void *)(v0 + 552) = sub_F74D0();
      uint64_t v19 = sub_F7470();
      uint64_t v21 = v20;
      uint64_t v22 = sub_46898;
      goto LABEL_20;
    }
    sub_4A924(v16, v17, v18);
  }
  swift_errorRelease();
  *(void *)(v0 + 224) = v1;
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    if (*(unsigned char *)(v0 + 72))
    {
      sub_4A8D0(v0 + 16);
    }
    else
    {
      sub_1E87C((long long *)(v0 + 32), v0 + 136);
      uint64_t v23 = (uint64_t (*)())[self sharedInstance];
      if (!v23)
      {
        __break(1u);
        return _swift_task_switch(v23, v24, v25);
      }
      uint64_t v26 = v23;
      uint64_t v27 = *(int *)(v0 + 76);
      uint64_t v28 = *(void *)(v0 + 344);
      uint64_t v29 = *(void *)(v0 + 304);
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_F78A0(117);
      unint64_t v30 = v46;
      *(void *)(v0 + 200) = v45;
      *(void *)(v0 + 208) = v30;
      v49._uint64_t countAndFlagsBits = 0xD000000000000028;
      v49._object = (void *)0x80000000001030A0;
      sub_F72E0(v49);
      sub_F7600();
      v50._uint64_t countAndFlagsBits = 0x73646E6F63657320;
      v50._object = (void *)0xEA0000000000202CLL;
      sub_F72E0(v50);
      sub_F7600();
      v51._object = (void *)0x80000000001030D0;
      v51._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      sub_F72E0(v51);
      sub_6BA8((void *)(v0 + 136), *(void *)(v0 + 160));
      sub_F7B40();
      v52._uint64_t countAndFlagsBits = 0x2065676E6168430ALL;
      v52._object = (void *)0xED00002065707974;
      sub_F72E0(v52);
      if (*(unsigned char *)(v29 + *(int *)(v28 + 24))) {
        v31._uint64_t countAndFlagsBits = 0x65766F6D6552;
      }
      else {
        v31._uint64_t countAndFlagsBits = 6579265;
      }
      if (*(unsigned char *)(v29 + *(int *)(v28 + 24))) {
        uint64_t v32 = (void *)0xE600000000000000;
      }
      else {
        uint64_t v32 = (void *)0xE300000000000000;
      }
      v31._object = v32;
      sub_F72E0(v31);
      swift_bridgeObjectRelease();
      v53._uint64_t countAndFlagsBits = 0x696369747261500ALL;
      v53._object = (void *)0xEE002073746E6170;
      sub_F72E0(v53);
      *(void *)(v0 + 256) = *(void *)(v29 + v27);
      swift_bridgeObjectRetain();
      sub_551C(&qword_128650);
      sub_4A94C(&qword_128658, &qword_128650);
      sub_8C60();
      uint64_t v33 = sub_F7370();
      BOOL v35 = v34;
      swift_bridgeObjectRelease();
      v54._uint64_t countAndFlagsBits = v33;
      v54._object = v35;
      sub_F72E0(v54);
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)(v0 + 200);
      uint64_t v37 = *(void *)(v0 + 208);
      uint64_t v38 = sub_F78C0();
      *(unsigned char *)(v0 + 80) = 1;
      *(void *)(v0 + 88) = v38;
      *(void *)(v0 + 96) = v39;
      *(void *)(v0 + 104) = v36;
      *(void *)(v0 + 112) = v37;
      *(void *)(v0 + 120) = 0;
      *(unsigned char *)(v0 + 128) = 0;
      swift_bridgeObjectRetain();
      sub_6204C((unsigned __int8 *)(v0 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease();
      sub_6BEC(v0 + 136);
    }
  }
  swift_errorRelease();
  sub_F74E0();
  *(void *)(v0 + 560) = sub_F74D0();
  uint64_t v19 = sub_F7470();
  uint64_t v21 = v40;
  uint64_t v22 = sub_46A0C;
LABEL_20:
  uint64_t v23 = v22;
  uint64_t v24 = v19;
  uint64_t v25 = v21;
  return _swift_task_switch(v23, v24, v25);
}

id sub_47938(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v6 = _s17ParticipantChangeVMa();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_F70F0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  sub_2B33C(a3, (uint64_t)v8);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_F70D0();
  os_log_type_t v15 = sub_F7690();
  BOOL v16 = os_log_type_enabled(v14, v15);
  id v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = v6;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v54 = v18;
    *(_DWORD *)uint64_t v17 = 136446466;
    int v19 = v8[*(int *)(v6 + 24)];
    uint64_t v57 = v18;
    if (v19) {
      uint64_t v20 = 0x65766F6D6572;
    }
    else {
      uint64_t v20 = 6579297;
    }
    if (v19) {
      unint64_t v21 = 0xE600000000000000;
    }
    else {
      unint64_t v21 = 0xE300000000000000;
    }
    uint64_t v22 = sub_A3FC(v20, v21, &v57);
    id v55 = (id)v9;
    uint64_t v56 = v22;
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_2B3A0((uint64_t)v8);
    *(_WORD *)(v17 + 12) = 2048;
    uint64_t v23 = *(void *)(a1 + 16);
    swift_bridgeObjectRelease();
    uint64_t v56 = v23;
    a2 = v50;
    sub_F77B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v15, "Failed to %{public}s %ld participants! Reverting failed changes", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v51;
    swift_slowDealloc();

    id result = (id)(*(uint64_t (**)(char *, id))(v10 + 8))(v12, v55);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2B3A0((uint64_t)v8);

    swift_bridgeObjectRelease();
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25)
  {
    uint64_t v26 = v52;
    uint64_t v27 = *(void **)(a3 + *(int *)(v52 + 20));
    if (*(unsigned char *)(a3 + *(int *)(v52 + 24))) {
      int v28 = 2;
    }
    else {
      int v28 = 3;
    }
    unsigned int v48 = v28;
    swift_bridgeObjectRetain();
    v47[1] = a1;
    uint64_t v29 = (uint64_t *)(a1 + 40);
    Swift::String v49 = v27;
    while (1)
    {
      uint64_t v31 = *(v29 - 1);
      uint64_t v30 = *v29;
      swift_bridgeObjectRetain();
      uint64_t v32 = (void *)sub_F71F0();
      id result = [v27 chatIdentifier];
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v33 = result;
      unsigned int v53 = [v27 style];
      id v55 = [a2 account];
      if (*(void *)(a3 + *(int *)(v26 + 36) + 8)) {
        os_log_type_t v34 = (void *)sub_F71F0();
      }
      else {
        os_log_type_t v34 = 0;
      }
      uint64_t v35 = *(void *)(a3 + *(int *)(v26 + 28));
      uint64_t v36 = *(void *)(v35 + 16);
      uint64_t v54 = v25;
      if (v36)
      {
        swift_bridgeObjectRetain();
        sub_1C9BC(v31, v30);
        if (v37)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v38 = (void *)sub_F71F0();
        }
        else
        {
          uint64_t v38 = 0;
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v35 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1C9BC(v31, v30);
          char v40 = v39;
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v38 = 0;
      }
      char v40 = 0;
LABEL_30:
      LOBYTE(v46) = v40 & 1;
      char v41 = v55;
      LOBYTE(v45) = v53;
      id v42 = v50;

      if (*(void *)(v35 + 16))
      {
        sub_1C9BC(v31, v30);
        a3 = v51;
        uint64_t v27 = v49;
        if (v43)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v44 = (void *)sub_F71F0();
          swift_bridgeObjectRelease();
          a2 = v42;
          [v42 markItemFailedWithGUID:v44 errorCode:4];

          goto LABEL_17;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        a3 = v51;
        uint64_t v27 = v49;
      }
      a2 = v42;
LABEL_17:
      v29 += 2;
      uint64_t v25 = v54 - 1;
      uint64_t v26 = v52;
      if (v54 == 1) {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_47ED8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t v57 = a3;
  int v58 = a1;
  uint64_t v11 = sub_F70F0();
  uint64_t v56 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v14 - 8);
  id v61 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v16 = (int *)_s17ParticipantChangeVMa();
  uint64_t v59 = *((void *)v16 - 1);
  uint64_t v17 = *(void *)(v59 + 64);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v60 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v56 - v19;
  if (a6)
  {
    unint64_t v21 = (void *)sub_F71F0();
    id v22 = [v62 chatForChatIdentifier:v21 style:a7];

    if (v22) {
      goto LABEL_5;
    }
  }
  if (a4
    && (id v23 = [self sharedInstance],
        uint64_t v24 = (void *)sub_F71F0(),
        id v22 = [v23 existingChatWithGUID:v24],
        v23,
        v24,
        v22))
  {
LABEL_5:
    if (a2)
    {
      uint64_t v25 = &_swiftEmptyDictionarySingleton;
      uint64_t v64 = &_swiftEmptyDictionarySingleton;
      uint64_t v26 = *(void *)(a2 + 16);
      if (v26)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t i = 0; i != v26; ++i)
        {
          uint64_t v63 = *(void *)(a2 + 8 * i + 32);
          swift_bridgeObjectRetain();
          sub_484A0(&v64, &v63);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        uint64_t v25 = v64;
      }
      id v28 = objc_msgSend(v22, "lastAddressedLocalHandle", v56, v57);
      if (v28)
      {
        uint64_t v29 = v28;
        uint64_t v30 = sub_F7220();
        uint64_t v32 = v31;

        if (!IMSharedHelperRetrieveSimDetailsFromTelephony()) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v30 = 0;
        uint64_t v32 = 0;
        if (!IMSharedHelperRetrieveSimDetailsFromTelephony())
        {
LABEL_21:
          BOOL v44 = v58 != 2;
          id v45 = v22;
          sub_F6F20();
          *(void *)&v20[v16[5]] = v45;
          v20[v16[6]] = v44;
          *(void *)&v20[v16[7]] = v25;
          uint64_t v46 = &v20[v16[8]];
          *(void *)uint64_t v46 = 0;
          *((void *)v46 + 1) = 0;
          uint64_t v47 = (uint64_t *)&v20[v16[9]];
          *uint64_t v47 = v30;
          v47[1] = v32;
          v20[v16[10]] = 1;
          id v48 = v62;
          sub_49E54((uint64_t)v20);
          uint64_t v49 = (uint64_t)v61;
          sub_F74F0();
          uint64_t v50 = sub_F7520();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
          uint64_t v51 = v60;
          sub_2B33C((uint64_t)v20, v60);
          sub_F74E0();
          id v52 = v48;
          uint64_t v53 = sub_F74D0();
          unint64_t v54 = (*(unsigned __int8 *)(v59 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
          id v55 = (void *)swift_allocObject();
          v55[2] = v53;
          v55[3] = &protocol witness table for MainActor;
          v55[4] = v52;
          sub_2C524(v51, (uint64_t)v55 + v54);
          sub_9EAC(v49, (uint64_t)&unk_128638, (uint64_t)v55);

          swift_release();
          return sub_2B3A0((uint64_t)v20);
        }
      }
      id v39 = [v62 subscriptionContextForChat:v22];
      if (v39)
      {
        char v40 = v39;
        swift_bridgeObjectRelease();
        id v41 = [v40 phoneNumber];
        if (v41)
        {
          id v42 = v41;
          uint64_t v30 = sub_F7220();
          uint64_t v32 = v43;
        }
        else
        {

          uint64_t v30 = 0;
          uint64_t v32 = 0;
        }
      }
      goto LABEL_21;
    }
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    uint64_t v33 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v34 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v13, v33, v11);
    uint64_t v35 = sub_F70D0();
    os_log_type_t v36 = sub_F7690();
    if (os_log_type_enabled(v35, v36))
    {
      char v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v37 = 0;
      _os_log_impl(&dword_0, v35, v36, "Received request to update display name but could not find a chat", v37, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v13, v11);
  }
  return result;
}

uint64_t sub_484A0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v23 = sub_F7220();
  uint64_t v24 = v4;
  sub_F7860();
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_1C978((uint64_t)v25), (v6 & 1) != 0))
  {
    sub_BAD8(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1EC30((uint64_t)v25);
  if (!*((void *)&v27 + 1)) {
    return sub_4A990((uint64_t)&v26);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v9 = v23;
  uint64_t v8 = v24;
  uint64_t v23 = sub_F7220();
  uint64_t v24 = v10;
  sub_F7860();
  if (*(void *)(v3 + 16) && (unint64_t v11 = sub_1C978((uint64_t)v25), (v12 & 1) != 0))
  {
    sub_BAD8(*(void *)(v3 + 56) + 32 * v11, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1EC30((uint64_t)v25);
  if (!*((void *)&v27 + 1))
  {
    uint64_t v28 = v8;
    uint64_t v15 = v9;
    sub_4A990((uint64_t)&v26);
LABEL_17:
    uint64_t v16 = sub_F6F30();
    uint64_t v17 = *(void *)(v16 - 8);
    __chkstk_darwin(v16);
    uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_F6F20();
    uint64_t v13 = sub_F6F00();
    uint64_t v14 = v20;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v9 = v15;
    uint64_t v8 = v28;
    goto LABEL_18;
  }
  if (!swift_dynamicCast())
  {
    uint64_t v28 = v8;
    uint64_t v15 = v9;
    goto LABEL_17;
  }
  uint64_t v13 = v23;
  uint64_t v14 = v24;
LABEL_18:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_1D00C(v13, v14, v9, v8, isUniquelyReferenced_nonNull_native);
  *a1 = v25[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_48754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = sub_F74E0();
  v5[5] = sub_F74D0();
  v5[6] = sub_F74D0();
  uint64_t v7 = sub_F7470();
  v5[7] = v7;
  v5[8] = v6;
  return _swift_task_switch(sub_487FC, v7, v6);
}

uint64_t sub_487FC()
{
  if (IMSharedHelperRetrieveSimDetailsFromTelephony())
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v1;
    void *v1 = v0;
    v1[1] = sub_48900;
    uint64_t v2 = *(void *)(v0 + 24);
    return sub_4555C(v2);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 24);
    swift_release();
    sub_43B14(v4, 0);
    uint64_t v6 = sub_F7470();
    return _swift_task_switch(sub_148FC, v6, v5);
  }
}

uint64_t sub_48900()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_48A20, v3, v2);
}

uint64_t sub_48A20()
{
  swift_release();
  uint64_t v1 = sub_F7470();
  return _swift_task_switch(sub_148FC, v1, v0);
}

uint64_t RCSServiceSession.invitePersonInfo(_:withMessage:toChatID:identifier:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  return sub_47ED8(2, a1, a3, a4, a5, a6, a7);
}

uint64_t RCSServiceSession.removePersonInfo(_:chatID:identifier:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return sub_47ED8(3, a1, a2, a3, a4, a5, a6);
}

BOOL sub_48CBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_48CD4()
{
  Swift::UInt v1 = *v0;
  sub_F7C20();
  sub_F7C30(v1);
  return sub_F7C50();
}

void sub_48D1C()
{
  sub_F7C30(*v0);
}

Swift::Int sub_48D48()
{
  Swift::UInt v1 = *v0;
  sub_F7C20();
  sub_F7C30(v1);
  return sub_F7C50();
}

uint64_t sub_48D8C()
{
  if (*v0) {
    return 0x65766F6D6552;
  }
  else {
    return 6579265;
  }
}

uint64_t sub_48DBC()
{
  uint64_t v1 = v0;
  sub_F78A0(73);
  v20._object = (void *)0x8000000000103080;
  v20._uint64_t countAndFlagsBits = 0xD000000000000016;
  sub_F72E0(v20);
  sub_F6F30();
  sub_27EAC();
  v21._uint64_t countAndFlagsBits = sub_F7B20();
  sub_F72E0(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 0x3D6570797420;
  v22._object = (void *)0xE600000000000000;
  sub_F72E0(v22);
  uint64_t v2 = (int *)_s17ParticipantChangeVMa();
  if (*(unsigned char *)(v0 + v2[6])) {
    v3._uint64_t countAndFlagsBits = 0x65766F6D6552;
  }
  else {
    v3._uint64_t countAndFlagsBits = 6579265;
  }
  if (*(unsigned char *)(v0 + v2[6])) {
    uint64_t v4 = (void *)0xE600000000000000;
  }
  else {
    uint64_t v4 = (void *)0xE300000000000000;
  }
  v3._object = v4;
  sub_F72E0(v3);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 0x3D7461686320;
  v23._object = (void *)0xE600000000000000;
  sub_F72E0(v23);
  id v5 = [*(id *)(v0 + v2[5]) guid];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_F7220();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0x296C6C756E28;
    uint64_t v9 = (void *)0xE600000000000000;
  }
  v24._uint64_t countAndFlagsBits = v7;
  v24._object = v9;
  sub_F72E0(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 0x6963697472617020;
  v25._object = (void *)0xEF5B3D73746E6170;
  sub_F72E0(v25);
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_49B6C(v10);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = sub_F7420();
  sub_F72E0(v26);
  swift_release();
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 0x3D6D6F7266205DLL;
  v27._object = (void *)0xE700000000000000;
  sub_F72E0(v27);
  unint64_t v11 = (uint64_t *)(v1 + v2[8]);
  uint64_t v12 = v11[1];
  if (v12) {
    uint64_t v13 = *v11;
  }
  else {
    uint64_t v13 = 0x296C6C756E28;
  }
  if (v12) {
    uint64_t v14 = (void *)v11[1];
  }
  else {
    uint64_t v14 = (void *)0xE600000000000000;
  }
  swift_bridgeObjectRetain();
  v28._uint64_t countAndFlagsBits = v13;
  v28._object = v14;
  sub_F72E0(v28);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 1030714400;
  v29._object = (void *)0xE400000000000000;
  sub_F72E0(v29);
  uint64_t v15 = (uint64_t *)(v1 + v2[9]);
  uint64_t v16 = v15[1];
  if (v16) {
    uint64_t v17 = *v15;
  }
  else {
    uint64_t v17 = 0x296C6C756E28;
  }
  if (v16) {
    uint64_t v18 = (void *)v15[1];
  }
  else {
    uint64_t v18 = (void *)0xE600000000000000;
  }
  swift_bridgeObjectRetain();
  v30._uint64_t countAndFlagsBits = v17;
  v30._object = v18;
  sub_F72E0(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 62;
  v31._object = (void *)0xE100000000000000;
  sub_F72E0(v31);
  return 0;
}

id sub_4907C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int16 a14)
{
  Swift::String v25 = (void *)sub_F71A0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v15 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v16 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_F6F10();
  if (a13)
  {
    Swift::String v20 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::String v20 = 0;
  }
  LOWORD(v24) = a14 & 0x101;
  id v21 = objc_msgSend(v27, "initWithChangeType:changedParticipants:sender:service:groupID:originalGroupID:guid:destinationCallerID:failed:fromMe:", a1, v25, v15, v16, v17, v18, v19, v20, v24);

  uint64_t v22 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a11, v22);
  return v21;
}

uint64_t sub_49260()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_492A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_57A4;
  return sub_448F0(a1, v4, v5, v7, v6);
}

void *sub_49368(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_F6F30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v11 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[9];
    uint64_t v16 = a3[10];
    uint64_t v17 = (void *)((char *)a1 + v15);
    uint64_t v18 = (void *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
    id v20 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_49498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_49538(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  id v19 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_49618(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_4972C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  return a1;
}

uint64_t sub_497D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_498BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_498D0);
}

uint64_t sub_498D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_F6F30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_49990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_499A4);
}

uint64_t sub_499A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_F6F30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t _s17ParticipantChangeVMa()
{
  uint64_t result = qword_1285E0;
  if (!qword_1285E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_49AAC()
{
  uint64_t result = sub_F6F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_49B6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_551C(&qword_128260);
  Swift::String v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_49C54((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_44A8();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t sub_49C54(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_49E54(uint64_t a1)
{
  id v72 = (int *)_s17ParticipantChangeVMa();
  uint64_t v2 = __chkstk_darwin(v72);
  uint64_t v66 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v65 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v65 - v7;
  uint64_t v9 = sub_F70F0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  sub_2B33C(a1, (uint64_t)v8);
  sub_2B33C(a1, (uint64_t)v6);
  int64_t v14 = sub_F70D0();
  os_log_type_t v15 = sub_F7670();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v74 = v69;
    *(_DWORD *)uint64_t v16 = 136446466;
    int64_t v68 = v16 + 4;
    sub_F6F30();
    uint64_t v70 = v9;
    sub_27EAC();
    uint64_t v17 = sub_F7B20();
    uint64_t v73 = sub_A3FC(v17, v18, &v74);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_2B3A0((uint64_t)v8);
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v19 = sub_48DBC();
    uint64_t v73 = sub_A3FC(v19, v20, &v74);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_2B3A0((uint64_t)v6);
    _os_log_impl(&dword_0, v14, v15, "Internalizing participant change %{public}s: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v70);
  }
  else
  {
    sub_2B3A0((uint64_t)v8);
    sub_2B3A0((uint64_t)v6);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v21 = v72[7];
  uint64_t v22 = (uint64_t *)(a1 + v72[8]);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v65 = v24;
  uint64_t v70 = v23;
  uint64_t v25 = *(void *)(a1 + v21);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v67 = v25 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v68 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v69 = v25;
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  while (1)
  {
    if (v29)
    {
      unint64_t v33 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v34 = v33 | (v30 << 6);
      goto LABEL_25;
    }
    int64_t v35 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v35 >= v68) {
      goto LABEL_47;
    }
    unint64_t v36 = *(void *)(v67 + 8 * v35);
    ++v30;
    if (!v36)
    {
      int64_t v30 = v35 + 1;
      if (v35 + 1 >= v68) {
        goto LABEL_47;
      }
      unint64_t v36 = *(void *)(v67 + 8 * v30);
      if (!v36)
      {
        int64_t v30 = v35 + 2;
        if (v35 + 2 >= v68) {
          goto LABEL_47;
        }
        unint64_t v36 = *(void *)(v67 + 8 * v30);
        if (!v36) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v29 = (v36 - 1) & v36;
    unint64_t v34 = __clz(__rbit64(v36)) + (v30 << 6);
LABEL_25:
    uint64_t v38 = (void *)(*(void *)(v69 + 48) + 16 * v34);
    id v39 = (void *)(a1 + v72[9]);
    uint64_t v40 = v39[1];
    if (v40 && (*v38 == *v39 ? (BOOL v41 = v40 == v38[1]) : (BOOL v41 = 0), v41 || (sub_F7B60() & 1) != 0))
    {
      id v42 = *(void **)(a1 + v72[5]);
      if (*(unsigned char *)(a1 + v72[6]) == 1)
      {
        swift_bridgeObjectRetain();
        id v43 = [v42 chatIdentifier];
        if (!v43) {
          goto LABEL_50;
        }
        BOOL v44 = v43;
        id v45 = [v42 style];
        id v46 = v71;
        id v47 = [v71 account];
        id v48 = (void *)sub_F71F0();
        swift_bridgeObjectRelease();
        [v46 didLeaveChat:v44 style:v45 account:v47 messageID:v48];
      }
      else
      {
        id v55 = [*(id *)(a1 + v72[5]) chatIdentifier];
        if (!v55) {
          goto LABEL_51;
        }
        uint64_t v56 = v55;
        id v57 = [v42 style];
        [v71 didJoinChat:v56 style:v57];
      }
    }
    else
    {
      id v49 = objc_allocWithZone((Class)IMDChatMemberStatusChangeContext);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v50 = objc_msgSend(v49, "init", v65);
      uint64_t v51 = v50;
      if (*(unsigned char *)(a1 + v72[6])) {
        uint64_t v52 = 3;
      }
      else {
        uint64_t v52 = 2;
      }
      [v50 setStatus:v52];
      uint64_t v53 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      [v51 setHandleID:v53];

      if (v70) {
        unint64_t v54 = (void *)sub_F71F0();
      }
      else {
        unint64_t v54 = 0;
      }
      [v51 setFromHandleID:v54];

      int v58 = *(void **)(a1 + v72[5]);
      id v59 = [v58 chatIdentifier];
      [v51 setChatIdentifier:v59];

      objc_msgSend(v51, "setStyle:", objc_msgSend(v58, "style"));
      id v60 = [v71 account];
      [v51 setAccount:v60];

      if (v40) {
        id v61 = (void *)sub_F71F0();
      }
      else {
        id v61 = 0;
      }
      [v51 setDestinationCallerID:v61];

      id v62 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      [v51 setMessageID:v62];

      uint64_t v63 = v66;
      sub_2B33C(a1, v66);
      if (v70) {
        char v31 = 0;
      }
      else {
        char v31 = *(unsigned char *)(v63 + v72[10]) ^ 1;
      }
      sub_2B3A0(v63);
      [v51 setUnattributed:v31 & 1];
      id v32 = [v71 didChangeMemberStatus:v51];
    }
  }
  int64_t v37 = v35 + 3;
  if (v37 >= v68)
  {
LABEL_47:
    swift_release();
    id v64 = objc_msgSend(self, "sharedInstance", v65);
    [v64 storeChat:*(void *)(a1 + v72[5])];

    return;
  }
  unint64_t v36 = *(void *)(v67 + 8 * v37);
  if (v36)
  {
    int64_t v30 = v37;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v30 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v30 >= v68) {
      goto LABEL_47;
    }
    unint64_t v36 = *(void *)(v67 + 8 * v30);
    ++v37;
    if (v36) {
      goto LABEL_24;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

uint64_t sub_4A6A8()
{
  uint64_t v1 = (int *)(_s17ParticipantChangeVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_4A7D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s17ParticipantChangeVMa() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_46BC;
  return sub_48754(a1, v5, v6, v7, v8);
}

uint64_t sub_4A8D0(uint64_t a1)
{
  return a1;
}

void sub_4A924(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {
  }
}

uint64_t sub_4A94C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_8C18(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4A990(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_127FF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_4A9F0()
{
  unint64_t result = qword_128668;
  if (!qword_128668)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_128668);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for RCSHandle.Attribute(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s17ParticipantChangeV10ChangeTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17ParticipantChangeV10ChangeTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4AB98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_4ABC0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_4ABC8(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *_s17ParticipantChangeV10ChangeTypeOMa()
{
  return &_s17ParticipantChangeV10ChangeTypeON;
}

unint64_t sub_4ABE8()
{
  unint64_t result = qword_128670;
  if (!qword_128670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128670);
  }
  return result;
}

uint64_t RCSServiceSession.resolveGroupIdentity(for:subscriptionContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  sub_F74E0();
  v4[8] = sub_F74D0();
  uint64_t v6 = sub_F7470();
  v4[9] = v6;
  v4[10] = v5;
  return _swift_task_switch(sub_4ACDC, v6, v5);
}

void sub_4ACDC()
{
  uint64_t v1 = *(void *)(*(void *)(v0[7] + OBJC_IVAR___RCSServiceSession_state) + 40);
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = v0[6];
    v0[2] = v0[5];
    v0[3] = v2;
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[12] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_4ADC4;
    uint64_t v4 = v0[4];
    RCSGroupController.resolveGroupIdentity(for:subscriptionContext:)(v4, (uint64_t)(v0 + 2), (uint64_t)(v0 + 3));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_4ADC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_4AF60;
  }
  else {
    uint64_t v5 = sub_4AEFC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_4AEFC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4AF60()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_4AFC4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C((uint64_t *)&unk_128130);
  uint64_t v2 = sub_F79E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2C4C0(v6, (uint64_t)v15, &qword_128758);
    unint64_t result = sub_1C978((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1EBC4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4B108(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_128570);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C9BC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4B224(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_128760);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C9BC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4B338(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_128278);
  uint64_t v2 = sub_F79E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2C4C0(v6, (uint64_t)&v15, &qword_128558);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C9BC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1EBC4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4B470(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_128528);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C9BC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4B594(uint64_t a1)
{
  return sub_4B5AC(a1, &qword_128520);
}

unint64_t sub_4B5A0(uint64_t a1)
{
  return sub_4B5AC(a1, &qword_128728);
}

unint64_t sub_4B5AC(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(a2);
  uint64_t v3 = (void *)sub_F79E0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1C9BC(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_4B6C4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_128530);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2C4C0(v4, (uint64_t)&v21, &qword_128720);
    uint64_t v5 = v21;
    uint64_t v6 = v22;
    unint64_t result = sub_1C9BC(v21, v22);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v9 = (uint64_t *)(v2[6] + 16 * result);
    *id v9 = v5;
    v9[1] = v6;
    char v10 = (_OWORD *)(v2[7] + 160 * result);
    long long v11 = v24;
    *char v10 = v23;
    v10[1] = v11;
    long long v12 = v25;
    long long v13 = v26;
    long long v14 = v28;
    v10[4] = v27;
    v10[5] = v14;
    v10[2] = v12;
    v10[3] = v13;
    long long v15 = v29;
    long long v16 = v30;
    long long v17 = v32;
    v10[8] = v31;
    v10[9] = v17;
    v10[6] = v15;
    v10[7] = v16;
    uint64_t v18 = v2[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v2[2] = v20;
    v4 += 176;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id RCSServiceSession.subscriptionInfo(for:)(void *a1)
{
  id v1 = a1;
  id v2 = [v1 phoneNumber];
  if (v2)
  {
    uint64_t v3 = sub_F7220();
    uint64_t v5 = v4;

    unint64_t v6 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
    v7._uint64_t countAndFlagsBits = 7103860;
    v7._object = (void *)0xE300000000000000;
    v8._uint64_t countAndFlagsBits = v3;
    v8._object = v5;
    RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v13, v7, v8, (Swift::OpaquePointer)v6, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    __chkstk_darwin(v9);
    RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1E93C, &v14);
    sub_6D20((uint64_t)&v13);
    id v2 = v15;
    swift_bridgeObjectRetain();
    sub_6D20((uint64_t)&v14);
  }
  id v10 = [v1 labelID];
  if (v10)
  {
    long long v11 = v10;
    sub_F7220();
  }
  else
  {
  }
  return v2;
}

id RCSServiceSession.identifier(for:)(void *a1)
{
  id result = [a1 chatIdentifier];
  if (result)
  {
    id v2 = result;
    uint64_t v3 = sub_F7220();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id RCSServiceSession.style(for:)(void *a1)
{
  return [a1 style];
}

Swift::Int64 __swiftcall RCSServiceSession.maxThumbnailSize()()
{
  return 10240;
}

void RCSServiceSession.maxTransferSize(for:for:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_F70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self fetchSizeLimitsForTransfer:a1];
  sub_6CA4(0, (unint64_t *)&qword_128248);
  unint64_t v13 = sub_F7410();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_F79B0();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_3;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    long long v16 = _swiftEmptyArrayStorage;
    unint64_t v22 = _swiftEmptyArrayStorage[2];
    if (v22) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
  uint64_t v14 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
  if (!v14) {
    goto LABEL_24;
  }
LABEL_3:
  uint64_t v52 = _swiftEmptyArrayStorage;
  sub_4FF28(0, v14 & ~(v14 >> 63), 0);
  if (v14 < 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  id v45 = a1;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  id v48 = v4;
  id v49 = v11;
  uint64_t v50 = v9;
  uint64_t v15 = 0;
  long long v16 = v52;
  do
  {
    if ((v13 & 0xC000000000000001) != 0) {
      id v17 = (id)sub_F78D0();
    }
    else {
      id v17 = *(id *)(v13 + 8 * v15 + 32);
    }
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, "longLongValue", v45, v46, v47, v48);

    uint64_t v52 = v16;
    unint64_t v21 = v16[2];
    unint64_t v20 = v16[3];
    if (v21 >= v20 >> 1)
    {
      sub_4FF28(v20 > 1, v21 + 1, 1);
      long long v16 = v52;
    }
    ++v15;
    v16[2] = v21 + 1;
    v16[v21 + 4] = v19;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  long long v11 = v49;
  uint64_t v9 = v50;
  a3 = v47;
  a1 = v45;
  a2 = v46;
  unint64_t v22 = v16[2];
  if (v22)
  {
LABEL_12:
    int64_t v23 = v16[4];
    unint64_t v24 = v22 - 1;
    if (v22 != 1)
    {
      if (v22 < 5)
      {
        unint64_t v25 = 1;
        goto LABEL_18;
      }
      unint64_t v25 = v24 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v26 = vdupq_n_s64(v23);
      long long v27 = (int64x2_t *)(v16 + 7);
      unint64_t v28 = v24 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v29 = v26;
      do
      {
        int64x2_t v26 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v26, v27[-1]), (int8x16_t)v26, (int8x16_t)v27[-1]);
        int64x2_t v29 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v29, *v27), (int8x16_t)v29, *(int8x16_t *)v27);
        v27 += 2;
        v28 -= 4;
      }
      while (v28);
      int8x16_t v30 = vbslq_s8((int8x16_t)vcgtq_s64(v26, v29), (int8x16_t)v26, (int8x16_t)v29);
      uint64_t v31 = vextq_s8(v30, v30, 8uLL).u64[0];
      int64_t v23 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v30.i64[0], v31), *(int8x8_t *)v30.i8, (int8x8_t)v31);
      if (v24 != (v24 & 0xFFFFFFFFFFFFFFFCLL))
      {
LABEL_18:
        unint64_t v32 = v22 - v25;
        unint64_t v33 = &v16[v25 + 4];
        do
        {
          int64_t v35 = *v33++;
          int64_t v34 = v35;
          if (v23 <= v35) {
            int64_t v23 = v34;
          }
          --v32;
        }
        while (v32);
      }
    }
    swift_bridgeObjectRelease();
    sub_BB90(a2, a3);
    return;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v36 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v36, v8);
  id v4 = a1;
  int64_t v37 = sub_F70D0();
  os_log_type_t v38 = sub_F7690();
  if (!os_log_type_enabled(v37, v38))
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return;
  }
  id v49 = v11;
  uint64_t v50 = v9;
  uint64_t v39 = swift_slowAlloc();
  uint64_t v52 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v39 = 136315394;
  id v40 = [v4 mimeType];
  if (v40)
  {
    BOOL v41 = v40;
    uint64_t v42 = sub_F7220();
    unint64_t v44 = v43;

    uint64_t v51 = sub_A3FC(v42, v44, (uint64_t *)&v52);
    sub_F77B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2048;
    uint64_t v51 = 104857600;
    sub_F77B0();
    _os_log_impl(&dword_0, v37, v38, "Could not fetch expected size limits for %s, defaulting to %lld", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v8);
    return;
  }
LABEL_30:

  __break(1u);
}

id RCSServiceSession.transfer(forGUID:)()
{
  id result = [self sharedInstance];
  if (result)
  {
    id v1 = result;
    id v2 = (void *)sub_F71F0();
    id v3 = [v1 transferForGUID:v2];

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t RCSServiceSession.transcodeTransfer(transfer:for:isAudioMessage:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 616) = a4;
  *(void *)(v5 + 496) = a3;
  *(void *)(v5 + 504) = v4;
  *(void *)(v5 + 480) = a1;
  *(void *)(v5 + 488) = a2;
  uint64_t v6 = sub_F70F0();
  *(void *)(v5 + 512) = v6;
  *(void *)(v5 + 520) = *(void *)(v6 - 8);
  *(void *)(v5 + 528) = swift_task_alloc();
  *(void *)(v5 + 536) = sub_F74E0();
  *(void *)(v5 + 544) = sub_F74D0();
  uint64_t v8 = sub_F7470();
  *(void *)(v5 + 552) = v8;
  *(void *)(v5 + 560) = v7;
  return _swift_task_switch(sub_4C0A4, v8, v7);
}

uint64_t sub_4C0A4()
{
  uint64_t v53 = v0;
  char ThumbnailForySbSo14IMFileTransferCF_0 = _sSo17RCSServiceSessionC3RCSE24shouldCreateThumbnailForySbSo14IMFileTransferCF_0(*(void **)(v0 + 480));
  sub_551C(&qword_128688);
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v4 = *(void **)(v0 + 480);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v5 = swift_allocObject();
  if (ThumbnailForySbSo14IMFileTransferCF_0)
  {
    *(_OWORD *)(v5 + 16) = xmmword_F8F10;
    RCSServiceSession.maxTransferSize(for:for:)(v4, v3, v2);
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = 10240;
  }
  else
  {
    *(_OWORD *)(v5 + 16) = xmmword_F8F20;
    RCSServiceSession.maxTransferSize(for:for:)(v4, v3, v2);
    *(void *)(v5 + 32) = v7;
  }
  uint64_t v8 = v0 + 136;
  uint64_t v9 = (_OWORD *)(v0 + 248);
  *(void *)(v0 + 568) = v5;
  uint64_t v10 = *(void *)(v0 + 528);
  uint64_t v11 = *(void *)(v0 + 520);
  uint64_t v12 = *(void *)(v0 + 512);
  uint64_t v13 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_F70D0();
  os_log_type_t v15 = sub_F7670();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(void *)(v0 + 528);
  uint64_t v18 = *(void *)(v0 + 520);
  if (v16)
  {
    uint64_t v50 = *(void *)(v0 + 512);
    uint64_t v51 = *(void *)(v0 + 528);
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)id v19 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_F7420();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 472) = sub_A3FC(v20, v22, &v52);
    uint64_t v9 = (_OWORD *)(v0 + 248);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v14, v15, "Transcoding to %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v0 + 136;
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v51, v50);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 512);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v23);
  }
  uint64_t v24 = v0 + 464;
  unint64_t v25 = *(void **)(v0 + 480);
  sub_551C(&qword_128540);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_F8F10;
  *(void *)(inited + 32) = sub_F7220();
  *(void *)(inited + 40) = v27;
  *(void *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_F7220();
  *(void *)(inited + 64) = v28;
  *(void *)(inited + 72) = 0;
  unint64_t v29 = sub_4B224(inited);
  *(void *)(v0 + 576) = v29;
  id v30 = [v25 transcoderUserInfo];
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = sub_F71B0();
  }
  else
  {
    uint64_t v32 = sub_4AFC4((uint64_t)_swiftEmptyArrayStorage);
  }
  char v33 = *(unsigned char *)(v0 + 616);
  int64_t v34 = *(void **)(v0 + 480);
  *(void *)(v0 + 440) = sub_F7220();
  *(void *)(v0 + 448) = v35;
  sub_F7860();
  *(void *)(v0 + 240) = &type metadata for Bool;
  *(unsigned char *)(v0 + 216) = v33;
  sub_1EBC4((_OWORD *)(v0 + 216), v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = v32;
  sub_1D2AC(v9, v8, isUniquelyReferenced_nonNull_native);
  uint64_t v37 = v52;
  *(void *)(v0 + 464) = v52;
  swift_bridgeObjectRelease();
  sub_1EC30(v8);
  if ([v34 isAdaptiveImageGlyph])
  {
    *(void *)(v0 + 408) = sub_F7220();
    *(void *)(v0 + 416) = v38;
    sub_F7860();
    *(void *)(v0 + 400) = &type metadata for Bool;
    *(unsigned char *)(v0 + 376) = 1;
    sub_1EBC4((_OWORD *)(v0 + 376), (_OWORD *)(v0 + 344));
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = v37;
    sub_1D2AC((_OWORD *)(v0 + 344), v0 + 96, v39);
    uint64_t v40 = v52;
    swift_bridgeObjectRelease();
    uint64_t v24 = v0 + 464;
    sub_1EC30(v0 + 96);
    *(void *)(v0 + 424) = sub_F7220();
    *(void *)(v0 + 432) = v41;
    sub_F7860();
    *(void *)(v0 + 304) = &type metadata for Bool;
    *(unsigned char *)(v0 + 280) = 1;
    sub_1EBC4((_OWORD *)(v0 + 280), (_OWORD *)(v0 + 312));
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = v40;
    sub_1D2AC((_OWORD *)(v0 + 312), v0 + 176, v42);
    *(void *)(v0 + 464) = v52;
    swift_bridgeObjectRelease();
    sub_1EC30(v0 + 176);
  }
  uint64_t v43 = *(void *)(v0 + 504);
  uint64_t v44 = *(void *)(v0 + 480);
  uint64_t v45 = sub_F74D0();
  *(void *)(v0 + 584) = v45;
  uint64_t v46 = swift_task_alloc();
  *(void *)(v0 + 592) = v46;
  *(void *)(v46 + 16) = v44;
  *(void *)(v46 + 24) = _swiftEmptyArrayStorage;
  *(void *)(v46 + 32) = v5;
  *(void *)(v46 + 40) = v29;
  *(void *)(v46 + 48) = v24;
  *(unsigned char *)(v46 + 56) = 0;
  *(void *)(v46 + 64) = v43;
  uint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 600) = v47;
  uint64_t v48 = sub_551C(&qword_128690);
  *uint64_t v47 = v0;
  v47[1] = sub_4C6FC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 456, v45, &protocol witness table for MainActor, 0xD00000000000002FLL, 0x8000000000103110, sub_50800, v46, v48);
}

uint64_t sub_4C6FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 608) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 560);
    uint64_t v4 = *(void *)(v2 + 552);
    uint64_t v5 = sub_4C8C8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 560);
    uint64_t v4 = *(void *)(v2 + 552);
    uint64_t v5 = sub_4C84C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_4C84C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 456);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_4C8C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_4C980(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8)
{
  id v15 = [self sharedInstance];
  if (v15)
  {
    uint64_t v59 = a4;
    uint64_t v60 = a1;
    id v61 = a8;
    id v62 = v15;
    id v16 = [a2 localURL];
    uint64_t v17 = sub_551C(&qword_128300);
    int v58 = &v51;
    __chkstk_darwin(v17 - 8);
    id v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v16)
    {
      uint64_t v20 = sub_F6DC0();
      uint64_t v57 = a5;
      uint64_t v21 = *(void *)(v20 - 8);
      __chkstk_darwin(v20);
      char v23 = a7;
      uint64_t v24 = a2;
      unint64_t v25 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_F6D80();

      int64x2_t v26 = v25;
      a2 = v24;
      a7 = v23;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v19, v26, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
      a5 = v57;
      uint64_t v27 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
      {
        uint64_t v27 = sub_F6D70();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
      }
    }
    else
    {
      uint64_t v28 = sub_F6DC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v19, 1, 1, v28);
      uint64_t v27 = 0;
    }
    uint64_t v54 = (void *)v27;
    int v58 = (uint64_t *)[a2 type];
    LODWORD(v57) = [a2 isSticker];
    sub_3133C(a3);
    unint64_t v29 = a2;
    uint64_t v56 = sub_F7400();
    swift_bridgeObjectRelease();
    uint64_t v30 = v59;
    sub_31464(v59);
    uint64_t v55 = sub_F7400();
    swift_bridgeObjectRelease();
    sub_1C008(a5);
    uint64_t v53 = sub_F71A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_F71A0();
    swift_bridgeObjectRelease();
    uint64_t v51 = 2 * (*(void *)(v30 + 16) > 1uLL);
    uint64_t v31 = sub_551C(&qword_128748);
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v33 = *(void *)(v32 + 64);
    __chkstk_darwin(v31);
    int64_t v34 = (char *)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v60, v31);
    unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    unint64_t v36 = (v33 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v30;
    *(void *)(v37 + 24) = v29;
    char v38 = a7 & 1;
    *(unsigned char *)(v37 + 32) = v38;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v37 + v35, v34, v31);
    char v39 = v61;
    *(void *)(v37 + v36) = v61;
    aBlock[4] = sub_50E80;
    aBlock[5] = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_4E7A4;
    aBlock[3] = &unk_11E5C0;
    uint64_t v40 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v41 = v29;
    id v42 = v39;
    swift_release();
    LOBYTE(v50) = v38;
    uint64_t v43 = (void *)v52;
    uint64_t v44 = (void *)v53;
    id v45 = v62;
    uint64_t v47 = v54;
    uint64_t v46 = (void *)v55;
    uint64_t v48 = v58;
    id v49 = (void *)v56;
    [v62 transcodeFileTransferContents:v54 utiType:v58 isSticker:v57 allowUnfilteredUTIs:v56 target:2 sizes:v55 commonCapabilities:v53 maxDimension:-1 transcoderUserInfo:v52 representations:v51 isLQMEnabled:v50 completionBlock:v40];
    _Block_release(v40);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_4CF24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, int a6, void (*a7)(void, void), void *a8, void *a9, unsigned __int8 a10, uint64_t a11, void *a12)
{
  uint64_t v125 = (void *)a3;
  uint64_t v126 = a7;
  int v123 = a6;
  id v124 = a2;
  uint64_t v127 = (void *)a1;
  uint64_t v132 = a11;
  id v133 = a9;
  uint64_t v16 = sub_F70F0();
  uint64_t v134 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  id v19 = (char *)v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v113 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v113 - v23;
  uint64_t v25 = a8[2];
  if (v25)
  {
    uint64_t v128 = (char *)v113 - v23;
    unint64_t v129 = v22;
    uint64_t v131 = a4;
    int v26 = a5;
    v136[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_F7920();
    uint64_t v27 = a8 + 4;
    do
    {
      uint64_t v28 = *v27++;
      [objc_allocWithZone((Class)NSNumber) initWithLongLong:v28];
      uint64_t v12 = (char *)v136;
      sub_F7900();
      a8 = *(void **)(v136[0] + 16);
      sub_F7930();
      sub_F7940();
      sub_F7910();
      --v25;
    }
    while (v25);
    uint64_t v130 = (void *)v136[0];
    a5 = v26;
    uint64_t v24 = v128;
    uint64_t v22 = v129;
    a4 = v131;
  }
  else
  {
    uint64_t v130 = _swiftEmptyArrayStorage;
  }
  uint64_t v29 = v134;
  LODWORD(v131) = a10;
  if ((a5 & 1) == 0 && a4)
  {
    uint64_t v30 = self;
    swift_errorRetain();
    id v31 = [v30 sharedInstance];
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = v133;
      id v34 = [v133 localURL];
      uint64_t v35 = sub_551C(&qword_128300);
      __chkstk_darwin(v35 - 8);
      uint64_t v12 = (char *)v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v34)
      {
        uint64_t v37 = sub_F6DC0();
        a8 = v113;
        uint64_t v38 = *(void *)(v37 - 8);
        __chkstk_darwin(v37);
        uint64_t v40 = (char *)v113 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_F6D80();

        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v12, v40, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v12, 0, 1, v37);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v12, 1, v37) != 1)
        {
          id v41 = (void *)sub_F6D70();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v37);
          sub_6CA4(0, (unint64_t *)&qword_128248);
          id v42 = (void *)sub_F7400();
          swift_bridgeObjectRelease();
          id v43 = [v33 isSticker];
          [v32 trackRCSTranscodeFailureWithReason:2 sourceFile:v41 sizeLimits:v42 isSticker:v43 lowQualityModeEnabled:v131 & 1];

          v136[0] = a4;
LABEL_30:
          sub_551C(&qword_128748);
          return sub_F7480();
        }
        goto LABEL_45;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v110 = sub_F6DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v12, 1, 1, v110);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  LODWORD(v121) = a5;
  v122 = v19;
  uint64_t v44 = v126;
  if (v125)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v24, v45, v16);
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_F70D0();
    os_log_type_t v47 = sub_F7670();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      unint64_t v129 = (char *)swift_slowAlloc();
      v136[0] = (uint64_t)v129;
      *(_DWORD *)uint64_t v48 = 136315138;
      uint64_t v119 = v48 + 4;
      swift_bridgeObjectRetain();
      unint64_t v120 = (void (*)(char *, char *, uint64_t))((char *)&type metadata for Any + 8);
      uint64_t v49 = sub_F7420();
      uint64_t v128 = v24;
      uint64_t v50 = v16;
      uint64_t v51 = v49;
      unint64_t v53 = v52;
      swift_bridgeObjectRelease();
      uint64_t v54 = v51;
      uint64_t v16 = v50;
      uint64_t v135 = sub_A3FC(v54, v53, v136);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v46, v47, "Transcoder got outputContext %s", v48, 0xCu);
      swift_arrayDestroy();
      uint64_t v29 = v134;
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v29 + 8))(v128, v50);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v16);
    }
  }
  if (v44)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v22, v55, v16);
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_F70D0();
    os_log_type_t v57 = sub_F7670();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      unint64_t v129 = v22;
      uint64_t v59 = (uint8_t *)v58;
      v136[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136315138;
      uint64_t v128 = (char *)(v59 + 4);
      swift_bridgeObjectRetain();
      uint64_t v60 = v16;
      uint64_t v61 = sub_F71C0();
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      uint64_t v64 = v61;
      uint64_t v16 = v60;
      uint64_t v135 = sub_A3FC(v64, v63, v136);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v56, v57, "Transcoder got additionalOutputContext %s", v59, 0xCu);
      uint64_t v29 = v134;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v29 + 8))(v129, v60);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v16);
    }
  }
  a4 = sub_F6DC0();
  uint64_t v128 = (char *)v113;
  a8 = *(void **)(a4 - 8);
  uint64_t v65 = a8[8];
  __chkstk_darwin(a4);
  uint64_t v66 = sub_551C(&qword_128300);
  uint64_t v67 = *(void *)(*(void *)(v66 - 8) + 64);
  __chkstk_darwin(v66 - 8);
  uint64_t v12 = (char *)v113 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2C4C0((uint64_t)v127, (uint64_t)v12, &qword_128300);
  int64_t v68 = (char *)a8[6];
  uint64_t v127 = a8 + 6;
  unint64_t v129 = v68;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v68)(v12, 1, a4) == 1)
  {
    sub_1E944((uint64_t)v113 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_128300);
    goto LABEL_26;
  }
  unint64_t v120 = (void (*)(char *, char *, uint64_t))a8[4];
  v120((char *)v113 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v113 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  if (!v124)
  {
    ((void (*)(char *, uint64_t))a8[1])((char *)v113 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
LABEL_26:
    id v85 = v133;
    id v86 = [self sharedInstance];
    if (v86)
    {
      Swift::String v87 = v86;
      id v88 = [v85 localURL];
      uint64_t v89 = __chkstk_darwin(v88);
      uint64_t v12 = (char *)v113 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v89)
      {
        __chkstk_darwin(v89);
        sub_F6D80();

        ((void (*)(char *, char *, uint64_t))a8[4])((char *)v113 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v113 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
        ((void (*)(char *, void, uint64_t, uint64_t))a8[7])((char *)v113 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, a4);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v129)((char *)v113 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0), 1, a4) != 1)
        {
          Swift::String v90 = (void *)sub_F6D70();
          ((void (*)(char *, uint64_t))a8[1])(v12, a4);
          sub_6CA4(0, (unint64_t *)&qword_128248);
          Swift::String v91 = (void *)sub_F7400();
          swift_bridgeObjectRelease();
          id v92 = [v85 isSticker];
          [v87 trackRCSTranscodeFailureWithReason:2 sourceFile:v90 sizeLimits:v91 isSticker:v92 lowQualityModeEnabled:v131 & 1];

          sub_50F78();
          v136[0] = swift_allocError();
          goto LABEL_30;
        }
        goto LABEL_48;
      }
LABEL_47:
      unint64_t v111 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a8[7];
      a8 += 7;
      v111(v12, 1, 1, a4);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  id v118 = a8 + 4;
  uint64_t v119 = a12;
  uint64_t v69 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v70 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 16))(v122, v69, v16);
  uint64_t v125 = v113;
  __chkstk_darwin(v70);
  id v71 = (void (*)(char *, char *, uint64_t))a8[2];
  long long v117 = (char *)v113 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71(v117, v117, a4);
  swift_bridgeObjectRetain_n();
  id v72 = sub_F70D0();
  os_log_type_t v73 = sub_F7670();
  int v74 = v73;
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v75 = swift_slowAlloc();
    int v116 = v74;
    uint64_t v76 = v75;
    uint64_t v115 = swift_slowAlloc();
    v136[0] = v115;
    *(_DWORD *)uint64_t v76 = 67109890;
    LODWORD(v135) = v121 & 1;
    v113[0] = (char *)&v135 + 4;
    sub_F77B0();
    *(_WORD *)(v76 + 8) = 2080;
    sub_50D40();
    os_log_t v114 = v72;
    uint64_t v77 = sub_F7B20();
    uint64_t v121 = v16;
    uint64_t v135 = sub_A3FC(v77, v78, v136);
    v113[1] = v136;
    sub_F77B0();
    swift_bridgeObjectRelease();
    uint64_t v126 = (void (*)(void, void))a8[1];
    v126((char *)v113 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
    *(_WORD *)(v76 + 18) = 1024;
    LODWORD(v135) = v123 & 1;
    sub_F77B0();
    *(_WORD *)(v76 + 24) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_F7420();
    unint64_t v81 = v80;
    swift_bridgeObjectRelease();
    uint64_t v135 = sub_A3FC(v79, v81, v136);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v82 = v114;
    _os_log_impl(&dword_0, v114, (os_log_type_t)v116, "Transcoder success %{BOOL}d for %s, attempted transcode %{BOOL}d generated %s ", (uint8_t *)v76, 0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v83 = v133;
    swift_slowDealloc();

    uint64_t v84 = (*(uint64_t (**)(void *, uint64_t))(v134 + 8))(v122, v121);
  }
  else
  {
    uint64_t v126 = (void (*)(void, void))a8[1];
    v126((char *)v113 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0), a4);

    swift_bridgeObjectRelease_n();
    uint64_t v84 = (*(uint64_t (**)(void *, uint64_t))(v29 + 8))(v122, v16);
    id v83 = v133;
  }
  __chkstk_darwin(v84);
  unint64_t v94 = (v67 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v134 = __chkstk_darwin((char *)v113 - v94);
  uint64_t v125 = (void *)((char *)v113 - v94);
  uint64_t v12 = sub_4E1DC(v134, (uint64_t)v113 - v94, v95);
  id v124 = [self sharedInstance];
  if (!v124) {
    goto LABEL_49;
  }
  uint64_t v121 = (uint64_t)v12;
  v122 = v113;
  id v96 = [v83 localURL];
  uint64_t v97 = __chkstk_darwin(v96);
  uint64_t v12 = (char *)v113 - v94;
  if (!v97)
  {
LABEL_50:
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))a8[7])(v12, 1, 1, a4);
    goto LABEL_51;
  }
  uint64_t v119 = v113;
  __chkstk_darwin(v97);
  sub_F6D80();

  v120((char *)v113 - v94, (char *)v113 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  ((void (*)(char *, void, uint64_t, uint64_t))a8[7])((char *)v113 - v94, 0, 1, a4);
  uint64_t v98 = v129;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v129)((char *)v113 - v94, 1, a4);
  if (result == 1)
  {
LABEL_51:
    __break(1u);
    return result;
  }
  long long v99 = (void *)sub_F6D70();
  uint64_t v100 = (uint64_t (*)(char *, uint64_t))v126;
  uint64_t v101 = ((uint64_t (*)(char *, uint64_t))v126)(v12, a4);
  __chkstk_darwin(v101);
  unint64_t v102 = (v67 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_2C4C0(v134, (uint64_t)v113 - v102, &qword_128300);
  uint64_t v103 = ((uint64_t (*)(char *, uint64_t, uint64_t))v98)((char *)v113 - v102, 1, a4);
  if (v103 == 1)
  {
    uint64_t v104 = 0;
  }
  else
  {
    uint64_t v104 = (void *)sub_F6D70();
    uint64_t v103 = v100((char *)v113 - v102, a4);
  }
  __chkstk_darwin(v103);
  sub_2C4C0((uint64_t)v125, (uint64_t)v113 - v102, &qword_128300);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v129)((char *)v113 - v102, 1, a4) == 1)
  {
    unint64_t v105 = 0;
    unint64_t v106 = (uint64_t (*)(char *, uint64_t))v126;
  }
  else
  {
    unint64_t v105 = (void *)sub_F6D70();
    unint64_t v106 = (uint64_t (*)(char *, uint64_t))v126;
    v126((char *)v113 - v102, a4);
  }
  sub_6CA4(0, (unint64_t *)&qword_128248);
  id v107 = (void *)sub_F7400();
  swift_bridgeObjectRelease();
  id v108 = [v133 isSticker];
  BYTE1(v112) = v131 & 1;
  LOBYTE(v112) = v123 & 1;
  id v109 = v124;
  objc_msgSend(v124, "trackRCSTranscodeWithReason:sourceFile:highQualityFile:lowQualityFile:sizeLimits:isSticker:transcoded:lowQualityModeEnabled:", 2, v99, v104, v105, v107, v108, v112);

  v136[0] = v121;
  sub_551C(&qword_128748);
  sub_F7490();
  sub_1E944((uint64_t)v125, &qword_128300);
  sub_1E944(v134, &qword_128300);
  return v106(v117, a4);
}

char *sub_4E1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_551C(&qword_128300);
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_F6DC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v8, 1, 1, v9);
  uint64_t v40 = a2;
  uint64_t v56 = v11;
  v11((char *)a2, 1, 1, v9);
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12)
  {
    uint64_t v36 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  os_log_type_t v47 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  uint64_t v13 = a3 + 32;
  uint64_t v55 = *(void *)(v10 + 64);
  unint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  unint64_t v53 = (uint64_t (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v45 = v10;
  uint64_t v42 = v10 + 8;
  id v43 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v38 = a3;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v54 = (char *)_swiftEmptyArrayStorage;
  uint64_t v46 = v7;
  uint64_t v44 = v10 + 56;
  id v41 = (char *)&type metadata for Any + 8;
  do
  {
    __chkstk_darwin(v14);
    uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = sub_BAD8(v13, (uint64_t)v57);
    __chkstk_darwin(v17);
    if (!swift_dynamicCast())
    {
      v56((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v9);
LABEL_4:
      uint64_t v14 = sub_1E944((uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_128300);
      goto LABEL_5;
    }
    v56((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v9);
    uint64_t v50 = *v52;
    if (v50((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v9) == 1) {
      goto LABEL_4;
    }
    uint64_t v49 = &v38;
    uint64_t v51 = *v53;
    uint64_t v18 = v51(v16, (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    uint64_t v48 = &v38;
    uint64_t v19 = v55;
    __chkstk_darwin(v18);
    uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v21 = [self defaultManager];
    uint64_t v22 = (void *)sub_F6D70();
    id v23 = objc_msgSend(v21, "im_generateCopyForURL:", v22);

    sub_F6D80();
    __chkstk_darwin(v24);
    (*v43)(v20, v20, v9);
    unint64_t v25 = (unint64_t)v54;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_352F8(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    uint64_t v54 = (char *)v25;
    uint64_t v28 = (void (*)(char *, char *, uint64_t))v51;
    if (v27 >= v26 >> 1) {
      uint64_t v54 = (char *)sub_352F8(v26 > 1, v27 + 1, 1, (unint64_t)v54);
    }
    uint64_t v29 = v54;
    *((void *)v54 + 2) = v27 + 1;
    uint64_t v30 = v45;
    v28(&v29[((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v45 + 72) * v27], v20, v9);
    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v20, v9);
    uint64_t v7 = v46;
    __chkstk_darwin(v31);
    uint64_t v32 = (uint64_t)v47;
    sub_2C4C0((uint64_t)v47, (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_128300);
    unsigned int v33 = v50((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v9);
    sub_1E944((uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_128300);
    if (v33 == 1)
    {
      sub_1E944(v32, &qword_128300);
      v51((char *)v32, v16, v9);
      uint64_t v34 = v32;
    }
    else
    {
      uint64_t v35 = v40;
      sub_1E944(v40, &qword_128300);
      v51((char *)v35, v16, v9);
      uint64_t v34 = v35;
    }
    uint64_t v14 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v56)(v34, 0, 1, v9);
LABEL_5:
    v13 += 32;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  a1 = v39;
  uint64_t v36 = v54;
  uint64_t v8 = v47;
LABEL_18:
  sub_50FCC((uint64_t)v8, a1);
  return v36;
}

uint64_t sub_4E7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v16 = sub_551C(&qword_128300);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_F6D80();
    uint64_t v19 = sub_F6DC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_F6DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  }
  if (a3) {
    a3 = sub_F7410();
  }
  if (a4) {
    a4 = sub_F7410();
  }
  if (a8) {
    a8 = sub_F71B0();
  }
  swift_retain();
  id v21 = a5;
  v15(v18, a3, a4, a5, a6, a7, a8);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1E944((uint64_t)v18, &qword_128300);
}

uint64_t RCSServiceSession.uploadFile(onSimID:fileURL:thumbURL:isAudioMessage:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1286A0 + dword_1286A0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_2FC8C;
  return v13(a1, a2, a3, a4, a5);
}

void sub_4EA6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7)
{
  int v78 = a7;
  uint64_t v69 = a5;
  uint64_t v77 = a2;
  uint64_t v72 = a1;
  uint64_t v10 = sub_551C(&qword_128738);
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v75 = v10;
  __chkstk_darwin(v10);
  uint64_t v71 = v11;
  os_log_type_t v73 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_F70F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v68 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v17 = sub_F6DC0();
  unint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v70 = a3;
  v21(v20, a3, v17);
  uint64_t v22 = sub_551C(&qword_128300);
  uint64_t v23 = *(void *)(*(void *)(v22 - 8) + 64);
  __chkstk_darwin(v22 - 8);
  unint64_t v67 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v24 = (char *)&v57 - v67;
  uint64_t v76 = a4;
  uint64_t v25 = a4;
  unint64_t v26 = v15;
  sub_2C4C0(v25, (uint64_t)&v57 - v67, &qword_128300);
  swift_bridgeObjectRetain_n();
  unint64_t v27 = sub_F70D0();
  int v28 = sub_F7670();
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    int v60 = v28;
    os_log_t v61 = v27;
    unint64_t v63 = v26;
    unint64_t v65 = a6;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    aBlock[0] = v59;
    *(_DWORD *)uint64_t v29 = 136315650;
    sub_50D40();
    uint64_t v30 = sub_F7B20();
    uint64_t v79 = sub_A3FC(v30, v31, aBlock);
    sub_F77B0();
    swift_bridgeObjectRelease();
    uint64_t v58 = v12;
    uint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    uint64_t v33 = v32(v20, v17);
    uint64_t v57 = (uint64_t)&v57;
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v62 = v23;
    __chkstk_darwin(v33);
    uint64_t v34 = (char *)&v57 - v67;
    sub_2C4C0((uint64_t)v24, (uint64_t)&v57 - v67, &qword_128300);
    unint64_t v67 = v18;
    int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v34, 1, v17);
    uint64_t v37 = v68;
    uint64_t v36 = v69;
    uint64_t v64 = v17;
    uint64_t v66 = (void (*)(char *, uint64_t))v32;
    if (v35 == 1)
    {
      sub_1E944((uint64_t)v34, &qword_128300);
      unint64_t v38 = 0xE300000000000000;
      uint64_t v39 = 7104878;
    }
    else
    {
      uint64_t v39 = sub_F6D50();
      unint64_t v38 = v43;
      v32(v34, v17);
    }
    uint64_t v79 = sub_A3FC(v39, v38, aBlock);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)v24, &qword_128300);
    *(_WORD *)(v29 + 22) = 2080;
    unint64_t v44 = v65;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_A3FC(v36, v44, aBlock);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    os_log_t v45 = v61;
    _os_log_impl(&dword_0, v61, (os_log_type_t)v60, "Uploading RCS file %s thumb %s on sim %s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v63, v58);
    uint64_t v40 = v75;
    id v41 = v73;
    unint64_t v18 = v67;
    uint64_t v42 = v64;
    uint64_t v23 = v62;
  }
  else
  {
    uint64_t v66 = *(void (**)(char *, uint64_t))(v18 + 8);
    v66(v20, v17);
    sub_1E944((uint64_t)v24, &qword_128300);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v26, v12);
    uint64_t v40 = v75;
    id v41 = v73;
    uint64_t v42 = v17;
  }
  id v46 = [self sharedInstance];
  os_log_type_t v47 = (void *)sub_F71F0();
  uint64_t v48 = (void *)sub_F6D70();
  __chkstk_darwin(v48);
  uint64_t v49 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2C4C0(v76, (uint64_t)v49, &qword_128300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v49, 1, v42) == 1)
  {
    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v50 = (void *)sub_F6D70();
    v66(v49, v42);
  }
  uint64_t v51 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v41, v72, v40);
  unint64_t v52 = (*(unsigned __int8 *)(v51 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v53 = swift_allocObject();
  uint64_t v54 = v77;
  *(void *)(v53 + 16) = v77;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v53 + v52, v41, v40);
  aBlock[4] = (uint64_t)sub_50CB0;
  aBlock[5] = v53;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_4F50C;
  aBlock[3] = (uint64_t)&unk_11E570;
  uint64_t v55 = _Block_copy(aBlock);
  id v56 = v54;
  swift_release();
  [v46 uploadRCSFileOnSimID:v47 fileURL:v48 thumbURL:v50 isAudioMessage:v78 & 1 userInfo:0 completion:v55];
  _Block_release(v55);
}

uint64_t sub_4F278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_F70D0();
  os_log_type_t v11 = sub_F7670();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v20 = a3;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v5;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    v18[0] = v13 + 4;
    swift_bridgeObjectRetain();
    v18[1] = (char *)&type metadata for Any + 8;
    uint64_t v14 = sub_F71C0();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_A3FC(v14, v16, &v22);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v11, "Uploaded RCS file %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v22 = a1;
  swift_bridgeObjectRetain();
  sub_551C(&qword_128738);
  return sub_F7490();
}

uint64_t sub_4F50C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_F71B0();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t RCSServiceSession.extractURL(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  id v4 = [a1 balloonBundleID];
  if (!v4)
  {
    sub_F7220();
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_F7220();
  uint64_t v8 = v7;

  uint64_t v9 = sub_F7220();
  if (!v8)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v6 != v9 || v8 != v10)
  {
    char v12 = sub_F7B60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_15;
    }
LABEL_11:
    uint64_t v13 = sub_F6DC0();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14((uint64_t)a2, 1, 1, v13);
  }
  swift_bridgeObjectRelease_n();
LABEL_15:
  id v16 = [objc_allocWithZone((Class)IMDSharedUtilitiesPluginPayload) init];
  id v17 = [a1 payloadData];
  if (v17)
  {
    uint64_t v18 = sub_F6E30();
    unint64_t v20 = v19;

    id v17 = (id)sub_F6E20();
    sub_2852C(v18, v20);
  }
  [v16 setData:v17];

  sub_6CA4(0, &qword_1286A8);
  id v21 = [(id)swift_getObjCClassFromMetadata() linkMetadataForPluginPayload:v16];
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = [v21 URL];
    uint64_t v24 = sub_551C(&qword_128300);
    __chkstk_darwin(v24 - 8);
    unint64_t v26 = (char *)v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v23)
    {
      uint64_t v27 = sub_F6DC0();
      v35[1] = v35;
      uint64_t v28 = *(void *)(v27 - 8);
      __chkstk_darwin(v27);
      uint64_t v30 = (char *)v35 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_F6D80();

      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
      v31(v26, v30, v27);
      uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
      v32(v26, 0, 1, v27);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
      {
        v31(a2, v26, v27);
        return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v32)(a2, 0, 1, v27);
      }
    }
    else
    {

      uint64_t v33 = sub_F6DC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v26, 1, 1, v33);
    }
    sub_1E944((uint64_t)v26, &qword_128300);
  }
  else
  {
  }
  uint64_t v34 = sub_F6DC0();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a2, 1, 1, v34);
}

uint64_t sub_4FA04(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_46BC;
  return RCSServiceSession.resolveGroupIdentity(for:subscriptionContext:)(a1, v5, v6);
}

id sub_4FAB4(id *a1)
{
  id v1 = *a1;
  id v2 = CTXPCServiceSubscriptionContext.canonicalPhoneNumber.getter();
  id v3 = [v1 labelID];
  if (v3)
  {
    id v4 = v3;
    sub_F7220();
  }
  else
  {
  }
  return v2;
}

id sub_4FB54(id *a1)
{
  return [*a1 style];
}

uint64_t sub_4FB78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_4FC34;
  return RCSServiceSession.transcodeTransfer(transfer:for:isAudioMessage:)(a1, a2, a3, a4);
}

uint64_t sub_4FC34(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_4FD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1286A0 + dword_1286A0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_3D958;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_4FE10@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return RCSServiceSession.extractURL(from:)(a1, a2);
}

id sub_4FE28(id *a1)
{
  id result = [*a1 chatIdentifier];
  if (result)
  {
    id v2 = result;
    uint64_t v3 = sub_F7220();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_4FE88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4FF48(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_4FEA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_500B4(a1, a2, a3, (void *)*v3, &qword_128770, &qword_128730);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_4FED8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_500B4(a1, a2, a3, (void *)*v3, &qword_128768, &qword_1284E8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_4FF08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_50244(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_4FF28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_503B4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_4FF48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_551C(&qword_128260);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_500B4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_551C(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_551C(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_50244(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_551C(&qword_127FF0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_503B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_551C(&qword_128688);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t _sSo17RCSServiceSessionC3RCSE24shouldCreateThumbnailForySbSo14IMFileTransferCF_0(void *a1)
{
  uint64_t v2 = sub_551C(&qword_1282D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_F70B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v22 - v11;
  __chkstk_darwin(v10);
  int64_t v14 = (char *)&v22 - v13;
  id v15 = [a1 filename];
  if (!v15) {
    goto LABEL_4;
  }
  unint64_t v16 = v15;
  id v17 = [v15 pathExtension];

  sub_F7220();
  sub_F7070();
  sub_F7050();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E944((uint64_t)v4, &qword_1282D0);
LABEL_4:
    char v18 = 0;
    return v18 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  sub_F7080();
  char v20 = sub_F70A0();
  id v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v12, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v14, v5);
  if (v20)
  {
    v21(v9, v5);
    v21(v14, v5);
    char v18 = 1;
  }
  else
  {
    sub_F7090();
    char v18 = sub_F70A0();
    v21(v12, v5);
    v21(v9, v5);
    v21(v14, v5);
  }
  return v18 & 1;
}

void sub_50800(uint64_t a1)
{
  sub_4C980(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_50818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = v5;
  *(unsigned char *)(v6 + 120) = a5;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 64) = sub_F74E0();
  *(void *)(v6 + 72) = sub_F74D0();
  uint64_t v8 = sub_F7470();
  *(void *)(v6 + 80) = v8;
  *(void *)(v6 + 88) = v7;
  return _swift_task_switch(sub_508C0, v8, v7);
}

uint64_t sub_508C0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  long long v10 = *(_OWORD *)(v0 + 40);
  uint64_t v5 = sub_F74D0();
  *(void *)(v0 + 96) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 104) = v6;
  *(void *)(v6 + 16) = v1;
  *(_OWORD *)(v6 + 24) = v10;
  *(void *)(v6 + 40) = v4;
  *(void *)(v6 + 48) = v3;
  *(unsigned char *)(v6 + 56) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v7;
  uint64_t v8 = sub_551C(&qword_128730);
  *uint64_t v7 = v0;
  v7[1] = sub_50A08;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v5, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000000103140, sub_50BCC, v6, v8);
}

uint64_t sub_50A08()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_50B68, v3, v2);
}

uint64_t sub_50B68()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_50BCC(uint64_t a1)
{
  sub_4EA6C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_50BE0()
{
  uint64_t v1 = sub_551C(&qword_128738);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_50CB0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_551C(&qword_128738) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_4F278(a1, v4, v5);
}

uint64_t sub_50D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_50D38()
{
  return swift_release();
}

unint64_t sub_50D40()
{
  unint64_t result = qword_128740;
  if (!qword_128740)
  {
    sub_F6DC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128740);
  }
  return result;
}

uint64_t sub_50D8C()
{
  uint64_t v1 = sub_551C(&qword_128748);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_50E80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, int a6, void (*a7)(void, void))
{
  uint64_t v15 = *(void *)(sub_551C(&qword_128748) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  return sub_4CF24(a1, a2, a3, a4, a5, a6, a7, *(void **)(v7 + 16), *(void **)(v7 + 24), *(unsigned char *)(v7 + 32), v7 + v16, *(void **)(v7 + ((*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

unint64_t sub_50F78()
{
  unint64_t result = qword_128750;
  if (!qword_128750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128750);
  }
  return result;
}

uint64_t sub_50FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_128300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for RCSMessageTransferErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x510D0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessageTransferErrors()
{
  return &type metadata for RCSMessageTransferErrors;
}

unint64_t sub_5110C()
{
  unint64_t result = qword_128778;
  if (!qword_128778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128778);
  }
  return result;
}

void *sub_51168(uint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  id v9 = a2;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v11);
        if (!v17)
        {
          int64_t v11 = v16 + 3;
          if (v16 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v11);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_5:
    id v14 = *(id *)(*(void *)(a1 + 56) + 8 * v13);
    uint64_t v15 = sub_C2BC(v14);

    unint64_t result = (void *)sub_74CC8((uint64_t)v15);
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();

    swift_release();
    return _swiftEmptyArrayStorage;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t RCSServiceSession.replicationPhoneNumbers()()
{
  v13.super_class = (Class)RCSServiceSession;
  id v1 = objc_msgSendSuper2(&v13, "replicationPhoneNumbers");
  uint64_t v2 = sub_F7620();

  uint64_t v14 = v2;
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_52EC0(v3);
  swift_bridgeObjectRelease();
  id v5 = v0;
  uint64_t v6 = sub_51168(v4, v5);

  swift_release();
  uint64_t v7 = v6[2];
  if (v7)
  {
    int64_t v8 = v6 + 5;
    do
    {
      Swift::Int v9 = *(v8 - 1);
      Swift::Int v10 = *v8;
      swift_bridgeObjectRetain();
      sub_52430(&v12, v9, v10);
      swift_bridgeObjectRelease();
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_514C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = [self sharedInstance];
  id v6 = [v5 ctSubscriptionInfo];

  if (!v6) {
    return 0;
  }
  if (a4) {
    a4 = (void *)sub_F71F0();
  }
  uint64_t v7 = (void *)sub_F71F0();
  id v8 = objc_msgSend(v6, "__im_subscriptionContextOrDefaultForForSimID:phoneNumber:", a4, v7);

  if (!v8) {
    return 0;
  }
  unsigned __int8 v9 = sub_53784(v8);

  return v9 & 1;
}

Swift::Bool __swiftcall RCSServiceSession.replicationRequirementsSatisfied(forPhoneNumber:simID:)(Swift::String forPhoneNumber, Swift::String_optional simID)
{
  object = simID.value._object;
  uint64_t countAndFlagsBits = simID.value._countAndFlagsBits;
  id v5 = forPhoneNumber._object;
  uint64_t v6 = forPhoneNumber._countAndFlagsBits;
  uint64_t v7 = sub_F70F0();
  uint64_t v49 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unsigned __int8 v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v10 = self;
  id v11 = [v10 sharedManager];
  uint64_t v51 = v6;
  Swift::Int v12 = (void *)sub_F71F0();
  uint64_t v48 = v9;
  uint64_t v50 = countAndFlagsBits;
  if (object) {
    objc_super v13 = (void *)sub_F71F0();
  }
  else {
    objc_super v13 = 0;
  }
  unsigned int v47 = [v11 groupTextReplicationSupportedForPhoneNumber:v12 simID:v13];

  if (IMSharedHelperRetrieveSimDetailsFromTelephony())
  {
    unsigned int v46 = sub_514C4(v51, (uint64_t)v5, v50, object);
  }
  else
  {
    id v14 = [v2 relayController];
    unsigned int v46 = [v14 hasRelayDevice];
  }
  id v15 = [v10 sharedManager];
  int64_t v16 = (void *)sub_F71F0();
  if (object) {
    unint64_t v17 = (void *)sub_F71F0();
  }
  else {
    unint64_t v17 = 0;
  }
  unsigned int v18 = [v15 groupMessagingEnabledForPhoneNumber:v16 simID:v17];

  id v19 = [v2 relayController];
  unsigned int v20 = [v19 hasRelayDevice];

  unsigned int v45 = v18;
  if (v20)
  {
    id v21 = [v2 relayController];
    unsigned int v22 = [v21 _canRelayMMS];

    if (v46 & v18 & v47)
    {
      LODWORD(v23) = 1;
      uint64_t v25 = v48;
      uint64_t v24 = v49;
      goto LABEL_18;
    }
    uint64_t v25 = v48;
    uint64_t v24 = v49;
  }
  else
  {
    unsigned int v22 = 0;
    uint64_t v25 = v48;
    if (v46 & v18 & v47)
    {
      LODWORD(v23) = 1;
      uint64_t v24 = v49;
      goto LABEL_18;
    }
    uint64_t v24 = v49;
  }
  LODWORD(v23) = 0;
LABEL_18:
  uint64_t v26 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v25, v26, v7);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v27 = v2;
  uint64_t v28 = sub_F70D0();
  os_log_type_t v29 = sub_F7670();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v44 = v7;
    uint64_t v32 = v31;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v53 = v43;
    *(_DWORD *)uint64_t v32 = 136316930;
    int v42 = v30;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_A3FC(v51, (unint64_t)v5, &v53);
    unsigned int v41 = v22;
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2080;
    os_log_t v40 = v28;
    int v33 = v23;
    uint64_t v23 = v50;
    if (object) {
      uint64_t v34 = v50;
    }
    else {
      uint64_t v34 = 0x3E6C696E3CLL;
    }
    if (object) {
      unint64_t v35 = (unint64_t)object;
    }
    else {
      unint64_t v35 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_A3FC(v34, v35, &v53);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 22) = 1024;
    LODWORD(v52) = v33;
    sub_F77B0();
    *(_WORD *)(v32 + 28) = 1024;
    LODWORD(v52) = v46 & 1;
    sub_F77B0();
    *(_WORD *)(v32 + 34) = 1024;
    LODWORD(v52) = v45;
    sub_F77B0();
    *(_WORD *)(v32 + 40) = 1024;
    LODWORD(v52) = v47;
    sub_F77B0();
    *(_WORD *)(v32 + 46) = 1024;
    uint64_t v36 = v23;
    LOBYTE(v23) = v33;
    char v37 = sub_514C4(v51, (uint64_t)v5, v36, object);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    LODWORD(v52) = v37 & 1;
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *(_WORD *)(v32 + 52) = 1024;
    LODWORD(v52) = v41;
    sub_F77B0();
    os_log_t v38 = v40;
    _os_log_impl(&dword_0, v40, (os_log_type_t)v42, "Phone number %s and simID %s satisfy replication requirements %{BOOL}d (RCS: %{BOOL}d groups: %{BOOL}d isEnabledByCarrier: %{BOOL}d local RCS: %{BOOL}d relay: %{BOOL}d)", (uint8_t *)v32, 0x3Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v44);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v7);
  }
  return v23;
}

void RCSServiceSession.replicationRequiredForFeaturesUsed(by:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_F70F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::Int v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_551C(&qword_127C70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_127B78 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_8B44(v11, (uint64_t)qword_127E20);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v44 == 1)
  {
    uint64_t v16 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
    id v17 = a1;
    unsigned int v18 = sub_F70D0();
    os_log_type_t v19 = sub_F7680();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v41 = v5;
      uint64_t v42 = v4;
      unsigned int v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)unsigned int v20 = 136315138;
      id v21 = [v17 guid];
      if (v21)
      {
        unsigned int v22 = v21;
        uint64_t v23 = sub_F7220();
        unint64_t v25 = v24;

        uint64_t v43 = sub_A3FC(v23, v25, &v44);
        sub_F77B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v18, v19, "Replicating message %s due to override", v20, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v42);
        return;
      }

      __break(1u);
LABEL_20:

      __break(1u);
      return;
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    v45.receiver = v2;
    v45.super_class = (Class)RCSServiceSession;
    if ((objc_msgSendSuper2(&v45, "replicationRequiredForFeaturesUsedByMessageItem:", a1) & 1) == 0)
    {
      id v26 = [a1 threadIdentifier];
      if (v26)
      {
        id v27 = v26;
        uint64_t v28 = sub_F7220();
        unint64_t v30 = v29;

        swift_bridgeObjectRelease();
        uint64_t v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
        }
        if (v31)
        {
          uint64_t v32 = Logger.rcs.unsafeMutableAddressor();
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v32, v4);
          Swift::Int v10 = a1;
          int v33 = sub_F70D0();
          os_log_type_t v34 = sub_F7680();
          if (!os_log_type_enabled(v33, v34))
          {

            (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
            return;
          }
          uint64_t v41 = v5;
          uint64_t v42 = v4;
          unint64_t v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          *(_DWORD *)unint64_t v35 = 136315138;
          id v36 = [v10 guid];
          if (v36)
          {
            char v37 = v36;
            uint64_t v38 = sub_F7220();
            unint64_t v40 = v39;

            uint64_t v43 = sub_A3FC(v38, v40, &v44);
            sub_F77B0();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v33, v34, "Replicating message %s due to thread", v35, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
            return;
          }
          goto LABEL_20;
        }
      }
    }
  }
}

Swift::Bool __swiftcall RCSServiceSession.replicationRequired(forMessageBodyAttributeName:)(Swift::String forMessageBodyAttributeName)
{
  object = forMessageBodyAttributeName._object;
  if (sub_F7220() == forMessageBodyAttributeName._countAndFlagsBits && v3 == object)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v5 = sub_F7B60();
    swift_bridgeObjectRelease();
    unsigned __int8 v6 = 0;
    if ((v5 & 1) == 0)
    {
      uint64_t v7 = (void *)sub_F71F0();
      v9.receiver = v1;
      v9.super_class = (Class)RCSServiceSession;
      unsigned __int8 v6 = objc_msgSendSuper2(&v9, "replicationRequiredForMessageBodyAttributeName:", v7);
    }
  }
  return v6;
}

uint64_t sub_52430(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_F7C20();
  swift_bridgeObjectRetain();
  sub_F72C0();
  Swift::Int v8 = sub_F7C50();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_F7B60() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unsigned int v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_F7B60() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_528C0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_525E0()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_551C(&qword_128780);
  uint64_t v3 = sub_F7890();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                id v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_F7C20();
      sub_F72C0();
      uint64_t result = sub_F7C50();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

Swift::Int sub_528C0(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_525E0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_52A5C();
      goto LABEL_22;
    }
    sub_52C10();
  }
  uint64_t v11 = *v4;
  sub_F7C20();
  sub_F72C0();
  uint64_t result = sub_F7C50();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_F7B60(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_F7B90();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_F7B60();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_52A5C()
{
  id v1 = v0;
  sub_551C(&qword_128780);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F7880();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_52C10()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_551C(&qword_128780);
  uint64_t v3 = sub_F7890();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_F7C20();
    swift_bridgeObjectRetain();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_52EC0(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_53050((unint64_t *)((char *)&v10 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    sub_53050((unint64_t *)v7, v4, v2);
    uint64_t v2 = v8;
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_53018()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_53050(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v22 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_18:
    unint64_t v14 = *(void **)(*(void *)(a3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v15 = v14;
    id v16 = objc_msgSend(v15, "operationStatus", v19);
    if (v16)
    {
      unint64_t v17 = v16;
      id v18 = [v16 switchState];
      swift_bridgeObjectRelease();

      if (!v18)
      {
        *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        BOOL v11 = __OFADD__(v21++, 1);
        if (v11) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  BOOL v11 = __OFADD__(v4++, 1);
  if (v11)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v22) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_17:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_18;
  }
  int64_t v13 = v4 + 1;
  if (v4 + 1 >= v22) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v4 + 2;
  if (v4 + 2 >= v22) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v4 + 3;
  if (v4 + 3 >= v22)
  {
LABEL_27:
    sub_53258(a1, v19, v21, a3);
    return;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v4 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v22) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_53258(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_551C(&qword_128520);
  uint64_t result = sub_F79E0();
  uint64_t v9 = result;
  int v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v34) {
        return v9;
      }
      unint64_t v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v34) {
          return v9;
        }
        unint64_t v16 = v33[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v34) {
            return v9;
          }
          unint64_t v16 = v33[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v34) {
              return v9;
            }
            unint64_t v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v34) {
                  return v9;
                }
                unint64_t v16 = v33[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    id v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void **)(*(void *)(v4 + 56) + 8 * v14);
    sub_F7C20();
    swift_bridgeObjectRetain();
    id v22 = v21;
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v23 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v9 + 48) + 16 * v26);
    *uint64_t v31 = v20;
    v31[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v26) = v22;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t RCSServiceSession.readIdentity(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *((void *)&v8 + 1) = sub_6CA4(0, &qword_127C48);
  uint64_t v9 = &protocol witness table for IMDChat;
  *(void *)&long long v7 = a1;
  id v4 = a1;
  if (IMDChatRCSGroupIdentity.isValid.getter())
  {
    *(void *)(a2 + 24) = &type metadata for IMDChatRCSGroupIdentity;
    *(void *)(a2 + 32) = &protocol witness table for IMDChatRCSGroupIdentity;
    uint64_t result = swift_allocObject();
    long long v6 = v8;
    *(_OWORD *)(result + 16) = v7;
    *(_OWORD *)(result + 32) = v6;
    *(void *)(result + 48) = v9;
  }
  else
  {
    sub_6AA0((uint64_t)&v7);
    uint64_t result = 0;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
  }
  *(void *)a2 = result;
  return result;
}

uint64_t sub_535B4()
{
  sub_6BEC(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

char *sub_535EC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_F79B0())
  {
    char v3 = (char *)_swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)sub_F78D0() : *(id *)(a1 + 8 * v4);
      long long v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 ID];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = sub_F7220();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v3 = sub_350A4(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v14 = *((void *)v3 + 2);
        unint64_t v13 = *((void *)v3 + 3);
        if (v14 >= v13 >> 1) {
          char v3 = sub_350A4((char *)(v13 > 1), v14 + 1, 1, v3);
        }
        *((void *)v3 + 2) = v14 + 1;
        uint64_t v15 = &v3[16 * v14];
        *((void *)v15 + 4) = v10;
        *((void *)v15 + 5) = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  char v3 = (char *)_swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

id sub_53784(void *a1)
{
  uint64_t v2 = sub_F70F0();
  __chkstk_darwin(v2);
  id result = [a1 labelID];
  if (result)
  {

    id v4 = sub_3D95C(a1);
    id v5 = [v4 operationStatus];

    if (v5)
    {
      long long v6 = (char *)[v5 registrationState];

      return (id)(v6 == (unsigned char *)&dword_0 + 1);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t RCSServiceSession.displayName(for:)(void *a1)
{
  id v1 = [a1 displayName];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_F7220();

  return v3;
}

uint64_t RCSServiceSession.countryCode(for:)(uint64_t a1)
{
  id v2 = [self sharedInstance];
  id v3 = [v2 copyIsoCountryCodeForSubscriptionContext:a1];

  uint64_t v4 = sub_F7220();
  return v4;
}

void *RCSServiceSession.rcsEnabledSubscriptionContext(for:)(uint64_t a1)
{
  id v2 = [v1 subscriptionContextForChat:a1];
  id v3 = v2;
  if (v2 && (sub_53784(v2) & 1) == 0)
  {

    return 0;
  }
  return v3;
}

id RCSServiceSession.defaultCountryCode(for:)(uint64_t a1)
{
  id v2 = [v1 subscriptionContextForChat:a1];
  if (v2)
  {
    id v3 = v2;
    id v4 = [self sharedInstance];
    id v5 = [v4 copyIsoCountryCodeForSubscriptionContext:v3];

    uint64_t v6 = sub_F7220();
LABEL_6:

    return (id)v6;
  }
  id result = [self sharedInstance];
  if (result)
  {
    id v8 = result;
    v10[0] = 2;
    uint64_t v11 = sub_F78C0();
    uint64_t v12 = v9;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v13 = 0;
    char v16 = 0;
    sub_6204C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();

    id result = (id)IMCountryCodeForIncomingTextMessage();
    if (result)
    {
      id v5 = result;
      uint64_t v6 = sub_F7220();
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id RCSServiceSession.createGroup(info:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR___RCSServiceSession_state);
  uint64_t v10 = *(void **)(v9 + 16);
  sub_6CA4(0, &qword_128020);
  id v11 = v10;
  swift_bridgeObjectRetain();
  id v12 = CTLazuliOperationID.init(id:)(a3, a4);
  id v17 = 0;
  LODWORD(a2) = [v11 create:a2 groupChat:a1 withOperationID:v12 withError:&v17];

  id v13 = v17;
  if (a2)
  {
    return v13;
  }
  else
  {
    id v15 = v17;
    uint64_t v16 = sub_F6D30();

    id result = (id)swift_willThrow();
    if (*(void *)(v9 + 40))
    {
      swift_retain();
      RCSGroupController.groupOperationFailed(with:operationID:)(v16, a3, a4);
      swift_release();
      return (id)swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void RCSServiceSession.leaveGroup(identity:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = sub_6CA4(0, &qword_128230);
  sub_289D4(a1, (uint64_t)v25);
  uint64_t v10 = v26;
  uint64_t v11 = v27;
  uint64_t v12 = sub_28A38((uint64_t)v25, v26);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  id v16 = sub_6E35C((uint64_t)v14, v9, v10, v11);
  sub_6BEC((uint64_t)v25);
  uint64_t v17 = *(void *)(v4 + OBJC_IVAR___RCSServiceSession_state);
  id v18 = *(void **)(v17 + 16);
  sub_6CA4(0, &qword_128020);
  id v19 = v18;
  swift_bridgeObjectRetain();
  id v20 = CTLazuliOperationID.init(id:)(a3, a4);
  v25[0] = 0;
  LODWORD(a2) = [v19 exit:a2 groupChat:v16 withOperationID:v20 withError:v25];

  if (a2)
  {
    id v21 = v25[0];
  }
  else
  {
    id v22 = v25[0];
    uint64_t v23 = sub_F6D30();

    swift_willThrow();
    if (*(void *)(v17 + 40))
    {
      swift_retain();
      RCSGroupController.groupOperationFailed(with:operationID:)(v23, a3, a4);
      swift_release();
      swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void RCSServiceSession.addParticipants(_:to:operation:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  sub_54250(a1, a2, a3, a4, a5, (uint64_t (*)(void))RCSPersistentMenu.menu.getter, (SEL *)&selRef_addParticipants_toGroupChat_withParticipantsToAdd_withOperationID_withError_);
}

void RCSServiceSession.removeParticipants(_:from:operation:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  sub_54250(a1, a2, a3, a4, a5, (uint64_t (*)(void))j___s7CoreRCS17RCSPersistentMenuC4menuSo012IMPersistentD0CSgvg, (SEL *)&selRef_removeParticipants_fromGroupChat_withParticipantsToRemove_withOperationID_withError_);
}

void sub_54250(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t (*a6)(void), SEL *a7)
{
  uint64_t v43 = a2;
  id v14 = [objc_allocWithZone((Class)CTLazuliGroupChatParticipantList) init];
  id v15 = a3;
  swift_bridgeObjectRetain();
  id v16 = sub_55024(a1, (uint64_t)v15, a4, a5, (uint64_t)v45, a6);
  swift_bridgeObjectRelease();
  id v44 = v15;

  uint64_t v17 = v16[2];
  if (v17)
  {
    uint64_t v39 = v7;
    unint64_t v40 = a7;
    id v41 = v14;
    uint64_t v42 = a4;
    v46[0] = _swiftEmptyArrayStorage;
    sub_F7920();
    id v18 = v16 + 5;
    do
    {
      id v19 = objc_allocWithZone((Class)CTLazuliGroupChatParticipant);
      swift_bridgeObjectRetain();
      id v20 = [v19 init];
      id v21 = (void *)sub_F71F0();
      [v20 setMember:v21];
      swift_bridgeObjectRelease();

      sub_F7900();
      sub_F7930();
      sub_F7940();
      sub_F7910();
      v18 += 2;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    id v14 = v41;
    a4 = v42;
    uint64_t v7 = v39;
    a7 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_6CA4(0, (unint64_t *)&qword_128668);
  id v22 = (void *)sub_F7400();
  swift_bridgeObjectRelease();
  [v14 setMemberList:v22];

  uint64_t v23 = sub_6CA4(0, &qword_128230);
  sub_289D4(v43, (uint64_t)v46);
  uint64_t v24 = v47;
  uint64_t v25 = v48;
  uint64_t v26 = sub_28A38((uint64_t)v46, v47);
  __chkstk_darwin(v26);
  unint64_t v28 = (char *)&v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v28);
  id v30 = sub_6E35C((uint64_t)v28, v23, v24, v25);
  sub_6BEC((uint64_t)v46);
  uint64_t v31 = *(void *)(v7 + OBJC_IVAR___RCSServiceSession_state);
  uint64_t v32 = *(void **)(v31 + 16);
  sub_6CA4(0, &qword_128020);
  swift_bridgeObjectRetain();
  id v33 = v32;
  id v34 = CTLazuliOperationID.init(id:)(a4, a5);
  v46[0] = 0;
  unsigned __int8 v35 = objc_msgSend(v33, *a7, v44, v30, v14, v34, v46);

  if (v35)
  {
    id v36 = v46[0];
  }
  else
  {
    id v37 = v46[0];
    uint64_t v38 = sub_F6D30();

    swift_willThrow();
    if (*(void *)(v31 + 40))
    {
      swift_retain();
      RCSGroupController.groupOperationFailed(with:operationID:)(v38, a4, a5);
      swift_release();
      swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

id RCSServiceSession.renameGroup(identity:name:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  id v30 = a4;
  uint64_t v29 = *(void *)(v6 + OBJC_IVAR___RCSServiceSession_state);
  uint64_t v12 = *(void **)(v29 + 16);
  uint64_t v13 = sub_6CA4(0, &qword_128230);
  sub_289D4(a1, (uint64_t)v31);
  uint64_t v14 = v32;
  uint64_t v15 = v33;
  uint64_t v16 = sub_28A38((uint64_t)v31, v32);
  __chkstk_darwin(v16);
  id v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  id v20 = v12;
  id v21 = sub_6E35C((uint64_t)v18, v13, v14, v15);
  sub_6BEC((uint64_t)v31);
  sub_6CA4(0, &qword_128788);
  swift_bridgeObjectRetain();
  id v22 = CTLazuliGroupChatSubject.init(displayString:)(a2, a3);
  sub_6CA4(0, &qword_128020);
  swift_bridgeObjectRetain();
  id v23 = CTLazuliOperationID.init(id:)(a5, a6);
  v31[0] = 0;
  LODWORD(v12) = [v20 changeSubject:v30 forGroupChat:v21 withNewSubject:v22 withOperationID:v23 withError:v31];

  id v24 = v31[0];
  if (v12)
  {
    return v24;
  }
  else
  {
    id v30 = v31[0];
    id v26 = v31[0];
    uint64_t v27 = sub_F6D30();

    id result = (id)swift_willThrow();
    if (*(void *)(v29 + 40))
    {
      swift_retain();
      RCSGroupController.groupOperationFailed(with:operationID:)(v27, a5, a6);
      swift_release();
      return (id)swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

char *RCSServiceSession.rawParticipants(in:)(void *a1)
{
  id result = (char *)[a1 participants];
  if (result)
  {
    id v2 = result;
    sub_6CA4(0, (unint64_t *)&qword_127C80);
    unint64_t v3 = sub_F7410();

    uint64_t v4 = sub_535EC(v3);
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_549A8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  id v2 = [self sharedInstance];
  id v3 = [v2 copyIsoCountryCodeForSubscriptionContext:v1];

  uint64_t v4 = sub_F7220();
  return v4;
}

void sub_54A28(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = [v2 subscriptionContextForChat:*a1];
  id v5 = v4;
  if (v4 && (sub_53784(v4) & 1) == 0)
  {

    id v5 = 0;
  }
  *a2 = v5;
}

id sub_54A8C(uint64_t *a1)
{
  return RCSServiceSession.defaultCountryCode(for:)(*a1);
}

char *sub_54A94(id *a1)
{
  id result = (char *)[*a1 participants];
  if (result)
  {
    id v2 = result;
    sub_6CA4(0, (unint64_t *)&qword_127C80);
    unint64_t v3 = sub_F7410();

    id v4 = sub_535EC(v3);
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_54B2C(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
}

void RCSServiceSession.updateIdentity(for:info:)(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = v3;
  id v8 = [a1 serviceName];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_F7220();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  id v13 = [v4 service];
  id v14 = [v13 internalName];

  uint64_t v15 = sub_F7220();
  uint64_t v17 = v16;

  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    id v20 = [self sharedInstance];
    if (!v20)
    {
      __break(1u);
      return;
    }
    id v21 = v20;
    v43[0] = 1;
    uint64_t v44 = sub_F78C0();
    uint64_t v45 = v22;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v46 = 0;
    char v49 = 1;
    sub_6204C(v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();

    goto LABEL_15;
  }
  if (v10 == v15 && v12 == v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  char v19 = sub_F7B60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_15:
  id v23 = [a2 remoteUri];
  if (v23)
  {
    id v24 = v23;
    id v25 = [v23 focus];
    uint64_t v26 = sub_F7220();
    uint64_t v28 = v27;

    v29._uint64_t countAndFlagsBits = v26;
    v29._object = v28;
    RCSHandle.init(rawValue:botStatus:alternateHandle:)(&groupURI, v29, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    if (!v30)
    {
      id v31 = [v24 conversationID];
      uint64_t v32 = sub_F7220();
      id v34 = v33;

      v41[3] = sub_6CA4(0, &qword_127C48);
      v41[4] = &protocol witness table for IMDChat;
      v41[0] = a1;
      a3[3] = (uint64_t)&type metadata for IMDChatRCSGroupIdentity;
      a3[4] = (uint64_t)&protocol witness table for IMDChatRCSGroupIdentity;
      uint64_t v35 = swift_allocObject();
      *a3 = v35;
      sub_289D4((uint64_t)v41, (uint64_t)v39);
      id v36 = a1;
      v37._uint64_t countAndFlagsBits = v32;
      v37._object = v34;
      IMDChatRCSGroupIdentity.migrateToLatest(conversationID:groupURI:)(v37, &groupURI);
      sub_6D20((uint64_t)&groupURI);
      swift_bridgeObjectRelease();
      sub_6BEC((uint64_t)v41);
      long long v38 = v39[1];
      *(_OWORD *)(v35 + 16) = v39[0];
      *(_OWORD *)(v35 + 32) = v38;
      *(void *)(v35 + 48) = v40;
    }
  }
  else
  {
    sub_1E894();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_54E78@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = *a1;
  *((void *)&v8 + 1) = sub_6CA4(0, &qword_127C48);
  uint64_t v9 = &protocol witness table for IMDChat;
  *(void *)&long long v7 = v3;
  id v4 = v3;
  if (IMDChatRCSGroupIdentity.isValid.getter())
  {
    *(void *)(a2 + 24) = &type metadata for IMDChatRCSGroupIdentity;
    *(void *)(a2 + 32) = &protocol witness table for IMDChatRCSGroupIdentity;
    uint64_t result = swift_allocObject();
    long long v6 = v8;
    *(_OWORD *)(result + 16) = v7;
    *(_OWORD *)(result + 32) = v6;
    *(void *)(result + 48) = v9;
  }
  else
  {
    sub_6AA0((uint64_t)&v7);
    uint64_t result = 0;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
  }
  *(void *)a2 = result;
  return result;
}

uint64_t sub_54F38(id *a1)
{
  id v1 = [*a1 displayName];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_F7220();

  return v3;
}

id sub_54FA0(void *a1, uint64_t a2)
{
  return [v2 incomingGroupChat:*a1 withGroupInformation:a2];
}

id sub_54FB8(uint64_t a1, uint64_t a2)
{
  return RCSServiceSession.createGroup(info:operation:)(a1, *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

id sub_54FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RCSServiceSession.renameGroup(identity:name:operation:)(a1, a2, a3, *(void **)a4, *(void *)(a4 + 8), *(void *)(a4 + 16));
}

void sub_54FD8(uint64_t a1, uint64_t a2)
{
}

void sub_54FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_54FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_55008()
{
  return 0xD00000000000003DLL;
}

void *sub_55024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  int64_t v6 = *(void *)(a1 + 16);
  long long v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    id v23 = _swiftEmptyArrayStorage;
    uint64_t v9 = sub_4FE88(0, v6, 0);
    long long v7 = _swiftEmptyArrayStorage;
    uint64_t v10 = (_OWORD *)(a1 + 32);
    do
    {
      long long v11 = v10[1];
      v21[0] = *v10;
      v21[1] = v11;
      v22[0] = v10[2];
      *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v10 + 41);
      __chkstk_darwin(v9);
      sub_5560((uint64_t)v21);
      RCSHandle.canonicalizedHandle(for:)(a6, v20);
      uint64_t v12 = RCSHandle.rawValue.getter();
      uint64_t v14 = v13;
      sub_6D20((uint64_t)v20);
      uint64_t v9 = sub_6D20((uint64_t)v21);
      id v23 = v7;
      unint64_t v16 = v7[2];
      unint64_t v15 = v7[3];
      if (v16 >= v15 >> 1)
      {
        uint64_t v9 = sub_4FE88(v15 > 1, v16 + 1, 1);
        long long v7 = v23;
      }
      v7[2] = v16 + 1;
      uint64_t v17 = &v7[2 * v16];
      v17[4] = v12;
      v17[5] = v14;
      v10 += 4;
      --v6;
    }
    while (v6);
  }
  return v7;
}

unsigned char *_s18GroupIdentityErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x5522CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s18GroupIdentityErrorOMa()
{
  return &_s18GroupIdentityErrorON;
}

unint64_t sub_5526C()
{
  unint64_t result = qword_128818;
  if (!qword_128818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128818);
  }
  return result;
}

uint64_t sub_552C8()
{
  uint64_t v0 = sub_551C(&qword_128B40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v4 - 8);
  int64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6F60();
  sub_F74F0();
  uint64_t v7 = sub_F7520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v0);
  uint64_t result = sub_F6F50();
  qword_128820 = result;
  return result;
}

id *sub_5544C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t sub_554CC()
{
  sub_5544C();

  return swift_deallocClassInstance();
}

uint64_t sub_554FC()
{
  id v1 = (id)im_primary_queue();
  id v2 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:v1];

  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = sub_4B594((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 32) = sub_4B5A0((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(void *)(v0 + 72) = sub_4B6C4((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(void *)(v0 + 112) = 0;
  return v0;
}

id RCSServiceSession.init(account:service:replicatingFor:)(void *a1, void *a2, void *a3)
{
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithAccount:a1 service:a2 replicatingForSession:a3];

  return v6;
}

void RCSServiceSession.init(account:service:replicatingFor:)(void *a1, void *a2, void *a3)
{
  uint64_t v93 = sub_551C(&qword_127C70);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  Swift::String v91 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_F70F0();
  uint64_t v94 = *(void *)(v99 - 8);
  uint64_t v8 = __chkstk_darwin(v99);
  uint64_t v89 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v90 = (char *)&v85 - v10;
  uint64_t v11 = sub_551C(&qword_127FE0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s5StateCMa();
  swift_allocObject();
  unint64_t v15 = v3;
  *(void *)&v15[OBJC_IVAR___RCSServiceSession_state] = sub_554FC();

  v103.receiver = v15;
  v103.super_class = (Class)RCSServiceSession;
  uint64_t v95 = a1;
  id v96 = a2;
  unint64_t v16 = a3;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v103, "initWithAccount:service:replicatingForSession:", a1, a2, a3);
  uint64_t v18 = OBJC_IVAR___RCSServiceSession_state;
  uint64_t v19 = *(void *)&v17[OBJC_IVAR___RCSServiceSession_state];
  sub_551C((uint64_t *)&unk_128830);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  *(void *)(v19 + 80) = v20;
  id v21 = v17;
  swift_release();
  uint64_t v22 = *(void *)&v17[v18];
  type metadata accessor for RCSTypingTracker();
  id v23 = v21;
  swift_retain();
  *(void *)(v22 + 88) = RCSTypingTracker.__allocating_init(delegate:)((uint64_t)v23, (uint64_t)&protocol witness table for RCSServiceSession);
  swift_release();
  swift_release();
  uint64_t v24 = *(void *)&v17[v18];
  id v25 = (objc_class *)type metadata accessor for RCSServiceReachabilityDelegate();
  id v26 = objc_allocWithZone(v25);
  swift_unknownObjectUnownedInit();
  v102.receiver = v26;
  v102.super_class = v25;
  swift_retain();
  id v27 = objc_msgSendSuper2(&v102, "initWithServiceSession:", v23);
  uint64_t v28 = *(void **)(v24 + 104);
  *(void *)(v24 + 104) = v27;
  swift_release();

  uint64_t v98 = v17;
  uint64_t v97 = v18;
  uint64_t v29 = *(void *)&v17[v18];
  uint64_t v30 = *(void **)(v29 + 104);
  if (!v30)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  id v88 = v16;
  uint64_t v31 = qword_127B30;
  swift_retain();
  id v32 = v30;
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_8B44(v11, (uint64_t)qword_127D48);
  id v34 = *(void (**)(void, void, void))(v12 + 16);
  v34(v14, v33, v11);
  sub_F6FF0();
  uint64_t v35 = *(void (**)(void, void))(v12 + 8);
  v35(v14, v11);
  uint64_t v36 = aBlock[0];
  if (qword_127B38 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_8B44(v11, (uint64_t)qword_127D60);
  v34(v14, v37, v11);
  sub_F6FF0();
  v35(v14, v11);
  v108[0] = v36;
  v108[1] = aBlock[0];
  v108[2] = 0;
  v108[3] = 0;
  char v109 = 1;
  sub_551C((uint64_t *)&unk_128838);
  swift_allocObject();
  *(void *)(v29 + 96) = RCSReachabilityController.init(delegate:operationConfiguration:)((uint64_t)v32, (uint64_t)v108);
  swift_release();
  swift_release();
  long long v38 = v98;
  uint64_t v39 = v97;
  uint64_t v40 = *(void *)&v98[v97];
  sub_551C((uint64_t *)&unk_128840);
  swift_allocObject();
  id v41 = v23;
  swift_retain();
  *(void *)(v40 + 112) = RCSMessageProcessingQueue.init(delegate:)((uint64_t)v41);
  swift_release();
  swift_release();
  uint64_t v42 = *(void *)&v38[v39];
  long long v104 = xmmword_F9750;
  uint64_t v105 = 0;
  uint64_t v106 = 0;
  char v107 = 1;
  sub_551C((uint64_t *)&unk_128848);
  swift_allocObject();
  uint64_t v43 = v41;
  swift_retain();
  *(void *)(v42 + 40) = RCSGroupController.init(delegate:operationConfiguration:)((uint64_t)v43, (uint64_t *)&v104);
  swift_release();
  swift_release();
  uint64_t v44 = *(void *)&v38[v39];
  sub_551C((uint64_t *)&unk_128850);
  swift_allocObject();
  uint64_t v45 = v43;
  swift_retain();
  *(void *)(v44 + 48) = RCSMessageCreator.init(delegate:)();
  swift_release();
  swift_release();
  uint64_t v46 = *(void *)&v38[v39];
  sub_551C((uint64_t *)&unk_128858);
  swift_allocObject();
  uint64_t v47 = v45;
  swift_retain();
  *(void *)(v46 + 56) = RCSSpamReportingController.init(delegate:operationConfiguration:)((uint64_t)v47, (uint64_t)&v104);
  swift_release();
  swift_release();
  [*(id *)(*(void *)&v38[v39] + 16) setDelegate:v47];
  id v48 = (id)im_primary_queue();
  if (!v48) {
    goto LABEL_17;
  }
  char v49 = v48;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v47;
  aBlock[4] = sub_562BC;
  aBlock[5] = v50;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_552C4;
  aBlock[3] = &unk_11E780;
  uint64_t v51 = _Block_copy(aBlock);
  uint64_t v52 = sub_F7150();
  Swift::String v87 = &v85;
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v55 = (char *)&v85 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v86 = v47;
  sub_F7130();
  uint64_t v56 = sub_F7110();
  uint64_t v85 = (uint64_t)&v85;
  uint64_t v57 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v59 = (char *)&v85 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = _swiftEmptyArrayStorage;
  sub_1ECF8();
  sub_551C(&qword_128158);
  sub_1ED44();
  sub_F7810();
  sub_F7710();
  _Block_release(v51);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v56);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v52);
  swift_release();
  uint64_t v60 = *(void *)&v98[v97];
  id v61 = objc_allocWithZone((Class)type metadata accessor for RCSOutgoingMessageController());
  uint64_t v62 = v86;
  swift_retain();
  unint64_t v63 = RCSOutgoingMessageController.init(session:operationConfiguration:)(v62, (uint64_t *)&v104);
  uint64_t v64 = *(void **)(v60 + 64);
  *(void *)(v60 + 64) = v63;
  swift_release();

  id v65 = objc_msgSend(self, "sharedInstance", v85);
  [v65 addListener:v62];

  uint64_t v66 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v67 = v94;
  uint64_t v68 = *(void (**)(void, void, void))(v94 + 16);
  uint64_t v69 = v90;
  v68(v90, v66, v99);
  uint64_t v70 = sub_F70D0();
  os_log_type_t v71 = sub_F7670();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v72 = 0;
    _os_log_impl(&dword_0, v70, v71, "RCSServiceSession is ready to go!", v72, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v73 = *(void (**)(void, void))(v67 + 8);
  v73(v69, v99);
  uint64_t v74 = v95;
  if (qword_127B28 != -1) {
    swift_once();
  }
  uint64_t v75 = v93;
  uint64_t v76 = sub_8B44(v93, (uint64_t)qword_127D30);
  uint64_t v77 = v92;
  int v78 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v76, v75);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v75);
  if (LOBYTE(aBlock[0]) == 1)
  {
    v68(v89, v66, v99);
    uint64_t v79 = sub_F70D0();
    os_log_type_t v80 = sub_F7670();
    if (os_log_type_enabled(v79, v80))
    {
      unint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v81 = 0;
      _os_log_impl(&dword_0, v79, v80, "RCSServiceSession will prompt for radars when capturing an ABC", v81, 2u);
      swift_slowDealloc();
    }

    v73(v89, v99);
  }
  id v82 = [self defaultCenter];
  uint64_t v83 = IMDFileTransferAcceptedNotification;
  id v84 = v62;
  [v82 addObserver:v84 selector:"_handleFileTransferAccepted:" name:v83 object:0];
}

uint64_t _s5StateCMa()
{
  return self;
}

uint64_t sub_56284()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_562BC()
{
  return sub_562E8();
}

uint64_t sub_562E8()
{
  uint64_t v1 = sub_F70F0();
  id v2 = *(NSObject **)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = ((char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v55 - v7;
  __chkstk_darwin(v6);
  id v65 = (char *)&v55 - v9;
  unint64_t v10 = (unint64_t)sub_3EFD0();
  unint64_t v12 = v10;
  unint64_t v63 = v10;
  if (v10 >> 62) {
    goto LABEL_45;
  }
  for (i = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8)); i; unint64_t v12 = v63)
  {
    unint64_t v14 = 0;
    uint64_t v57 = 0;
    uint64_t v80 = *(uint64_t *)((char *)&v0->isa + OBJC_IVAR___RCSServiceSession_state);
    unint64_t v62 = v12 & 0xC000000000000001;
    uint64_t v59 = v12 & 0xFFFFFFFFFFFFFF8;
    unint64_t v58 = v12 + 32;
    int v78 = (void (**)(char *, uint64_t))&v2[1];
    uint64_t v79 = (void (**)(char *, uint64_t, uint64_t))&v2[2];
    *(void *)&long long v11 = 138412290;
    long long v55 = v11;
    *(void *)&long long v11 = 134218242;
    long long v56 = v11;
    *(void *)&long long v11 = 138412546;
    long long v67 = v11;
    uint64_t v66 = (char *)&type metadata for Any + 8;
    uint64_t v61 = i;
    uint64_t v69 = v1;
    uint64_t v60 = v5;
    uint64_t v68 = v8;
    while (1)
    {
      if (v62)
      {
        unint64_t v15 = sub_F78D0();
      }
      else
      {
        if (v14 >= *(void *)(v59 + 16)) {
          goto LABEL_44;
        }
        unint64_t v15 = *(id *)(v58 + 8 * v14);
      }
      uint64_t v0 = v15;
      if (__OFADD__(v14++, 1)) {
        break;
      }
      uint64_t v17 = *(void **)(v80 + 16);
      uint64_t v83 = 0;
      id v18 = [v17 retrieveAllIncomingMessageIDs:v0 withError:&v83];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = v83;
        id v21 = [v19 list];

        sub_6CA4(0, &qword_127CF8);
        unint64_t v22 = sub_F7410();

        uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
        uint64_t v76 = *v79;
        uint64_t v77 = v23;
        ((void (*)(char *))v76)(v65);
        swift_bridgeObjectRetain_n();
        uint64_t v24 = v0;
        uint64_t v0 = sub_F70D0();
        os_log_type_t v25 = sub_F7670();
        BOOL v26 = os_log_type_enabled(v0, v25);
        unint64_t v27 = v22 >> 62;
        os_log_type_t v71 = v24;
        if (v26)
        {
          unint64_t v28 = v14;
          uint64_t v29 = swift_slowAlloc();
          uint64_t v30 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v29 = v56;
          if (v27)
          {
            swift_bridgeObjectRetain();
            uint64_t v31 = sub_F79B0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v31 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
          }
          swift_bridgeObjectRelease();
          *(void *)(v29 + 4) = v31;
          swift_bridgeObjectRelease();
          *(_WORD *)(v29 + 12) = 2112;
          id v32 = v71;
          *(void *)(v29 + 14) = v71;
          *uint64_t v30 = v32;

          _os_log_impl(&dword_0, v0, v25, "There are %ld messages waiting to be processed from Telephony for subscription %@", (uint8_t *)v29, 0x16u);
          sub_551C(&qword_128C10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          unint64_t v14 = v28;
          unint64_t v33 = v22;
          uint64_t v5 = v60;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          unint64_t v33 = v22;
        }
        uint64_t v75 = *v78;
        v75(v65, v1);
        unint64_t v64 = v14;
        if (v27)
        {
          swift_bridgeObjectRetain();
          id v2 = sub_F79B0();
          swift_bridgeObjectRelease();
          uint64_t v40 = v71;
          if (v2)
          {
LABEL_22:
            os_log_type_t v73 = v2;
            unint64_t v74 = v33 & 0xC000000000000001;
            uint64_t v41 = 4;
            unint64_t v70 = v33;
            while (1)
            {
              uint64_t v0 = (v41 - 4);
              uint64_t v42 = v74 ? sub_F78D0() : *(id *)(v33 + 8 * v41);
              id v2 = v42;
              if (__OFADD__(v0, 1)) {
                break;
              }
              uint64_t v81 = v41 - 3;
              v76(v8, v77, v1);
              uint64_t v43 = v40;
              uint64_t v5 = v2;
              uint64_t v44 = sub_F70D0();
              os_log_type_t v45 = sub_F7670();
              if (os_log_type_enabled(v44, v45))
              {
                uint64_t v46 = swift_slowAlloc();
                uint64_t v47 = (void *)swift_slowAlloc();
                uint64_t v72 = swift_slowAlloc();
                uint64_t v83 = v72;
                *(_DWORD *)uint64_t v46 = v67;
                *(void *)(v46 + 4) = v5;
                *uint64_t v47 = v5;
                *(_WORD *)(v46 + 12) = 2080;
                id v48 = [v43 labelID];
                if (v48)
                {
                  char v49 = v48;
                  uint64_t v50 = sub_F7220();
                  unint64_t v52 = v51;
                }
                else
                {
                  unint64_t v52 = 0xE500000000000000;
                  uint64_t v50 = 0x3E6C696E3CLL;
                }
                *(void *)(v46 + 14) = sub_A3FC(v50, v52, (uint64_t *)&v83);

                swift_bridgeObjectRelease();
                _os_log_impl(&dword_0, v44, v45, "Queueing message ID %@ received on subscription %s", (uint8_t *)v46, 0x16u);
                sub_551C(&qword_128C10);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                uint64_t v8 = v68;
                uint64_t v1 = v69;
                v75(v68, v69);
                unint64_t v33 = v70;
                uint64_t v40 = v71;
              }
              else
              {

                v75(v8, v1);
              }
              uint64_t v0 = *(NSObject **)(v80 + 112);
              if (!v0) {
                __break(1u);
              }
              uint64_t v83 = v5;
              id v82 = v43;
              uint64_t v53 = (void (*)(NSObject **, NSObject **))*((void *)v0->isa + 17);
              swift_retain();
              v53(&v83, &v82);

              swift_release();
              ++v41;
              id v2 = v73;
              if (v81 == v73)
              {

                swift_bridgeObjectRelease();
                uint64_t v5 = v60;
                goto LABEL_5;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          id v2 = *(NSObject **)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8));
          uint64_t v40 = v71;
          if (v2) {
            goto LABEL_22;
          }
        }

        swift_bridgeObjectRelease();
LABEL_5:
        unint64_t v14 = v64;
      }
      else
      {
        id v34 = v83;
        sub_F6D30();

        swift_willThrow();
        uint64_t v35 = Logger.rcs.unsafeMutableAddressor();
        (*v79)((char *)v5, v35, v1);
        uint64_t v36 = v0;
        id v2 = sub_F70D0();
        os_log_type_t v37 = sub_F7690();
        uint64_t v0 = v37;
        if (os_log_type_enabled(v2, v37))
        {
          uint64_t v38 = swift_slowAlloc();
          uint64_t v39 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v38 = v55;
          *(void *)(v38 + 4) = v36;
          void *v39 = v36;
          _os_log_impl(&dword_0, v2, (os_log_type_t)v0, "Failed to retrieve incoming message IDs for subscription %@", (uint8_t *)v38, 0xCu);
          sub_551C(&qword_128C10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_errorRelease();
        }
        else
        {

          swift_errorRelease();
        }

        (*v78)((char *)v5, v1);
        uint64_t v57 = 0;
      }
      if (v14 == v61) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    uint64_t i = sub_F79B0();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_56C74(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_56CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_56CC8()
{
  return swift_release();
}

Swift::Int __swiftcall RCSServiceSession.maxRecipients(forPhoneNumber:simID:)(Swift::String forPhoneNumber, Swift::String simID)
{
  id v2 = [self sharedManager];
  uint64_t v3 = (void *)sub_F71F0();
  uint64_t v4 = (void *)sub_F71F0();
  id v5 = [v2 groupMessagingMaxGroupSizeForPhoneNumber:v3 simID:v4];

  return (Swift::Int)v5;
}

Swift::Bool __swiftcall RCSServiceSession._isActiveServiceForRelay()()
{
  id v0 = [self sharedFeatureFlags];
  unsigned int v1 = [v0 isLazuliEnabled];

  if (!v1) {
    return 0;
  }
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony()) {
    return 1;
  }
  sub_3DC58();
  return v2 == 5;
}

void RCSServiceSession.makeSender(for:for:chatStyle:recipients:)(void *a1, void *a2, unsigned __int8 a3)
{
  uint64_t v7 = sub_F70F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1EEBC(a2, a1);
  unint64_t v12 = v11;
  if ((v13 & 1) == 0)
  {
    id v14 = objc_allocWithZone((Class)RCSMessageSender);
    id v15 = a1;
    unint64_t v16 = a2;
    id v17 = v3;
    swift_bridgeObjectRetain();
    sub_551C(&qword_128730);
    id v18 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    id v19 = [v14 initWithSession:v17 message:v15 chat:v16 style:a3 recipients:v18 context:v12];

    [v19 deriveConfiguration];
    sub_B8C4(v12, 0);
    return;
  }
  uint64_t v20 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
  id v21 = a1;
  unint64_t v22 = a2;
  id v23 = v21;
  uint64_t v24 = v22;
  os_log_type_t v25 = sub_F70D0();
  int v26 = sub_F7690();
  if (os_log_type_enabled(v25, (os_log_type_t)v26))
  {
    int v39 = v26;
    uint64_t v40 = v12;
    uint64_t v41 = v7;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v43 = v38;
    *(_DWORD *)uint64_t v27 = 136315650;
    id v28 = objc_msgSend(v23, "guid", v38);
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = sub_F7220();
      unint64_t v32 = v31;

      uint64_t v42 = sub_A3FC(v30, v32, &v43);
      sub_F77B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      id v33 = [v24 chatIdentifier];
      if (v33)
      {
        id v34 = v33;
        uint64_t v35 = sub_F7220();
        unint64_t v37 = v36;

        uint64_t v42 = sub_A3FC(v35, v37, &v43);
        sub_F77B0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 22) = 1026;
        LODWORD(v42) = v40;
        sub_F77B0();
        _os_log_impl(&dword_0, v25, (os_log_type_t)v39, "Couldn't resolve context for sending %s to chat %s: %{public}u", (uint8_t *)v27, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v41);
        return;
      }
    }
    else
    {

      __break(1u);
    }

    __break(1u);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t RCSServiceSession.sendMessageDirect(sourceMessage:rcsMessage:chat:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for RCSMessage(0);
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v59 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_F70F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a1;
  id v14 = [a1 guid];
  if (!v14)
  {
    sub_1FF84();
    uint64_t v61 = swift_allocError();
    *(_DWORD *)uint64_t v31 = 0;
LABEL_7:
    *(unsigned char *)(v31 + 4) = 1;
    return swift_willThrow();
  }
  id v15 = v14;
  uint64_t v57 = v8;
  uint64_t v58 = sub_F7220();
  unint64_t v17 = v16;

  id v18 = [a3 chatIdentifier];
  if (!v18)
  {
    swift_bridgeObjectRelease();
    sub_1FF84();
    uint64_t v61 = swift_allocError();
    *(_DWORD *)uint64_t v31 = 1;
    goto LABEL_7;
  }
  id v19 = v18;
  uint64_t v53 = a2;
  uint64_t v54 = v9;
  long long v55 = v3;
  uint64_t v20 = sub_F7220();
  unint64_t v22 = v21;

  unsigned int v50 = [a3 style];
  uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v24 = v11;
  os_log_type_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v26 = v10;
  v25(v13, v23, v10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_F70D0();
  os_log_type_t v28 = sub_F7670();
  int v49 = v28;
  BOOL v29 = os_log_type_enabled(v27, v28);
  long long v56 = a3;
  uint64_t v51 = v20;
  unint64_t v52 = v17;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v63 = v47;
    *(_DWORD *)uint64_t v30 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_A3FC(v58, v17, &v63);
    uint64_t v48 = v26;
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_A3FC(v20, v22, &v63);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v27, (os_log_type_t)v49, "Queuing send of message %s in chat %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v48);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v26);
  }
  uint64_t v33 = v57;
  if (qword_127C00 != -1) {
    swift_once();
  }
  uint64_t v34 = (uint64_t)v54;
  sub_5F63C(v53, (uint64_t)v54);
  unint64_t v35 = (*(unsigned __int8 *)(v59 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v36 = (v33 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (void *)swift_allocObject();
  int v39 = v55;
  uint64_t v38 = v56;
  _OWORD v37[2] = v55;
  _OWORD v37[3] = v38;
  uint64_t v40 = v60;
  uint64_t v41 = v58;
  v37[4] = v60;
  v37[5] = v41;
  v37[6] = v52;
  sub_5674(v34, (uint64_t)v37 + v35);
  uint64_t v42 = (char *)v37 + v36;
  *(void *)uint64_t v42 = v51;
  *((void *)v42 + 1) = v22;
  v42[16] = v50;
  swift_bridgeObjectRetain();
  id v43 = v39;
  id v44 = v38;
  id v45 = v40;
  sub_F6F40();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_579D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 312) = v12;
  *(void *)(v8 + 112) = a7;
  *(void *)(v8 + 120) = a8;
  *(void *)(v8 + 96) = a5;
  *(void *)(v8 + 104) = a6;
  *(void *)(v8 + 80) = a3;
  *(void *)(v8 + 88) = a4;
  *(void *)(v8 + 64) = a1;
  *(void *)(v8 + 72) = a2;
  uint64_t v9 = sub_F70F0();
  *(void *)(v8 + 128) = v9;
  *(void *)(v8 + 136) = *(void *)(v9 - 8);
  *(void *)(v8 + 144) = swift_task_alloc();
  *(void *)(v8 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_57AB8, 0, 0);
}

uint64_t sub_57AB8()
{
  uint64_t v1 = swift_allocObject();
  v0[20] = v1;
  *(_DWORD *)(v1 + 16) = 0;
  v0[21] = sub_F74E0();
  v0[22] = sub_F74D0();
  uint64_t v3 = sub_F7470();
  return _swift_task_switch(sub_57B6C, v3, v2);
}

uint64_t sub_57B6C()
{
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 80);
  swift_release();
  sub_1EEBC(v1, v2);
  *(void *)(v0 + 184) = v3;
  *(unsigned char *)(v0 + 313) = v4;
  return _swift_task_switch(sub_57BF8, 0, 0);
}

uint64_t sub_57BF8()
{
  uint64_t v60 = v0;
  if (*(unsigned char *)(v0 + 313))
  {
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v15 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v15, v13);
    swift_bridgeObjectRetain_n();
    unint64_t v16 = sub_F70D0();
    os_log_type_t v17 = sub_F7690();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v53 = *(void *)(v0 + 184);
      uint64_t v55 = *(void *)(v0 + 136);
      uint64_t v56 = *(void *)(v0 + 128);
      uint64_t v58 = *(void *)(v0 + 152);
      uint64_t v19 = *(void *)(v0 + 88);
      unint64_t v18 = *(void *)(v0 + 96);
      uint64_t v20 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 48) = sub_A3FC(v19, v18, &v59);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      *(_DWORD *)(v0 + 304) = v53;
      type metadata accessor for FZErrorType(0);
      uint64_t v21 = sub_F7270();
      *(void *)(v0 + 56) = sub_A3FC(v21, v22, &v59);
      sub_F77B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v16, v17, "Cannot find context to send message %s error %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v58, v56);
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 152);
      uint64_t v24 = *(void *)(v0 + 128);
      uint64_t v25 = *(void *)(v0 + 136);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    *(void *)(v0 + 192) = sub_F71F0();
    *(void *)(v0 + 200) = sub_F74D0();
    uint64_t v8 = sub_F7470();
    uint64_t v10 = v26;
    uint64_t v11 = sub_58244;
    goto LABEL_10;
  }
  uint64_t v1 = *(void *)(v0 + 160);
  int v3 = *(_DWORD *)(v1 + 16);
  uint64_t v2 = (int *)(v1 + 16);
  if (v3)
  {
    swift_beginAccess();
    int v4 = *v2;
    *(_DWORD *)(v0 + 308) = *v2;
    if (v4)
    {
      uint64_t v5 = (uint64_t (*)())[*(id *)(v0 + 80) guid];
      *(void *)(v0 + 240) = v5;
      if (!v5)
      {
        __break(1u);
        return _swift_task_switch(v5, v6, v7);
      }
      *(void *)(v0 + 248) = sub_F74D0();
      uint64_t v8 = sub_F7470();
      uint64_t v10 = v9;
      uint64_t v11 = sub_586E4;
LABEL_10:
      uint64_t v5 = v11;
      uint64_t v6 = v8;
      uint64_t v7 = v10;
      return _swift_task_switch(v5, v6, v7);
    }
    sub_B8C4(*(id *)(v0 + 184), 0);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 136);
    uint64_t v28 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 128);
    id v30 = *(id *)(v0 + 184);
    uint64_t v31 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v28, v31, v29);
    swift_bridgeObjectRetain_n();
    unint64_t v32 = sub_F70D0();
    os_log_type_t v33 = sub_F7670();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = *(void *)(v0 + 136);
    uint64_t v36 = *(void *)(v0 + 144);
    uint64_t v37 = *(void *)(v0 + 128);
    unint64_t v38 = *(void *)(v0 + 96);
    if (v34)
    {
      uint64_t v54 = *(void *)(v0 + 88);
      uint64_t v57 = *(void *)(v0 + 128);
      int v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)int v39 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 40) = sub_A3FC(v54, v38, &v59);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v32, v33, "Sending message %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v57);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
    }
    char v42 = *(unsigned char *)(v0 + 312);
    uint64_t v44 = *(void *)(v0 + 112);
    uint64_t v43 = *(void *)(v0 + 120);
    id v45 = *(void **)(v0 + 80);
    uint64_t v46 = *(void **)(v0 + 64);
    uint64_t v47 = swift_allocObject();
    *(void *)(v0 + 224) = v47;
    *(void *)(v47 + 16) = v46;
    *(void *)(v47 + 24) = v45;
    *(void *)(v47 + 32) = v44;
    *(void *)(v47 + 40) = v43;
    *(unsigned char *)(v47 + 48) = v42;
    id v48 = v46;
    id v49 = v45;
    swift_bridgeObjectRetain();
    swift_retain();
    unsigned int v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v50;
    *unsigned int v50 = v0;
    v50[1] = sub_5845C;
    uint64_t v51 = *(void *)(v0 + 160);
    uint64_t v52 = *(void *)(v0 + 104);
    return sub_23ECC(v52, (uint64_t)v30, (uint64_t)&unk_128B28, v47, (uint64_t)&unk_128B38, v51);
  }
}

uint64_t sub_58244()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void **)(v0 + 64);
  swift_release();
  [v2 didReceiveError:5 forMessageID:v1 forceError:1];

  return _swift_task_switch(sub_582D0, 0, 0);
}

uint64_t sub_582D0()
{
  *(void *)(v0 + 208) = sub_F71F0();
  *(void *)(v0 + 216) = sub_F74D0();
  uint64_t v2 = sub_F7470();
  return _swift_task_switch(sub_58368, v2, v1);
}

uint64_t sub_58368()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 64);
  swift_release();
  [v2 processMessageSendFailure:v1];

  return _swift_task_switch(sub_583EC, 0, 0);
}

uint64_t sub_583EC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_5845C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 184);
  swift_task_dealloc();
  swift_release();
  swift_release();
  sub_B8C4(v1, 0);
  return _swift_task_switch(sub_585B8, 0, 0);
}

uint64_t sub_585B8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_beginAccess();
  int v2 = *(_DWORD *)(v1 + 16);
  *(_DWORD *)(v0 + 308) = v2;
  if (v2)
  {
    uint64_t v3 = (uint64_t (*)())[*(id *)(v0 + 80) guid];
    *(void *)(v0 + 240) = v3;
    if (v3)
    {
      *(void *)(v0 + 248) = sub_F74D0();
      uint64_t v6 = sub_F7470();
      uint64_t v8 = v7;
      uint64_t v3 = sub_586E4;
      uint64_t v4 = v6;
      uint64_t v5 = v8;
    }
    else
    {
      __break(1u);
    }
    return _swift_task_switch(v3, v4, v5);
  }
  else
  {
    sub_B8C4(*(id *)(v0 + 184), 0);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_586E4()
{
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(unsigned int *)(v0 + 308);
  uint64_t v3 = *(void **)(v0 + 64);
  swift_release();
  [v3 didReceiveError:v2 forMessageID:v1 forceError:1];

  return _swift_task_switch(sub_5877C, 0, 0);
}

uint64_t sub_5877C()
{
  uint64_t v1 = (uint64_t (*)())[*(id *)(v0 + 80) guid];
  *(void *)(v0 + 256) = v1;
  if (v1)
  {
    *(void *)(v0 + 264) = sub_F74D0();
    uint64_t v4 = sub_F7470();
    uint64_t v6 = v5;
    uint64_t v1 = sub_5882C;
    uint64_t v2 = v4;
    uint64_t v3 = v6;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_5882C()
{
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void **)(v0 + 64);
  swift_release();
  [v2 processMessageSendFailure:v1];

  return _swift_task_switch(sub_588B0, 0, 0);
}

uint64_t sub_588B0()
{
  if (*(_DWORD *)(*(void *)(v0 + 160) + 16) == 20)
  {
    uint64_t v1 = (uint64_t (*)())[*(id *)(v0 + 72) chatIdentifier];
    *(void *)(v0 + 272) = v1;
    if (v1)
    {
      *(unsigned char *)(v0 + 314) = [*(id *)(v0 + 72) style];
      *(void *)(v0 + 280) = sub_F74D0();
      uint64_t v4 = sub_F7470();
      uint64_t v6 = v5;
      uint64_t v1 = sub_589D8;
      uint64_t v2 = v4;
      uint64_t v3 = v6;
    }
    else
    {
      __break(1u);
    }
    return _swift_task_switch(v1, v2, v3);
  }
  else
  {
    sub_B8C4(*(id *)(v0 + 184), 0);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_589D8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  *(void *)(v0 + 288) = [v1 account];
  return _swift_task_switch(sub_58A60, 0, 0);
}

uint64_t sub_58A60()
{
  *(void *)(v0 + 296) = sub_F74D0();
  uint64_t v2 = sub_F7470();
  return _swift_task_switch(sub_58AEC, v2, v1);
}

uint64_t sub_58AEC()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 314);
  uint64_t v3 = *(void **)(v0 + 272);
  uint64_t v4 = *(void **)(v0 + 64);
  swift_release();
  [v4 didLeaveChat:v3 style:v2 account:v1];

  return _swift_task_switch(sub_58B8C, 0, 0);
}

uint64_t sub_58B8C()
{
  sub_B8C4(*(id *)(v0 + 184), 0);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_58C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 56) = a5;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_F74E0();
  *(void *)(v5 + 48) = sub_F74D0();
  uint64_t v7 = sub_F7470();
  return _swift_task_switch(sub_58CAC, v7, v6);
}

uint64_t sub_58CAC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 16);
  swift_release();
  uint64_t v4 = (void *)sub_F71F0();
  [v3 didStartSendingMessage:v2 forChat:v4 style:v1];

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_58D58(int a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  *(_DWORD *)(v2 + 56) = a1;
  sub_F74E0();
  *(void *)(v2 + 48) = sub_F74D0();
  uint64_t v4 = sub_F7470();
  return _swift_task_switch(sub_58DF4, v4, v3);
}

uint64_t sub_58DF4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  int v2 = *(_DWORD *)(v0 + 56);
  swift_release();
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v2;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id RCSServiceSession.revokeSentMessage(_:in:)(void *a1, void *a2)
{
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 guid];
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = sub_F7220();
    unint64_t v13 = v12;

    id v14 = [a2 chatIdentifier];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v36 = v11;
      os_log_type_t v33 = v2;
      uint64_t v35 = sub_F7220();
      unint64_t v17 = v16;

      uint64_t v18 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v19 = sub_F70D0();
      os_log_type_t v20 = sub_F7670();
      BOOL v21 = os_log_type_enabled(v19, v20);
      BOOL v34 = a2;
      if (v21)
      {
        uint64_t v22 = swift_slowAlloc();
        unint64_t v32 = a1;
        uint64_t v23 = v22;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v38 = v31;
        *(_DWORD *)uint64_t v23 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_A3FC(v36, v13, &v38);
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v23 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_A3FC(v35, v17, &v38);
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v19, v20, "Queuing revoke of message %s in chat %s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        a1 = v32;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v24 = v33;
      if (qword_127C00 != -1) {
        swift_once();
      }
      uint64_t v25 = (void *)swift_allocObject();
      uint64_t v26 = v34;
      _OWORD v25[2] = v24;
      id v25[3] = v26;
      uint64_t v27 = v36;
      _OWORD v25[4] = a1;
      void v25[5] = v27;
      v25[6] = v13;
      id v28 = v24;
      id v29 = v26;
      id v30 = a1;
      sub_F6F40();
      swift_bridgeObjectRelease();
      return (id)swift_release();
    }
    else
    {
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_5924C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  uint64_t v6 = sub_F70F0();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  return _swift_task_switch(sub_59368, 0, 0);
}

uint64_t sub_59368()
{
  sub_F74E0();
  *(void *)(v0 + 168) = sub_F74D0();
  uint64_t v2 = sub_F7470();
  return _swift_task_switch(sub_59430, v2, v1);
}

uint64_t sub_59430()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 96);
  swift_release();
  sub_1EEBC(v1, v2);
  *(void *)(v0 + 176) = v3;
  *(unsigned char *)(v0 + 204) = v4;
  return _swift_task_switch(sub_594E8, 0, 0);
}

uint64_t sub_594E8()
{
  uint64_t v26 = v0;
  if (*(unsigned char *)(v0 + 204))
  {
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v9 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v9, v7);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_F70D0();
    os_log_type_t v11 = sub_F7690();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v21 = *(void *)(v0 + 176);
      uint64_t v22 = *(void *)(v0 + 128);
      unint64_t v12 = *(void *)(v0 + 112);
      uint64_t v23 = *(void *)(v0 + 120);
      uint64_t v24 = *(void *)(v0 + 160);
      uint64_t v13 = *(void *)(v0 + 104);
      uint64_t v14 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_A3FC(v13, v12, &v25);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2080;
      *(_DWORD *)(v0 + 200) = v21;
      type metadata accessor for FZErrorType(0);
      uint64_t v15 = sub_F7270();
      *(void *)(v0 + 72) = sub_A3FC(v15, v16, &v25);
      sub_F77B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v10, v11, "Cannot find context to revoke message %s error %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
    }
    else
    {
      uint64_t v17 = *(void *)(v0 + 160);
      uint64_t v18 = *(void *)(v0 + 120);
      uint64_t v19 = *(void *)(v0 + 128);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  else
  {
    id v1 = *(id *)(v0 + 176);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_59858;
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 96);
    return sub_5B1C(v4, v3, (uint64_t)v1);
  }
}

uint64_t sub_59858(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_59984, 0, 0);
}

uint64_t sub_59984()
{
  uint64_t v83 = v0;
  uint64_t v1 = v0 + 32;
  uint64_t v2 = *(void **)(v0 + 192);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    sub_6CA4(0, &qword_128B18);
    swift_bridgeObjectRetain();
    id v81 = v2;
    id v7 = CTLazuliMessageRevokeData.init(messageGUID:destination:)(v5, v6, v81);
    id v8 = [objc_allocWithZone((Class)NSUUID) init];
    id v9 = [v8 UUIDString];

    uint64_t v10 = sub_F7220();
    uint64_t v76 = v11;

    uint64_t v71 = Logger.rcs.unsafeMutableAddressor();
    os_log_t log = *(os_log_t *)(v4 + 16);
    ((void (*)(uint64_t))log)(v3);
    swift_bridgeObjectRetain_n();
    unint64_t v12 = sub_F70D0();
    os_log_type_t v13 = sub_F7670();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 128);
    uint64_t v73 = *(void *)(v0 + 120);
    unint64_t v17 = *(void *)(v0 + 112);
    id v78 = v7;
    if (v14)
    {
      uint64_t v18 = *(void *)(v0 + 104);
      uint64_t v69 = *(void *)(v0 + 144);
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      v82[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v20 = v18;
      id v7 = v78;
      *(void *)(v0 + 56) = sub_A3FC(v20, v17, v82);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v12, v13, "Revoking message %s", v19, 0xCu);
      swift_arrayDestroy();
      uint64_t v1 = v0 + 32;
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v21(v69, v73);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v21(v15, v73);
    }
    uint64_t v38 = *(void **)(v0 + 176);
    int v39 = *(void **)(*(void *)(*(void *)(v0 + 80) + OBJC_IVAR___RCSServiceSession_state) + 16);
    sub_6CA4(0, &qword_127CF8);
    id v40 = v39;
    id v41 = CTLazuliOperationID.init(id:)(v10, v76);
    *(void *)(v0 + 32) = 0;
    unsigned int v42 = [v40 revokeMessage:v38 withRevokeData:v7 withMessageID:v41 withError:v1];
    sub_B8C4(v38, 0);

    uint64_t v43 = *(void **)(v0 + 32);
    if (v42)
    {
      uint64_t v44 = *(void **)(v0 + 176);
      id v45 = v43;
      sub_B8C4(v44, 0);
    }
    else
    {
      uint64_t v46 = *(void *)(v0 + 136);
      uint64_t v47 = *(void *)(v0 + 120);
      id v48 = v43;
      sub_F6D30();

      swift_willThrow();
      ((void (*)(uint64_t, uint64_t, uint64_t))log)(v46, v71, v47);
      swift_bridgeObjectRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      id v49 = sub_F70D0();
      os_log_type_t v50 = sub_F7690();
      BOOL v51 = os_log_type_enabled(v49, v50);
      uint64_t v52 = *(void **)(v0 + 176);
      uint64_t v53 = *(void *)(v0 + 136);
      unint64_t v55 = *(void *)(v0 + 112);
      uint64_t v54 = *(void *)(v0 + 120);
      if (v51)
      {
        uint64_t v56 = *(void *)(v0 + 104);
        unint64_t v74 = v21;
        uint64_t v57 = swift_slowAlloc();
        uint64_t v72 = v52;
        uint64_t v58 = (void *)swift_slowAlloc();
        v82[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 40) = sub_A3FC(v56, v55, v82);
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v57 + 12) = 2112;
        swift_errorRetain();
        uint64_t v59 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 48) = v59;
        sub_F77B0();
        *uint64_t v58 = v59;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v49, v50, "Failed to revoke message %s, %@", (uint8_t *)v57, 0x16u);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        sub_B8C4(v72, 0);

        swift_errorRelease();
        v74(v53, v54);
      }
      else
      {

        sub_B8C4(v52, 0);
        swift_errorRelease();
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        swift_errorRelease();

        v21(v53, v54);
      }
    }
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 120);
    uint64_t v24 = *(void *)(v0 + 128);
    uint64_t v25 = *(void **)(v0 + 88);
    sub_B8C4(*(id *)(v0 + 176), 0);
    uint64_t v26 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v26, v23);
    swift_bridgeObjectRetain_n();
    id v27 = v25;
    id v28 = sub_F70D0();
    os_log_type_t v29 = sub_F7690();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = *(void *)(v0 + 104);
      unint64_t v30 = *(void *)(v0 + 112);
      id v79 = *(id *)(v0 + 88);
      uint64_t v32 = swift_slowAlloc();
      v82[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_A3FC(v31, v30, v82);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2080;
      id v33 = [v79 guid];
      if (v33)
      {
        BOOL v34 = v33;
        uint64_t v35 = sub_F7220();
        unint64_t v37 = v36;
      }
      else
      {
        unint64_t v37 = 0xEC00000064697567;
        uint64_t v35 = 0x2D6E776F6E6B6E75;
      }
      id v80 = *(id *)(v0 + 152);
      uint64_t v65 = *(void *)(v0 + 128);
      uint64_t v75 = *(void **)(v0 + 176);
      uint64_t v77 = *(void *)(v0 + 120);
      uint64_t v66 = *(void **)(v0 + 88);
      *(void *)(v0 + 24) = sub_A3FC(v35, v37, v82);
      sub_F77B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v28, v29, "Couldn't not determine destination to revoke message %s from chat %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_B8C4(v75, 0);

      (*(void (**)(id, uint64_t))(v65 + 8))(v80, v77);
    }
    else
    {
      uint64_t v60 = *(void **)(v0 + 176);
      uint64_t v61 = *(void *)(v0 + 152);
      uint64_t v62 = *(void *)(v0 + 120);
      uint64_t v63 = *(void *)(v0 + 128);
      unint64_t v64 = *(void **)(v0 + 88);
      swift_bridgeObjectRelease_n();

      sub_B8C4(v60, 0);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v67 = *(uint64_t (**)(void))(v0 + 8);
  return v67();
}

void RCSServiceSession.didDeleteChatGUID(_:chatIdentifier:style:groupID:originalGroupID:properties:lastAddressedLocalHandle:lastAddressedSIMID:)(uint64_t a1, void *a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

id RCSServiceSession.shouldSendReadReceipts(forChat:style:)(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  uint64_t v7 = sub_F70F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  BOOL v14 = (char *)v39 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v39 - v15;
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony()) {
    goto LABEL_6;
  }
  uint64_t v41 = a1;
  unint64_t v17 = (void *)sub_F71F0();
  id v18 = [v3 chatForChatIdentifier:v17 style:a3];

  if (!v18)
  {
    uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v24 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v23, v7);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_F70D0();
    os_log_type_t v26 = sub_F7670();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = v8;
      id v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)id v28 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_A3FC(v41, a2, &v43);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v25, v26, "Not sending read receipt in chat %s as we can't find the chat", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v24);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    return 0;
  }
  id v19 = [v3 subscriptionContextForChat:v18];
  if (!v19)
  {
    uint64_t v29 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v29, v7);
    swift_bridgeObjectRetain_n();
    unint64_t v30 = sub_F70D0();
    os_log_type_t v31 = sub_F7670();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315138;
      id v40 = v32 + 4;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_A3FC(v41, a2, &v43);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v30, v31, "Not sending read receipt in chat %s as we can't find the subscription context", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    }
    return 0;
  }
  uint64_t v20 = v19;
  if (!sub_C038(v19))
  {
    uint64_t v33 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v16, v33, v7);
    swift_bridgeObjectRetain_n();
    BOOL v34 = sub_F70D0();
    os_log_type_t v35 = sub_F7670();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      id v40 = (uint8_t *)v8;
      unint64_t v37 = (uint8_t *)v36;
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)unint64_t v37 = 136315138;
      v39[1] = v37 + 4;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_A3FC(v41, a2, &v43);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v34, v35, "Not sending read receipt in chat %s due to carrier policy", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char *, uint64_t))v40 + 1))(v16, v7);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    }
    return 0;
  }

LABEL_6:
  uint64_t v21 = (void *)sub_F71F0();
  v44.receiver = v3;
  v44.super_class = (Class)RCSServiceSession;
  id v22 = objc_msgSendSuper2(&v44, "shouldSendReadReceiptsForChat:style:", v21, a3);

  return v22;
}

void RCSServiceSession.sendReadReceipt(forMessage:toChatID:identifier:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    uint64_t v8 = (void *)sub_F71F0();
    if (a5)
    {
LABEL_3:
      uint64_t v9 = sub_F71F0();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (a5) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
LABEL_6:
  id v10 = (id)v9;
  objc_msgSend(v5, "sendReadReceiptForMessage:toChatID:identifier:style:reflectOnly:", a1, v8);
}

void RCSServiceSession.sendReadReceipt(forMessage:toChatID:identifier:style:reflectOnly:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unsigned __int8 a6, char a7)
{
}

void sub_5AD60(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_F70F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  id v10 = &v70[-v9];
  sub_5BC00(a2);
  if ((v11 & 1) == 0) {
    return;
  }
  sub_1EEBC(a2, a1);
  uint64_t v13 = v12;
  if (v14)
  {
    uint64_t v15 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v10, v15, v6);
    id v16 = a1;
    unint64_t v17 = a2;
    id v18 = v16;
    id v19 = v17;
    uint64_t v20 = sub_F70D0();
    int v21 = sub_F7690();
    if (!os_log_type_enabled(v20, (os_log_type_t)v21))
    {

      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
      return;
    }
    int v72 = v21;
    uint64_t v73 = v7;
    unint64_t v74 = v13;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(void *)&long long v77 = v71;
    *(_DWORD *)uint64_t v22 = 136315650;
    id v23 = [v18 guid];
    if (v23)
    {
      uint64_t v24 = v23;
      a2 = (void *)sub_F7220();
      uint64_t v3 = v25;

      v76.scheme._uint64_t countAndFlagsBits = sub_A3FC((uint64_t)a2, (unint64_t)v3, (uint64_t *)&v77);
      sub_F77B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      id v26 = [v19 chatIdentifier];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = sub_F7220();
        unint64_t v30 = v29;

        v76.scheme._uint64_t countAndFlagsBits = sub_A3FC(v28, v30, (uint64_t *)&v77);
        sub_F77B0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 22) = 1026;
        LODWORD(v76.scheme._countAndFlagsBits) = v74;
        sub_F77B0();
        _os_log_impl(&dword_0, v20, (os_log_type_t)v72, "Couldn't resolve context for sending read receipt for %s to chat %s: %{public}u", (uint8_t *)v22, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v10, v6);
        return;
      }
    }
    else
    {

      __break(1u);
    }

    __break(1u);
    swift_errorRelease();

    swift_errorRelease();
    __break(1u);
    swift_errorRelease();

    swift_errorRelease();
    __break(1u);

    __break(1u);
    goto LABEL_35;
  }
  sub_B750(v12, 0);
  os_log_type_t v31 = sub_6768(a2, v13);
  unsigned int v32 = [a2 style];
  if (v32 != 43)
  {
    a2 = 0;
    id v47 = v31;
    goto LABEL_17;
  }

  id v33 = [a1 sender];
  if (v33)
  {
    BOOL v34 = v33;
    uint64_t v35 = sub_F7220();
    unint64_t v37 = v36;

    v38._uint64_t countAndFlagsBits = v35;
    v38._object = v37;
    RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v76, v38, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    if (v39)
    {
      sub_B8C4(v13, 0);
      id v40 = [self sharedInstance];
      if (v40)
      {
        uint64_t v41 = v40;
        strcpy((char *)&v77, "message GUID ");
        HIWORD(v77) = -4864;
        id v42 = [a1 guid];
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v44 = sub_F7220();
          uint64_t v46 = v45;
        }
        else
        {
          uint64_t v44 = 0x3E6C696E3CLL;
          uint64_t v46 = (void *)0xE500000000000000;
        }
        v84._uint64_t countAndFlagsBits = v44;
        v84._object = v46;
        sub_F72E0(v84);
        swift_bridgeObjectRelease();
        long long v64 = v77;
        uint64_t v65 = sub_F78C0();
        LOBYTE(v77) = 3;
        *((void *)&v77 + 1) = v65;
        uint64_t v78 = v66;
        long long v79 = v64;
        uint64_t v80 = v39;
        char v81 = 0;
        swift_bridgeObjectRetain();
        swift_errorRetain();
        sub_6204C((unsigned __int8 *)&v77);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();

        sub_B8C4(v13, 0);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        return;
      }
      goto LABEL_37;
    }
    uint64_t v62 = sub_6CA4(0, &qword_127C60);
    __chkstk_darwin(v62);
    *(void *)&v70[-16] = v13;
    RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))j___s7CoreRCS17RCSPersistentMenuC4menuSo012IMPersistentD0CSgvg, &v77);
    sub_6D20((uint64_t)&v76);
    id v47 = CTLazuliDestination.init(handle:countryCode:)((uint64_t)&v77, (void (*)(void))variable initialization expression of RCSHandle.alternateHandle);
    v82[3] = sub_6CA4(0, &qword_127C48);
    v82[4] = &protocol witness table for IMDChat;
    v82[0] = a2;
    sub_61854((uint64_t)v82, (uint64_t)v75);
    uint64_t v63 = a2;
    a2 = sub_5FD68((uint64_t)v75);
    sub_6AA0((uint64_t)v82);
LABEL_17:
    id v48 = [a1 fallbackHash];
    if (v48 || (id v48 = [a1 guid]) != 0)
    {
      uint64_t v49 = sub_F7220();
      uint64_t v51 = v50;

      sub_6CA4(0, &qword_127CF8);
      id v52 = CTLazuliOperationID.init(id:)(v49, v51);
      sub_6726C((uint64_t)v13, 2, (uint64_t)v52, (uint64_t)v47, a2);
      sub_B8C4(v13, 0);
      id v53 = [a1 guid];
      if (v53)
      {
        uint64_t v54 = v53;
        [v3 didSendMessageReadReceiptForMessageID:v53];

        sub_B8C4(v13, 0);
        return;
      }
      goto LABEL_36;
    }
LABEL_35:
    __break(1u);
LABEL_36:

    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_B8C4(v13, 0);
  id v55 = [self sharedInstance];
  if (!v55)
  {
LABEL_38:
    __break(1u);
    return;
  }
  uint64_t v56 = v55;
  strcpy((char *)&v77, "message GUID ");
  HIWORD(v77) = -4864;
  id v57 = [a1 guid];
  if (v57)
  {
    uint64_t v58 = v57;
    uint64_t v59 = sub_F7220();
    uint64_t v61 = v60;
  }
  else
  {
    uint64_t v59 = 0x3E6C696E3CLL;
    uint64_t v61 = (void *)0xE500000000000000;
  }
  v85._uint64_t countAndFlagsBits = v59;
  v85._object = v61;
  sub_F72E0(v85);
  swift_bridgeObjectRelease();
  long long v67 = v77;
  uint64_t v68 = sub_F78C0();
  LOBYTE(v77) = 3;
  *((void *)&v77 + 1) = v68;
  uint64_t v78 = v69;
  long long v79 = v67;
  uint64_t v80 = 0;
  char v81 = 0;
  swift_bridgeObjectRetain();
  sub_6204C((unsigned __int8 *)&v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  sub_B8C4(v13, 0);

  swift_bridgeObjectRelease();
}

void sub_5BC00(id a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  BOOL v34 = (char *)v33 - v7;
  uint64_t v8 = sub_551C(&qword_127C70);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_127B90 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_8B44(v8, (uint64_t)qword_127E68);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, v12, v8);
  sub_F6FF0();
  char v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  if (v37 == 1)
  {
    if ([a1 style] == 45) {
      goto LABEL_8;
    }
    if (qword_127B40 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_8B44(v8, (uint64_t)qword_127D78);
    v13(v11, v15, v8);
    sub_F6FF0();
    v14(v11, v8);
    if (v37 == 1)
    {
LABEL_8:
      id v16 = [a1 chatIdentifier];
      if (v16)
      {
        unint64_t v17 = v16;
        id v18 = [a1 style];
        [v35 shouldSendReadReceiptsForChat:v17 style:v18];

        return;
      }
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
    uint64_t v24 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v34, v23, v2);
    a1 = a1;
    uint64_t v25 = sub_F70D0();
    os_log_type_t v26 = sub_F7690();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      id v35 = (id)swift_slowAlloc();
      id v37 = v35;
      *(_DWORD *)uint64_t v27 = 136315138;
      id v28 = [a1 guid];
      if (!v28)
      {
LABEL_19:

        __break(1u);
        return;
      }
      unint64_t v29 = v28;
      v33[1] = v27 + 4;
      uint64_t v30 = sub_F7220();
      unint64_t v32 = v31;

      uint64_t v36 = sub_A3FC(v30, v32, (uint64_t *)&v37);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v25, v26, "Not sending read receipt to group chat %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v24, v2);
    return;
  }
  uint64_t v19 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v19, v2);
  uint64_t v20 = sub_F70D0();
  os_log_type_t v21 = sub_F7670();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "Not sending read disposition notification due to override", v22, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t RCSServiceSession.updateDisplayName(_:fromDisplayName:fromID:forChatID:identifier:style:messageID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13)
{
  id v14 = v13;
  id v124 = a8;
  uint64_t v120 = a7;
  uint64_t v114 = a4;
  uint64_t v110 = a3;
  uint64_t v118 = a2;
  uint64_t v117 = a1;
  int v122 = a11;
  uint64_t v123 = a9;
  uint64_t v17 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v17 - 8);
  char v109 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_551C(&qword_127C70);
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  unint64_t v111 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_F70F0();
  uint64_t v119 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  os_log_type_t v26 = (char *)&v108 - v25;
  __chkstk_darwin(v24);
  id v28 = (char *)&v108 - v27;
  uint64_t v125 = a10;
  if (a10)
  {
    unint64_t v29 = (void *)sub_F71F0();
    id v30 = [v14 chatForChatIdentifier:v29 style:v122];

    id v121 = v30;
    if (v30) {
      goto LABEL_5;
    }
  }
  if (v124)
  {
    id v31 = [self sharedInstance];
    id v32 = v14;
    id v33 = (void *)sub_F71F0();
    id v34 = [v31 existingChatWithGUID:v33];

    id v14 = v32;
    id v121 = v34;
    if (v34)
    {
LABEL_5:
      uint64_t v116 = a13;
      uint64_t v115 = a12;
      uint64_t v35 = a5;
      uint64_t v128 = a5;
      unint64_t v129 = a6;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = 0;
      swift_bridgeObjectRetain();
      if (!IMSharedHelperRetrieveSimDetailsFromTelephony())
      {
        uint64_t v49 = v118;
        uint64_t v50 = v125;
        uint64_t result = IMSharedHelperRetrieveSimDetailsFromTelephony();
        if ((result & 1) == 0)
        {
LABEL_44:
          uint64_t v97 = v14;
          id v67 = v121;
          sub_5CF50(v97, v117, v49, (uint64_t)v121, (uint64_t)&v128, v115, v116);
          swift_release();
          goto LABEL_45;
        }
LABEL_13:
        if (v49)
        {
          uint64_t result = sub_F71F0();
          uint64_t v51 = (void *)result;
        }
        else
        {
          uint64_t v51 = 0;
        }
        if (v114)
        {
          uint64_t result = sub_F71F0();
          uint64_t v56 = (void *)result;
          if (a6)
          {
LABEL_21:
            swift_bridgeObjectRetain();
            id v57 = (void *)sub_F71F0();
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t v56 = 0;
          if (a6) {
            goto LABEL_21;
          }
        }
        id v57 = 0;
LABEL_24:
        if (v124)
        {
          uint64_t result = sub_F71F0();
          if (v50)
          {
            uint64_t v58 = (void *)result;
            uint64_t v59 = v14;
            uint64_t result = sub_F71F0();
            if (v116)
            {
              uint64_t v60 = (void *)result;
              uint64_t v61 = (void *)sub_F71F0();
              v127.receiver = v59;
              v127.super_class = (Class)RCSServiceSession;
              objc_msgSendSuper2(&v127, "updateDisplayName:fromDisplayName:fromID:forChatID:identifier:style:messageID:", v51, v56, v57, v58, v60, v122, v61);

              if (qword_127BC8 != -1) {
                swift_once();
              }
              uint64_t v62 = v113;
              uint64_t v63 = sub_8B44(v113, (uint64_t)qword_127F10);
              uint64_t v64 = v112;
              uint64_t v65 = v111;
              (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v111, v63, v62);
              sub_F6FF0();
              (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v62);
              uint64_t v66 = v125;
              if (v126)
              {
                id v67 = (id)sub_F71F0();
                [v59 markItemFailedWithGUID:v67 errorCode:4];
                swift_release();

LABEL_45:
                return swift_bridgeObjectRelease();
              }
              uint64_t v68 = sub_F7520();
              uint64_t v69 = (uint64_t)v109;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v109, 1, 1, v68);
              sub_F74E0();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v70 = v49;
              uint64_t v71 = v116;
              swift_bridgeObjectRetain();
              id v72 = v121;
              id v73 = v59;
              uint64_t v74 = sub_F74D0();
              uint64_t v75 = (void *)swift_allocObject();
              uint64_t v75[2] = v74;
              v75[3] = &protocol witness table for MainActor;
              v75[4] = v73;
              v75[5] = v72;
              v75[6] = v117;
              v75[7] = v70;
              uint64_t v76 = v123;
              v75[8] = v36;
              v75[9] = v76;
              uint64_t v77 = v115;
              v75[10] = v66;
              v75[11] = v77;
              v75[12] = v71;
              sub_9EAC(v69, (uint64_t)&unk_128888, (uint64_t)v75);

              swift_release();
LABEL_59:
              swift_release();
              return swift_bridgeObjectRelease();
            }
            goto LABEL_63;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_63:
        __break(1u);
        return result;
      }
      if (a6)
      {
        id v108 = v14;
        id v37 = self;
        swift_bridgeObjectRetain();
        id v38 = [v37 sharedInstance];
        id v39 = [v38 ctSubscriptionInfo];

        if (v39)
        {
          id v40 = (void *)sub_F71F0();
          id v41 = objc_msgSend(v39, "__im_subscriptionContextForPhoneNumber:", v40);

          id v42 = *(void **)(v36 + 16);
          *(void *)(v36 + 16) = v41;
          uint64_t v35 = a5;
        }
        else
        {
          id v42 = *(void **)(v36 + 16);
          *(void *)(v36 + 16) = 0;
        }

        uint64_t v49 = v118;
        if (!*(void *)(v36 + 16))
        {
          uint64_t v91 = Logger.rcs.unsafeMutableAddressor();
          uint64_t v92 = v119;
          (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v28, v91, v20);
          swift_bridgeObjectRetain();
          uint64_t v93 = sub_F70D0();
          os_log_type_t v94 = sub_F7690();
          if (os_log_type_enabled(v93, v94))
          {
            uint64_t v95 = (uint8_t *)swift_slowAlloc();
            uint64_t v96 = swift_slowAlloc();
            uint64_t v125 = v20;
            *(void *)&long long v131 = v96;
            id v124 = (void *)v36;
            *(_DWORD *)uint64_t v95 = 136315138;
            swift_bridgeObjectRetain();
            v130.scheme._uint64_t countAndFlagsBits = sub_A3FC(v35, a6, (uint64_t *)&v131);
            sub_F77B0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_0, v93, v94, "Couldn't find a subscription for phone number %s, failing display name change", v95, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v92 + 8))(v28, v125);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v28, v20);
          }
          if (v116) {
            char v107 = (void *)sub_F71F0();
          }
          else {
            char v107 = 0;
          }
          [v108 markItemFailedWithGUID:v107 errorCode:4];

          goto LABEL_59;
        }
        swift_bridgeObjectRelease();
        id v14 = v108;
LABEL_35:
        uint64_t v78 = *(void **)(v36 + 16);
        uint64_t v50 = v125;
        if (v78)
        {
          id v79 = v78;
          id v80 = [v79 phoneNumber];
          if (v80)
          {
            char v81 = v80;
            id v82 = v14;
            uint64_t v83 = sub_F7220();
            Swift::String v85 = v84;

            unint64_t v86 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
            v87._uint64_t countAndFlagsBits = 7103860;
            v87._object = (void *)0xE300000000000000;
            v88._uint64_t countAndFlagsBits = v83;
            v88._object = v85;
            RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v130, v87, v88, (Swift::OpaquePointer)v86, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
            __chkstk_darwin(v89);
            RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1E93C, &v131);
            sub_6D20((uint64_t)&v130);
            uint64_t v35 = v132;
            unint64_t v90 = v133;
            swift_bridgeObjectRetain();
            sub_6D20((uint64_t)&v131);
            swift_bridgeObjectRelease();

            a6 = v90;
            id v14 = v82;
            goto LABEL_43;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRetain();
LABEL_43:
        uint64_t v128 = v35;
        unint64_t v129 = a6;
        uint64_t result = IMSharedHelperRetrieveSimDetailsFromTelephony();
        if ((result & 1) == 0) {
          goto LABEL_44;
        }
        goto LABEL_13;
      }
      id v52 = [v14 subscriptionContextForChat:v121];
      uint64_t v53 = v20;
      if (v52)
      {
        uint64_t v54 = v52;
        if (sub_53784(v52))
        {
          id v55 = *(void **)(v36 + 16);
          *(void *)(v36 + 16) = v54;

          uint64_t v49 = v118;
          goto LABEL_35;
        }
      }
      uint64_t v98 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v99 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v26, v98, v20);
      uint64_t v100 = v121;
      uint64_t v101 = sub_F70D0();
      os_log_type_t v102 = sub_F7690();
      if (os_log_type_enabled(v101, v102))
      {
        id v108 = v14;
        objc_super v103 = (uint8_t *)swift_slowAlloc();
        id v124 = (void *)swift_slowAlloc();
        *(_DWORD *)objc_super v103 = 138412290;
        uint64_t v125 = v53;
        long long v104 = v103;
        *(void *)&long long v131 = v100;
        uint64_t v105 = v100;
        uint64_t v99 = v119;
        sub_F77B0();
        void *v124 = v100;

        id v14 = v108;
        _os_log_impl(&dword_0, v101, v102, "Couldn't find a subscription for chat %@, failing display name change", v104, 0xCu);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v53 = v125;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v101 = v100;
      }

      (*(void (**)(char *, uint64_t))(v99 + 8))(v26, v53);
      if (v116) {
        uint64_t v106 = (void *)sub_F71F0();
      }
      else {
        uint64_t v106 = 0;
      }
      [v14 markItemFailedWithGUID:v106 errorCode:4];

      goto LABEL_59;
    }
  }
  uint64_t v43 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v44 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v23, v43, v20);
  id v45 = sub_F70D0();
  os_log_type_t v46 = sub_F7690();
  if (os_log_type_enabled(v45, v46))
  {
    id v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v47 = 0;
    _os_log_impl(&dword_0, v45, v46, "Received request to update display name but could not find a chat", v47, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v23, v20);
}

void sub_5CF50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3) {
    char v11 = (void *)sub_F71F0();
  }
  else {
    char v11 = 0;
  }
  swift_beginAccess();
  if (*(void *)(a5 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    if (a7)
    {
      uint64_t v13 = (void *)sub_F71F0();
      [a1 relayDisplayNameChange:v11 forChat:a4 fromID:v12 messageID:v13 didOccurLocally:0];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_5D048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 152) = v15;
  *(void *)(v8 + 160) = v16;
  *(_OWORD *)(v8 + 136) = v14;
  *(void *)(v8 + 120) = a7;
  *(void *)(v8 + 128) = a8;
  *(void *)(v8 + 104) = a5;
  *(void *)(v8 + 112) = a6;
  *(void *)(v8 + 96) = a4;
  uint64_t v9 = sub_F70F0();
  *(void *)(v8 + 168) = v9;
  *(void *)(v8 + 176) = *(void *)(v9 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  *(void *)(v8 + 192) = swift_task_alloc();
  sub_F74E0();
  *(void *)(v8 + 200) = sub_F74D0();
  uint64_t v11 = sub_F7470();
  *(void *)(v8 + 208) = v11;
  *(void *)(v8 + 216) = v10;
  return _swift_task_switch(sub_5D168, v11, v10);
}

void sub_5D168()
{
  uint64_t v1 = *(void *)(*(void *)(v0[12] + OBJC_IVAR___RCSServiceSession_state) + 40);
  v0[28] = v1;
  if (v1)
  {
    uint64_t v2 = v0[16];
    v0[5] = v0[13];
    swift_beginAccess();
    uint64_t v3 = *(void **)(v2 + 16);
    v0[29] = v3;
    v0[6] = v3;
    swift_retain();
    id v4 = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[30] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_5D278;
    uint64_t v6 = v0[14];
    uint64_t v7 = v0[15];
    RCSGroupController.renameGroup(chat:to:subscriptionContext:)((uint64_t)(v0 + 5), v6, v7, (uint64_t)(v0 + 6));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_5D278()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 232);
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();

  swift_release();
  uint64_t v4 = *(void *)(v2 + 208);
  uint64_t v5 = *(void *)(v2 + 216);
  if (v0) {
    uint64_t v6 = sub_5D6BC;
  }
  else {
    uint64_t v6 = sub_5D3C8;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_5D3C8()
{
  id v30 = v0;
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = (void *)v0[13];
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  swift_bridgeObjectRetain_n();
  id v6 = v4;
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F7670();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v26 = v0[22];
    uint64_t v27 = v0[21];
    uint64_t v28 = v0[24];
    unint64_t v9 = v0[15];
    uint64_t v22 = v0[14];
    os_log_type_t type = v8;
    uint64_t v10 = (void *)v0[13];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v0[10] = v10;
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v11 = 138412546;
    os_log_t log = v7;
    id v13 = v10;
    sub_F77B0();
    *uint64_t v12 = v10;

    *(_WORD *)(v11 + 12) = 2080;
    if (v9) {
      uint64_t v14 = v22;
    }
    else {
      uint64_t v14 = 0x3E6C696E3CLL;
    }
    if (v9) {
      unint64_t v15 = v9;
    }
    else {
      unint64_t v15 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    v0[11] = sub_A3FC(v14, v15, &v29);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, log, type, "Updated group name for %@ to %s", (uint8_t *)v11, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    uint64_t v16 = v0[24];
    uint64_t v18 = v0[21];
    uint64_t v17 = v0[22];
    uint64_t v19 = (void *)v0[13];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_5D6BC()
{
  uint64_t v29 = v0;
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  unint64_t v4 = *(void *)(v0 + 144);
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v6 = sub_F70D0();
  os_log_type_t v7 = sub_F7690();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v26 = v7;
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315650;
    if (!v8)
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_errorRelease();
      __break(1u);
      return result;
    }
    uint64_t v22 = v0 + 72;
    uint64_t v23 = *(void *)(v0 + 176);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 112);
    unint64_t v11 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_A3FC(v10, v4, &v28);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    if (v11) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0x3E6C696E3CLL;
    }
    if (v11) {
      unint64_t v14 = v11;
    }
    else {
      unint64_t v14 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_A3FC(v13, v14, &v28);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 72) = v15;
    sub_F77B0();
    *uint64_t v27 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v6, v26, "Failed to update group name for %s to %s: %@", (uint8_t *)v9, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
    if (!*(void *)(v0 + 160)) {
      goto LABEL_10;
    }
LABEL_12:
    uint64_t v16 = (void *)sub_F71F0();
    goto LABEL_13;
  }
  uint64_t v18 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 168);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_errorRelease();
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  if (*(void *)(v0 + 160)) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v16 = 0;
LABEL_13:
  objc_msgSend(*(id *)(v0 + 96), "markItemFailedWithGUID:errorCode:", v16, 4, v22);

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

void RCSServiceSession.sendGroupPhotoUpdate(_:toChatID:identifier:style:account:isPhotoRefresh:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, char a10)
{
  int v21 = a7;
  uint64_t v11 = sub_551C(&qword_127C70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_127BB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_8B44(v11, (uint64_t)qword_127EE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v23 & 1) == 0)
  {
    if (a2) {
      uint64_t v16 = (void *)sub_F71F0();
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v17 = (void *)sub_F71F0();
    uint64_t v18 = (void *)sub_F71F0();
    uint64_t v19 = (void *)sub_F71F0();
    v22.receiver = (id)v20[1];
    v22.super_class = (Class)RCSServiceSession;
    objc_msgSendSuper2(&v22, "sendGroupPhotoUpdate:toChatID:identifier:style:account:isPhotoRefresh:", v16, v17, v18, v21, v19, a10 & 1);
  }
}

Swift::Void __swiftcall RCSServiceSession._updatePhoneNumberCallerID()()
{
  v0.super_class = (Class)RCSServiceSession;
  objc_msgSendSuper2(&v0, "_updatePhoneNumberCallerID");
}

id RCSServiceSession.groupID(for:)(void *a1)
{
  id result = [a1 chatIdentifier];
  if (!result)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  unint64_t v4 = result;
  id v5 = objc_msgSend(v1, "chatForChatIdentifier:style:", result, objc_msgSend(a1, "style"));

  if (v5)
  {
    id result = [v5 originalGroupID];
    if (result)
    {
      id v6 = result;
      uint64_t v7 = sub_F7220();

      return (id)v7;
    }
    goto LABEL_8;
  }
  v10.receiver = v1;
  v10.super_class = (Class)RCSServiceSession;
  id v8 = objc_msgSendSuper2(&v10, "groupIDForChat:", a1);
  uint64_t v9 = sub_F7220();

  return (id)v9;
}

void RCSServiceSession.allowed(toSendMessage:to:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_551C(&qword_127C70);
  uint64_t v7 = *(void (***)(char *, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_F70F0();
  uint64_t v10 = *(void *)(v63 - 8);
  uint64_t v11 = __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint8_t *)&v60 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v60 - v16;
  if ([a1 isFinished]) {
    goto LABEL_2;
  }
  uint64_t v62 = v10;
  if (IMSharedHelperRetrieveSimDetailsFromTelephony())
  {
    id v18 = [v2 subscriptionContextForChat:a2];
    if (!v18 || (uint64_t v19 = v18, v20 = sub_BDAC(v18, (int)[a2 style]), v19, (v20 & 1) == 0))
    {
      uint64_t v40 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v41 = v62;
      uint64_t v42 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v17, v40, v63);
      uint64_t v7 = a1;
      uint64_t v43 = sub_F70D0();
      os_log_type_t v44 = sub_F7670();
      if (!os_log_type_enabled(v43, v44))
      {

        (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
        return;
      }
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      id v45 = [v7 guid];
      if (v45)
      {
        os_log_type_t v46 = v45;
        uint64_t v47 = sub_F7220();
        unint64_t v49 = v48;

        uint64_t v64 = sub_A3FC(v47, v49, &v65);
        sub_F77B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v43, v44, "Not sending typing indicator message %s due to carrier policy", v15, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v62 + 8))(v17, v63);
        return;
      }
      goto LABEL_26;
    }
  }
  unsigned int v21 = [a2 style];
  uint64_t v22 = v62;
  if (v21 == 43)
  {
    if (qword_127B48 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_8B44(v6, (uint64_t)qword_127D90);
    ((void (*)(char *, uint64_t, uint64_t))v7[2])(v9, v23, v6);
    sub_F6FF0();
    uint64_t v24 = v7[1];
    ++v7;
    v24(v9, v6);
    if ((v65 & 1) == 0)
    {
      uint64_t v50 = Logger.rcs.unsafeMutableAddressor();
      uint64_t v51 = v63;
      (*(void (**)(uint8_t *, uint64_t, uint64_t))(v22 + 16))(v15, v50, v63);
      uint64_t v7 = a1;
      id v52 = sub_F70D0();
      os_log_type_t v53 = sub_F7670();
      if (!os_log_type_enabled(v52, v53))
      {

        (*(void (**)(uint8_t *, uint64_t))(v22 + 8))(v15, v51);
        return;
      }
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315138;
      id v55 = [v7 guid];
      if (v55)
      {
        uint64_t v56 = v55;
        uint64_t v57 = sub_F7220();
        unint64_t v59 = v58;

        uint64_t v64 = sub_A3FC(v57, v59, &v65);
        sub_F77B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v52, v53, "Not sending typing indicator message %s as it is for a group chat", v54, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint8_t *, uint64_t))(v62 + 8))(v15, v63);
        return;
      }
      goto LABEL_27;
    }
  }
  if (![a2 isChatBot])
  {
LABEL_2:
    v66.receiver = v3;
    v66.super_class = (Class)RCSServiceSession;
    objc_msgSendSuper2(&v66, "allowedToSendMessage:toChat:", a1, a2);
    return;
  }
  id v25 = [self sharedInstance];
  if (!v25)
  {
    __break(1u);
LABEL_26:

    __break(1u);
LABEL_27:

    __break(1u);
    goto LABEL_28;
  }
  os_log_type_t v26 = v25;
  unsigned __int8 v27 = [v25 isRBMEnabled];

  uint64_t v28 = v62;
  if (v27) {
    goto LABEL_2;
  }
  uint64_t v29 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v30 = v61;
  uint64_t v31 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v61, v29, v63);
  uint64_t v15 = a1;
  id v32 = sub_F70D0();
  os_log_type_t v33 = sub_F7670();
  if (!os_log_type_enabled(v32, v33))
  {

    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v31);
    return;
  }
  id v34 = (uint8_t *)swift_slowAlloc();
  uint64_t v65 = swift_slowAlloc();
  *(_DWORD *)id v34 = 136315138;
  id v35 = [(uint8_t *)v15 guid];
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = sub_F7220();
    unint64_t v39 = v38;

    uint64_t v64 = sub_A3FC(v37, v39, &v65);
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v32, v33, "Not sending typing indicator message %s as RBM is disabled in Settings", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
    return;
  }
LABEL_28:

  __break(1u);
}

uint64_t RCSServiceSession._enqueue(_:withTimeout:)(uint64_t result, uint64_t a2, double a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + OBJC_IVAR___RCSServiceSession_state) + 112);
  if (v4)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, double))(*(void *)v4 + 144);
    swift_retain();
    v8(v7, a2, a3);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_5EB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    v5[4] = a1;
    v5[5] = a2;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_552C4;
    v5[3] = &unk_11E8E8;
    uint64_t v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v4 = 0;
  }
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v4);
  _Block_release(v4);
}

uint64_t RCSServiceSession.wait(forChatRelayReadiness:with:)(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v7 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony() || [a1 style] != 43) {
    return a2();
  }
  sub_F74F0();
  uint64_t v10 = sub_F7520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  sub_F74E0();
  id v11 = v3;
  id v12 = a1;
  swift_retain();
  uint64_t v13 = sub_F74D0();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v11;
  v14[5] = v12;
  v14[6] = a2;
  v14[7] = a3;
  sub_9EAC((uint64_t)v9, (uint64_t)&unk_128898, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_5EE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  uint64_t v8 = sub_F70F0();
  v7[15] = v8;
  v7[16] = *(void *)(v8 - 8);
  v7[17] = swift_task_alloc();
  sub_F74E0();
  v7[18] = sub_F74D0();
  uint64_t v10 = sub_F7470();
  v7[19] = v10;
  v7[20] = v9;
  return _swift_task_switch(sub_5EF00, v10, v9);
}

void sub_5EF00()
{
  uint64_t v1 = *(void *)(*(void *)(v0[11] + OBJC_IVAR___RCSServiceSession_state) + 40);
  v0[21] = v1;
  if (v1)
  {
    v0[7] = v0[12];
    v0[8] = 0;
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[22] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_5EFF4;
    RCSGroupController.resolveGroupIdentity(for:subscriptionContext:)((uint64_t)(v0 + 2), (uint64_t)(v0 + 7), (uint64_t)(v0 + 8));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_5EFF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    id v5 = sub_5F19C;
  }
  else
  {
    sub_6BEC(v2 + 16);
    swift_release();
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    id v5 = sub_5F124;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_5F124()
{
  uint64_t v1 = swift_release();
  (*(void (**)(uint64_t))(v0 + 104))(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_5F19C()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void **)(v0 + 96);
  swift_release();
  uint64_t v5 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  swift_errorRetain();
  id v6 = v4;
  swift_errorRetain();
  id v7 = v6;
  uint64_t v8 = sub_F70D0();
  os_log_type_t v9 = sub_F7690();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v30 = v9;
    os_log_t log = v8;
    uint64_t v10 = *(void **)(v0 + 96);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    id v12 = [v10 guid];
    if (!v12)
    {
      os_log_type_t v26 = *(void **)(v0 + 96);
      swift_errorRelease();

      uint64_t result = swift_errorRelease();
      __break(1u);
      return result;
    }
    uint64_t v13 = v12;
    uint64_t v27 = *(void *)(v0 + 128);
    uint64_t v28 = *(void *)(v0 + 120);
    uint64_t v29 = *(void *)(v0 + 136);
    uint64_t v14 = *(void **)(v0 + 96);
    uint64_t v15 = sub_F7220();
    unint64_t v17 = v16;

    *(void *)(v0 + 72) = sub_A3FC(v15, v17, &v33);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v18;
    sub_F77B0();
    *uint64_t v31 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, log, v30, "Failed to ensure chat %s is ready RCS before relaying - relay may not work correctly: %@", (uint8_t *)v11, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 128);
    uint64_t v20 = *(void *)(v0 + 136);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void **)(v0 + 96);
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();

    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(uint64_t))(v0 + 104))(v19);
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

BOOL static IMAccountRegistrationStatus.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL sub_5F5EC(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_5F600(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_5F614(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_5F628(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_5F63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5F6A0()
{
  uint64_t v1 = type metadata accessor for RCSMessage(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = (char *)v0 + v3;
  if (*((unsigned char *)v0 + v3 + 122))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5[121])
    {
      uint64_t v6 = (uint64_t)(v5 + 64);
LABEL_6:
      sub_6BEC(v6);
      goto LABEL_8;
    }
  }
  else if (v5[57])
  {
    uint64_t v6 = (uint64_t)v0 + v3;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = &v5[*(int *)(v1 + 28)];
  uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      case 1u:
        uint64_t v9 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = &v7[*(int *)(v9 + 24)];
          uint64_t v11 = sub_F6DC0();
          (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
          id v12 = &v7[*(int *)(v9 + 28)];
          uint64_t v13 = sub_F6EE0();
          (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        }
        uint64_t v14 = &v7[*(int *)(type metadata accessor for RCSFile(0) + 20)];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = type metadata accessor for RCSFile.DispositionInformation(0);
        unint64_t v16 = &v14[*(int *)(v15 + 28)];
        uint64_t v17 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        uint64_t v18 = &v14[*(int *)(v15 + 32)];
        uint64_t v19 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        sub_551C(&qword_128218);
        goto LABEL_14;
      case 3u:
        sub_6BEC((uint64_t)v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)v7 + 9))
        {
          swift_bridgeObjectRelease();
          sub_2852C(*((void *)v7 + 10), *((void *)v7 + 11));
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
      case 6u:
      case 7u:
LABEL_14:
        swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v20 = (uint64_t)&v5[*(int *)(v1 + 32)];
  if (*(void *)(v20 + 24)) {
    sub_6BEC(v20);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 17, v2 | 7);
}

uint64_t sub_5FB0C()
{
  uint64_t v2 = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = (uint64_t)v0 + v3;
  uint64_t v10 = (void *)((char *)v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_57A4;
  return sub_579D0(v4, v5, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_5FC5C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_5FCAC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_46BC;
  return sub_5924C(v2, v3, v4, v5, v6);
}

id sub_5FD68(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_127C70);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v6 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v6;
  uint64_t v15 = *(void *)(a1 + 32);
  id v7 = [objc_allocWithZone((Class)CTLazuliGroupChatUri) init];
  IMDChatRCSGroupIdentity.uri.getter((uint64_t)v16);
  sub_6C3C((uint64_t)v16, (uint64_t)v17);
  if (*((void *)&v17[0] + 1))
  {
    void v18[2] = v17[0];
    v18[3] = v17[1];
    v19[0] = v18[0];
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v18 + 9);
    RCSHandle.rawValue.getter();
    sub_6D74(v16);
    uint64_t v8 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v7 setFocus:v8];
  }
  if (qword_127BB0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_8B44(v2, (uint64_t)qword_127EC8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  sub_F6FF0();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  if (v13[15] == 1 && (IMDChatRCSGroupIdentity.conversationID.getter(), v10))
  {
    uint64_t v11 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = (void *)sub_F71F0();
  }
  [v7 setConversationID:v11];

  sub_6AA0((uint64_t)v14);
  return v7;
}

void sub_5FFDC(uint64_t a1, void *a2, uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v106 = a2;
  uint64_t v96 = a1;
  LODWORD(v108) = a5;
  int v17 = a5;
  uint64_t v100 = sub_F70F0();
  uint64_t v18 = *(void *)(v100 - 8);
  uint64_t v19 = __chkstk_darwin(v100);
  unint64_t v90 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v86 = (char *)&v83 - v22;
  __chkstk_darwin(v21);
  objc_super v103 = (char *)&v83 - v23;
  if (v17 == 43)
  {
    uint64_t v24 = type metadata accessor for IMDChatRCSGroupSnapshot();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = IMDChatRCSGroupSnapshot.init(originalGroupID:properties:)(a6, a7, a8);
    uint64_t v118 = v24;
    uint64_t v119 = &protocol witness table for IMDChatRCSGroupSnapshot;
    v117[0] = v25;
    swift_retain();
    IMDChatRCSGroupIdentity.uri.getter((uint64_t)v113);
    sub_6C3C((uint64_t)v113, (uint64_t)&v114);
    if (!v114.scheme._object)
    {
      sub_6AA0((uint64_t)v117);
      swift_release();
      return;
    }
    v115[0] = v114.scheme;
    v115[1] = v114.id;
    v116[0] = *(_OWORD *)&v114.attributes._rawValue;
    *(Swift::String_optional *)((char *)v116 + 9) = *(Swift::String_optional *)((char *)&v114.alternateHandle + 1);
    uint64_t v26 = RCSHandle.rawValue.getter();
    uint64_t v28 = v27;
    sub_6D74(v113);
    swift_release();
    sub_6AA0((uint64_t)v117);
    goto LABEL_13;
  }
  id v29 = [self sharedInstance];
  id v30 = [v29 ctSubscriptionInfo];

  if (!v30) {
    return;
  }
  if (!a12)
  {
    uint64_t v31 = 0;
    if (a10) {
      goto LABEL_7;
    }
LABEL_10:
    id v32 = 0;
    goto LABEL_11;
  }
  uint64_t v31 = (void *)sub_F71F0();
  if (!a10) {
    goto LABEL_10;
  }
LABEL_7:
  id v32 = (void *)sub_F71F0();
LABEL_11:
  id v33 = objc_msgSend(v30, "__im_subscriptionContextForForSimID:phoneNumber:", v31, v32);

  if (!v33) {
    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
  v35._uint64_t countAndFlagsBits = 7103860;
  v35._object = (void *)0xE300000000000000;
  v36._uint64_t countAndFlagsBits = a3;
  v36._object = a4;
  RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v114, v35, v36, (Swift::OpaquePointer)v34, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
  __chkstk_darwin(v37);
  *((void *)&v83 - 2) = v33;
  RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))RCSPersistentMenu.menu.getter, v115);
  sub_6D20((uint64_t)&v114);
  uint64_t v26 = RCSHandle.rawValue.getter();
  uint64_t v28 = v38;

  sub_6D20((uint64_t)v115);
LABEL_13:
  unint64_t v39 = (unint64_t)sub_3EFD0();
  unint64_t v41 = v39;
  uint64_t v42 = v103;
  if (v39 >> 62) {
    goto LABEL_41;
  }
  for (uint64_t i = *(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFFF8)); i; uint64_t i = sub_F79B0())
  {
    uint64_t v104 = v26;
    unint64_t v44 = v41 & 0xC000000000000001;
    uint64_t v95 = OBJC_IVAR___RCSServiceSession_state;
    uint64_t v101 = (void (**)(char *, uint64_t))(v18 + 8);
    os_log_type_t v102 = (NSObject **)(v18 + 16);
    Swift::String v85 = &v110;
    *(void *)&long long v40 = 136315394;
    long long v91 = v40;
    uint64_t v89 = (char *)&type metadata for Any + 8;
    int v88 = v108;
    Swift::String v87 = (void *)0x80000000001036B0;
    *(void *)&long long v40 = 136315650;
    long long v83 = v40;
    uint64_t v26 = 4;
    uint64_t v18 = v100;
    uint64_t v93 = i;
    unint64_t v94 = v41;
    unint64_t v92 = v41 & 0xC000000000000001;
    while (1)
    {
      uint64_t v45 = v26 - 4;
      if (!v44) {
        break;
      }
      id v46 = (id)sub_F78D0();
      uint64_t v47 = v26 - 3;
      if (__OFADD__(v45, 1)) {
        goto LABEL_40;
      }
LABEL_23:
      uint64_t v108 = v47;
      unint64_t v48 = v46;
      if (sub_53784(v46))
      {
        id v105 = v48;
        uint64_t v49 = Logger.rcs.unsafeMutableAddressor();
        uint64_t v50 = *v102;
        uint64_t v98 = (void *)v49;
        ((void (*)(char *))v50)(v42);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v51 = sub_F70D0();
        id v52 = v28;
        os_log_type_t v53 = sub_F7670();
        BOOL v54 = os_log_type_enabled(v51, v53);
        uint64_t v99 = v50;
        if (v54)
        {
          uint64_t v55 = v18;
          uint64_t v56 = swift_slowAlloc();
          id v111 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v56 = v91;
          swift_bridgeObjectRetain();
          *(void *)(v56 + 4) = sub_A3FC(v96, (unint64_t)v106, (uint64_t *)&v111);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v56 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v56 + 14) = sub_A3FC(v104, (unint64_t)v52, (uint64_t *)&v111);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v51, v53, "Notifying CT about deleted chat GUID %s / URI %s", (uint8_t *)v56, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v57 = v55;
          uint64_t v42 = v103;
          uint64_t v97 = *v101;
          v97(v103, v57);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v97 = *v101;
          v97(v42, v18);
        }
        id v58 = *(id *)(*(void *)(v107 + v95) + 16);
        unint64_t v59 = (void *)sub_F71F0();
        id v111 = 0;
        id v60 = v105;
        unsigned int v61 = [v58 deleteChat:v105 chat:v59 withError:&v111];

        if (v61)
        {
          id v62 = v111;

          uint64_t v18 = v100;
          uint64_t v28 = v52;
LABEL_39:
          uint64_t i = v93;
          unint64_t v41 = v94;
          unint64_t v44 = v92;
          goto LABEL_17;
        }
        id v63 = v111;
        uint64_t v64 = sub_F6D30();

        swift_willThrow();
        id v65 = [self sharedInstance];
        if (!v65) {
          __break(1u);
        }
        objc_super v66 = v65;
        id v111 = 0;
        unint64_t v112 = 0xE000000000000000;
        sub_F78A0(66);
        v122._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
        v122._object = v87;
        sub_F72E0(v122);
        v123._uint64_t countAndFlagsBits = v96;
        unint64_t v67 = (unint64_t)v106;
        v123._object = v106;
        sub_F72E0(v123);
        v124._uint64_t countAndFlagsBits = 0x20495255202F20;
        v124._object = (void *)0xE700000000000000;
        sub_F72E0(v124);
        swift_bridgeObjectRetain();
        v125._uint64_t countAndFlagsBits = v104;
        v125._object = v52;
        sub_F72E0(v125);
        swift_bridgeObjectRelease();
        v126._uint64_t countAndFlagsBits = 0x656C6574206F7420;
        v126._object = (void *)0xED0000796E6F6870;
        sub_F72E0(v126);
        uint64_t v68 = (uint64_t)v111;
        uint64_t v69 = (_UNKNOWN **)v112;
        uint64_t v70 = sub_F78C0();
        LOBYTE(v117[0]) = 4;
        v117[1] = v70;
        v117[2] = v71;
        uint64_t v118 = v68;
        uint64_t v119 = v69;
        uint64_t v120 = v64;
        char v121 = 0;
        swift_bridgeObjectRetain();
        swift_errorRetain();
        sub_6204C((unsigned __int8 *)v117);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();

        swift_bridgeObjectRelease();
        if (v88 == 43)
        {
          id v72 = v86;
          uint64_t v18 = v100;
          ((void (*)(char *, void *, uint64_t))v99)(v86, v98, v100);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_errorRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_errorRetain();
          id v73 = sub_F70D0();
          os_log_type_t v74 = sub_F7690();
          uint64_t v99 = v73;
          if (os_log_type_enabled(v73, v74))
          {
            uint64_t v75 = swift_slowAlloc();
            Swift::String v84 = (void *)swift_slowAlloc();
            uint64_t v98 = (void *)swift_slowAlloc();
            id v111 = v98;
            *(_DWORD *)uint64_t v75 = v83;
            swift_bridgeObjectRetain();
            uint64_t v109 = sub_A3FC(v96, v67, (uint64_t *)&v111);
            uint64_t v76 = v52;
            sub_F77B0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v75 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v109 = sub_A3FC(v104, (unint64_t)v52, (uint64_t *)&v111);
            sub_F77B0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v75 + 22) = 2112;
            swift_errorRetain();
            uint64_t v77 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v109 = v77;
            sub_F77B0();
            *Swift::String v84 = v77;
            swift_errorRelease();
            swift_errorRelease();
            os_log_t v78 = v99;
            _os_log_impl(&dword_0, v99, v74, "Failed to notify CT of deletion for chat %s / %s - future messages in the group may be routed to 1:1s: %@", (uint8_t *)v75, 0x20u);
            sub_551C(&qword_128C10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v18 = v100;
            swift_slowDealloc();

            swift_errorRelease();
            id v79 = v72;
LABEL_35:
            v97(v79, v18);
            uint64_t v42 = v103;
            uint64_t v28 = v76;
            goto LABEL_39;
          }

          swift_errorRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_errorRelease();
          swift_errorRelease();
        }
        else
        {
          id v72 = v90;
          uint64_t v18 = v100;
          ((void (*)(char *, void *, uint64_t))v99)(v90, v98, v100);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          id v80 = sub_F70D0();
          os_log_type_t v81 = sub_F7690();
          if (os_log_type_enabled(v80, v81))
          {
            uint64_t v82 = swift_slowAlloc();
            uint64_t v99 = swift_slowAlloc();
            id v111 = v99;
            *(_DWORD *)uint64_t v82 = v91;
            swift_bridgeObjectRetain();
            uint64_t v109 = sub_A3FC(v96, v67, (uint64_t *)&v111);
            uint64_t v76 = v52;
            sub_F77B0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v82 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v109 = sub_A3FC(v104, (unint64_t)v52, (uint64_t *)&v111);
            sub_F77B0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_0, v80, v81, "Failed to notify CT of deletion for chat %s / %s", (uint8_t *)v82, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v18 = v100;
            swift_slowDealloc();

            swift_errorRelease();
            id v79 = v90;
            goto LABEL_35;
          }

          swift_errorRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v97(v72, v18);
        uint64_t v42 = v103;
        uint64_t v28 = v52;
        goto LABEL_39;
      }

LABEL_17:
      ++v26;
      if (v108 == i) {
        goto LABEL_42;
      }
    }
    id v46 = *(id *)(v41 + 8 * v26);
    uint64_t v47 = v26 - 3;
    if (!__OFADD__(v45, 1)) {
      goto LABEL_23;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    ;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_60D0C(void *a1, uint64_t a2, unint64_t a3, unsigned __int8 a4, char a5)
{
  long long v6 = v5;
  uint64_t v12 = sub_F70F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v16 = (void *)sub_F71F0();
  id v25 = [v6 chatForChatIdentifier:v16 style:a4];

  if (v25)
  {
    id v17 = [v6 relayController];
    [v17 sendReadReceiptForMessage:a1 toChat:v25 reflectOnly:a5 & 1];

    if ((IMSharedHelperRetrieveSimDetailsFromTelephony() & 1) == 0)
    {
      if (a1)
      {
        uint64_t v23 = [a1 guid];
        if (v23)
        {
          uint64_t v24 = v23;
          objc_msgSend(v6, "didSendMessageReadReceiptForMessageID:");

          uint64_t v18 = v24;
          goto LABEL_11;
        }
LABEL_19:
        __break(1u);
        return;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (a1)
    {
      sub_5AD60(a1, v25);
      uint64_t v18 = v25;
LABEL_11:

      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v19 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v19, v12);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_F70D0();
  os_log_type_t v21 = sub_F76A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    id v25 = (void *)(v22 + 4);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_A3FC(a2, a3, &v27);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v20, v21, "Received request to send read receipt to chat %s but could not find chat", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

BOOL _sSo17RCSServiceSessionC3RCSE12chatCanMerge13withSuperChatSbSo7IMDChatC_tF_0(void *a1)
{
  *((void *)&v8 + 1) = sub_6CA4(0, &qword_127C48);
  uint64_t v9 = &protocol witness table for IMDChat;
  *(void *)&long long v7 = a1;
  id v2 = a1;
  char v3 = IMDChatRCSGroupIdentity.isValid.getter();
  if (v3)
  {
    *(void *)&long long v12 = &type metadata for IMDChatRCSGroupIdentity;
    *((void *)&v12 + 1) = &protocol witness table for IMDChatRCSGroupIdentity;
    uint64_t v4 = swift_allocObject();
    long long v5 = v8;
    *(_OWORD *)(v4 + 16) = v7;
    *(_OWORD *)(v4 + 32) = v5;
    *(void *)(v4 + 48) = v9;
  }
  else
  {
    sub_6AA0((uint64_t)&v7);
    uint64_t v4 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
  }
  uint64_t v10 = v4;
  sub_6AF4((uint64_t)&v10);
  return (v3 & 1) == 0;
}

uint64_t sub_61128()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_61190(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_57A4;
  return sub_5D048(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t _sSo17RCSServiceSessionC3RCSE33allowedToOverwriteOriginalGroupID3forSbSo7IMDChatC_tF_0(void *a1)
{
  if (IMSharedHelperRetrieveSimDetailsFromTelephony())
  {
    *((void *)&v9 + 1) = sub_6CA4(0, &qword_127C48);
    uint64_t v10 = &protocol witness table for IMDChat;
    *(void *)&long long v8 = a1;
    id v2 = a1;
    char v3 = IMDChatRCSGroupIdentity.isValid.getter();
    if (v3)
    {
      *(void *)&long long v13 = &type metadata for IMDChatRCSGroupIdentity;
      *((void *)&v13 + 1) = &protocol witness table for IMDChatRCSGroupIdentity;
      uint64_t v4 = swift_allocObject();
      long long v5 = v9;
      *(_OWORD *)(v4 + 16) = v8;
      *(_OWORD *)(v4 + 32) = v5;
      *(void *)(v4 + 48) = v10;
    }
    else
    {
      sub_6AA0((uint64_t)&v8);
      uint64_t v4 = 0;
      long long v12 = 0u;
      long long v13 = 0u;
    }
    char v6 = v3 ^ 1;
    uint64_t v11 = v4;
    sub_6AF4((uint64_t)&v11);
  }
  else
  {
    char v6 = 1;
  }
  return v6 & 1;
}

uint64_t sub_61370(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_57A4;
  return sub_5EE08(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_61444(void *a1, void *a2, void (**a3)(void))
{
  uint64_t v6 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  _Block_copy(a3);
  if (IMSharedHelperRetrieveSimDetailsFromTelephony() && [a1 style] == 43)
  {
    sub_F74F0();
    uint64_t v10 = sub_F7520();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
    sub_F74E0();
    id v11 = a2;
    id v12 = a1;
    swift_retain();
    uint64_t v13 = sub_F74D0();
    uint64_t v14 = (void *)swift_allocObject();
    _OWORD v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v11;
    v14[5] = v12;
    v14[6] = sub_617B0;
    v14[7] = v9;
    sub_9EAC((uint64_t)v8, (uint64_t)&unk_128B10, (uint64_t)v14);
    swift_release();
    return swift_release();
  }
  else
  {
    a3[2](a3);
    return swift_release();
  }
}

uint64_t _sSo17RCSServiceSessionC3RCSE24_messageUpgradesWhenSent18fromCurrentServiceSbSo13IMMessageItemC_tF_0(void *a1)
{
  id v1 = [a1 service];
  if (!v1)
  {
    sub_F7220();
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_F7220();
  uint64_t v5 = v4;

  uint64_t v6 = sub_F7220();
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v9 = sub_F7B60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
}

unint64_t sub_6170C()
{
  unint64_t result = qword_1288A0;
  if (!qword_1288A0)
  {
    type metadata accessor for IMAccountRegistrationStatus(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1288A0);
  }
  return result;
}

uint64_t type metadata accessor for RCSServiceSession(uint64_t a1)
{
  return sub_6CA4(a1, &qword_128B08);
}

uint64_t sub_61778()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_617B0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_617C4()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_61814(uint64_t a1, uint64_t a2)
{
  sub_5EB70(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_6181C()
{
  sub_6BEC(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_61854(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_618B0()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_618C0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_61908()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 48);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_57A4;
  return sub_58C0C(v2, v3, v4, v5, v6);
}

uint64_t sub_619C4(int a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_57A4;
  return sub_58D58(a1, v1);
}

uint64_t sub_61A6C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F6870656C6554;
  unint64_t v3 = 0xE900000000000079;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E6F6870656C6554;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x7370756F7247;
      break;
    case 2:
      unint64_t v3 = 0x8000000000101BE0;
      unint64_t v5 = 0xD000000000000016;
      break;
    case 3:
      unint64_t v5 = 0x6E6967617373654DLL;
      unint64_t v3 = 0xE900000000000067;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x79636176697250;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE900000000000079;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x7370756F7247) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x8000000000101BE0;
      if (v5 != 0xD000000000000016) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6E6967617373654DLL;
      unint64_t v6 = 0xE900000000000067;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x79636176697250) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_F7B60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_61C48(unsigned __int8 *a1, char *a2)
{
  return sub_61A6C(*a1, *a2);
}

Swift::Int sub_61C54()
{
  return sub_61C5C();
}

Swift::Int sub_61C5C()
{
  return sub_F7C50();
}

uint64_t sub_61D60()
{
  sub_F72C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_61E4C()
{
  return sub_61E54();
}

Swift::Int sub_61E54()
{
  return sub_F7C50();
}

uint64_t sub_61F54@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_64AA8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_61F84(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000079;
  uint64_t v3 = 0x6E6F6870656C6554;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x7370756F7247;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000016;
      a1[1] = 0x8000000000101BE0;
      break;
    case 3:
      *a1 = 0x6E6967617373654DLL;
      a1[1] = 0xE900000000000067;
      break;
    case 4:
      *a1 = 0x79636176697250;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_6204C(unsigned __int8 *a1)
{
  uint64_t v2 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_551C(&qword_128B48);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_F6FE0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v51 = v10;
  id v52 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  BOOL v54 = (char *)&v46 - v11;
  uint64_t v12 = sub_F70F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_645BC((uint64_t)a1);
  sub_645BC((uint64_t)a1);
  sub_645BC((uint64_t)a1);
  sub_645BC((uint64_t)a1);
  sub_645BC((uint64_t)a1);
  sub_645BC((uint64_t)a1);
  sub_645BC((uint64_t)a1);
  sub_645BC((uint64_t)a1);
  id v17 = sub_F70D0();
  int v50 = sub_F7690();
  if (os_log_type_enabled(v17, (os_log_type_t)v50))
  {
    uint64_t v49 = v4;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v57 = v46;
    *(_DWORD *)uint64_t v18 = 136446978;
    uint64_t v19 = *a1;
    unint64_t v20 = 0xE900000000000079;
    uint64_t v48 = v8;
    uint64_t v21 = 0x6E6F6870656C6554;
    switch(v19)
    {
      case 1:
        unint64_t v20 = 0xE600000000000000;
        uint64_t v21 = 0x7370756F7247;
        break;
      case 2:
        unint64_t v20 = 0x8000000000101BE0;
        uint64_t v21 = 0xD000000000000016;
        break;
      case 3:
        uint64_t v21 = 0x6E6967617373654DLL;
        unint64_t v20 = 0xE900000000000067;
        break;
      case 4:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v21 = 0x79636176697250;
        break;
      default:
        break;
    }
    uint64_t v22 = 0x3E6C696E3CLL;
    uint64_t v56 = sub_A3FC(v21, v20, &v57);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    *(_WORD *)(v18 + 12) = 2082;
    unint64_t v23 = *((void *)a1 + 2);
    uint64_t v47 = v7;
    if (v23)
    {
      uint64_t v24 = *((void *)a1 + 1);
      unint64_t v25 = v23;
    }
    else
    {
      unint64_t v25 = 0xE500000000000000;
      uint64_t v24 = 0x3E6C696E3CLL;
    }
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_A3FC(v24, v25, &v57);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    *(_WORD *)(v18 + 22) = 2080;
    if (*((void *)a1 + 4))
    {
      uint64_t v26 = *((void *)a1 + 3);
      unint64_t v27 = *((void *)a1 + 4);
    }
    else
    {
      unint64_t v27 = 0xE500000000000000;
      uint64_t v26 = 0x3E6C696E3CLL;
    }
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_A3FC(v26, v27, &v57);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    *(_WORD *)(v18 + 32) = 2080;
    if (*((void *)a1 + 5))
    {
      uint64_t v56 = *((void *)a1 + 5);
      swift_errorRetain();
      sub_551C(&qword_127D08);
      uint64_t v22 = sub_F7270();
      unint64_t v29 = v28;
    }
    else
    {
      unint64_t v29 = 0xE500000000000000;
    }
    uint64_t v56 = sub_A3FC(v22, v29, &v57);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    _os_log_impl(&dword_0, v17, (os_log_type_t)v50, "[ABC] Severe bug detected with type %{public}s context %{public}s fullContext %s error %s", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v8 = v48;
    uint64_t v4 = v49;
    char v7 = v47;
  }
  else
  {
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);
    sub_64604((uint64_t)a1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v30 = v55;
  uint64_t v31 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  sub_1E74C((uint64_t)(a1 + 40), (uint64_t)&v56, &qword_128B50);
  sub_1E74C((uint64_t)&v56, (uint64_t)&v57, &qword_128B50);
  if (v57) {
    id v32 = (void *)sub_F6D20();
  }
  else {
    id v32 = 0;
  }
  id v33 = (void *)sub_F71F0();
  if (*((void *)a1 + 2))
  {
    uint64_t v34 = (uint64_t)v4;
LABEL_25:
    swift_bridgeObjectRetain();
    Swift::String v35 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (*((void *)a1 + 4))
  {
    uint64_t v34 = (uint64_t)v4;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  uint64_t v34 = (uint64_t)v4;
  Swift::String v35 = 0;
LABEL_26:
  objc_msgSend(v53, "forceAutoBugCaptureWithSubType:errorPayload:type:context:", v31, v32, v33, v35, v46);

  sub_631AC((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v8) == 1) {
    return sub_1E944((uint64_t)v7, &qword_128B48);
  }
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  unint64_t v38 = v54;
  v37(v54, v7, v8);
  uint64_t v39 = sub_F7520();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v34, 1, 1, v39);
  long long v40 = v52;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v52, v38, v8);
  unint64_t v41 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v42 = (v51 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 0;
  *(void *)(v43 + 24) = 0;
  v37((char *)(v43 + v41), v40, v8);
  unint64_t v44 = v43 + v42;
  long long v45 = *((_OWORD *)a1 + 1);
  *(_OWORD *)unint64_t v44 = *(_OWORD *)a1;
  *(_OWORD *)(v44 + 16) = v45;
  *(_OWORD *)(v44 + 32) = *((_OWORD *)a1 + 2);
  *(unsigned char *)(v44 + 48) = a1[48];
  sub_645BC((uint64_t)a1);
  sub_9EAC(v34, (uint64_t)&unk_128B60, v43);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v54, v8);
}

uint64_t sub_629A4()
{
  uint64_t v1 = (void *)0xE600000000000000;
  v2._uint64_t countAndFlagsBits = 0x7370756F7247;
  switch(*(unsigned char *)v0)
  {
    case 1:
      break;
    case 2:
      uint64_t v1 = (void *)0x8000000000101BE0;
      v2._uint64_t countAndFlagsBits = 0xD000000000000016;
      break;
    case 3:
      v2._uint64_t countAndFlagsBits = 0x6E6967617373654DLL;
      uint64_t v1 = (void *)0xE900000000000067;
      break;
    case 4:
      uint64_t v1 = (void *)0xE700000000000000;
      v2._uint64_t countAndFlagsBits = 0x79636176697250;
      break;
    default:
      uint64_t v1 = (void *)0xE900000000000079;
      v2._uint64_t countAndFlagsBits = 0x6E6F6870656C6554;
      break;
  }
  v2._object = v1;
  sub_F72E0(v2);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 8285;
  v9._object = (void *)0xE200000000000000;
  sub_F72E0(v9);
  if (*(void *)(v0 + 16))
  {
    uint64_t v3 = *(void *)(v0 + 8);
    uint64_t v4 = *(void **)(v0 + 16);
  }
  else
  {
    if (*(void *)(v0 + 32))
    {
      uint64_t v3 = *(void *)(v0 + 24);
      uint64_t v4 = *(void **)(v0 + 32);
    }
    else
    {
      sub_1E74C(v0 + 40, (uint64_t)v7, &qword_128B50);
      sub_1E74C((uint64_t)v7, (uint64_t)&v8, &qword_128B50);
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x62B58);
      }
      swift_getErrorValue();
      uint64_t v3 = sub_F7BD0();
      uint64_t v4 = v5;
    }
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v3;
  v10._object = v4;
  sub_F72E0(v10);
  swift_bridgeObjectRelease();
  return 0x5B5D5343525BLL;
}

uint64_t sub_62B6C()
{
  sub_551C(&qword_128260);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_F8F20;
  *(void *)(v1 + 32) = 0xD000000000000032;
  *(void *)(v1 + 40) = 0x8000000000103720;
  sub_1E74C(v0 + 8, (uint64_t)v19, &qword_128B88);
  sub_1E74C((uint64_t)v19, (uint64_t)&v20, &qword_128B88);
  v2._object = v21;
  if (v21)
  {
    v2._uint64_t countAndFlagsBits = v20;
    uint64_t v22 = 0x3A747865746E6F43;
    unint64_t v23 = 0xE900000000000020;
    sub_F72E0(v2);
    uint64_t v3 = v22;
    unint64_t v4 = v23;
    unint64_t v6 = *(void *)(v1 + 16);
    unint64_t v5 = *(void *)(v1 + 24);
    if (v6 >= v5 >> 1) {
      uint64_t v1 = (uint64_t)sub_350A4((char *)(v5 > 1), v6 + 1, 1, (char *)v1);
    }
    *(void *)(v1 + 16) = v6 + 1;
    uint64_t v7 = v1 + 16 * v6;
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v4;
  }
  sub_1E74C(v0 + 24, (uint64_t)v18, &qword_128B88);
  sub_1E74C((uint64_t)v18, (uint64_t)&v22, &qword_128B88);
  uint64_t v8 = (void *)v23;
  if (v23)
  {
    uint64_t v9 = v22;
    sub_F78A0(21);
    swift_bridgeObjectRelease();
    v24._uint64_t countAndFlagsBits = v9;
    v24._object = v8;
    sub_F72E0(v24);
    unint64_t v11 = *(void *)(v1 + 16);
    unint64_t v10 = *(void *)(v1 + 24);
    if (v11 >= v10 >> 1) {
      uint64_t v1 = (uint64_t)sub_350A4((char *)(v10 > 1), v11 + 1, 1, (char *)v1);
    }
    *(void *)(v1 + 16) = v11 + 1;
    uint64_t v12 = v1 + 16 * v11;
    *(void *)(v12 + 32) = 0xD000000000000013;
    *(void *)(v12 + 40) = 0x8000000000103780;
  }
  if (*(void *)(v0 + 40))
  {
    swift_errorRetain();
    sub_F78A0(21);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    v25._uint64_t countAndFlagsBits = sub_F7BD0();
    sub_F72E0(v25);
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void *)(v1 + 16);
    unint64_t v13 = *(void *)(v1 + 24);
    if (v14 >= v13 >> 1) {
      uint64_t v1 = (uint64_t)sub_350A4((char *)(v13 > 1), v14 + 1, 1, (char *)v1);
    }
    *(void *)(v1 + 16) = v14 + 1;
    uint64_t v15 = v1 + 16 * v14;
    *(void *)(v15 + 32) = 0xD000000000000013;
    *(void *)(v15 + 40) = 0x8000000000103760;
    swift_errorRelease();
  }
  sub_551C(&qword_128550);
  sub_64858();
  uint64_t v16 = sub_F71D0();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_62E40()
{
  sub_551C(&qword_128260);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_F8F20;
  *(void *)(v1 + 32) = 0xD000000000000032;
  *(void *)(v1 + 40) = 0x8000000000103720;
  sub_1E74C(v0 + 8, (uint64_t)v25, &qword_128B88);
  sub_1E74C((uint64_t)v25, (uint64_t)&v26, &qword_128B88);
  v2._object = v27;
  if (v27)
  {
    v2._uint64_t countAndFlagsBits = v26;
    uint64_t v28 = 0x3A747865746E6F43;
    unint64_t v29 = 0xE900000000000020;
    sub_F72E0(v2);
    uint64_t v3 = v28;
    unint64_t v4 = v29;
    unint64_t v6 = *(void *)(v1 + 16);
    unint64_t v5 = *(void *)(v1 + 24);
    if (v6 >= v5 >> 1) {
      uint64_t v1 = (uint64_t)sub_350A4((char *)(v5 > 1), v6 + 1, 1, (char *)v1);
    }
    *(void *)(v1 + 16) = v6 + 1;
    uint64_t v7 = v1 + 16 * v6;
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v4;
  }
  sub_1E74C(v0 + 24, (uint64_t)v24, &qword_128B88);
  sub_1E74C((uint64_t)v24, (uint64_t)&v28, &qword_128B88);
  uint64_t v8 = (void *)v29;
  if (v29)
  {
    uint64_t v9 = v28;
    sub_F78A0(21);
    swift_bridgeObjectRelease();
    v23[0] = 0xD000000000000013;
    v23[1] = 0x8000000000103780;
    v30._uint64_t countAndFlagsBits = v9;
    v30._object = v8;
    sub_F72E0(v30);
    unint64_t v11 = *(void *)(v1 + 16);
    unint64_t v10 = *(void *)(v1 + 24);
    if (v11 >= v10 >> 1) {
      uint64_t v1 = (uint64_t)sub_350A4((char *)(v10 > 1), v11 + 1, 1, (char *)v1);
    }
    *(void *)(v1 + 16) = v11 + 1;
    uint64_t v12 = v1 + 16 * v11;
    *(void *)(v12 + 32) = 0xD000000000000013;
    *(void *)(v12 + 40) = 0x8000000000103780;
  }
  if (*(void *)(v0 + 40))
  {
    swift_errorRetain();
    sub_F78A0(21);
    swift_bridgeObjectRelease();
    v23[0] = 0xD000000000000013;
    v23[1] = 0x8000000000103760;
    swift_getErrorValue();
    v31._uint64_t countAndFlagsBits = sub_F7BD0();
    sub_F72E0(v31);
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void *)(v1 + 16);
    unint64_t v13 = *(void *)(v1 + 24);
    if (v14 >= v13 >> 1) {
      uint64_t v1 = (uint64_t)sub_350A4((char *)(v13 > 1), v14 + 1, 1, (char *)v1);
    }
    *(void *)(v1 + 16) = v14 + 1;
    uint64_t v15 = v1 + 16 * v14;
    *(void *)(v15 + 32) = 0xD000000000000013;
    *(void *)(v15 + 40) = 0x8000000000103760;
    strcpy((char *)v23, "Error Dump: ");
    BYTE5(v23[1]) = 0;
    HIWORD(v23[1]) = -5120;
    swift_errorRetain();
    sub_551C(&qword_127D08);
    v32._uint64_t countAndFlagsBits = sub_F7290();
    sub_F72E0(v32);
    swift_bridgeObjectRelease();
    uint64_t v16 = v23[0];
    uint64_t v17 = v23[1];
    unint64_t v19 = *(void *)(v1 + 16);
    unint64_t v18 = *(void *)(v1 + 24);
    if (v19 >= v18 >> 1) {
      uint64_t v1 = (uint64_t)sub_350A4((char *)(v18 > 1), v19 + 1, 1, (char *)v1);
    }
    *(void *)(v1 + 16) = v19 + 1;
    uint64_t v20 = v1 + 16 * v19;
    *(void *)(v20 + 32) = v16;
    *(void *)(v20 + 40) = v17;
    swift_errorRelease();
  }
  sub_551C(&qword_128550);
  sub_64858();
  uint64_t v21 = sub_F71D0();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_631AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v1 = sub_F6FA0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v46 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_F6F90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_F6FD0();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_551C(&qword_127C70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_127B28 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_8B44(v11, (uint64_t)qword_127D30);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v50 == 1)
  {
    uint64_t v16 = sub_629A4();
    uint64_t v43 = v17;
    uint64_t v44 = v16;
    uint64_t v18 = sub_62E40();
    uint64_t v41 = v19;
    uint64_t v42 = v18;
    long long v40 = v10;
    sub_F6FC0();
    uint64_t v20 = *(void (**)(char *, void, uint64_t))(v5 + 104);
    uint64_t v39 = v7;
    uint64_t v45 = v4;
    v20(v7, enum case for TapToRadarDraft.Classification.crashHangDataLoss(_:), v4);
    uint64_t v21 = v46;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v46, enum case for TapToRadarDraft.Reproducibility.iDidntTry(_:), v1);
    sub_551C(&qword_128B98);
    uint64_t v22 = sub_F6F80();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v38 = v1;
    uint64_t v24 = v23;
    uint64_t v25 = v49;
    uint64_t v26 = *(void *)(v23 + 72);
    unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_F8F10;
    unint64_t v29 = v28 + v27;
    Swift::String v30 = *(void (**)(unint64_t, void, uint64_t))(v24 + 104);
    v30(v29, enum case for TapToRadarDraft.DeviceClass.iPhone(_:), v22);
    v30(v29 + v26, enum case for TapToRadarDraft.DeviceClass.appleWatch(_:), v22);
    uint64_t v31 = v25;
    id v33 = v39;
    Swift::String v32 = v40;
    sub_F6F70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v21, v38);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v33, v45);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
    uint64_t v34 = sub_F6FE0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v31, 0, 1, v34);
  }
  else
  {
    uint64_t v36 = sub_F6FE0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v49, 1, 1, v36);
  }
}

uint64_t sub_636D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_636F4, 0, 0);
}

uint64_t sub_636F4()
{
  uint64_t v1 = sub_62B6C();
  uint64_t v3 = v2;
  *(void *)(v0 + 32) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_637C0;
  return sub_638D0(0xD000000000000017, 0x80000000001036E0, v1, v3);
}

uint64_t sub_637C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_638D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[38] = a4;
  v5[39] = v4;
  v5[36] = a2;
  v5[37] = a3;
  v5[35] = a1;
  uint64_t v6 = sub_F70F0();
  v5[40] = v6;
  v5[41] = *(void *)(v6 - 8);
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  return _swift_task_switch(sub_639B4, 0, 0);
}

uint64_t sub_639B4()
{
  uint64_t v29 = (uint64_t)(v0 + 15);
  id v28 = self;
  uint64_t v1 = sub_F6F30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  sub_F6F20();
  sub_F6F00();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  uint64_t v4 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (void *)sub_F71F0();
  uint64_t v6 = (void *)sub_F71F0();
  uint64_t v7 = (void *)sub_F71F0();
  uint64_t v8 = (void *)sub_F71F0();
  id v9 = [v28 userNotificationWithIdentifier:v4 title:v5 message:v6 defaultButton:v7 alternateButton:v8 otherButton:0];

  if (v9)
  {
    sub_F77F0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 19) = 0u;
    *(_OWORD *)(v0 + 21) = 0u;
  }
  sub_1E74C((uint64_t)(v0 + 19), v29, &qword_127FF8);
  if (v0[18])
  {
    sub_6CA4(0, &qword_128B70);
    if (swift_dynamicCast())
    {
      unint64_t v10 = (void *)v0[33];
      v0[45] = v10;
      uint64_t v11 = self;
      id v12 = v10;
      id v13 = [v11 sharedInstance];
      if (v13)
      {
        sub_F77F0();
        swift_unknownObjectRelease();
        sub_1EBC4(v0 + 27, v0 + 23);
        sub_6CA4(0, &qword_128B78);
        swift_dynamicCast();
        unint64_t v14 = (void *)v0[32];
        v0[46] = v14;
        v0[2] = v0;
        v0[7] = v0 + 31;
        v0[3] = sub_63E98;
        uint64_t v15 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_64558;
        v0[13] = &unk_11E9B0;
        v0[14] = v15;
        [v14 addUserNotification:v12 listener:0 completionHandler:v0 + 10];
        id v13 = v0 + 2;
      }
      else
      {
        __break(1u);
      }
      return _swift_continuation_await(v13);
    }
  }
  else
  {
    sub_1E944(v29, &qword_127FF8);
  }
  uint64_t v16 = v0[43];
  uint64_t v17 = v0[40];
  uint64_t v18 = v0[41];
  uint64_t v19 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v19, v17);
  uint64_t v20 = sub_F70D0();
  os_log_type_t v21 = sub_F7690();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "Failed to create IMUserNotification for TTR, TTR will not proceed", v22, 2u);
    swift_slowDealloc();
  }
  uint64_t v23 = v0[43];
  uint64_t v24 = v0[40];
  uint64_t v25 = v0[41];

  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26(0);
}

uint64_t sub_63E98()
{
  return _swift_task_switch(sub_63F78, 0, 0);
}

uint64_t sub_63F78()
{
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = *(void **)(v0 + 360);
  if (v1)
  {

    uint64_t v2 = *(void **)(v0 + 360);
  }
  else
  {
    uint64_t v1 = *(void **)(v0 + 360);
  }
  *(void *)(v0 + 376) = v1;

  if ([v1 response])
  {
    uint64_t v3 = *(void *)(v0 + 352);
    uint64_t v4 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 328);
    uint64_t v6 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v6, v4);
    uint64_t v7 = sub_F70D0();
    os_log_type_t v8 = sub_F7680();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "User declined TTR, not proceeding", v9, 2u);
      swift_slowDealloc();
    }
    unint64_t v10 = *(void **)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 352);
    uint64_t v12 = *(void *)(v0 + 320);
    uint64_t v13 = *(void *)(v0 + 328);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14(0);
  }
  else
  {
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_64178;
    return TapToRadarDraft.open()();
  }
}

uint64_t sub_64178()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_64310;
  }
  else {
    uint64_t v2 = sub_6428C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_6428C()
{
  uint64_t v1 = *(void **)(v0 + 368);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t sub_64310()
{
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7690();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v13 = *(void **)(v0 + 376);
    unint64_t v14 = *(void **)(v0 + 368);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 272) = v9;
    sub_F77B0();
    *os_log_type_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v5, v6, "Failed to open TTR: %@", v7, 0xCu);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    unint64_t v10 = *(void **)(v0 + 368);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11(0);
}

uint64_t sub_64558(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  os_log_type_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_1E74C((uint64_t)&v6, v3, &qword_128B80);
  return swift_continuation_resume();
}

uint64_t sub_645BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_64604(uint64_t a1)
{
  return a1;
}

uint64_t sub_6464C()
{
  uint64_t v1 = sub_F6FE0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 49;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_64748()
{
  uint64_t v2 = *(void *)(sub_F6FE0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[2] = v4;
  v6[3] = v5;
  v6[1] = sub_46BC;
  return _swift_task_switch(sub_636F4, 0, 0);
}

unint64_t sub_64858()
{
  unint64_t result = qword_128B90;
  if (!qword_128B90)
  {
    sub_8C18(&qword_128550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128B90);
  }
  return result;
}

uint64_t _s10RCSBugTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10RCSBugTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x64A10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_64A38(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *_s10RCSBugTypeOMa()
{
  return &_s10RCSBugTypeON;
}

unint64_t sub_64A54()
{
  unint64_t result = qword_128BA0;
  if (!qword_128BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128BA0);
  }
  return result;
}

uint64_t sub_64AA8(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_11DB58;
  v6._object = a2;
  unint64_t v4 = sub_F7A10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

char *RCSOutgoingMessageController.__allocating_init(session:operationConfiguration:)(void *a1, uint64_t *a2)
{
  id v5 = objc_allocWithZone(v2);
  return RCSOutgoingMessageController.init(session:operationConfiguration:)(a1, a2);
}

uint64_t sub_64B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_F6F30();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_64BA0()
{
  return sub_F6F00();
}

uint64_t sub_64BB8(uint64_t a1)
{
  uint64_t v2 = sub_67120(&qword_128BE0);

  return RCSOperationController.OperationID.description.getter(a1, v2);
}

char *RCSOutgoingMessageController.init(session:operationConfiguration:)(void *a1, uint64_t *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC3RCS28RCSOutgoingMessageController_client;
  Swift::String v6 = v2;
  id v7 = (id)im_primary_queue();
  id v8 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:v7];

  *(void *)&v2[v5] = v8;
  swift_unknownObjectUnownedInit();
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18[0] = v9;
  v18[1] = v10;
  void v18[2] = &unk_128BC8;
  v18[3] = v11;
  char v19 = 0;
  type metadata accessor for RCSOperationController();
  swift_allocObject();
  swift_retain();
  *(void *)&v6[OBJC_IVAR____TtC3RCS28RCSOutgoingMessageController_operationController] = RCSOperationController.init(configuration:)((uint64_t)v18);

  v17.receiver = v6;
  v17.super_class = (Class)type metadata accessor for RCSOutgoingMessageController();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v17, "init");
  uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC3RCS28RCSOutgoingMessageController_client];
  unint64_t v14 = v12;
  id v15 = v13;
  [v15 setDelegate:v14];
  sub_6536C((uint64_t)a2);

  swift_release();
  return v14;
}

uint64_t sub_64D9C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_64DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  return _swift_task_switch(sub_64DF8, 0, 0);
}

uint64_t sub_64DF8()
{
  sub_671A4(*(void *)(v0 + 120), v0 + 16);
  char v1 = *(unsigned char *)(v0 + 48);
  sub_6720C(v0 + 16);
  if (v1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 152) = Strong;
    if (Strong)
    {
      *(void *)(v0 + 160) = sub_F71F0();
      sub_F74E0();
      *(void *)(v0 + 168) = sub_F74D0();
      uint64_t v3 = sub_F7470();
      uint64_t v5 = v4;
      Swift::String v6 = sub_6507C;
LABEL_8:
      return _swift_task_switch(v6, v3, v5);
    }
    swift_beginAccess();
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 176) = v9;
    if (v9)
    {
      *(void *)(v0 + 184) = sub_F71F0();
      sub_F74E0();
      *(void *)(v0 + 192) = sub_F74D0();
      uint64_t v3 = sub_F7470();
      uint64_t v5 = v10;
      Swift::String v6 = sub_65208;
      goto LABEL_8;
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 136) = v7;
    if (v7)
    {
      sub_F74E0();
      *(void *)(v0 + 144) = sub_F74D0();
      uint64_t v3 = sub_F7470();
      uint64_t v5 = v8;
      Swift::String v6 = sub_65000;
      goto LABEL_8;
    }
  }
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_65000()
{
  char v1 = *(void **)(v0 + 136);
  swift_release();
  sub_E0E8();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_6507C()
{
  char v1 = *(void **)(v0 + 160);
  uint64_t v2 = *(void **)(v0 + 152);
  swift_release();
  [v2 didReceiveError:4 forMessageID:v1 forceError:1];

  return _swift_task_switch(sub_6510C, 0, 0);
}

uint64_t sub_6510C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[22] = Strong;
  if (Strong)
  {
    v0[23] = sub_F71F0();
    sub_F74E0();
    v0[24] = sub_F74D0();
    uint64_t v3 = sub_F7470();
    return _swift_task_switch(sub_65208, v3, v2);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_65208()
{
  char v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[22];
  swift_release();
  [v2 processMessageSendFailure:v1];

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_65288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_57A4;
  v8[15] = a3;
  v8[16] = v3;
  v8[13] = a1;
  v8[14] = a2;
  return _swift_task_switch(sub_64DF8, 0, 0);
}

uint64_t type metadata accessor for RCSOutgoingMessageController()
{
  return self;
}

uint64_t sub_6536C(uint64_t a1)
{
  return a1;
}

uint64_t RCSOutgoingMessageController.sendMessage(id:executeBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  return _swift_task_switch(sub_653C0, 0, 0);
}

uint64_t sub_653C0()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = *(void *)(v0[10] + OBJC_IVAR____TtC3RCS28RCSOutgoingMessageController_operationController);
  v0[5] = type metadata accessor for RCSOutgoingMessageController.OperationID();
  v0[6] = sub_67120(&qword_128BE0);
  uint64_t v5 = sub_28728(v0 + 2);
  uint64_t v6 = sub_F6F30();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v2, v6);
  uint64_t v7 = swift_allocObject();
  v0[11] = v7;
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v1;
  uint64_t v10 = (uint64_t (*)(uint64_t *, void *, uint64_t))(*(void *)(*(void *)v4 + 216)
                                                           + **(int **)(*(void *)v4 + 216));
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[12] = (uint64_t)v8;
  *uint64_t v8 = v0;
  v8[1] = sub_655A4;
  return v10(v0 + 2, &unk_128BF0, v7);
}

uint64_t sub_655A4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    return _swift_task_switch(sub_65708, 0, 0);
  }
  else
  {
    sub_6BEC(v2 + 16);
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_65708()
{
  sub_6BEC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for RCSOutgoingMessageController.OperationID()
{
  uint64_t result = qword_128CA8;
  if (!qword_128CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_657B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_46BC;
  return v6();
}

uint64_t sub_65884()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_658BC()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_46BC;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_46BC;
  return v6();
}

uint64_t RCSOutgoingMessageController.messageSendFailed(_:for:withError:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_F70F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v16 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);

  id v17 = a1;
  id v18 = a2;
  id v19 = a3;
  id v20 = v17;
  id v21 = v18;
  id v22 = v19;
  uint64_t v23 = sub_F70D0();
  int v24 = sub_F7670();
  if (os_log_type_enabled(v23, (os_log_type_t)v24))
  {
    int v45 = v24;
    os_log_t v48 = v23;
    id v49 = v21;
    uint64_t v50 = v11;
    uint64_t v51 = v10;
    id v52 = v4;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v46 = (void *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v54 = v47;
    *(_DWORD *)uint64_t v25 = 136446978;
    uint64_t v53 = sub_A3FC(0xD000000000000023, 0x80000000001037A0, &v54);
    sub_F77B0();
    *(_WORD *)(v25 + 12) = 2080;
    id v26 = [v20 labelID];
    if (v26)
    {
      unint64_t v27 = v26;
      uint64_t v28 = sub_F7220();
      unint64_t v30 = v29;
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v30 = 0xE000000000000000;
    }
    uint64_t v53 = sub_A3FC(v28, v30, &v54);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v25 + 22) = 2080;
    id v31 = v49;
    id v32 = [v49 uuid];
    uint64_t v33 = sub_F7220();
    unint64_t v35 = v34;

    uint64_t v53 = sub_A3FC(v33, v35, &v54);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v25 + 32) = 2112;
    uint64_t v53 = (uint64_t)v22;
    id v36 = v22;
    id v21 = v31;
    sub_F77B0();
    *uint64_t v46 = v22;

    os_log_t v37 = v48;
    _os_log_impl(&dword_0, v48, (os_log_type_t)v45, "%{public}s simID: %s id: %s error: %@", (uint8_t *)v25, 0x2Au);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v50);
    uint64_t v10 = v51;
    uint64_t v4 = v52;
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_F7520();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  uint64_t v39 = (void *)swift_allocObject();
  void v39[2] = 0;
  v39[3] = 0;
  v39[4] = v22;
  id v39[5] = v4;
  v39[6] = v21;
  id v40 = v21;
  id v41 = v22;
  id v42 = v4;
  sub_9EAC((uint64_t)v10, (uint64_t)&unk_128C08, (uint64_t)v39);
  return swift_release();
}

uint64_t sub_65EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  return _swift_task_switch(sub_65EE0, 0, 0);
}

uint64_t sub_65EE0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 32);
  sub_67164();
  id v4 = NSError.init(operationError:)(v3);
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3RCS28RCSOutgoingMessageController_operationController);
  id v6 = [v1 uuid];
  uint64_t v7 = sub_F7220();
  uint64_t v9 = v8;

  *(void *)(v0 + 64) = v9;
  *(void *)(v0 + 16) = v4;
  *(unsigned char *)(v0 + 24) = 1;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))(*(void *)(*(void *)v5 + 200)
                                                                  + **(int **)(*(void *)v5 + 200));
  id v10 = v4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_6607C;
  return v13(v7, v9, v0 + 16, &type metadata for ()[8]);
}

uint64_t sub_6607C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_661AC, 0, 0);
}

uint64_t sub_661AC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSOutgoingMessageController.messageSendSuccess(_:with:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_F70F0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v14 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);

  id v15 = a1;
  id v16 = a2;
  id v17 = v15;
  id v18 = v16;
  id v19 = sub_F70D0();
  int v20 = sub_F7670();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    int v38 = v20;
    uint64_t v39 = v9;
    id v40 = v8;
    id v41 = v3;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v43 = v37;
    *(_DWORD *)uint64_t v21 = 136446722;
    uint64_t v42 = sub_A3FC(0xD00000000000001BLL, 0x8000000000102AF0, &v43);
    sub_F77B0();
    *(_WORD *)(v21 + 12) = 2080;
    id v22 = [v17 labelID];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = sub_F7220();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    uint64_t v42 = sub_A3FC(v24, v26, &v43);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 22) = 2080;
    id v27 = [v18 uuid];
    uint64_t v28 = sub_F7220();
    unint64_t v30 = v29;

    uint64_t v42 = sub_A3FC(v28, v30, &v43);
    sub_F77B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v19, (os_log_type_t)v38, "%{public}s simID: %s id: %s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v39);
    uint64_t v8 = v40;
    uint64_t v3 = v41;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v31 = sub_F7520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v8, 1, 1, v31);
  id v32 = (void *)swift_allocObject();
  _OWORD v32[2] = 0;
  v32[3] = 0;
  v32[4] = v3;
  v32[5] = v18;
  id v33 = v18;
  id v34 = v3;
  sub_9EAC((uint64_t)v8, (uint64_t)&unk_128C20, (uint64_t)v32);
  return swift_release();
}

uint64_t sub_666D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = a5;
  return _swift_task_switch(sub_666F0, 0, 0);
}

uint64_t sub_666F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC3RCS28RCSOutgoingMessageController_operationController);
  id v2 = [*(id *)(v0 + 40) uuid];
  uint64_t v3 = sub_F7220();
  uint64_t v5 = v4;

  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 48) = v5;
  *(unsigned char *)(v0 + 24) = 0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))(*(void *)(*(void *)v1 + 200)
                                                                 + **(int **)(*(void *)v1 + 200));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_66854;
  return v8(v3, v5, v0 + 16, &type metadata for ()[8]);
}

uint64_t sub_66854()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id RCSOutgoingMessageController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void RCSOutgoingMessageController.init()()
{
}

id RCSOutgoingMessageController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RCSOutgoingMessageController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_66AF4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_66B44()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_46BC;
  *(void *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 32) = v4;
  return _swift_task_switch(sub_65EE0, 0, 0);
}

uint64_t sub_66BF8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_66C40()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_57A4;
  *(_OWORD *)(v2 + 32) = v3;
  return _swift_task_switch(sub_666F0, 0, 0);
}

uint64_t sub_66CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_66D58(uint64_t a1)
{
  uint64_t v2 = sub_F6F30();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_66DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_66E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_66E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_66EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_66F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_66F60);
}

uint64_t sub_66F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_66FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_66FE0);
}

uint64_t sub_66FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_F6F30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_67050()
{
  uint64_t result = sub_F6F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_670DC(uint64_t a1)
{
  uint64_t result = sub_67120(&qword_128CE0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_67120(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RCSOutgoingMessageController.OperationID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_67164()
{
  unint64_t result = qword_128CE8;
  if (!qword_128CE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_128CE8);
  }
  return result;
}

uint64_t sub_671A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C((uint64_t *)&unk_128CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6720C(uint64_t a1)
{
  uint64_t v2 = sub_551C((uint64_t *)&unk_128CF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_6726C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = v5;
  uint64_t v54 = a4;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v53 = a1;
  uint64_t v9 = sub_F70F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v51 - v14;
  uint64_t v52 = v6;
  if (a5)
  {
    id v16 = a5;
    uint64_t v17 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v17, v9);
    id v18 = sub_F70D0();
    os_log_type_t v19 = sub_F7670();
    if (os_log_type_enabled(v18, v19))
    {
      int v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v20 = 0;
      _os_log_impl(&dword_0, v18, v19, "Sending group disposition", v20, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v21 = *(void **)(*(void *)(v7 + OBJC_IVAR___RCSServiceSession_state) + 16);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v22 = sub_F6F30();
    uint64_t v23 = *(void *)(v22 - 8);
    __chkstk_darwin(v22);
    unint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v26 = v21;
    sub_F6F20();
    uint64_t v27 = sub_F6F00();
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    id v30 = CTLazuliOperationID.init(id:)(v27, v29);
    id v57 = 0;
    unsigned int v31 = [v26 sendGroupDispositionNotificationMessage:v53 toGroup:v16 to:v54 withMessageID:v30 withDisposition:v55 forMessageID:v56 withError:&v57];

    id v32 = v57;
    if (!v31)
    {
      uint64_t v50 = v32;
      sub_F6D30();

      swift_willThrow();
    }
  }
  else
  {
    uint64_t v33 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v33, v9);
    id v34 = sub_F70D0();
    uint64_t v35 = sub_F7670();
    if (os_log_type_enabled(v34, (os_log_type_t)v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_0, v34, (os_log_type_t)v35, "Sending 1:1 disposition", v36, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v37 = *(void **)(*(void *)(v7 + OBJC_IVAR___RCSServiceSession_state) + 16);
    sub_6CA4(0, &qword_127CF8);
    uint64_t v38 = sub_F6F30();
    uint64_t v39 = *(void *)(v38 - 8);
    __chkstk_darwin(v38);
    id v41 = (char *)&v51 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v42 = v37;
    sub_F6F20();
    uint64_t v43 = sub_F6F00();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
    id v46 = CTLazuliOperationID.init(id:)(v43, v45);
    id v57 = 0;
    unsigned __int8 v47 = [v42 sendDispositionNotificationMessage:v53 to:v54 withMessageID:v46 withDisposition:v55 forMessageID:v56 withError:&v57];

    id v48 = v57;
    if ((v47 & 1) == 0)
    {
      id v49 = v48;
      sub_F6D30();

      swift_willThrow();
    }
  }
}

id sub_677A8()
{
  id v1 = [*v0 metaData];

  return v1;
}

uint64_t sub_677E0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  v3[5] = v4;
  v3[6] = *(void *)(v4 + 64);
  v3[7] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128000);
  v3[8] = swift_task_alloc();
  uint64_t v5 = RCSActor.shared.unsafeMutableAddressor();
  uint64_t v6 = *v5;
  v3[9] = *v5;
  swift_retain();
  return _swift_task_switch(sub_678F0, v6, 0);
}

uint64_t sub_678F0()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v6 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v7 = v0[2];
  sub_F74F0();
  uint64_t v8 = sub_F7520();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v1, 0, 1, v8);
  sub_5F63C(v7, v2);
  sub_F74E0();
  id v9 = v6;
  id v10 = v5;
  uint64_t v11 = sub_F74D0();
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v13 = (v3 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  sub_5674(v2, v14 + v12);
  *(void *)(v14 + v13) = v10;
  *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v6;
  uint64_t v15 = sub_9ED8(v1, (uint64_t)&unk_128D78, v14);
  v0[10] = v15;
  id v16 = (void *)swift_task_alloc();
  v0[11] = v16;
  *id v16 = v0;
  v16[1] = sub_67AC4;
  return Task<>.value.getter(v0 + 12, v15, &type metadata for Bool);
}

uint64_t sub_67AC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_67BF0, v1, 0);
}

uint64_t sub_67BF0()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_67C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a1;
  v6[16] = a4;
  sub_F74E0();
  v6[19] = sub_F74D0();
  uint64_t v8 = sub_F7470();
  v6[20] = v8;
  v6[21] = v7;
  return _swift_task_switch(sub_67D10, v8, v7);
}

uint64_t sub_67D10()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = self;
  v0[22] = v2;
  id v3 = [v2 sharedCache];
  v0[23] = v3;
  uint64_t v4 = sub_F71F0();
  v0[24] = v4;
  id v5 = [v1 service];
  id v6 = [v5 internalName];

  if (!v6)
  {
    sub_F7220();
    id v6 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  v0[25] = v6;
  uint64_t v7 = v0[18];
  v0[2] = v0;
  v0[7] = v0 + 26;
  v0[3] = sub_67EC4;
  uint64_t v8 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_680C0;
  v0[13] = &unk_11EC28;
  v0[14] = v8;
  [v3 releasePendingMessageWithGUID:v4 serviceName:v6 chat:v7 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_67EC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  return _swift_task_switch(sub_67FCC, v2, v1);
}

uint64_t sub_67FCC()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void **)(v0 + 200);
  id v3 = *(void **)(v0 + 184);
  swift_release();
  char v4 = *(unsigned char *)(v0 + 208);

  if (v4) {
    goto LABEL_4;
  }
  id v5 = [*(id *)(v0 + 176) sharedCache];
  id v6 = (void *)sub_F71F0();
  id v7 = [v5 releasedReplicatedGUIDForGUID:v6];

  if (v7)
  {

LABEL_4:
    char v8 = 1;
    goto LABEL_6;
  }
  char v8 = 0;
LABEL_6:
  **(unsigned char **)(v0 + 120) = v8;
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_680C0(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t RCSServiceSession.dequeueAndProcess(messageID:context:)(uint64_t a1, uint64_t a2)
{
  v3[115] = v2;
  v3[114] = a2;
  v3[113] = a1;
  sub_551C((uint64_t *)&unk_128170);
  v3[116] = swift_task_alloc();
  v3[117] = swift_task_alloc();
  v3[118] = type metadata accessor for RCSMessage(0);
  v3[119] = swift_task_alloc();
  v3[120] = swift_task_alloc();
  uint64_t v4 = sub_F70F0();
  v3[121] = v4;
  v3[122] = *(void *)(v4 - 8);
  v3[123] = swift_task_alloc();
  v3[124] = swift_task_alloc();
  v3[125] = swift_task_alloc();
  v3[126] = swift_task_alloc();
  v3[127] = swift_task_alloc();
  id v5 = RCSActor.shared.unsafeMutableAddressor();
  uint64_t v6 = *v5;
  v3[128] = *v5;
  swift_retain();
  return _swift_task_switch(sub_68278, v6, 0);
}

uint64_t sub_68278()
{
  uint64_t v49 = v0;
  uint64_t v1 = sub_69CAC(*(void *)(v0 + 912), *(void **)(v0 + 904));
  *(void *)(v0 + 1032) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    RCSHandle.init(destination:)([v1 from], (_OWORD *)(v0 + 400));
    *(void *)(v0 + 1040) = 0;
    if (!*(unsigned char *)(v0 + 456)) {
      goto LABEL_7;
    }
    id v3 = (uint64_t (*)())[self sharedInstance];
    if (!v3)
    {
      __break(1u);
      return _swift_task_switch(v3, v4, v5);
    }
    uint64_t v6 = v3;
    unsigned __int8 v7 = [v3 isRBMEnabled];

    if (v7)
    {
LABEL_7:
      id v8 = [*(id *)(v0 + 912) phoneNumber];
      if (v8)
      {
        uint64_t v9 = *(void *)(v0 + 912);
        uint64_t v10 = sub_F7220();
        unint64_t v12 = v11;

        unint64_t v13 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
        v14._uint64_t countAndFlagsBits = 7103860;
        v14._object = (void *)0xE300000000000000;
        v15._uint64_t countAndFlagsBits = v10;
        v15._object = v12;
        RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)((CoreRCS::RCSHandle *)(v0 + 336), v14, v15, (Swift::OpaquePointer)v13, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
        *(void *)(swift_task_alloc() + 16) = v9;
        RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))sub_1E93C, (_OWORD *)(v0 + 272));
        sub_6D20(v0 + 336);
        swift_task_dealloc();
        uint64_t v16 = *(void *)(v0 + 288);
        id v8 = *(id *)(v0 + 296);
        swift_bridgeObjectRetain();
        sub_6D20(v0 + 272);
      }
      else
      {
        uint64_t v16 = 0;
      }
      *(void *)(v0 + 1056) = v8;
      *(void *)(v0 + 1048) = v16;
      id v37 = [*(id *)(v0 + 912) labelID];
      uint64_t v38 = *(void **)(v0 + 912);
      if (v37)
      {
        uint64_t v39 = v37;
        uint64_t v40 = sub_F7220();
        uint64_t v42 = v41;
      }
      else
      {

        uint64_t v40 = 0;
        uint64_t v42 = 0;
      }
      *(void *)(v0 + 1072) = v42;
      *(void *)(v0 + 1064) = v40;
      sub_F74E0();
      *(void *)(v0 + 1080) = sub_F74D0();
      uint64_t v43 = sub_F7470();
      uint64_t v45 = v44;
      id v3 = sub_68B3C;
      uint64_t v4 = v43;
      uint64_t v5 = v45;
      return _swift_task_switch(v3, v4, v5);
    }
    uint64_t v19 = *(void *)(v0 + 1016);
    uint64_t v20 = *(void *)(v0 + 976);
    uint64_t v21 = *(void *)(v0 + 968);
    uint64_t v22 = *(void **)(v0 + 904);
    swift_release();
    sub_6D20(v0 + 400);
    uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v23, v21);
    id v24 = v22;
    unint64_t v25 = sub_F70D0();
    os_log_type_t v26 = sub_F76A0();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v28 = *(void *)(v0 + 1016);
    uint64_t v29 = *(void *)(v0 + 976);
    uint64_t v30 = *(void *)(v0 + 968);
    unsigned int v31 = *(void **)(v0 + 904);
    if (v27)
    {
      uint64_t v47 = *(void *)(v0 + 968);
      os_log_type_t log = v26;
      uint64_t v32 = swift_slowAlloc();
      v48[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136446466;
      *(void *)(v0 + 856) = sub_A3FC(0xD000000000000025, 0x8000000000103850, v48);
      sub_F77B0();
      *(_WORD *)(v32 + 12) = 2080;
      id v33 = [v31 uuid];
      uint64_t v34 = sub_F7220();
      unint64_t v36 = v35;

      *(void *)(v0 + 840) = sub_A3FC(v34, v36, v48);
      sub_F77B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v25, log, "%{public}s dropping message %s because RBM is disabled in Settings", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v47);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_68B3C()
{
  uint64_t v1 = (void *)v0[129];
  uint64_t v2 = v0[128];
  swift_release();
  v0[136] = sub_6A1F8((uint64_t)(v0 + 70), v1);
  return _swift_task_switch(sub_68C0C, v2, 0);
}

id sub_68C0C()
{
  uint64_t v1 = *(void **)(v0 + 1032);
  sub_6AA04((long long *)(v0 + 400), v0 + 560, v0 + 16);
  sub_6D20(v0 + 400);
  uint64_t v2 = sub_6D298(v1);
  if (v2)
  {
    id v3 = (void *)v2;
    id v4 = *(id *)(v0 + 920);
    id v5 = [v3 list];
    sub_6CA4(0, &qword_128238);
    unint64_t v6 = sub_F7410();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_F79B0();
      id result = (id)swift_bridgeObjectRelease_n();
      if (v7 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRelease();
    }
    uint64_t v8 = *(void *)(v0 + 1040);
    uint64_t v9 = *(void **)(v0 + 920);
    id v10 = v3;
    sub_6D0A8(0, v7, v10);
    v12._rawValue = v11;
    uint64_t v80 = v8;

    v13.entries._rawValue = RCSMessageMetadata.init(pairs:)(v12).entries._rawValue;
  }
  else
  {
    v13.entries._rawValue = 0;
    uint64_t v80 = *(void *)(v0 + 1040);
  }
  uint64_t v14 = *(void *)(v0 + 936);
  Swift::String v15 = *(void **)(v0 + 904);
  sub_27F4C(v0 + 16, v0 + 144);
  id v16 = [v15 uuid];
  uint64_t v17 = sub_F7220();
  uint64_t v92 = v18;
  uint64_t v94 = v17;

  id v19 = [v15 extractRawMessageID];
  uint64_t v20 = sub_F7220();
  uint64_t v89 = v21;
  uint64_t v90 = v20;

  uint64_t v22 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v99 = v22;
  v24(v14, 1, 1);
  sub_2C4C0(v0 + 560, v0 + 640, &qword_127C38);
  uint64_t v81 = v23;
  if (v13.entries._rawValue) {
    rawValue = v13.entries._rawValue;
  }
  else {
    rawValue = RCSMessageMetadata.init(pairs:)((Swift::OpaquePointer)_swiftEmptyArrayStorage).entries._rawValue;
  }
  uint64_t v96 = (long long *)(v0 + 600);
  uint64_t v83 = *(void *)(v0 + 1064);
  uint64_t v84 = *(void *)(v0 + 1072);
  long long v82 = *(_OWORD *)(v0 + 1048);
  unint64_t v25 = *(void **)(v0 + 1032);
  uint64_t v26 = *(void *)(v0 + 976);
  uint64_t v87 = *(void *)(v0 + 1008);
  uint64_t v88 = *(void *)(v0 + 968);
  uint64_t v85 = *(void *)(v0 + 960);
  BOOL v27 = *(void **)(v0 + 952);
  uint64_t v28 = *(int **)(v0 + 944);
  uint64_t v29 = *(void *)(v0 + 936);
  id v30 = objc_msgSend(v25, "from", v0 + 16);
  unsigned __int8 v31 = [v30 isBot];

  uint64_t v32 = (uint64_t)v27 + v28[7];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v32, 1, 1, v99);
  uint64_t v33 = (uint64_t)v27 + v28[8];
  *(void *)(v33 + 32) = 0;
  *(_OWORD *)uint64_t v33 = 0u;
  *(_OWORD *)(v33 + 16) = 0u;
  *((unsigned char *)v27 + v28[11]) = 0;
  *(void *)((char *)v27 + v28[12]) = 0;
  sub_55B4(v0 + 144, (uint64_t)v27);
  v27[16] = v94;
  v27[17] = v92;
  v27[18] = v90;
  v27[19] = v89;
  uint64_t v34 = (char *)v27 + v28[13];
  *(_OWORD *)uint64_t v34 = v82;
  *((void *)v34 + 2) = v83;
  *((void *)v34 + 3) = v84;
  sub_5610(v29, v32, (uint64_t *)&unk_128170);
  sub_5610(v0 + 640, v33, &qword_127C38);
  *(void *)((char *)v27 + v28[9]) = rawValue;
  uint64_t v95 = v28;
  *((unsigned char *)v27 + v28[10]) = v31;
  sub_5674((uint64_t)v27, v85);
  uint64_t v35 = Logger.rcs.unsafeMutableAddressor();
  *(void *)(v0 + 1096) = v35;
  unint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  *(void *)(v0 + 1104) = v36;
  *(void *)(v0 + 1112) = (v26 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v36(v87, v35, v88);
  id v37 = v25;
  uint64_t v38 = sub_F70D0();
  os_log_type_t v39 = sub_F7680();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v41 = *(NSObject **)(v0 + 1032);
  long long v91 = v36;
  uint64_t v93 = v35;
  if (v40)
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 138740227;
    *(void *)(v0 + 896) = v41;
    uint64_t v44 = v41;
    sub_F77B0();
    *uint64_t v43 = v41;

    *(_WORD *)(v42 + 12) = 1024;
    id v45 = [v44 from];
    unsigned int v46 = [v45 isBot];

    *(_DWORD *)(v0 + 140) = v46;
    sub_F77B0();

    _os_log_impl(&dword_0, v38, v39, "Generating RCSMessage from CT envelope %{sensitive}@, is chat bot: %{BOOL}d", (uint8_t *)v42, 0x12u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v38 = v41;
  }

  uint64_t v47 = *(void **)(v0 + 1032);
  uint64_t v48 = *(void *)(v0 + 1008);
  uint64_t v49 = *(void *)(v0 + 976);
  uint64_t v50 = *(void *)(v0 + 968);
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  *(void *)(v0 + 1120) = v51;
  *(void *)(v0 + 1128) = (v49 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v51(v48, v50);
  id v52 = [v47 content];
  sub_F77F0();
  swift_unknownObjectRelease();
  sub_551C(&qword_128D08);
  if (swift_dynamicCast())
  {
    uint64_t v53 = *(void *)(v0 + 960);
    sub_1E87C(v96, v0 + 520);
    uint64_t v54 = *(void *)(v0 + 544);
    uint64_t v55 = *(void *)(v0 + 552);
    sub_6BA8((void *)(v0 + 520), v54);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 8))(v53, v54, v55);
    if (!v80)
    {
LABEL_16:
      sub_6BEC(v0 + 520);
      goto LABEL_18;
    }
    id result = [self sharedInstance];
    if (result)
    {
      id v57 = result;
      id v58 = [*(id *)(v0 + 1032) content];
      sub_F77F0();
      swift_unknownObjectRelease();
      sub_6BA8((void *)(v0 + 680), *(void *)(v0 + 704));
      uint64_t DynamicType = swift_getDynamicType();
      sub_6BEC(v0 + 680);
      *(void *)(v0 + 888) = DynamicType;
      sub_551C(&qword_128D28);
      v102._uint64_t countAndFlagsBits = sub_F7270();
      sub_F72E0(v102);
      swift_bridgeObjectRelease();
      uint64_t v60 = sub_F78C0();
      *(unsigned char *)(v0 + 464) = 1;
      *(void *)(v0 + 472) = v60;
      *(void *)(v0 + 480) = v61;
      *(void *)(v0 + 488) = 0x65746E6F63205443;
      *(void *)(v0 + 496) = 0xEB0000000020746ELL;
      *(void *)(v0 + 504) = v80;
      *(unsigned char *)(v0 + 512) = 0;
      swift_bridgeObjectRetain();
      swift_errorRetain();
      sub_6204C((unsigned __int8 *)(v0 + 464));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();

      swift_errorRelease();
      goto LABEL_16;
    }
LABEL_30:
    __break(1u);
    return result;
  }
  *(void *)(v0 + 632) = 0;
  long long *v96 = 0u;
  *(_OWORD *)(v0 + 616) = 0u;
  sub_1E944((uint64_t)v96, &qword_128D10);
LABEL_18:
  uint64_t v62 = *(void *)(v0 + 928);
  sub_2C4C0(*(void *)(v0 + 960) + v95[7], v62, (uint64_t *)&unk_128170);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v62, 1, v99) == 1)
  {
    id v63 = *(void **)(v0 + 1032);
    uint64_t v64 = *(void *)(v0 + 992);
    uint64_t v65 = *(void *)(v0 + 968);
    uint64_t v66 = *(void *)(v0 + 928);
    swift_release();
    sub_1E944(v66, (uint64_t *)&unk_128170);
    v91(v64, v93, v65);
    id v67 = v63;
    uint64_t v68 = sub_F70D0();
    os_log_type_t v69 = sub_F76A0();
    BOOL v70 = os_log_type_enabled(v68, v69);
    uint64_t v71 = *(void **)(v0 + 1088);
    id v72 = *(NSObject **)(v0 + 1032);
    uint64_t v98 = *(void *)(v0 + 968);
    uint64_t v100 = *(void *)(v0 + 992);
    uint64_t v73 = *(void *)(v0 + 960);
    if (v70)
    {
      uint64_t v97 = *(void **)(v0 + 1088);
      os_log_type_t v74 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v74 = 134217984;
      *(void *)(v0 + 848) = [v72 type];
      sub_F77B0();

      _os_log_impl(&dword_0, v68, v69, "Unhandled message %ld, message was NOT processed!", v74, 0xCu);
      uint64_t v71 = v97;
      swift_slowDealloc();
    }
    else
    {

      uint64_t v68 = v72;
    }

    v51(v100, v98);
    sub_27EF8(v79);
    sub_1E944(v0 + 560, &qword_127C38);
    sub_56D8(v73);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_t v78 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v78();
  }
  else
  {
    sub_1E944(*(void *)(v0 + 928), (uint64_t *)&unk_128170);
    uint64_t v75 = (void *)swift_task_alloc();
    *(void *)(v0 + 1136) = v75;
    *uint64_t v75 = v0;
    v75[1] = sub_696E8;
    uint64_t v76 = *(void *)(v0 + 1088);
    uint64_t v77 = *(void *)(v0 + 960);
    return (id)sub_677E0(v77, v76);
  }
}

uint64_t sub_696E8(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1024);
  *(unsigned char *)(*(void *)v1 + 139) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_69800, v2, 0);
}

uint64_t sub_69800()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1104);
  uint64_t v2 = *(void *)(v0 + 1096);
  uint64_t v3 = *(void *)(v0 + 1000);
  uint64_t v4 = *(void *)(v0 + 968);
  *(unsigned char *)(*(void *)(v0 + 960) + *(int *)(*(void *)(v0 + 944) + 44)) = *(unsigned char *)(v0 + 139);
  v1(v3, v2, v4);
  id v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7680();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 1120);
    uint64_t v21 = *(void *)(v0 + 1000);
    uint64_t v20 = *(void *)(v0 + 968);
    uint64_t v7 = *(void *)(v0 + 960);
    uint64_t v8 = *(void *)(v0 + 952);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136642819;
    swift_beginAccess();
    sub_5F63C(v7, v8);
    uint64_t v10 = sub_F7290();
    *(void *)(v0 + 872) = sub_A3FC(v10, v11, &v23);
    sub_F77B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v6, "Processing generated RCSMessage %{sensitive}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v22(v21, v20);
  }
  else
  {
    Swift::OpaquePointer v12 = *(void (**)(uint64_t, uint64_t))(v0 + 1120);
    uint64_t v13 = *(void *)(v0 + 1000);
    uint64_t v14 = *(void *)(v0 + 968);

    v12(v13, v14);
  }
  uint64_t v15 = *(void *)(v0 + 1032);
  swift_beginAccess();
  id v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 1144) = v16;
  *id v16 = v0;
  v16[1] = sub_69A80;
  uint64_t v17 = *(void *)(v0 + 960);
  uint64_t v18 = *(void *)(v0 + 912);
  return sub_6AADC(v17, v18, v15);
}

uint64_t sub_69A80()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1024);
  swift_task_dealloc();
  return _swift_task_switch(sub_69B90, v1, 0);
}

uint64_t sub_69B90()
{
  uint64_t v1 = (void *)v0[136];
  uint64_t v2 = (void *)v0[129];
  uint64_t v3 = v0[120];
  swift_release();

  sub_27EF8((uint64_t)(v0 + 2));
  sub_1E944((uint64_t)(v0 + 70), &qword_127C38);
  sub_56D8(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void *sub_69CAC(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v36 - v10;
  Swift::OpaquePointer v12 = *(void **)(*(void *)(v2 + OBJC_IVAR___RCSServiceSession_state) + 16);
  id v41 = 0;
  id v13 = [v12 _retrieveMessage:a1 withMessageID:a2 withError:&v41];
  uint64_t v14 = v13;
  if (v41)
  {
    id v15 = v41;

    swift_willThrow();
    uint64_t v16 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v16, v5);
    id v17 = a2;
    uint64_t v18 = sub_F70D0();
    os_log_type_t v19 = sub_F76A0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      unint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      id v41 = v38;
      *(_DWORD *)uint64_t v20 = 136446466;
      uint64_t v40 = sub_A3FC(0xD000000000000018, 0x8000000000103940, (uint64_t *)&v41);
      os_log_type_t v39 = (void *)v5;
      sub_F77B0();
      *(_WORD *)(v20 + 12) = 2112;
      id v37 = v15;
      uint64_t v40 = (uint64_t)v17;
      uint64_t v21 = v6;
      id v22 = v17;
      sub_F77B0();
      void *v36 = v17;

      _os_log_impl(&dword_0, v18, v19, "%{public}s error retrieving message from CT with identifier %@", (uint8_t *)v20, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, void *))(v21 + 8))(v9, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    return 0;
  }
  if (!v13)
  {
    uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v23, v5);
    id v24 = a2;
    uint64_t v25 = sub_F70D0();
    os_log_type_t v26 = sub_F76A0();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      LODWORD(v38) = v27;
      uint64_t v29 = v28;
      os_log_type_t v39 = (void *)swift_slowAlloc();
      id v41 = v39;
      *(_DWORD *)uint64_t v29 = 136446466;
      uint64_t v40 = sub_A3FC(0xD000000000000018, 0x8000000000103940, (uint64_t *)&v41);
      sub_F77B0();
      *(_WORD *)(v29 + 12) = 2080;
      id v37 = (id)(v29 + 14);
      id v30 = [v24 uuid];
      uint64_t v31 = v6;
      uint64_t v32 = sub_F7220();
      unint64_t v34 = v33;

      uint64_t v40 = sub_A3FC(v32, v34, (uint64_t *)&v41);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v25, (os_log_type_t)v38, "%{public}s lazuli told us about a message %s but when we asked for it, it returned nil", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v5);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    return 0;
  }
  return v14;
}

id sub_6A1F8(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v55 - v10;
  id v12 = [a2 content];
  sub_F77F0();
  swift_unknownObjectRelease();
  sub_551C(&qword_128D58);
  if (!swift_dynamicCast())
  {
    uint64_t v67 = 0;
    long long v65 = 0u;
    long long v66 = 0u;
    sub_1E944((uint64_t)&v65, &qword_128D60);
    uint64_t v18 = 0;
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return v18;
  }
  sub_1E87C(&v65, (uint64_t)v68);
  uint64_t v13 = v69;
  uint64_t v14 = v70;
  sub_6BA8(v68, v69);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  if (!v15)
  {
    uint64_t v23 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v23, v5);
    sub_289D4((uint64_t)v68, (uint64_t)&v65);
    id v24 = a2;
    uint64_t v25 = sub_F70D0();
    int v26 = sub_F7690();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      int v58 = v26;
      uint64_t v59 = v6;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(void *)&long long v62 = v57;
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v29 = *((void *)&v66 + 1);
      uint64_t v28 = v67;
      sub_6BA8(&v65, *((uint64_t *)&v66 + 1));
      id v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v28);
      if (v30)
      {
        uint64_t v31 = v30;
        id v32 = [v30 debugDescription];

        uint64_t v33 = sub_F7220();
        unint64_t v35 = v34;
      }
      else
      {
        unint64_t v35 = 0xE500000000000000;
        uint64_t v33 = 0x3E6C696E3CLL;
      }
      v60[0] = sub_A3FC(v33, v35, (uint64_t *)&v62);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6BEC((uint64_t)&v65);
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v56 = v27 + 14;
      id v50 = [v24 messageID];
      id v51 = [v50 uuid];

      uint64_t v52 = sub_F7220();
      unint64_t v54 = v53;

      v60[0] = sub_A3FC(v52, v54, (uint64_t *)&v62);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v25, (os_log_type_t)v58, "Couldn't find an existing chat for group URI %s - incoming message %s will be sent to a 1:1 with the sender", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v59 + 8))(v9, v5);
    }
    else
    {
      sub_6BEC((uint64_t)&v65);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    goto LABEL_21;
  }
  id v63 = &type metadata for CTRCSGroupIdentity;
  uint64_t v64 = &off_11ECA0;
  *(void *)&long long v62 = v15;
  sub_1E87C(&v62, (uint64_t)&v65);
  uint64_t v16 = (void **)sub_6BA8(&v65, *((uint64_t *)&v66 + 1));
  sub_1D3F8(*v16, v2);
  if (!v17)
  {
    uint64_t v36 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v36, v5);
    sub_289D4((uint64_t)&v65, (uint64_t)&v62);
    id v37 = a2;
    uint64_t v38 = sub_F70D0();
    os_log_type_t v39 = sub_F7690();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      int v58 = v40;
      uint64_t v42 = v41;
      uint64_t v57 = swift_slowAlloc();
      uint64_t v61 = v57;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v59 = v6;
      sub_289D4((uint64_t)&v62, (uint64_t)v60);
      sub_551C(&qword_128D90);
      uint64_t v43 = sub_F7290();
      v60[0] = sub_A3FC(v43, v44, &v61);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6BEC((uint64_t)&v62);
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v56 = v42 + 14;
      id v45 = [v37 messageID];
      id v46 = [v45 uuid];

      uint64_t v47 = sub_F7220();
      unint64_t v49 = v48;

      v60[0] = sub_A3FC(v47, v49, &v61);
      sub_F77B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v38, (os_log_type_t)v58, "Couldn't find an existing chat for group identity %s - incoming message %s will be sent to a 1:1 with the sender", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v59 + 8))(v11, v5);
    }
    else
    {

      sub_6BEC((uint64_t)&v62);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    sub_6BEC((uint64_t)&v65);
    goto LABEL_21;
  }
  uint64_t v18 = v17;
  id result = [v17 participants];
  if (result)
  {
    uint64_t v20 = result;
    sub_6CA4(0, (unint64_t *)&qword_127C80);
    unint64_t v21 = sub_F7410();

    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_F79B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    if (v22 <= 1)
    {
      sub_6BEC((uint64_t)&v65);

LABEL_21:
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_6BEC((uint64_t)v68);
      return 0;
    }
    sub_1E87C(&v65, a1);
    sub_6BEC((uint64_t)v68);
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_6AA04@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2C4C0(a2, (uint64_t)&v9, &qword_127C38);
  if (*((void *)&v10 + 1))
  {
    sub_1E87C(&v9, (uint64_t)v8);
    sub_1E87C(v8, (uint64_t)&v9);
    char v12 = 1;
  }
  else
  {
    sub_1E944((uint64_t)&v9, &qword_127C38);
    long long v5 = a1[1];
    long long v9 = *a1;
    long long v10 = v5;
    *(_OWORD *)unint64_t v11 = a1[2];
    *(_OWORD *)&v11[9] = *(long long *)((char *)a1 + 41);
    char v12 = 0;
    sub_5560((uint64_t)a1);
  }
  long long v6 = a1[1];
  *(_OWORD *)a3 = *a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = a1[2];
  *(_OWORD *)(a3 + 41) = *(long long *)((char *)a1 + 41);
  sub_27FFC((uint64_t)&v9, a3 + 64);
  *(unsigned char *)(a3 + 122) = 1;
  return sub_5560((uint64_t)a1);
}

uint64_t sub_6AADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[38] = a3;
  v4[39] = v3;
  v4[36] = a1;
  v4[37] = a2;
  uint64_t v5 = sub_551C(&qword_127C70);
  v4[40] = v5;
  v4[41] = *(void *)(v5 - 8);
  v4[42] = swift_task_alloc();
  type metadata accessor for RCSMessage(0);
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  uint64_t v6 = sub_F70F0();
  v4[46] = v6;
  v4[47] = *(void *)(v6 - 8);
  v4[48] = swift_task_alloc();
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  uint64_t v7 = RCSActor.shared.unsafeMutableAddressor();
  uint64_t v8 = *v7;
  v4[51] = *v7;
  swift_retain();
  return _swift_task_switch(sub_6ACB0, v8, 0);
}

uint64_t sub_6ACB0()
{
  uint64_t v1 = *(void *)(v0[39] + OBJC_IVAR___RCSServiceSession_state);
  v0[52] = v1;
  uint64_t v2 = *(void *)(v1 + 80);
  v0[53] = v2;
  if (!v2) {
    __break(1u);
  }
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[54] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_6AE0C;
  uint64_t v4 = v0[36];
  return v6(v4);
}

uint64_t sub_6AE0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 408);
    uint64_t v4 = sub_6C2B8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 408);
    swift_release();
    uint64_t v4 = sub_6AF80;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_6AF80()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 288);
  uint64_t v7 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v85(v1, v7, v3);
  sub_5F63C(v6, v4);
  sub_5F63C(v6, v5);
  uint64_t v8 = sub_F70D0();
  os_log_type_t v9 = sub_F7670();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v82 = *(void *)(v0 + 376);
    uint64_t v10 = *(void *)(v0 + 360);
    uint64_t v83 = *(void *)(v0 + 368);
    uint64_t v84 = *(void *)(v0 + 400);
    uint64_t v81 = *(void *)(v0 + 352);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v87 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v13 = *(void *)(v10 + 128);
    unint64_t v12 = *(void *)(v10 + 136);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 264) = sub_A3FC(v13, v12, &v87);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_56D8(v10);
    *(_WORD *)(v11 + 12) = 1024;
    LODWORD(v10) = RCSMessage.fromChatBot.getter() & 1;
    sub_56D8(v81);
    *(_DWORD *)(v0 + 68) = v10;
    sub_F77B0();
    _os_log_impl(&dword_0, v8, v9, "Successfully processed message %s - sending delivery, is from chat bot: %{BOOL}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
    v14(v84, v83);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 400);
    uint64_t v16 = *(void *)(v0 + 368);
    uint64_t v17 = *(void *)(v0 + 376);
    uint64_t v18 = *(void *)(v0 + 360);
    sub_56D8(*(void *)(v0 + 352));
    sub_56D8(v18);

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v14(v15, v16);
  }
  uint64_t v19 = *(void *)(v0 + 440);
  *(void *)(v0 + 464) = v85;
  *(void *)(v0 + 472) = 0;
  *(void *)(v0 + 448) = v19;
  *(void *)(v0 + 456) = v14;
  if (RCSMessage.fromChatBot.getter())
  {
    uint64_t v20 = *(void *)(v0 + 288);
    *(void *)(v0 + 480) = [*(id *)(v0 + 304) from];
    sub_6CA4(0, &qword_128020);
    uint64_t v21 = *(void *)(v20 + 128);
    uint64_t v22 = *(void *)(v20 + 136);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 488) = CTLazuliOperationID.init(id:)(v21, v22);
    sub_F74E0();
    *(void *)(v0 + 496) = sub_F74D0();
    uint64_t v23 = sub_F7470();
    uint64_t v25 = sub_6B8FC;
LABEL_27:
    uint64_t v79 = v23;
    uint64_t v80 = v24;
    id v45 = v25;
    uint64_t v46 = v79;
    uint64_t v47 = v80;
    return _swift_task_switch(v45, v46, v47);
  }
  if (qword_127B98 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)(v0 + 328);
  uint64_t v26 = *(void *)(v0 + 336);
  uint64_t v28 = *(void *)(v0 + 320);
  uint64_t v29 = sub_8B44(v28, (uint64_t)qword_127E80);
  id v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v30(v26, v29, v28);
  sub_F6FF0();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v31(v26, v28);
  if (*(unsigned char *)(v0 + 66))
  {
    unint64_t v86 = v30;
    uint64_t v32 = *(void *)(v0 + 416);
    uint64_t v34 = *(void *)(v0 + 296);
    uint64_t v33 = *(void **)(v0 + 304);
    id v35 = [objc_allocWithZone((Class)CTLazuliMessageIDList) init];
    sub_551C(&qword_128D68);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_F9970;
    *(void *)(v36 + 32) = [v33 messageID];
    uint64_t v87 = v36;
    sub_F7430();
    sub_6CA4(0, &qword_127CF8);
    id v37 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    [v35 setList:v37];

    uint64_t v38 = *(void **)(v32 + 16);
    *(void *)(v0 + 272) = 0;
    unsigned int v39 = [v38 acknowledgeIncomingMessages:v34 withMessageIDList:v35 withError:v0 + 272];
    int v40 = *(void **)(v0 + 272);
    if (v39)
    {
      id v41 = v40;

      uint64_t v42 = *(void *)(v0 + 448);
    }
    else
    {
      id v43 = v40;
      uint64_t v44 = sub_F6D30();

      swift_willThrow();
      id v45 = (uint64_t (*)())[self sharedInstance];
      if (!v45)
      {
        __break(1u);
        return _swift_task_switch(v45, v46, v47);
      }
      unint64_t v48 = v45;
      unint64_t v49 = *(void **)(v0 + 304);
      uint64_t v87 = 0x206567617373656DLL;
      unint64_t v88 = 0xEB00000000204449;
      id v50 = [v49 messageID];
      id v51 = [v50 uuid];

      uint64_t v52 = sub_F7220();
      unint64_t v54 = v53;

      v91._uint64_t countAndFlagsBits = v52;
      v91._object = v54;
      sub_F72E0(v91);
      swift_bridgeObjectRelease();
      uint64_t v56 = v87;
      unint64_t v55 = v88;
      uint64_t v57 = sub_F78C0();
      *(unsigned char *)(v0 + 72) = 3;
      *(void *)(v0 + 80) = v57;
      *(void *)(v0 + 88) = v58;
      *(void *)(v0 + 96) = v56;
      *(void *)(v0 + 104) = v55;
      *(void *)(v0 + 112) = v44;
      *(unsigned char *)(v0 + 120) = 0;
      swift_bridgeObjectRetain();
      swift_errorRetain();
      sub_6204C((unsigned __int8 *)(v0 + 72));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();

      swift_errorRelease();
      uint64_t v42 = 0;
    }
    id v30 = v86;
  }
  else
  {
    uint64_t v42 = *(void *)(v0 + 448);
  }
  *(void *)(v0 + 504) = v42;
  if (qword_127B90 != -1) {
    swift_once();
  }
  uint64_t v59 = *(void *)(v0 + 336);
  uint64_t v60 = *(void *)(v0 + 320);
  uint64_t v61 = sub_8B44(v60, (uint64_t)qword_127E68);
  v30(v59, v61, v60);
  sub_F6FF0();
  v31(v59, v60);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    id v62 = [*(id *)(v0 + 304) content];
    sub_F77F0();
    swift_unknownObjectRelease();
    sub_551C(&qword_128D58);
    if (swift_dynamicCast())
    {
      uint64_t v63 = *(void *)(v0 + 208);
      uint64_t v64 = *(void *)(v0 + 216);
      sub_6BA8((void *)(v0 + 184), v63);
      uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64);
      sub_6BEC(v0 + 184);
    }
    else
    {
      *(void *)(v0 + 216) = 0;
      *(_OWORD *)(v0 + 184) = 0u;
      *(_OWORD *)(v0 + 200) = 0u;
      sub_1E944(v0 + 184, &qword_128D60);
      uint64_t v65 = 0;
    }
    *(void *)(v0 + 512) = v65;
    os_log_t v78 = *(void **)(v0 + 304);
    *(void *)(v0 + 520) = [v78 messageID];
    *(void *)(v0 + 528) = [v78 from];
    sub_F74E0();
    *(void *)(v0 + 536) = sub_F74D0();
    uint64_t v23 = sub_F7470();
    uint64_t v25 = sub_6C0A0;
    goto LABEL_27;
  }
  long long v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 464);
  uint64_t v67 = *(void *)(v0 + 392);
  uint64_t v68 = *(void *)(v0 + 368);
  swift_release();
  uint64_t v69 = Logger.rcs.unsafeMutableAddressor();
  v66(v67, v69, v68);
  uint64_t v70 = sub_F70D0();
  os_log_type_t v71 = sub_F7670();
  if (os_log_type_enabled(v70, v71))
  {
    id v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v72 = 0;
    _os_log_impl(&dword_0, v70, v71, "Not sending disposition notification due to override", v72, 2u);
    swift_slowDealloc();
  }
  uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v74 = *(void *)(v0 + 392);
  uint64_t v75 = *(void *)(v0 + 368);

  v73(v74, v75);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
  return v76();
}

uint64_t sub_6B8FC()
{
  uint64_t v1 = (void *)v0[61];
  uint64_t v2 = (void *)v0[60];
  uint64_t v3 = v0[51];
  uint64_t v4 = (uint8_t *)v0[37];
  swift_release();
  sub_2C894(v4, v2, (uint64_t)v1);

  return _swift_task_switch(sub_6B9C8, v3, 0);
}

uint64_t sub_6B9C8()
{
  if (qword_127B98 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = sub_8B44(v3, (uint64_t)qword_127E80);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5(v1, v4, v3);
  sub_F6FF0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v1, v3);
  if (*(unsigned char *)(v0 + 66))
  {
    unint64_t v54 = v6;
    unint64_t v55 = v5;
    uint64_t v7 = *(void *)(v0 + 416);
    uint64_t v9 = *(void *)(v0 + 296);
    uint64_t v8 = *(void **)(v0 + 304);
    id v10 = [objc_allocWithZone((Class)CTLazuliMessageIDList) init];
    sub_551C(&qword_128D68);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_F9970;
    *(void *)(v11 + 32) = [v8 messageID];
    sub_F7430();
    sub_6CA4(0, &qword_127CF8);
    unint64_t v12 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    [v10 setList:v12];

    uint64_t v13 = *(void **)(v7 + 16);
    *(void *)(v0 + 272) = 0;
    unsigned int v14 = [v13 acknowledgeIncomingMessages:v9 withMessageIDList:v10 withError:v0 + 272];
    uint64_t v15 = *(void **)(v0 + 272);
    if (v14)
    {
      id v16 = v15;

      uint64_t v17 = *(void *)(v0 + 448);
    }
    else
    {
      id v18 = v15;
      uint64_t v19 = sub_F6D30();

      swift_willThrow();
      uint64_t v20 = (uint64_t (*)())[self sharedInstance];
      if (!v20)
      {
        __break(1u);
        return _swift_task_switch(v20, v21, v22);
      }
      uint64_t v23 = v20;
      id v24 = [*(id *)(v0 + 304) messageID];
      id v25 = [v24 uuid];

      uint64_t v26 = sub_F7220();
      uint64_t v28 = v27;

      v57._uint64_t countAndFlagsBits = v26;
      v57._object = v28;
      sub_F72E0(v57);
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_F78C0();
      *(unsigned char *)(v0 + 72) = 3;
      *(void *)(v0 + 80) = v29;
      *(void *)(v0 + 88) = v30;
      *(void *)(v0 + 96) = 0x206567617373656DLL;
      *(void *)(v0 + 104) = 0xEB00000000204449;
      *(void *)(v0 + 112) = v19;
      *(unsigned char *)(v0 + 120) = 0;
      swift_bridgeObjectRetain();
      swift_errorRetain();
      sub_6204C((unsigned __int8 *)(v0 + 72));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();

      swift_errorRelease();
      uint64_t v17 = 0;
    }
    uint64_t v6 = v54;
    uint64_t v5 = v55;
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 448);
  }
  *(void *)(v0 + 504) = v17;
  if (qword_127B90 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)(v0 + 336);
  uint64_t v32 = *(void *)(v0 + 320);
  uint64_t v33 = sub_8B44(v32, (uint64_t)qword_127E68);
  v5(v31, v33, v32);
  sub_F6FF0();
  v6(v31, v32);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    id v34 = [*(id *)(v0 + 304) content];
    sub_F77F0();
    swift_unknownObjectRelease();
    sub_551C(&qword_128D58);
    if (swift_dynamicCast())
    {
      uint64_t v35 = *(void *)(v0 + 208);
      uint64_t v36 = *(void *)(v0 + 216);
      sub_6BA8((void *)(v0 + 184), v35);
      uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
      sub_6BEC(v0 + 184);
    }
    else
    {
      *(void *)(v0 + 216) = 0;
      *(_OWORD *)(v0 + 184) = 0u;
      *(_OWORD *)(v0 + 200) = 0u;
      sub_1E944(v0 + 184, &qword_128D60);
      uint64_t v37 = 0;
    }
    *(void *)(v0 + 512) = v37;
    id v50 = *(void **)(v0 + 304);
    *(void *)(v0 + 520) = [v50 messageID];
    *(void *)(v0 + 528) = [v50 from];
    sub_F74E0();
    *(void *)(v0 + 536) = sub_F74D0();
    uint64_t v51 = sub_F7470();
    uint64_t v53 = v52;
    uint64_t v20 = sub_6C0A0;
    uint64_t v21 = v51;
    uint64_t v22 = v53;
    return _swift_task_switch(v20, v21, v22);
  }
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 464);
  uint64_t v39 = *(void *)(v0 + 392);
  uint64_t v40 = *(void *)(v0 + 368);
  swift_release();
  uint64_t v41 = Logger.rcs.unsafeMutableAddressor();
  v38(v39, v41, v40);
  uint64_t v42 = sub_F70D0();
  os_log_type_t v43 = sub_F7670();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&dword_0, v42, v43, "Not sending disposition notification due to override", v44, 2u);
    swift_slowDealloc();
  }
  id v45 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v46 = *(void *)(v0 + 392);
  uint64_t v47 = *(void *)(v0 + 368);

  v45(v46, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_6C0A0()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = v0[63];
  uint64_t v4 = (void *)v0[64];
  uint64_t v5 = v0[59];
  uint64_t v6 = v0[37];
  swift_release();
  sub_6726C(v6, v5, v2, v1, v4);
  v0[68] = v3;
  if (v3)
  {
    uint64_t v7 = v0[51];
    uint64_t v8 = sub_6CDA4;
  }
  else
  {
    uint64_t v9 = (void *)v0[65];
    uint64_t v10 = v0[51];

    uint64_t v8 = sub_6C1C8;
    uint64_t v7 = v10;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_6C1C8()
{
  uint64_t v1 = *(void **)(v0 + 512);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_6C2B8()
{
  uint64_t v98 = v0;
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 288);
  swift_release();
  uint64_t v6 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v94(v1, v6, v3);
  sub_5F63C(v5, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F7690();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v90 = *(void *)(v0 + 376);
    uint64_t v91 = *(void *)(v0 + 368);
    uint64_t v92 = *(void *)(v0 + 384);
    uint64_t v9 = *(void *)(v0 + 344);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v96 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v13 = *(void *)(v9 + 128);
    unint64_t v12 = *(void *)(v9 + 136);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 256) = sub_A3FC(v13, v12, &v96);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_56D8(v9);
    *(_WORD *)(v10 + 12) = 2112;
    swift_errorRetain();
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 280) = v14;
    sub_F77B0();
    *uint64_t v11 = v14;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v7, v8, "Failed to process message %s: %@ - sending negative delivery", (uint8_t *)v10, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v15(v92, v91);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 376);
    uint64_t v16 = *(void *)(v0 + 384);
    uint64_t v18 = *(void *)(v0 + 368);
    sub_56D8(*(void *)(v0 + 344));
    swift_errorRelease();
    swift_errorRelease();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  id v19 = [self sharedInstance];
  if (!v19) {
    __break(1u);
  }
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v0 + 440);
  uint64_t v22 = *(void *)(v0 + 288);
  uint64_t v96 = 0x206567617373656DLL;
  unint64_t v97 = 0xEB00000000204449;
  uint64_t v23 = *(void *)(v22 + 128);
  id v24 = *(void **)(v22 + 136);
  swift_bridgeObjectRetain();
  v100._uint64_t countAndFlagsBits = v23;
  v100._object = v24;
  sub_F72E0(v100);
  swift_bridgeObjectRelease();
  uint64_t v25 = v96;
  unint64_t v26 = v97;
  uint64_t v27 = sub_F78C0();
  *(unsigned char *)(v0 + 16) = 3;
  *(void *)(v0 + 24) = v27;
  *(void *)(v0 + 32) = v28;
  *(void *)(v0 + 40) = v25;
  *(void *)(v0 + 48) = v26;
  *(void *)(v0 + 56) = v21;
  *(unsigned char *)(v0 + 64) = 0;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  sub_6204C((unsigned __int8 *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();

  swift_bridgeObjectRelease();
  *(void *)(v0 + 464) = v94;
  *(void *)(v0 + 472) = 3;
  *(void *)(v0 + 448) = 0;
  *(void *)(v0 + 456) = v15;
  if (RCSMessage.fromChatBot.getter())
  {
    uint64_t v29 = *(void *)(v0 + 288);
    *(void *)(v0 + 480) = [*(id *)(v0 + 304) from];
    sub_6CA4(0, &qword_128020);
    uint64_t v30 = *(void *)(v29 + 128);
    uint64_t v31 = *(void *)(v29 + 136);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 488) = CTLazuliOperationID.init(id:)(v30, v31);
    sub_F74E0();
    *(void *)(v0 + 496) = sub_F74D0();
    uint64_t v32 = sub_F7470();
    id v34 = sub_6B8FC;
LABEL_28:
    uint64_t v88 = v32;
    uint64_t v89 = v33;
    unint64_t v54 = v34;
    uint64_t v55 = v88;
    uint64_t v56 = v89;
    return _swift_task_switch(v54, v55, v56);
  }
  if (qword_127B98 != -1) {
    swift_once();
  }
  uint64_t v36 = *(void *)(v0 + 328);
  uint64_t v35 = *(void *)(v0 + 336);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = sub_8B44(v37, (uint64_t)qword_127E80);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
  v39(v35, v38, v37);
  sub_F6FF0();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v40(v35, v37);
  if (*(unsigned char *)(v0 + 66))
  {
    uint64_t v93 = v40;
    uint64_t v95 = v39;
    uint64_t v41 = *(void *)(v0 + 416);
    uint64_t v43 = *(void *)(v0 + 296);
    uint64_t v42 = *(void **)(v0 + 304);
    id v44 = [objc_allocWithZone((Class)CTLazuliMessageIDList) init];
    sub_551C(&qword_128D68);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_F9970;
    *(void *)(v45 + 32) = [v42 messageID];
    uint64_t v96 = v45;
    sub_F7430();
    sub_6CA4(0, &qword_127CF8);
    uint64_t v46 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    [v44 setList:v46];

    uint64_t v47 = *(void **)(v41 + 16);
    *(void *)(v0 + 272) = 0;
    unsigned int v48 = [v47 acknowledgeIncomingMessages:v43 withMessageIDList:v44 withError:v0 + 272];
    unint64_t v49 = *(void **)(v0 + 272);
    if (v48)
    {
      id v50 = v49;

      uint64_t v51 = *(void *)(v0 + 448);
    }
    else
    {
      id v52 = v49;
      uint64_t v53 = sub_F6D30();

      swift_willThrow();
      unint64_t v54 = (uint64_t (*)())[self sharedInstance];
      if (!v54)
      {
        __break(1u);
        return _swift_task_switch(v54, v55, v56);
      }
      Swift::String v57 = v54;
      uint64_t v58 = *(void **)(v0 + 304);
      uint64_t v96 = 0x206567617373656DLL;
      unint64_t v97 = 0xEB00000000204449;
      id v59 = [v58 messageID];
      id v60 = [v59 uuid];

      uint64_t v61 = sub_F7220();
      uint64_t v63 = v62;

      v101._uint64_t countAndFlagsBits = v61;
      v101._object = v63;
      sub_F72E0(v101);
      swift_bridgeObjectRelease();
      uint64_t v64 = v96;
      unint64_t v65 = v97;
      uint64_t v66 = sub_F78C0();
      *(unsigned char *)(v0 + 72) = 3;
      *(void *)(v0 + 80) = v66;
      *(void *)(v0 + 88) = v67;
      *(void *)(v0 + 96) = v64;
      *(void *)(v0 + 104) = v65;
      *(void *)(v0 + 112) = v53;
      *(unsigned char *)(v0 + 120) = 0;
      swift_bridgeObjectRetain();
      swift_errorRetain();
      sub_6204C((unsigned __int8 *)(v0 + 72));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v51 = 0;
    }
    uint64_t v40 = v93;
    uint64_t v39 = v95;
  }
  else
  {
    uint64_t v51 = *(void *)(v0 + 448);
  }
  *(void *)(v0 + 504) = v51;
  if (qword_127B90 != -1) {
    swift_once();
  }
  uint64_t v68 = *(void *)(v0 + 336);
  uint64_t v69 = *(void *)(v0 + 320);
  uint64_t v70 = sub_8B44(v69, (uint64_t)qword_127E68);
  v39(v68, v70, v69);
  sub_F6FF0();
  v40(v68, v69);
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    id v71 = [*(id *)(v0 + 304) content];
    sub_F77F0();
    swift_unknownObjectRelease();
    sub_551C(&qword_128D58);
    if (swift_dynamicCast())
    {
      uint64_t v72 = *(void *)(v0 + 208);
      uint64_t v73 = *(void *)(v0 + 216);
      sub_6BA8((void *)(v0 + 184), v72);
      uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8))(v72, v73);
      sub_6BEC(v0 + 184);
    }
    else
    {
      *(void *)(v0 + 216) = 0;
      *(_OWORD *)(v0 + 184) = 0u;
      *(_OWORD *)(v0 + 200) = 0u;
      sub_1E944(v0 + 184, &qword_128D60);
      uint64_t v74 = 0;
    }
    *(void *)(v0 + 512) = v74;
    uint64_t v87 = *(void **)(v0 + 304);
    *(void *)(v0 + 520) = [v87 messageID];
    *(void *)(v0 + 528) = [v87 from];
    sub_F74E0();
    *(void *)(v0 + 536) = sub_F74D0();
    uint64_t v32 = sub_F7470();
    id v34 = sub_6C0A0;
    goto LABEL_28;
  }
  uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 464);
  uint64_t v76 = *(void *)(v0 + 392);
  uint64_t v77 = *(void *)(v0 + 368);
  swift_release();
  uint64_t v78 = Logger.rcs.unsafeMutableAddressor();
  v75(v76, v78, v77);
  uint64_t v79 = sub_F70D0();
  os_log_type_t v80 = sub_F7670();
  if (os_log_type_enabled(v79, v80))
  {
    uint64_t v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v81 = 0;
    _os_log_impl(&dword_0, v79, v80, "Not sending disposition notification due to override", v81, 2u);
    swift_slowDealloc();
  }
  uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v83 = *(void *)(v0 + 392);
  uint64_t v84 = *(void *)(v0 + 368);

  v82(v83, v84);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v85 = *(uint64_t (**)(void))(v0 + 8);
  return v85();
}

uint64_t sub_6CDA4()
{
  uint64_t v1 = *(void **)(v0 + 528);
  uint64_t v2 = *(void **)(v0 + 520);
  uint64_t v3 = *(void **)(v0 + 512);
  swift_release();

  id v4 = [self sharedInstance];
  if (!v4) {
    __break(1u);
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 544);
  id v7 = [*(id *)(v0 + 304) messageID];
  id v8 = [v7 description];
  uint64_t v9 = sub_F7220();
  uint64_t v11 = v10;

  v17._uint64_t countAndFlagsBits = v9;
  v17._object = v11;
  sub_F72E0(v17);
  swift_bridgeObjectRelease();

  uint64_t v12 = sub_F78C0();
  *(unsigned char *)(v0 + 128) = 3;
  *(void *)(v0 + 136) = v12;
  *(void *)(v0 + 144) = v13;
  *(void *)(v0 + 152) = 0x206567617373656DLL;
  *(void *)(v0 + 160) = 0xEB00000000204449;
  *(void *)(v0 + 168) = v6;
  *(unsigned char *)(v0 + 176) = 0;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_6204C((unsigned __int8 *)(v0 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_6CFD4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_57A4;
  return RCSServiceSession.dequeueAndProcess(messageID:context:)(v3, v4);
}

uint64_t sub_6D078@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_6D0A8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1 != a2)
  {
    unint64_t v4 = a1;
    if (a2 >= a1)
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
      while ((uint64_t)v4 < a2)
      {
        id v6 = [a3 list];
        sub_6CA4(0, &qword_128238);
        uint64_t v7 = sub_F7410();

        if ((v7 & 0xC000000000000001) != 0)
        {
          id v8 = (id)sub_F78D0();
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_17;
          }
          if (v4 >= *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8))) {
            goto LABEL_18;
          }
          id v8 = *(id *)(v7 + 8 * v4 + 32);
        }
        uint64_t v9 = v8;
        swift_bridgeObjectRelease();
        id v10 = [v9 header];
        uint64_t v11 = sub_F7220();
        uint64_t v13 = v12;

        id v14 = [v9 value];
        uint64_t v15 = sub_F7220();
        uint64_t v17 = v16;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_35594(0, v5[2] + 1, 1, v5);
        }
        unint64_t v19 = v5[2];
        unint64_t v18 = v5[3];
        if (v19 >= v18 >> 1) {
          uint64_t v5 = sub_35594((void *)(v18 > 1), v19 + 1, 1, v5);
        }
        ++v4;
        v5[2] = v19 + 1;
        uint64_t v20 = &v5[4 * v19];
        _OWORD v20[4] = v11;
        v20[5] = v13;
        v20[6] = v15;
        unsigned char v20[7] = v17;
        if (a2 == v4) {
          return;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_6D298(void *a1)
{
  id v1 = [a1 content];
  sub_F77F0();
  swift_unknownObjectRelease();
  sub_551C(&qword_128D80);
  if (swift_dynamicCast())
  {
    sub_1E87C(v6, (uint64_t)v8);
    uint64_t v2 = v9;
    uint64_t v3 = v10;
    sub_6BA8(v8, v9);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    sub_6BEC((uint64_t)v8);
  }
  else
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1E944((uint64_t)v6, &qword_128D88);
    return 0;
  }
  return v4;
}

uint64_t sub_6D38C()
{
  uint64_t v1 = type metadata accessor for RCSMessage(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  if (*(unsigned char *)(v0 + v3 + 122))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v5 + 121))
    {
      uint64_t v6 = v5 + 64;
LABEL_6:
      sub_6BEC(v6);
      goto LABEL_8;
    }
  }
  else if (*(unsigned char *)(v5 + 57))
  {
    uint64_t v6 = v0 + v3;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(v5 + *(int *)(v1 + 28));
  uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      case 1u:
        uint64_t v9 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = (char *)v7 + *(int *)(v9 + 24);
          uint64_t v11 = sub_F6DC0();
          (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
          uint64_t v12 = (char *)v7 + *(int *)(v9 + 28);
          uint64_t v13 = sub_F6EE0();
          (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        }
        id v14 = (char *)v7 + *(int *)(type metadata accessor for RCSFile(0) + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v16 = &v14[*(int *)(v15 + 28)];
        uint64_t v17 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        unint64_t v18 = &v14[*(int *)(v15 + 32)];
        uint64_t v19 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        sub_551C(&qword_128218);
        goto LABEL_14;
      case 3u:
        sub_6BEC((uint64_t)v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v7[9])
        {
          swift_bridgeObjectRelease();
          sub_2852C(v7[10], v7[11]);
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
      case 6u:
      case 7u:
LABEL_14:
        swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v20 = v5 + *(int *)(v1 + 32);
  if (*(void *)(v20 + 24)) {
    sub_6BEC(v20);
  }
  unint64_t v21 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v22 + 8, v2 | 7);
}

uint64_t sub_6D7EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_46BC;
  return sub_67C74(a1, v7, v8, v9, v10, v11);
}

void RCSServiceSession.handler(_:messageIDDelivered:toIdentifier:fromIdentifier:timeStamp:storageContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_6DA28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - v10;
  unsigned int v12 = [v3 _isActiveServiceForRelay];
  uint64_t v13 = Logger.rcs.unsafeMutableAddressor();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  if (v12)
  {
    v14(v11, v13, v5);
    uint64_t v15 = sub_F70D0();
    os_log_type_t v16 = sub_F7670();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "RCS Relay received message delivered", v17, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    if (a2)
    {
      unint64_t v18 = (void *)sub_F71F0();
      uint64_t v19 = sub_F6EE0();
      uint64_t v20 = *(void *)(v19 - 8);
      __chkstk_darwin(v19);
      unint64_t v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_F6EB0();
      uint64_t v23 = (void *)sub_F6E60();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      [v3 didReceiveMessageDeliveryReceiptForMessageID:v18 date:v23];
    }
  }
  else
  {
    v14(v9, v13, v5);
    id v24 = sub_F70D0();
    os_log_type_t v25 = sub_F7670();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "RCS Relay ignoring message delivered message", v26, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

id CTLazuliGroupChatUri.init(identity:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_28A38(a1, v3);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  id v9 = sub_6E35C((uint64_t)v7, v1, v3, v4);
  sub_6BEC(a1);
  return v9;
}

uint64_t sub_6DE34()
{
  id v1 = [*v0 originalGroupID];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_F7220();

  return v3;
}

void sub_6DE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (a2)
  {
    id v4 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  [v3 setOriginalGroupID:v4];
}

void (*sub_6DF14(uint64_t **a1))(void *a1)
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_6DFB8(v2);
  return sub_6DF70;
}

void sub_6DF70(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_6DFB8(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = [v1 originalGroupID];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_F7220();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_6E040;
}

void sub_6E040(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      id v4 = (id)sub_F71F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = 0;
    }
    [*(id *)(a1 + 16) setOriginalGroupID:v4];
    swift_bridgeObjectRelease();
  }
  else if (v3)
  {
    id v4 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
    [*(id *)(a1 + 16) setOriginalGroupID:v4];
  }
  else
  {
    id v4 = 0;
    [*(id *)(a1 + 16) setOriginalGroupID:0];
  }
}

uint64_t sub_6E114()
{
  id v1 = [*v0 properties];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_F71B0();

  return v3;
}

id sub_6E184(uint64_t a1)
{
  uint64_t v2 = *v1;
  if (a1) {
    uint64_t v3 = (void *)sub_F71A0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = [v2 updateProperties:v3];

  return v4;
}

id sub_6E1F4()
{
  return [*v0 resetCKSyncState];
}

uint64_t sub_6E204@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 focus];
  uint64_t v4 = sub_F7220();
  uint64_t v6 = v5;

  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v4;
  v7._object = v6;
  RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v18, v7, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
  if (v8)
  {
    swift_errorRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = 0;
    object = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    CoreRCS::RCSHandle::BotStatus botStatus = CoreRCS_RCSHandle_BotStatus_notChatBot;
    long long v16 = 0uLL;
  }
  else
  {
    uint64_t countAndFlagsBits = v18.scheme._countAndFlagsBits;
    object = v18.scheme._object;
    uint64_t v12 = v18.id._countAndFlagsBits;
    long long v17 = *(_OWORD *)&v18.id._object;
    uint64_t v13 = v18.alternateHandle.value._countAndFlagsBits;
    uint64_t v14 = v18.alternateHandle.value._object;
    CoreRCS::RCSHandle::BotStatus botStatus = v18.botStatus;
    uint64_t result = swift_bridgeObjectRelease();
    long long v16 = v17;
  }
  *(void *)a1 = countAndFlagsBits;
  *(void *)(a1 + 8) = object;
  *(void *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 24) = v16;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 56) = botStatus;
  return result;
}

uint64_t sub_6E304()
{
  id v1 = [*v0 conversationID];
  uint64_t v2 = sub_F7220();

  return v2;
}

id sub_6E35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29[8];
  _OWORD v30[2];
  _OWORD v31[4];
  _OWORD v32[3];

  uint64_t v7 = sub_551C(&qword_127C70);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v13, a1, a3);
  id v15 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  long long v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  long long v17 = v15;
  uint64_t v27 = a3;
  os_log_type_t v25 = a4;
  v16(v29, a3, a4);
  sub_6C3C((uint64_t)v29, (uint64_t)v30);
  if (*((void *)&v30[0] + 1))
  {
    _OWORD v31[2] = v30[0];
    id v31[3] = v30[1];
    v32[0] = v31[0];
    *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)v31 + 9);
    RCSHandle.rawValue.getter();
    sub_6D74(v29);
    CoreRCS::RCSHandle v18 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v17 setFocus:v18];
  }
  if (qword_127BB0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_8B44(v7, (uint64_t)qword_127EC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v19, v7);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  uint64_t v20 = v27;
  if (v28 == 1 && ((*(void (**)(uint64_t))(v25 + 16))(v27), v21))
  {
    unint64_t v22 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v22 = (void *)sub_F71F0();
  }
  uint64_t v23 = v26;
  [v17 setConversationID:v22];

  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v20);
  return v17;
}

ValueMetadata *type metadata accessor for CTRCSGroupIdentity()
{
  return &type metadata for CTRCSGroupIdentity;
}

uint64_t RCSServiceSession.calculateReachability(with:responseHandler:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F74F0();
  uint64_t v8 = sub_F7520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_F74E0();
  id v9 = v2;
  id v10 = a1;
  swift_unknownObjectRetain();
  uint64_t v11 = sub_F74D0();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  uint64_t v12[3] = &protocol witness table for MainActor;
  v12[4] = v9;
  v12[5] = v10;
  v12[6] = a2;
  sub_9EAC((uint64_t)v7, (uint64_t)&unk_128E00, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_6E810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  long long v6[2] = a4;
  sub_F74E0();
  v6[5] = sub_F74D0();
  uint64_t v8 = sub_F7470();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_6E8AC, v8, v7);
}

void sub_6E8AC()
{
  uint64_t v1 = *(void *)(*(void *)(v0[2] + OBJC_IVAR___RCSServiceSession_state) + 96);
  v0[8] = v1;
  if (v1)
  {
    uint64_t v5 = (void (*)(uint64_t, uint64_t))(*(void *)(*(void *)v1 + 160) + **(int **)(*(void *)v1 + 160));
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[9] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_6E9DC;
    uint64_t v4 = v0[3];
    uint64_t v3 = v0[4];
    v5(v4, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_6E9DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_148FC, v3, v2);
}

uint64_t sub_6EB24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_57A4;
  return sub_6E810(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_6ED68()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_6EDB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_46BC;
  return sub_6E810(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_6EE80(uint64_t a1)
{
  uint64_t v23 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v25 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v8 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v14 = *v13;
    id v15 = (void *)v13[1];
    swift_bridgeObjectRetain_n();
    v16._uint64_t countAndFlagsBits = v14;
    v16._object = v15;
    RCSHandle.init(rawValue:botStatus:alternateHandle:)(&v24, v16, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
    uint64_t countAndFlagsBits = v24.id._countAndFlagsBits;
    object = v24.id._object;
    swift_bridgeObjectRetain();
    sub_6D20((uint64_t)&v24);
    swift_bridgeObjectRelease();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_350A4(0, *((void *)v7 + 2) + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    unint64_t v21 = *((void *)v7 + 2);
    unint64_t v20 = *((void *)v7 + 3);
    if (v21 >= v20 >> 1)
    {
      uint64_t result = (uint64_t)sub_350A4((char *)(v20 > 1), v21 + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    *((void *)v7 + 2) = v21 + 1;
    unint64_t v22 = &v7[16 * v21];
    *((void *)v22 + 4) = countAndFlagsBits;
    *((void *)v22 + 5) = object;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v6++, 1)) {
      break;
    }
    if (v6 >= v25) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v23 + 8 * v6);
    if (!v11)
    {
      int64_t v12 = v6 + 1;
      if (v6 + 1 >= v25) {
        goto LABEL_30;
      }
      unint64_t v11 = *(void *)(v23 + 8 * v12);
      if (v11) {
        goto LABEL_16;
      }
      int64_t v12 = v6 + 2;
      if (v6 + 2 >= v25) {
        goto LABEL_30;
      }
      unint64_t v11 = *(void *)(v23 + 8 * v12);
      if (v11) {
        goto LABEL_16;
      }
      int64_t v12 = v6 + 3;
      if (v6 + 3 >= v25) {
        goto LABEL_30;
      }
      unint64_t v11 = *(void *)(v23 + 8 * v12);
      if (v11)
      {
LABEL_16:
        int64_t v6 = v12;
        goto LABEL_17;
      }
      int64_t v12 = v6 + 4;
      if (v6 + 4 < v25)
      {
        unint64_t v11 = *(void *)(v23 + 8 * v12);
        if (!v11)
        {
          while (1)
          {
            int64_t v6 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              goto LABEL_33;
            }
            if (v6 >= v25) {
              goto LABEL_30;
            }
            unint64_t v11 = *(void *)(v23 + 8 * v6);
            ++v12;
            if (v11) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_30:
      swift_release();
      return (uint64_t)v7;
    }
LABEL_17:
    unint64_t v4 = (v11 - 1) & v11;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_6F100(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = a2[7];
  uint64_t v23 = a2;
  if (v6) {
    uint64_t v22 = sub_F71F0();
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t v7 = sub_F6F30();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6F20();
  sub_F6F00();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  unint64_t v11 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  sub_1E74C(a1, (uint64_t)v26, &qword_127C58);
  sub_1E74C((uint64_t)v26, (uint64_t)v27, &qword_127C58);
  if (v28) {
    int64_t v12 = (void *)sub_F71F0();
  }
  else {
    int64_t v12 = 0;
  }
  long long v13 = *(_OWORD *)(a1 + 80);
  v24[0] = *(_OWORD *)(a1 + 64);
  v24[1] = v13;
  sub_1E74C((uint64_t)v24, (uint64_t)v25, &qword_128B88);
  sub_1E74C((uint64_t)v25, (uint64_t)v29, &qword_128B88);
  if (v29[1]) {
    uint64_t v14 = (void *)sub_F71F0();
  }
  else {
    uint64_t v14 = 0;
  }
  id v15 = *(void **)(a1 + 96);
  id v16 = objc_msgSend(v15, "chatIdentifier", v22);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v15 style];
    id v19 = [v3 account];
    LOBYTE(v21) = 1;
    unint64_t v20 = (void *)v22;
    [v3 didReceiveDisplayNameChange:v22 guid:v11 fromID:v12 toIdentifier:v14 forChat:v17 style:v18 account:v19 shouldRelay:v21];

    sub_6F4E0(a1, v23);
  }
  else
  {
    __break(1u);
  }
}

void sub_6F3AC(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 96);
  id v4 = [v3 chatIdentifier];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v3 style];
    long long v7 = *(_OWORD *)(a1 + 80);
    long long v10 = *(_OWORD *)(a1 + 64);
    long long v11 = v7;
    sub_1E74C((uint64_t)&v10, (uint64_t)v13, &qword_128B88);
    sub_1E74C((uint64_t)v13, (uint64_t)v14, &qword_128B88);
    if (v14[1]) {
      uint64_t v8 = (void *)sub_F71F0();
    }
    else {
      uint64_t v8 = 0;
    }
    sub_1E74C((uint64_t)&v11, (uint64_t)v12, &qword_128B88);
    sub_1E74C((uint64_t)v12, (uint64_t)v15, &qword_128B88);
    if (v15[1]) {
      uint64_t v9 = (void *)sub_F71F0();
    }
    else {
      uint64_t v9 = 0;
    }
    [v1 _updateLastAddressedIDsIfNeededForChatWithIdentifier:v5 style:v6 lastAddressedHandle:v8 lastAddressedSIMID:v9];
  }
  else
  {
    __break(1u);
  }
}

void sub_6F4E0(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v8 = _s17ParticipantChangeVMa();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  long long v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)&v48 - v12;
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  id v16 = sub_6BA8(a2, v14);
  uint64_t v17 = sub_35F9C(v16, v5, v14, v15);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v50 = v5;
    uint64_t v51 = a1;
    id v19 = [*(id *)(a1 + 96) participantHandles];
    unint64_t v49 = v11;
    id v52 = (void *)v18;
    if (v19)
    {
      unint64_t v20 = v19;
      uint64_t v21 = (void *)sub_F7410();
    }
    else
    {
      uint64_t v21 = _swiftEmptyArrayStorage;
    }
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_31010(v22);
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_6FC2C(v24);
    swift_bridgeObjectRelease();
    uint64_t v54 = v25;
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_6FC2C(v26);
    swift_bridgeObjectRelease();
    uint64_t v53 = v27;
    uint64_t v28 = v23[2];
    if (v28)
    {
      uint64_t v29 = v23 + 5;
      do
      {
        uint64_t v30 = *(v29 - 1);
        uint64_t v31 = *v29;
        swift_bridgeObjectRetain();
        sub_6F8D4(v30, v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 += 2;
        --v28;
      }
      while (v28);
    }
    swift_bridgeObjectRelease();
    uint64_t v32 = v21[2];
    if (v32)
    {
      uint64_t v33 = v21 + 5;
      do
      {
        uint64_t v34 = *(v33 - 1);
        uint64_t v35 = *v33;
        swift_bridgeObjectRetain();
        sub_6F8D4(v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 += 2;
        --v32;
      }
      while (v32);
    }
    swift_bridgeObjectRelease();
    uint64_t v36 = v52;
    if (*(void *)(v54 + 16))
    {
      uint64_t v37 = sub_6EE80(v54);
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_22;
      }
      sub_1E74C(v51, (uint64_t)v56, &qword_127C58);
      sub_1E74C((uint64_t)v56, (uint64_t)v57, &qword_127C58);
      if (v57[1])
      {
        uint64_t v38 = v57[2];
        uint64_t v39 = v57[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v38 = 0;
        uint64_t v39 = 0;
      }
      uint64_t v41 = *(void *)(v51 + 64);
      uint64_t v40 = *(void *)(v51 + 72);
      swift_bridgeObjectRetain();
      sub_45218(v36, 1, v37, v38, v39, v41, v40, 0, (uint64_t)v13);
      sub_49E54((uint64_t)v13);
      sub_2B3A0((uint64_t)v13);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (!*(void *)(v53 + 16))
    {
LABEL_22:

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v42 = sub_6EE80(v53);
    swift_bridgeObjectRelease();
    if (v4)
    {
    }
    else
    {
      sub_1E74C(v51, (uint64_t)v55, &qword_127C58);
      sub_1E74C((uint64_t)v55, (uint64_t)v58, &qword_127C58);
      if (v59)
      {
        uint64_t v43 = v61;
        uint64_t v50 = v60;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v50 = 0;
        uint64_t v43 = 0;
      }
      uint64_t v44 = *(void *)(v51 + 64);
      uint64_t v45 = *(void *)(v51 + 72);
      swift_bridgeObjectRetain();
      id v46 = v36;
      uint64_t v47 = (uint64_t)v49;
      sub_45218(v46, 0, v42, v50, v43, v44, v45, 0, (uint64_t)v49);
      sub_49E54(v47);

      sub_2B3A0(v47);
    }
  }
}

uint64_t sub_6F8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_F7C20();
  swift_bridgeObjectRetain();
  sub_F72C0();
  Swift::Int v6 = sub_F7C50();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_F7B60() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      id v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_F7B60() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_52A5C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_6FA64(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_6FA64(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_F7C20();
        swift_bridgeObjectRetain();
        sub_F72C0();
        Swift::Int v10 = sub_F7C50();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_6FC2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_F7630();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_52430(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_6FCC4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_6FD28(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 64) = v6;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a5;
  *(unsigned char *)(v7 + 72) = a3;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  return _swift_task_switch(sub_6FDC4, 0, 0);
}

uint64_t sub_6FDC4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  int v4 = *(unsigned __int8 *)(v0 + 72);
  id v5 = [objc_allocWithZone((Class)CTLazuliDestination) init];
  uint64_t v6 = (void *)sub_F71F0();
  [v5 setUri:v6];

  id v7 = [objc_allocWithZone((Class)CTLazuliFetchRemoteCapabilitiesOptions) init];
  uint64_t v8 = v7;
  if (v4) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = 2;
  }
  [v7 setType:v9];
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v11 = *(id *)(*(void *)&Strong[OBJC_IVAR___RCSServiceSession_state] + 16);

  sub_721A0();
  swift_bridgeObjectRetain();
  id v12 = CTLazuliOperationID.init(id:)(v3, v1);
  *(void *)(v0 + 16) = 0;
  unsigned int v13 = [v11 fetchRemoteCapabilities:v2 forDestination:v5 withOptions:v8 withOperationID:v12 withError:v0 + 16];

  uint64_t v14 = *(void **)(v0 + 16);
  if (v13)
  {
    id v15 = v14;
  }
  else
  {
    id v17 = v14;
    sub_F6D30();

    swift_willThrow();
  }

  BOOL v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

void *sub_6FFE0(void *a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_710CC(a1);
  if (!v9) {
    return 0;
  }
  Swift::Int v10 = v9;
  id v11 = [v9 labelID];
  if (!v11)
  {
    uint64_t v27 = Logger.reachability.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v27, v2);
    uint64_t v28 = v10;
    uint64_t v29 = sub_F70D0();
    os_log_type_t v30 = sub_F76A0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v35 = v3;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412290;
      uint64_t v36 = v28;
      uint64_t v28 = v28;
      uint64_t v3 = v35;
      sub_F77B0();
      void *v34 = v10;

      _os_log_impl(&dword_0, v29, v30, "Unexpectedly found nil labelID on subscription context %@", v31, 0xCu);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v29 = v28;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  id v12 = v11;
  uint64_t v13 = sub_F7220();
  uint64_t v15 = v14;

  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v17 = *(void *)(*(void *)&Strong[OBJC_IVAR___RCSServiceSession_state] + 24);
  swift_bridgeObjectRetain();

  if (!*(void *)(v17 + 16) || (unint64_t v18 = sub_1C9BC(v13, v15), (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = Logger.reachability.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v22, v2);
    uint64_t v23 = v10;
    uint64_t v24 = sub_F70D0();
    os_log_type_t v25 = sub_F7690();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v35 = v3;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      uint64_t v36 = v23;
      uint64_t v23 = v23;
      uint64_t v3 = v35;
      sub_F77B0();
      void *v34 = v10;

      _os_log_impl(&dword_0, v24, v25, "Missing RCS configuration for subscription context %@", v26, 0xCu);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v24 = v23;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return 0;
  }
  unint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
  id v21 = v20;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_70434(void *a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IMSharedHelperRetrieveSimDetailsFromTelephony())
  {
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    uint64_t v6 = sub_6FFE0(a1);
    char v7 = sub_71794(v6, (unint64_t *)&v29);

    uint64_t v8 = Logger.reachability.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    uint64_t v10 = v29;
    unint64_t v9 = v30;
    id v11 = a1;
    swift_bridgeObjectRetain();
    id v12 = sub_F70D0();
    os_log_type_t v13 = sub_F7670();
    int v14 = v13;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v15 = swift_slowAlloc();
      int v25 = v14;
      uint64_t v16 = v15;
      id v21 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (uint64_t)v11;
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v16 = 138412802;
      uint64_t v23 = v2;
      os_log_t v24 = v12;
      id v17 = v11;
      uint64_t v22 = v10;
      id v18 = v17;
      sub_F77B0();
      *id v21 = v11;

      *(_WORD *)(v16 + 12) = 1024;
      LODWORD(v27) = v7 & 1;
      sub_F77B0();
      *(_WORD *)(v16 + 18) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_A3FC(v22, v9, &v28);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      os_log_t v19 = v24;
      _os_log_impl(&dword_0, v24, (os_log_type_t)v25, "RCS is enabled for %@: %{BOOL}d (%s)", (uint8_t *)v16, 0x1Cu);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_70764(void *a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v36 - v7;
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony()) {
    return 100;
  }
  unint64_t v9 = sub_6FFE0(a1);
  if (!v9
    || (uint64_t v10 = v9,
        id v11 = [v9 groupChatCapabilites],
        v10,
        !v11)
    || (id v12 = [v11 maxGroupSize], v11, !v12))
  {
    uint64_t v26 = Logger.reachability.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v26, v2);
    uint64_t v27 = a1;
    uint64_t v28 = sub_F70D0();
    os_log_type_t v29 = sub_F7670();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v38 = v2;
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v39 = v3;
      uint64_t v40 = v27;
      uint64_t v32 = (void *)v31;
      *(_DWORD *)unint64_t v30 = 138412290;
      uint64_t v33 = v27;
      sub_F77B0();
      *uint64_t v32 = v27;

      uint64_t v2 = (uint64_t)v38;
      _os_log_impl(&dword_0, v28, v29, "Returning RCS max group size, can't find configuration for %@", v30, 0xCu);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      uint64_t v3 = v39;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v28 = v27;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 100;
  }
  uint64_t v13 = Logger.reachability.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v13, v2);
  id v14 = a1;
  id v15 = v12;
  uint64_t v16 = v14;
  id v17 = v15;
  id v18 = sub_F70D0();
  os_log_type_t v19 = sub_F7670();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412546;
    uint64_t v38 = v17;
    uint64_t v39 = v3;
    uint64_t v40 = v16;
    v36[0] = v21 + 12;
    v36[1] = &v41;
    uint64_t v23 = v16;
    int v37 = v20;
    os_log_t v24 = v23;
    id v17 = v38;
    sub_F77B0();
    void *v22 = v16;

    *(_WORD *)(v21 + 12) = 2112;
    uint64_t v40 = v17;
    int v25 = v17;
    uint64_t v3 = v39;
    sub_F77B0();
    v22[1] = v12;

    _os_log_impl(&dword_0, v18, (os_log_type_t)v37, "RCS max group size for %@: %@", (uint8_t *)v21, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v18 = v16;
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  id v34 = [v17 integerValue];

  return (uint64_t)v34;
}

id sub_70D18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RCSServiceReachabilityDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RCSServiceReachabilityDelegate()
{
  return self;
}

uint64_t sub_70D80(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *a4;
  uint64_t v14 = swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *(void *)uint64_t v14 = v7;
  *(void *)(v14 + 8) = sub_46BC;
  *(void *)(v14 + 56) = a6;
  *(void *)(v14 + 64) = v6;
  *(void *)(v14 + 40) = v13;
  *(void *)(v14 + 48) = a5;
  *(unsigned char *)(v14 + 72) = a3;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  return _swift_task_switch(sub_6FDC4, 0, 0);
}

char *sub_70E64@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_710CC(a1);
  *a2 = result;
  return result;
}

double sub_70E8C@<D0>(_OWORD *a1@<X8>)
{
  RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))RCSPersistentMenu.menu.getter, v4);
  long long v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  a1[2] = v5[0];
  double result = *(double *)((char *)v5 + 9);
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)v5 + 9);
  return result;
}

uint64_t sub_70EF8()
{
  return IMSharedHelperRetrieveSimDetailsFromTelephony();
}

id sub_70F10(void *a1)
{
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony()) {
    return 0;
  }
  long long v2 = sub_710CC(a1);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = [self sharedManager];
  id v5 = [v4 networkSupportsInterworkingForContext:v3];

  return v5;
}

id sub_70F9C(uint64_t a1, uint64_t a2, void **a3)
{
  return sub_718E8(a1, a2, *a3);
}

void sub_70FA4(void *a1)
{
  if (!IMSharedHelperRetrieveSimDetailsFromTelephony() || (sub_70434(a1) & 1) == 0)
  {
    sub_71A08(a1);
  }
}

uint64_t sub_71000()
{
  uint64_t v0 = (void *)sub_F71F0();
  uint64_t v1 = IMBagBoolValueWithDefault();

  return v1;
}

void sub_71054(uint64_t a1, uint64_t a2)
{
  id v4 = [self sharedInstance];
  [v4 calculateReachabilityWithRequest:a1 responseHandler:a2];
}

char *sub_710CC(void *a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v52 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v51 = (char *)&v50 - v7;
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v50 - v8;
  uint64_t v10 = self;
  id v11 = [v10 sharedInstance];
  id v12 = [v11 ctSubscriptionInfo];

  if (v12)
  {
    id v13 = [a1 senderLastAddressedSIMID];
    uint64_t v53 = (void *)v2;
    id v14 = v13;
    id v15 = [a1 senderLastAddressedHandle];
    uint64_t v54 = v3;
    id v16 = v15;
    id v17 = (char *)objc_msgSend(v12, "__im_subscriptionContextForForSimID:phoneNumber:", v14, v15);

    uint64_t v2 = (uint64_t)v53;
    uint64_t v3 = v54;
    if (v17)
    {
      uint64_t v18 = Logger.reachability.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v18, v2);
      id v19 = a1;
      int v20 = v17;
      uint64_t v21 = v19;
      uint64_t v22 = v20;
      uint64_t v23 = sub_F70D0();
      os_log_type_t v24 = sub_F7680();
      int v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 138412546;
        LODWORD(v51) = v25;
        uint64_t v55 = v21;
        id v52 = v17;
        uint64_t v28 = v21;
        uint64_t v3 = v54;
        sub_F77B0();
        *uint64_t v27 = v21;

        uint64_t v2 = (uint64_t)v53;
        *(_WORD *)(v26 + 12) = 2112;
        uint64_t v55 = v22;
        os_log_type_t v29 = v22;
        id v17 = v52;
        sub_F77B0();
        v27[1] = v17;

        _os_log_impl(&dword_0, v23, (os_log_type_t)v51, "Found exact match for subscription context %@: %@", (uint8_t *)v26, 0x16u);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        goto LABEL_14;
      }
LABEL_11:

      uint64_t v23 = v21;
      goto LABEL_14;
    }
  }
  id v30 = [v10 sharedInstance];
  id v31 = [v30 ctSubscriptionInfo];

  if (v31)
  {
    id v17 = (char *)[v31 preferredOrDefaultSubscriptionContext];

    if (v17)
    {
      uint64_t v32 = Logger.reachability.unsafeMutableAddressor();
      unint64_t v9 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v51, v32, v2);
      id v33 = a1;
      id v34 = v17;
      uint64_t v21 = v33;
      uint64_t v22 = v34;
      uint64_t v23 = sub_F70D0();
      os_log_type_t v35 = sub_F7680();
      int v36 = v35;
      if (os_log_type_enabled(v23, v35))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 138412546;
        LODWORD(v54) = v36;
        uint64_t v55 = v21;
        id v52 = v17;
        uint64_t v39 = v21;
        uint64_t v53 = (void *)v2;
        uint64_t v40 = v39;
        sub_F77B0();
        *uint64_t v38 = v21;

        uint64_t v2 = (uint64_t)v53;
        *(_WORD *)(v37 + 12) = 2112;
        uint64_t v55 = v22;
        uint64_t v41 = v22;
        id v17 = v52;
        sub_F77B0();
        v38[1] = v17;

        _os_log_impl(&dword_0, v23, (os_log_type_t)v54, "Context %@ doesn't have subscription info - using default subscription %@", (uint8_t *)v37, 0x16u);
        sub_551C(&qword_128C10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        unint64_t v9 = v51;
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  uint64_t v42 = Logger.reachability.unsafeMutableAddressor();
  uint64_t v43 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v52, v42, v2);
  uint64_t v44 = a1;
  uint64_t v23 = sub_F70D0();
  os_log_type_t v45 = sub_F7690();
  if (os_log_type_enabled(v23, v45))
  {
    id v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = (void *)swift_slowAlloc();
    *(_DWORD *)id v46 = 138412290;
    uint64_t v55 = v44;
    uint64_t v47 = v44;
    uint64_t v54 = v3;
    uint64_t v48 = v47;
    sub_F77B0();
    *uint64_t v53 = v44;

    uint64_t v3 = v54;
    _os_log_impl(&dword_0, v23, v45, "Device has no subscriptions, returning nil subscription for reachability context %@", v46, 0xCu);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    id v17 = 0;
  }
  else
  {

    id v17 = 0;
    uint64_t v23 = v44;
  }
  unint64_t v9 = v43;
LABEL_14:

  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return v17;
}

uint64_t sub_71794(void *a1, unint64_t *a2)
{
  unint64_t v4 = 0xD000000000000010;
  swift_bridgeObjectRelease();
  if (!a1)
  {
    char v8 = 0;
    id v14 = "no configuration";
LABEL_6:
    unint64_t v13 = (unint64_t)(v14 - 32) | 0x8000000000000000;
    goto LABEL_7;
  }
  id v5 = a1;
  id v6 = [v5 operationStatus];
  if (!v6)
  {

    char v8 = 0;
    unint64_t v4 = 0xD00000000000001BLL;
    id v14 = "can't find operation status";
    goto LABEL_6;
  }
  uint64_t v7 = v6;
  char v8 = sub_6FCC4((uint64_t)[v6 registrationState], (uint64_t)&off_11DBF0);
  sub_F78A0(20);
  swift_bridgeObjectRelease();
  id v9 = [v7 description];
  uint64_t v10 = sub_F7220();
  id v12 = v11;

  v16._uint64_t countAndFlagsBits = v10;
  v16._object = v12;
  sub_F72E0(v16);

  swift_bridgeObjectRelease();
  unint64_t v4 = 0xD000000000000012;
  unint64_t v13 = 0x8000000000103AB0;
LABEL_7:
  *a2 = v4;
  a2[1] = v13;
  return v8 & 1;
}

id sub_718E8(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = (void *)sub_F71F0();
  id v5 = [v4 _stripFZIDPrefix];

  if (v5)
  {
    sub_F7220();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  int IsPhoneNumber = IMStringIsPhoneNumber();

  if (!IsPhoneNumber)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v9 = [a3 slotID];
  if (v7)
  {
    uint64_t v10 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = [objc_allocWithZone((Class)CTPhoneNumber) initWithDigits:v9 digits:v10 countryCode:0];

  if (!v11) {
    return 0;
  }
  id v12 = [v11 isShortCode];

  return v12;
}

void sub_71A08(void *a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v67 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  id v9 = (char *)&v64 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v64 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v64 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v65 = (char *)&v64 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v64 = (char *)&v64 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v64 - v20;
  uint64_t v22 = self;
  id v23 = [v22 sharedInstance];
  if (!v23)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  os_log_type_t v24 = v23;
  unsigned int v25 = [v23 hasRelayDevice];

  if (!v25)
  {
    uint64_t v38 = Logger.reachability.unsafeMutableAddressor();
    uint64_t v39 = v66;
    uint64_t v33 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v6, v38, v66);
    uint64_t v32 = sub_F70D0();
    int v40 = sub_F7670();
    if (os_log_type_enabled(v32, (os_log_type_t)v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_0, v32, (os_log_type_t)v40, "Returning that RCS relay is unavailable, we have no relay devices", v41, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = v6;
    goto LABEL_38;
  }
  id v26 = [v22 sharedInstance];
  if (!v26) {
    goto LABEL_40;
  }
  uint64_t v27 = v26;
  id v28 = [v26 enrollmentController];

  if (!v28)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  unsigned int v29 = [v28 hasBeenRemoteApproved];

  if (!v29)
  {
    uint64_t v42 = Logger.reachability.unsafeMutableAddressor();
    uint64_t v39 = v66;
    uint64_t v33 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v9, v42, v66);
    uint64_t v32 = sub_F70D0();
    int v43 = sub_F7670();
    if (os_log_type_enabled(v32, (os_log_type_t)v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_0, v32, (os_log_type_t)v43, "Returning that RCS relay is unavailable, we are not approved for relay", v44, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = v9;
    goto LABEL_38;
  }
  id v30 = (char *)[a1 senderLastAddressedHandle];
  if (!v30)
  {
LABEL_20:
    id v45 = [v22 sharedInstance];
    if (v45)
    {
      id v46 = v45;
      unsigned int v47 = [v45 hasPhoneNumberAliasActiveCheckingSelf:0];

      uint64_t v48 = Logger.reachability.unsafeMutableAddressor();
      uint64_t v39 = v66;
      unint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      if (v47)
      {
        v49(v15, v48, v66);
        uint64_t v32 = sub_F70D0();
        os_log_type_t v50 = sub_F7670();
        if (os_log_type_enabled(v32, v50))
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          _os_log_impl(&dword_0, v32, v50, "Returning that RCS relay is available, we are approved and have a phone number alias that provides relay", v51, 2u);
          swift_slowDealloc();
        }
        uint64_t v21 = v15;
        uint64_t v33 = v67;
      }
      else
      {
        v49(v12, v48, v66);
        uint64_t v32 = sub_F70D0();
        int v52 = sub_F7670();
        if (os_log_type_enabled(v32, (os_log_type_t)v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v53 = 0;
          _os_log_impl(&dword_0, v32, (os_log_type_t)v52, "Returning that RCS relay is unavailable, we are approved but have no phone number aliases that provide relay", v53, 2u);
          swift_slowDealloc();
        }
        uint64_t v21 = v12;
        uint64_t v33 = v67;
      }
      goto LABEL_38;
    }
    goto LABEL_42;
  }
  id v9 = v30;
  if (!IMStringIsPhoneNumber())
  {

    goto LABEL_20;
  }
  id v31 = [self sharedInstance];
  uint64_t v32 = [v31 ctSubscriptionInfo];

  uint64_t v33 = v67;
  if (v32)
  {
    if ([v32 __im_containsPhoneNumber:v9])
    {

      uint64_t v34 = Logger.reachability.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v21, v34, v66);
      os_log_type_t v35 = sub_F70D0();
      os_log_type_t v36 = sub_F7670();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_0, v35, v36, "Returning that RCS relay is unavailable, preferred handle is locally provided. Relay is impossible", v37, 2u);
        swift_slowDealloc();
      }

      goto LABEL_37;
    }
  }
  id v54 = [v22 sharedInstance];
  if (v54)
  {
    uint64_t v55 = v54;
    unsigned __int8 v56 = [v54 isAliasActiveAndRelayCapable:v9 checkingSelf:0];

    uint64_t v57 = Logger.reachability.unsafeMutableAddressor();
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
    uint64_t v39 = v66;
    if (v56)
    {
      uint64_t v21 = v64;
      v58(v64, v57, v66);
      uint64_t v32 = sub_F70D0();
      os_log_type_t v59 = sub_F7670();
      if (os_log_type_enabled(v32, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl(&dword_0, v32, v59, "Returning that RCS relay is available, we are approved and the last-addressed handle is from a device that supports relay", v60, 2u);
        swift_slowDealloc();
      }
      goto LABEL_38;
    }
    uint64_t v61 = v65;
    v58(v65, v57, v66);
    uint64_t v32 = sub_F70D0();
    os_log_type_t v62 = sub_F7670();
    if (os_log_type_enabled(v32, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl(&dword_0, v32, v62, "Returning that RCS relay is unavailable, we are approved but the last-addressed handle is not from a device that supports relay", v63, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = v61;
LABEL_37:
    uint64_t v39 = v66;
LABEL_38:

    (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v39);
    return;
  }
LABEL_43:

  __break(1u);
}

unint64_t sub_721A0()
{
  unint64_t result = qword_128020;
  if (!qword_128020)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_128020);
  }
  return result;
}

id CTXPCServiceSubscriptionContext.canonicalPhoneNumber.getter()
{
  id v1 = [v0 phoneNumber];
  if (v1)
  {
    uint64_t v2 = sub_F7220();
    uint64_t v4 = v3;

    unint64_t v5 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
    v6._uint64_t countAndFlagsBits = 7103860;
    v6._object = (void *)0xE300000000000000;
    v7._uint64_t countAndFlagsBits = v2;
    v7._object = v4;
    RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(&v10, v6, v7, (Swift::OpaquePointer)v5, CoreRCS_RCSHandle_BotStatus_notChatBot, (Swift::String_optional)0);
    __chkstk_darwin(v8);
    RCSHandle.canonicalizedHandle(for:)((uint64_t (*)(void))RCSPersistentMenu.menu.getter, &v11);
    sub_6D20((uint64_t)&v10);
    id v1 = v12;
    swift_bridgeObjectRetain();
    sub_6D20((uint64_t)&v11);
  }
  return v1;
}

void *sub_722F0(void *a1)
{
  id v2 = a1;
  return a1;
}

id sub_72318(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  long long v11 = (void *)sub_F71F0();
  id v12 = [v5 chatForChatIdentifier:v11 style:45];

  if (!v12)
  {
    sub_551C(&qword_1284D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_F9BF0;
    sub_F7220();
    sub_F7860();
    type metadata accessor for FZChatMemberStatus(0);
    *(void *)(inited + 96) = v14;
    *(_DWORD *)(inited + 72) = 2;
    sub_F7220();
    sub_F7860();
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = a1;
    *(void *)(inited + 152) = a2;
    sub_F7220();
    swift_bridgeObjectRetain();
    sub_F7860();
    *(void *)(inited + 240) = &type metadata for Bool;
    *(unsigned char *)(inited + 216) = a3 & 1;
    sub_F7220();
    sub_F7860();
    *(void *)(inited + 312) = &type metadata for String;
    if (a5) {
      uint64_t v15 = a4;
    }
    else {
      uint64_t v15 = 0;
    }
    unint64_t v16 = 0xE000000000000000;
    if (a5) {
      unint64_t v16 = a5;
    }
    *(void *)(inited + 288) = v15;
    *(void *)(inited + 296) = v16;
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_4AFC4(inited);
    uint64_t v18 = (void *)sub_F71F0();
    sub_551C(&qword_127FF0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_F8F20;
    *(void *)(v19 + 56) = sub_551C(&qword_1284E8);
    *(void *)(v19 + 32) = v17;
    uint64_t v20 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    [v5 didJoinChat:v18 style:45 displayName:0 groupID:0 handleInfo:v20];

    uint64_t v21 = (void *)sub_F71F0();
    id v12 = [v5 chatForChatIdentifier:v21 style:45];
  }
  return v12;
}

void *sub_725C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  sub_551C(&qword_128260);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_F8F20;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  if (a3)
  {
    uint64_t v10 = sub_F7280();
    uint64_t v11 = v9;
    if (v10 == a1 && v9 == a2 || (sub_F7B60() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
      {
        BOOL v33 = v12 > 1;
        unint64_t v14 = v13 + 1;
        uint64_t v8 = (uint64_t)sub_350A4((char *)v33, v13 + 1, 1, (char *)v8);
      }
      else
      {
        unint64_t v14 = v13 + 1;
      }
      *(void *)(v8 + 16) = v14;
      uint64_t v15 = v8 + 16 * v13;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v11;
    }
    uint64_t v17 = sub_F72A0();
    uint64_t v18 = v16;
    if (v17 == a1 && v16 == a2 || (sub_F7B60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v20 = *(void *)(v8 + 16);
      unint64_t v19 = *(void *)(v8 + 24);
      if (v20 >= v19 >> 1) {
        uint64_t v8 = (uint64_t)sub_350A4((char *)(v19 > 1), v20 + 1, 1, (char *)v8);
      }
      *(void *)(v8 + 16) = v20 + 1;
      uint64_t v21 = v8 + 16 * v20;
      *(void *)(v21 + 32) = v17;
      *(void *)(v21 + 40) = v18;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v22 = [self synchronousDatabase];
  id v23 = [v3 service];
  id v24 = [v23 internalName];

  uint64_t v25 = sub_F7220();
  uint64_t v27 = v26;

  id v28 = (void *)sub_72B1C(v8, v25, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_72C74;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_72A98;
  aBlock[3] = &unk_11ED30;
  unsigned int v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v22 fetchMessageRecordsFilteredUsingPredicate:v28 sortedUsingDescriptors:0 limit:1 completionHandler:v29];
  _Block_release(v29);
  swift_unknownObjectRelease();

  swift_beginAccess();
  id v30 = *(void **)(v7 + 16);
  id v31 = v30;
  swift_release();
  return v30;
}

uint64_t sub_72910()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_72948(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_F79B0()) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v5 = (id)sub_F78D0();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    id v5 = *(id *)(a1 + 32);
  }
  Swift::String v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = (id)IMDMessageRecordRefFromIMDMessageRecord();
  uint64_t v8 = (void *)IMDCreateIMMessageItemFromIMDMessageRecordRef();

  if (v8)
  {
    uint64_t v9 = (void **)(a2 + 16);
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (!v10) {

    }
    swift_beginAccess();
    uint64_t v11 = *v9;
    *uint64_t v9 = (void *)v10;
  }
}

uint64_t sub_72A98(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_6CA4(0, &qword_128F10);
  uint64_t v2 = sub_F7410();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_72B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_6CA4(0, &qword_128F18);
  sub_551C(&qword_128F20);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_F9C00;
  uint64_t v7 = sub_F7220();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v10 = sub_72C94();
  *(void *)(v6 + 64) = v10;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  uint64_t v11 = sub_551C(&qword_128550);
  *(void *)(v6 + 96) = v11;
  unint64_t v12 = sub_72CDC();
  *(void *)(v6 + 104) = v12;
  *(void *)(v6 + 72) = a1;
  uint64_t v13 = sub_F7220();
  *(void *)(v6 + 136) = &type metadata for String;
  *(void *)(v6 + 144) = v10;
  *(void *)(v6 + 112) = v13;
  *(void *)(v6 + 120) = v14;
  *(void *)(v6 + 176) = v11;
  *(void *)(v6 + 184) = v12;
  *(void *)(v6 + 152) = a1;
  uint64_t v15 = sub_F7220();
  *(void *)(v6 + 216) = &type metadata for String;
  *(void *)(v6 + 224) = v10;
  *(void *)(v6 + 192) = v15;
  *(void *)(v6 + 200) = v16;
  *(void *)(v6 + 256) = &type metadata for String;
  *(void *)(v6 + 264) = v10;
  *(void *)(v6 + 232) = a2;
  *(void *)(v6 + 240) = a3;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return sub_F7660();
}

void sub_72C74(unint64_t a1)
{
  sub_72948(a1, v1);
}

uint64_t sub_72C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_72C8C()
{
  return swift_release();
}

unint64_t sub_72C94()
{
  unint64_t result = qword_128F28;
  if (!qword_128F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128F28);
  }
  return result;
}

unint64_t sub_72CDC()
{
  unint64_t result = qword_128F30;
  if (!qword_128F30)
  {
    sub_8C18(&qword_128550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128F30);
  }
  return result;
}

id sub_72D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();

  return [ObjCClassFromMetadata createFallbackTextForMessage:a1 processedMessageItem:a2 leadingFallbackText:a3 trailingFallbackText:a4];
}

uint64_t sub_72D98(uint64_t a1, uint64_t a2)
{
  id v2 = [(id)swift_getObjCClassFromMetadata() getPlainTextForMessage:a1 processedMessageItem:a2];
  uint64_t v3 = sub_F7220();

  return v3;
}

id sub_72F34(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR___RCSMessageSender_session] = a1;
  *(void *)&v6[OBJC_IVAR___RCSMessageSender_rcsSession] = a1;
  *(void *)&v6[OBJC_IVAR___RCSMessageSender_message] = a2;
  *(void *)&v6[OBJC_IVAR___RCSMessageSender_chat] = a3;
  v6[OBJC_IVAR___RCSMessageSender_style] = a4;
  *(void *)&v6[OBJC_IVAR___RCSMessageSender_recipients] = a5;
  v6[OBJC_IVAR___RCSMessageSender_sendAsGroupMessage] = 0;
  *(void *)&v6[OBJC_IVAR___RCSMessageSender_context] = a6;
  *(void *)&v6[OBJC_IVAR___RCSMessageSender_outgoing] = _swiftEmptyArrayStorage;
  swift_unknownObjectUnownedInit();
  v10.receiver = v6;
  v10.super_class = (Class)RCSMessageSender;
  id v8 = a1;
  return objc_msgSendSuper2(&v10, "init");
}

void sub_73174(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [v2 rcsSession];
  id v7 = [v6 attachmentController];

  id v8 = [v3 message];
  id v9 = [v3 chat];
  id v10 = [v9 lastAddressedLocalHandle];

  id v11 = [v3 chat];
  id v12 = [v11 lastAddressedSIMID];

  v14[4] = a1;
  v14[5] = a2;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_73320;
  v14[3] = &unk_11EE38;
  uint64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  [v7 processAttachmentsForMessage:v8 generateTextParts:1 lastAddressedHandle:v10 lastAddressedSIMID:v12 completionBlock:v13];
  _Block_release(v13);
}

void sub_73320(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  sub_551C(&qword_128730);
  sub_F7410();
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_73464(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_551C(&qword_128730);
  id v9 = (id)sub_F7400();
  (*(void (**)(uint64_t, uint64_t, void, id, uint64_t))(a5 + 16))(a5, a1, a2 & 1, v9, a4);
}

uint64_t sub_734FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  unsigned char v7[8] = a4;
  v7[9] = a5;
  uint64_t v8 = sub_F70F0();
  v7[12] = v8;
  v7[13] = *(void *)(v8 - 8);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  sub_551C(&qword_129038);
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for RCSMessage(0);
  v7[18] = v9;
  v7[19] = *(void *)(v9 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  return _swift_task_switch(sub_7367C, 0, 0);
}

uint64_t sub_7367C()
{
  unsigned int v1 = [*(id *)(v0 + 64) sendAsGroupMessage];
  id v2 = *(void **)(v0 + 64);
  if (v1)
  {
    *(void *)(v0 + 176) = [*(id *)(v0 + 64) rcsSession];
    id v3 = [v2 chat];
    *(void *)(v0 + 184) = v3;
    id v4 = [v2 context];
    *(void *)(v0 + 192) = v4;
    id v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v5;
    *id v5 = v0;
    v5[1] = sub_739A4;
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 72);
    return sub_1F3BC(v6, v7, 0, (uint64_t)v3, (uint64_t)v4);
  }
  else
  {
    *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
    id v9 = [v2 recipients];
    sub_551C(&qword_128730);
    uint64_t v10 = sub_F7410();
    *(void *)(v0 + 232) = v10;

    uint64_t v11 = *(void *)(v10 + 16);
    *(void *)(v0 + 240) = v11;
    if (v11)
    {
      id v12 = *(void **)(v0 + 64);
      *(void *)(v0 + 248) = OBJC_IVAR___RCSMessageSender_compatibilityTransformer;
      *(void *)(v0 + 256) = 0;
      uint64_t v13 = *(void *)(*(void *)(v0 + 232) + 32);
      *(void *)(v0 + 264) = v13;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 272) = [v12 rcsSession];
      id v14 = [v12 context];
      *(void *)(v0 + 280) = v14;
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 288) = v15;
      void *v15 = v0;
      v15[1] = sub_7402C;
      uint64_t v16 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 72);
      return sub_1FFD8(v16, v17, 0, v13, (uint64_t)v14);
    }
    else
    {
      swift_bridgeObjectRelease();
      *(void *)(*(void *)(v0 + 64) + OBJC_IVAR___RCSMessageSender_outgoing) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(v0 + 80))(1);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
      return v18();
    }
  }
}

uint64_t sub_739A4()
{
  id v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_74B6C;
  }
  else
  {
    id v5 = (void *)v2[23];
    id v4 = (void *)v2[24];
    uint64_t v6 = (void *)v2[22];

    id v3 = sub_73ACC;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_73ACC()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 152) + 48))(v1, 1, *(void *)(v0 + 144)) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    id v5 = *(void **)(v0 + 72);
    sub_1E944(v1, &qword_129038);
    uint64_t v6 = Logger.rcs.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
    id v7 = v5;
    uint64_t v8 = sub_F70D0();
    os_log_type_t v9 = sub_F7690();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = *(void **)(v0 + 72);
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      id v12 = [v10 guid];
      if (!v12)
      {

        __break(1u);
        return;
      }
      uint64_t v13 = v12;
      uint64_t v27 = *(void *)(v0 + 104);
      uint64_t v28 = *(void *)(v0 + 96);
      uint64_t v29 = *(void *)(v0 + 120);
      id v14 = *(void **)(v0 + 72);
      uint64_t v15 = sub_F7220();
      unint64_t v17 = v16;

      *(void *)(v0 + 56) = sub_A3FC(v15, v17, &v30);
      sub_F77B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v8, v9, "Failed to create message from imMessageItem %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 120);
      uint64_t v23 = *(void *)(v0 + 96);
      uint64_t v24 = *(void *)(v0 + 104);
      uint64_t v25 = *(void **)(v0 + 72);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    (*(void (**)(uint64_t))(v0 + 80))(1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(void (**)(void))(v0 + 8);
    v26();
  }
  else
  {
    sub_5674(v1, *(void *)(v0 + 168));
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v18;
    uint64_t v19 = sub_551C(&qword_129040);
    *uint64_t v18 = v0;
    v18[1] = sub_73E48;
    uint64_t v20 = *(void *)(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 72);
    RCSCompatibleMessageTransformer.transform(rcsMessage:message:)(v20, v21, v19);
  }
}

uint64_t sub_73E48(uint64_t a1)
{
  *(void *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_73F48, 0, 0);
}

uint64_t sub_73F48()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_56D8(*(void *)(v0 + 168));
  *(void *)(v2 + OBJC_IVAR___RCSMessageSender_outgoing) = v1;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(v0 + 80))(1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_7402C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 272);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_74C24;
  }
  else
  {
    uint64_t v5 = *(void **)(v2 + 272);

    uint64_t v4 = sub_74180;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_74180()
{
  uint64_t v1 = *(void *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 152) + 48))(v1, 1, *(void *)(v0 + 144)) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1E944(v1, &qword_129038);
    uint64_t v2 = *(void *)(v0 + 256) + 1;
    if (v2 == *(void *)(v0 + 240))
    {
      swift_bridgeObjectRelease();
      *(void *)(*(void *)(v0 + 64) + OBJC_IVAR___RCSMessageSender_outgoing) = *(void *)(v0 + 16);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(v0 + 80))(1);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v3 = *(void (**)(void))(v0 + 8);
      v3();
    }
    else
    {
      *(void *)(v0 + 256) = v2;
      uint64_t v28 = *(void **)(v0 + 64);
      uint64_t v29 = *(void *)(*(void *)(v0 + 232) + 8 * v2 + 32);
      *(void *)(v0 + 264) = v29;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 272) = [v28 rcsSession];
      id v30 = [v28 context];
      *(void *)(v0 + 280) = v30;
      uint64_t v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 288) = v31;
      *uint64_t v31 = v0;
      v31[1] = sub_7402C;
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v33 = *(void *)(v0 + 72);
      sub_1FFD8(v32, v33, 0, v29, (uint64_t)v30);
    }
  }
  else
  {
    sub_5674(v1, *(void *)(v0 + 160));
    if (*(void *)(*(void *)(v0 + 16) + 16))
    {
      uint64_t v5 = *(void *)(v0 + 104);
      uint64_t v4 = *(void *)(v0 + 112);
      uint64_t v6 = *(void *)(v0 + 96);
      uint64_t v7 = *(void **)(v0 + 72);
      uint64_t v8 = sub_F6F30();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = swift_task_alloc();
      sub_F6F20();
      uint64_t v53 = sub_F6F00();
      unint64_t v12 = v11;
      id v54 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v54(v10, v8);
      swift_task_dealloc();
      uint64_t v13 = Logger.rcs.unsafeMutableAddressor();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v13, v6);
      id v14 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_F70D0();
      os_log_type_t v16 = sub_F76B0();
      if (os_log_type_enabled(v15, v16))
      {
        os_log_type_t v51 = v16;
        uint64_t v52 = v8;
        unint64_t v17 = *(void **)(v0 + 72);
        uint64_t v18 = swift_slowAlloc();
        *(void *)(v0 + 24) = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136315650;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 32) = sub_A3FC(v53, v12, (uint64_t *)(v0 + 24));
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 12) = 2080;
        id v19 = [v17 guid];
        if (!v19)
        {
          unsigned int v47 = *(void **)(v0 + 72);
          swift_bridgeObjectRelease_n();

          __break(1u);
          return;
        }
        uint64_t v20 = v19;
        uint64_t v49 = *(void *)(v0 + 96);
        uint64_t v50 = *(void *)(v0 + 112);
        uint64_t v48 = *(void *)(v0 + 104);
        uint64_t v21 = *(void **)(v0 + 72);
        uint64_t v22 = sub_F7220();
        unint64_t v24 = v23;

        *(void *)(v0 + 40) = sub_A3FC(v22, v24, (uint64_t *)(v0 + 24));
        sub_F77B0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v18 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_F71C0();
        unint64_t v27 = v26;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 48) = sub_A3FC(v25, v27, (uint64_t *)(v0 + 24));
        sub_F77B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v15, v51, "Assigning new ID %s for message %s to be sent to %s", (uint8_t *)v18, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v49);
        uint64_t v8 = v52;
      }
      else
      {
        uint64_t v35 = *(void *)(v0 + 104);
        uint64_t v34 = *(void *)(v0 + 112);
        uint64_t v36 = *(void *)(v0 + 96);
        uint64_t v37 = *(void **)(v0 + 72);
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
      }
      uint64_t v38 = *(void *)(v0 + 160);
      uint64_t v39 = swift_task_alloc();
      sub_F6F20();
      uint64_t v40 = sub_F6F00();
      uint64_t v42 = v41;
      v54(v39, v8);
      swift_bridgeObjectRelease();
      *(void *)(v38 + 128) = v40;
      *(void *)(v38 + 136) = v42;
      swift_task_dealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    int v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v43;
    uint64_t v44 = sub_551C(&qword_129040);
    *int v43 = v0;
    v43[1] = sub_74870;
    uint64_t v45 = *(void *)(v0 + 160);
    uint64_t v46 = *(void *)(v0 + 72);
    RCSCompatibleMessageTransformer.transform(rcsMessage:message:)(v45, v46, v44);
  }
}

uint64_t sub_74870(uint64_t a1)
{
  *(void *)(*(void *)v1 + 312) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_74970, 0, 0);
}

uint64_t sub_74970()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_74E1C(*(void *)(v0 + 312));
  sub_56D8(v1);
  uint64_t v2 = *(void *)(v0 + 256) + 1;
  if (v2 == *(void *)(v0 + 240))
  {
    swift_bridgeObjectRelease();
    *(void *)(*(void *)(v0 + 64) + OBJC_IVAR___RCSMessageSender_outgoing) = *(void *)(v0 + 16);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v0 + 80))(1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    *(void *)(v0 + 256) = v2;
    uint64_t v5 = *(void **)(v0 + 64);
    uint64_t v6 = *(void *)(*(void *)(v0 + 232) + 8 * v2 + 32);
    *(void *)(v0 + 264) = v6;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 272) = [v5 rcsSession];
    id v7 = [v5 context];
    *(void *)(v0 + 280) = v7;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_7402C;
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 72);
    return sub_1FFD8(v9, v10, 0, v6, (uint64_t)v7);
  }
}

uint64_t sub_74B6C()
{
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = *(void **)(v0 + 176);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_74C24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_74CC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_350A4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    void *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_74E1C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_356A4(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_74FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_F7520();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_F7510();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1E944(a1, (uint64_t *)&unk_128000);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_F7470();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_752D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  uint64_t v7 = sub_F70F0();
  v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  v6[9] = *(void *)(type metadata accessor for RCSMessage(0) - 8);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_753F0, 0, 0);
}

uint64_t sub_753F0()
{
  uint64_t v1 = *(char **)(v0 + 24);
  uint64_t v2 = *(void *)&v1[OBJC_IVAR___RCSMessageSender_outgoing];
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 96) = v3;
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 72);
    *(void *)(v0 + 104) = sub_F74E0();
    int v5 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 176) = v5;
    uint64_t v6 = *(void *)(v4 + 72);
    *(void *)(v0 + 120) = 0;
    *(void *)(v0 + 128) = 0;
    *(void *)(v0 + 112) = v6;
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = v2 + ((v5 + 32) & ~(unint64_t)v5);
    swift_bridgeObjectRetain();
    sub_5F63C(v8, v7);
    *(void *)(v0 + 136) = [v1 rcsSession];
    *(void *)(v0 + 144) = [v1 message];
    *(void *)(v0 + 152) = [v1 chat];
    *(void *)(v0 + 160) = sub_F74D0();
    uint64_t v10 = sub_F7470();
    return _swift_task_switch(sub_755A8, v10, v9);
  }
  else
  {
    (*(void (**)(uint64_t))(v0 + 32))(1);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_755A8()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[10];
  swift_release();
  RCSServiceSession.sendMessageDirect(sourceMessage:rcsMessage:chat:)(v2, v4, v1);
  v0[21] = v3;
  int v5 = (void *)v0[18];
  uint64_t v6 = (void *)v0[19];
  uint64_t v7 = (void *)v0[17];
  if (v3)
  {
    swift_bridgeObjectRelease();

    uint64_t v8 = sub_75804;
  }
  else
  {

    uint64_t v8 = sub_7567C;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_7567C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 128) + 1;
  sub_56D8(*(void *)(v0 + 80));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v0 + 32))(1);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 128) + 1;
    *(void *)(v0 + 120) = *(void *)(v0 + 168);
    *(void *)(v0 + 128) = v5;
    uint64_t v6 = *(void **)(v0 + 24);
    sub_5F63C(*(void *)(v0 + 88)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(void *)(v0 + 112) * v5, *(void *)(v0 + 80));
    *(void *)(v0 + 136) = [v6 rcsSession];
    *(void *)(v0 + 144) = [v6 message];
    *(void *)(v0 + 152) = [v6 chat];
    *(void *)(v0 + 160) = sub_F74D0();
    uint64_t v8 = sub_F7470();
    return _swift_task_switch(sub_755A8, v8, v7);
  }
}

uint64_t sub_75804()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_56D8(v0[10]);
  uint64_t v4 = Logger.rcs.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7690();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    sub_F77B0();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v5, v6, "Error while sending %@", v7, 0xCu);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v10 = (void (*)(void))v0[4];
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  v10(0);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void RCSMessageSender.init()()
{
}

unint64_t type metadata accessor for RCSMessageSender()
{
  unint64_t result = qword_129010;
  if (!qword_129010)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_129010);
  }
  return result;
}

uint64_t sub_75CC8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_75D00(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_75D18()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_75D60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_46BC;
  return sub_752D4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_75E28()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_75E78(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_46BC;
  return sub_734FC(a1, v4, v5, v6, v7, v9, v8);
}

void sub_75F4C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_73464(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_75F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_75F64()
{
  return swift_release();
}

uint64_t sub_75F78()
{
  uint64_t v0 = sub_F70F0();
  sub_D994(v0, qword_129050);
  uint64_t v1 = sub_8B44(v0, (uint64_t)qword_129050);
  if (qword_129088 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_8B44(v0, (uint64_t)static Logger.groups);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t RCSSpamReportOperation.subscriptionContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t RCSSpamReportOperation.id.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_760AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for RCSGroupOperation();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 28));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t sub_7612C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 28));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_76140(uint64_t a1)
{
  sub_2C4C0(a1, (uint64_t)v10, &qword_127FF8);
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = sub_6BA8(v10, v11);
    uint64_t v5 = *(void *)(v3 - 8);
    __chkstk_darwin(v4);
    uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = (void *)sub_F7B50();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    sub_6BEC((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 0;
  }
  swift_beginAccess();
  objc_setAssociatedObject(v1, &unk_129068, v8, (char *)&dword_0 + 1);
  swift_endAccess();
  swift_unknownObjectRelease();
  return sub_1E944(a1, &qword_127FF8);
}

uint64_t variable initialization expression of RCSSpamReportingController.delegate()
{
  return 0;
}

uint64_t RCSSpamReportingController.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t RCSSpamReportingController.delegate.setter()
{
  return swift_unknownObjectRelease();
}

void (*RCSGroupController.delegate.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_763DC;
}

void sub_763DC(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_7645C(uint64_t a1, void *a2)
{
  v7._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_11EF70;
  v7._object = a2;
  Swift::Int v4 = sub_F7A10(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_764B0(char a1)
{
  if (a1) {
    return 0x65766F6D6572;
  }
  else {
    return 6579297;
  }
}

uint64_t sub_764DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_76550(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_765BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_7662C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_7669C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_7645C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_766D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_764B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_76708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RCSGroupController.OperationType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for RCSGroupController.OperationID();
  return sub_F6F20();
}

uint64_t sub_76794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_F6F30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_76804()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      return sub_F6F00();
    case 2:
      unint64_t v3 = 0x6F7247657661656CLL;
      goto LABEL_13;
    case 3:
      uint64_t v5 = *(void *)(v0 + 16);
      sub_F78A0(30);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000013;
      v9._uint64_t countAndFlagsBits = v1;
      v9._object = v2;
      sub_F72E0(v9);
      v10._uint64_t countAndFlagsBits = 8236;
      v10._object = (void *)0xE200000000000000;
      sub_F72E0(v10);
      if (v5) {
        v6._uint64_t countAndFlagsBits = 0x65766F6D6572;
      }
      else {
        v6._uint64_t countAndFlagsBits = 6579297;
      }
      if (v5) {
        Swift::String v7 = (void *)0xE600000000000000;
      }
      else {
        Swift::String v7 = (void *)0xE300000000000000;
      }
      v6._object = v7;
      sub_F72E0(v6);
      swift_bridgeObjectRelease();
      v11._uint64_t countAndFlagsBits = 8236;
      v11._object = (void *)0xE200000000000000;
      sub_F72E0(v11);
      sub_551C(&qword_128550);
      sub_64858();
      v12._uint64_t countAndFlagsBits = sub_F71D0();
      sub_F72E0(v12);
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 4:
      sub_F78A0(23);
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000014;
      goto LABEL_13;
    default:
      unint64_t v3 = 0x7247657461657263;
LABEL_13:
      unint64_t v8 = v3;
      v13._uint64_t countAndFlagsBits = v1;
      v13._object = v2;
      sub_F72E0(v13);
LABEL_14:
      v14._uint64_t countAndFlagsBits = 41;
      v14._object = (void *)0xE100000000000000;
      sub_F72E0(v14);
      return v8;
  }
}

uint64_t sub_76A14()
{
  if (*((unsigned __int8 *)v0 + 32) > 3u) {
    return 0;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_76A68(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RCSOperationController.OperationID.description.getter(a1, WitnessTable);
}

uint64_t RCSGroupController.__allocating_init(delegate:operationConfiguration:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = swift_allocObject();
  RCSGroupController.init(delegate:operationConfiguration:)(a1, a2);
  return v4;
}

uint64_t *RCSGroupController.init(delegate:operationConfiguration:)(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v3;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  char v9 = *((unsigned char *)a2 + 32);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = *(void *)(v6 + 80);
  *(void *)(v10 + 24) = *(void *)(v6 + 88);
  long long v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v10 + 48) = v11;
  *(unsigned char *)(v10 + 64) = *((unsigned char *)a2 + 32);
  *(void *)(v10 + 72) = a1;
  v13[0] = v7;
  v13[1] = v8;
  v13[2] = &unk_1290E8;
  v13[3] = v10;
  char v14 = v9;
  type metadata accessor for RCSOperationController();
  swift_allocObject();
  swift_retain();
  v3[3] = RCSOperationController.init(configuration:)((uint64_t)v13);
  swift_release();
  return v3;
}

uint64_t sub_76C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[26] = AssociatedTypeWitness;
  uint64_t v9 = sub_F7770();
  v7[27] = v9;
  v7[28] = *(void *)(v9 - 8);
  v7[29] = swift_task_alloc();
  v7[30] = *(void *)(AssociatedTypeWitness - 8);
  v7[31] = swift_task_alloc();
  return _swift_task_switch(sub_76D84, 0, 0);
}

uint64_t sub_76D84()
{
  uint64_t v1 = *(int **)(*(void *)(v0 + 176) + 16);
  if (v1)
  {
    int64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_77104;
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v5 = *(void *)(v0 + 152);
    return v23(v5, v3, v4);
  }
  sub_2C4C0(*(void *)(v0 + 168), v0 + 16, (uint64_t *)&unk_128CF0);
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    sub_1E944(v0 + 16, (uint64_t *)&unk_128CF0);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  sub_6CA4(0, &qword_129110);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void **)(v0 + 144);
  *(void *)(v0 + 264) = v7;
  swift_beginAccess();
  id v8 = objc_getAssociatedObject(v7, &unk_129068);
  swift_endAccess();
  if (v8)
  {
    sub_F77F0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 88) = 0u;
    *(_OWORD *)(v0 + 104) = 0u;
  }
  uint64_t v9 = *(void *)(v0 + 240);
  sub_1E74C(v0 + 88, v0 + 56, &qword_127FF8);
  sub_551C(&qword_127FF8);
  char v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if ((v10 & 1) == 0)
  {
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v19 = *(void *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 216);
    v11(v19, 1, 1, *(void *)(v0 + 208));

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    goto LABEL_16;
  }
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v12 = *(void *)(v0 + 248);
  uint64_t v14 = *(void *)(v0 + 232);
  uint64_t v16 = *(void *)(v0 + 200);
  uint64_t v15 = *(void *)(v0 + 208);
  v11(v14, 0, 1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v14, v15);
  *(void *)(v0 + 272) = *(void *)(v16 + 88);
  *(void *)(v0 + 280) = (v16 + 88) & 0xFFFFFFFFFFFFLL | 0x202C000000000000;
  sub_F74E0();
  *(void *)(v0 + 288) = sub_F74D0();
  uint64_t v18 = sub_F7470();
  return _swift_task_switch(sub_774BC, v18, v17);
}

uint64_t sub_77104()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_77200, 0, 0);
}

uint64_t sub_77200()
{
  sub_2C4C0(*(void *)(v0 + 168), v0 + 16, (uint64_t *)&unk_128CF0);
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    sub_1E944(v0 + 16, (uint64_t *)&unk_128CF0);
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  sub_6CA4(0, &qword_129110);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v1 = *(void **)(v0 + 144);
  *(void *)(v0 + 264) = v1;
  swift_beginAccess();
  id v2 = objc_getAssociatedObject(v1, &unk_129068);
  swift_endAccess();
  if (v2)
  {
    sub_F77F0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 88) = 0u;
    *(_OWORD *)(v0 + 104) = 0u;
  }
  uint64_t v3 = *(void *)(v0 + 240);
  sub_1E74C(v0 + 88, v0 + 56, &qword_127FF8);
  sub_551C(&qword_127FF8);
  char v4 = swift_dynamicCast();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  if ((v4 & 1) == 0)
  {
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v15 = *(void *)(v0 + 216);
    v5(v13, 1, 1, *(void *)(v0 + 208));

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v9 = *(void *)(v0 + 208);
  v5(v8, 0, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v8, v9);
  *(void *)(v0 + 272) = *(void *)(v10 + 88);
  *(void *)(v0 + 280) = (v10 + 88) & 0xFFFFFFFFFFFFLL | 0x202C000000000000;
  sub_F74E0();
  *(void *)(v0 + 288) = sub_F74D0();
  uint64_t v12 = sub_F7470();
  return _swift_task_switch(sub_774BC, v12, v11);
}

uint64_t sub_774BC()
{
  uint64_t v1 = v0[33];
  id v2 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[34];
  uint64_t v3 = v0[31];
  uint64_t v5 = v0[24];
  uint64_t v4 = v0[25];
  swift_release();
  v2(v3, v1, v5, v4);
  return _swift_task_switch(sub_77560, 0, 0);
}

uint64_t sub_77560()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_775FC()
{
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_77644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v10 = (uint64_t)(v3 + 4);
  uint64_t v11 = v3[9];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_8C5CC;
  return sub_76C3C(a1, a2, a3, v10, v11, v8, v9);
}

unint64_t RCSGroupController.GroupOperationError.errorDescription.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (void *)((char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v2 + 16))(v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0xD000000000000018;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v7 = *v4;
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_F78A0(52);
      v16._uint64_t countAndFlagsBits = 0xD000000000000032;
      v16._object = (void *)0x8000000000103EB0;
      sub_F72E0(v16);
      v13[1] = v7;
      sub_551C(&qword_128550);
      sub_64858();
      uint64_t v8 = sub_F71D0();
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      v17._uint64_t countAndFlagsBits = v8;
      v17._object = v10;
      sub_F72E0(v17);
      goto LABEL_5;
    case 2:
      uint64_t v11 = *v4;
      uint64_t v12 = (void *)v4[1];
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_F78A0(18);
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD000000000000010;
      unint64_t v15 = 0x8000000000103E90;
      v18._uint64_t countAndFlagsBits = v11;
      v18._object = v12;
      sub_F72E0(v18);
LABEL_5:
      swift_bridgeObjectRelease();
      unint64_t result = v14;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0xD000000000000043;
      break;
    case 5:
      unint64_t result = 0xD000000000000027;
      break;
    default:
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, a1);
      unint64_t result = 0xD000000000000047;
      break;
  }
  return result;
}

uint64_t RCSSpamReportingController.deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t RCSSpamReportingController.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_779D8(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *v3;
  unint64_t v81 = a1;
  uint64_t v82 = v6;
  uint64_t v7 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v80 = &v66[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_F7770();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v66[-v12];
  uint64_t v14 = *(void *)(a3 - 8);
  uint64_t v15 = __chkstk_darwin(v11);
  uint64_t v72 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v73 = &v66[-v18];
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)&v66[-v19];
  sub_8C18(&qword_127D08);
  uint64_t v21 = sub_F7C60();
  uint64_t v77 = *(void *)(v21 - 8);
  uint64_t v78 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v74 = v23;
  uint64_t v75 = &v66[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v76 = (uint64_t *)&v66[-v24];
  uint64_t v26 = a2[3];
  uint64_t v25 = a2[4];
  sub_6BA8(a2, v26);
  uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
  unint64_t v28 = v27;
  (*(void (**)(unsigned char *, unint64_t, uint64_t))(v10 + 16))(v13, v81, v9);
  int v29 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3);
  unint64_t v81 = v28;
  if (v29 == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_9:
    uint64_t v45 = a2[3];
    uint64_t v46 = a2[4];
    sub_6BA8(a2, v45);
    uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
    if (v47)
    {
      uint64_t v48 = v47;
    }
    else
    {
      type metadata accessor for RCSGroupController.GroupOperationError();
      swift_getWitnessTable();
      uint64_t v48 = swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    if (qword_129048 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_F70F0();
    sub_8B44(v49, (uint64_t)qword_129050);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v50 = sub_F70D0();
    os_log_type_t v51 = sub_F7690();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v53 = (void *)swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_A3FC(v83, v28, v85);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v52 + 12) = 2112;
      swift_errorRetain();
      uint64_t v54 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v84 = v54;
      sub_F77B0();
      *uint64_t v53 = v54;
      unint64_t v28 = v81;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v50, v51, "Group operation failed with ID %s error %@", (uint8_t *)v52, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v55 = v76;
    *uint64_t v76 = v48;
    goto LABEL_20;
  }
  id v30 = *(void (**)(uint64_t *, unsigned char *, uint64_t))(v14 + 32);
  v30(v20, v13, a3);
  uint64_t v31 = a2[3];
  uint64_t v32 = a2[4];
  sub_6BA8(a2, v31);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32) & 1) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v20, a3);
    unint64_t v28 = v81;
    goto LABEL_9;
  }
  id v71 = v30;
  if (qword_129048 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_F70F0();
  sub_8B44(v33, (uint64_t)qword_129050);
  uint64_t v34 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16);
  uint64_t v35 = v73;
  v34(v73, v20, a3);
  unint64_t v36 = v81;
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_F70D0();
  os_log_type_t v38 = sub_F7680();
  int v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v40 = swift_slowAlloc();
    os_log_t v68 = v37;
    uint64_t v41 = v35;
    uint64_t v42 = v40;
    uint64_t v69 = swift_slowAlloc();
    v85[0] = v69;
    *(_DWORD *)uint64_t v42 = 136315394;
    int v67 = v39;
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_A3FC(v83, v36, v85);
    uint64_t v70 = v20;
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2080;
    v34(v72, v41, a3);
    uint64_t v43 = sub_F7270();
    uint64_t v84 = sub_A3FC(v43, v44, v85);
    uint64_t v20 = v70;
    sub_F77B0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v41, a3);
    uint64_t v37 = v68;
    _os_log_impl(&dword_0, v68, (os_log_type_t)v67, "Group operation completed with ID %s output %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v35, a3);
  }

  uint64_t v55 = v76;
  v71(v76, v20, a3);
  unint64_t v28 = v81;
LABEL_20:
  uint64_t v56 = v78;
  swift_storeEnumTagMultiPayload();
  uint64_t v57 = (uint64_t)v80;
  sub_F74F0();
  uint64_t v58 = sub_F7520();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
  uint64_t v59 = *(void *)(v79 + 24);
  uint64_t v60 = v77;
  uint64_t v61 = v75;
  (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v77 + 16))(v75, v55, v56);
  unint64_t v62 = (*(unsigned __int8 *)(v60 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v63 = (char *)swift_allocObject();
  *((void *)v63 + 2) = 0;
  *((void *)v63 + 3) = 0;
  uint64_t v64 = v82;
  *((void *)v63 + 4) = *(void *)(v82 + 80);
  *((void *)v63 + 5) = a3;
  *((void *)v63 + 6) = *(void *)(v64 + 88);
  *((void *)v63 + 7) = v59;
  *((void *)v63 + 8) = v83;
  *((void *)v63 + 9) = v28;
  (*(void (**)(char *, unsigned char *, uint64_t))(v60 + 32))(&v63[v62], v61, v56);
  swift_retain();
  sub_9EAC(v57, (uint64_t)&unk_129528, (uint64_t)v63);
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v60 + 8))(v55, v56);
}

uint64_t sub_783D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_8C5D4;
  return RCSOperationController.operation<A>(id:completedWithResult:)(a5, a6, a7, v14);
}

uint64_t RCSGroupController.groupOperationFailed(with:operationID:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_129048 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_F70F0();
  sub_8B44(v11, (uint64_t)qword_129050);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v12 = sub_F70D0();
  os_log_type_t v13 = sub_F7690();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_A3FC(a2, a3, &v27);
    os_log_t v23 = v12;
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2112;
    swift_errorRetain();
    uint64_t v15 = a2;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v26 = v16;
    sub_F77B0();
    *uint64_t v24 = v16;
    a2 = v15;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v17 = v23;
    _os_log_impl(&dword_0, v23, v13, "Group operation failed with ID %s error %@", (uint8_t *)v14, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_F74F0();
  uint64_t v18 = sub_F7520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 0, 1, v18);
  uint64_t v19 = *(void *)(v4 + 24);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = 0;
  v20[3] = 0;
  _OWORD v20[4] = v19;
  v20[5] = a2;
  v20[6] = a3;
  unsigned char v20[7] = a1;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_retain();
  sub_9EAC((uint64_t)v10, (uint64_t)&unk_1290F8, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_78810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a7;
  swift_errorRetain();
  os_log_type_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_12ACA8 + dword_12ACA8);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_788EC;
  return v13(a5, a6, a7, 1);
}

uint64_t sub_788EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t RCSGroupController.GroupCreateError.errorDescription.getter(uint64_t a1)
{
  uint64_t v3 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32);
  v3(&v6, v1, a1);
  v3(v7, v1, a1);
  if (v8)
  {
    if (v8 != 1) {
      return 0xD000000000000022;
    }
    uint64_t v4 = v7[0];
  }
  else
  {
    uint64_t v4 = v7[2];
  }
  swift_bridgeObjectRetain();
  return v4;
}

unint64_t sub_78AD0(uint64_t a1)
{
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32))(v4, v1, a1);
  return RCSGroupController.GroupCreateError.errorDescription.getter(a1);
}

void *sub_78B38(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v6 = *(AssociatedTypeWitness - 1);
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v42 - v10;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    uint64_t v48 = v9;
    uint64_t v49 = v11;
    uint64_t v50 = v6;
    os_log_type_t v51 = AssociatedTypeWitness;
    id v14 = [objc_allocWithZone((Class)CTLazuliGroupChatParticipantList) init];
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(a1, v4, v3);
    uint64_t v17 = v16;
    uint64_t AssociatedTypeWitness = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v4, v3);
    __chkstk_darwin(AssociatedTypeWitness);
    v42[-4] = v4;
    v42[-3] = v3;
    v42[-2] = v15;
    v42[-1] = v17;
    uint64_t v18 = v52;
    sub_7944C((void (*)(uint64_t *__return_ptr, void *))sub_8AFF8, (uint64_t)&v42[-6], (uint64_t)AssociatedTypeWitness);
    os_log_t v52 = v18;
    if (v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v46 = v4;
      uint64_t v47 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_6CA4(0, (unint64_t *)&qword_128668);
      uint64_t v19 = (void *)sub_F7400();
      swift_bridgeObjectRelease();
      [v14 setMemberList:v19];

      id v20 = [v14 memberList];
      unint64_t v21 = sub_F7410();

      uint64_t v22 = v14;
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_F79B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
      }
      uint64_t v24 = a1;
      swift_bridgeObjectRelease();
      if (v23)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 80))(a1, v46, v3);
        if (v25)
        {
          id v26 = [objc_allocWithZone((Class)CTLazuliGroupChatSubject) init];
          uint64_t v27 = (void *)sub_F71F0();
          swift_bridgeObjectRelease();
          [v26 setDisplayString:v27];
        }
        else
        {
          id v26 = 0;
        }
        uint64_t AssociatedTypeWitness = [objc_allocWithZone((Class)CTLazuliGroupChatInformation) init];
        [AssociatedTypeWitness setParticipants:v22];
        [AssociatedTypeWitness setSubject:v26];

        swift_unknownObjectRelease();
      }
      else
      {
        if (qword_129088 != -1) {
          swift_once();
        }
        uint64_t v28 = sub_F70F0();
        sub_8B44(v28, (uint64_t)static Logger.groups);
        id v30 = v49;
        uint64_t v29 = v50;
        uint64_t v31 = *(void (**)(char *, uint64_t, void *))(v50 + 16);
        uint64_t v32 = v51;
        v31(v49, v24, v51);
        uint64_t v33 = sub_F70D0();
        os_log_type_t v34 = sub_F76A0();
        os_log_t v52 = v33;
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v45 = v22;
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          uint64_t v54 = v44;
          *(_DWORD *)uint64_t v35 = 136315138;
          v42[1] = v35 + 4;
          uint64_t v43 = v35;
          v31(v48, (uint64_t)v30, v32);
          uint64_t v36 = sub_F7270();
          uint64_t v53 = sub_A3FC(v36, v37, &v54);
          sub_F77B0();
          uint64_t v22 = v45;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, void *))(v29 + 8))(v30, v32);
          os_log_t v38 = v52;
          _os_log_impl(&dword_0, v52, v34, "Refusing to create group chat information for empty group %s", v43, 0xCu);
          uint64_t AssociatedTypeWitness = (void *)v44;
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v40 = *(void (**)(char *, void *))(v29 + 8);
          uint64_t AssociatedTypeWitness = (void *)(v29 + 8);
          v40(v30, v32);
        }
        type metadata accessor for RCSGroupController.GroupCreateError();
        swift_getWitnessTable();
        swift_allocError();
        *(_OWORD *)uint64_t v41 = 0u;
        *(_OWORD *)(v41 + 16) = 0u;
        *(unsigned char *)(v41 + 32) = 2;
        swift_willThrow();
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return AssociatedTypeWitness;
}

void sub_791E8(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v17 = a4;
  uint64_t v7 = *a1;
  uint64_t v6 = (void *)a1[1];
  uint64_t v8 = (void *)sub_F71F0();
  char IsPhoneNumber = IMStringIsPhoneNumber();

  swift_bridgeObjectRetain();
  if (IsPhoneNumber)
  {
    unint64_t v10 = sub_1C410((uint64_t)_swiftEmptyArrayStorage);
    sub_E8DA4((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v15[0] = 7103860;
    v15[1] = 0xE300000000000000;
    void v15[2] = v7;
    v15[3] = v6;
    v15[5] = 0;
    v15[6] = 0;
    v15[4] = v10;
    char v16 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_EBD70(v14, v15, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    RCSHandle.rawValue.getter();
    sub_6D20((uint64_t)v14);
    id v11 = [objc_allocWithZone((Class)CTLazuliGroupChatParticipant) init];
    uint64_t v12 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v11 setMember:v12];

    *uint64_t v17 = v11;
  }
  else
  {
    sub_F78A0(62);
    v18._object = (void *)0x8000000000104050;
    v18._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
    sub_F72E0(v18);
    v19._uint64_t countAndFlagsBits = v7;
    v19._object = v6;
    sub_F72E0(v19);
    type metadata accessor for RCSGroupController.GroupCreateError();
    swift_getWitnessTable();
    swift_allocError();
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v6;
    *(void *)(v13 + 16) = 0;
    *(void *)(v13 + 24) = 0xE000000000000000;
    *(unsigned char *)(v13 + 32) = 0;
    swift_willThrow();
  }
}

void *sub_7944C(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  unint64_t result = _swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v9 = *v8;
      v11[0] = *(v8 - 1);
      v11[1] = v9;
      swift_bridgeObjectRetain();
      a1(&v10, v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (v10)
      {
        sub_F73F0();
        if (*(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v12 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_F7440();
        sub_F7450();
        sub_F7430();
      }
      v8 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return (void *)v12;
  }
  return result;
}

uint64_t sub_7958C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = *v3;
  v4[9] = *(void *)(*v3 + 88);
  v4[10] = *(void *)(v5 + 80);
  v4[11] = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_F7770();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_796B4, 0, 0);
}

uint64_t sub_796B4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[11];
  (*(void (**)(uint64_t, void, void))(v0[13] + 16))(v1, v0[7], v0[12]);
  uint64_t v3 = *(void *)(v2 - 8);
  v0[16] = v3;
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[17] = v4;
  v0[18] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v1, 1, v2) == 1)
  {
    uint64_t v5 = v0[15];
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[13];
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v0[19] = v8;
    v0[20] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v8(v5, v6);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[21] = Strong;
    if (Strong)
    {
      uint64_t v10 = v0[9];
      v0[22] = *(void *)(v10 + 32);
      v0[23] = (v10 + 32) & 0xFFFFFFFFFFFFLL | 0xBF16000000000000;
      sub_F74E0();
      v0[24] = sub_F74D0();
      uint64_t v12 = sub_F7470();
      return _swift_task_switch(sub_79964, v12, v11);
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(v3 + 56))(v0[14], 1, 1, v0[11]);
    ((void (*)(void, void))v0[19])(v0[14], v0[12]);
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    (*(void (**)(void, void, void))(v3 + 32))(v0[5], v0[15], v0[11]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
  }
  return v13();
}

uint64_t sub_79964()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[22];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[6];
  swift_release();
  v1(v4, v2, v3);
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_79A10, 0, 0);
}

uint64_t sub_79A10()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 136))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, void))(v0 + 152))(v1, *(void *)(v0 + 96));
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 40), v1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_79B68(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = *v2;
  v3[18] = *(void *)(*v2 + 88);
  v3[19] = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_F7770();
  v3[20] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[21] = v6;
  v3[22] = *(void *)(v6 + 64);
  v3[23] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[24] = AssociatedTypeWitness;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  v3[25] = v8;
  v3[26] = *(void *)(v8 + 64);
  v3[27] = swift_task_alloc();
  return _swift_task_switch(sub_79D10, 0, 0);
}

uint64_t sub_79D10()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[28] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[18];
    v0[29] = *(void *)(v2 + 48);
    v0[30] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x4D12000000000000;
    sub_F74E0();
    v0[31] = sub_F74D0();
    uint64_t v4 = sub_F7470();
    return _swift_task_switch(sub_79E8C, v4, v3);
  }
  else
  {
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_79E8C()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[29];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[15];
  swift_release();
  v0[32] = v1(v4, v2, v3);
  v0[33] = v5;
  return _swift_task_switch(sub_79F24, 0, 0);
}

uint64_t sub_79F24()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v25 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v20 = *(void *)(v0 + 192);
  uint64_t v21 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v17 = v6;
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v22 = *(void *)(v0 + 176);
  uint64_t v24 = *(void *)(v0 + 136);
  uint64_t v18 = v4;
  uint64_t v19 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 120);
  *(void *)(v0 + 56) = *(void *)(v0 + 256);
  *(void *)(v0 + 64) = v1;
  uint64_t v9 = type metadata accessor for RCSGroupController.OperationID();
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 0;
  *(void *)(v0 + 40) = v9;
  *(void *)(v0 + 48) = swift_getWitnessTable();
  uint64_t v10 = sub_28728((uint64_t *)(v0 + 16));
  sub_76708(v0 + 56, (uint64_t)v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v16, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v19, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v12 = (v21 + *(unsigned __int8 *)(v5 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *(void *)(v0 + 272) = v13;
  *((void *)v13 + 2) = v7;
  *((void *)v13 + 3) = v8;
  *((void *)v13 + 4) = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v13[v11], v2, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v13[v12], v18, v17);
  *(void *)&v13[(v22 + v12 + 7) & 0xFFFFFFFFFFFFFFF8] = v25;
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_129540 + dword_129540);
  swift_retain();
  swift_unknownObjectRetain();
  id v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v14;
  *id v14 = v0;
  v14[1] = sub_7A1A0;
  return v23(v0 + 16, (uint64_t)&unk_129538, (uint64_t)v13);
}

uint64_t sub_7A1A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 288) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = sub_7A35C;
  }
  else
  {
    *(void *)(v4 + 296) = a1;
    sub_6BEC(v4 + 16);
    uint64_t v5 = sub_7A2E0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_7A2E0()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 296);
  return v1(v2);
}

uint64_t sub_7A35C()
{
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7A3E0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a4;
  v6[9] = a6;
  v6[6] = a2;
  v6[7] = a3;
  v6[5] = a1;
  uint64_t v9 = *a3;
  v6[10] = *(void *)(*a3 + 88);
  v6[11] = *(void *)(v9 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[12] = AssociatedTypeWitness;
  uint64_t v11 = type metadata accessor for RCSGroupOperation();
  v6[13] = v11;
  v6[14] = *(void *)(v11 - 8);
  v6[15] = swift_task_alloc();
  v6[16] = *(void *)(AssociatedTypeWitness - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  uint64_t v12 = swift_task_alloc();
  v6[19] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v6[20] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_7A5C4;
  return sub_7958C(v12, a4, a5);
}

uint64_t sub_7A5C4()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_7AE04;
  }
  else {
    uint64_t v2 = sub_7A6D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_7A6D8()
{
  *(void *)(v0 + 176) = sub_F74E0();
  *(void *)(v0 + 184) = sub_F74D0();
  uint64_t v2 = sub_F7470();
  return _swift_task_switch(sub_7A770, v2, v1);
}

uint64_t sub_7A770()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[8];
  swift_release();
  v0[24] = sub_78B38(v2);
  v0[25] = v1;
  if (v1) {
    uint64_t v3 = sub_7AE90;
  }
  else {
    uint64_t v3 = sub_7A808;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_7A808()
{
  uint64_t v41 = v0;
  if (qword_129048 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[12];
  uint64_t v6 = sub_F70F0();
  sub_8B44(v6, (uint64_t)qword_129050);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v2, v3, v5);
  id v8 = v1;
  swift_bridgeObjectRetain_n();
  id v9 = v8;
  uint64_t v10 = sub_F70D0();
  os_log_type_t v11 = sub_F7670();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = (void *)v0[24];
  uint64_t v14 = v0[18];
  if (v12)
  {
    uint64_t v36 = v0[16];
    uint64_t v34 = v0[17];
    uint64_t v35 = v0[12];
    unint64_t v38 = v0[6];
    uint64_t v39 = v0[5];
    uint64_t v15 = swift_slowAlloc();
    unint64_t v37 = (void *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412802;
    v0[2] = v13;
    id v16 = v13;
    sub_F77B0();
    void *v37 = v13;

    *(_WORD *)(v15 + 12) = 2080;
    v7(v34, v14, v35);
    uint64_t v17 = sub_F7270();
    v0[3] = sub_A3FC(v17, v18, &v40);
    sub_F77B0();
    swift_bridgeObjectRelease();
    uint64_t v19 = v36 + 8;
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v20(v14, v35);
    *(_WORD *)(v15 + 22) = 2080;
    swift_bridgeObjectRetain();
    v0[4] = sub_A3FC(v39, v38, &v40);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v10, v11, "Creating group with information %@ context %s operation ID %s", (uint8_t *)v15, 0x20u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v21 = v0[16];
    uint64_t v22 = v0[12];

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    uint64_t v19 = v21 + 8;
    uint64_t v20 = v23;
    v23(v14, v22);
    swift_bridgeObjectRelease_n();
  }
  v0[26] = v19;
  v0[27] = v20;
  uint64_t v24 = v0[17];
  uint64_t v25 = v0[15];
  uint64_t v26 = v0[12];
  uint64_t v27 = v0[10];
  uint64_t v29 = v0[5];
  uint64_t v28 = v0[6];
  v7(v24, v0[19], v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, v24, v26);
  id v30 = (void *)(v25 + *(int *)(type metadata accessor for RCSGroupOperation() + 28));
  *id v30 = v29;
  v30[1] = v28;
  v0[28] = *(void *)(v27 + 96);
  v0[29] = (v27 + 96) & 0xFFFFFFFFFFFFLL | 0x464A000000000000;
  swift_bridgeObjectRetain();
  v0[30] = sub_F74D0();
  uint64_t v32 = sub_F7470();
  return _swift_task_switch(sub_7AC74, v32, v31);
}

uint64_t sub_7AC74()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[28];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[13];
  uint64_t v7 = v0[10];
  uint64_t v6 = v0[11];
  swift_release();
  v1(v2, v3, v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_7AD40, 0, 0);
}

uint64_t sub_7AD40()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 96);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_7AE04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7AE90()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[19], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t RCSGroupController.resolveGroupIdentity(for:subscriptionContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  v4[19] = *v3;
  return _swift_task_switch(sub_7AF84, 0, 0);
}

uint64_t sub_7AF84()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 160) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(*(void *)(v0 + 152) + 88);
    *(void *)(v0 + 168) = v2;
    *(void *)(v0 + 176) = *(void *)(v2 + 72);
    *(void *)(v0 + 184) = (v2 + 72) & 0xFFFFFFFFFFFFLL | 0xB154000000000000;
    sub_F74E0();
    *(void *)(v0 + 192) = sub_F74D0();
    uint64_t v4 = sub_F7470();
    return _swift_task_switch(sub_7B0E8, v4, v3);
  }
  else
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_1E944(v0 + 56, &qword_127C38);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_7B298;
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 128);
    return sub_79B68(v7, v6);
  }
}

uint64_t sub_7B0E8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void (*)(uint64_t, void, uint64_t))v0[22];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[16];
  swift_release();
  v2(v4, *(void *)(v3 + 80), v1);
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_7B198, 0, 0);
}

uint64_t sub_7B198()
{
  uint64_t v1 = (long long *)(v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v2 = *(void *)(v0 + 120);
    sub_1E87C(v1, v0 + 16);
    sub_1E87C((long long *)(v0 + 16), v2);
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    sub_1E944((uint64_t)v1, &qword_127C38);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_7B298;
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 128);
    return sub_79B68(v7, v6);
  }
}

uint64_t sub_7B298(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[26] = a1;
  v3[27] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_7B3CC, 0, 0);
  }
}

uint64_t sub_7B3CC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[28] = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0[19] + 88);
    v0[29] = v2;
    v0[30] = *(void *)(v2 + 64);
    v0[31] = (v2 + 64) & 0xFFFFFFFFFFFFLL | 0x441C000000000000;
    sub_F74E0();
    v0[32] = sub_F74D0();
    uint64_t v4 = sub_F7470();
    return _swift_task_switch(sub_7B53C, v4, v3);
  }
  else
  {
    uint64_t v5 = (void *)v0[26];
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_7B53C()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, void, uint64_t))v0[30];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[16];
  swift_release();
  v2(v6, v4, *(void *)(v5 + 80), v1);
  v0[33] = v3;
  if (v3) {
    uint64_t v7 = sub_7B674;
  }
  else {
    uint64_t v7 = sub_7B608;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_7B608()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_unknownObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_7B674()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_unknownObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t RCSGroupController.groupCreationCompleted(with:operationResult:subscriptionContext:)(uint64_t a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    void v10[3] = AssociatedTypeWitness;
    uint64_t v7 = sub_28728(v10);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v7, a3, AssociatedTypeWitness);
    sub_76140((uint64_t)v10);
  }
  v10[0] = a1;
  uint64_t v8 = sub_6CA4(0, &qword_129110);
  return sub_779D8((unint64_t)v10, a2, v8);
}

uint64_t RCSGroupController.renameGroup(chat:to:subscriptionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[37] = a4;
  v5[38] = v4;
  v5[35] = a2;
  v5[36] = a3;
  v5[34] = a1;
  uint64_t v6 = *v4;
  v5[39] = *(void *)(*v4 + 88);
  v5[40] = *(void *)(v6 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_F7770();
  v5[41] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[42] = v8;
  v5[43] = *(void *)(v8 + 64);
  v5[44] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[45] = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  v5[46] = v10;
  v5[47] = *(void *)(v10 + 64);
  v5[48] = swift_task_alloc();
  return _swift_task_switch(sub_7B980, 0, 0);
}

uint64_t sub_7B980()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 392) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0 + 312);
    *(void *)(v0 + 400) = *(void *)(v2 + 72);
    *(void *)(v0 + 408) = (v2 + 72) & 0xFFFFFFFFFFFFLL | 0xB154000000000000;
    *(void *)(v0 + 416) = sub_F74E0();
    *(void *)(v0 + 424) = sub_F74D0();
    uint64_t v4 = sub_F7470();
    return _swift_task_switch(sub_7BB68, v4, v3);
  }
  else
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    uint64_t v5 = *(void *)(v0 + 360);
    uint64_t v6 = *(void *)(v0 + 368);
    uint64_t v7 = *(void *)(v0 + 272);
    sub_1E944(v0 + 56, &qword_127C38);
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, v7, v5);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_7BB68()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[50];
  uint64_t v3 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v4 = v0[34];
  swift_release();
  v1(v4, v2, v3);
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_7BC1C, 0, 0);
}

uint64_t sub_7BC1C()
{
  uint64_t v1 = (long long *)(v0 + 7);
  if (v0[10])
  {
    sub_1E87C(v1, (uint64_t)(v0 + 2));
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[54] = Strong;
    uint64_t v3 = v0[39];
    if (Strong)
    {
      v0[55] = *(void *)(v3 + 48);
      v0[56] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x4D12000000000000;
      v0[57] = sub_F74D0();
      uint64_t v5 = sub_F7470();
      return _swift_task_switch(sub_7BE50, v5, v4);
    }
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_6BEC((uint64_t)(v0 + 2));
  }
  else
  {
    uint64_t v6 = v0[45];
    uint64_t v7 = v0[46];
    uint64_t v8 = v0[34];
    sub_1E944((uint64_t)v1, &qword_127C38);
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, v8, v6);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_7BE50()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[55];
  uint64_t v3 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v4 = v0[34];
  swift_release();
  v0[58] = v1(v4, v2, v3);
  v0[59] = v5;
  return _swift_task_switch(sub_7BEE8, 0, 0);
}

uint64_t sub_7BEE8()
{
  uint64_t v1 = v0;
  uint64_t v23 = v0 + 16;
  uint64_t v36 = (long long *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 472);
  uint64_t v32 = v0 + 216;
  uint64_t v29 = *(void *)(v0 + 432);
  uint64_t v30 = v0 + 136;
  uint64_t v33 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v24 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v21 = v4;
  uint64_t v35 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v25 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v34 = *(void *)(v0 + 328);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v22 = *(void *)(v0 + 296);
  uint64_t v27 = *(void *)(v0 + 304);
  uint64_t v28 = *(void *)(v0 + 280);
  uint64_t v19 = *(void *)(v0 + 272);
  uint64_t v20 = *(void *)(v0 + 312);
  uint64_t v31 = *(void *)(v27 + 24);
  *(void *)(v0 + 176) = *(void *)(v0 + 464);
  uint64_t v8 = v0 + 176;
  *(void *)(v0 + 480) = v31;
  *(void *)(v0 + 184) = v2;
  *(void *)(v0 + 192) = v28;
  *(void *)(v0 + 200) = v7;
  uint64_t v26 = v7;
  *(unsigned char *)(v0 + 208) = 1;
  *(void *)(v0 + 160) = type metadata accessor for RCSGroupController.OperationID();
  *(void *)(v0 + 168) = swift_getWitnessTable();
  uint64_t v9 = sub_28728((uint64_t *)(v0 + 136));
  swift_bridgeObjectRetain();
  uint64_t v10 = v6;
  sub_76708(v8, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v33, v19, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v35, v22, v34);
  sub_289D4(v23, (uint64_t)v36);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v12 = (v24 + *(unsigned __int8 *)(v5 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v13 = (v25 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (char *)swift_allocObject();
  *(void *)(v1 + 488) = v15;
  *((void *)v15 + 2) = v10;
  *((void *)v15 + 3) = v20;
  *((void *)v15 + 4) = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v15[v11], v33, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v15[v12], v35, v34);
  *(void *)&v15[v13] = v29;
  sub_1E87C(v36, (uint64_t)&v15[v14]);
  id v16 = &v15[(v14 + 47) & 0xFFFFFFFFFFFFFFF8];
  *(void *)id v16 = v28;
  *((void *)v16 + 1) = v26;
  unint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, void *, char *))((char *)&dword_129130 + dword_129130);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v1 + 496) = v17;
  *uint64_t v17 = v1;
  v17[1] = sub_7C1E4;
  return v37(v32, v30, &unk_129128, v15);
}

uint64_t sub_7C1E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 480);
  *(void *)(*v1 + 504) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_7C424;
  }
  else
  {
    sub_6BEC(v2 + 216);
    uint64_t v4 = sub_7C320;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_7C320()
{
  swift_release();
  sub_6BEC(v0 + 136);
  return _swift_task_switch(sub_7C394, 0, 0);
}

uint64_t sub_7C394()
{
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7C424()
{
  swift_release();
  return _swift_task_switch(sub_7C48C, 0, 0);
}

uint64_t sub_7C48C()
{
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 16);
  sub_6BEC(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7C51C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v18;
  v8[4] = a6;
  v8[5] = a7;
  long long v8[2] = a1;
  void v8[3] = a2;
  uint64_t v11 = *a3;
  v8[8] = *(void *)(*a3 + 88);
  v8[9] = *(void *)(v11 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[10] = AssociatedTypeWitness;
  uint64_t v13 = type metadata accessor for RCSGroupOperation();
  v8[11] = v13;
  v8[12] = *(void *)(v13 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = *(void *)(AssociatedTypeWitness - 8);
  v8[15] = swift_task_alloc();
  uint64_t v14 = swift_task_alloc();
  v8[16] = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  v8[17] = v15;
  void *v15 = v8;
  v15[1] = sub_7C6FC;
  return sub_7958C(v14, a4, a5);
}

uint64_t sub_7C6FC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_7CAB8;
  }
  else {
    uint64_t v2 = sub_7C810;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_7C810()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  (*(void (**)(uint64_t, void, uint64_t))(v0[14] + 16))(v1, v0[16], v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32))(v2, v1, v3);
  uint64_t v7 = (void *)(v2 + *(int *)(type metadata accessor for RCSGroupOperation() + 28));
  *uint64_t v7 = v6;
  v7[1] = v5;
  v0[19] = *(void *)(v4 + 104);
  v0[20] = (v4 + 104) & 0xFFFFFFFFFFFFLL | 0xBA73000000000000;
  sub_F74E0();
  swift_bridgeObjectRetain();
  v0[21] = sub_F74D0();
  uint64_t v9 = sub_F7470();
  return _swift_task_switch(sub_7C940, v9, v8);
}

uint64_t sub_7C940()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[19];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v10 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[5];
  swift_release();
  v1(v8, v6, v7, v2, v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v10);
  return _swift_task_switch(sub_7CA1C, 0, 0);
}

uint64_t sub_7CA1C()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[16], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_7CAB8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSGroupController.groupRenameCompleted(with:operationResult:)(uint64_t a1, uint64_t a2, void *a3)
{
  v4[0] = a1;
  v4[1] = a2;
  return sub_779D8((unint64_t)v4, a3, (uint64_t)&type metadata for String);
}

uint64_t RCSGroupController.leaveGroup(chat:subscriptionContext:)(uint64_t a1, uint64_t a2)
{
  v3[35] = a2;
  v3[36] = v2;
  v3[34] = a1;
  uint64_t v4 = *v2;
  v3[37] = *(void *)(*v2 + 88);
  v3[38] = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_F7770();
  v3[39] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[40] = v6;
  v3[41] = *(void *)(v6 + 64);
  v3[42] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[43] = AssociatedTypeWitness;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  v3[44] = v8;
  v3[45] = *(void *)(v8 + 64);
  v3[46] = swift_task_alloc();
  return _swift_task_switch(sub_7CD08, 0, 0);
}

uint64_t sub_7CD08()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 376) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0 + 296);
    *(void *)(v0 + 384) = *(void *)(v2 + 72);
    *(void *)(v0 + 392) = (v2 + 72) & 0xFFFFFFFFFFFFLL | 0xB154000000000000;
    *(void *)(v0 + 400) = sub_F74E0();
    *(void *)(v0 + 408) = sub_F74D0();
    uint64_t v4 = sub_F7470();
    return _swift_task_switch(sub_7CEF0, v4, v3);
  }
  else
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    uint64_t v5 = *(void *)(v0 + 344);
    uint64_t v6 = *(void *)(v0 + 352);
    uint64_t v7 = *(void *)(v0 + 272);
    sub_1E944(v0 + 56, &qword_127C38);
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, v7, v5);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_7CEF0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[48];
  uint64_t v3 = v0[37];
  uint64_t v2 = v0[38];
  uint64_t v4 = v0[34];
  swift_release();
  v1(v4, v2, v3);
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_7CFA4, 0, 0);
}

uint64_t sub_7CFA4()
{
  uint64_t v1 = (long long *)(v0 + 7);
  if (v0[10])
  {
    sub_1E87C(v1, (uint64_t)(v0 + 2));
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[52] = Strong;
    uint64_t v3 = v0[37];
    if (Strong)
    {
      v0[53] = *(void *)(v3 + 48);
      v0[54] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x4D12000000000000;
      v0[55] = sub_F74D0();
      uint64_t v5 = sub_F7470();
      return _swift_task_switch(sub_7D1D8, v5, v4);
    }
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_6BEC((uint64_t)(v0 + 2));
  }
  else
  {
    uint64_t v6 = v0[43];
    uint64_t v7 = v0[44];
    uint64_t v8 = v0[34];
    sub_1E944((uint64_t)v1, &qword_127C38);
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, v8, v6);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_7D1D8()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[53];
  uint64_t v3 = v0[37];
  uint64_t v2 = v0[38];
  uint64_t v4 = v0[34];
  swift_release();
  v0[56] = v1(v4, v2, v3);
  v0[57] = v5;
  return _swift_task_switch(sub_7D270, 0, 0);
}

uint64_t sub_7D270()
{
  uint64_t v1 = v0;
  uint64_t v27 = (long long *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v23 = *(void *)(v0 + 416);
  uint64_t v24 = v0 + 136;
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v26 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v21 = *(void *)(v0 + 328);
  uint64_t v22 = *(void *)(v0 + 288);
  uint64_t v18 = v7;
  uint64_t v19 = *(void *)(v0 + 280);
  uint64_t v16 = *(void *)(v0 + 272);
  uint64_t v17 = *(void *)(v0 + 296);
  uint64_t v25 = *(void *)(v22 + 24);
  *(void *)(v0 + 176) = *(void *)(v0 + 448);
  *(void *)(v0 + 464) = v25;
  *(void *)(v0 + 192) = 0;
  *(void *)(v0 + 200) = 0;
  *(void *)(v0 + 184) = v2;
  *(unsigned char *)(v0 + 208) = 2;
  *(void *)(v0 + 160) = type metadata accessor for RCSGroupController.OperationID();
  *(void *)(v0 + 168) = swift_getWitnessTable();
  uint64_t v9 = sub_28728((uint64_t *)(v0 + 136));
  sub_76708(v0 + 176, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v16, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v26, v19, v7);
  sub_289D4(v0 + 16, v0 + 96);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v11 = (v20 + *(unsigned __int8 *)(v6 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v21 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = (char *)swift_allocObject();
  *(void *)(v1 + 472) = v13;
  *((void *)v13 + 2) = v8;
  *((void *)v13 + 3) = v17;
  *((void *)v13 + 4) = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v13[v10], v3, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(&v13[v11], v26, v18);
  *(void *)&v13[v12] = v23;
  sub_1E87C(v27, (uint64_t)&v13[(v12 + 15) & 0xFFFFFFFFFFFFFFF8]);
  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, void *, char *))((char *)&dword_129130 + dword_129130);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 480) = v14;
  *uint64_t v14 = v1;
  v14[1] = sub_7D538;
  return v28(v1 + 216, v24, &unk_129148, v13);
}

uint64_t sub_7D538()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 464);
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_7D778;
  }
  else
  {
    sub_6BEC(v2 + 216);
    uint64_t v4 = sub_7D674;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_7D674()
{
  swift_release();
  sub_6BEC(v0 + 136);
  return _swift_task_switch(sub_7D6E8, 0, 0);
}

uint64_t sub_7D6E8()
{
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7D778()
{
  swift_release();
  return _swift_task_switch(sub_7D7E0, 0, 0);
}

uint64_t sub_7D7E0()
{
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 16);
  sub_6BEC(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7D870(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a1;
  void v7[3] = a2;
  uint64_t v10 = *a3;
  v7[6] = *(void *)(*a3 + 88);
  v7[7] = *(void *)(v10 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unsigned char v7[8] = AssociatedTypeWitness;
  uint64_t v12 = type metadata accessor for RCSGroupOperation();
  v7[9] = v12;
  v7[10] = *(void *)(v12 - 8);
  v7[11] = swift_task_alloc();
  v7[12] = *(void *)(AssociatedTypeWitness - 8);
  v7[13] = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  v7[14] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v7[15] = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_7DA44;
  return sub_7958C(v13, a4, a5);
}

uint64_t sub_7DA44()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_7DDEC;
  }
  else {
    uint64_t v2 = sub_7DB58;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_7DB58()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  (*(void (**)(uint64_t, void, uint64_t))(v0[12] + 16))(v1, v0[14], v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32))(v2, v1, v3);
  uint64_t v7 = (void *)(v2 + *(int *)(type metadata accessor for RCSGroupOperation() + 28));
  *uint64_t v7 = v6;
  v7[1] = v5;
  v0[17] = *(void *)(v4 + 112);
  v0[18] = (v4 + 112) & 0xFFFFFFFFFFFFLL | 0x26A0000000000000;
  sub_F74E0();
  swift_bridgeObjectRetain();
  v0[19] = sub_F74D0();
  uint64_t v9 = sub_F7470();
  return _swift_task_switch(sub_7DC88, v9, v8);
}

uint64_t sub_7DC88()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[17];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[5];
  swift_release();
  v1(v7, v2, v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_7DD50, 0, 0);
}

uint64_t sub_7DD50()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[14], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_7DDEC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSGroupController.groupExitCompleted(with:)(void *a1)
{
  uint64_t v4 = (char *)&type metadata for () + 8;
  uint64_t v2 = sub_551C(&qword_129150);
  return sub_779D8((unint64_t)&v4, a1, v2);
}

uint64_t sub_7DEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  swift_beginAccess();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v8 = (void *)type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (uint64_t)v8;
  }
  uint64_t v32 = (*(uint64_t (**)(uint64_t, void))(*(void *)(v6 + 88) + 24))(a2, *(void *)(v6 + 80));
  uint64_t v33 = v7;
  uint64_t v8 = (void *)sub_E8FF0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return (uint64_t)v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v13 = *(v10 - 1);
    unint64_t v12 = *v10;
    swift_bridgeObjectRetain_n();
    sub_EAF1C(v13, v12, 0, 0, 0, v34);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v8;
    }
    swift_bridgeObjectRetain();
    sub_EBD70(v35, v34, v32, v33);
    swift_bridgeObjectRelease();
    sub_6D20((uint64_t)v34);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v37 = v8;
    unint64_t v16 = sub_9D484((uint64_t)v35);
    uint64_t v17 = v8[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      break;
    }
    char v20 = v15;
    if (v8[3] >= v19)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v8 = v37;
        if (v15) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_E08DC();
        uint64_t v8 = v37;
        if (v20) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_DF398(v19, isUniquelyReferenced_nonNull_native);
      unint64_t v21 = sub_9D484((uint64_t)v35);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_25;
      }
      unint64_t v16 = v21;
      uint64_t v8 = v37;
      if (v20)
      {
LABEL_4:
        uint64_t v11 = (uint64_t *)(v8[7] + 16 * v16);
        swift_bridgeObjectRelease();
        *uint64_t v11 = v13;
        v11[1] = v12;
        goto LABEL_5;
      }
    }
    v8[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v23 = (_OWORD *)(v8[6] + (v16 << 6));
    long long v24 = v35[0];
    long long v25 = v35[1];
    long long v26 = v36[0];
    *(_OWORD *)((char *)v23 + 41) = *(_OWORD *)((char *)v36 + 9);
    v23[1] = v25;
    void v23[2] = v26;
    *uint64_t v23 = v24;
    uint64_t v27 = (uint64_t *)(v8[7] + 16 * v16);
    *uint64_t v27 = v13;
    v27[1] = v12;
    uint64_t v28 = v8[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_24;
    }
    long long v8[2] = v30;
    sub_5560((uint64_t)v35);
LABEL_5:
    v10 += 2;
    swift_bridgeObjectRelease();
    sub_6D20((uint64_t)v35);
    swift_bridgeObjectRelease();
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = sub_F7BA0();
  __break(1u);
  return result;
}

uint64_t RCSGroupController.ParticipantModificationResult.notModified.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_7E224(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = 32;
      do
      {
        long long v7 = *(_OWORD *)(a2 + v6 + 16);
        v16[0] = *(_OWORD *)(a2 + v6);
        v16[1] = v7;
        v17[0] = *(_OWORD *)(a2 + v6 + 32);
        *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)(a2 + v6 + 41);
        sub_5560((uint64_t)v16);
        swift_bridgeObjectRetain();
        unint64_t v8 = sub_9D484((uint64_t)v16);
        char v10 = v9;
        swift_bridgeObjectRelease();
        if (v10)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v18 = v4;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_E08DC();
            uint64_t v4 = v18;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_F1324(v8, v4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_6D20((uint64_t)v16);
        v6 += 64;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v13 = v12;
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_B6C4C(v14);
    swift_bridgeObjectRelease();
    *uint64_t v13 = v15;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_7E424@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  sub_1E87C(a2, (uint64_t)(a9 + 1));
  a9[6] = a3;
  a9[7] = a4;
  a9[8] = a5;
  uint64_t v16 = type metadata accessor for RCSGroupController.ParticipantModificationContext();
  uint64_t v17 = (char *)a9 + *(int *)(v16 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v17, a6, AssociatedTypeWitness);
  char v20 = (void *)((char *)a9 + *(int *)(v16 + 52));
  *char v20 = a7;
  v20[1] = a8;
  return result;
}

uint64_t sub_7E518(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 288) = a6;
  *(void *)(v7 + 296) = v6;
  *(void *)(v7 + 272) = a4;
  *(void *)(v7 + 280) = a5;
  *(unsigned char *)(v7 + 210) = a3;
  *(void *)(v7 + 256) = a1;
  *(void *)(v7 + 264) = a2;
  uint64_t v8 = *v6;
  *(void *)(v7 + 304) = *(void *)(*v6 + 80);
  *(void *)(v7 + 312) = *(void *)(v8 + 88);
  uint64_t v9 = type metadata accessor for RCSGroupController.OperationID();
  *(void *)(v7 + 320) = v9;
  *(void *)(v7 + 328) = *(void *)(v9 - 8);
  *(void *)(v7 + 336) = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v7 + 344) = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v7 + 352) = v11;
  *(void *)(v7 + 360) = *(void *)(v11 + 64);
  *(void *)(v7 + 368) = swift_task_alloc();
  *(void *)(v7 + 376) = swift_task_alloc();
  uint64_t v12 = sub_551C(&qword_127C70);
  *(void *)(v7 + 384) = v12;
  *(void *)(v7 + 392) = *(void *)(v12 - 8);
  *(void *)(v7 + 400) = swift_task_alloc();
  return _swift_task_switch(sub_7E70C, 0, 0);
}

uint64_t sub_7E70C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[51] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[39];
    v0[52] = *(void *)(v2 + 72);
    v0[53] = (v2 + 72) & 0xFFFFFFFFFFFFLL | 0xB154000000000000;
    v0[54] = sub_F74E0();
    v0[55] = sub_F74D0();
    uint64_t v4 = sub_F7470();
    return _swift_task_switch(sub_7E8AC, v4, v3);
  }
  else
  {
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_7E8AC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[52];
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[33];
  swift_release();
  v1(v4, v3, v2);
  return _swift_task_switch(sub_7E954, 0, 0);
}

uint64_t sub_7E954()
{
  uint64_t v1 = (long long *)(v0 + 136);
  if (!*(void *)(v0 + 160))
  {
    uint64_t v12 = *(void *)(v0 + 264);
    sub_1E944((uint64_t)v1, &qword_127C38);
    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v14, v12, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_unknownObjectRelease();
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  sub_1E87C(v1, v0 + 96);
  if (qword_1290B0 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v5 = sub_8B44(v4, (uint64_t)qword_12A280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  sub_F6FF0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (*(unsigned char *)(v0 + 209) == 1)
  {
    if (qword_129088 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_F70F0();
    sub_8B44(v6, (uint64_t)static Logger.groups);
    uint64_t v7 = sub_F70D0();
    os_log_type_t v8 = sub_F7670();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "No-oping participant modification due to override", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v10 = *(void *)(v0 + 256);

    type metadata accessor for RCSGroupController.GroupOperationError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v11 = v10;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_6BEC(v0 + 96);
    goto LABEL_11;
  }
  uint64_t v18 = *(void *)(v0 + 312);
  *(void *)(v0 + 448) = *(void *)(v18 + 48);
  *(void *)(v0 + 456) = (v18 + 48) & 0xFFFFFFFFFFFFLL | 0x4D12000000000000;
  *(void *)(v0 + 464) = sub_F74D0();
  uint64_t v20 = sub_F7470();
  return _swift_task_switch(sub_7ED3C, v20, v19);
}

uint64_t sub_7ED3C()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[33];
  swift_release();
  v0[59] = v1(v4, v3, v2);
  v0[60] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[61] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_7EE14;
  uint64_t v7 = v0[47];
  uint64_t v8 = v0[33];
  uint64_t v9 = v0[34];
  return sub_7958C(v7, v8, v9);
}

uint64_t sub_7EE14()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_7F5E8;
  }
  else
  {
    uint64_t v2 = sub_7EF30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_7EF30()
{
  uint64_t v1 = *(void *)(v0 + 496);
  *(void *)(v0 + 504) = sub_7DEB8(*(void *)(v0 + 256), *(void *)(v0 + 376));
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 376);
    uint64_t v3 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 352);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    sub_6BEC(v0 + 96);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 472);
    uint64_t v8 = *(void *)(v0 + 480);
    uint64_t v29 = *(void *)(v0 + 408);
    uint64_t v25 = *(void *)(v0 + 376);
    uint64_t v22 = *(void *)(v0 + 352);
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v23 = *(void *)(v0 + 344);
    uint64_t v24 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v30 = *(void *)(v0 + 312);
    uint64_t v20 = *(void *)(v0 + 304);
    uint64_t v27 = *(void *)(v0 + 280);
    uint64_t v28 = *(void *)(v0 + 288);
    uint64_t v12 = *(unsigned char *)(v0 + 210) & 1;
    uint64_t v13 = *(void *)(v0 + 256);
    uint64_t v14 = swift_bridgeObjectRetain();
    long long v26 = sub_B6C50(v14);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 176) = v7;
    *(void *)(v0 + 184) = v8;
    uint64_t v21 = v8;
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(unsigned char *)(v0 + 208) = 3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_76708(v0 + 176, v9);
    *(void *)(v0 + 80) = v11;
    *(void *)(v0 + 88) = swift_getWitnessTable();
    uint64_t v15 = sub_28728((uint64_t *)(v0 + 56));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v15, v9, v11);
    sub_289D4(v0 + 96, v0 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v25, v23);
    unint64_t v16 = (*(unsigned __int8 *)(v22 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v17 = (char *)swift_allocObject();
    *(void *)(v0 + 512) = v17;
    *((void *)v17 + 2) = v20;
    *((void *)v17 + 3) = v30;
    *((void *)v17 + 4) = v27;
    *((void *)v17 + 5) = v28;
    *((void *)v17 + 6) = v29;
    sub_1E87C((long long *)(v0 + 16), (uint64_t)(v17 + 56));
    *((void *)v17 + 12) = v7;
    *((void *)v17 + 13) = v21;
    *((void *)v17 + 14) = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v17[v16], v24, v23);
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v18;
    uint64_t v19 = type metadata accessor for RCSGroupController.ParticipantModificationResult();
    *uint64_t v18 = v0;
    v18[1] = sub_7F2D8;
    return RCSOperationController.perform<A>(operation:runTask:)(v0 + 240, v0 + 56, (uint64_t)&unk_1294F0, (uint64_t)v17, v19);
  }
}

uint64_t sub_7F2D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 528) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_7F688;
  }
  else
  {
    sub_6BEC(v2 + 56);
    uint64_t v3 = sub_7F410;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_7F410()
{
  uint64_t v1 = v0[66];
  sub_7E224(v0[63], v0[30], v0[31]);
  if (v1)
  {
    uint64_t v15 = v0[47];
    uint64_t v3 = v0[43];
    uint64_t v2 = v0[44];
    uint64_t v4 = v0[41];
    uint64_t v5 = v0[42];
    uint64_t v6 = v0[40];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v15, v3);
  }
  else
  {
    uint64_t v8 = v0[47];
    uint64_t v9 = v0[44];
    uint64_t v14 = v0[43];
    uint64_t v10 = v0[41];
    uint64_t v11 = v0[42];
    uint64_t v12 = v0[40];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v14);
  }
  sub_6BEC((uint64_t)(v0 + 12));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_7F5E8()
{
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7F688()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v5 = v0[41];
  uint64_t v4 = v0[42];
  uint64_t v6 = v0[40];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_6BEC((uint64_t)(v0 + 12));
  sub_6BEC((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_7F784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = v15;
  v8[18] = v16;
  v8[15] = v13;
  v8[16] = v14;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[19] = AssociatedTypeWitness;
  v8[20] = *(void *)(AssociatedTypeWitness - 8);
  v8[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for RCSGroupController.ParticipantModificationContext();
  v8[22] = v10;
  v8[23] = *(void *)(v10 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_7F8E0, 0, 0);
}

uint64_t sub_7F8E0()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v14 = *(int **)(v0 + 72);
  uint64_t v15 = *(void **)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 56);
  sub_289D4(*(void *)(v0 + 96), v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  sub_7E424(v6, (long long *)(v0 + 16), v12, v5, v13, v2, v8, v7, v15);
  uint64_t v16 = (uint64_t (*)(uint64_t))((char *)v14 + *v14);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_7FA84;
  uint64_t v10 = *(void *)(v0 + 192);
  return v16(v10);
}

uint64_t sub_7FA84()
{
  uint64_t v2 = *(void *)(*v1 + 192);
  uint64_t v3 = *(void *)(*v1 + 184);
  uint64_t v4 = *(void *)(*v1 + 176);
  uint64_t v5 = *v1;
  *(void *)(v5 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_7FC3C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_7FC3C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *RCSGroupController.ParticipantModificationResult.init(modified:notModified:)(id a1, id a2)
{
  id v3 = a2;
  if (a1)
  {
    id v5 = [a1 memberList];
    sub_6CA4(0, (unint64_t *)&qword_128668);
    unint64_t v6 = sub_F7410();

    uint64_t v7 = sub_80058(v6);
    swift_bridgeObjectRelease();
    int64_t v8 = v7[2];
    if (v8)
    {
      uint64_t v33 = v3;
      sub_86D38(0, v8, 0);
      uint64_t v9 = _swiftEmptyArrayStorage;
      uint64_t v10 = v7 + 5;
      do
      {
        uint64_t v12 = *(v10 - 1);
        unint64_t v11 = *v10;
        swift_bridgeObjectRetain_n();
        sub_EAF1C(v12, v11, 0, 0, 0, (uint64_t *)v35);
        if (v2)
        {
          swift_bridgeObjectRelease();

          swift_release();
          swift_bridgeObjectRelease();

          return v9;
        }
        swift_bridgeObjectRelease();
        unint64_t v14 = _swiftEmptyArrayStorage[2];
        unint64_t v13 = _swiftEmptyArrayStorage[3];
        if (v14 >= v13 >> 1) {
          sub_86D38(v13 > 1, v14 + 1, 1);
        }
        v10 += 2;
        _swiftEmptyArrayStorage[2] = v14 + 1;
        uint64_t v15 = &_swiftEmptyArrayStorage[8 * v14];
        long long v16 = v35[0];
        long long v17 = v35[1];
        long long v18 = v36[0];
        *(_OWORD *)((char *)v15 + 73) = *(_OWORD *)((char *)v36 + 9);
        v15[3] = v17;
        v15[4] = v18;
        void v15[2] = v16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      id v3 = v33;
      if (!v33) {
        goto LABEL_23;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (!v3) {
        goto LABEL_23;
      }
    }
  }
  else
  {
    if (!a2) {
      return 0;
    }
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  id v19 = [v3 memberList];
  sub_6CA4(0, (unint64_t *)&qword_128668);
  unint64_t v20 = sub_F7410();

  uint64_t v21 = sub_80058(v20);
  swift_bridgeObjectRelease();
  int64_t v22 = v21[2];
  if (!v22)
  {

    swift_bridgeObjectRelease();
LABEL_23:

    return v9;
  }
  uint64_t v34 = v3;
  sub_86D38(0, v22, 0);
  uint64_t v23 = v21 + 5;
  while (1)
  {
    uint64_t v25 = *(v23 - 1);
    unint64_t v24 = *v23;
    swift_bridgeObjectRetain_n();
    sub_EAF1C(v25, v24, 0, 0, 0, (uint64_t *)v37);
    if (v2) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v27 = _swiftEmptyArrayStorage[2];
    unint64_t v26 = _swiftEmptyArrayStorage[3];
    if (v27 >= v26 >> 1) {
      sub_86D38(v26 > 1, v27 + 1, 1);
    }
    v23 += 2;
    _swiftEmptyArrayStorage[2] = v27 + 1;
    uint64_t v28 = &_swiftEmptyArrayStorage[8 * v27];
    long long v29 = v37[0];
    long long v30 = v37[1];
    long long v31 = v38[0];
    *(_OWORD *)((char *)v28 + 73) = *(_OWORD *)((char *)v38 + 9);
    v28[3] = v30;
    v28[4] = v31;
    _OWORD v28[2] = v29;
    if (!--v22)
    {

      swift_bridgeObjectRelease();
      return v9;
    }
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return v9;
}

void *sub_80058(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_4FE88(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)sub_F78D0();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      unint64_t v6 = v5;
      id v7 = [v5 member];
      uint64_t v8 = sub_F7220();
      uint64_t v10 = v9;

      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_4FE88(v11 > 1, v12 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      unint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      void v13[4] = v8;
      v13[5] = v10;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_F79B0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_801D4(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *(void *)(a1 + 24);
  v2[10] = *(void *)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[11] = AssociatedTypeWitness;
  v2[12] = *(void *)(AssociatedTypeWitness - 8);
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for RCSGroupOperation();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_8031C, 0, 0);
}

uint64_t sub_8031C()
{
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[11];
  uint64_t v6 = (char *)v0[8];
  uint64_t v5 = v0[9];
  uint64_t v7 = v0[7];
  v0[17] = *(void *)v6;
  v0[18] = *((void *)v6 + 8);
  sub_289D4((uint64_t)(v6 + 8), (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v2, &v6[*(int *)(v7 + 48)], v4);
  uint64_t v8 = &v6[*(int *)(v7 + 52)];
  uint64_t v10 = *(void *)v8;
  uint64_t v9 = *((void *)v8 + 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v1, v2, v4);
  unint64_t v11 = (void *)(v1 + *(int *)(type metadata accessor for RCSGroupOperation() + 28));
  *unint64_t v11 = v10;
  v11[1] = v9;
  v0[19] = *(void *)(v5 + 120);
  v0[20] = (v5 + 120) & 0xFFFFFFFFFFFFLL | 0xFCEE000000000000;
  sub_F74E0();
  swift_bridgeObjectRetain();
  v0[21] = sub_F74D0();
  uint64_t v13 = sub_F7470();
  return _swift_task_switch(sub_80484, v13, v12);
}

uint64_t sub_80484()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = (void (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t))v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[9];
  uint64_t v6 = v0[10];
  swift_release();
  v2(v1, v0 + 2, v3, v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_6BEC((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t RCSGroupController.addParticipants(_:to:subscriptionContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  void v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return _swift_task_switch(sub_805B8, 0, 0);
}

uint64_t sub_805B8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = swift_allocObject();
  v0[7] = v2;
  *(void *)(v2 + 16) = *(void *)(v1 + 80);
  *(void *)(v2 + 24) = *(void *)(v1 + 88);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_8069C;
  uint64_t v4 = v0[4];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return sub_7E518(v6, v5, 0, v4, (uint64_t)&unk_129168, v2);
}

uint64_t sub_8069C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_807D8, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_807D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_8083C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = type metadata accessor for RCSGroupController.ParticipantModificationContext();
  void *v1 = v0;
  v1[1] = sub_808F4;
  return sub_801D4(v2);
}

uint64_t sub_808F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_809F0(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *(void *)(a1 + 24);
  v2[10] = *(void *)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[11] = AssociatedTypeWitness;
  v2[12] = *(void *)(AssociatedTypeWitness - 8);
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for RCSGroupOperation();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_80B38, 0, 0);
}

uint64_t sub_80B38()
{
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[11];
  uint64_t v6 = (char *)v0[8];
  uint64_t v5 = v0[9];
  uint64_t v7 = v0[7];
  v0[17] = *(void *)v6;
  v0[18] = *((void *)v6 + 8);
  sub_289D4((uint64_t)(v6 + 8), (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v2, &v6[*(int *)(v7 + 48)], v4);
  uint64_t v8 = &v6[*(int *)(v7 + 52)];
  uint64_t v10 = *(void *)v8;
  uint64_t v9 = *((void *)v8 + 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v1, v2, v4);
  unint64_t v11 = (void *)(v1 + *(int *)(type metadata accessor for RCSGroupOperation() + 28));
  *unint64_t v11 = v10;
  v11[1] = v9;
  v0[19] = *(void *)(v5 + 128);
  v0[20] = (v5 + 128) & 0xFFFFFFFFFFFFLL | 0x5736000000000000;
  sub_F74E0();
  swift_bridgeObjectRetain();
  v0[21] = sub_F74D0();
  uint64_t v13 = sub_F7470();
  return _swift_task_switch(sub_8C588, v13, v12);
}

uint64_t RCSGroupController.removeParticipants(_:from:subscriptionContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  void v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return _swift_task_switch(sub_80CEC, 0, 0);
}

uint64_t sub_80CEC()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = swift_allocObject();
  v0[7] = v2;
  *(void *)(v2 + 16) = *(void *)(v1 + 80);
  *(void *)(v2 + 24) = *(void *)(v1 + 88);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_80DD0;
  uint64_t v4 = v0[4];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return sub_7E518(v6, v5, 1, v4, (uint64_t)&unk_129188, v2);
}

uint64_t sub_80DD0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_8C5B8, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_80F0C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = type metadata accessor for RCSGroupController.ParticipantModificationContext();
  void *v1 = v0;
  v1[1] = sub_8C5D0;
  return sub_809F0(v2);
}

uint64_t _s7CoreRCS18RCSGroupControllerC27participantRemovalCompleted4with14groupOperationyAC29ParticipantModificationResultVyx_GSg_AA012RCSOperationM0_ptF_0(uint64_t a1, uint64_t a2, void *a3)
{
  v6[0] = a1;
  v6[1] = a2;
  uint64_t v4 = type metadata accessor for RCSGroupController.ParticipantModificationResult();
  return sub_779D8((unint64_t)v6, a3, v4);
}

uint64_t variable initialization expression of RCSFile.DispositionInformation.timeLength()
{
  return 0;
}

uint64_t variable initialization expression of RCSFile.thumbnail@<X0>(uint64_t a1@<X8>)
{
  return sub_85CAC(type metadata accessor for RCSFile.ThumbnailInformation, a1);
}

double variable initialization expression of RCSGroup.icon@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_81068()
{
  *(void *)(v1 + 144) = v0;
  return _swift_task_switch(sub_81088, v0, 0);
}

uint64_t sub_81088()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 144) + 112;
  swift_beginAccess();
  sub_2C4C0(v1, v0 + 56, &qword_1294B0);
  if (*(unsigned __int8 *)(v0 + 88) == 255)
  {
    uint64_t v18 = *(void *)(v0 + 144);
    sub_1E944(v0 + 56, &qword_1294B0);
    uint64_t v19 = sub_8C140((unint64_t *)&qword_1294B8, (void (*)(uint64_t))type metadata accessor for RCSOperationController.Operation);
    unint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v20;
    uint64_t v21 = sub_6CA4(0, &qword_129110);
    *unint64_t v20 = v0;
    v20[1] = sub_81584;
    uint64_t v22 = *(void *)(v0 + 144);
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 120, v18, v19, 0x292874696177, 0xE600000000000000, sub_8AEA4, v22, v21);
  }
  else
  {
    uint64_t v2 = v0 + 16;
    sub_1E74C(v0 + 56, v0 + 16, (uint64_t *)&unk_128CF0);
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_F70F0();
    sub_8B44(v3, (uint64_t)qword_129B10);
    swift_retain_n();
    uint64_t v4 = sub_F70D0();
    os_log_type_t v5 = sub_F7680();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void *)(v0 + 144);
    if (v6)
    {
      os_log_type_t log = v4;
      os_log_type_t type = v5;
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      buf = v8;
      uint64_t v9 = sub_F6F30();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = swift_task_alloc();
      uint64_t v13 = *(void *)(v7
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 24);
      uint64_t v12 = *(void *)(v7
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 32);
      sub_6BA8((void *)(v7+ OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v13);
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v13, v12);
      sub_27EAC();
      uint64_t v14 = sub_F7B20();
      unint64_t v16 = v15;
      uint64_t v17 = v9;
      uint64_t v2 = v0 + 16;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v17);
      swift_task_dealloc();
      *(void *)(v0 + 136) = sub_A3FC(v14, v16, &v32);
      sub_F77B0();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v4 = log;
      _os_log_impl(&dword_0, log, type, "Fulfilling operation %s with already-received result", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v23 = sub_8236C(v2);
    uint64_t v24 = v23;
    if (v25)
    {
      *(void *)(v0 + 128) = v23;
      sub_551C(&qword_127D08);
      swift_willThrowTypedImpl();
      sub_1E944(v2, (uint64_t *)&unk_128CF0);
      unint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
      return v27();
    }
    else
    {
      sub_1E944(v2, (uint64_t *)&unk_128CF0);
      unint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v26(v24);
    }
  }
}

uint64_t sub_81584()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[18];
    return _swift_task_switch(sub_816BC, v3, 0);
  }
  else
  {
    uint64_t v4 = v2[15];
    os_log_type_t v5 = (uint64_t (*)(uint64_t))v2[1];
    return v5(v4);
  }
}

uint64_t sub_816BC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_816D4(uint64_t a1)
{
  *(void *)(v2 + 216) = a1;
  *(void *)(v2 + 224) = v1;
  return _swift_task_switch(sub_816F4, v1, 0);
}

uint64_t sub_816F4()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 224) + 112;
  swift_beginAccess();
  sub_2C4C0(v1, v0 + 56, &qword_1294B0);
  if (*(unsigned __int8 *)(v0 + 88) != 255)
  {
    uint64_t v2 = v0 + 16;
    uint64_t v3 = v0 + 96;
    sub_1E74C(v0 + 56, v0 + 16, (uint64_t *)&unk_128CF0);
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_F70F0();
    sub_8B44(v4, (uint64_t)qword_129B10);
    swift_retain_n();
    os_log_type_t v5 = sub_F70D0();
    os_log_type_t v6 = sub_F7680();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 224);
    if (v7)
    {
      os_log_type_t type = v6;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v10 = sub_F6F30();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = *(void *)(v8
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 24);
      uint64_t v14 = *(void *)(v8
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 32);
      sub_6BA8((void *)(v8+ OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      sub_27EAC();
      uint64_t v15 = sub_F7B20();
      unint64_t v17 = v16;
      uint64_t v18 = v10;
      uint64_t v2 = v0 + 16;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v18);
      uint64_t v3 = v0 + 96;
      swift_task_dealloc();
      *(void *)(v0 + 208) = sub_A3FC(v15, v17, &v28);
      sub_F77B0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v5, type, "Fulfilling operation %s with already-received result", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    sub_2C4C0(v2, v3, (uint64_t *)&unk_128CF0);
    if (*(unsigned char *)(v0 + 128) == 1)
    {
      uint64_t v24 = *(void *)(v0 + 96);
      *(void *)(v0 + 136) = v24;
      *(unsigned char *)(v0 + 168) = 1;
    }
    else
    {
      sub_BAD8(v3, v0 + 136);
      *(unsigned char *)(v0 + 168) = 0;
      sub_6BEC(v3);
      if (*(unsigned char *)(v0 + 168) != 1)
      {
        sub_1EBC4((_OWORD *)(v0 + 136), *(_OWORD **)(v0 + 216));
        sub_1E944(v2, (uint64_t *)&unk_128CF0);
        char v25 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_16;
      }
      uint64_t v24 = *(void *)(v0 + 136);
    }
    *(void *)(v0 + 200) = v24;
    sub_551C(&qword_127D08);
    swift_willThrowTypedImpl();
    sub_1E944(v2, (uint64_t *)&unk_128CF0);
    char v25 = *(uint64_t (**)(void))(v0 + 8);
LABEL_16:
    return v25();
  }
  uint64_t v19 = *(void *)(v0 + 224);
  sub_1E944(v0 + 56, &qword_1294B0);
  uint64_t v20 = sub_8C140((unint64_t *)&qword_1294B8, (void (*)(uint64_t))type metadata accessor for RCSOperationController.Operation);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_81BF8;
  uint64_t v22 = *(void *)(v0 + 216);
  uint64_t v23 = *(void *)(v0 + 224);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v22, v19, v20, 0x292874696177, 0xE600000000000000, sub_8A6FC, v23, (char *)&type metadata for Any + 8);
}

uint64_t sub_81BF8()
{
  uint64_t v2 = (void *)*v1;
  v2[30] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[28];
    return _swift_task_switch(sub_81D2C, v3, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_81D2C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_81D44(uint64_t a1)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = v1;
  return _swift_task_switch(sub_81D64, v1, 0);
}

uint64_t sub_81D64()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 192) + 112;
  swift_beginAccess();
  sub_2C4C0(v1, v0 + 104, &qword_1294B0);
  if (*(unsigned __int8 *)(v0 + 136) == 255)
  {
    uint64_t v18 = *(void *)(v0 + 192);
    sub_1E944(v0 + 104, &qword_1294B0);
    uint64_t v19 = sub_8C140((unint64_t *)&qword_1294B8, (void (*)(uint64_t))type metadata accessor for RCSOperationController.Operation);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v20;
    uint64_t v21 = sub_551C(&qword_1294C0);
    *uint64_t v20 = v0;
    v20[1] = sub_82220;
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 192);
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v22, v18, v19, 0x292874696177, 0xE600000000000000, sub_8A2C4, v23, v21);
  }
  else
  {
    uint64_t v2 = (long long *)(v0 + 16);
    uint64_t v3 = v0 + 64;
    sub_1E74C(v0 + 104, v0 + 64, (uint64_t *)&unk_128CF0);
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_F70F0();
    sub_8B44(v4, (uint64_t)qword_129B10);
    swift_retain_n();
    os_log_type_t v5 = sub_F70D0();
    os_log_type_t v6 = sub_F7680();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 192);
    if (v7)
    {
      os_log_type_t type = v6;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      buf = v9;
      uint64_t v10 = sub_F6F30();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = *(void *)(v8
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 24);
      uint64_t v14 = *(void *)(v8
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 32);
      sub_6BA8((void *)(v8+ OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      sub_27EAC();
      uint64_t v15 = sub_F7B20();
      unint64_t v17 = v16;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
      uint64_t v2 = (long long *)(v0 + 16);
      swift_task_dealloc();
      *(void *)(v0 + 176) = sub_A3FC(v15, v17, &v28);
      uint64_t v3 = v0 + 64;
      sub_F77B0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v5, type, "Fulfilling operation %s with already-received result", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    sub_82464(v3, (uint64_t)v2);
    if (*(unsigned char *)(v0 + 56))
    {
      *(void *)(v0 + 168) = *(void *)(v0 + 16);
      sub_551C(&qword_127D08);
      swift_willThrowTypedImpl();
    }
    else
    {
      sub_1E87C(v2, *(void *)(v0 + 184));
    }
    sub_1E944(v3, (uint64_t *)&unk_128CF0);
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
}

uint64_t sub_82220()
{
  uint64_t v2 = (void *)*v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[24];
    return _swift_task_switch(sub_82354, v3, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_82354()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8236C(uint64_t a1)
{
  sub_2C4C0(a1, (uint64_t)v7, (uint64_t *)&unk_128CF0);
  if (v8) {
    return *(void *)&v7[0];
  }
  uint64_t v2 = sub_6CA4(0, &qword_129110);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)&v6[0];
    sub_6BEC((uint64_t)v7);
  }
  else
  {
    sub_1EBC4(v7, v6);
    sub_8A304();
    uint64_t v1 = swift_allocError();
    uint64_t v4 = v3;
    sub_BAD8((uint64_t)v6, v3);
    *(void *)(v4 + 32) = v2;
    *(unsigned char *)(v4 + 56) = 1;
    sub_6BEC((uint64_t)v6);
  }
  return v1;
}

uint64_t sub_82464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2C4C0(a1, (uint64_t)v9, (uint64_t *)&unk_128CF0);
  if (v10)
  {
    *(void *)a2 = *(void *)&v9[0];
    *(unsigned char *)(a2 + 40) = 1;
  }
  else
  {
    uint64_t v4 = sub_551C(&qword_1294C0);
    if (swift_dynamicCast())
    {
      sub_1E87C(v8, a2);
      *(unsigned char *)(a2 + 40) = 0;
      return sub_6BEC((uint64_t)v9);
    }
    else
    {
      sub_1EBC4(v9, v8);
      sub_8A304();
      uint64_t v5 = swift_allocError();
      uint64_t v7 = v6;
      sub_BAD8((uint64_t)v8, v6);
      *(void *)(v7 + 32) = v4;
      *(unsigned char *)(v7 + 56) = 1;
      uint64_t result = sub_6BEC((uint64_t)v8);
      *(void *)a2 = v5;
      *(unsigned char *)(a2 + 40) = 1;
    }
  }
  return result;
}

uint64_t sub_82564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(qword_129558);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v9 = (char **)(a2 + 152);
  swift_beginAccess();
  char v10 = *(char **)(a2 + 152);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 152) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v10 = sub_CEDDC(0, *((void *)v10 + 2) + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  unint64_t v13 = *((void *)v10 + 2);
  unint64_t v12 = *((void *)v10 + 3);
  if (v13 >= v12 >> 1)
  {
    char v10 = sub_CEDDC((char *)(v12 > 1), v13 + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  *((void *)v10 + 2) = v13 + 1;
  uint64_t v14 = &v10[16 * v13];
  *((void *)v14 + 4) = sub_8AF44;
  *((void *)v14 + 5) = v8;
  return swift_endAccess();
}

uint64_t sub_8272C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_551C(a3);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  unint64_t v13 = (char **)(a2 + 152);
  swift_beginAccess();
  uint64_t v14 = *(char **)(a2 + 152);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 152) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = sub_CEDDC(0, *((void *)v14 + 2) + 1, 1, v14);
    *unint64_t v13 = v14;
  }
  unint64_t v17 = *((void *)v14 + 2);
  unint64_t v16 = *((void *)v14 + 3);
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = sub_CEDDC((char *)(v16 > 1), v17 + 1, 1, v14);
    *unint64_t v13 = v14;
  }
  *((void *)v14 + 2) = v17 + 1;
  uint64_t v18 = &v14[16 * v17];
  *((void *)v18 + 4) = a5;
  *((void *)v18 + 5) = v12;
  return swift_endAccess();
}

uint64_t sub_828E4(uint64_t a1)
{
  sub_8236C(a1);
  if (v1)
  {
    sub_551C(qword_129558);
    return sub_F7480();
  }
  else
  {
    sub_551C(qword_129558);
    return sub_F7490();
  }
}

uint64_t sub_82950(uint64_t a1)
{
  sub_2C4C0(a1, (uint64_t)v3, (uint64_t *)&unk_128CF0);
  if (v4)
  {
    v5[0] = *(void *)&v3[0];
    char v6 = 1;
  }
  else
  {
    sub_BAD8((uint64_t)v3, (uint64_t)v5);
    char v6 = 0;
    sub_6BEC((uint64_t)v3);
  }
  sub_2C4C0((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_128CF0);
  if (v4)
  {
    *(void *)&long long v2 = *(void *)&v3[0];
    sub_551C(&qword_129518);
    sub_F7480();
  }
  else
  {
    sub_1EBC4(v3, &v2);
    sub_551C(&qword_129518);
    sub_F7490();
  }
  return sub_1E944((uint64_t)v5, (uint64_t *)&unk_128CF0);
}

uint64_t sub_82A30(uint64_t a1)
{
  sub_82464(a1, (uint64_t)v5);
  sub_2C4C0((uint64_t)v5, (uint64_t)v3, &qword_128030);
  if (v4)
  {
    v2[0] = *(void *)&v3[0];
    sub_551C(&qword_1294D0);
    sub_F7480();
  }
  else
  {
    sub_1E87C(v3, (uint64_t)v2);
    sub_551C(&qword_1294D0);
    sub_F7490();
  }
  return sub_1E944((uint64_t)v5, &qword_128030);
}

uint64_t variable initialization expression of RCSOperationController.operationQueues()
{
  uint64_t v0 = sub_551C(&qword_128B40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6F60();
  sub_F74F0();
  uint64_t v7 = sub_F7520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v0);
  return sub_F6F50();
}

unint64_t variable initialization expression of RCSOperationController.operations()
{
  return sub_E8DBC((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of RCSOperationController.dedupeToOperationID()
{
  return sub_4B470((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_82C68()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_82CB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_82D8C;
  return sub_78810(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_82D8C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_82E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[58] = a3;
  v4[59] = v3;
  v4[56] = a1;
  v4[57] = a2;
  return _swift_task_switch(sub_82EA4, v3, 0);
}

uint64_t sub_82EA4()
{
  uint64_t v76 = v0;
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void **)(v0 + 448);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_6BA8(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v7 = v6;
  id v71 = (uint64_t *)(v1 + 168);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 168);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1C9BC(v5, v7);
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 472);
    uint64_t v12 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v11 + 160);
    if (!*(void *)(v15 + 16)) {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1C9BC(v14, v13);
    if (v17)
    {
      uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_289D4(v18 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id, v0 + 56);
      swift_release();
      sub_1E87C((long long *)(v0 + 56), v0 + 96);
      sub_1E87C((long long *)(v0 + 96), v0 + 16);
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
  sub_289D4(*(void *)(v0 + 448), v0 + 16);
LABEL_8:
  uint64_t v19 = *(void *)(v0 + 472);
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 48);
  sub_6BA8((void *)(v0 + 16), v20);
  uint64_t v22 = sub_F6F30();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v25 = sub_F6F00();
  uint64_t v27 = v26;
  *(void *)(v0 + 480) = v26;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
  swift_task_dealloc();
  uint64_t v28 = (uint64_t *)(v19 + 160);
  swift_beginAccess();
  uint64_t v29 = *(void *)(v19 + 160);
  if (*(void *)(v29 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1C9BC(v25, v27);
    if (v31)
    {
      uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (qword_1290A8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_F70F0();
      sub_8B44(v33, (uint64_t)qword_129B10);
      sub_289D4(v0 + 16, v0 + 176);
      uint64_t v34 = sub_F70D0();
      os_log_type_t v35 = sub_F7670();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 141558275;
        *(void *)(v0 + 424) = 1752392040;
        sub_F77B0();
        *(_WORD *)(v36 + 12) = 2081;
        sub_6BA8((void *)(v0 + 176), *(void *)(v0 + 200));
        uint64_t v37 = sub_F7B20();
        *(void *)(v0 + 416) = sub_A3FC(v37, v38, &v75);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_6BEC(v0 + 176);
        _os_log_impl(&dword_0, v34, v35, "Existing operation found for ID %{private,mask.hash}s, waiting for existing operation", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_6BEC(v0 + 176);
      }

      *(void *)(v0 + 528) = v32;
      uint64_t v69 = (void *)swift_task_alloc();
      *(void *)(v0 + 536) = v69;
      *uint64_t v69 = v0;
      v69[1] = sub_83BFC;
      v69[18] = v32;
      return _swift_task_switch(sub_81088, v32, 0);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v73 = (void *)(v0 + 16);
  uint64_t v70 = (long long *)(v0 + 216);
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v72 = v25;
  uint64_t v39 = sub_F70F0();
  sub_8B44(v39, (uint64_t)qword_129B10);
  sub_289D4((uint64_t)v73, v0 + 136);
  uint64_t v40 = sub_F70D0();
  os_log_type_t v41 = sub_F7670();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 141558275;
    *(void *)(v0 + 440) = 1752392040;
    sub_F77B0();
    *(_WORD *)(v42 + 12) = 2081;
    sub_6BA8((void *)(v0 + 136), *(void *)(v0 + 160));
    uint64_t v43 = sub_F7B20();
    *(void *)(v0 + 432) = sub_A3FC(v43, v44, &v75);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_6BEC(v0 + 136);
    _os_log_impl(&dword_0, v40, v41, "Creating a new operation with ID %{private,mask.hash}s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_6BEC(v0 + 136);
  }

  uint64_t v45 = *(void *)(v0 + 40);
  uint64_t v46 = *(void *)(v0 + 48);
  sub_6BA8(v73, v45);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
  uint64_t v49 = v48;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = *v71;
  *id v71 = 0x8000000000000000;
  sub_1D00C(v72, v27, v47, v49, isUniquelyReferenced_nonNull_native);
  *id v71 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_289D4((uint64_t)v73, (uint64_t)v70);
  type metadata accessor for RCSOperationController.Operation();
  swift_allocObject();
  uint64_t v51 = sub_9E674(v70);
  *(void *)(v0 + 488) = v51;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = *v28;
  *uint64_t v28 = 0x8000000000000000;
  sub_9DFB4(v51, v72, v27, v52);
  *uint64_t v28 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v53 = *(void *)(v0 + 40);
  uint64_t v54 = *(void *)(v0 + 48);
  sub_6BA8(v73, v53);
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
  *(void *)(v0 + 496) = v56;
  if (v56)
  {
    uint64_t v57 = v55;
    uint64_t v58 = v56;
    uint64_t v60 = *(void *)(v0 + 464);
    uint64_t v59 = *(void *)(v0 + 472);
    uint64_t v61 = *(void *)(v0 + 456);
    sub_289D4((uint64_t)v73, v0 + 256);
    unint64_t v62 = (void *)swift_allocObject();
    *(void *)(v0 + 504) = v62;
    sub_1E87C((long long *)(v0 + 256), (uint64_t)(v62 + 2));
    v62[7] = v61;
    v62[8] = v60;
    v62[9] = v72;
    v62[10] = v27;
    v62[11] = v59;
    uint64_t v74 = (char *)&async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:)
        + async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:);
    swift_retain();
    swift_retain();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v63;
    *uint64_t v63 = v0;
    v63[1] = sub_838E0;
    return ((uint64_t (*)(uint64_t, uint64_t, void *, void *))v74)(v57, v58, &unk_129550, v62);
  }
  else
  {
    unint64_t v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v65;
    *unint64_t v65 = v0;
    v65[1] = sub_83A80;
    uint64_t v66 = *(void *)(v0 + 464);
    uint64_t v67 = *(void *)(v0 + 472);
    uint64_t v68 = *(void *)(v0 + 456);
    return sub_9CA18((uint64_t)v73, v68, v66, v72, v27, v67);
  }
}

uint64_t sub_838E0()
{
  uint64_t v2 = *v0;
  uint64_t v1 = *v0;
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = *(void *)(v1 + 488);
  *(void *)(v2 + 528) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 536) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_83BFC;
  v5[18] = v4;
  return _swift_task_switch(sub_81088, v4, 0);
}

uint64_t sub_83A80()
{
  uint64_t v2 = *v0;
  uint64_t v1 = *v0;
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + 488);
  *(void *)(v2 + 528) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 536) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_83BFC;
  v5[18] = v4;
  return _swift_task_switch(sub_81088, v4, 0);
}

uint64_t sub_83BFC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[68] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[59];
  if (v1)
  {
    uint64_t v6 = sub_83DAC;
  }
  else
  {
    v4[69] = a1;
    uint64_t v6 = sub_83D38;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_83D38()
{
  swift_release();
  sub_6BEC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 552);
  return v1(v2);
}

uint64_t sub_83DAC()
{
  swift_release();
  sub_6BEC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_83E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[59] = a4;
  v5[60] = v4;
  v5[57] = a2;
  v5[58] = a3;
  v5[56] = a1;
  return _swift_task_switch(sub_83E44, v4, 0);
}

uint64_t sub_83E44()
{
  uint64_t v76 = v0;
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 456);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_6BA8(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v7 = v6;
  uint64_t v72 = (uint64_t *)(v1 + 168);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 168);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1C9BC(v5, v7);
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 480);
    uint64_t v12 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v11 + 160);
    if (!*(void *)(v15 + 16)) {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1C9BC(v14, v13);
    if (v17)
    {
      uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_289D4(v18 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id, v0 + 56);
      swift_release();
      sub_1E87C((long long *)(v0 + 56), v0 + 96);
      sub_1E87C((long long *)(v0 + 96), v0 + 16);
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
  sub_289D4(*(void *)(v0 + 456), v0 + 16);
LABEL_8:
  uint64_t v19 = *(void *)(v0 + 480);
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 48);
  sub_6BA8((void *)(v0 + 16), v20);
  uint64_t v22 = sub_F6F30();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v25 = sub_F6F00();
  uint64_t v27 = v26;
  *(void *)(v0 + 488) = v26;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
  swift_task_dealloc();
  uint64_t v28 = (uint64_t *)(v19 + 160);
  swift_beginAccess();
  uint64_t v29 = *(void *)(v19 + 160);
  if (*(void *)(v29 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1C9BC(v25, v27);
    if (v31)
    {
      uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (qword_1290A8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_F70F0();
      sub_8B44(v33, (uint64_t)qword_129B10);
      sub_289D4(v0 + 16, v0 + 176);
      uint64_t v34 = sub_F70D0();
      os_log_type_t v35 = sub_F7670();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 141558275;
        *(void *)(v0 + 424) = 1752392040;
        sub_F77B0();
        *(_WORD *)(v36 + 12) = 2081;
        sub_6BA8((void *)(v0 + 176), *(void *)(v0 + 200));
        uint64_t v37 = sub_F7B20();
        *(void *)(v0 + 416) = sub_A3FC(v37, v38, &v75);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_6BEC(v0 + 176);
        _os_log_impl(&dword_0, v34, v35, "Existing operation found for ID %{private,mask.hash}s, waiting for existing operation", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_6BEC(v0 + 176);
      }

      *(void *)(v0 + 536) = v32;
      uint64_t v69 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v69;
      *uint64_t v69 = v0;
      v69[1] = sub_84BBC;
      v69[27] = *(void *)(v0 + 448);
      v69[28] = v32;
      return _swift_task_switch(sub_816F4, v32, 0);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v70 = (long long *)(v0 + 216);
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v73 = v25;
  uint64_t v39 = sub_F70F0();
  sub_8B44(v39, (uint64_t)qword_129B10);
  id v71 = (void *)(v0 + 16);
  sub_289D4(v0 + 16, v0 + 136);
  uint64_t v40 = sub_F70D0();
  os_log_type_t v41 = sub_F7670();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 141558275;
    *(void *)(v0 + 440) = 1752392040;
    sub_F77B0();
    *(_WORD *)(v42 + 12) = 2081;
    sub_6BA8((void *)(v0 + 136), *(void *)(v0 + 160));
    uint64_t v43 = sub_F7B20();
    *(void *)(v0 + 432) = sub_A3FC(v43, v44, &v75);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_6BEC(v0 + 136);
    _os_log_impl(&dword_0, v40, v41, "Creating a new operation with ID %{private,mask.hash}s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_6BEC(v0 + 136);
  }

  uint64_t v45 = *(void *)(v0 + 40);
  uint64_t v46 = *(void *)(v0 + 48);
  sub_6BA8(v71, v45);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
  uint64_t v49 = v48;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = *v72;
  *uint64_t v72 = 0x8000000000000000;
  sub_1D00C(v73, v27, v47, v49, isUniquelyReferenced_nonNull_native);
  *uint64_t v72 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_289D4((uint64_t)v71, (uint64_t)v70);
  type metadata accessor for RCSOperationController.Operation();
  swift_allocObject();
  uint64_t v51 = sub_9E674(v70);
  *(void *)(v0 + 496) = v51;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = *v28;
  *uint64_t v28 = 0x8000000000000000;
  sub_9DFB4(v51, v73, v27, v52);
  *uint64_t v28 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v53 = *(void *)(v0 + 40);
  uint64_t v54 = *(void *)(v0 + 48);
  sub_6BA8(v71, v53);
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
  *(void *)(v0 + 504) = v56;
  if (v56)
  {
    uint64_t v57 = v55;
    uint64_t v58 = v56;
    uint64_t v60 = *(void *)(v0 + 472);
    uint64_t v59 = *(void *)(v0 + 480);
    uint64_t v61 = *(void *)(v0 + 464);
    sub_289D4((uint64_t)v71, v0 + 256);
    unint64_t v62 = (void *)swift_allocObject();
    *(void *)(v0 + 512) = v62;
    sub_1E87C((long long *)(v0 + 256), (uint64_t)(v62 + 2));
    v62[7] = v61;
    v62[8] = v60;
    v62[9] = v73;
    v62[10] = v27;
    v62[11] = v59;
    uint64_t v74 = (char *)&async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:)
        + async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:);
    swift_retain();
    swift_retain();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v63;
    *uint64_t v63 = v0;
    v63[1] = sub_84878;
    return ((uint64_t (*)(uint64_t, uint64_t, void *, void *))v74)(v57, v58, &unk_129510, v62);
  }
  else
  {
    unint64_t v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v65;
    *unint64_t v65 = v0;
    v65[1] = sub_84A2C;
    uint64_t v66 = *(void *)(v0 + 472);
    uint64_t v67 = *(void *)(v0 + 480);
    uint64_t v68 = *(void *)(v0 + 464);
    return sub_9CA18((uint64_t)v71, v68, v66, v73, v27, v67);
  }
}

uint64_t sub_84878()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v1[62];
  v1[67] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[68] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_84BBC;
  v4[27] = v1[56];
  v4[28] = v3;
  return _swift_task_switch(sub_816F4, v3, 0);
}

uint64_t sub_84A2C()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1[62];
  v1[67] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[68] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_84BBC;
  v4[27] = v1[56];
  v4[28] = v3;
  return _swift_task_switch(sub_816F4, v3, 0);
}

uint64_t sub_84BBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 480);
  if (v0) {
    uint64_t v4 = sub_8C5AC;
  }
  else {
    uint64_t v4 = sub_8C5C0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_84CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[59] = a4;
  v5[60] = v4;
  v5[57] = a2;
  v5[58] = a3;
  v5[56] = a1;
  return _swift_task_switch(sub_84D10, v4, 0);
}

uint64_t sub_84D10()
{
  uint64_t v76 = v0;
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 456);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_6BA8(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v7 = v6;
  uint64_t v72 = (uint64_t *)(v1 + 168);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 168);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1C9BC(v5, v7);
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 480);
    uint64_t v12 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v11 + 160);
    if (!*(void *)(v15 + 16)) {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1C9BC(v14, v13);
    if (v17)
    {
      uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_289D4(v18 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id, v0 + 56);
      swift_release();
      sub_1E87C((long long *)(v0 + 56), v0 + 96);
      sub_1E87C((long long *)(v0 + 96), v0 + 16);
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
  sub_289D4(*(void *)(v0 + 456), v0 + 16);
LABEL_8:
  uint64_t v19 = *(void *)(v0 + 480);
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 48);
  sub_6BA8((void *)(v0 + 16), v20);
  uint64_t v22 = sub_F6F30();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v25 = sub_F6F00();
  uint64_t v27 = v26;
  *(void *)(v0 + 488) = v26;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
  swift_task_dealloc();
  uint64_t v28 = (uint64_t *)(v19 + 160);
  swift_beginAccess();
  uint64_t v29 = *(void *)(v19 + 160);
  if (*(void *)(v29 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1C9BC(v25, v27);
    if (v31)
    {
      uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (qword_1290A8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_F70F0();
      sub_8B44(v33, (uint64_t)qword_129B10);
      sub_289D4(v0 + 16, v0 + 176);
      uint64_t v34 = sub_F70D0();
      os_log_type_t v35 = sub_F7670();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 141558275;
        *(void *)(v0 + 424) = 1752392040;
        sub_F77B0();
        *(_WORD *)(v36 + 12) = 2081;
        sub_6BA8((void *)(v0 + 176), *(void *)(v0 + 200));
        uint64_t v37 = sub_F7B20();
        *(void *)(v0 + 416) = sub_A3FC(v37, v38, &v75);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_6BEC(v0 + 176);
        _os_log_impl(&dword_0, v34, v35, "Existing operation found for ID %{private,mask.hash}s, waiting for existing operation", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_6BEC(v0 + 176);
      }

      *(void *)(v0 + 536) = v32;
      uint64_t v69 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v69;
      *uint64_t v69 = v0;
      v69[1] = sub_85A88;
      v69[23] = *(void *)(v0 + 448);
      v69[24] = v32;
      return _swift_task_switch(sub_81D64, v32, 0);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v70 = (long long *)(v0 + 216);
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v73 = v25;
  uint64_t v39 = sub_F70F0();
  sub_8B44(v39, (uint64_t)qword_129B10);
  id v71 = (void *)(v0 + 16);
  sub_289D4(v0 + 16, v0 + 136);
  uint64_t v40 = sub_F70D0();
  os_log_type_t v41 = sub_F7670();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 141558275;
    *(void *)(v0 + 440) = 1752392040;
    sub_F77B0();
    *(_WORD *)(v42 + 12) = 2081;
    sub_6BA8((void *)(v0 + 136), *(void *)(v0 + 160));
    uint64_t v43 = sub_F7B20();
    *(void *)(v0 + 432) = sub_A3FC(v43, v44, &v75);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_6BEC(v0 + 136);
    _os_log_impl(&dword_0, v40, v41, "Creating a new operation with ID %{private,mask.hash}s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_6BEC(v0 + 136);
  }

  uint64_t v45 = *(void *)(v0 + 40);
  uint64_t v46 = *(void *)(v0 + 48);
  sub_6BA8(v71, v45);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
  uint64_t v49 = v48;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = *v72;
  *uint64_t v72 = 0x8000000000000000;
  sub_1D00C(v73, v27, v47, v49, isUniquelyReferenced_nonNull_native);
  *uint64_t v72 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_289D4((uint64_t)v71, (uint64_t)v70);
  type metadata accessor for RCSOperationController.Operation();
  swift_allocObject();
  uint64_t v51 = sub_9E674(v70);
  *(void *)(v0 + 496) = v51;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = *v28;
  *uint64_t v28 = 0x8000000000000000;
  sub_9DFB4(v51, v73, v27, v52);
  *uint64_t v28 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v53 = *(void *)(v0 + 40);
  uint64_t v54 = *(void *)(v0 + 48);
  sub_6BA8(v71, v53);
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
  *(void *)(v0 + 504) = v56;
  if (v56)
  {
    uint64_t v57 = v55;
    uint64_t v58 = v56;
    uint64_t v60 = *(void *)(v0 + 472);
    uint64_t v59 = *(void *)(v0 + 480);
    uint64_t v61 = *(void *)(v0 + 464);
    sub_289D4((uint64_t)v71, v0 + 256);
    unint64_t v62 = (void *)swift_allocObject();
    *(void *)(v0 + 512) = v62;
    sub_1E87C((long long *)(v0 + 256), (uint64_t)(v62 + 2));
    v62[7] = v61;
    v62[8] = v60;
    v62[9] = v73;
    v62[10] = v27;
    v62[11] = v59;
    uint64_t v74 = (char *)&async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:)
        + async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:);
    swift_retain();
    swift_retain();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v63;
    *uint64_t v63 = v0;
    v63[1] = sub_85744;
    return ((uint64_t (*)(uint64_t, uint64_t, void *, void *))v74)(v57, v58, &unk_1294A8, v62);
  }
  else
  {
    unint64_t v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v65;
    *unint64_t v65 = v0;
    v65[1] = sub_858F8;
    uint64_t v66 = *(void *)(v0 + 472);
    uint64_t v67 = *(void *)(v0 + 480);
    uint64_t v68 = *(void *)(v0 + 464);
    return sub_9CA18((uint64_t)v71, v68, v66, v73, v27, v67);
  }
}

uint64_t sub_85744()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v1[62];
  v1[67] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[68] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_85A88;
  v4[23] = v1[56];
  v4[24] = v3;
  return _swift_task_switch(sub_81D64, v3, 0);
}

uint64_t sub_858F8()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1[62];
  v1[67] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[68] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_85A88;
  v4[23] = v1[56];
  v4[24] = v3;
  return _swift_task_switch(sub_81D64, v3, 0);
}

uint64_t sub_85A88()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 480);
  if (v0) {
    uint64_t v4 = sub_85C24;
  }
  else {
    uint64_t v4 = sub_85BB4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_85BB4()
{
  swift_release();
  sub_6BEC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_85C24()
{
  swift_release();
  sub_6BEC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t variable initialization expression of RCSMessage.content@<X0>(uint64_t a1@<X8>)
{
  return sub_85CAC(type metadata accessor for RCSMessage.Content, a1);
}

uint64_t sub_85CAC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

double variable initialization expression of RCSMessage.groupIdentity@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

CoreRCS::RCSMessageMetadata __swiftcall RCSMessageMetadata.init()()
{
  return (CoreRCS::RCSMessageMetadata)sub_E9168((uint64_t)&_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of RCSHandle.attributes()
{
  return sub_E8DA4((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of RCSTypingTracker.allIndicators()
{
  return sub_E937C((uint64_t)_swiftEmptyArrayStorage);
}

void sub_85D54(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_85D5C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_85D70@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_85D84@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_85D98(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_85DC8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_85DF4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_85E18(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_85E2C(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_85E40(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_85E54@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_85E68(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_85E7C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_85E90(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_85EA4()
{
  return *v0 == 0;
}

uint64_t sub_85EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_85ECC(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_85EE0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_85EEC(uint64_t a1, uint64_t a2)
{
  return sub_85FEC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_85F0C(uint64_t a1, uint64_t a2)
{
  return sub_85FEC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_85F24()
{
  sub_F7220();
  sub_F72C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_85F78()
{
  sub_F7220();
  sub_F7C20();
  sub_F72C0();
  Swift::Int v0 = sub_F7C50();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_85FEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_F7220();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_86030(uint64_t a1, id *a2)
{
  uint64_t result = sub_F7200();
  *a2 = 0;
  return result;
}

uint64_t sub_860A8(uint64_t a1, id *a2)
{
  char v3 = sub_F7210();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_86128@<X0>(uint64_t *a1@<X8>)
{
  sub_F7220();
  uint64_t v2 = sub_F71F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_8616C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_8C54C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_861B0()
{
  uint64_t v0 = sub_F7220();
  uint64_t v2 = v1;
  if (v0 == sub_F7220() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_F7B60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_86240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_F7220();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_8626C(uint64_t a1)
{
  uint64_t v2 = sub_8C140((unint64_t *)&qword_1296B0, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_8C140(&qword_1296B8, type metadata accessor for FileAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_86328@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_F71F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_86370(uint64_t a1)
{
  uint64_t v2 = sub_8C140((unint64_t *)&qword_1296A0, type metadata accessor for Key);
  uint64_t v3 = sub_8C140(&qword_1296A8, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t type metadata accessor for RCSGroupController.GroupOperationError()
{
  return sub_8B108();
}

uint64_t type metadata accessor for RCSGroupController.OperationID()
{
  return sub_8B108();
}

uint64_t sub_8645C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(sub_F7770() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v9, v6);
  }
  unint64_t v12 = (((v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  sub_6BEC(v0 + v12);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v12 + 47) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | v8 | 7);
}

uint64_t sub_86674(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(sub_F7770() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(uint64_t **)(v2 + 32);
  uint64_t v14 = v2 + v7;
  uint64_t v15 = v2 + v10;
  uint64_t v16 = *(void *)(v2 + v11);
  uint64_t v17 = v2 + v12;
  uint64_t v18 = *(void *)(v2 + ((v12 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v19;
  *uint64_t v19 = v3;
  v19[1] = sub_8C594;
  return sub_7C51C(a1, a2, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_8686C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(sub_F7770() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v9, v6);
  }
  unint64_t v12 = (((v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  sub_6BEC(v0 + v12);

  return _swift_deallocObject(v0, v12 + 40, v3 | v8 | 7);
}

uint64_t sub_86A70(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(sub_F7770() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = *(uint64_t **)(v2 + 32);
  uint64_t v13 = v2 + v7;
  uint64_t v14 = v2 + v10;
  uint64_t v15 = *(void *)(v2 + v11);
  uint64_t v16 = v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_86C44;
  return sub_7D870(a1, a2, v12, v13, v14, v15, v16);
}

uint64_t sub_86C44()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_86D38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_86D78(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_86D58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_86EE0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_86D78(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_551C(&qword_129500);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_86EE0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_551C(&qword_1284A8);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_551C(&qword_1284B0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_8706C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_8707C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_8C598;
  return sub_8083C();
}

uint64_t type metadata accessor for RCSGroupController.ParticipantModificationResult()
{
  return sub_8B108();
}

uint64_t sub_8713C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_8714C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_8C59C;
  return sub_80F0C();
}

void *sub_871F4()
{
  return &protocol witness table for String;
}

uint64_t sub_87200()
{
  return swift_getWitnessTable();
}

uint64_t sub_8721C()
{
  return swift_getWitnessTable();
}

uint64_t sub_87238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_87240()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_872D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    int64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_873DC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_8744C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_874D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_87568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_875E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_87670(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x877BCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_877D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x879B0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for RCSGroupOperation()
{
  return sub_8B108();
}

uint64_t sub_879F4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RCSGroupController()
{
  return sub_8B108();
}

uint64_t sub_87A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_87A64()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_87B18(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v6 > 3)
  {
    int v7 = *(_DWORD *)(v5 + 80);
    if ((unint64_t)(v6 + 1) > 0x18 || (v7 & 0x1000F8) != 0)
    {
LABEL_30:
      uint64_t v16 = *(void *)a2;
      *a1 = *(void *)a2;
      a1 = (void *)(v16 + (((v7 & 0xF8 | 7u) + 16) & ~(unint64_t)(v7 & 0xF8 | 7u)));
      swift_retain();
      return a1;
    }
LABEL_17:
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 < 3) {
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  unsigned int v9 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
  int v7 = *(_DWORD *)(v5 + 80);
  if (v9 > 0xFFFC)
  {
    if ((unint64_t)(v6 + 4) > 0x18 || (v7 & 0x1000F8) != 0) {
      goto LABEL_30;
    }
    unsigned int v12 = *(_DWORD *)&a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3) {
      goto LABEL_33;
    }
  }
  else
  {
    int v10 = v7 & 0x1000F8;
    if (v9 <= 0xFC)
    {
      if ((unint64_t)(v6 + 1) > 0x18 || v10 != 0) {
        goto LABEL_30;
      }
      goto LABEL_17;
    }
    if ((unint64_t)(v6 + 2) > 0x18 || v10 != 0) {
      goto LABEL_30;
    }
    unsigned int v12 = *(unsigned __int16 *)&a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
LABEL_33:
      if (v6 <= 3) {
        uint64_t v18 = v6;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_41;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_41;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_41;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_41:
          int v20 = (v19 | (v13 << (8 * v6))) + 3;
          unsigned int v12 = v19 + 3;
          if (v6 < 4) {
            unsigned int v12 = v20;
          }
          break;
        default:
          break;
      }
    }
  }
LABEL_43:
  if (v12 == 2)
  {
    uint64_t v21 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v21;
    swift_bridgeObjectRetain();
    if (v6 <= 3)
    {
      unsigned int v22 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
      if (v22 > 0xFFFC)
      {
        int v23 = 2;
        goto LABEL_66;
      }
      if (v22 > 0xFC)
      {
        LOWORD(v23) = 2;
        goto LABEL_69;
      }
    }
    *((unsigned char *)a1 + v6) = 2;
    return a1;
  }
  if (v12 == 1)
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    if (v6 > 3)
    {
LABEL_55:
      *((unsigned char *)a1 + v6) = 1;
      return a1;
    }
    int v23 = 1;
    unsigned int v24 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
    if (v24 <= 0xFFFC)
    {
      if (v24 <= 0xFC) {
        goto LABEL_55;
      }
LABEL_69:
      *(_WORD *)((char *)a1 + v6) = v23;
      return a1;
    }
LABEL_66:
    *(_DWORD *)((char *)a1 + v6) = v23;
    return a1;
  }
  if (v12)
  {
    if (v6 > 3) {
      goto LABEL_60;
    }
    unsigned int v25 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
    uint64_t v26 = 2;
    if (v25 > 0xFFFC) {
      uint64_t v26 = 4;
    }
    if (v25 <= 0xFC) {
LABEL_60:
    }
      uint64_t v26 = 1;
    memcpy(a1, a2, v26 + v6);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    if (v6 > 3) {
      goto LABEL_47;
    }
    unsigned int v27 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
    if (v27 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v6) = 0;
      return a1;
    }
    if (v27 <= 0xFC) {
LABEL_47:
    }
      *((unsigned char *)a1 + v6) = 0;
    else {
      *(_WORD *)((char *)a1 + v6) = 0;
    }
  }
  return a1;
}

uint64_t sub_87E80(unsigned __int8 *a1)
{
  uint64_t result = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(void *)(*(void *)(result - 8) + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16;
  }
  if (v3 > 3) {
    goto LABEL_4;
  }
  unsigned int v5 = ((1 << (8 * v3)) | 2u) >> (8 * v3);
  if (v5 > 0xFFFC)
  {
    unsigned int v4 = *(_DWORD *)&a1[v3];
  }
  else
  {
    if (v5 <= 0xFC)
    {
LABEL_4:
      unsigned int v4 = a1[v3];
      goto LABEL_9;
    }
    unsigned int v4 = *(unsigned __int16 *)&a1[v3];
  }
LABEL_9:
  unsigned int v6 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_18;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_18:
        int v9 = (v8 | (v6 << (8 * v3))) + 3;
        unsigned int v4 = v8 + 3;
        if (v3 < 4) {
          unsigned int v4 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2 || v4 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v4)
  {
    int v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(result - 8) + 8);
    return v10(a1, result);
  }
  return result;
}

void *sub_88048(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v5 > 3) {
    goto LABEL_7;
  }
  unsigned int v6 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
  if (v6 > 0xFFFC)
  {
    unsigned int v7 = *(_DWORD *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
    goto LABEL_12;
  }
  if (v6 > 0xFC)
  {
    unsigned int v7 = *(unsigned __int16 *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
  else
  {
LABEL_7:
    unsigned int v7 = a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
LABEL_12:
  if (v5 <= 3) {
    uint64_t v9 = v5;
  }
  else {
    uint64_t v9 = 4;
  }
  switch(v9)
  {
    case 1:
      int v10 = *a2;
      goto LABEL_20;
    case 2:
      int v10 = *(unsigned __int16 *)a2;
      goto LABEL_20;
    case 3:
      int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_20;
    case 4:
      int v10 = *(_DWORD *)a2;
LABEL_20:
      int v11 = (v10 | (v8 << (8 * v5))) + 3;
      unsigned int v7 = v10 + 3;
      if (v5 < 4) {
        unsigned int v7 = v11;
      }
      break;
    default:
      break;
  }
LABEL_22:
  if (v7 == 2)
  {
    uint64_t v12 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v12;
    swift_bridgeObjectRetain();
    if (v5 <= 3)
    {
      unsigned int v13 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
      if (v13 > 0xFFFC)
      {
        int v14 = 2;
        goto LABEL_45;
      }
      if (v13 > 0xFC)
      {
        LOWORD(v14) = 2;
        goto LABEL_48;
      }
    }
    *((unsigned char *)a1 + v5) = 2;
    return a1;
  }
  if (v7 == 1)
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    if (v5 > 3)
    {
LABEL_34:
      *((unsigned char *)a1 + v5) = 1;
      return a1;
    }
    int v14 = 1;
    unsigned int v15 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v15 <= 0xFFFC)
    {
      if (v15 <= 0xFC) {
        goto LABEL_34;
      }
LABEL_48:
      *(_WORD *)((char *)a1 + v5) = v14;
      return a1;
    }
LABEL_45:
    *(_DWORD *)((char *)a1 + v5) = v14;
    return a1;
  }
  if (v7)
  {
    if (v5 > 3) {
      goto LABEL_39;
    }
    unsigned int v16 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    uint64_t v17 = 2;
    if (v16 > 0xFFFC) {
      uint64_t v17 = 4;
    }
    if (v16 <= 0xFC) {
LABEL_39:
    }
      uint64_t v17 = 1;
    memcpy(a1, a2, v17 + v5);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
    if (v5 > 3) {
      goto LABEL_26;
    }
    unsigned int v18 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v18 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v5) = 0;
      return a1;
    }
    if (v18 <= 0xFC) {
LABEL_26:
    }
      *((unsigned char *)a1 + v5) = 0;
    else {
      *(_WORD *)((char *)a1 + v5) = 0;
    }
  }
  return a1;
}

unsigned __int8 *sub_8832C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
LABEL_8:
    unsigned int v9 = a1[v6];
    unsigned int v10 = v9 - 3;
    if (v9 < 3) {
      goto LABEL_26;
    }
    goto LABEL_13;
  }
  unsigned int v8 = ((1 << v7) | 2u) >> v7;
  if (v8 <= 0xFFFC)
  {
    if (v8 > 0xFC)
    {
      unsigned int v9 = *(unsigned __int16 *)&a1[v6];
      unsigned int v10 = v9 - 3;
      if (v9 < 3) {
        goto LABEL_26;
      }
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  unsigned int v9 = *(_DWORD *)&a1[v6];
  unsigned int v10 = v9 - 3;
  if (v9 < 3) {
    goto LABEL_26;
  }
LABEL_13:
  if (v6 <= 3) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = 4;
  }
  switch(v11)
  {
    case 1:
      int v12 = *a1;
      if (v6 < 4) {
        goto LABEL_24;
      }
      goto LABEL_25;
    case 2:
      int v12 = *(unsigned __int16 *)a1;
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 3:
      int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 4:
      int v12 = *(_DWORD *)a1;
      if (v6 < 4) {
LABEL_24:
      }
        v12 |= v10 << v7;
LABEL_25:
      unsigned int v9 = v12 + 3;
      break;
    default:
      break;
  }
LABEL_26:
  if (v9 == 2 || v9 == 1)
  {
    swift_bridgeObjectRelease();
    if (v6 > 3) {
      goto LABEL_35;
    }
  }
  else
  {
    if (!v9) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    if (v6 > 3)
    {
LABEL_35:
      unsigned int v14 = a2[v6];
      unsigned int v15 = v14 - 3;
      if (v14 < 3) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
  }
  unsigned int v13 = ((1 << v7) | 2u) >> v7;
  if (v13 > 0xFFFC)
  {
    unsigned int v14 = *(_DWORD *)&a2[v6];
    unsigned int v15 = v14 - 3;
    if (v14 < 3) {
      goto LABEL_53;
    }
    goto LABEL_40;
  }
  if (v13 <= 0xFC) {
    goto LABEL_35;
  }
  unsigned int v14 = *(unsigned __int16 *)&a2[v6];
  unsigned int v15 = v14 - 3;
  if (v14 < 3) {
    goto LABEL_53;
  }
LABEL_40:
  if (v6 <= 3) {
    uint64_t v16 = v6;
  }
  else {
    uint64_t v16 = 4;
  }
  switch(v16)
  {
    case 1:
      int v17 = *a2;
      if (v6 < 4) {
        goto LABEL_51;
      }
      goto LABEL_52;
    case 2:
      int v17 = *(unsigned __int16 *)a2;
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 3:
      int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 4:
      int v17 = *(_DWORD *)a2;
      if (v6 < 4) {
LABEL_51:
      }
        v17 |= v15 << v7;
LABEL_52:
      unsigned int v14 = v17 + 3;
      break;
    default:
      break;
  }
LABEL_53:
  if (v14 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    if (v6 <= 3)
    {
      unsigned int v18 = ((1 << v7) | 2u) >> v7;
      if (v18 > 0xFFFC)
      {
        int v19 = 2;
        goto LABEL_76;
      }
      if (v18 > 0xFC)
      {
        LOWORD(v19) = 2;
        goto LABEL_79;
      }
    }
    a1[v6] = 2;
    return a1;
  }
  if (v14 == 1)
  {
    *(void *)a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    if (v6 > 3)
    {
LABEL_65:
      a1[v6] = 1;
      return a1;
    }
    int v19 = 1;
    unsigned int v20 = ((1 << v7) | 2u) >> v7;
    if (v20 <= 0xFFFC)
    {
      if (v20 <= 0xFC) {
        goto LABEL_65;
      }
LABEL_79:
      *(_WORD *)&a1[v6] = v19;
      return a1;
    }
LABEL_76:
    *(_DWORD *)&a1[v6] = v19;
    return a1;
  }
  if (v14)
  {
    if (v6 > 3) {
      goto LABEL_70;
    }
    unsigned int v21 = ((1 << v7) | 2u) >> v7;
    uint64_t v22 = 2;
    if (v21 > 0xFFFC) {
      uint64_t v22 = 4;
    }
    if (v21 <= 0xFC) {
LABEL_70:
    }
      uint64_t v22 = 1;
    memcpy(a1, a2, v22 + v6);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    if (v6 > 3) {
      goto LABEL_57;
    }
    unsigned int v23 = ((1 << v7) | 2u) >> v7;
    if (v23 > 0xFFFC)
    {
      *(_DWORD *)&a1[v6] = 0;
      return a1;
    }
    if (v23 <= 0xFC) {
LABEL_57:
    }
      a1[v6] = 0;
    else {
      *(_WORD *)&a1[v6] = 0;
    }
  }
  return a1;
}

_OWORD *sub_88760(_OWORD *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v5 > 3) {
    goto LABEL_7;
  }
  unsigned int v6 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
  if (v6 > 0xFFFC)
  {
    unsigned int v7 = *(_DWORD *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
    goto LABEL_12;
  }
  if (v6 > 0xFC)
  {
    unsigned int v7 = *(unsigned __int16 *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
  else
  {
LABEL_7:
    unsigned int v7 = a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
LABEL_12:
  if (v5 <= 3) {
    uint64_t v9 = v5;
  }
  else {
    uint64_t v9 = 4;
  }
  switch(v9)
  {
    case 1:
      int v10 = *a2;
      goto LABEL_20;
    case 2:
      int v10 = *(unsigned __int16 *)a2;
      goto LABEL_20;
    case 3:
      int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_20;
    case 4:
      int v10 = *(_DWORD *)a2;
LABEL_20:
      int v11 = (v10 | (v8 << (8 * v5))) + 3;
      unsigned int v7 = v10 + 3;
      if (v5 < 4) {
        unsigned int v7 = v11;
      }
      break;
    default:
      break;
  }
LABEL_22:
  if (v7 == 2)
  {
    *a1 = *(_OWORD *)a2;
    if (v5 <= 3)
    {
      unsigned int v12 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
      if (v12 > 0xFFFC)
      {
        int v13 = 2;
        goto LABEL_45;
      }
      if (v12 > 0xFC)
      {
        LOWORD(v13) = 2;
        goto LABEL_48;
      }
    }
    *((unsigned char *)a1 + v5) = 2;
    return a1;
  }
  if (v7 == 1)
  {
    *(void *)a1 = *(void *)a2;
    if (v5 > 3)
    {
LABEL_34:
      *((unsigned char *)a1 + v5) = 1;
      return a1;
    }
    int v13 = 1;
    unsigned int v14 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v14 <= 0xFFFC)
    {
      if (v14 <= 0xFC) {
        goto LABEL_34;
      }
LABEL_48:
      *(_WORD *)((char *)a1 + v5) = v13;
      return a1;
    }
LABEL_45:
    *(_DWORD *)((char *)a1 + v5) = v13;
    return a1;
  }
  if (v7)
  {
    if (v5 > 3) {
      goto LABEL_39;
    }
    unsigned int v15 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    uint64_t v16 = 2;
    if (v15 > 0xFFFC) {
      uint64_t v16 = 4;
    }
    if (v15 <= 0xFC) {
LABEL_39:
    }
      uint64_t v16 = 1;
    memcpy(a1, a2, v16 + v5);
  }
  else
  {
    (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    if (v5 > 3) {
      goto LABEL_26;
    }
    unsigned int v17 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v17 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v5) = 0;
      return a1;
    }
    if (v17 <= 0xFC) {
LABEL_26:
    }
      *((unsigned char *)a1 + v5) = 0;
    else {
      *(_WORD *)((char *)a1 + v5) = 0;
    }
  }
  return a1;
}

unsigned __int8 *sub_88A3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
LABEL_8:
    unsigned int v9 = a1[v6];
    unsigned int v10 = v9 - 3;
    if (v9 < 3) {
      goto LABEL_26;
    }
    goto LABEL_13;
  }
  unsigned int v8 = ((1 << v7) | 2u) >> v7;
  if (v8 <= 0xFFFC)
  {
    if (v8 > 0xFC)
    {
      unsigned int v9 = *(unsigned __int16 *)&a1[v6];
      unsigned int v10 = v9 - 3;
      if (v9 < 3) {
        goto LABEL_26;
      }
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  unsigned int v9 = *(_DWORD *)&a1[v6];
  unsigned int v10 = v9 - 3;
  if (v9 < 3) {
    goto LABEL_26;
  }
LABEL_13:
  if (v6 <= 3) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = 4;
  }
  switch(v11)
  {
    case 1:
      int v12 = *a1;
      if (v6 < 4) {
        goto LABEL_24;
      }
      goto LABEL_25;
    case 2:
      int v12 = *(unsigned __int16 *)a1;
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 3:
      int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 4:
      int v12 = *(_DWORD *)a1;
      if (v6 < 4) {
LABEL_24:
      }
        v12 |= v10 << v7;
LABEL_25:
      unsigned int v9 = v12 + 3;
      break;
    default:
      break;
  }
LABEL_26:
  if (v9 == 2 || v9 == 1)
  {
    swift_bridgeObjectRelease();
    if (v6 > 3) {
      goto LABEL_35;
    }
  }
  else
  {
    if (!v9) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    if (v6 > 3)
    {
LABEL_35:
      unsigned int v14 = a2[v6];
      unsigned int v15 = v14 - 3;
      if (v14 < 3) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
  }
  unsigned int v13 = ((1 << v7) | 2u) >> v7;
  if (v13 > 0xFFFC)
  {
    unsigned int v14 = *(_DWORD *)&a2[v6];
    unsigned int v15 = v14 - 3;
    if (v14 < 3) {
      goto LABEL_53;
    }
    goto LABEL_40;
  }
  if (v13 <= 0xFC) {
    goto LABEL_35;
  }
  unsigned int v14 = *(unsigned __int16 *)&a2[v6];
  unsigned int v15 = v14 - 3;
  if (v14 < 3) {
    goto LABEL_53;
  }
LABEL_40:
  if (v6 <= 3) {
    uint64_t v16 = v6;
  }
  else {
    uint64_t v16 = 4;
  }
  switch(v16)
  {
    case 1:
      int v17 = *a2;
      if (v6 < 4) {
        goto LABEL_51;
      }
      goto LABEL_52;
    case 2:
      int v17 = *(unsigned __int16 *)a2;
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 3:
      int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 4:
      int v17 = *(_DWORD *)a2;
      if (v6 < 4) {
LABEL_51:
      }
        v17 |= v15 << v7;
LABEL_52:
      unsigned int v14 = v17 + 3;
      break;
    default:
      break;
  }
LABEL_53:
  if (v14 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (v6 <= 3)
    {
      unsigned int v18 = ((1 << v7) | 2u) >> v7;
      if (v18 > 0xFFFC)
      {
        int v19 = 2;
        goto LABEL_76;
      }
      if (v18 > 0xFC)
      {
        LOWORD(v19) = 2;
        goto LABEL_79;
      }
    }
    a1[v6] = 2;
    return a1;
  }
  if (v14 == 1)
  {
    *(void *)a1 = *(void *)a2;
    if (v6 > 3)
    {
LABEL_65:
      a1[v6] = 1;
      return a1;
    }
    int v19 = 1;
    unsigned int v20 = ((1 << v7) | 2u) >> v7;
    if (v20 <= 0xFFFC)
    {
      if (v20 <= 0xFC) {
        goto LABEL_65;
      }
LABEL_79:
      *(_WORD *)&a1[v6] = v19;
      return a1;
    }
LABEL_76:
    *(_DWORD *)&a1[v6] = v19;
    return a1;
  }
  if (v14)
  {
    if (v6 > 3) {
      goto LABEL_70;
    }
    unsigned int v21 = ((1 << v7) | 2u) >> v7;
    uint64_t v22 = 2;
    if (v21 > 0xFFFC) {
      uint64_t v22 = 4;
    }
    if (v21 <= 0xFC) {
LABEL_70:
    }
      uint64_t v22 = 1;
    memcpy(a1, a2, v22 + v6);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    if (v6 > 3) {
      goto LABEL_57;
    }
    unsigned int v23 = ((1 << v7) | 2u) >> v7;
    if (v23 > 0xFFFC)
    {
      *(_DWORD *)&a1[v6] = 0;
      return a1;
    }
    if (v23 <= 0xFC) {
LABEL_57:
    }
      a1[v6] = 0;
    else {
      *(_WORD *)&a1[v6] = 0;
    }
  }
  return a1;
}

uint64_t sub_88E60(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  if (v4 > 3)
  {
    int v5 = 4;
LABEL_7:
    char v7 = 8;
    goto LABEL_8;
  }
  unsigned int v6 = ((1 << (8 * v4)) | 2u) >> (8 * v4);
  if (v6 > 0xFFFC) {
    goto LABEL_11;
  }
  int v5 = v6 + 3;
  if (v6 <= 0xFC) {
    goto LABEL_7;
  }
  char v7 = 16;
LABEL_8:
  unsigned int v8 = (1 << v7) - v5;
  if ((v8 & 0x80000000) == 0)
  {
    if (v4 > 3) {
      goto LABEL_15;
    }
LABEL_12:
    unsigned int v9 = ((1 << (8 * v4)) | 2u) >> (8 * v4);
    uint64_t v10 = 2;
    if (v9 > 0xFFFC) {
      uint64_t v10 = 4;
    }
    if (v9 > 0xFC) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_11:
  unsigned int v8 = 0x7FFFFFFF;
  if (v4 <= 3) {
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v10 = 1;
LABEL_16:
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_35;
  }
  unint64_t v11 = v10 + v4;
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v14 = ((a2 - v8 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v14 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v14 < 2)
    {
LABEL_35:
      if (v8)
      {
        if (v4 <= 3)
        {
          unsigned int v22 = ((1 << (8 * v4)) | 2u) >> (8 * v4);
          if (v22 > 0xFFFC)
          {
            unsigned int v17 = *(_DWORD *)((char *)a1 + v4);
            unsigned int v18 = ~v17;
LABEL_45:
            unsigned int v25 = 0x7FFFFFFF;
LABEL_46:
            if (v25 > v18) {
              return -v17;
            }
            else {
              return 0;
            }
          }
          int v20 = v22 + 3;
          if (v22 > 0xFC)
          {
            int v24 = *(unsigned __int16 *)((char *)a1 + v4);
            unsigned int v17 = v24 | 0xFFFF0000;
            unsigned int v18 = v24 ^ 0xFFFF;
            char v19 = 16;
          }
          else
          {
            int v23 = *((unsigned __int8 *)a1 + v4);
            unsigned int v17 = v23 | 0xFFFFFF00;
            unsigned int v18 = v23 ^ 0xFF;
            char v19 = 8;
          }
        }
        else
        {
          int v16 = *((unsigned __int8 *)a1 + v4);
          unsigned int v17 = v16 | 0xFFFFFF00;
          unsigned int v18 = v16 ^ 0xFF;
          char v19 = 8;
          int v20 = 4;
        }
        unsigned int v25 = (1 << v19) - v20;
        if ((v25 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        goto LABEL_45;
      }
      return 0;
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_35;
  }
LABEL_27:
  int v15 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v15 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v11 | v15) + 1;
}

void sub_890FC(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
    int v8 = 4;
LABEL_5:
    char v9 = 8;
    goto LABEL_6;
  }
  unsigned int v11 = ((1 << v7) | 2u) >> v7;
  if (v11 > 0xFFFC) {
    goto LABEL_12;
  }
  int v8 = v11 + 3;
  if (v11 <= 0xFC) {
    goto LABEL_5;
  }
  char v9 = 16;
LABEL_6:
  unsigned int v10 = (1 << v9) - v8;
  if ((v10 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
LABEL_12:
  unsigned int v10 = 0x7FFFFFFF;
  if (v6 > 3)
  {
LABEL_16:
    uint64_t v13 = 1;
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v12 = ((1 << v7) | 2u) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFC) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFC) {
    goto LABEL_16;
  }
LABEL_17:
  size_t v14 = v13 + v6;
  if (a3 <= v10)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = ((a3 - v10 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v14)
      {
        int v19 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        return;
      case 3:
        goto LABEL_53;
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_53:
      __break(1u);
      JUMPOUT(0x893BCLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return;
      }
LABEL_37:
      int v20 = -a2;
      if (v6 > 3) {
        goto LABEL_38;
      }
      unsigned int v21 = ((1 << v7) | 2u) >> v7;
      if (v21 > 0xFFFC)
      {
        *(_DWORD *)&a1[v6] = v20;
      }
      else if (v21 <= 0xFC)
      {
LABEL_38:
        a1[v6] = v20;
      }
      else
      {
        *(_WORD *)&a1[v6] = v20;
      }
      return;
  }
}

uint64_t sub_893E4(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  if (v2 > 3) {
    goto LABEL_4;
  }
  unsigned int v4 = ((1 << (8 * v2)) | 2u) >> (8 * v2);
  if (v4 > 0xFFFC)
  {
    uint64_t result = *(unsigned int *)&a1[v2];
  }
  else
  {
    if (v4 <= 0xFC)
    {
LABEL_4:
      uint64_t result = a1[v2];
      goto LABEL_9;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v2];
  }
LABEL_9:
  if (result >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_18;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v7 = (v6 | ((result - 3) << (8 * v2))) + 3;
        unsigned int v8 = v6 + 3;
        if (v2 >= 4) {
          uint64_t result = v8;
        }
        else {
          uint64_t result = v7;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_89510(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 0x10) {
    size_t v5 = 16;
  }
  else {
    size_t v5 = v4;
  }
  if (a2 > 2)
  {
    unsigned int v6 = a2 - 3;
    if (v5 < 4)
    {
      int v8 = (v6 >> (8 * v5)) + 3;
      v6 &= ~(-1 << (8 * v5));
      char v9 = (int *)&a1[v5];
      unsigned int v10 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
      if (v10 > 0xFFFC)
      {
        *char v9 = v8;
      }
      else if (v10 > 0xFC)
      {
        *(_WORD *)char v9 = v8;
      }
      else
      {
        *(unsigned char *)char v9 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
    }
    if (v5 <= 3) {
      int v11 = v5;
    }
    else {
      int v11 = 4;
    }
    bzero(a1, v5);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v6;
        break;
      case 3:
        *(_WORD *)a1 = v6;
        a1[2] = BYTE2(v6);
        break;
      case 4:
        *(_DWORD *)a1 = v6;
        break;
      default:
        *a1 = v6;
        break;
    }
  }
  else
  {
    if (v5 > 3)
    {
LABEL_6:
      a1[v5] = a2;
      return;
    }
    unsigned int v7 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v7 > 0xFFFC)
    {
      *(_DWORD *)&a1[v5] = a2;
    }
    else
    {
      if (v7 <= 0xFC) {
        goto LABEL_6;
      }
      *(_WORD *)&a1[v5] = a2;
    }
  }
}

uint64_t sub_896A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != 1)
  {
    if (a5) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_89704(uint64_t a1, uint64_t a2)
{
  return sub_8BE94(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_8971C);
}

uint64_t sub_8971C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != 1)
  {
    if (a5) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_8977C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_8BEC8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_896A4);
}

uint64_t *sub_89794(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_8BF60(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_896A4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_8971C);
}

__n128 initializeWithTake for RCSOperationController.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *sub_897D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_8C004(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_8971C);
}

uint64_t sub_897EC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_89834(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_8987C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_89894(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

uint64_t type metadata accessor for RCSGroupController.GroupCreateError()
{
  return sub_8B108();
}

uint64_t sub_898CC()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_89908(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_89940(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RCSMessageMetadata.Entry(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *sub_899AC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_899EC(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_89A34(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for CTLazuliErrorType(uint64_t a1)
{
}

uint64_t sub_89A84()
{
  uint64_t result = sub_F6F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_89B1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_89C28(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = a2 + v12;
    uint64_t v15 = sub_F6F30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_89C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = a4;
  switch(a5)
  {
    case 0:
    case 2:
    case 4:
      goto LABEL_3;
    case 1:
    case 3:
      swift_bridgeObjectRetain();
LABEL_3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_89CB4(uint64_t a1, uint64_t a2)
{
  sub_89D38(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_F6F30();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_89D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 4u)
  {
    if (((1 << a5) & 0x15) == 0) {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_89DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_89C28(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_89E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_89C28(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v10;
  sub_89D38(v11, v12, v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_89F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_89FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_89D38(v7, v8, v9, v10, v12);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_8A04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8A060);
}

uint64_t sub_8A060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 251)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 > 4) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_F6F30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_8A108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_8A11C);
}

uint64_t sub_8A11C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 251)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_F6F30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_8A1C0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_8A200()
{
  uint64_t v2 = (uint64_t)(v0 + 2);
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_8C5D8;
  return sub_9CA18(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_8A2C4(uint64_t a1)
{
  return sub_8272C(a1, v1, &qword_1294D0, (uint64_t)&unk_11F7B0, (uint64_t)sub_8A364);
}

unint64_t sub_8A304()
{
  unint64_t result = qword_1294C8;
  if (!qword_1294C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1294C8);
  }
  return result;
}

uint64_t sub_8A358()
{
  return sub_8AEB8(&qword_1294D0);
}

uint64_t sub_8A364(uint64_t a1)
{
  return sub_8AF64(a1, &qword_1294D0, (uint64_t (*)(uint64_t, uint64_t))sub_82A30);
}

uint64_t type metadata accessor for RCSGroupController.ParticipantModificationContext()
{
  return sub_8B108();
}

uint64_t sub_8A39C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 120) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_8A49C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  uint64_t v7 = v2[12];
  uint64_t v10 = v2[13];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_8C5A0;
  return sub_7F784(a1, a2, v4, v5, v6, (uint64_t)(v2 + 7), v7, v10);
}

uint64_t sub_8A5E8()
{
  sub_6BEC(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_8A638()
{
  uint64_t v2 = (uint64_t)(v0 + 2);
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_8C5DC;
  return sub_9CA18(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_8A6FC(uint64_t a1)
{
  return sub_8272C(a1, v1, &qword_129518, (uint64_t)&unk_11F838, (uint64_t)sub_8A748);
}

uint64_t sub_8A73C()
{
  return sub_8AEB8(&qword_129518);
}

uint64_t sub_8A748(uint64_t a1)
{
  return sub_8AF64(a1, &qword_129518, (uint64_t (*)(uint64_t, uint64_t))sub_82950);
}

uint64_t type metadata accessor for RCSGroupController.OperationType()
{
  return sub_8B108();
}

uint64_t sub_8A780()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_8C18(&qword_127D08);
  uint64_t v2 = *(void *)(sub_F7C60() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1) {
    swift_errorRelease();
  }
  else {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  }

  return _swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_8A8B8()
{
  uint64_t v2 = v0[5];
  sub_8C18(&qword_127D08);
  uint64_t v3 = *(void *)(sub_F7C60() - 8);
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_8C5E0;
  uint64_t v8 = (void *)swift_task_alloc();
  _OWORD v7[2] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_8C5D4;
  return RCSOperationController.operation<A>(id:completedWithResult:)(v4, v5, v6, v2);
}

uint64_t sub_8AA14()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(sub_F7770() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v9, v6);
  }
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | v8 | 7);
}

uint64_t sub_8AC10(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(sub_F7770() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(uint64_t **)(v2 + 32);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + v10;
  uint64_t v14 = *(void *)(v2 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_8C5A4;
  return sub_7A3E0(a1, a2, v11, v12, v13, v14);
}

uint64_t sub_8ADE0()
{
  uint64_t v2 = (uint64_t)(v0 + 2);
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_8C5E4;
  return sub_9CA18(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_8AEA4(uint64_t a1)
{
  return sub_82564(a1, v1);
}

uint64_t sub_8AEAC()
{
  return sub_8AEB8(qword_129558);
}

uint64_t sub_8AEB8(uint64_t *a1)
{
  uint64_t v2 = sub_551C(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_8AF44(uint64_t a1)
{
  return sub_8AF64(a1, qword_129558, (uint64_t (*)(uint64_t, uint64_t))sub_828E4);
}

uint64_t sub_8AF64(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(sub_551C(a2) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

void sub_8AFF8(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_791E8(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_8B018()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_8B050(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_8C5A8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_127CE8 + dword_127CE8);
  return v6(a1, v4);
}

uint64_t sub_8B108()
{
  return swift_getGenericMetadata();
}

uint64_t sub_8B138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_8B140()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_8B20C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + ((v6 + 72) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    unint64_t v12 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)(v13 + 24);
    *(void *)(v12 + 24) = v14;
    *(void *)(v12 + 32) = *(void *)(v13 + 32);
    uint64_t v15 = **(void (***)(unint64_t, unint64_t, uint64_t))(v14 - 8);
    swift_unknownObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = (void *)((v12 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)((v13 + 47) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    uint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v18 = *v19;
    uint64_t v20 = ((unint64_t)v18 + v6 + 8) & ~v6;
    uint64_t v21 = ((unint64_t)v19 + v6 + 8) & ~v6;
    unsigned int v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v20, v21, AssociatedTypeWitness);
    int v23 = (void *)((v7 + v20) & 0xFFFFFFFFFFFFFFF8);
    int v24 = (void *)((v7 + v21) & 0xFFFFFFFFFFFFFFF8);
    *int v23 = *v24;
    v23[1] = v24[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_8B418(uint64_t a1)
{
  uint64_t v1 = a1 + 15;
  swift_unknownObjectRelease();
  v1 &= 0xFFFFFFFFFFFFFFF8;
  sub_6BEC(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))((((((v1 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ *(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)+ 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);

  return swift_bridgeObjectRelease();
}

void *sub_8B4F8(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v3 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v4 + 24);
  *(void *)(v3 + 24) = v5;
  *(void *)(v3 + 32) = *(void *)(v4 + 32);
  uint64_t v6 = **(void (***)(unint64_t, unint64_t, uint64_t))(v5 - 8);
  swift_unknownObjectRetain();
  v6(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8, v4, v5);
  uint64_t v7 = (void *)((v3 + 47) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)((v4 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = v12 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = ((unint64_t)v9 + v15 + 8) & ~v15;
  uint64_t v17 = ((unint64_t)v10 + v15 + 8) & ~v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v16, v17, AssociatedTypeWitness);
  uint64_t v18 = *(void *)(v14 + 48) + 7;
  uint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_8B674(void *a1, void *a2)
{
  unint64_t v3 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v4 = (unint64_t)a1 + 15;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v3 &= 0xFFFFFFFFFFFFFFF8;
  sub_2A890((uint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8), (uint64_t *)v3);
  uint64_t v5 = (void *)(((v4 & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)((v3 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, v14, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v11 + 40) + 7;
  uint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_8B7D8(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v3 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v5 = *(_OWORD *)v4;
  long long v6 = *(_OWORD *)(v4 + 16);
  *(void *)(v3 + 32) = *(void *)(v4 + 32);
  *(_OWORD *)unint64_t v3 = v5;
  *(_OWORD *)(v3 + 16) = v6;
  uint64_t v7 = (_OWORD *)((v3 + 47) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (_OWORD *)((v4 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)v9 + v14 + 8) & ~v14;
  uint64_t v16 = ((unint64_t)v10 + v14 + 8) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v15, v16, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v13 + 32) + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v13 + 32)
                                                                                       + 7
                                                                                       + v16) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_8B8DC(void *a1, void *a2)
{
  unint64_t v3 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_unknownObjectRelease();
  unint64_t v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v3 &= 0xFFFFFFFFFFFFFFF8;
  sub_6BEC(v4);
  long long v5 = *(_OWORD *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(void *)(v4 + 32) = *(void *)(v3 + 32);
  *(_OWORD *)unint64_t v4 = v5;
  *(_OWORD *)(v4 + 16) = v6;
  uint64_t v7 = (void *)((v4 + 47) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)((v3 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = v12 + 40;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)v9 + v14 + 8) & ~v14;
  uint64_t v16 = ((unint64_t)v10 + v14 + 8) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v15, v16, AssociatedTypeWitness);
  uint64_t v17 = *(void *)(v13 + 24) + 7;
  uint64_t v18 = (void *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_8BA2C(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  unsigned int v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v10 = ((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + ((v9 + 72) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v11 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = a2 - v8 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v10);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x8BBECLL);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v10);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if ((v7 & 0x80000000) != 0)
  {
    uint64_t v19 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v19(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
              + v9
              + 8) & ~v9);
  }
  else
  {
    uint64_t v18 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
}

void sub_8BC00(void *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((*(void *)(v6 + 64) + ((v8 + 72) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              uint64_t v18 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
              v18(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ v8+ 8) & ~v8, a2);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v17 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v17 = (a2 - 1);
              }
              *a1 = v17;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + ((v8 + 72) & ~v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v11 = a3 - v9 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + ((v8 + 72) & ~v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v15 = v14;
  }
  else {
    int v15 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + ((v8 + 72) & ~v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x8BE2CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

uint64_t sub_8BE7C(uint64_t a1, uint64_t a2)
{
  return sub_8BE94(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_89D38);
}

uint64_t sub_8BE94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t sub_8BEB0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_8BEC8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_89C28);
}

uint64_t sub_8BEC8(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  return a1;
}

uint64_t *sub_8BF34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_8BF60(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_89C28, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_89D38);
}

uint64_t *sub_8BF60(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  uint64_t v16 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *sub_8BFEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_8C004(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_89D38);
}

uint64_t *sub_8C004(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  uint64_t v12 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v12);
  return a1;
}

uint64_t sub_8C058(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_8C0A0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_8C0E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_8C0F0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

uint64_t sub_8C0F8()
{
  return sub_8C140(&qword_129670, type metadata accessor for FileAttributeKey);
}

uint64_t sub_8C140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_8C188()
{
  return sub_8C140(&qword_129678, type metadata accessor for FileAttributeKey);
}

uint64_t sub_8C1D0()
{
  return sub_8C140(&qword_129680, type metadata accessor for Key);
}

uint64_t sub_8C218()
{
  return sub_8C140(&qword_129688, type metadata accessor for Key);
}

uint64_t sub_8C260()
{
  return sub_8C140(&qword_129690, type metadata accessor for Key);
}

uint64_t sub_8C2A8()
{
  return sub_8C140(&qword_129698, type metadata accessor for FileAttributeKey);
}

void type metadata accessor for FZMessageFlags(uint64_t a1)
{
}

unsigned char *sub_8C304(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8C3D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for RCSGroupController.OperationType.ParticipantModificationType()
{
  return sub_8B108();
}

uint64_t sub_8C410()
{
  return swift_getWitnessTable();
}

uint64_t sub_8C42C()
{
  return sub_8C140(&qword_129748, type metadata accessor for FZMessageFlags);
}

uint64_t sub_8C474()
{
  return sub_8C140(&qword_129750, type metadata accessor for FZMessageFlags);
}

uint64_t sub_8C4BC()
{
  return sub_8C140(&qword_129758, type metadata accessor for FZMessageFlags);
}

uint64_t sub_8C504()
{
  return sub_8C140(&qword_129760, type metadata accessor for FZMessageFlags);
}

uint64_t sub_8C54C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t Logger.groups.unsafeMutableAddressor()
{
  return sub_8C84C(&qword_129088, (uint64_t)static Logger.groups);
}

uint64_t sub_8C60C(uint64_t a1)
{
  return sub_8C7C0(a1, static Logger.rcs);
}

uint64_t Logger.rcs.unsafeMutableAddressor()
{
  return sub_8C84C(&qword_129070, (uint64_t)static Logger.rcs);
}

uint64_t static Logger.rcs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_8C8C4(&qword_129070, (uint64_t)static Logger.rcs, a1);
}

uint64_t sub_8C66C(uint64_t a1)
{
  return sub_8C7C0(a1, static Logger.reachability);
}

uint64_t Logger.reachability.unsafeMutableAddressor()
{
  return sub_8C84C(&qword_129078, (uint64_t)static Logger.reachability);
}

uint64_t static Logger.reachability.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_8C8C4(&qword_129078, (uint64_t)static Logger.reachability, a1);
}

uint64_t sub_8C6E0(uint64_t a1)
{
  return sub_8C7C0(a1, static Logger.chatbot);
}

uint64_t Logger.chatbot.unsafeMutableAddressor()
{
  return sub_8C84C(&qword_129080, (uint64_t)static Logger.chatbot);
}

uint64_t static Logger.chatbot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_8C8C4(&qword_129080, (uint64_t)static Logger.chatbot, a1);
}

uint64_t sub_8C74C(uint64_t a1)
{
  return sub_8C7C0(a1, static Logger.groups);
}

uint64_t static Logger.groups.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_8C8C4(&qword_129088, (uint64_t)static Logger.groups, a1);
}

uint64_t sub_8C794(uint64_t a1)
{
  return sub_8C7C0(a1, static Logger.operations);
}

uint64_t sub_8C7C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_F70F0();
  sub_D994(v3, a2);
  sub_8B44(v3, (uint64_t)a2);
  sub_F70C0();
  return sub_F70E0();
}

uint64_t Logger.operations.unsafeMutableAddressor()
{
  return sub_8C84C(&qword_129090, (uint64_t)static Logger.operations);
}

uint64_t sub_8C84C(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_F70F0();

  return sub_8B44(v3, a2);
}

uint64_t static Logger.operations.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_8C8C4(&qword_129090, (uint64_t)static Logger.operations, a1);
}

uint64_t sub_8C8C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_F70F0();
  uint64_t v6 = sub_8B44(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

unint64_t RCSDestination.description.getter()
{
  sub_28058(v0, (uint64_t)v18);
  if (v20)
  {
    sub_1E87C(v18, (uint64_t)v15);
    *(void *)&long long v24 = 0;
    *((void *)&v24 + 1) = 0xE000000000000000;
    sub_F78A0(46);
    swift_bridgeObjectRelease();
    uint64_t v1 = v16;
    uint64_t v2 = v17;
    sub_6BA8(v15, v16);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v21, v1, v2);
    sub_6C3C((uint64_t)v21, (uint64_t)v22);
    if (*((void *)&v22[0] + 1))
    {
      long long v24 = v22[0];
      long long v25 = v22[1];
      v26[0] = v23[0];
      *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v23 + 9);
      uint64_t v3 = RCSHandle.rawValue.getter();
      uint64_t v5 = v4;
      sub_6D74(v21);
    }
    else
    {
      uint64_t v3 = 0x3E6C696E3CLL;
      uint64_t v5 = (void *)0xE500000000000000;
    }
    v29._uint64_t countAndFlagsBits = v3;
    v29._object = v5;
    sub_F72E0(v29);
    swift_bridgeObjectRelease();
    v30._object = (void *)0x80000000001040B0;
    v30._uint64_t countAndFlagsBits = 0xD000000000000011;
    sub_F72E0(v30);
    uint64_t v10 = v16;
    uint64_t v11 = v17;
    sub_6BA8(v15, v16);
    v12._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    if (v12._object)
    {
      object = v12._object;
    }
    else
    {
      v12._uint64_t countAndFlagsBits = 0x3E6C696E3CLL;
      object = (void *)0xE500000000000000;
    }
    v12._object = object;
    sub_F72E0(v12);
    swift_bridgeObjectRelease();
    unint64_t v9 = 0xD000000000000019;
    sub_6BEC((uint64_t)v15);
  }
  else
  {
    long long v24 = v18[0];
    long long v25 = v18[1];
    v26[0] = *(_OWORD *)v19;
    *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)&v19[9];
    *(void *)&v22[0] = 0;
    *((void *)&v22[0] + 1) = 0xE000000000000000;
    sub_F78A0(25);
    swift_bridgeObjectRelease();
    *(void *)&v22[0] = 0xD000000000000016;
    *((void *)&v22[0] + 1) = 0x80000000001040D0;
    uint64_t v6 = RCSHandle.rawValue.getter();
    uint64_t v8 = v7;
    sub_6D20((uint64_t)&v24);
    v27._uint64_t countAndFlagsBits = v6;
    v27._object = v8;
    sub_F72E0(v27);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 41;
    v28._object = (void *)0xE100000000000000;
    sub_F72E0(v28);
    return *(void *)&v22[0];
  }
  return v9;
}

uint64_t destroy for RCSDestination(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 57);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1)
  {
    return sub_6BEC(a1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for RCSDestination(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 57);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    char v5 = 1;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 57) = v5;
  return a1;
}

uint64_t assignWithCopy for RCSDestination(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 57);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      sub_6BEC(a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 57);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 57) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(_WORD *)(a1 + 56) = *(unsigned __int8 *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

__n128 initializeWithTake for RCSDestination(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RCSDestination(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 57);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      sub_6BEC(a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 57);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }
    *(unsigned char *)(a1 + 57) = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSDestination(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 57);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RCSDestination(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 42) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 57) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_8CFEC(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 57);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_8D008(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 57) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RCSDestination()
{
  return &type metadata for RCSDestination;
}

uint64_t sub_8D044()
{
  uint64_t v0 = sub_F70F0();
  sub_D994(v0, qword_129768);
  uint64_t v1 = sub_8B44(v0, (uint64_t)qword_129768);
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_8B44(v0, (uint64_t)static Logger.rcs);
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_8D10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for RCSSpamReportOperation();
  unint64_t v9 = (void *)(a5 + *(int *)(result + 28));
  *unint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

void (*RCSSpamReportingController.delegate.modify(void *a1))(void **a1, char a2)
{
  unsigned int v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_8D208;
}

void sub_8D208(void **a1, char a2)
{
  unsigned int v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_8D288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RCSSpamReportingController.OperationType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for RCSSpamReportingController.OperationID();
  return sub_F6F20();
}

uint64_t sub_8D314()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  if (*(unsigned char *)(v0 + 32))
  {
    sub_F78A0(18);
    swift_bridgeObjectRelease();
    uint64_t v5 = 0x53746F6274616863;
  }
  else
  {
    uint64_t v5 = 0x286D617053703270;
  }
  uint64_t v7 = v5;
  v8._uint64_t countAndFlagsBits = v1;
  v8._object = v2;
  sub_F72E0(v8);
  v9._uint64_t countAndFlagsBits = 44;
  v9._object = (void *)0xE100000000000000;
  sub_F72E0(v9);
  v10._uint64_t countAndFlagsBits = v3;
  v10._object = v4;
  sub_F72E0(v10);
  v11._uint64_t countAndFlagsBits = 41;
  v11._object = (void *)0xE100000000000000;
  sub_F72E0(v11);
  return v7;
}

uint64_t sub_8D3F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RCSOperationController.OperationID.description.getter(a1, WitnessTable);
}

uint64_t RCSSpamReportingController.__allocating_init(delegate:operationConfiguration:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_8FD70(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t RCSSpamReportingController.init(delegate:operationConfiguration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_8FD70(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

unint64_t RCSSpamReportingController.SpamReportOperationError.errorDescription.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v2 + 16))(v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0xD000000000000018;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      sub_F78A0(45);
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD00000000000002BLL;
      unint64_t v10 = 0x80000000001040F0;
      v11._uint64_t countAndFlagsBits = sub_F7420();
      sub_F72E0(v11);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
      uint64_t v7 = *v4;
      Swift::String v8 = (void *)v4[1];
      unint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      sub_F78A0(18);
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000010;
      unint64_t v10 = 0x8000000000103E90;
      v12._uint64_t countAndFlagsBits = v7;
      v12._object = v8;
      sub_F72E0(v12);
LABEL_5:
      swift_bridgeObjectRelease();
      unint64_t result = v9;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, a1);
      unint64_t result = 0xD000000000000032;
      break;
  }
  return result;
}

uint64_t RCSSpamReportingController.spamReportCompleted(operationResult:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_6BA8(a1, v7);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  unint64_t v10 = v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_6BA8(a1, v11);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12))
  {
    if (qword_129098 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_F70F0();
    sub_8B44(v13, (uint64_t)qword_129768);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_F70D0();
    os_log_type_t v15 = sub_F7680();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      v38[0] = sub_A3FC(v37, v10, v40);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v14, v15, "Spam report operation completed with ID %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    sub_6BA8(a1, v21);
    char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
    id v38[3] = &type metadata for Bool;
    LOBYTE(v38[0]) = v23 & 1;
    char v39 = 0;
    sub_8FE7C((uint64_t)v38, (uint64_t)v40);
  }
  else
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_6BA8(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    if (v19)
    {
      uint64_t v20 = v19;
    }
    else
    {
      type metadata accessor for RCSSpamReportingController.SpamReportOperationError();
      swift_getWitnessTable();
      uint64_t v20 = swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    if (qword_129098 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_F70F0();
    sub_8B44(v24, (uint64_t)qword_129768);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    long long v25 = sub_F70D0();
    os_log_type_t v26 = sub_F7690();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      os_log_type_t v35 = (void *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v40[0] = v36;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      v38[0] = sub_A3FC(v37, v10, v40);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2112;
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      v38[0] = v28;
      sub_F77B0();
      void *v35 = v28;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v25, v26, "Spam report operation failed with ID %s error %@", (uint8_t *)v27, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    v40[0] = v20;
    char v41 = 1;
  }
  sub_F74F0();
  uint64_t v29 = sub_F7520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 0, 1, v29);
  uint64_t v30 = *(void *)(v2 + 24);
  sub_671A4((uint64_t)v40, (uint64_t)v38);
  char v31 = (void *)swift_allocObject();
  _OWORD v31[2] = 0;
  id v31[3] = 0;
  uint64_t v32 = v37;
  v31[4] = v30;
  v31[5] = v32;
  v31[6] = v10;
  sub_8FE7C((uint64_t)v38, (uint64_t)(v31 + 7));
  swift_retain();
  sub_9EAC((uint64_t)v6, (uint64_t)&unk_129788, (uint64_t)v31);
  swift_release();
  return sub_6720C((uint64_t)v40);
}

uint64_t sub_8DD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_12ACB0 + dword_12ACB0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_930A4;
  return v13(a5, a6, a7);
}

uint64_t RCSSpamReportingController.spamReportFailed(with:operationID:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_129098 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_F70F0();
  sub_8B44(v10, (uint64_t)qword_129768);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v11 = sub_F70D0();
  os_log_type_t v12 = sub_F7690();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    char v23 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v26 = v24;
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_A3FC(a2, a3, &v26);
    os_log_t v22 = v11;
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2112;
    swift_errorRetain();
    uint64_t v14 = a2;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v25 = v15;
    sub_F77B0();
    *char v23 = v15;
    a2 = v14;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v16 = v22;
    _os_log_impl(&dword_0, v22, v12, "Spam report operation failed with ID %s error %@", (uint8_t *)v13, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_F74F0();
  uint64_t v17 = sub_F7520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
  uint64_t v18 = *(void *)(v4 + 24);
  uint64_t v19 = (void *)swift_allocObject();
  _OWORD v19[2] = 0;
  v19[3] = 0;
  v19[4] = v18;
  v19[5] = a2;
  v19[6] = a3;
  void v19[7] = a1;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_retain();
  sub_9EAC((uint64_t)v9, (uint64_t)&unk_129798, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_8E198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a7;
  swift_errorRetain();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_12ACA8 + dword_12ACA8);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_8E274;
  return v13(a5, a6, a7, 1);
}

uint64_t sub_8E274()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t RCSSpamReportingController.reportSpam(to:forDestination:withSpamReportInfo:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[29] = a6;
  v7[30] = v6;
  v7[27] = a4;
  v7[28] = a5;
  v7[25] = a2;
  v7[26] = a3;
  v7[24] = a1;
  uint64_t v8 = *v6;
  v7[31] = *(void *)(*v6 + 88);
  v7[32] = *(void *)(v8 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[33] = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  v7[34] = v10;
  v7[35] = *(void *)(v10 + 64);
  v7[36] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for RCSSpamReportingController.OperationID();
  v7[37] = v11;
  v7[38] = *(void *)(v11 - 8);
  v7[39] = swift_task_alloc();
  return _swift_task_switch(sub_8E504, 0, 0);
}

uint64_t sub_8E504()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 320) = Strong;
  if (Strong)
  {
    uint64_t v2 = v0 + 56;
    uint64_t v27 = Strong;
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v23 = *(void *)(v0 + 200);
    unsigned int v3 = [*(id *)(v0 + 224) isChatbot];
    uint64_t v4 = 56;
    if (v3) {
      uint64_t v4 = 96;
    }
    *(void *)(v0 + v4) = *(void *)(v0 + 192);
    if (v3) {
      uint64_t v2 = v0 + 96;
    }
    uint64_t v6 = *(void *)(v0 + 304);
    uint64_t v5 = *(void *)(v0 + 312);
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 256);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 264);
    uint64_t v10 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v24 = *(void **)(v0 + 224);
    uint64_t v25 = *(void *)(v0 + 208);
    *(void *)(v2 + 8) = v23;
    *(void *)(v2 + 16) = v25;
    *(void *)(v2 + 24) = v28;
    *(unsigned char *)(v2 + 32) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_8D288(v2, v5);
    *(void *)(v0 + 328) = *(void *)(v10 + 24);
    *(void *)(v0 + 40) = v7;
    *(void *)(v0 + 48) = swift_getWitnessTable();
    uint64_t v13 = sub_28728((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(v13, v5, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v21, v20, v22);
    unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = (char *)swift_allocObject();
    *(void *)(v0 + 336) = v15;
    *((void *)v15 + 2) = v9;
    *((void *)v15 + 3) = v11;
    *((void *)v15 + 4) = v24;
    *((void *)v15 + 5) = v27;
    *((void *)v15 + 6) = v25;
    *((void *)v15 + 7) = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v15[v14], v21, v22);
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_129130 + dword_129130);
    swift_bridgeObjectRetain();
    id v16 = v24;
    swift_unknownObjectRetain();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_8E868;
    return v26(v0 + 136, v0 + 16, (uint64_t)&unk_1297B0, (uint64_t)v15);
  }
  else
  {
    type metadata accessor for RCSSpamReportingController.SpamReportOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_8E868()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 328);
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_8EAB4;
  }
  else
  {
    sub_6BEC(v2 + 136);
    uint64_t v4 = sub_8E9A4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_8E9A4()
{
  swift_release();
  sub_6BEC(v0 + 16);
  return _swift_task_switch(sub_8EA18, 0, 0);
}

uint64_t sub_8EA18()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_8EAB4()
{
  swift_release();
  return _swift_task_switch(sub_8EB1C, 0, 0);
}

uint64_t sub_8EB1C()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_6BEC((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_8EBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a8;
  v8[12] = v13;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v8[5] = a2;
  v8[6] = a3;
  v8[4] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[13] = AssociatedTypeWitness;
  v8[14] = *(void *)(AssociatedTypeWitness - 8);
  v8[15] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for RCSSpamReportOperation();
  v8[16] = v10;
  v8[17] = *(void *)(v10 - 8);
  v8[18] = swift_task_alloc();
  return _swift_task_switch(sub_8ED1C, 0, 0);
}

uint64_t sub_8ED1C()
{
  uint64_t v24 = v0;
  if (qword_129098 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = sub_F70F0();
  sub_8B44(v2, (uint64_t)qword_129768);
  id v3 = v1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7680();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[5];
  uint64_t v9 = (void *)v0[6];
  if (v7)
  {
    uint64_t v22 = v0[4];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    if ([v9 isChatbot]) {
      uint64_t v11 = 0x746F627461684328;
    }
    else {
      uint64_t v11 = 0x746361746E6F4328;
    }
    v0[2] = sub_A3FC(v11, 0xE900000000000029, &v23);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[3] = sub_A3FC(v22, v8, &v23);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v5, v6, "report spam %s operation created with ID %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = v0[18];
  uint64_t v13 = v0[15];
  uint64_t v15 = v0[12];
  uint64_t v14 = v0[13];
  uint64_t v17 = v0[4];
  uint64_t v16 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v0[14] + 16))(v13, v0[10], v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v18 = (void *)(v12 + *(int *)(type metadata accessor for RCSSpamReportOperation() + 28));
  *uint64_t v18 = v17;
  v18[1] = v16;
  v0[19] = *(void *)(v15 + 32);
  v0[20] = (v15 + 32) & 0xFFFFFFFFFFFFLL | 0x8D61000000000000;
  sub_F74E0();
  swift_bridgeObjectRetain();
  v0[21] = sub_F74D0();
  uint64_t v20 = sub_F7470();
  return _swift_task_switch(sub_8F064, v20, v19);
}

uint64_t sub_8F064()
{
  uint64_t v1 = v0[18];
  uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[19];
  uint64_t v2 = v0[17];
  uint64_t v12 = v0[16];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[6];
  swift_release();
  v11(v7, v5, v8, v1, v6, v4, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t RCSSpamReportingController.reportChatbotSpam(to:forChatbot:withSpamReportInfo:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[24] = a6;
  v7[25] = v6;
  v7[22] = a4;
  v7[23] = a5;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  uint64_t v8 = *v6;
  v7[26] = *(void *)(*v6 + 88);
  v7[27] = *(void *)(v8 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[28] = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  v7[29] = v10;
  v7[30] = *(void *)(v10 + 64);
  v7[31] = swift_task_alloc();
  return _swift_task_switch(sub_8F26C, 0, 0);
}

uint64_t sub_8F26C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 256) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(void *)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 224);
    uint64_t v4 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 216);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v21 = *(void **)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 152);
    *(void *)(v0 + 264) = *(void *)(*(void *)(v0 + 200) + 24);
    *(void *)(v0 + 56) = v10;
    *(void *)(v0 + 64) = v9;
    *(void *)(v0 + 72) = v19;
    *(void *)(v0 + 80) = v8;
    *(unsigned char *)(v0 + 88) = 1;
    *(void *)(v0 + 40) = type metadata accessor for RCSSpamReportingController.OperationID();
    *(void *)(v0 + 48) = swift_getWitnessTable();
    uint64_t v11 = sub_28728((uint64_t *)(v0 + 16));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_8D288(v0 + 56, (uint64_t)v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v18, v5);
    unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v13 = (char *)swift_allocObject();
    *(void *)(v0 + 272) = v13;
    *((void *)v13 + 2) = v6;
    *((void *)v13 + 3) = v7;
    *((void *)v13 + 4) = v2;
    *((void *)v13 + 5) = v19;
    *((void *)v13 + 6) = v8;
    *((void *)v13 + 7) = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v13[v12], v3, v5);
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_129130 + dword_129130);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v14 = v21;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v15;
    void *v15 = v0;
    v15[1] = sub_8F570;
    return v20(v0 + 96, v0 + 16, (uint64_t)&unk_1297C8, (uint64_t)v13);
  }
  else
  {
    type metadata accessor for RCSSpamReportingController.SpamReportOperationError();
    swift_getWitnessTable();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_8F570()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 264);
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_8F78C;
  }
  else
  {
    sub_6BEC(v2 + 96);
    uint64_t v4 = sub_8F6AC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_8F6AC()
{
  swift_release();
  sub_6BEC(v0 + 16);
  return _swift_task_switch(sub_8F720, 0, 0);
}

uint64_t sub_8F720()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_8F78C()
{
  swift_release();
  return _swift_task_switch(sub_8F7F4, 0, 0);
}

uint64_t sub_8F7F4()
{
  swift_unknownObjectRelease();
  sub_6BEC(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_8F86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = a8;
  v8[11] = v13;
  v8[8] = a6;
  v8[9] = a7;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  void v8[3] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[12] = AssociatedTypeWitness;
  v8[13] = *(void *)(AssociatedTypeWitness - 8);
  v8[14] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for RCSSpamReportOperation();
  v8[15] = v10;
  v8[16] = *(void *)(v10 - 8);
  v8[17] = swift_task_alloc();
  return _swift_task_switch(sub_8F9C4, 0, 0);
}

uint64_t sub_8F9C4()
{
  uint64_t v19 = v0;
  if (qword_129098 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_F70F0();
  sub_8B44(v1, (uint64_t)qword_129768);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_F70D0();
  os_log_type_t v3 = sub_F7680();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_A3FC(v6, v5, &v18);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v2, v3, "report chatbot spam operation created with ID %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = v0[17];
  uint64_t v9 = v0[14];
  uint64_t v11 = v0[11];
  uint64_t v10 = v0[12];
  uint64_t v13 = v0[3];
  uint64_t v12 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t))(v0[13] + 16))(v9, v0[9], v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  id v14 = (void *)(v8 + *(int *)(type metadata accessor for RCSSpamReportOperation() + 28));
  *id v14 = v13;
  v14[1] = v12;
  v0[18] = *(void *)(v11 + 24);
  v0[19] = (v11 + 24) & 0xFFFFFFFFFFFFLL | 0x1663000000000000;
  sub_F74E0();
  swift_bridgeObjectRetain();
  v0[20] = sub_F74D0();
  uint64_t v16 = sub_F7470();
  return _swift_task_switch(sub_8FC7C, v16, v15);
}

uint64_t sub_8FC7C()
{
  uint64_t v1 = v0[17];
  uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[18];
  uint64_t v2 = v0[16];
  uint64_t v12 = v0[15];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v8 = v0[6];
  uint64_t v7 = v0[7];
  swift_release();
  v11(v8, v7, v6, v1, v5, v4, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_8FD70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  type metadata accessor for RCSOperationController();
  swift_allocObject();
  *(void *)(v3 + 24) = RCSOperationController.init(configuration:)(a2);
  return v3;
}

uint64_t type metadata accessor for RCSSpamReportingController.SpamReportOperationError()
{
  return sub_8B108();
}

uint64_t sub_8FE18()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 88)) {
    swift_errorRelease();
  }
  else {
    sub_6BEC(v0 + 56);
  }

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_8FE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C((uint64_t *)&unk_128CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_8FEE4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_930A8;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_12ACB0 + dword_12ACB0);
  uint64_t v5 = (void *)swift_task_alloc();
  void v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_930A4;
  return v7(v2, v3, v0 + 56);
}

uint64_t sub_8FFF4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_90044(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_90118;
  return sub_8E198(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_90118()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t type metadata accessor for RCSSpamReportingController.OperationID()
{
  return sub_8B108();
}

uint64_t sub_90224()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_90310(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  uint64_t v12 = (uint64_t)v2 + ((*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *uint64_t v13 = v3;
  v13[1] = sub_90448;
  return sub_8EBC4(a1, a2, v8, v9, v10, v11, v12, v6);
}

uint64_t sub_90448()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_9053C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_90628(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  uint64_t v12 = (uint64_t)v2 + ((*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *uint64_t v13 = v3;
  v13[1] = sub_930A0;
  return sub_8F86C(a1, a2, v8, v9, v10, v11, v12, v6);
}

uint64_t sub_90760()
{
  return swift_getWitnessTable();
}

uint64_t sub_9077C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_90814(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x90960);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_90974(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x90B54);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for RCSSpamReportOperation()
{
  return sub_8B108();
}

uint64_t sub_90B94()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RCSSpamReportingController()
{
  return sub_8B108();
}

uint64_t sub_90BFC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_90CB0(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v6 > 3)
  {
    int v7 = *(_DWORD *)(v5 + 80);
    if ((unint64_t)(v6 + 1) > 0x18 || (v7 & 0x1000F8) != 0)
    {
LABEL_30:
      uint64_t v16 = *(void *)a2;
      *a1 = *(void *)a2;
      a1 = (void *)(v16 + (((v7 & 0xF8 | 7u) + 16) & ~(unint64_t)(v7 & 0xF8 | 7u)));
      swift_retain();
      return a1;
    }
LABEL_17:
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 < 3) {
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  unsigned int v9 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
  int v7 = *(_DWORD *)(v5 + 80);
  if (v9 > 0xFFFC)
  {
    if ((unint64_t)(v6 + 4) > 0x18 || (v7 & 0x1000F8) != 0) {
      goto LABEL_30;
    }
    unsigned int v12 = *(_DWORD *)&a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3) {
      goto LABEL_33;
    }
  }
  else
  {
    int v10 = v7 & 0x1000F8;
    if (v9 <= 0xFC)
    {
      if ((unint64_t)(v6 + 1) > 0x18 || v10 != 0) {
        goto LABEL_30;
      }
      goto LABEL_17;
    }
    if ((unint64_t)(v6 + 2) > 0x18 || v10 != 0) {
      goto LABEL_30;
    }
    unsigned int v12 = *(unsigned __int16 *)&a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
LABEL_33:
      if (v6 <= 3) {
        uint64_t v18 = v6;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_41;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_41;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_41;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_41:
          int v20 = (v19 | (v13 << (8 * v6))) + 3;
          unsigned int v12 = v19 + 3;
          if (v6 < 4) {
            unsigned int v12 = v20;
          }
          break;
        default:
          break;
      }
    }
  }
LABEL_43:
  if (v12 == 2)
  {
    uint64_t v21 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v21;
    swift_bridgeObjectRetain();
    if (v6 <= 3)
    {
      unsigned int v22 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
      if (v22 > 0xFFFC)
      {
        int v23 = 2;
        goto LABEL_66;
      }
      if (v22 > 0xFC)
      {
        LOWORD(v23) = 2;
        goto LABEL_69;
      }
    }
    *((unsigned char *)a1 + v6) = 2;
    return a1;
  }
  if (v12 == 1)
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    if (v6 > 3)
    {
LABEL_55:
      *((unsigned char *)a1 + v6) = 1;
      return a1;
    }
    int v23 = 1;
    unsigned int v24 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
    if (v24 <= 0xFFFC)
    {
      if (v24 <= 0xFC) {
        goto LABEL_55;
      }
LABEL_69:
      *(_WORD *)((char *)a1 + v6) = v23;
      return a1;
    }
LABEL_66:
    *(_DWORD *)((char *)a1 + v6) = v23;
    return a1;
  }
  if (v12)
  {
    if (v6 > 3) {
      goto LABEL_60;
    }
    unsigned int v25 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
    uint64_t v26 = 2;
    if (v25 > 0xFFFC) {
      uint64_t v26 = 4;
    }
    if (v25 <= 0xFC) {
LABEL_60:
    }
      uint64_t v26 = 1;
    memcpy(a1, a2, v26 + v6);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    if (v6 > 3) {
      goto LABEL_47;
    }
    unsigned int v27 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
    if (v27 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v6) = 0;
      return a1;
    }
    if (v27 <= 0xFC) {
LABEL_47:
    }
      *((unsigned char *)a1 + v6) = 0;
    else {
      *(_WORD *)((char *)a1 + v6) = 0;
    }
  }
  return a1;
}

uint64_t sub_91018(unsigned __int8 *a1)
{
  uint64_t result = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(void *)(*(void *)(result - 8) + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16;
  }
  if (v3 > 3) {
    goto LABEL_4;
  }
  unsigned int v5 = ((1 << (8 * v3)) | 2u) >> (8 * v3);
  if (v5 > 0xFFFC)
  {
    unsigned int v4 = *(_DWORD *)&a1[v3];
  }
  else
  {
    if (v5 <= 0xFC)
    {
LABEL_4:
      unsigned int v4 = a1[v3];
      goto LABEL_9;
    }
    unsigned int v4 = *(unsigned __int16 *)&a1[v3];
  }
LABEL_9:
  unsigned int v6 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_18;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_18:
        int v9 = (v8 | (v6 << (8 * v3))) + 3;
        unsigned int v4 = v8 + 3;
        if (v3 < 4) {
          unsigned int v4 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2 || v4 == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!v4)
  {
    int v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(result - 8) + 8);
    return v10(a1, result);
  }
  return result;
}

void *sub_911E0(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v5 > 3) {
    goto LABEL_7;
  }
  unsigned int v6 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
  if (v6 > 0xFFFC)
  {
    unsigned int v7 = *(_DWORD *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
    goto LABEL_12;
  }
  if (v6 > 0xFC)
  {
    unsigned int v7 = *(unsigned __int16 *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
  else
  {
LABEL_7:
    unsigned int v7 = a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
LABEL_12:
  if (v5 <= 3) {
    uint64_t v9 = v5;
  }
  else {
    uint64_t v9 = 4;
  }
  switch(v9)
  {
    case 1:
      int v10 = *a2;
      goto LABEL_20;
    case 2:
      int v10 = *(unsigned __int16 *)a2;
      goto LABEL_20;
    case 3:
      int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_20;
    case 4:
      int v10 = *(_DWORD *)a2;
LABEL_20:
      int v11 = (v10 | (v8 << (8 * v5))) + 3;
      unsigned int v7 = v10 + 3;
      if (v5 < 4) {
        unsigned int v7 = v11;
      }
      break;
    default:
      break;
  }
LABEL_22:
  if (v7 == 2)
  {
    uint64_t v12 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v12;
    swift_bridgeObjectRetain();
    if (v5 <= 3)
    {
      unsigned int v13 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
      if (v13 > 0xFFFC)
      {
        int v14 = 2;
        goto LABEL_45;
      }
      if (v13 > 0xFC)
      {
        LOWORD(v14) = 2;
        goto LABEL_48;
      }
    }
    *((unsigned char *)a1 + v5) = 2;
    return a1;
  }
  if (v7 == 1)
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    if (v5 > 3)
    {
LABEL_34:
      *((unsigned char *)a1 + v5) = 1;
      return a1;
    }
    int v14 = 1;
    unsigned int v15 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v15 <= 0xFFFC)
    {
      if (v15 <= 0xFC) {
        goto LABEL_34;
      }
LABEL_48:
      *(_WORD *)((char *)a1 + v5) = v14;
      return a1;
    }
LABEL_45:
    *(_DWORD *)((char *)a1 + v5) = v14;
    return a1;
  }
  if (v7)
  {
    if (v5 > 3) {
      goto LABEL_39;
    }
    unsigned int v16 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    uint64_t v17 = 2;
    if (v16 > 0xFFFC) {
      uint64_t v17 = 4;
    }
    if (v16 <= 0xFC) {
LABEL_39:
    }
      uint64_t v17 = 1;
    memcpy(a1, a2, v17 + v5);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
    if (v5 > 3) {
      goto LABEL_26;
    }
    unsigned int v18 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v18 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v5) = 0;
      return a1;
    }
    if (v18 <= 0xFC) {
LABEL_26:
    }
      *((unsigned char *)a1 + v5) = 0;
    else {
      *(_WORD *)((char *)a1 + v5) = 0;
    }
  }
  return a1;
}

unsigned __int8 *sub_914C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
LABEL_8:
    unsigned int v9 = a1[v6];
    unsigned int v10 = v9 - 3;
    if (v9 < 3) {
      goto LABEL_26;
    }
    goto LABEL_13;
  }
  unsigned int v8 = ((1 << v7) | 2u) >> v7;
  if (v8 <= 0xFFFC)
  {
    if (v8 > 0xFC)
    {
      unsigned int v9 = *(unsigned __int16 *)&a1[v6];
      unsigned int v10 = v9 - 3;
      if (v9 < 3) {
        goto LABEL_26;
      }
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  unsigned int v9 = *(_DWORD *)&a1[v6];
  unsigned int v10 = v9 - 3;
  if (v9 < 3) {
    goto LABEL_26;
  }
LABEL_13:
  if (v6 <= 3) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = 4;
  }
  switch(v11)
  {
    case 1:
      int v12 = *a1;
      if (v6 < 4) {
        goto LABEL_24;
      }
      goto LABEL_25;
    case 2:
      int v12 = *(unsigned __int16 *)a1;
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 3:
      int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 4:
      int v12 = *(_DWORD *)a1;
      if (v6 < 4) {
LABEL_24:
      }
        v12 |= v10 << v7;
LABEL_25:
      unsigned int v9 = v12 + 3;
      break;
    default:
      break;
  }
LABEL_26:
  if (v9 == 2 || v9 == 1)
  {
    swift_bridgeObjectRelease();
    if (v6 > 3) {
      goto LABEL_35;
    }
  }
  else
  {
    if (!v9) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    if (v6 > 3)
    {
LABEL_35:
      unsigned int v14 = a2[v6];
      unsigned int v15 = v14 - 3;
      if (v14 < 3) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
  }
  unsigned int v13 = ((1 << v7) | 2u) >> v7;
  if (v13 > 0xFFFC)
  {
    unsigned int v14 = *(_DWORD *)&a2[v6];
    unsigned int v15 = v14 - 3;
    if (v14 < 3) {
      goto LABEL_53;
    }
    goto LABEL_40;
  }
  if (v13 <= 0xFC) {
    goto LABEL_35;
  }
  unsigned int v14 = *(unsigned __int16 *)&a2[v6];
  unsigned int v15 = v14 - 3;
  if (v14 < 3) {
    goto LABEL_53;
  }
LABEL_40:
  if (v6 <= 3) {
    uint64_t v16 = v6;
  }
  else {
    uint64_t v16 = 4;
  }
  switch(v16)
  {
    case 1:
      int v17 = *a2;
      if (v6 < 4) {
        goto LABEL_51;
      }
      goto LABEL_52;
    case 2:
      int v17 = *(unsigned __int16 *)a2;
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 3:
      int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 4:
      int v17 = *(_DWORD *)a2;
      if (v6 < 4) {
LABEL_51:
      }
        v17 |= v15 << v7;
LABEL_52:
      unsigned int v14 = v17 + 3;
      break;
    default:
      break;
  }
LABEL_53:
  if (v14 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    if (v6 <= 3)
    {
      unsigned int v18 = ((1 << v7) | 2u) >> v7;
      if (v18 > 0xFFFC)
      {
        int v19 = 2;
        goto LABEL_76;
      }
      if (v18 > 0xFC)
      {
        LOWORD(v19) = 2;
        goto LABEL_79;
      }
    }
    a1[v6] = 2;
    return a1;
  }
  if (v14 == 1)
  {
    *(void *)a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    if (v6 > 3)
    {
LABEL_65:
      a1[v6] = 1;
      return a1;
    }
    int v19 = 1;
    unsigned int v20 = ((1 << v7) | 2u) >> v7;
    if (v20 <= 0xFFFC)
    {
      if (v20 <= 0xFC) {
        goto LABEL_65;
      }
LABEL_79:
      *(_WORD *)&a1[v6] = v19;
      return a1;
    }
LABEL_76:
    *(_DWORD *)&a1[v6] = v19;
    return a1;
  }
  if (v14)
  {
    if (v6 > 3) {
      goto LABEL_70;
    }
    unsigned int v21 = ((1 << v7) | 2u) >> v7;
    uint64_t v22 = 2;
    if (v21 > 0xFFFC) {
      uint64_t v22 = 4;
    }
    if (v21 <= 0xFC) {
LABEL_70:
    }
      uint64_t v22 = 1;
    memcpy(a1, a2, v22 + v6);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    if (v6 > 3) {
      goto LABEL_57;
    }
    unsigned int v23 = ((1 << v7) | 2u) >> v7;
    if (v23 > 0xFFFC)
    {
      *(_DWORD *)&a1[v6] = 0;
      return a1;
    }
    if (v23 <= 0xFC) {
LABEL_57:
    }
      a1[v6] = 0;
    else {
      *(_WORD *)&a1[v6] = 0;
    }
  }
  return a1;
}

_OWORD *sub_918F8(_OWORD *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v5 > 3) {
    goto LABEL_7;
  }
  unsigned int v6 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
  if (v6 > 0xFFFC)
  {
    unsigned int v7 = *(_DWORD *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
    goto LABEL_12;
  }
  if (v6 > 0xFC)
  {
    unsigned int v7 = *(unsigned __int16 *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
  else
  {
LABEL_7:
    unsigned int v7 = a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_22;
    }
  }
LABEL_12:
  if (v5 <= 3) {
    uint64_t v9 = v5;
  }
  else {
    uint64_t v9 = 4;
  }
  switch(v9)
  {
    case 1:
      int v10 = *a2;
      goto LABEL_20;
    case 2:
      int v10 = *(unsigned __int16 *)a2;
      goto LABEL_20;
    case 3:
      int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_20;
    case 4:
      int v10 = *(_DWORD *)a2;
LABEL_20:
      int v11 = (v10 | (v8 << (8 * v5))) + 3;
      unsigned int v7 = v10 + 3;
      if (v5 < 4) {
        unsigned int v7 = v11;
      }
      break;
    default:
      break;
  }
LABEL_22:
  if (v7 == 2)
  {
    *a1 = *(_OWORD *)a2;
    if (v5 <= 3)
    {
      unsigned int v12 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
      if (v12 > 0xFFFC)
      {
        int v13 = 2;
        goto LABEL_45;
      }
      if (v12 > 0xFC)
      {
        LOWORD(v13) = 2;
        goto LABEL_48;
      }
    }
    *((unsigned char *)a1 + v5) = 2;
    return a1;
  }
  if (v7 == 1)
  {
    *(void *)a1 = *(void *)a2;
    if (v5 > 3)
    {
LABEL_34:
      *((unsigned char *)a1 + v5) = 1;
      return a1;
    }
    int v13 = 1;
    unsigned int v14 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v14 <= 0xFFFC)
    {
      if (v14 <= 0xFC) {
        goto LABEL_34;
      }
LABEL_48:
      *(_WORD *)((char *)a1 + v5) = v13;
      return a1;
    }
LABEL_45:
    *(_DWORD *)((char *)a1 + v5) = v13;
    return a1;
  }
  if (v7)
  {
    if (v5 > 3) {
      goto LABEL_39;
    }
    unsigned int v15 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    uint64_t v16 = 2;
    if (v15 > 0xFFFC) {
      uint64_t v16 = 4;
    }
    if (v15 <= 0xFC) {
LABEL_39:
    }
      uint64_t v16 = 1;
    memcpy(a1, a2, v16 + v5);
  }
  else
  {
    (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    if (v5 > 3) {
      goto LABEL_26;
    }
    unsigned int v17 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v17 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v5) = 0;
      return a1;
    }
    if (v17 <= 0xFC) {
LABEL_26:
    }
      *((unsigned char *)a1 + v5) = 0;
    else {
      *(_WORD *)((char *)a1 + v5) = 0;
    }
  }
  return a1;
}

unsigned __int8 *sub_91BD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
LABEL_8:
    unsigned int v9 = a1[v6];
    unsigned int v10 = v9 - 3;
    if (v9 < 3) {
      goto LABEL_26;
    }
    goto LABEL_13;
  }
  unsigned int v8 = ((1 << v7) | 2u) >> v7;
  if (v8 <= 0xFFFC)
  {
    if (v8 > 0xFC)
    {
      unsigned int v9 = *(unsigned __int16 *)&a1[v6];
      unsigned int v10 = v9 - 3;
      if (v9 < 3) {
        goto LABEL_26;
      }
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  unsigned int v9 = *(_DWORD *)&a1[v6];
  unsigned int v10 = v9 - 3;
  if (v9 < 3) {
    goto LABEL_26;
  }
LABEL_13:
  if (v6 <= 3) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = 4;
  }
  switch(v11)
  {
    case 1:
      int v12 = *a1;
      if (v6 < 4) {
        goto LABEL_24;
      }
      goto LABEL_25;
    case 2:
      int v12 = *(unsigned __int16 *)a1;
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 3:
      int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v6 >= 4) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 4:
      int v12 = *(_DWORD *)a1;
      if (v6 < 4) {
LABEL_24:
      }
        v12 |= v10 << v7;
LABEL_25:
      unsigned int v9 = v12 + 3;
      break;
    default:
      break;
  }
LABEL_26:
  if (v9 == 2 || v9 == 1)
  {
    swift_bridgeObjectRelease();
    if (v6 > 3) {
      goto LABEL_35;
    }
  }
  else
  {
    if (!v9) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    if (v6 > 3)
    {
LABEL_35:
      unsigned int v14 = a2[v6];
      unsigned int v15 = v14 - 3;
      if (v14 < 3) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
  }
  unsigned int v13 = ((1 << v7) | 2u) >> v7;
  if (v13 > 0xFFFC)
  {
    unsigned int v14 = *(_DWORD *)&a2[v6];
    unsigned int v15 = v14 - 3;
    if (v14 < 3) {
      goto LABEL_53;
    }
    goto LABEL_40;
  }
  if (v13 <= 0xFC) {
    goto LABEL_35;
  }
  unsigned int v14 = *(unsigned __int16 *)&a2[v6];
  unsigned int v15 = v14 - 3;
  if (v14 < 3) {
    goto LABEL_53;
  }
LABEL_40:
  if (v6 <= 3) {
    uint64_t v16 = v6;
  }
  else {
    uint64_t v16 = 4;
  }
  switch(v16)
  {
    case 1:
      int v17 = *a2;
      if (v6 < 4) {
        goto LABEL_51;
      }
      goto LABEL_52;
    case 2:
      int v17 = *(unsigned __int16 *)a2;
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 3:
      int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v6 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_51;
    case 4:
      int v17 = *(_DWORD *)a2;
      if (v6 < 4) {
LABEL_51:
      }
        v17 |= v15 << v7;
LABEL_52:
      unsigned int v14 = v17 + 3;
      break;
    default:
      break;
  }
LABEL_53:
  if (v14 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (v6 <= 3)
    {
      unsigned int v18 = ((1 << v7) | 2u) >> v7;
      if (v18 > 0xFFFC)
      {
        int v19 = 2;
        goto LABEL_76;
      }
      if (v18 > 0xFC)
      {
        LOWORD(v19) = 2;
        goto LABEL_79;
      }
    }
    a1[v6] = 2;
    return a1;
  }
  if (v14 == 1)
  {
    *(void *)a1 = *(void *)a2;
    if (v6 > 3)
    {
LABEL_65:
      a1[v6] = 1;
      return a1;
    }
    int v19 = 1;
    unsigned int v20 = ((1 << v7) | 2u) >> v7;
    if (v20 <= 0xFFFC)
    {
      if (v20 <= 0xFC) {
        goto LABEL_65;
      }
LABEL_79:
      *(_WORD *)&a1[v6] = v19;
      return a1;
    }
LABEL_76:
    *(_DWORD *)&a1[v6] = v19;
    return a1;
  }
  if (v14)
  {
    if (v6 > 3) {
      goto LABEL_70;
    }
    unsigned int v21 = ((1 << v7) | 2u) >> v7;
    uint64_t v22 = 2;
    if (v21 > 0xFFFC) {
      uint64_t v22 = 4;
    }
    if (v21 <= 0xFC) {
LABEL_70:
    }
      uint64_t v22 = 1;
    memcpy(a1, a2, v22 + v6);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    if (v6 > 3) {
      goto LABEL_57;
    }
    unsigned int v23 = ((1 << v7) | 2u) >> v7;
    if (v23 > 0xFFFC)
    {
      *(_DWORD *)&a1[v6] = 0;
      return a1;
    }
    if (v23 <= 0xFC) {
LABEL_57:
    }
      a1[v6] = 0;
    else {
      *(_WORD *)&a1[v6] = 0;
    }
  }
  return a1;
}

uint64_t sub_91FF8(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  if (v4 > 3)
  {
    int v5 = 4;
LABEL_7:
    char v7 = 8;
    goto LABEL_8;
  }
  unsigned int v6 = ((1 << (8 * v4)) | 2u) >> (8 * v4);
  if (v6 > 0xFFFC) {
    goto LABEL_11;
  }
  int v5 = v6 + 3;
  if (v6 <= 0xFC) {
    goto LABEL_7;
  }
  char v7 = 16;
LABEL_8:
  unsigned int v8 = (1 << v7) - v5;
  if ((v8 & 0x80000000) == 0)
  {
    if (v4 > 3) {
      goto LABEL_15;
    }
LABEL_12:
    unsigned int v9 = ((1 << (8 * v4)) | 2u) >> (8 * v4);
    uint64_t v10 = 2;
    if (v9 > 0xFFFC) {
      uint64_t v10 = 4;
    }
    if (v9 > 0xFC) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_11:
  unsigned int v8 = 0x7FFFFFFF;
  if (v4 <= 3) {
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v10 = 1;
LABEL_16:
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_35;
  }
  unint64_t v11 = v10 + v4;
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v14 = ((a2 - v8 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v14 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v14 < 2)
    {
LABEL_35:
      if (v8)
      {
        if (v4 <= 3)
        {
          unsigned int v22 = ((1 << (8 * v4)) | 2u) >> (8 * v4);
          if (v22 > 0xFFFC)
          {
            unsigned int v17 = *(_DWORD *)((char *)a1 + v4);
            unsigned int v18 = ~v17;
LABEL_45:
            unsigned int v25 = 0x7FFFFFFF;
LABEL_46:
            if (v25 > v18) {
              return -v17;
            }
            else {
              return 0;
            }
          }
          int v20 = v22 + 3;
          if (v22 > 0xFC)
          {
            int v24 = *(unsigned __int16 *)((char *)a1 + v4);
            unsigned int v17 = v24 | 0xFFFF0000;
            unsigned int v18 = v24 ^ 0xFFFF;
            char v19 = 16;
          }
          else
          {
            int v23 = *((unsigned __int8 *)a1 + v4);
            unsigned int v17 = v23 | 0xFFFFFF00;
            unsigned int v18 = v23 ^ 0xFF;
            char v19 = 8;
          }
        }
        else
        {
          int v16 = *((unsigned __int8 *)a1 + v4);
          unsigned int v17 = v16 | 0xFFFFFF00;
          unsigned int v18 = v16 ^ 0xFF;
          char v19 = 8;
          int v20 = 4;
        }
        unsigned int v25 = (1 << v19) - v20;
        if ((v25 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        goto LABEL_45;
      }
      return 0;
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_35;
  }
LABEL_27:
  int v15 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v15 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v11 | v15) + 1;
}

void sub_92294(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
    int v8 = 4;
LABEL_5:
    char v9 = 8;
    goto LABEL_6;
  }
  unsigned int v11 = ((1 << v7) | 2u) >> v7;
  if (v11 > 0xFFFC) {
    goto LABEL_12;
  }
  int v8 = v11 + 3;
  if (v11 <= 0xFC) {
    goto LABEL_5;
  }
  char v9 = 16;
LABEL_6:
  unsigned int v10 = (1 << v9) - v8;
  if ((v10 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
LABEL_12:
  unsigned int v10 = 0x7FFFFFFF;
  if (v6 > 3)
  {
LABEL_16:
    uint64_t v13 = 1;
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v12 = ((1 << v7) | 2u) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFC) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFC) {
    goto LABEL_16;
  }
LABEL_17:
  size_t v14 = v13 + v6;
  if (a3 <= v10)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = ((a3 - v10 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v14)
      {
        int v19 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        return;
      case 3:
        goto LABEL_53;
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_53:
      __break(1u);
      JUMPOUT(0x92554);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return;
      }
LABEL_37:
      int v20 = -a2;
      if (v6 > 3) {
        goto LABEL_38;
      }
      unsigned int v21 = ((1 << v7) | 2u) >> v7;
      if (v21 > 0xFFFC)
      {
        *(_DWORD *)&a1[v6] = v20;
      }
      else if (v21 <= 0xFC)
      {
LABEL_38:
        a1[v6] = v20;
      }
      else
      {
        *(_WORD *)&a1[v6] = v20;
      }
      return;
  }
}

uint64_t sub_9257C(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  if (v2 > 3) {
    goto LABEL_4;
  }
  unsigned int v4 = ((1 << (8 * v2)) | 2u) >> (8 * v2);
  if (v4 > 0xFFFC)
  {
    uint64_t result = *(unsigned int *)&a1[v2];
  }
  else
  {
    if (v4 <= 0xFC)
    {
LABEL_4:
      uint64_t result = a1[v2];
      goto LABEL_9;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v2];
  }
LABEL_9:
  if (result >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_18;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v7 = (v6 | ((result - 3) << (8 * v2))) + 3;
        unsigned int v8 = v6 + 3;
        if (v2 >= 4) {
          uint64_t result = v8;
        }
        else {
          uint64_t result = v7;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_926A8(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 0x10) {
    size_t v5 = 16;
  }
  else {
    size_t v5 = v4;
  }
  if (a2 > 2)
  {
    unsigned int v6 = a2 - 3;
    if (v5 < 4)
    {
      int v8 = (v6 >> (8 * v5)) + 3;
      v6 &= ~(-1 << (8 * v5));
      char v9 = (int *)&a1[v5];
      unsigned int v10 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
      if (v10 > 0xFFFC)
      {
        *char v9 = v8;
      }
      else if (v10 > 0xFC)
      {
        *(_WORD *)char v9 = v8;
      }
      else
      {
        *(unsigned char *)char v9 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
    }
    if (v5 <= 3) {
      int v11 = v5;
    }
    else {
      int v11 = 4;
    }
    bzero(a1, v5);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v6;
        break;
      case 3:
        *(_WORD *)a1 = v6;
        a1[2] = BYTE2(v6);
        break;
      case 4:
        *(_DWORD *)a1 = v6;
        break;
      default:
        *a1 = v6;
        break;
    }
  }
  else
  {
    if (v5 > 3)
    {
LABEL_6:
      a1[v5] = a2;
      return;
    }
    unsigned int v7 = ((1 << (8 * v5)) | 2u) >> (8 * v5);
    if (v7 > 0xFFFC)
    {
      *(_DWORD *)&a1[v5] = a2;
    }
    else
    {
      if (v7 <= 0xFC) {
        goto LABEL_6;
      }
      *(_WORD *)&a1[v5] = a2;
    }
  }
}

uint64_t sub_9283C()
{
  uint64_t result = sub_F6F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_928D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    uint64_t v10 = a2[3];
    char v11 = *((unsigned char *)a2 + 32);
    sub_929E0();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_F6F30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_929E0()
{
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_92A1C(uint64_t a1, uint64_t a2)
{
  sub_92AA0();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_F6F30();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_92AA0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_92ADC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  char v10 = *((unsigned char *)a2 + 32);
  sub_929E0();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_92B98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  char v10 = *((unsigned char *)a2 + 32);
  sub_929E0();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_92AA0();
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_92C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v6;
  sub_92AA0();
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_F6F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_92D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_92D18);
}

uint64_t sub_92D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_F6F30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_92DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_92DD4);
}

uint64_t sub_92DD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_F6F30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_92E78(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for RCSSpamReportingController.OperationType()
{
  return sub_8B108();
}

uint64_t sub_92ECC()
{
  return sub_92AA0();
}

uint64_t sub_92EE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  char v7 = *((unsigned char *)a2 + 32);
  sub_929E0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_92F44(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  char v7 = *((unsigned char *)a2 + 32);
  sub_929E0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_92AA0();
  return a1;
}

uint64_t sub_92FB8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v3;
  sub_92AA0();
  return a1;
}

uint64_t sub_93004(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_9304C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_93094(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

uint64_t sub_930AC()
{
  id v0 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
  [v0 setFormatOptions:3955];
  id v1 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
  [v1 setFormatOptions:1907];
  sub_551C(&qword_128D68);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_FA890;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v4 = v2;
  uint64_t result = sub_F7430();
  qword_1306B8 = v4;
  return result;
}

uint64_t sub_93164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  if (qword_1290A0 != -1) {
    goto LABEL_16;
  }
  while (1)
  {
    uint64_t v4 = qword_1306B8;
    if ((unint64_t)qword_1306B8 >> 62) {
      break;
    }
    uint64_t v5 = *(void *)((char *)&dword_10 + (qword_1306B8 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_18;
    }
LABEL_4:
    unsigned int v27 = a3;
    uint64_t v28 = v4;
    uint64_t v29 = v5;
    unint64_t v30 = v4 & 0xC000000000000001;
    uint64_t v6 = 4;
    a3 = &qword_127C78;
    while (1)
    {
      id v8 = v30 ? (id)sub_F78D0() : *(id *)(v4 + 8 * v6);
      uint64_t v9 = v8;
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      uint64_t v11 = (void *)sub_F71F0();
      id v12 = [v9 dateFromString:v11];

      uint64_t v13 = sub_551C(&qword_127C78);
      __chkstk_darwin(v13 - 8);
      uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v12)
      {
        uint64_t v16 = sub_F6EE0();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v33 = &v26;
        uint64_t v18 = v17;
        __chkstk_darwin(v16);
        int v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_F6EA0();

        unsigned int v21 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v21(v15, v20, v16);
        unsigned int v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
        v22(v15, 0, 1, v16);
        uint64_t v4 = v28;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v23 = v27;
          v21((char *)v27, v15, v16);
          return ((uint64_t (*)(uint64_t *, void, uint64_t, uint64_t))v22)(v23, 0, 1, v16);
        }
      }
      else
      {

        uint64_t v7 = sub_F6EE0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v15, 1, 1, v7);
      }
      a3 = &qword_127C78;
      sub_1E944((uint64_t)v15, &qword_127C78);
      ++v6;
      if (v10 == v29)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v27;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_F79B0();
  if (v5) {
    goto LABEL_4;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v25 = sub_F6EE0();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a3, 1, 1, v25);
}

uint64_t sub_93520()
{
  if (qword_1290A0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1306B8;
  if (!((unint64_t)qword_1306B8 >> 62))
  {
    uint64_t v1 = *(void *)((char *)&dword_10 + (qword_1306B8 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v1) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_F79B0();
  if (!result) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v0 & 0xC000000000000001) != 0)
  {
    id v3 = (id)sub_F78D0();
    goto LABEL_8;
  }
  if (*(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8)))
  {
    id v3 = *(id *)(v0 + 32);
LABEL_8:
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)sub_F6E60();
    id v6 = [v4 stringFromDate:v5];

    uint64_t v7 = sub_F7220();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t RCSFile.ThumbnailInformation.init(thumbnail:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  id v4 = [a1 fileSizeInBytes];
  id v5 = [v4 integerValue];

  *(void *)a2 = v5;
  id v6 = [a1 untrustedContentType];
  uint64_t v7 = sub_F7220();
  uint64_t v9 = v8;

  *((void *)a2 + 1) = v7;
  *((void *)a2 + 2) = v9;
  id v10 = [a1 dataUrl];
  uint64_t v11 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  sub_F6D80();

  uint64_t v12 = sub_F6EE0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_551C(&qword_127C78);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = [a1 validUntil];
  uint64_t v20 = sub_F7220();
  uint64_t v22 = v21;

  sub_93164(v20, v22, v18);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
  {
    sub_F6EB0();

    sub_1E944((uint64_t)v18, &qword_127C78);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(&a2[*(int *)(v11 + 28)], v15, v12);
  }
  else
  {

    int v24 = *(void (**)(char *, uint64_t *, uint64_t))(v13 + 32);
    v24(v15, v18, v12);
    return ((uint64_t (*)(char *, char *, uint64_t))v24)(&a2[*(int *)(v11 + 28)], v15, v12);
  }
}

uint64_t RCSFile.DispositionInformation.init(disposition:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
  id v5 = (char *)a2 + v4[10];
  *(void *)id v5 = 0;
  v5[8] = 1;
  id v6 = [a1 fileSizeInBytes];
  id v7 = [v6 integerValue];

  *a2 = v7;
  id v8 = [a1 originalFileName];
  uint64_t v9 = sub_F7220();
  uint64_t v11 = v10;

  a2[1] = v9;
  a2[2] = v11;
  id v12 = [a1 untrustedContentType];
  uint64_t v13 = sub_F7220();
  uint64_t v15 = v14;

  a2[3] = v13;
  a2[4] = v15;
  id v16 = [a1 dataUrl];
  sub_F6D80();

  id v17 = [a1 disposition];
  char v18 = (_BYTE)v17 + 1;
  if ((unint64_t)v17 + 1 >= 3) {
    char v18 = 1;
  }
  *((unsigned char *)a2 + v4[9]) = v18;
  id v19 = [a1 playingLengthInSeconds];
  if (v19)
  {
    uint64_t v20 = v19;
    [v19 doubleValue];
    uint64_t v22 = v21;

    *(void *)id v5 = v22;
    v5[8] = 0;
  }
  uint64_t v23 = sub_F6EE0();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_551C(&qword_127C78);
  v36[1] = v36;
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (void *)((char *)v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v30 = [a1 validUntil];
  uint64_t v31 = sub_F7220();
  uint64_t v33 = v32;

  sub_93164(v31, v33, v29);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48))(v29, 1, v23) == 1)
  {
    sub_F6EB0();

    sub_1E944((uint64_t)v29, &qword_127C78);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))((char *)a2 + v4[8], v26, v23);
  }
  else
  {

    os_log_type_t v35 = *(void (**)(char *, uint64_t *, uint64_t))(v24 + 32);
    v35(v26, v29, v23);
    return ((uint64_t (*)(char *, char *, uint64_t))v35)((char *)a2 + v4[8], v26, v23);
  }
}

void RCSFile.init(descriptor:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_551C(&qword_1283F0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v10 = v8 + 56;
  v9(a2, 1, 1, v7);
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_F70F0();
  sub_8B44(v11, (uint64_t)static Logger.rcs);
  id v12 = a1;
  uint64_t v13 = sub_F70D0();
  os_log_type_t v14 = sub_F7670();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v27 = v6;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = v9;
    id v17 = (void *)v16;
    v24[1] = v10;
    *(_DWORD *)uint64_t v15 = 138412290;
    id v28 = v12;
    id v18 = v12;
    uint64_t v26 = v7;
    uint64_t v19 = a2;
    id v20 = v18;
    id v6 = v27;
    sub_F77B0();
    *id v17 = v12;

    a2 = v19;
    uint64_t v7 = v26;
    _os_log_impl(&dword_0, v13, v14, "Converting %@ to RCSFile", v15, 0xCu);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    uint64_t v9 = v25;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v21 = [v12 thumbnail];
  if (v21)
  {
    RCSFile.ThumbnailInformation.init(thumbnail:)(v21, v6);
    v9((uint64_t)v6, 0, 1, v7);
    sub_93ED4((uint64_t)v6, a2);
  }
  id v22 = [v12 file];
  uint64_t v23 = type metadata accessor for RCSFile(0);
  RCSFile.DispositionInformation.init(disposition:)(v22, (void *)(a2 + *(int *)(v23 + 20)));
}

uint64_t sub_93ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_1283F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t RCSMessage.Coordinates.init(coordinates:)(void *a1)
{
  id v2 = [a1 latitude];
  [v2 doubleValue];

  id v3 = [a1 longitude];
  [v3 doubleValue];

  return 0;
}

id RCSMessage.Coordinates.toCTCoordinates()(uint64_t a1, void *a2)
{
  id v3 = [objc_allocWithZone((Class)CTLazuliLocationCoordinates) init];
  uint64_t v4 = (void *)sub_F75E0();
  [v3 setLatitude:v4];

  uint64_t v5 = (void *)sub_F75E0();
  [v3 setLongitude:v5];

  id v6 = [objc_allocWithZone((Class)CTLazuliMessageGeoLocationPush) init];
  [v6 setCoordinates:v3];
  if (a2) {
    a2 = (void *)sub_F71F0();
  }
  [v6 setAdditionalDescription:a2];

  return v6;
}

unint64_t RCSGroup.ParseError.errorDescription.getter()
{
  sub_1E87C(v0, (uint64_t)v7);
  sub_1E87C(v0, (uint64_t)v8);
  if (!(v9 >> 62))
  {
    v9 &= 0x3FFFFFFFFFFFFFFFuLL;
    swift_errorRetain();
    sub_F78A0(38);
    swift_bridgeObjectRelease();
    unint64_t v6 = 0xD000000000000023;
    swift_getErrorValue();
    v16._uint64_t countAndFlagsBits = sub_F7BD0();
    sub_F72E0(v16);
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 41;
    v17._object = (void *)0xE100000000000000;
    sub_F72E0(v17);
    sub_951F4((uint64_t)v0);
    return v6;
  }
  if (v9 >> 62 == 1)
  {
    v9 &= 0x3FFFFFFFFFFFFFFFuLL;
    uint64_t v1 = v8[0];
    id v2 = (void *)v8[1];
    uint64_t v3 = v8[2];
    uint64_t v4 = (void *)v8[3];
    swift_errorRetain();
    sub_F78A0(43);
    swift_bridgeObjectRelease();
    unint64_t v6 = 0x2070756F7247;
    v10._uint64_t countAndFlagsBits = v1;
    v10._object = v2;
    sub_F72E0(v10);
    v11._object = (void *)0x80000000001041D0;
    v11._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    sub_F72E0(v11);
    v12._uint64_t countAndFlagsBits = v3;
    v12._object = v4;
    sub_F72E0(v12);
    v13._uint64_t countAndFlagsBits = 2629690;
    v13._object = (void *)0xE300000000000000;
    sub_F72E0(v13);
    swift_getErrorValue();
    v14._uint64_t countAndFlagsBits = sub_F7BD0();
    sub_F72E0(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 41;
    v15._object = (void *)0xE100000000000000;
    sub_F72E0(v15);
    swift_errorRelease();
    return v6;
  }
  return 0xD00000000000001ELL;
}

unint64_t sub_942E0()
{
  sub_1E87C(v0, (uint64_t)v2);
  return RCSGroup.ParseError.errorDescription.getter();
}

uint64_t RCSGroup.init(group:identity:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5 = (unint64_t)a3;
  a3[5] = 0u;
  a3[6] = 0u;
  a3[3] = 0u;
  a3[4] = 0u;
  sub_289D4(a2, (uint64_t)a3);
  id v6 = [a1 participants];
  id v7 = [v6 memberList];

  sub_6CA4(0, (unint64_t *)&qword_128668);
  unint64_t v8 = sub_F7410();

  if (v8 >> 62) {
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
  uint64_t v47 = (void *)v5;
  if (v9)
  {
    while (1)
    {
      char v52 = _swiftEmptyArrayStorage;
      uint64_t result = sub_86D38(0, v9 & ~(v9 >> 63), 0);
      if (v9 < 0) {
        break;
      }
      id v45 = a1;
      uint64_t v11 = 0;
      Swift::String v12 = v52;
      a1 = (void *)(v8 & 0xC000000000000001);
      unint64_t v48 = v8;
      while (v9 != v11)
      {
        if (a1) {
          id v13 = (id)sub_F78D0();
        }
        else {
          id v13 = *(id *)(v8 + 8 * v11 + 32);
        }
        Swift::String v14 = v13;
        id v15 = objc_msgSend(v13, "member", v45);
        uint64_t v16 = sub_F7220();
        unint64_t v18 = v17;

        sub_EAF1C(v16, v18, 0, 0, 0, (uint64_t *)v50);
        if (v3)
        {

          swift_release();
          sub_6BEC(a2);
          swift_bridgeObjectRelease();
          sub_6BEC((uint64_t)v47);
          swift_bridgeObjectRelease();
          return sub_952A4(v47[8], v47[9], v47[10], v47[11]);
        }

        char v52 = v12;
        unint64_t v5 = v12[2];
        unint64_t v19 = v12[3];
        unint64_t v8 = v48;
        if (v5 >= v19 >> 1)
        {
          sub_86D38(v19 > 1, v5 + 1, 1);
          Swift::String v12 = v52;
        }
        ++v11;
        v12[2] = v5 + 1;
        id v20 = &v12[8 * v5];
        long long v21 = v50[0];
        long long v22 = v50[1];
        long long v23 = v51[0];
        *(_OWORD *)((char *)v20 + 73) = *(_OWORD *)((char *)v51 + 9);
        v20[3] = v22;
        _OWORD v20[4] = v23;
        void v20[2] = v21;
        if (v9 == v11)
        {
          swift_bridgeObjectRelease();
          unint64_t v5 = (unint64_t)v47;
          a1 = v45;
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_F79B0();
      swift_bridgeObjectRelease();
      uint64_t v47 = (void *)v5;
      if (!v9) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    Swift::String v12 = _swiftEmptyArrayStorage;
LABEL_18:
    *(void *)(v5 + 40) = v12;
    id v24 = objc_msgSend(a1, "subject", v45);
    uint64_t v25 = v24;
    if (v24)
    {
      id v26 = [v24 displayString];

      uint64_t v25 = (void *)sub_F7220();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v28 = 0;
    }
    *(void *)(v5 + 48) = v25;
    *(void *)(v5 + 56) = v28;
    id v29 = [a1 icon];
    id v30 = v29;
    if (v29)
    {
      id v31 = v29;
      id v32 = [v31 name];
      uint64_t v49 = sub_F7220();
      uint64_t v34 = v33;

      id v35 = [v31 data];
      uint64_t v36 = sub_F6E30();
      uint64_t v38 = v37;

      id v39 = [v31 type];
      uint64_t v40 = sub_F7220();
      char v41 = a1;
      uint64_t v43 = v42;

      uint64_t v44 = v49;
    }
    else
    {

      uint64_t v44 = 0;
      uint64_t v34 = 0;
      uint64_t v36 = 0;
      uint64_t v38 = 0;
      uint64_t v40 = 0;
      uint64_t v43 = 0;
    }
    sub_6BEC(a2);

    uint64_t result = sub_952A4(v47[8], v47[9], v47[10], v47[11]);
    v47[8] = v44;
    v47[9] = v34;
    v47[10] = v36;
    v47[11] = v38;
    v47[12] = v40;
    v47[13] = v43;
  }
  return result;
}

void RCSGroup.Icon.init(icon:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = [a1 name];
  uint64_t v5 = sub_F7220();
  uint64_t v7 = v6;

  id v8 = [a1 data];
  uint64_t v9 = sub_F6E30();
  uint64_t v11 = v10;

  id v12 = [a1 type];
  uint64_t v13 = sub_F7220();
  uint64_t v15 = v14;

  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = v13;
  a2[5] = v15;
}

uint64_t RCSGroup.removing(participants:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E9A0(v2, a2);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_95304(a2 + 40, a1);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v7 = *(void *)(*(void *)(a2 + 40) + 16);
  if (v7 >= v5) {
    return sub_95724(v5, v7);
  }
  __break(1u);
  return result;
}

id RCSMessage.Typing.init(indication:)(void *a1)
{
  id v2 = [a1 active];

  return v2;
}

id CTLazuliDestination.init(handle:countryCode:)(uint64_t a1, void (*a2)(void))
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_EC238(a1, a2, (uint64_t)v7);
  sub_6D20(a1);
  RCSHandle.rawValue.getter();
  sub_6D20((uint64_t)v7);
  uint64_t v5 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  [v4 setUri:v5];

  return v4;
}

id CTLazuliGroupChatConversationID.init(conversationID:)()
{
  swift_bridgeObjectRelease();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

id CTLazuliFileDispositionInformation.init(file:)(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_1282D0);
  __chkstk_darwin(v2 - 8);
  id v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_F70B0();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  id v30 = &v28[-v9];
  uint64_t v10 = type metadata accessor for RCSFile(0);
  __chkstk_darwin(v10);
  id v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v14 = a1 + *(int *)(v10 + 20);
  id v15 = v13;
  uint64_t v16 = (void *)sub_F7640();
  [v15 setFileSizeInBytes:v16];

  unint64_t v17 = (void *)sub_F71F0();
  [v15 setContentType:v17];

  unint64_t v18 = (void *)sub_F71F0();
  [v15 setOriginalFileName:v18];

  uint64_t v19 = type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v20 = sub_F6D70();
  [v15 setDataUrl:v20];

  sub_93520();
  long long v21 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  [v15 setValidUntil:v21];

  [v15 setDisposition:*(unsigned __int8 *)(v14 + *(int *)(v19 + 36)) - 1];
  LOBYTE(v20) = RCSFile.isAudio.getter();
  sub_95898(a1, (uint64_t)v12);
  if (v20)
  {
    sub_959C8((uint64_t)v12, type metadata accessor for RCSFile);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_F7070();
    sub_F7030();
    uint64_t v23 = v31;
    uint64_t v22 = v32;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v4, 1, v32) == 1)
    {
      sub_1E944((uint64_t)v4, &qword_1282D0);
      sub_959C8((uint64_t)v12, type metadata accessor for RCSFile);
      goto LABEL_8;
    }
    id v24 = v30;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v23 + 32))(v30, v4, v22);
    sub_F7090();
    int v29 = sub_F70A0();
    uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v23 + 8);
    v25(v8, v22);
    v25(v24, v22);
    sub_959C8((uint64_t)v12, type metadata accessor for RCSFile);
    if ((v29 & 1) == 0) {
      goto LABEL_8;
    }
  }
  if ((*(unsigned char *)(v14 + *(int *)(v19 + 40) + 8) & 1) == 0)
  {
    id v26 = (void *)sub_F75E0();
    [v15 setPlayingLengthInSeconds:v26];
  }
LABEL_8:

  sub_959C8(a1, type metadata accessor for RCSFile);
  return v15;
}

id CTLazuliFileThumbnailInformation.init(file:)(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_1283F0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_958FC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_959C8(a1, type metadata accessor for RCSFile);
    sub_1E944((uint64_t)v4, &qword_1283F0);
    return 0;
  }
  else
  {
    sub_95964((uint64_t)v4, (uint64_t)v8);
    id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v9 setContentType:v10];

    uint64_t v11 = (void *)sub_F7640();
    [v9 setFileSizeInBytes:v11];

    id v12 = (void *)sub_F6D70();
    [v9 setDataUrl:v12];

    sub_93520();
    id v13 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v9 setValidUntil:v13];

    sub_959C8(a1, type metadata accessor for RCSFile);
    sub_959C8((uint64_t)v8, type metadata accessor for RCSFile.ThumbnailInformation);
  }
  return v9;
}

id CTLazuliFileTransferDescriptor.init(file:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RCSFile(0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_6CA4(0, &qword_129A50);
  sub_95898(a1, (uint64_t)v4);
  id v6 = v5;
  id v7 = CTLazuliFileDispositionInformation.init(file:)((uint64_t)v4);
  [v6 setFile:v7];

  sub_6CA4(0, &qword_129A58);
  sub_95898(a1, (uint64_t)v4);
  id v8 = CTLazuliFileThumbnailInformation.init(file:)((uint64_t)v4);
  [v6 setThumbnail:v8];

  sub_959C8(a1, type metadata accessor for RCSFile);
  return v6;
}

uint64_t sub_951F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_95228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a5 >> 62)
  {
    if (a5 >> 62 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_errorRelease();
}

void *sub_95290(void *a1)
{
  return sub_CEEEC(0, a1[2], 0, a1);
}

uint64_t sub_952A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_2852C(a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_95304(uint64_t result, void *a2)
{
  uint64_t v49 = (void *)result;
  uint64_t v54 = *(void *)(*(void *)result + 16);
  if (!v54) {
    return 0;
  }
  unint64_t v3 = 0;
  uint64_t v56 = *(void **)result;
  uint64_t v58 = a2[2];
  uint64_t v50 = a2 + 7;
  uint64_t v52 = *(void *)result + 32;
  while (1)
  {
    if (!v58) {
      goto LABEL_3;
    }
    uint64_t v4 = v52 + (v3 << 6);
    uint64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = *(void *)(v4 + 24);
    uint64_t v8 = a2[4];
    uint64_t v7 = a2[5];
    if (v8 == v5 && v7 == v6) {
      goto LABEL_21;
    }
    uint64_t v10 = *(void *)(v4 + 16);
    uint64_t v11 = *(void *)(v4 + 24);
    uint64_t result = sub_F7B60();
    if (result) {
      break;
    }
    if (v58 != 1)
    {
      id v12 = v50;
      uint64_t v13 = 1;
      do
      {
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_58;
        }
        uint64_t result = *(v12 - 1);
        if (result == v10 && *v12 == v11) {
          goto LABEL_20;
        }
        uint64_t result = sub_F7B60();
        if (result) {
          goto LABEL_20;
        }
        v12 += 2;
        ++v13;
      }
      while (v14 != v58);
    }
LABEL_3:
    if (++v3 == v54) {
      return v56[2];
    }
  }
LABEL_20:
  uint64_t v5 = v8;
  uint64_t v6 = v7;
LABEL_21:
  unint64_t v16 = v3 + 1;
  unint64_t v17 = v56;
  if (__OFADD__(v3, 1)) {
    goto LABEL_62;
  }
  unint64_t v18 = v56[2];
  if (v16 == v18) {
    return v3;
  }
  uint64_t v38 = a2 + 7;
  uint64_t v53 = v6;
  uint64_t v55 = v5;
  while (v16 < v18)
  {
    uint64_t v19 = v17 + 4;
    uint64_t v20 = (uint64_t)&v17[8 * v16 + 4];
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = *(void *)(v20 + 24);
    if (v5 != v21 || v6 != v22)
    {
      uint64_t result = sub_F7B60();
      if (result)
      {
LABEL_42:
        uint64_t v6 = v53;
        uint64_t v5 = v55;
      }
      else
      {
        unint64_t v51 = v3;
        uint64_t v57 = v17;
        if (v58 != 1)
        {
          id v24 = v38;
          uint64_t v25 = 1;
          while (1)
          {
            uint64_t v26 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              break;
            }
            uint64_t result = *(v24 - 1);
            BOOL v27 = result == v21 && *v24 == v22;
            if (v27 || (uint64_t result = sub_F7B60(), (result & 1) != 0))
            {
              unint64_t v3 = v51;
              unint64_t v17 = v57;
              goto LABEL_42;
            }
            v24 += 2;
            ++v25;
            if (v26 == v58) {
              goto LABEL_39;
            }
          }
          __break(1u);
          break;
        }
LABEL_39:
        if (v51 == v16)
        {
          unint64_t v17 = v57;
        }
        else
        {
          unint64_t v17 = v57;
          if (v51 >= v18) {
            goto LABEL_60;
          }
          uint64_t v28 = &v19[8 * v51];
          uint64_t v29 = v28[1];
          uint64_t v39 = *v28;
          uint64_t v30 = v28[3];
          uint64_t v31 = v28[4];
          uint64_t v41 = v28[5];
          uint64_t v32 = v28[6];
          char v40 = *((unsigned char *)v28 + 56);
          uint64_t v33 = *(void *)(v20 + 8);
          uint64_t v34 = *(void *)(v20 + 24);
          uint64_t v47 = *(void *)(v20 + 16);
          uint64_t v48 = *(void *)v20;
          uint64_t v42 = v28[2];
          uint64_t v43 = *(void *)(v20 + 32);
          uint64_t v45 = *(void *)(v20 + 48);
          uint64_t v46 = *(void *)(v20 + 40);
          char v44 = *(unsigned char *)(v20 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v17 = sub_95290(v57);
          }
          uint64_t v35 = (uint64_t)&v17[8 * v51 + 4];
          *(void *)uint64_t v35 = v48;
          *(void *)(v35 + 8) = v33;
          *(void *)(v35 + 16) = v47;
          *(void *)(v35 + 24) = v34;
          *(void *)(v35 + 32) = v43;
          *(void *)(v35 + 40) = v46;
          *(void *)(v35 + 48) = v45;
          *(unsigned char *)(v35 + 56) = v44;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v16 >= v17[2]) {
            goto LABEL_61;
          }
          uint64_t v36 = (uint64_t)&v17[8 * v16 + 4];
          *(void *)uint64_t v36 = v39;
          *(void *)(v36 + 8) = v29;
          *(void *)(v36 + 16) = v42;
          *(void *)(v36 + 24) = v30;
          *(void *)(v36 + 32) = v31;
          *(void *)(v36 + 40) = v41;
          *(void *)(v36 + 48) = v32;
          *(unsigned char *)(v36 + 56) = v40;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          *uint64_t v49 = v17;
        }
        uint64_t v6 = v53;
        uint64_t v5 = v55;
        unint64_t v3 = v51 + 1;
        if (__OFADD__(v51, 1)) {
          goto LABEL_59;
        }
      }
    }
    if (__OFADD__(v16++, 1)) {
      goto LABEL_57;
    }
    unint64_t v18 = v17[2];
    if (v16 == v18) {
      return v3;
    }
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_95724(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_CEEEC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = a1 << 6;
  uint64_t v13 = (char *)&v4[8 * a1 + 4];
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v15 = v4[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t v18 = (char *)&v4[8 * a2 + 4];
    size_t v19 = v17 << 6;
    if (v12 != a2 << 6 || v13 >= &v18[v19]) {
      uint64_t result = (uint64_t)memmove(v13, v18, v19);
    }
    uint64_t v20 = v4[2];
    BOOL v16 = __OFADD__(v20, v8);
    uint64_t v21 = v20 - v7;
    if (!v16)
    {
      void v4[2] = v21;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_95898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSFile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_958FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_1283F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_95964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_959C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_95A2C()
{
  unint64_t result = qword_129A60;
  if (!qword_129A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_129A60);
  }
  return result;
}

uint64_t sub_95A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a5 >> 62)
  {
    if (a5 >> 62 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  return swift_errorRetain();
}

uint64_t _s10ParseErrorOwxx(uint64_t a1)
{
  return sub_95228(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
}

uint64_t *_s10ParseErrorOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_95A80(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *_s10ParseErrorOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  sub_95A80(*a2, v4, v5, v6, v7);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  unint64_t v12 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_95228(v8, v9, v10, v11, v12);
  return a1;
}

__n128 _s10ParseErrorOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *_s10ParseErrorOwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  unint64_t v8 = a1[4];
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = v3;
  sub_95228(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t _s10ParseErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)(a1 + 32) >> 57) >> 5) | (4
                                                           * ((*(void *)(a1 + 32) >> 57) & 0x18 | *(void *)(a1 + 32) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s10ParseErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(void *)(result + 32) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_95CF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_95D0C(uint64_t result)
{
  *(void *)(result + 32) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_95D1C(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[4] = result[4] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *__n128 result = (a2 - 2);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    result[4] = 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSGroup.ParseError()
{
  return &type metadata for RCSGroup.ParseError;
}

uint64_t RCSChipList.attributes.getter()
{
  uint64_t v1 = v0;
  if (qword_129080 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_F70F0();
  sub_8B44(v2, (uint64_t)static Logger.chatbot);
  swift_retain_n();
  uint64_t v3 = sub_F70D0();
  os_log_type_t v4 = sub_F7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    uint64_t v6 = *(void **)(v1 + 16);
    if (v6)
    {
      id v7 = [v6 chipList];
      sub_F7750();
      unint64_t v8 = sub_F7410();

      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_F79B0();
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
    sub_F77B0();
    swift_release();
    _os_log_impl(&dword_0, v3, v4, "Apply %ld chip list attributes", v5, 0xCu);
    swift_slowDealloc();

    long long v9 = *(void **)(v1 + 16);
    if (!v9) {
      return 0;
    }
  }
  else
  {

    swift_release_n();
    long long v9 = *(void **)(v1 + 16);
    if (!v9) {
      return 0;
    }
  }
  id v10 = [v9 dictionaryRepresentation];
  uint64_t v11 = sub_F71B0();

  return v11;
}

uint64_t RCSChipList.__allocating_init(_:originalID:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = self;
  os_log_type_t v4 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v5 = [v3 IMChipListFromCTChipList:a1 originalID:v4];

  *(void *)(v2 + 16) = v5;
  return v2;
}

uint64_t RCSChipList.init(_:originalID:)(void *a1)
{
  uint64_t v3 = self;
  os_log_type_t v4 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v5 = [v3 IMChipListFromCTChipList:a1 originalID:v4];

  *(void *)(v1 + 16) = v5;
  return v1;
}

uint64_t RCSSuggestedReply.deinit()
{
  return v0;
}

uint64_t RCSSuggestedReply.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RCSChipList()
{
  return self;
}

uint64_t RCSOperationController.OperationID.description.getter(uint64_t a1, uint64_t a2)
{
  sub_F78A0(48);
  swift_bridgeObjectRelease();
  v11[0] = 0xD000000000000016;
  v11[1] = 0x80000000001042B0;
  uint64_t v4 = sub_F6F30();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_9F710(&qword_1281F8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v12._uint64_t countAndFlagsBits = sub_F7B20();
  sub_F72E0(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13._uint64_t countAndFlagsBits = 0x4965707564656420;
  v13._object = (void *)0xEA00000000003D44;
  sub_F72E0(v13);
  v14._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  sub_F72E0(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x4449657565757120;
  v15._object = (void *)0xE90000000000003DLL;
  sub_F72E0(v15);
  v8._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if (v8._object)
  {
    object = v8._object;
  }
  else
  {
    v8._uint64_t countAndFlagsBits = 0x296C696E28;
    object = (void *)0xE500000000000000;
  }
  v8._object = object;
  sub_F72E0(v8);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 62;
  v16._object = (void *)0xE100000000000000;
  sub_F72E0(v16);
  return v11[0];
}

uint64_t RCSOperationController.Configuration.init(maxOperationDuration:operationExpirationWatchdogInterval:untrackedFulfillmentHandler:verifiesUniqueOperationIDs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  *(void *)(a4 + 16) = result;
  *(void *)(a4 + 24) = a2;
  *(unsigned char *)(a4 + 32) = a3;
  return result;
}

uint64_t RCSOperationController.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RCSOperationController.init(configuration:)(a1);
  return v2;
}

uint64_t sub_963D8()
{
  uint64_t v0 = sub_F70F0();
  sub_D994(v0, qword_129B10);
  uint64_t v1 = sub_8B44(v0, (uint64_t)qword_129B10);
  if (qword_129090 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_8B44(v0, (uint64_t)static Logger.operations);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t RCSOperationController.OperationError.errorDescription.getter()
{
  sub_9A458(v0, (uint64_t)&v18);
  if (v21)
  {
    uint64_t v1 = v20;
    sub_1EBC4(&v18, &v11);
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_F78A0(61);
    uint64_t v16 = v14;
    unint64_t v17 = v15;
    v22._uint64_t countAndFlagsBits = 0xD000000000000019;
    v22._object = (void *)0x80000000001042D0;
    sub_F72E0(v22);
    sub_BAD8((uint64_t)&v11, (uint64_t)&v14);
    v23._uint64_t countAndFlagsBits = sub_F7290();
    sub_F72E0(v23);
    swift_bridgeObjectRelease();
    v24._object = (void *)0x80000000001042F0;
    v24._uint64_t countAndFlagsBits = 0xD000000000000020;
    sub_F72E0(v24);
    uint64_t v14 = v1;
    sub_551C(&qword_128D28);
    v25._uint64_t countAndFlagsBits = sub_F7270();
    sub_F72E0(v25);
    swift_bridgeObjectRelease();
    uint64_t v2 = v16;
  }
  else
  {
    sub_1E87C(&v19, (uint64_t)&v11);
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_F78A0(83);
    v26._object = (void *)0x8000000000104320;
    v26._uint64_t countAndFlagsBits = 0xD000000000000020;
    sub_F72E0(v26);
    uint64_t v3 = v12;
    uint64_t v4 = v13;
    sub_6BA8(&v11, v12);
    uint64_t v5 = sub_F6F30();
    uint64_t v6 = *(void *)(v5 - 8);
    __chkstk_darwin(v5);
    Swift::String v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    sub_9F710(&qword_1281F8, (void (*)(uint64_t))&type metadata accessor for UUID);
    v27._uint64_t countAndFlagsBits = sub_F7B20();
    sub_F72E0(v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v28._uint64_t countAndFlagsBits = 0xD000000000000016;
    v28._object = (void *)0x8000000000104350;
    sub_F72E0(v28);
    sub_F7600();
    v29._uint64_t countAndFlagsBits = 0x73646E6F63657320;
    v29._object = (void *)0xEF2064657375202CLL;
    sub_F72E0(v29);
    sub_F7600();
    v30._uint64_t countAndFlagsBits = 0x73646E6F63657320;
    v30._object = (void *)0xE800000000000000;
    sub_F72E0(v30);
    uint64_t v2 = v14;
  }
  sub_6BEC((uint64_t)&v11);
  return v2;
}

uint64_t sub_967CC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v4) = a2;
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_F70F0();
  sub_8B44(v6, (uint64_t)qword_129B10);
  swift_retain_n();
  uint64_t v7 = sub_F70D0();
  os_log_type_t v8 = sub_F76B0();
  int v9 = v8;
  if (os_log_type_enabled(v7, v8))
  {
    LODWORD(v50) = v9;
    uint64_t v10 = swift_slowAlloc();
    unint64_t v51 = (void *)swift_slowAlloc();
    aBlock[0] = (uint64_t)v51;
    *(_DWORD *)uint64_t v10 = 141558531;
    uint64_t v61 = 1752392040;
    uint64_t v49 = &v62;
    sub_F77B0();
    *(_WORD *)(v10 + 12) = 2081;
    uint64_t v48 = (void *)(v10 + 14);
    uint64_t v11 = sub_F6F30();
    uint64_t v47 = v41;
    uint64_t v12 = *(void *)(v11 - 8);
    LODWORD(v52) = v4;
    uint64_t v13 = v12;
    __chkstk_darwin(v11);
    uint64_t v15 = a1;
    uint64_t v16 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v18 = *(void *)(v2
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 24);
    uint64_t v17 = *(void *)(v2
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 32);
    sub_6BA8((void *)(v2 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v18);
    (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
    sub_9F710(&qword_1281F8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = sub_F7B20();
    unint64_t v21 = v20;
    Swift::String v22 = v16;
    a1 = v15;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v11);
    uint64_t v61 = sub_A3FC(v19, v21, aBlock);
    sub_F77B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2048;
    swift_beginAccess();
    uint64_t v4 = *(void *)(*(void *)(v3 + 152) + 16);
    swift_release();
    uint64_t v61 = v4;
    LOBYTE(v4) = v52;
    sub_F77B0();
    swift_release();
    _os_log_impl(&dword_0, v7, (os_log_type_t)v50, "Operation completed with ID %{private,mask.hash}s - notifying %ld listener(s)", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if ((v4 & 1) == 0)
    {
LABEL_5:
      uint64_t v56 = &type metadata for Never;
      LOBYTE(v57) = 0;
      goto LABEL_8;
    }
  }
  else
  {

    swift_release_n();
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
  }
  aBlock[0] = a1;
  LOBYTE(v57) = 1;
  swift_errorRetain();
LABEL_8:
  sub_1E74C((uint64_t)aBlock, (uint64_t)&v61, &qword_1294B0);
  swift_beginAccess();
  sub_9F584((uint64_t)&v61, v3 + 112);
  swift_endAccess();
  uint64_t result = swift_beginAccess();
  uint64_t v45 = *(void *)(v3 + 152);
  uint64_t v24 = *(void *)(v45 + 16);
  if (v24)
  {
    unint64_t v43 = sub_9F5EC();
    uint64_t v25 = sub_F7110();
    v41[1] = &v55;
    uint64_t v42 = v25;
    v41[0] = v25 - 8;
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    uint64_t v44 = v24;
    uint64_t v27 = v42;
    do
    {
      uint64_t v28 = v45 + 16 * v26++;
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = *(_OWORD *)(v28 + 32);
      swift_retain();
      uint64_t v52 = sub_F7700();
      uint64_t v59 = a1;
      char v60 = v4 & 1;
      uint64_t v30 = swift_allocObject();
      sub_1E74C((uint64_t)&v59, v30 + 16, &qword_129DA8);
      *(void *)(v30 + 32) = sub_9F664;
      *(void *)(v30 + 40) = v29;
      uint64_t v57 = sub_9F6DC;
      uint64_t v58 = v30;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t v55 = sub_552C4;
      uint64_t v56 = &unk_120458;
      uint64_t v48 = _Block_copy(aBlock);
      uint64_t v50 = sub_F7150();
      unint64_t v51 = v41;
      uint64_t v49 = *(uint64_t **)(v50 - 8);
      __chkstk_darwin(v50);
      uint64_t v32 = (char *)v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      LODWORD(v47) = v4 & 1;
      sub_9F704(a1, v4 & 1);
      swift_retain();
      sub_9F704(a1, v4 & 1);
      swift_retain();
      uint64_t v33 = sub_F7130();
      uint64_t v46 = v41;
      uint64_t v34 = *(void *)(v27 - 8);
      __chkstk_darwin(v33);
      uint64_t v36 = (char *)v41 - v35;
      uint64_t v53 = _swiftEmptyArrayStorage;
      sub_9F710((unint64_t *)&qword_128150, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_551C(&qword_128158);
      sub_1ED44();
      sub_F7810();
      uint64_t v37 = v48;
      uint64_t v38 = (void *)v52;
      sub_F7710();
      _Block_release(v37);
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v27);
      uint64_t v39 = v32;
      uint64_t v40 = v44;
      ((void (*)(char *, uint64_t))v49[1])(v39, v50);
      sub_9F6D0(a1, (char)v47);
      swift_release();
    }
    while (v40 != v26);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_96FAC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_F70F0();
  sub_8B44(v4, (uint64_t)qword_129B10);
  swift_retain_n();
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F76B0();
  int v7 = v6;
  uint64_t v42 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    aBlock[0] = v47;
    *(_DWORD *)uint64_t v8 = 141558531;
    *(void *)&long long v55 = 1752392040;
    LODWORD(v46) = v7;
    sub_F77B0();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v45 = v8 + 14;
    uint64_t v9 = sub_F6F30();
    uint64_t v44 = v38;
    uint64_t v10 = *(void *)(v9 - 8);
    __chkstk_darwin(v9);
    uint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v14 = *(void *)(v1
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 24);
    uint64_t v13 = *(void *)(v1
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 32);
    sub_6BA8((void *)(v1 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
    sub_9F710(&qword_1281F8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = sub_F7B20();
    unint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(void *)&long long v55 = sub_A3FC(v15, v17, aBlock);
    sub_F77B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2048;
    swift_beginAccess();
    uint64_t v18 = *(void *)(*(void *)(v2 + 152) + 16);
    swift_release();
    *(void *)&long long v55 = v18;
    sub_F77B0();
    swift_release();
    _os_log_impl(&dword_0, v5, (os_log_type_t)v46, "Operation completed with ID %{private,mask.hash}s - notifying %ld listener(s)", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v42;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_2C4C0(a1, (uint64_t)&v55, (uint64_t *)&unk_128CF0);
  char v19 = v56;
  if (v56)
  {
    aBlock[0] = v55;
  }
  else
  {
    unint64_t v51 = (char *)&type metadata for Any + 8;
    aBlock[0] = swift_allocObject();
    sub_1EBC4(&v55, (_OWORD *)(aBlock[0] + 16));
  }
  LOBYTE(v52) = v19;
  sub_1E74C((uint64_t)aBlock, (uint64_t)&v55, &qword_1294B0);
  swift_beginAccess();
  sub_9F584((uint64_t)&v55, v2 + 112);
  swift_endAccess();
  uint64_t result = swift_beginAccess();
  uint64_t v43 = *(void *)(v2 + 152);
  uint64_t v21 = *(void *)(v43 + 16);
  if (v21)
  {
    unint64_t v40 = sub_9F5EC();
    uint64_t v22 = sub_F7110();
    _OWORD v38[2] = &v50;
    uint64_t v39 = v22;
    v38[1] = v22 - 8;
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v41 = v21;
    uint64_t v24 = v39;
    do
    {
      uint64_t v25 = v43 + 16 * v23++;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = *(_OWORD *)(v25 + 32);
      swift_retain();
      uint64_t v47 = sub_F7700();
      sub_2C4C0(a1, (uint64_t)&v55, (uint64_t *)&unk_128CF0);
      sub_2C4C0((uint64_t)&v55, (uint64_t)v54, (uint64_t *)&unk_128CF0);
      uint64_t v27 = swift_allocObject();
      sub_1E74C((uint64_t)v54, v27 + 16, (uint64_t *)&unk_128CF0);
      *(void *)(v27 + 56) = sub_9FD94;
      *(void *)(v27 + 64) = v26;
      uint64_t v52 = sub_9FD20;
      uint64_t v53 = v27;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t v50 = sub_552C4;
      unint64_t v51 = (char *)&unk_120628;
      uint64_t v28 = _Block_copy(aBlock);
      uint64_t v45 = sub_F7150();
      uint64_t v46 = v38;
      uint64_t v29 = *(void *)(v45 - 8);
      __chkstk_darwin(v45);
      uint64_t v31 = (char *)v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_retain_n();
      uint64_t v32 = sub_F7130();
      uint64_t v44 = v38;
      uint64_t v33 = *(void *)(v24 - 8);
      __chkstk_darwin(v32);
      uint64_t v35 = (char *)v38 - v34;
      uint64_t v48 = _swiftEmptyArrayStorage;
      sub_9F710((unint64_t *)&qword_128150, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_551C(&qword_128158);
      sub_1ED44();
      sub_F7810();
      uint64_t v36 = (void *)v47;
      sub_F7710();
      _Block_release(v28);
      uint64_t v37 = v41;
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v24);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v45);
      a1 = v42;
      sub_1E944((uint64_t)&v55, (uint64_t *)&unk_128CF0);
      swift_release();
    }
    while (v37 != v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_97794(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_F70F0();
  sub_8B44(v4, (uint64_t)qword_129B10);
  swift_retain_n();
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F76B0();
  int v7 = v6;
  uint64_t v42 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(void *)&long long aBlock = v47;
    *(_DWORD *)uint64_t v8 = 141558531;
    v53[0] = 1752392040;
    LODWORD(v46) = v7;
    sub_F77B0();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v45 = v8 + 14;
    uint64_t v9 = sub_F6F30();
    uint64_t v44 = v38;
    uint64_t v10 = *(void *)(v9 - 8);
    __chkstk_darwin(v9);
    uint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v14 = *(void *)(v1
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 24);
    uint64_t v13 = *(void *)(v1
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 32);
    sub_6BA8((void *)(v1 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
    sub_9F710(&qword_1281F8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = sub_F7B20();
    unint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v53[0] = sub_A3FC(v15, v17, (uint64_t *)&aBlock);
    sub_F77B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2048;
    swift_beginAccess();
    uint64_t v18 = *(void *)(*(void *)(v2 + 152) + 16);
    swift_release();
    v53[0] = v18;
    sub_F77B0();
    swift_release();
    _os_log_impl(&dword_0, v5, (os_log_type_t)v46, "Operation completed with ID %{private,mask.hash}s - notifying %ld listener(s)", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v42;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_2C4C0(a1, (uint64_t)&aBlock, &qword_128030);
  char v19 = v51;
  if (v51)
  {
    v53[0] = aBlock;
  }
  else
  {
    v53[3] = sub_551C(&qword_1294C0);
    v53[0] = swift_allocObject();
    sub_1E87C(&aBlock, v53[0] + 16);
  }
  char v54 = v19;
  sub_1E74C((uint64_t)v53, (uint64_t)&aBlock, &qword_1294B0);
  swift_beginAccess();
  sub_9F584((uint64_t)&aBlock, v2 + 112);
  swift_endAccess();
  uint64_t result = swift_beginAccess();
  uint64_t v43 = *(void *)(v2 + 152);
  uint64_t v21 = *(void *)(v43 + 16);
  if (v21)
  {
    unint64_t v40 = sub_9F5EC();
    uint64_t v22 = sub_F7110();
    _OWORD v38[2] = v50;
    uint64_t v39 = v22;
    v38[1] = v22 - 8;
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v41 = v21;
    uint64_t v24 = v39;
    do
    {
      uint64_t v25 = v43 + 16 * v23++;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = *(_OWORD *)(v25 + 32);
      swift_retain();
      uint64_t v47 = sub_F7700();
      sub_2C4C0(a1, (uint64_t)v53, &qword_128030);
      sub_2C4C0((uint64_t)v53, (uint64_t)v52, &qword_128030);
      uint64_t v27 = swift_allocObject();
      sub_1E74C((uint64_t)v52, v27 + 16, &qword_128030);
      *(void *)(v27 + 64) = sub_9FD8C;
      *(void *)(v27 + 72) = v26;
      _OWORD v50[2] = sub_9F874;
      uint64_t v51 = v27;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v50[0] = sub_552C4;
      v50[1] = &unk_1204E8;
      uint64_t v28 = _Block_copy(&aBlock);
      uint64_t v45 = sub_F7150();
      uint64_t v46 = v38;
      uint64_t v29 = *(void *)(v45 - 8);
      __chkstk_darwin(v45);
      uint64_t v31 = (char *)v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_retain_n();
      uint64_t v32 = sub_F7130();
      uint64_t v44 = v38;
      uint64_t v33 = *(void *)(v24 - 8);
      __chkstk_darwin(v32);
      uint64_t v35 = (char *)v38 - v34;
      uint64_t v48 = _swiftEmptyArrayStorage;
      sub_9F710((unint64_t *)&qword_128150, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_551C(&qword_128158);
      sub_1ED44();
      sub_F7810();
      uint64_t v36 = (void *)v47;
      sub_F7710();
      _Block_release(v28);
      uint64_t v37 = v41;
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v24);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v45);
      a1 = v42;
      sub_1E944((uint64_t)v53, &qword_128030);
      swift_release();
    }
    while (v37 != v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_97F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_8C18(&qword_127D08);
  uint64_t v6 = sub_F7C60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void **)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v59 - v10;
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_F70F0();
  sub_8B44(v12, (uint64_t)qword_129B10);
  swift_retain_n();
  uint64_t v13 = sub_F70D0();
  os_log_type_t v14 = sub_F76B0();
  LODWORD(v74) = v14;
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v69 = a2;
  uint64_t v68 = a1;
  uint64_t v67 = (char *)v59 - (((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v11;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    aBlock[0] = v72;
    *(_DWORD *)uint64_t v16 = 141558531;
    uint64_t v78 = 1752392040;
    uint64_t v70 = &v79;
    sub_F77B0();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v65 = v16 + 14;
    uint64_t v17 = sub_F6F30();
    uint64_t v64 = v59;
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v73 = v8;
    uint64_t v19 = v6;
    uint64_t v20 = v18;
    __chkstk_darwin(v17);
    uint64_t v22 = v7;
    uint64_t v23 = (char *)v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    os_log_t v71 = v13;
    uint64_t v25 = *(void *)(v2
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 24);
    uint64_t v24 = *(void *)(v2
                    + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                    + 32);
    sub_6BA8((void *)(v2 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v25);
    (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v25, v24);
    sub_9F710(&qword_1281F8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v26 = sub_F7B20();
    unint64_t v28 = v27;
    uint64_t v29 = v23;
    uint64_t v7 = v22;
    uint64_t v30 = v17;
    a2 = v69;
    a1 = v68;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v29, v30);
    uint64_t v6 = v19;
    uint64_t v8 = v73;
    uint64_t v78 = sub_A3FC(v26, v28, aBlock);
    sub_F77B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2048;
    swift_beginAccess();
    uint64_t v31 = *(void *)(*(void *)(v3 + 152) + 16);
    swift_release();
    uint64_t v78 = v31;
    sub_F77B0();
    swift_release();
    os_log_t v32 = v71;
    _os_log_impl(&dword_0, v71, (os_log_type_t)v74, "Operation completed with ID %{private,mask.hash}s - notifying %ld listener(s)", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v33 = swift_release_n();
  }
  __chkstk_darwin(v33);
  v59[-2] = a2;
  sub_98928((void (*)(char *))sub_9FA6C, v6, (uint64_t)aBlock);
  sub_1E74C((uint64_t)aBlock, (uint64_t)&v78, &qword_1294B0);
  swift_beginAccess();
  sub_9F584((uint64_t)&v78, v3 + 112);
  swift_endAccess();
  uint64_t result = swift_beginAccess();
  uint64_t v70 = *(char **)(v3 + 152);
  uint64_t v35 = *((void *)v70 + 2);
  if (v35)
  {
    uint64_t v64 = (void *)sub_9F5EC();
    uint64_t v36 = sub_F7110();
    uint64_t v61 = v7 + 16;
    char v60 = (char *)v8 + 7;
    v59[3] = v7 + 32;
    v59[2] = v77;
    uint64_t v62 = v36;
    v59[1] = v36 - 8;
    v59[0] = v7 + 8;
    swift_bridgeObjectRetain();
    uint64_t v37 = 0;
    uint64_t v66 = v7;
    uint64_t v65 = v35;
    uint64_t v63 = v6;
    do
    {
      uint64_t v38 = &v70[16 * v37++];
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = *((_OWORD *)v38 + 2);
      swift_retain();
      uint64_t v74 = sub_F7700();
      unint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      uint64_t v41 = v75;
      v40(v75, a1, v6);
      uint64_t v42 = v67;
      v40(v67, (uint64_t)v41, v6);
      unint64_t v43 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      unint64_t v44 = (unint64_t)&v60[v43] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = a2;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v45 + v43, v42, v6);
      uint64_t v46 = (uint64_t (**)())(v45 + v44);
      *uint64_t v46 = sub_9FD90;
      v46[1] = (uint64_t (*)())v39;
      v77[2] = sub_9FC10;
      v77[3] = v45;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v77[0] = sub_552C4;
      v77[1] = &unk_1205B0;
      uint64_t v47 = _Block_copy(aBlock);
      uint64_t v72 = sub_F7150();
      uint64_t v73 = v59;
      uint64_t v48 = *(void *)(v72 - 8);
      __chkstk_darwin(v72);
      uint64_t v50 = (char *)v59 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_retain_n();
      uint64_t v51 = sub_F7130();
      os_log_t v71 = (os_log_t)v59;
      uint64_t v52 = v62;
      uint64_t v53 = *(void *)(v62 - 8);
      __chkstk_darwin(v51);
      long long v55 = (char *)v59 - v54;
      v77[4] = _swiftEmptyArrayStorage;
      sub_9F710((unint64_t *)&qword_128150, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_551C(&qword_128158);
      sub_1ED44();
      a1 = v68;
      sub_F7810();
      char v56 = (void *)v74;
      sub_F7710();
      _Block_release(v47);
      swift_release_n();

      uint64_t v57 = v55;
      uint64_t v6 = v63;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v57, v52);
      uint64_t v58 = v65;
      a2 = v69;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v72);
      uint64_t v7 = v66;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v75, v6);
      swift_release();
    }
    while (v58 != v37);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_98928@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, void))(*(void *)(*(void *)(a2 + 24) - 8) + 32))(a3, v12, *(void *)(a2 + 24));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  sub_F7C60();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_98B3C(uint64_t a1, char a2, void (*a3)(void *))
{
  if (a2)
  {
    v5[0] = a1;
    char v6 = 1;
    swift_errorRetain();
  }
  else
  {
    v5[3] = &type metadata for Never;
    char v6 = 0;
  }
  a3(v5);
  return sub_1E944((uint64_t)v5, (uint64_t *)&unk_128CF0);
}

uint64_t sub_98BAC(uint64_t a1, void (*a2)(void *))
{
  sub_2C4C0(a1, (uint64_t)v7, (uint64_t *)&unk_128CF0);
  if (v8)
  {
    v5[0] = *(void *)&v7[0];
    char v6 = 1;
    swift_errorRetain();
    a2(v5);
    swift_errorRelease();
  }
  else
  {
    sub_1EBC4(v7, v4);
    v5[3] = (char *)&type metadata for Any + 8;
    v5[0] = swift_allocObject();
    sub_BAD8((uint64_t)v4, v5[0] + 16);
    char v6 = 0;
    a2(v5);
    sub_6BEC((uint64_t)v4);
  }
  return sub_1E944((uint64_t)v5, (uint64_t *)&unk_128CF0);
}

uint64_t sub_98C90(uint64_t a1, void (*a2)(void *))
{
  sub_2C4C0(a1, (uint64_t)v9, &qword_128030);
  if (v10)
  {
    v7[0] = *(void *)&v9[0];
    char v8 = 1;
    swift_errorRetain();
    a2(v7);
    swift_errorRelease();
    uint64_t v3 = v7;
  }
  else
  {
    sub_1E87C(v9, (uint64_t)v7);
    v5[3] = sub_551C(&qword_1294C0);
    v5[0] = swift_allocObject();
    sub_289D4((uint64_t)v7, v5[0] + 16);
    char v6 = 0;
    a2(v5);
    sub_6BEC((uint64_t)v7);
    uint64_t v3 = v5;
  }
  return sub_1E944((uint64_t)v3, (uint64_t *)&unk_128CF0);
}

uint64_t sub_98D80(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8C18(&qword_127D08);
  uint64_t v10 = sub_F7C60();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17[-1] - v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v17[-1] - v11, a1, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17[0] = *v12;
    char v18 = 1;
    swift_errorRetain();
    a2(v17);
    swift_errorRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v9, v12, a4);
    v17[3] = a4;
    uint64_t v14 = sub_28728(v17);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v14, v9, a4);
    char v18 = 0;
    a2(v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a4);
  }
  return sub_1E944((uint64_t)v17, (uint64_t *)&unk_128CF0);
}

uint64_t sub_98FA8(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  sub_8C18(&qword_127D08);
  v3[20] = sub_F7C60();
  v3[21] = swift_task_alloc();
  return _swift_task_switch(sub_99060, v2, 0);
}

uint64_t sub_99060()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 152) + 112;
  swift_beginAccess();
  sub_2C4C0(v1, v0 + 56, &qword_1294B0);
  if (*(unsigned __int8 *)(v0 + 88) == 255)
  {
    uint64_t v21 = *(void *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 152);
    sub_1E944(v0 + 56, &qword_1294B0);
    unint64_t v22 = sub_9F8B8();
    uint64_t v23 = swift_task_alloc();
    *(void *)(v0 + 176) = v23;
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v20;
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_994F8;
    uint64_t v25 = *(void *)(v0 + 136);
    uint64_t v26 = *(void *)(v0 + 144);
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v25, v20, v22, 0x292874696177, 0xE600000000000000, sub_9F910, v23, v26);
  }
  else
  {
    uint64_t v2 = v0 + 16;
    uint64_t v3 = v0 + 120;
    sub_1E74C(v0 + 56, v0 + 16, (uint64_t *)&unk_128CF0);
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_F70F0();
    sub_8B44(v4, (uint64_t)qword_129B10);
    swift_retain_n();
    uint64_t v5 = sub_F70D0();
    os_log_type_t v6 = sub_F7680();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 152);
    if (v7)
    {
      os_log_type_t type = v6;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      buf = v9;
      uint64_t v10 = sub_F6F30();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = *(void *)(v8
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 24);
      uint64_t v14 = *(void *)(v8
                      + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                      + 32);
      sub_6BA8((void *)(v8+ OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v13);
      BOOL v15 = *(void (**)(uint64_t, uint64_t))(v14 + 16);
      uint64_t v16 = v14;
      uint64_t v2 = v0 + 16;
      v15(v13, v16);
      sub_9F710(&qword_1281F8, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v17 = sub_F7B20();
      unint64_t v19 = v18;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
      swift_task_dealloc();
      *(void *)(v0 + 128) = sub_A3FC(v17, v19, &v33);
      uint64_t v3 = v0 + 120;
      sub_F77B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v5, type, "Fulfilling operation %s with already-received result", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v27 = *(void *)(v0 + 160);
    uint64_t v28 = *(void *)(v0 + 136);
    sub_996A8(v2, *(void *)(v0 + 144), *(uint64_t **)(v0 + 168));
    sub_99870(v27, v3, v28);
    sub_1E944(v2, (uint64_t *)&unk_128CF0);
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
}

uint64_t sub_994F8()
{
  uint64_t v2 = (void *)*v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[19];
    return _swift_task_switch(sub_9963C, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_9963C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_996A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2C4C0(v6, (uint64_t)v15, (uint64_t *)&unk_128CF0);
  if (v16)
  {
    *a3 = *(void *)&v15[0];
  }
  else
  {
    if (swift_dynamicCast())
    {
      (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 32))(a3, v8, a2);
      sub_8C18(&qword_127D08);
      sub_F7C60();
      swift_storeEnumTagMultiPayload();
      return sub_6BEC((uint64_t)v15);
    }
    sub_1EBC4(v15, v14);
    sub_8A304();
    uint64_t v10 = swift_allocError();
    uint64_t v12 = v11;
    sub_BAD8((uint64_t)v14, v11);
    *(void *)(v12 + 32) = a2;
    *(unsigned char *)(v12 + 56) = 1;
    sub_6BEC((uint64_t)v14);
    *a3 = v10;
  }
  sub_8C18(&qword_127D08);
  sub_F7C60();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_99870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_99940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8C18(&qword_127D08);
  uint64_t v6 = sub_F74A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - v8, a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, v9, v6);
  uint64_t v12 = (char **)(a2 + 152);
  swift_beginAccess();
  uint64_t v13 = *(char **)(a2 + 152);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 152) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v13 = sub_CEDDC(0, *((void *)v13 + 2) + 1, 1, v13);
    *uint64_t v12 = v13;
  }
  unint64_t v16 = *((void *)v13 + 2);
  unint64_t v15 = *((void *)v13 + 3);
  if (v16 >= v15 >> 1)
  {
    uint64_t v13 = sub_CEDDC((char *)(v15 > 1), v16 + 1, 1, v13);
    *uint64_t v12 = v13;
  }
  *((void *)v13 + 2) = v16 + 1;
  uint64_t v17 = &v13[16 * v16];
  *((void *)v17 + 4) = sub_9F9C8;
  *((void *)v17 + 5) = v11;
  return swift_endAccess();
}

uint64_t sub_99B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8C18(&qword_127D08);
  uint64_t v5 = sub_F7C60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - v7;
  sub_996A8(a1, a3, (uint64_t *)((char *)&v11 - v7));
  uint64_t v9 = sub_F74A0();
  sub_99C4C((uint64_t)v8, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_99C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v5);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_F7C60();
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_F7480();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_F7490();
  }
}

uint64_t sub_99E88()
{
  sub_1E944(v0 + 112, &qword_1294B0);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_creationDate;
  uint64_t v2 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_6BEC(v0 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t RCSActor.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_99F38()
{
  uint64_t v0 = sub_F6EE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6EC0();
  char v4 = sub_F6E70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

double RCSOperationController.Configuration.maxOperationDuration.getter()
{
  return *(double *)v0;
}

void RCSOperationController.Configuration.maxOperationDuration.setter(double a1)
{
  double *v1 = a1;
}

uint64_t (*RCSOperationController.Configuration.maxOperationDuration.modify())()
{
  return nullsub_1;
}

double RCSOperationController.Configuration.operationExpirationWatchdogInterval.getter()
{
  return *(double *)(v0 + 8);
}

void RCSOperationController.Configuration.operationExpirationWatchdogInterval.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*RCSOperationController.Configuration.operationExpirationWatchdogInterval.modify())()
{
  return nullsub_2;
}

uint64_t RCSOperationController.Configuration.untrackedFulfillmentHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_9A490(v1);
  return v1;
}

uint64_t RCSOperationController.Configuration.untrackedFulfillmentHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_43254(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RCSOperationController.Configuration.untrackedFulfillmentHandler.modify())()
{
  return nullsub_3;
}

uint64_t RCSOperationController.Configuration.verifiesUniqueOperationIDs.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t RCSOperationController.Configuration.verifiesUniqueOperationIDs.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*RCSOperationController.Configuration.verifiesUniqueOperationIDs.modify())()
{
  return nullsub_4;
}

uint64_t RCSOperationController.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_F7520();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_551C(&qword_128B40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  sub_F6F60();
  sub_F74F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v8);
  *(void *)(v2 + 112) = sub_F6F50();
  *(void *)(v2 + 160) = sub_E8DBC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v2 + 168) = sub_4B470((uint64_t)_swiftEmptyArrayStorage);
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 136) = v15;
  *(unsigned char *)(v2 + 152) = *(unsigned char *)(a1 + 32);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  sub_9A490(*(void *)(a1 + 16));
  sub_F74F0();
  double v17 = *(double *)(a1 + 8);
  type metadata accessor for AsyncPersistentTimer();
  swift_allocObject();
  swift_retain();
  uint64_t v18 = sub_DDA2C((uint64_t)v7, (uint64_t)&unk_129B30, v16, v17);
  swift_release();
  sub_6536C(a1);
  *(void *)(v2 + 176) = v18;
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  return v2;
}

uint64_t sub_9A458(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_9A490(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_9A4A0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_9A4D8(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_9A4F8, 0, 0);
}

uint64_t sub_9A4F8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[7] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_9A600;
    v3[13] = v2;
    return _swift_task_switch(sub_9A8CC, v2, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_9A600()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_9A710()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_9A7B8;
  void v2[5] = v0;
  return _swift_task_switch(sub_9A4F8, 0, 0);
}

uint64_t sub_9A7B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_9A8AC()
{
  *(void *)(v1 + 104) = v0;
  return _swift_task_switch(sub_9A8CC, v0, 0);
}

uint64_t sub_9A8CC()
{
  uint64_t v46 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = sub_F6EE0();
  *(void *)(v0 + 112) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v0 + 120) = *(void *)(v4 + 64);
  uint64_t v5 = swift_task_alloc();
  sub_F6EB0();
  swift_beginAccess();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v2;
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_9F40C(v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_9F168, v6);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v9 = sub_49B6C(v8);
  *(void *)(v0 + 128) = v9;
  swift_release();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 136) = v10;
  *(void *)(v0 + 144) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v5, v3);
  swift_task_dealloc();
  uint64_t v11 = v9[2];
  *(void *)(v0 + 152) = v11;
  if (v11)
  {
    uint64_t v12 = 0;
    uint64_t v13 = (uint64_t *)(v0 + 64);
    while (1)
    {
      *(void *)(v0 + 160) = v12;
      uint64_t v14 = *(void *)(v0 + 128) + 16 * v12;
      uint64_t v16 = *(void *)(v14 + 32);
      unint64_t v15 = *(void *)(v14 + 40);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_1C9BC(v16, v15);
      char v19 = v18;
      swift_bridgeObjectRelease();
      if (v19) {
        break;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(v0 + 160) + 1;
      if (v12 == *(void *)(v0 + 152)) {
        goto LABEL_5;
      }
    }
    uint64_t v22 = *v1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *(void *)(v22 + 160);
    *uint64_t v13 = v24;
    *(void *)(v22 + 160) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_E0724();
      uint64_t v24 = *v13;
    }
    unint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
    uint64_t v43 = *(void *)(v0 + 112);
    uint64_t v25 = *(void *)(v0 + 104);
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(*(void *)(v24 + 56) + 8 * v17);
    *(void *)(v0 + 168) = v26;
    sub_F1320(v17, v24);
    *(void *)(v25 + 160) = v24;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v27 = swift_task_alloc();
    sub_F6EB0();
    sub_F6E90();
    double v29 = v28;
    v44(v27, v43);
    sub_F6E90();
    double v31 = v30;
    swift_task_dealloc();
    if (qword_1290A8 != -1) {
      swift_once();
    }
    double v32 = v29 - v31;
    uint64_t v33 = sub_F70F0();
    sub_8B44(v33, (uint64_t)qword_129B10);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_F70D0();
    os_log_type_t v35 = sub_F76B0();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = *v1;
    if (v36)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 141558787;
      *(void *)(v0 + 72) = 1752392040;
      sub_F77B0();
      *(_WORD *)(v38 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 80) = sub_A3FC(v16, v15, &v45);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 22) = 2048;
      *(double *)(v0 + 88) = v32;
      sub_F77B0();
      *(_WORD *)(v38 + 32) = 2048;
      *(void *)(v0 + 96) = *(void *)(v37 + 120);
      sub_F77B0();
      swift_release_n();
      _os_log_impl(&dword_0, v34, v35, "Terminating operation with ID %{private,mask.hash}s - took %f seconds, allowed %f seconds", (uint8_t *)v38, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v39 = *(void *)(v0 + 104);
    sub_8A304();
    uint64_t v40 = swift_allocError();
    uint64_t v42 = v41;
    *(void *)(v0 + 176) = v40;
    *(void *)uint64_t v41 = *(void *)(v39 + 120);
    *(double *)(v41 + 8) = v32;
    sub_289D4(v26 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id, v41 + 16);
    *(unsigned char *)(v42 + 56) = 0;
    return _swift_task_switch(sub_9AE98, v26, 0);
  }
  else
  {
LABEL_5:
    swift_release();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_9AE98()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_967CC(*(void *)(v0 + 176), 1);
  swift_errorRelease();
  return _swift_task_switch(sub_9AF1C, v1, 0);
}

uint64_t sub_9AF1C()
{
  uint64_t v35 = v0;
  swift_release();
  uint64_t v1 = *(void *)(v0 + 160) + 1;
  if (v1 == *(void *)(v0 + 152))
  {
LABEL_5:
    swift_release();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    uint64_t v2 = (uint64_t *)(v0 + 64);
    while (1)
    {
      *(void *)(v0 + 160) = v1;
      uint64_t v3 = *(void *)(v0 + 128) + 16 * v1;
      uint64_t v5 = *(void *)(v3 + 32);
      unint64_t v4 = *(void *)(v3 + 40);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v6 = sub_1C9BC(v5, v4);
      char v8 = v7;
      swift_bridgeObjectRelease();
      if (v8) {
        break;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v1 = *(void *)(v0 + 160) + 1;
      if (v1 == *(void *)(v0 + 152)) {
        goto LABEL_5;
      }
    }
    uint64_t v11 = *(void *)(v0 + 104);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *(void *)(v11 + 160);
    *uint64_t v2 = v13;
    *(void *)(v11 + 160) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_E0724();
      uint64_t v13 = *v2;
    }
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 104);
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v6);
    *(void *)(v0 + 168) = v16;
    sub_F1320(v6, v13);
    *(void *)(v15 + 160) = v13;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v17 = swift_task_alloc();
    sub_F6EB0();
    sub_F6E90();
    double v19 = v18;
    v33(v17, v14);
    sub_F6E90();
    double v21 = v20;
    swift_task_dealloc();
    if (qword_1290A8 != -1) {
      swift_once();
    }
    double v22 = v19 - v21;
    uint64_t v23 = sub_F70F0();
    sub_8B44(v23, (uint64_t)qword_129B10);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_F70D0();
    os_log_type_t v25 = sub_F76B0();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = *(void *)(v0 + 104);
    if (v26)
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 141558787;
      *(void *)(v0 + 72) = 1752392040;
      sub_F77B0();
      *(_WORD *)(v28 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 80) = sub_A3FC(v5, v4, &v34);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 22) = 2048;
      *(double *)(v0 + 88) = v22;
      sub_F77B0();
      *(_WORD *)(v28 + 32) = 2048;
      *(void *)(v0 + 96) = *(void *)(v27 + 120);
      sub_F77B0();
      swift_release_n();
      _os_log_impl(&dword_0, v24, v25, "Terminating operation with ID %{private,mask.hash}s - took %f seconds, allowed %f seconds", (uint8_t *)v28, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v29 = *(void *)(v0 + 104);
    sub_8A304();
    uint64_t v30 = swift_allocError();
    uint64_t v32 = v31;
    *(void *)(v0 + 176) = v30;
    *(void *)uint64_t v31 = *(void *)(v29 + 120);
    *(double *)(v31 + 8) = v22;
    sub_289D4(v16 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id, v31 + 16);
    *(unsigned char *)(v32 + 56) = 0;
    return _swift_task_switch(sub_9AE98, v16, 0);
  }
}

uint64_t RCSOperationController.operation<A>(id:completedWithResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return _swift_task_switch(sub_9B3FC, v4, 0);
}

uint64_t sub_9B3FC()
{
  BOOL v26 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  swift_beginAccess();
  uint64_t v3 = sub_9DD1C(v1, v2, (void (*)(unint64_t, uint64_t))sub_F1320, (void (*)(void))sub_E0724);
  v0[20] = v3;
  swift_endAccess();
  if (v3)
  {
    uint64_t v4 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 24);
    uint64_t v5 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 32);
    sub_6BA8((void *)(v3 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    swift_beginAccess();
    sub_9DAD8(v6, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_9B898, v3, 0);
  }
  else
  {
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_F70F0();
    sub_8B44(v9, (uint64_t)qword_129B10);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_F70D0();
    os_log_type_t v11 = sub_F76B0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = v0[16];
    if (v12)
    {
      uint64_t v14 = v0[15];
      uint64_t v15 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      v0[13] = 1752392040;
      sub_F77B0();
      *(_WORD *)(v15 + 12) = 2081;
      swift_bridgeObjectRetain();
      v0[14] = sub_A3FC(v14, v13, &v25);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v10, v11, "Operation completed with ID %{private,mask.hash}s but no operation with that ID is being tracked", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = *(int **)(v0[19] + 136);
    if (v16)
    {
      uint64_t v17 = v0[18];
      *(void *)(swift_task_alloc() + 16) = v17;
      sub_8C18(&qword_127D08);
      uint64_t v18 = sub_F7C60();
      sub_98928((void (*)(char *))sub_9E624, v18, (uint64_t)(v0 + 2));
      swift_task_dealloc();
      uint64_t v24 = (int *)((char *)v16 + *v16);
      double v19 = (void *)swift_task_alloc();
      v0[21] = v19;
      *double v19 = v0;
      v19[1] = sub_9B964;
      uint64_t v21 = v0[15];
      uint64_t v20 = v0[16];
      return ((uint64_t (*)(uint64_t, uint64_t, void *))v24)(v21, v20, v0 + 2);
    }
    else
    {
      double v22 = (uint64_t (*)(void))v0[1];
      return v22();
    }
  }
}

uint64_t sub_9B898()
{
  uint64_t v1 = v0[19];
  sub_97F8C(v0[17], v0[18]);
  return _swift_task_switch(sub_9B904, v1, 0);
}

uint64_t sub_9B904()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_9B964()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_1E944(v1, (uint64_t *)&unk_128CF0);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t RCSOperationController.perform<A>(operation:runTask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[60] = a5;
  v6[61] = v5;
  v6[58] = a3;
  v6[59] = a4;
  v6[56] = a1;
  v6[57] = a2;
  return _swift_task_switch(sub_9BA94, v5, 0);
}

uint64_t sub_9BA94()
{
  uint64_t v78 = v0;
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = *(void **)(v0 + 456);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_6BA8(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v7 = v6;
  uint64_t v74 = (uint64_t *)(v1 + 168);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 168);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1C9BC(v5, v7);
  if ((v10 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v0 + 488);
  BOOL v12 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v15 = *(void *)(v11 + 160);
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1C9BC(v14, v13);
    if (v17)
    {
      uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_289D4(v18 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id, v0 + 56);
      swift_release();
      sub_1E87C((long long *)(v0 + 56), v0 + 96);
      sub_1E87C((long long *)(v0 + 96), v0 + 16);
      goto LABEL_9;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
LABEL_8:
  swift_bridgeObjectRelease();
  sub_289D4(*(void *)(v0 + 456), v0 + 16);
LABEL_9:
  uint64_t v19 = *(void *)(v0 + 488);
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 48);
  sub_6BA8((void *)(v0 + 16), v20);
  uint64_t v22 = sub_F6F30();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v25 = sub_F6F00();
  uint64_t v27 = v26;
  *(void *)(v0 + 496) = v26;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
  swift_task_dealloc();
  uint64_t v28 = (uint64_t *)(v19 + 160);
  swift_beginAccess();
  uint64_t v29 = *(void *)(v19 + 160);
  if (*(void *)(v29 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1C9BC(v25, v27);
    if (v31)
    {
      uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
      swift_retain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (qword_1290A8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_F70F0();
      sub_8B44(v33, (uint64_t)qword_129B10);
      sub_289D4(v0 + 16, v0 + 176);
      uint64_t v34 = sub_F70D0();
      os_log_type_t v35 = sub_F7670();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 141558275;
        *(void *)(v0 + 424) = 1752392040;
        sub_F77B0();
        *(_WORD *)(v36 + 12) = 2081;
        sub_6BA8((void *)(v0 + 176), *(void *)(v0 + 200));
        uint64_t v37 = sub_F7B20();
        *(void *)(v0 + 416) = sub_A3FC(v37, v38, &v77);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_6BEC(v0 + 176);
        _os_log_impl(&dword_0, v34, v35, "Existing operation found for ID %{private,mask.hash}s, waiting for existing operation", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_6BEC(v0 + 176);
      }

      *(void *)(v0 + 544) = v32;
      uint64_t v69 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v69;
      *uint64_t v69 = v0;
      v69[1] = sub_9C80C;
      uint64_t v70 = *(void *)(v0 + 480);
      uint64_t v71 = *(void *)(v0 + 448);
      return sub_98FA8(v71, v70);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v72 = (long long *)(v0 + 216);
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v75 = v25;
  uint64_t v39 = sub_F70F0();
  sub_8B44(v39, (uint64_t)qword_129B10);
  uint64_t v73 = (void *)(v0 + 16);
  sub_289D4(v0 + 16, v0 + 136);
  uint64_t v40 = sub_F70D0();
  os_log_type_t v41 = sub_F7670();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 141558275;
    *(void *)(v0 + 440) = 1752392040;
    sub_F77B0();
    *(_WORD *)(v42 + 12) = 2081;
    sub_6BA8((void *)(v0 + 136), *(void *)(v0 + 160));
    uint64_t v43 = sub_F7B20();
    *(void *)(v0 + 432) = sub_A3FC(v43, v44, &v77);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_6BEC(v0 + 136);
    _os_log_impl(&dword_0, v40, v41, "Creating a new operation with ID %{private,mask.hash}s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_6BEC(v0 + 136);
  }

  uint64_t v45 = *(void *)(v0 + 40);
  uint64_t v46 = *(void *)(v0 + 48);
  sub_6BA8(v73, v45);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
  uint64_t v49 = v48;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v77 = *v74;
  *uint64_t v74 = 0x8000000000000000;
  sub_1D00C(v75, v27, v47, v49, isUniquelyReferenced_nonNull_native);
  *uint64_t v74 = v77;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_289D4((uint64_t)v73, (uint64_t)v72);
  type metadata accessor for RCSOperationController.Operation();
  swift_allocObject();
  uint64_t v51 = sub_9E674(v72);
  *(void *)(v0 + 504) = v51;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v77 = *v28;
  *uint64_t v28 = 0x8000000000000000;
  sub_9DFB4(v51, v75, v27, v52);
  *uint64_t v28 = v77;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v53 = *(void *)(v0 + 40);
  uint64_t v54 = *(void *)(v0 + 48);
  sub_6BA8(v73, v53);
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
  *(void *)(v0 + 512) = v56;
  if (v56)
  {
    uint64_t v57 = v55;
    uint64_t v58 = v56;
    uint64_t v59 = *(void *)(v0 + 488);
    uint64_t v61 = *(void *)(v0 + 464);
    uint64_t v60 = *(void *)(v0 + 472);
    sub_289D4((uint64_t)v73, v0 + 256);
    uint64_t v62 = (void *)swift_allocObject();
    *(void *)(v0 + 520) = v62;
    sub_1E87C((long long *)(v0 + 256), (uint64_t)(v62 + 2));
    v62[7] = v61;
    v62[8] = v60;
    v62[9] = v75;
    v62[10] = v27;
    v62[11] = v59;
    uint64_t v76 = (char *)&async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:)
        + async function pointer to dispatch thunk of AsyncMultiQueue.perform(key:_:);
    swift_retain();
    swift_retain();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v63;
    *uint64_t v63 = v0;
    v63[1] = sub_9C4C8;
    return ((uint64_t (*)(uint64_t, uint64_t, void *, void *))v76)(v57, v58, &unk_1294A8, v62);
  }
  else
  {
    uint64_t v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v65;
    *uint64_t v65 = v0;
    v65[1] = sub_9C678;
    uint64_t v66 = *(void *)(v0 + 488);
    uint64_t v67 = *(void *)(v0 + 464);
    uint64_t v68 = *(void *)(v0 + 472);
    return sub_9CA18((uint64_t)v73, v67, v68, v75, v27, v66);
  }
}

uint64_t sub_9C4C8()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  v1[68] = v1[63];
  uint64_t v3 = (void *)swift_task_alloc();
  v1[69] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_9C80C;
  uint64_t v4 = v1[60];
  uint64_t v5 = v1[56];
  return sub_98FA8(v5, v4);
}

uint64_t sub_9C678()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v1[68] = v1[63];
  uint64_t v3 = (void *)swift_task_alloc();
  v1[69] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_9C80C;
  uint64_t v4 = v1[60];
  uint64_t v5 = v1[56];
  return sub_98FA8(v5, v4);
}

uint64_t sub_9C80C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 560) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 488);
  if (v0) {
    uint64_t v4 = sub_9C9A8;
  }
  else {
    uint64_t v4 = sub_9C938;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_9C938()
{
  swift_release();
  sub_6BEC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_9C9A8()
{
  swift_release();
  sub_6BEC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_9CA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  if (qword_1290D8 != -1) {
    swift_once();
  }
  uint64_t v7 = static RCSActor.shared;
  v6[15] = static RCSActor.shared;
  return _swift_task_switch(sub_9CAC0, v7, 0);
}

uint64_t sub_9CAC0()
{
  uint64_t v14 = v0;
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = sub_F70F0();
  sub_8B44(v2, (uint64_t)qword_129B10);
  sub_289D4(v1, (uint64_t)(v0 + 2));
  uint64_t v3 = sub_F70D0();
  os_log_type_t v4 = sub_F7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 141558275;
    v0[7] = 1752392040;
    sub_F77B0();
    *(_WORD *)(v5 + 12) = 2081;
    sub_6BA8(v0 + 2, v0[5]);
    uint64_t v6 = sub_F7B20();
    v0[8] = sub_A3FC(v6, v7, &v13);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_6BEC((uint64_t)(v0 + 2));
    _os_log_impl(&dword_0, v3, v4, "No operation with ID %{private,mask.hash}s is being tracked, starting a new one", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_6BEC((uint64_t)(v0 + 2));
  }

  BOOL v12 = (uint64_t (*)(uint64_t, uint64_t))(v0[10] + *(int *)v0[10]);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[16] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_9CD60;
  uint64_t v10 = v0[12];
  uint64_t v9 = v0[13];
  return v12(v10, v9);
}

uint64_t sub_9CD60()
{
  uint64_t v2 = (void *)*v1;
  v2[17] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[15];
    return _swift_task_switch(sub_9CE94, v3, 0);
  }
  else
  {
    os_log_type_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_9CE94()
{
  uint64_t v1 = v0[17];
  swift_errorRetain();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_12ACA8 + dword_12ACA8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[18] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_9CF58;
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[12];
  return v6(v4, v3, v1, 1);
}

uint64_t sub_9CF58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  swift_task_dealloc();
  swift_errorRelease();
  return _swift_task_switch(sub_9D084, v1, 0);
}

uint64_t sub_9D084()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSOperationController.perform(operation:runTask:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 48) = v3;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_129130 + dword_129130);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 56) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_9D1BC;
  return v10(v4 + 16, a1, a2, a3);
}

uint64_t sub_9D1BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = sub_9D2FC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 48);
    sub_6BEC(v2 + 16);
    uint64_t v4 = sub_9D2E4;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_9D2E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9D2FC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t RCSOperationController.deinit()
{
  swift_release();
  sub_43254(*(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t RCSOperationController.__deallocating_deinit()
{
  swift_release();
  sub_43254(*(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

unint64_t sub_9D3B8(unsigned __int8 a1)
{
  sub_F7C20();
  sub_F72C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_F7C50();
  return sub_9D63C(a1, v2);
}

unint64_t sub_9D484(uint64_t a1)
{
  sub_F7C20();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_EAC58((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    sub_F7C40(1u);
    swift_bridgeObjectRetain();
    sub_F72C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_F7C40(0);
  }
  sub_F7C30(*(unsigned __int8 *)(a1 + 56));
  Swift::Int v3 = sub_F7C50();

  return sub_9D7F0((uint64_t *)a1, v3);
}

unint64_t sub_9D5AC(uint64_t a1)
{
  sub_F7220();
  sub_F7C20();
  sub_F72C0();
  Swift::Int v2 = sub_F7C50();
  swift_bridgeObjectRelease();
  return sub_9D960(a1, v2);
}

unint64_t sub_9D63C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1919251317;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = 0x6E657265666E6F63;
          unint64_t v7 = 0xEA00000000006563;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xED0000747865746ELL;
            if (v8 != 0x6F632D656E6F6870) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        uint64_t v8 = 0x6F632D656E6F6870;
        unint64_t v7 = 0xED0000747865746ELL;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 1919251317;
      }
      else {
        uint64_t v10 = 0x6E657265666E6F63;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE400000000000000;
      }
      else {
        unint64_t v11 = 0xEA00000000006563;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_F7B60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_9D7F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v16 = ~v3;
    uint64_t v6 = *a1;
    uint64_t v7 = a1[1];
    do
    {
      uint64_t v10 = (void *)(*(void *)(v2 + 48) + (v4 << 6));
      uint64_t v12 = v10[2];
      uint64_t v11 = v10[3];
      BOOL v13 = *v10 == v6 && v10[1] == v7;
      if (v13 || (sub_F7B60() & 1) != 0)
      {
        BOOL v14 = v12 == a1[2] && v11 == a1[3];
        if (v14 || (sub_F7B60() & 1) != 0)
        {
          uint64_t v8 = a1[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v9 = swift_bridgeObjectRetain();
          LOBYTE(v8) = sub_E9D7C(v9, v8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v8) {
            break;
          }
        }
      }
      unint64_t v4 = (v4 + 1) & v16;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_9D960(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_F7220();
    uint64_t v8 = v7;
    if (v6 == sub_F7220() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_F7B60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_F7220();
          uint64_t v15 = v14;
          if (v13 == sub_F7220() && v15 == v16) {
            break;
          }
          char v18 = sub_F7B60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_9DAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C9BC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_42C8C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_F1148(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_9DBC0(uint64_t a1, uint64_t a2)
{
  return sub_9DD1C(a1, a2, (void (*)(unint64_t, uint64_t))sub_F1320, (void (*)(void))sub_E0724);
}

double sub_9DBEC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C9BC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_42AA4();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1EBC4((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_F15FC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_9DCF0(uint64_t a1, uint64_t a2)
{
  return sub_9DD1C(a1, a2, (void (*)(unint64_t, uint64_t))sub_F1320, (void (*)(void))sub_E0C8C);
}

uint64_t sub_9DD1C(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t), void (*a4)(void))
{
  char v7 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1C9BC(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v7;
  uint64_t v16 = *v7;
  *char v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    uint64_t v13 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *char v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_9DE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_9D484(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_E0E40();
      uint64_t v9 = v19;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for TypingIndicator();
    uint64_t v18 = *(void *)(v11 - 8);
    sub_9F7BC(v10 + *(void *)(v18 + 72) * v6, a2);
    sub_F17D4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for TypingIndicator();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_9DFB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C9BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_E0724();
    goto LABEL_7;
  }
  sub_DF080(v15, a4 & 1);
  unint64_t v21 = sub_1C9BC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_F7BA0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_F5F94(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

void sub_9E0F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C9BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_E0C8C();
    goto LABEL_7;
  }
  sub_DF91C(v15, a4 & 1);
  unint64_t v20 = sub_1C9BC(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_F7BA0();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_F5F94(v12, a2, a3, a1, v18);

  swift_bridgeObjectRetain();
}

uint64_t sub_9E234(uint64_t a1, _OWORD *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_9D484((uint64_t)a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_E0E40();
      goto LABEL_7;
    }
    sub_DFF44(v13, a3 & 1);
    unint64_t v20 = sub_9D484((uint64_t)a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_F7BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for TypingIndicator() - 8) + 72) * v10;
    return sub_9F758(a1, v18);
  }
LABEL_13:
  sub_F5F98(v10, a2, a1, v16);

  return sub_5560((uint64_t)a2);
}

uint64_t sub_9E388(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_551C(&qword_129DB0);
  uint64_t result = sub_F79E0();
  uint64_t v9 = result;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    sub_F7C20();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    unint64_t v30 = (void *)(*(void *)(v9 + 48) + 16 * v25);
    *unint64_t v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RCSOperationController.Operation()
{
  uint64_t result = qword_129CC0;
  if (!qword_129CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_9E674(long long *a1)
{
  uint64_t v2 = v1;
  swift_defaultActor_initialize();
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(unsigned char *)(v1 + 144) = -1;
  *(void *)(v1 + 152) = &_swiftEmptyArrayStorage;
  if (qword_1290A8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_F70F0();
  sub_8B44(v4, (uint64_t)qword_129B10);
  sub_289D4((uint64_t)a1, (uint64_t)v18);
  uint64_t v5 = sub_F70D0();
  os_log_type_t v6 = sub_F7680();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141558275;
    uint64_t v17 = v8;
    sub_F77B0();
    *(_WORD *)(v7 + 12) = 2081;
    sub_6BA8(v18, v18[3]);
    uint64_t v9 = sub_F7B20();
    v16[1] = sub_A3FC(v9, v10, &v17);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_6BEC((uint64_t)v18);
    _os_log_impl(&dword_0, v5, v6, "New operation created with ID %{private,mask.hash}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_6BEC((uint64_t)v18);
  }

  uint64_t v11 = sub_F6EE0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6EB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v2 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_creationDate, v14, v11);
  sub_1E87C(a1, v2 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id);
  return v2;
}

uint64_t sub_9E93C()
{
  sub_6BEC(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_9E98C()
{
  uint64_t v2 = (uint64_t)(v0 + 2);
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_9FD98;
  return sub_9CA18(v2, v3, v4, v5, v6, v7);
}

uint64_t type metadata accessor for RCSOperationController()
{
  return self;
}

uint64_t destroy for RCSOperationController.OperationError(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 != 1) {
    a1 += 16;
  }
  return sub_6BEC(a1);
}

uint64_t initializeWithCopy for RCSOperationController.OperationError(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    char v6 = 1;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16);
    char v6 = 0;
  }
  *(unsigned char *)(a1 + 56) = v6;
  return a1;
}

uint64_t assignWithCopy for RCSOperationController.OperationError(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1) {
      a1 += 16;
    }
    sub_6BEC(a1);
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(v2 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v2, a2);
      *(void *)(v2 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      *(void *)uint64_t v2 = *(void *)a2;
      *(void *)(v2 + 8) = *(void *)(a2 + 8);
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(v2 + 40) = v8;
      *(void *)(v2 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v2 + 16, a2 + 16);
      char v7 = 0;
    }
    *(unsigned char *)(v2 + 56) = v7;
  }
  return v2;
}

__n128 initializeWithTake for RCSHandle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RCSOperationController.OperationError(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1) {
      a1 += 16;
    }
    sub_6BEC(a1);
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
      *(_OWORD *)(v2 + 16) = v6;
      *(void *)(v2 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
      *(_OWORD *)(v2 + 16) = v8;
      *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(v2 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(v2 + 56) = v7;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for RCSOperationController.OperationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RCSOperationController.OperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_9EDE8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_9EE04(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RCSOperationController.OperationError()
{
  return &type metadata for RCSOperationController.OperationError;
}

uint64_t sub_9EE40()
{
  return type metadata accessor for RCSOperationController.Operation();
}

uint64_t sub_9EE48()
{
  uint64_t result = sub_F6EE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for RCSOperationController.Configuration(uint64_t result)
{
  if (*(void *)(result + 16)) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for RCSOperationController.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for RCSOperationController.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = (_OWORD *)(a1 + 16);
  long long v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for RCSOperationController.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 16);
  long long v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSOperationController.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RCSOperationController.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSOperationController.Configuration()
{
  return &type metadata for RCSOperationController.Configuration;
}

uint64_t sub_9F168()
{
  return sub_99F38();
}

uint64_t sub_9F170(uint64_t a1)
{
  return a1 & ~(-1 << *(unsigned char *)(v1 + 32));
}

uint64_t sub_9F19C()
{
  sub_F7C20();
  sub_F72C0();
  Swift::Int v0 = sub_F7C50();

  return sub_9F170(v0);
}

uint64_t sub_9F208(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = (unint64_t *)result;
  uint64_t v23 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v25) {
      return sub_9E388(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v17);
    ++v6;
    if (!v18)
    {
      int64_t v6 = v17 + 1;
      if (v17 + 1 >= v25) {
        return sub_9E388(v22, a2, v23, a3);
      }
      unint64_t v18 = *(void *)(v24 + 8 * v6);
      if (!v18)
      {
        int64_t v6 = v17 + 2;
        if (v17 + 2 >= v25) {
          return sub_9E388(v22, a2, v23, a3);
        }
        unint64_t v18 = *(void *)(v24 + 8 * v6);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v11 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    uint64_t v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_retain();
    char v16 = a4(v13, v14, v15);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16)
    {
      *(unint64_t *)((char *)v22 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_9E388(v22, a2, v23, a3);
      }
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v25) {
    return sub_9E388(v22, a2, v23, a3);
  }
  unint64_t v18 = *(void *)(v24 + 8 * v19);
  if (v18)
  {
    int64_t v6 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v25) {
      return sub_9E388(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_9F40C(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_9F208((uint64_t)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_9F208((uint64_t)v11, v8, v6, a2);
    swift_slowDealloc();
  }
  return a3;
}

uint64_t sub_9F584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_1294B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_9F5EC()
{
  unint64_t result = qword_128148;
  if (!qword_128148)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_128148);
  }
  return result;
}