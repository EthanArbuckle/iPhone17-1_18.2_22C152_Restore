uint64_t sub_9F62C()
{
  uint64_t v0;
  uint64_t vars8;

  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9F664()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_9F68C()
{
  sub_9F6D0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_9F6D0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_9F6DC()
{
  return sub_98B3C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(void *))(v0 + 32));
}

uint64_t sub_9F6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_9F6FC()
{
  return swift_release();
}

uint64_t sub_9F704(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_9F710(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_9F758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TypingIndicator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_9F7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TypingIndicator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_9F820()
{
  if (*(unsigned char *)(v0 + 56)) {
    swift_errorRelease();
  }
  else {
    sub_6BEC(v0 + 16);
  }
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_9F874()
{
  return sub_98C90(v0 + 16, *(void (**)(void *))(v0 + 64));
}

uint64_t sub_9F880()
{
  sub_6BEC(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_9F8B8()
{
  unint64_t result = qword_1294B8;
  if (!qword_1294B8)
  {
    type metadata accessor for RCSOperationController.Operation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1294B8);
  }
  return result;
}

uint64_t sub_9F910(uint64_t a1)
{
  return sub_99940(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_9F918()
{
  sub_8C18(&qword_127D08);
  uint64_t v1 = sub_F74A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_9F9C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_8C18(&qword_127D08);
  uint64_t v4 = *(void *)(sub_F74A0() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_99B28(a1, v5, v3);
}

uint64_t sub_9FA70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  a2[3] = v4;
  uint64_t v5 = sub_28728(a2);
  uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v6(v5, a1, v4);
}

uint64_t sub_9FADC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_8C18(&qword_127D08);
  uint64_t v2 = *(void *)(sub_F7C60() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  if (swift_getEnumCaseMultiPayload() == 1) {
    swift_errorRelease();
  }
  else {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_9FC10()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_8C18(&qword_127D08);
  uint64_t v2 = *(void *)(sub_F7C60() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void (**)(uint64_t *))v5;
  uint64_t v7 = *(void *)(v5 + 8);

  return sub_98D80(v4, v6, v7, v1);
}

uint64_t sub_9FCCC()
{
  if (*(unsigned char *)(v0 + 48)) {
    swift_errorRelease();
  }
  else {
    sub_6BEC(v0 + 16);
  }
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_9FD20()
{
  return sub_98BAC(v0 + 16, *(void (**)(void *))(v0 + 56));
}

uint64_t sub_9FD2C()
{
  sub_6BEC(v0 + 16);

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t CTLazuliMessageText.populate(message:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (RCSMessage.fromChatBot.getter())
  {
    id v7 = [v2 chipList];
    type metadata accessor for RCSChipList();
    uint64_t v8 = swift_allocObject();
    v9 = self;
    swift_bridgeObjectRetain();
    v10 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    id v11 = [v9 IMChipListFromCTChipList:v7 originalID:v10];

    *(void *)(v8 + 16) = v11;
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v12 = [v2 content];
  uint64_t v13 = sub_F7220();
  uint64_t v15 = v14;

  *uint64_t v6 = v13;
  v6[1] = v15;
  v6[2] = v8;
  uint64_t v16 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 0, 1, v16);
  uint64_t v17 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v6, a1 + *(int *)(v17 + 28));
}

uint64_t sub_9FF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_9FFE4(uint64_t a1)
{
  return CTLazuliMessageText.populate(message:)(a1);
}

uint64_t CTLazuliMessageGroupText.populate(message:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = [v2 content];
  uint64_t v8 = sub_F7220();
  uint64_t v10 = v9;

  *uint64_t v6 = v8;
  v6[1] = v10;
  v6[2] = 0;
  uint64_t v11 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v6, a1 + *(int *)(v12 + 28));
}

uint64_t sub_A0130(uint64_t a1)
{
  uint64_t v3 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = [*v1 content];
  uint64_t v7 = sub_F7220();
  uint64_t v9 = v8;

  *uint64_t v5 = v7;
  v5[1] = v9;
  v5[2] = 0;
  uint64_t v10 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  uint64_t v11 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v5, a1 + *(int *)(v11 + 28));
}

uint64_t CTLazuliMessageGeoLocationPush.populate(message:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v4 - 8);
  id v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (RCSMessage.fromChatBot.getter())
  {
    id v7 = [v2 chipList];
    type metadata accessor for RCSChipList();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = self;
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    id v11 = [v9 IMChipListFromCTChipList:v7 originalID:v10];

    *(void *)(v8 + 16) = v11;
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v12 = [v2 coordinates];
  id v13 = [v12 latitude];
  [v13 doubleValue];
  uint64_t v15 = v14;

  id v16 = [v12 longitude];
  [v16 doubleValue];
  uint64_t v18 = v17;

  *id v6 = v15;
  v6[1] = v18;
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v8;
  uint64_t v19 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  uint64_t v20 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v6, a1 + *(int *)(v20 + 28));
}

uint64_t sub_A048C(uint64_t a1)
{
  return CTLazuliMessageGeoLocationPush.populate(message:)(a1);
}

uint64_t CTLazuliMessageGroupGeoLocationPush.populate(message:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v4 - 8);
  id v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = [v2 coordinates];
  id v8 = [v7 latitude];
  [v8 doubleValue];
  uint64_t v10 = v9;

  id v11 = [v7 longitude];
  [v11 doubleValue];
  uint64_t v13 = v12;

  *id v6 = v10;
  v6[1] = v13;
  uint64_t v14 = type metadata accessor for RCSMessage.Content(0);
  v6[3] = 0;
  v6[4] = 0;
  v6[2] = 0;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
  uint64_t v15 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v6, a1 + *(int *)(v15 + 28));
}

uint64_t sub_A0630(uint64_t a1)
{
  return CTLazuliMessageGroupGeoLocationPush.populate(message:)(a1);
}

uint64_t CTLazuliMessageFileTransferPush.populate(message:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (RCSMessage.fromChatBot.getter())
  {
    id v7 = [v2 chipList];
    type metadata accessor for RCSChipList();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = self;
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    id v11 = [v9 IMChipListFromCTChipList:v7 originalID:v10];

    *(void *)(v8 + 16) = v11;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v12 = *(int *)(sub_551C(&qword_128218) + 48);
  RCSFile.init(descriptor:)([v2 descriptor], (uint64_t)v6);
  *(void *)&v6[v12] = v8;
  uint64_t v13 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
  uint64_t v14 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v6, a1 + *(int *)(v14 + 28));
}

uint64_t sub_A0834(uint64_t a1)
{
  return CTLazuliMessageFileTransferPush.populate(message:)(a1);
}

uint64_t CTLazuliMessageGroupFileTransferPush.populate(message:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(int *)(sub_551C(&qword_128218) + 48);
  RCSFile.init(descriptor:)([v2 descriptor], (uint64_t)v6);
  *(void *)&v6[v7] = 0;
  uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v6, a1 + *(int *)(v9 + 28));
}

uint64_t sub_A0980(uint64_t a1)
{
  uint64_t v3 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *v1;
  uint64_t v7 = *(int *)(sub_551C(&qword_128218) + 48);
  RCSFile.init(descriptor:)([v6 descriptor], (uint64_t)v5);
  *(void *)&v5[v7] = 0;
  uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
  uint64_t v9 = type metadata accessor for RCSMessage(0);
  return sub_9FF7C((uint64_t)v5, a1 + *(int *)(v9 + 28));
}

uint64_t CTLazuliMessageChatBotCard.populate(message:)(uint64_t a1)
{
  return sub_A0B24(a1, (uint64_t (*)(id, uint64_t, uint64_t))sub_CFB90);
}

uint64_t sub_A0AD4(uint64_t a1)
{
  return CTLazuliMessageChatBotCard.populate(message:)(a1);
}

uint64_t CTLazuliMessageChatBotCardCarousel.populate(message:)(uint64_t a1)
{
  return sub_A0B24(a1, (uint64_t (*)(id, uint64_t, uint64_t))sub_D02FC);
}

uint64_t sub_A0B24(uint64_t a1, uint64_t (*a2)(id, uint64_t, uint64_t))
{
  uint64_t v6 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_27F4C(a1, (uint64_t)v25);
  if ((v26[58] & 1) == 0) {
    return sub_27EF8((uint64_t)v25);
  }
  id v20 = v2;
  uint64_t v22 = a2;
  uint64_t v27 = v3;
  uint64_t v9 = v25[1];
  uint64_t v10 = (void *)v25[3];
  uint64_t v21 = type metadata accessor for RCSMessage(0);
  if (*(unsigned char *)(a1 + *(int *)(v21 + 40)) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_27FA8((uint64_t)v26);
  }
  else
  {
    uint64_t v12 = v25[2];
    uint64_t v23 = v25[0];
    uint64_t v24 = v9;
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = 58;
    v28._object = (void *)0xE100000000000000;
    sub_F72E0(v28);
    swift_bridgeObjectRetain();
    v29._countAndFlagsBits = v12;
    v29._object = v10;
    sub_F72E0(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    LODWORD(v12) = objc_msgSend(v13, "__im_isChatBot");

    uint64_t result = sub_27FA8((uint64_t)v26);
    if (!v12) {
      return result;
    }
  }
  uint64_t v14 = *(void *)(a1 + 128);
  uint64_t v15 = *(void *)(a1 + 136);
  type metadata accessor for RCSRichCards();
  uint64_t v16 = swift_allocObject();
  id v17 = v20;
  swift_bridgeObjectRetain();
  uint64_t v18 = v22(v17, v14, v15);
  swift_bridgeObjectRelease();

  *(void *)(v16 + 16) = v18;
  *uint64_t v8 = v16;
  uint64_t v19 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 0, 1, v19);
  return sub_9FF7C((uint64_t)v8, a1 + *(int *)(v21 + 28));
}

uint64_t sub_A0DB0(uint64_t a1)
{
  return CTLazuliMessageChatBotCardCarousel.populate(message:)(a1);
}

uint64_t CTLazuliMessageIncomingGroupChat.populate(message:)(uint64_t a1)
{
  uint64_t v4 = sub_551C((uint64_t *)&unk_128170);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (long long *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for RCSMessage(0);
  sub_A0F94(a1 + *(int *)(v7 + 32), (uint64_t)&v11);
  if (v12)
  {
    sub_1E87C(&v11, (uint64_t)v13);
    id v8 = [v1 chat];
    sub_289D4((uint64_t)v13, (uint64_t)&v11);
    RCSGroup.init(group:identity:)(v8, (uint64_t)&v11, v6);
    uint64_t result = sub_6BEC((uint64_t)v13);
    if (!v2)
    {
      uint64_t v10 = type metadata accessor for RCSMessage.Content(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
      return sub_9FF7C((uint64_t)v6, a1 + *(int *)(v7 + 28));
    }
  }
  else
  {
    sub_6AF4((uint64_t)&v11);
    sub_A0FFC();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_A0F70(uint64_t a1)
{
  return CTLazuliMessageIncomingGroupChat.populate(message:)(a1);
}

uint64_t sub_A0F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_127C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_A0FFC()
{
  unint64_t result = qword_129DB8;
  if (!qword_129DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_129DB8);
  }
  return result;
}

unsigned char *_s15GroupParseErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xA10ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15GroupParseErrorOMa()
{
  return &_s15GroupParseErrorON;
}

unint64_t sub_A112C()
{
  unint64_t result = qword_129DC0;
  if (!qword_129DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_129DC0);
  }
  return result;
}

uint64_t sub_A1180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, a1, AssociatedTypeWitness);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for RCSMessageProcessingQueue.RCSQueuedMessage() + 36);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t RCSMessageProcessingQueue.__allocating_init(delegate:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RCSMessageProcessingQueue.init(delegate:)(a1);
  return v2;
}

uint64_t RCSMessageProcessingQueue.init(delegate:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v5 - 8);
  v30[0] = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(v4 + 80);
  v34 = *(char **)(v4 + 88);
  type metadata accessor for RCSMessageProcessingQueue.QueuedJob();
  uint64_t v32 = sub_F7540();
  uint64_t v7 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)v30 - v8;
  uint64_t v33 = sub_F75A0();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  long long v11 = (char *)v30 - v10;
  uint64_t v12 = sub_F7560();
  uint64_t v13 = sub_F7770();
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v30 - v17;
  v30[1] = a1;
  swift_unknownObjectUnownedInit();
  uint64_t v19 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, 1, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v32);
  uint64_t v37 = v35;
  v38 = v34;
  v39 = v18;
  sub_F75B0();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v2[*(void *)(*(void *)v2 + 104)], v11, v33);
  id v20 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v34 = v18;
  uint64_t v35 = v13;
  v20(v16, v18, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v12);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v2[*(void *)(*(void *)v2 + 112)], v16, v12);
    sub_9F5EC();
    uint64_t v22 = sub_F7150();
    __chkstk_darwin(v22 - 8);
    sub_F7140();
    uint64_t v23 = sub_F76D0();
    __chkstk_darwin(v23);
    v40 = _swiftEmptyArrayStorage;
    sub_A5E20(&qword_129DC8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_551C(&qword_129DD0);
    sub_A5E68(&qword_129DD8, &qword_129DD0);
    sub_F7810();
    uint64_t v24 = sub_F76F0();
    __chkstk_darwin(v24);
    (*(void (**)(char *, void))(v26 + 104))((char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:));
    *(void *)&v2[*(void *)(*(void *)v2 + 120)] = sub_F7720();
    uint64_t v27 = v30[0];
    sub_F74F0();
    uint64_t v28 = sub_F7520();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
    Swift::String v29 = (void *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = v2;
    swift_retain();
    sub_9EAC(v27, (uint64_t)&unk_129DE8, (uint64_t)v29);
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t type metadata accessor for RCSMessageProcessingQueue.QueuedJob()
{
  return sub_8B108();
}

uint64_t sub_A1994(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RCSMessageProcessingQueue.QueuedJob();
  uint64_t v4 = sub_F7560();
  uint64_t v5 = sub_F7770();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  uint64_t v8 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(a2, 0, 1, v4);
}

uint64_t sub_A1AA0(uint64_t a1)
{
  return sub_A1994(a1, *(void *)(v1 + 32));
}

uint64_t sub_A1AAC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_A5F60;
  return sub_A21F4();
}

uint64_t sub_A1B3C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_A1B7C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_A1C50;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_A5F60;
  return sub_A21F4();
}

uint64_t sub_A1C50()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t RCSMessageProcessingQueue.enqueue(_:subscription:)(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v19 = *v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v4 = (char *)&v15 - v3;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = type metadata accessor for RCSMessageProcessingQueue.QueuedJob();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v17 = sub_F7530();
  uint64_t v11 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v21, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v4, v22, AssociatedTypeWitness);
  sub_A1180((uint64_t)v7, (uint64_t)v4, (uint64_t)v10);
  swift_storeEnumTagMultiPayload();
  sub_F7560();
  sub_F7550();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v17);
}

uint64_t RCSMessageProcessingQueue.enqueueRelayBlock(_:timeout:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = type metadata accessor for RCSMessageProcessingQueue.QueuedJob();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_F7530();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v14 - v11;
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *((double *)v8 + 2) = a3;
  swift_storeEnumTagMultiPayload();
  sub_F7560();
  swift_retain();
  sub_F7550();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_A21F4()
{
  v1[2] = v0;
  uint64_t v2 = *v0;
  v1[3] = *(void *)(*v0 + 80);
  v1[4] = *(void *)(v2 + 88);
  uint64_t v3 = type metadata accessor for RCSMessageProcessingQueue.RCSQueuedMessage();
  v1[5] = v3;
  v1[6] = *(void *)(v3 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for RCSMessageProcessingQueue.QueuedJob();
  v1[8] = v4;
  v1[9] = *(void *)(v4 - 8);
  v1[10] = swift_task_alloc();
  sub_F7770();
  v1[11] = swift_task_alloc();
  uint64_t v5 = sub_F7590();
  v1[12] = v5;
  v1[13] = *(void *)(v5 - 8);
  v1[14] = swift_task_alloc();
  return _swift_task_switch(sub_A23EC, 0, 0);
}

uint64_t sub_A23EC()
{
  sub_F75A0();
  sub_F7570();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_A24C4;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return AsyncStream.Iterator.next(isolation:)(v2, 0, 0, v3);
}

uint64_t sub_A24C4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_A25C0, 0, 0);
}

uint64_t sub_A25C0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[10], v1, v2);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = (uint64_t *)v0[10];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = v0[2];
      uint64_t v9 = *v7;
      uint64_t v10 = v7[1];
      v0[18] = v10;
      uint64_t v11 = v7[2];
      uint64_t v12 = (void *)swift_task_alloc();
      v0[19] = v12;
      v12[2] = v8;
      v12[3] = v11;
      v12[4] = v9;
      v12[5] = v10;
      uint64_t v13 = (void *)swift_task_alloc();
      v0[20] = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_A2AA8;
      return withCheckedContinuation<A>(isolation:function:_:)(v13, 0, 0, 0x29286E7572, 0xE500000000000000, sub_A5CBC, v12, &type metadata for ()[8]);
    }
    else
    {
      uint64_t v14 = v0[7];
      uint64_t v15 = v0[5];
      uint64_t v22 = v0[4];
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v0[6] + 32))(v14, v7, v15);
      v0[16] = swift_unknownObjectUnownedLoadStrong();
      uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 24) + **(int **)(v22 + 24));
      uint64_t v16 = v14 + *(int *)(v15 + 36);
      uint64_t v17 = (void *)swift_task_alloc();
      v0[17] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_A28D4;
      uint64_t v18 = v0[7];
      uint64_t v19 = v0[3];
      uint64_t v20 = v0[4];
      return v21(v18, v16, v19, v20);
    }
  }
}

uint64_t sub_A28D4()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_A29EC, 0, 0);
}

uint64_t sub_A29EC()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_A24C4;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return AsyncStream.Iterator.next(isolation:)(v2, 0, 0, v3);
}

uint64_t sub_A2AA8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_A2BC0, 0, 0);
}

uint64_t sub_A2BC0()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_A24C4;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return AsyncStream.Iterator.next(isolation:)(v2, 0, 0, v3);
}

uint64_t sub_A2C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v8 = sub_551C(&qword_129F78);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = dispatch_group_create();
  dispatch_group_enter(v11);
  uint64_t v35 = *(void (**)(char *, uint64_t))(a2 + *(void *)(*(void *)a2 + 120));
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(double *)(v13 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v45 = sub_A5D9C;
  v46 = (void *)v13;
  aBlock = _NSConcreteStackBlock;
  uint64_t v42 = 1107296256;
  uint64_t v36 = &v43;
  v43 = sub_552C4;
  v44 = &unk_120A58;
  uint64_t v14 = _Block_copy(&aBlock);
  uint64_t v39 = sub_F7150();
  uint64_t v32 = *(void *)(v39 - 8);
  uint64_t v15 = *(void *)(v32 + 64);
  __chkstk_darwin(v39);
  unint64_t v31 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v16 = (char *)v30 - v31;
  v34 = v11;
  sub_F7130();
  uint64_t v17 = sub_F7110();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  unint64_t v33 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v20 = (char *)v30 - v33;
  v40 = _swiftEmptyArrayStorage;
  void v30[2] = sub_A5E20((unint64_t *)&qword_128150, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v30[1] = sub_551C(&qword_128158);
  v30[0] = sub_A5E68((unint64_t *)&qword_128160, &qword_128158);
  sub_F7810();
  sub_F7710();
  _Block_release(v14);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v18 + 8);
  v35(v20, v17);
  uint64_t v32 = *(void *)(v32 + 8);
  ((void (*)(char *, uint64_t))v32)(v16, v39);
  swift_release();
  sub_9F5EC();
  uint64_t v21 = (void *)sub_F7700();
  __chkstk_darwin(v21);
  uint64_t v22 = (char *)v30 - v31;
  sub_F7140();
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v38;
  v23[2] = v37;
  v23[3] = v24;
  uint64_t v25 = v34;
  v23[4] = v34;
  v45 = sub_A5EF8;
  v46 = v23;
  aBlock = _NSConcreteStackBlock;
  uint64_t v42 = 1107296256;
  v43 = sub_552C4;
  v44 = &unk_120AB0;
  uint64_t v26 = _Block_copy(&aBlock);
  __chkstk_darwin(v26);
  uint64_t v27 = (char *)v30 - v33;
  v40 = _swiftEmptyArrayStorage;
  uint64_t v28 = v25;
  swift_retain();
  sub_F7810();
  sub_F7710();
  _Block_release(v26);

  v35(v27, v17);
  ((void (*)(char *, uint64_t))v32)(v22, v39);
  return swift_release();
}

uint64_t sub_A31A4(double a1)
{
  uint64_t v2 = sub_F7180();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  sub_F7160();
  uint64_t v9 = sub_F7100();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v14 = a1 * 1000.0;
  if ((~COERCE__INT64(a1 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v14 < 9.22337204e18)
  {
    *uint64_t v13 = (uint64_t)v14;
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v13, enum case for DispatchTimeInterval.milliseconds(_:), v9);
    sub_F7170();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v8, v2);
    sub_F76C0();
    v15(v6, v2);
    sub_551C(&qword_129F78);
    return sub_F7490();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_A3404(void (*a1)(void (*)(), uint64_t), uint64_t a2, void *a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  id v6 = a3;
  a1(sub_A5F3C, v5);

  return swift_release();
}

uint64_t RCSMessageProcessingQueue.deinit()
{
  swift_unknownObjectUnownedDestroy();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  type metadata accessor for RCSMessageProcessingQueue.QueuedJob();
  uint64_t v2 = sub_F75A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v4 = sub_F7560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t RCSMessageProcessingQueue.__deallocating_deinit()
{
  RCSMessageProcessingQueue.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_A360C()
{
  type metadata accessor for RCSMessageProcessingQueue.QueuedJob();
  uint64_t result = sub_F75A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_F7560();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for RCSMessageProcessingQueue()
{
  return sub_8B108();
}

uint64_t sub_A3720()
{
  uint64_t result = type metadata accessor for RCSMessageProcessingQueue.RCSQueuedMessage();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_A37B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  if ((v10 & (unint64_t)~v9) + *(void *)(v8 + 64) <= 0x18) {
    uint64_t v11 = 24;
  }
  else {
    uint64_t v11 = (v10 & ~v9) + *(void *)(v8 + 64);
  }
  int v12 = *(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80);
  if ((v12 & 0x1000F8) != 0 || (unint64_t)(v11 + 1) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + (((v12 & 0xF8 | 7u) + 16) & ~(unint64_t)(v12 & 0xF8 | 7u)));
  }
  else
  {
    uint64_t v15 = v7;
    unsigned int v16 = *((unsigned __int8 *)a2 + v11);
    if (v16 >= 2) {
      unsigned int v16 = *(_DWORD *)a2 + 2;
    }
    if (v16 != 1)
    {
      uint64_t v18 = ~v9;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v18, ((unint64_t)a2 + v10) & v18, v15);
      *((unsigned char *)a1 + v11) = 0;
      return a1;
    }
    uint64_t v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    a1[2] = a2[2];
    *((unsigned char *)a1 + v11) = 1;
  }
  swift_retain();
  return a1;
}

uint64_t sub_A39B4(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = v4 + v6;
  unint64_t v8 = ((v4 + v6) & ~v6) + *(void *)(*(void *)(v5 - 8) + 64);
  if (v8 <= 0x18) {
    unint64_t v8 = 24;
  }
  unsigned int v9 = a1[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    return swift_release();
  }
  else
  {
    uint64_t v15 = ~v6;
    uint64_t v17 = *(void *)(v5 - 8);
    (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
    unsigned int v16 = *(uint64_t (**)(unint64_t, uint64_t))(v17 + 8);
    return v16((unint64_t)&a1[v7] & v15, v5);
  }
}

void *sub_A3BF4(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  if ((v10 & (unint64_t)~v9) + *(void *)(v8 + 64) <= 0x18) {
    uint64_t v11 = 24;
  }
  else {
    uint64_t v11 = (v10 & ~v9) + *(void *)(v8 + 64);
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    uint64_t v17 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v17;
    a1[2] = *((void *)a2 + 2);
    swift_retain();
    char v18 = 1;
  }
  else
  {
    uint64_t v19 = ~v9;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v19, (unint64_t)&a2[v10] & v19, v7);
    char v18 = 0;
  }
  *((unsigned char *)a1 + v11) = v18;
  return a1;
}

unsigned __int8 *sub_A3E28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v6 = *(void *)(v5 + 64);
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v6 + v9;
    if ((v10 & (unint64_t)~v9) + *(void *)(v8 + 64) <= 0x18) {
      uint64_t v11 = 24;
    }
    else {
      uint64_t v11 = (v10 & ~v9) + *(void *)(v8 + 64);
    }
    unsigned int v12 = a1[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a1;
          if (v11 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v15 = *(unsigned __int16 *)a1;
          if (v11 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v11 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v15 = *(_DWORD *)a1;
          if (v11 < 4) {
LABEL_15:
          }
            unsigned int v12 = (v15 | (v13 << (8 * v11))) + 2;
          else {
LABEL_17:
          }
            unsigned int v12 = v15 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v9;
    if (v12 == 1)
    {
      swift_release();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))((unint64_t)&a1[v10] & v16, v7);
    }
    unsigned int v17 = a2[v11];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v19 = v11;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          if (v11 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          if (v11 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v20 = *(_DWORD *)a2;
          if (v11 < 4)
          {
LABEL_31:
            unsigned int v17 = (v20 | (v18 << (8 * v11))) + 2;
            break;
          }
LABEL_35:
          if (v20 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v17 == 1)
    {
LABEL_33:
      uint64_t v21 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v21;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[v11] = 1;
      swift_retain();
    }
    else
    {
LABEL_36:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((unint64_t)&a1[v10] & v16, (unint64_t)&a2[v10] & v16, v7);
      a1[v11] = 0;
    }
  }
  return a1;
}

uint64_t sub_A4174(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  if ((v10 & (unint64_t)~v9) + *(void *)(v8 + 64) <= 0x18) {
    uint64_t v11 = 24;
  }
  else {
    uint64_t v11 = (v10 & ~v9) + *(void *)(v8 + 64);
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_13;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_13:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    char v17 = 1;
  }
  else
  {
    uint64_t v18 = ~v9;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 32))((v10 + a1) & v18, (unint64_t)&a2[v10] & v18, v7);
    char v17 = 0;
  }
  *(unsigned char *)(a1 + v11) = v17;
  return a1;
}

unsigned __int8 *sub_A43A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v6 = *(void *)(v5 + 64);
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v6 + v9;
    if ((v10 & (unint64_t)~v9) + *(void *)(v8 + 64) <= 0x18) {
      uint64_t v11 = 24;
    }
    else {
      uint64_t v11 = (v10 & ~v9) + *(void *)(v8 + 64);
    }
    unsigned int v12 = a1[v11];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v14 = v11;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a1;
          goto LABEL_14;
        case 2:
          int v15 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v15 = *(_DWORD *)a1;
LABEL_14:
          int v16 = (v15 | (v13 << (8 * v11))) + 2;
          unsigned int v12 = v15 + 2;
          if (v11 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v9;
    if (v12 == 1)
    {
      swift_release();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))((unint64_t)&a1[v10] & v17, v7);
    }
    unsigned int v18 = a2[v11];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v20 = v11;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v11 >= 4) {
            goto LABEL_33;
          }
          goto LABEL_29;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v11 >= 4) {
            goto LABEL_33;
          }
          goto LABEL_29;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_29;
          }
          goto LABEL_33;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v11 < 4)
          {
LABEL_29:
            unsigned int v18 = (v21 | (v19 << (8 * v11))) + 2;
            break;
          }
LABEL_33:
          if (v21 != -1) {
            goto LABEL_34;
          }
          goto LABEL_31;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
LABEL_31:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      char v22 = 1;
    }
    else
    {
LABEL_34:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((unint64_t)&a1[v10] & v17, (unint64_t)&a2[v10] & v17, v7);
      char v22 = 0;
    }
    a1[v11] = v22;
  }
  return a1;
}

uint64_t sub_A46D4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = ((v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(void *)(v5 + 64);
  uint64_t v7 = 24;
  if (v6 > 0x18) {
    uint64_t v7 = v6;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    unsigned int v12 = ((a2 + ~(-1 << v9) - 254) >> v9) + 1;
    if (HIWORD(v12))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v12 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v12 < 2)
    {
LABEL_22:
      unsigned int v14 = *((unsigned __int8 *)a1 + v7);
      if (v14 >= 2) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_22;
  }
LABEL_14:
  int v13 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v13 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v8 | v13) + 255;
}

void sub_A48C8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + *(void *)(v7 + 64);
  if (v8 <= 0x18) {
    unint64_t v8 = 24;
  }
  size_t v9 = v8 + 1;
  if (a3 < 0xFF)
  {
    int v10 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << (8 * v9)) - 254) >> (8 * v9)) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v11 = a2 - 255;
    if (v9 < 4)
    {
      int v12 = (v11 >> (8 * v9)) + 1;
      if (v8 != -1)
      {
        int v14 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v9] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v9] = v12;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0xA4B30);
      case 4:
        *(_DWORD *)&a1[v9] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v9] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v8] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_A4B58(unsigned __int8 *a1)
{
  uint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = ((v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + *(void *)(v3 + 64);
  if (v4 <= 0x18) {
    unint64_t v4 = 24;
  }
  uint64_t result = a1[v4];
  if (result >= 2)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | ((result - 2) << (8 * v4))) + 2;
        unsigned int v9 = v7 + 2;
        if (v4 >= 4) {
          uint64_t result = v9;
        }
        else {
          uint64_t result = v8;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_A4CC8(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  if (a2 > 1)
  {
    uint64_t v8 = *(void *)(v4 + 64);
    uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v10 = ((v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + *(void *)(v9 + 64);
    if (v10 <= 0x18) {
      size_t v11 = 24;
    }
    else {
      size_t v11 = v10;
    }
    unsigned int v12 = a2 - 2;
    if (v11 < 4)
    {
      unsigned int v13 = v12 >> (8 * v11);
      int v14 = v12 & ~(-1 << (8 * v11));
      a1[v11] = v13 + 2;
      bzero(a1, v11);
      if (v11 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v11 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
    else
    {
      a1[v11] = 2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v12;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v7 = ((*(void *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + *(void *)(v6 + 64);
    if (v7 <= 0x18) {
      unint64_t v7 = 24;
    }
    a1[v7] = a2;
  }
}

uint64_t type metadata accessor for RCSMessageProcessingQueue.RCSQueuedMessage()
{
  return sub_8B108();
}

uint64_t sub_A4EEC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_A4FF0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v11 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v6 + v9) & (unint64_t)~v9) + *(void *)(*(void *)(v7 - 8) + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    uint64_t v15 = v7;
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v16, ((unint64_t)a2 + v10) & v16, v15);
  }
  return a1;
}

uint64_t sub_A5198(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_A528C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_A5384(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_A547C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_A5574(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_A566C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v6) {
    unsigned int v10 = v6;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(v5 + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v12 & ~v11) + *(void *)(*(void *)(v7 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v9)
        {
          char v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
          return v22(a1, v6, AssociatedTypeWitness);
        }
        else
        {
          uint64_t v20 = *(uint64_t (**)(unint64_t))(v8 + 48);
          return v20(((unint64_t)a1 + v12) & ~v11);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_A5948(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(void *)(v7 + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(v9 + 64);
  if (a3 <= v12)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v12 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v17 = ~v12 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0xA5C94);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 >= v11)
        {
          char v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
          v22(a1, a2, v8, AssociatedTypeWitness);
        }
        else
        {
          int v21 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v21((unint64_t)&a1[v14] & ~v13, a2);
        }
      }
      return;
  }
}

uint64_t sub_A5CBC(uint64_t a1)
{
  return sub_A2C6C(a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), *(double *)(v1 + 24));
}

uint64_t sub_A5CCC()
{
  uint64_t v1 = sub_551C(&qword_129F78);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_A5D9C()
{
  sub_551C(&qword_129F78);
  double v1 = *(double *)(v0 + 24);

  return sub_A31A4(v1);
}

uint64_t sub_A5E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_A5E18()
{
  return swift_release();
}

uint64_t sub_A5E20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_A5E68(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_8C18(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_A5EB8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_A5EF8()
{
  return sub_A3404(*(void (**)(void (*)(), uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_A5F04()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_A5F3C()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_A5F64@<X0>(uint64_t a1@<X8>)
{
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = sub_8B44(v2, (uint64_t)static Logger.rcs);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t RCSMessageCreator.MessageCreationError.errorDescription.getter(void *a1, void *a2, void *a3, unint64_t a4)
{
  switch(a4 >> 61)
  {
    case 1uLL:
      v31[0] = 0;
      v31[1] = 0xE000000000000000;
      id v14 = a1;
      swift_errorRetain();
      sub_F78A0(57);
      v35._countAndFlagsBits = 0xD000000000000028;
      v35._object = (void *)0x8000000000104560;
      sub_F72E0(v35);
      id v15 = [v14 guid];
      if (v15) {
        goto LABEL_10;
      }
      goto LABEL_16;
    case 2uLL:
      sub_F78A0(29);
      swift_bridgeObjectRelease();
      v31[0] = 0xD00000000000001BLL;
      v31[1] = 0x8000000000104540;
      v36._countAndFlagsBits = (uint64_t)a1;
      v36._object = a2;
      sub_F72E0(v36);
      return v31[0];
    case 3uLL:
      id v7 = a1;
      sub_F78A0(48);
      swift_bridgeObjectRelease();
      strcpy((char *)v31, "Can't process ");
      HIBYTE(v31[1]) = -18;
      id v16 = [v7 guid];
      if (!v16) {
        goto LABEL_17;
      }
      unsigned int v17 = v16;
      uint64_t v18 = sub_F7220();
      int v20 = v19;

      v37._countAndFlagsBits = v18;
      v37._object = v20;
      sub_F72E0(v37);
      swift_bridgeObjectRelease();
      v38._countAndFlagsBits = 0xD00000000000001DLL;
      v38._object = (void *)0x8000000000104520;
      sub_F72E0(v38);
      v39._countAndFlagsBits = (uint64_t)a2;
      v39._object = a3;
      sub_F72E0(v39);
      v13._countAndFlagsBits = 33;
      v13._object = (void *)0xE100000000000000;
      goto LABEL_13;
    case 4uLL:
      id v14 = a1;
      swift_errorRetain();
      sub_F78A0(48);
      swift_bridgeObjectRelease();
      v31[0] = 0xD00000000000001FLL;
      v31[1] = 0x8000000000104500;
      id v15 = [v14 guid];
      if (!v15) {
        goto LABEL_18;
      }
LABEL_10:
      int v21 = v15;
      uint64_t v22 = sub_F7220();
      uint64_t v24 = v23;

      v40._countAndFlagsBits = v22;
      v40._object = v24;
      sub_F72E0(v40);
      swift_bridgeObjectRelease();
      v41._countAndFlagsBits = 0x74616863206E6920;
      v41._object = (void *)0xE900000000000020;
      sub_F72E0(v41);
      v42._countAndFlagsBits = (uint64_t)a2;
      v42._object = a3;
      sub_F72E0(v42);
      v43._countAndFlagsBits = 8250;
      v43._object = (void *)0xE200000000000000;
      sub_F72E0(v43);
      swift_getErrorValue();
      v44._countAndFlagsBits = sub_F7BD0();
      sub_F72E0(v44);
      swift_bridgeObjectRelease();
      swift_errorRelease();

      return v31[0];
    case 5uLL:
      v31[0] = 0;
      v31[1] = 0xE000000000000000;
      id v7 = a1;
      sub_F78A0(54);
      v45._countAndFlagsBits = 0x72702074276E6143;
      v45._object = (void *)0xEE0020737365636FLL;
      sub_F72E0(v45);
      id v25 = [v7 guid];
      if (!v25) {
        goto LABEL_19;
      }
      uint64_t v26 = v25;
      uint64_t v27 = sub_F7220();
      Swift::String v29 = v28;

      v46._countAndFlagsBits = v27;
      v46._object = v29;
      sub_F72E0(v46);
      swift_bridgeObjectRelease();
      v47._countAndFlagsBits = 0x74616863206E6920;
      v47._object = (void *)0xE900000000000020;
      sub_F72E0(v47);
      v48._countAndFlagsBits = (uint64_t)a2;
      v48._object = a3;
      sub_F72E0(v48);
      v13._object = (void *)0x80000000001044E0;
      v13._countAndFlagsBits = 0xD00000000000001BLL;
      goto LABEL_13;
    default:
      v31[0] = 0;
      v31[1] = 0xE000000000000000;
      id v7 = a1;
      sub_F78A0(53);
      v32._countAndFlagsBits = 0xD000000000000028;
      v32._object = (void *)0x8000000000104590;
      sub_F72E0(v32);
      id v8 = [v7 guid];
      if (!v8)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0xA6568);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_F7220();
      unsigned int v12 = v11;

      v33._countAndFlagsBits = v10;
      v33._object = v12;
      sub_F72E0(v33);
      swift_bridgeObjectRelease();
      v34._countAndFlagsBits = 0x74616863206E6920;
      v34._object = (void *)0xE900000000000020;
      sub_F72E0(v34);
      v13._countAndFlagsBits = (uint64_t)a2;
      v13._object = a3;
LABEL_13:
      sub_F72E0(v13);

      return v31[0];
  }
}

uint64_t sub_A6580()
{
  return RCSMessageCreator.MessageCreationError.errorDescription.getter(*(void **)v0, *(void **)(v0 + 8), *(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t RCSMessageCreator.__allocating_init(delegate:)()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RCSMessageCreator.init(delegate:)()
{
  uint64_t v0 = sub_AB710();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RCSMessageCreator.deinit()
{
  swift_unknownObjectUnownedDestroy();
  return v0;
}

uint64_t RCSMessageCreator.__deallocating_deinit()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_A6664(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  uint64_t v3 = sub_F70F0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  if (qword_1290D8 != -1) {
    swift_once();
  }
  uint64_t v4 = static RCSActor.shared;
  v2[9] = static RCSActor.shared;
  return _swift_task_switch(sub_A6788, v4, 0);
}

uint64_t sub_A6788()
{
  uint64_t v40 = v0;
  double v1 = (id *)(v0 + 24);
  id v2 = [*(id *)(v0 + 24) fileTransferGUIDs];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = v2;
  uint64_t v4 = (void *)sub_F7410();

  if (!v4[2]) {
    goto LABEL_8;
  }
  uint64_t v5 = *(void **)(v0 + 24);
  *(void *)(v0 + 80) = v4[4];
  *(void *)(v0 + 88) = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v6 = [v5 fileTransferGUIDs];
  if (!v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v7 = v6;
  uint64_t v8 = sub_F7410();

  uint64_t v9 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v9 == 1)
  {
    uint64_t v10 = *(void *)(v0 + 40);
    *(void *)(v0 + 96) = swift_unknownObjectUnownedLoadStrong();
    uint64_t v11 = *(void *)(v10 + 88);
    *(void *)(v0 + 104) = v11;
    *(void *)(v0 + 112) = *(void *)(v11 + 56);
    *(void *)(v0 + 120) = (v11 + 56) & 0xFFFFFFFFFFFFLL | 0x9BEB000000000000;
    sub_F74E0();
    *(void *)(v0 + 128) = sub_F74D0();
    uint64_t v12 = sub_F7470();
    uint64_t v14 = v13;
    id v15 = sub_A6B18;
    uint64_t v16 = v12;
    uint64_t v17 = v14;
    return _swift_task_switch(v15, v16, v17);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)(v0 + 24);
  sub_A5F64(*(void *)(v0 + 64));
  id v19 = v18;
  int v20 = sub_F70D0();
  os_log_type_t v21 = sub_F7680();
  if (!os_log_type_enabled(v20, v21))
  {
    uint64_t v31 = *(void *)(v0 + 56);
    uint64_t v30 = *(void *)(v0 + 64);
    uint64_t v32 = *(void *)(v0 + 48);
    Swift::String v33 = *(void **)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    goto LABEL_12;
  }
  id v22 = *v1;
  uint64_t v23 = (uint8_t *)swift_slowAlloc();
  uint64_t v39 = swift_slowAlloc();
  *(_DWORD *)uint64_t v23 = 136315138;
  id v24 = [v22 guid];
  if (!v24)
  {
LABEL_17:

    __break(1u);
    return _swift_task_switch(v15, v16, v17);
  }
  id v25 = v24;
  uint64_t v36 = *(void *)(v0 + 56);
  uint64_t v37 = *(void *)(v0 + 48);
  uint64_t v38 = *(void *)(v0 + 64);
  uint64_t v26 = *(void **)(v0 + 24);
  uint64_t v27 = sub_F7220();
  unint64_t v29 = v28;

  *(void *)(v0 + 16) = sub_A3FC(v27, v29, &v39);
  sub_F77B0();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_0, v20, v21, "%s does not look like a current location message", v23, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v37);
LABEL_12:
  swift_task_dealloc();
  Swift::String v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34(0);
}

uint64_t sub_A6B18()
{
  uint64_t v1 = v0[13];
  id v2 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t))v0[14];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[5];
  swift_release();
  v0[17] = v2(v4, v3, *(void *)(v6 + 80), v1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_A6BD0, v5, 0);
}

void sub_A6BD0()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void **)(v0 + 136);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 136) type];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = sub_F7220();
      uint64_t v6 = v5;

      if (v4 == 0xD000000000000010 && v6 == 0x8000000000104640)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = *(void *)(v0 + 136);
        goto LABEL_14;
      }
      char v8 = sub_F7B60();
      swift_bridgeObjectRelease();
      if (v8)
      {
        uint64_t v7 = *(void *)(v0 + 136);
        goto LABEL_14;
      }
    }
  }
  uint64_t v9 = (id *)(v0 + 24);
  uint64_t v10 = *(void **)(v0 + 24);
  sub_A5F64(*(void *)(v0 + 64));
  id v11 = v10;
  uint64_t v12 = sub_F70D0();
  os_log_type_t v13 = sub_F7680();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = *v9;
    id v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)id v15 = 136315138;
    id v16 = [v14 guid];
    if (!v16)
    {

      __break(1u);
      return;
    }
    uint64_t v17 = v16;
    uint64_t v27 = *(void *)(v0 + 56);
    uint64_t v28 = *(void *)(v0 + 48);
    uint64_t v29 = *(void *)(v0 + 64);
    uint64_t v18 = *(void **)(v0 + 24);
    uint64_t v19 = sub_F7220();
    unint64_t v21 = v20;

    *(void *)(v0 + 16) = sub_A3FC(v19, v21, &v30);
    sub_F77B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v12, v13, "%s does not look like a current location message", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 56);
    uint64_t v22 = *(void *)(v0 + 64);
    uint64_t v24 = *(void *)(v0 + 48);
    id v25 = *(void **)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  uint64_t v7 = 0;
LABEL_14:
  swift_task_dealloc();
  uint64_t v26 = *(void (**)(uint64_t))(v0 + 8);
  v26(v7);
}

uint64_t sub_A6EB0(void *a1)
{
  uint64_t v2 = sub_F70F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v51 - v8;
  __chkstk_darwin(v7);
  id v11 = (char *)&v51 - v10;
  id v12 = [a1 localURL];
  uint64_t v13 = sub_551C(&qword_128300);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v12)
  {
LABEL_35:
    uint64_t v50 = sub_F6DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v15, 1, 1, v50);
LABEL_36:
    __break(1u);
  }
  uint64_t v51 = v2;
  uint64_t v52 = v3;
  uint64_t v16 = sub_F6DC0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6D80();

  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v19, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    goto LABEL_36;
  }
  uint64_t v27 = sub_F6DE0();
  unint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  uint64_t v30 = self;
  uint64_t v31 = (void *)sub_F6E20();
  id v54 = 0;
  id v32 = [v30 contactsWithData:v31 error:&v54];

  id v33 = v54;
  if (v32)
  {
    sub_6CA4(0, &qword_12A0C0);
    unint64_t v34 = sub_F7410();
    id v35 = v33;

    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = (void *)sub_F79B0();
      swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_13:
        if ((v34 & 0xC000000000000001) != 0)
        {
          id v37 = (id)sub_F78D0();
        }
        else
        {
          if (!*(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8)))
          {
            __break(1u);
            goto LABEL_29;
          }
          id v37 = *(id *)(v34 + 32);
        }
        uint64_t v36 = v37;
        swift_bridgeObjectRelease();
        id v38 = [v36 urlAddresses];
        sub_551C(&qword_12A0C8);
        unint64_t v34 = sub_F7410();

        if (!(v34 >> 62))
        {
          if (*(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8)))
          {
LABEL_18:
            if ((v34 & 0xC000000000000001) != 0)
            {
              id v39 = (id)sub_F78D0();
              goto LABEL_21;
            }
            if (*(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8)))
            {
              id v39 = *(id *)(v34 + 32);
LABEL_21:
              uint64_t v40 = v39;
              swift_bridgeObjectRelease();
              id v41 = [v40 value];
              uint64_t v25 = sub_F7220();

              sub_2852C(v27, v29);
              return v25;
            }
            __break(1u);
            goto LABEL_35;
          }
          goto LABEL_30;
        }
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_F79B0();
        swift_bridgeObjectRelease();
        if (v46) {
          goto LABEL_18;
        }
LABEL_30:
        swift_bridgeObjectRelease();
        sub_A5F64((uint64_t)v11);
        Swift::String v47 = sub_F70D0();
        os_log_type_t v48 = sub_F76A0();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          id v54 = (id)swift_slowAlloc();
          *(_DWORD *)v49 = 136446210;
          uint64_t v53 = sub_A3FC(0xD000000000000020, 0x8000000000104610, (uint64_t *)&v54);
          sub_F77B0();
          _os_log_impl(&dword_0, v47, v48, "%{public}s current location VCF was missing a URL address to extract a location from", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        sub_2852C(v27, v29);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v51);
        return 0;
      }
    }
    else
    {
      uint64_t v36 = *(void **)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8));
      if (v36) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    sub_A5F64((uint64_t)v9);
    Swift::String v43 = sub_F70D0();
    os_log_type_t v44 = sub_F76A0();
    if (os_log_type_enabled(v43, v44))
    {
      Swift::String v45 = (uint8_t *)swift_slowAlloc();
      id v54 = (id)swift_slowAlloc();
      *(_DWORD *)Swift::String v45 = 136446210;
      uint64_t v53 = sub_A3FC(0xD000000000000020, 0x8000000000104610, (uint64_t *)&v54);
      sub_F77B0();
      _os_log_impl(&dword_0, v43, v44, "%{public}s error extracting contact from current location vcard", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    sub_2852C(v27, v29);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v51);
    return 0;
  }
  id v42 = v54;
  sub_F6D30();

  swift_willThrow();
  sub_2852C(v27, v29);
  sub_A5F64((uint64_t)v6);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v20 = sub_F70D0();
  os_log_type_t v21 = sub_F76A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    id v54 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v53 = sub_A3FC(0xD000000000000020, 0x8000000000104610, (uint64_t *)&v54);
    sub_F77B0();
    *(_WORD *)(v22 + 12) = 2112;
    swift_errorRetain();
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v53 = v24;
    sub_F77B0();
    *uint64_t v23 = v24;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v20, v21, "%{public}s error reading vlocation data: %@", (uint8_t *)v22, 0x16u);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v51);
  return 0;
}

uint64_t sub_A7840(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  if (qword_1290D8 != -1) {
    swift_once();
  }
  v2[4] = static RCSActor.shared;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[5] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_A7918;
  return sub_A6664(a1);
}

uint64_t sub_A7918(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_A7A30, v2, 0);
}

uint64_t sub_A7A30()
{
  id v1 = *(id *)(v0 + 48);
  if (v1)
  {
    uint64_t v2 = sub_A6EB0(*(void **)(v0 + 48));
LABEL_3:
    uint64_t v4 = (void *)v2;
    uint64_t v5 = v3;

    goto LABEL_16;
  }
  id v6 = [*(id *)(v0 + 16) balloonBundleID];
  if (!v6)
  {
    sub_F7220();
    goto LABEL_13;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_F7220();
  uint64_t v10 = v9;

  uint64_t v11 = sub_F7220();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  char v14 = sub_F7B60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_14:
    uint64_t v4 = 0;
    goto LABEL_15;
  }
LABEL_20:
  id v17 = [*(id *)(v0 + 16) body];
  uint64_t v4 = v17;
  if (v17)
  {
    id v1 = [v17 string];

    uint64_t v2 = sub_F7220();
    goto LABEL_3;
  }
LABEL_15:
  uint64_t v5 = 0;
LABEL_16:
  id v15 = *(uint64_t (**)(void *, uint64_t))(v0 + 8);
  return v15(v4, v5);
}

uint64_t sub_A7BC0(uint64_t a1, uint64_t a2)
{
  v2[20] = a1;
  if (qword_1290D8 != -1) {
    swift_once();
  }
  v2[21] = static RCSActor.shared;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[22] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_A7CCC;
  return sub_A7840(a2);
}

uint64_t sub_A7CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 168);
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_A7E10, v4, 0);
}

uint64_t sub_A7E10()
{
  if (!*(void *)(v0 + 192))
  {
    id v4 = 0;
    goto LABEL_22;
  }
  id v1 = (int *)(v0 + 204);
  *(void *)(v0 + 200) = 0;
  uint64_t v2 = self;
  uint64_t v3 = (void *)sub_F71F0();
  id v4 = [v2 vCardCoordinateForMapURL:v3 outLatitude:v0 + 204 outLongitude:v0 + 200];

  if (!v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v5 = (void *)sub_F71F0();
  uint64_t v6 = (void *)sub_F71F0();
  id v7 = (id)IMGetDomainValueForKey();

  if (v7)
  {
    sub_F77F0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  sub_ABB34(v0 + 112, v0 + 80);
  if (*(void *)(v0 + 104))
  {
    uint64_t v8 = (id *)(v0 + 144);
    sub_6CA4(0, (unint64_t *)&qword_128248);
    if (swift_dynamicCast())
    {
      id v9 = *v8;
      [*v8 floatValue];
      int v11 = v10;

      goto LABEL_13;
    }
  }
  else
  {
    sub_1E944(v0 + 80, &qword_127FF8);
  }
  int v11 = *v1;
LABEL_13:
  *id v1 = v11;
  uint64_t v12 = (void *)sub_F71F0();
  uint64_t v13 = (void *)sub_F71F0();
  id v14 = (id)IMGetDomainValueForKey();

  if (v14)
  {
    sub_F77F0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  sub_ABB34(v0 + 48, v0 + 16);
  if (!*(void *)(v0 + 40))
  {
    sub_1E944(v0 + 16, &qword_127FF8);
    goto LABEL_20;
  }
  id v15 = (id *)(v0 + 152);
  sub_6CA4(0, (unint64_t *)&qword_128248);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    int v18 = *(_DWORD *)(v0 + 200);
    goto LABEL_21;
  }
  id v16 = *v15;
  [*v15 floatValue];
  int v18 = v17;

LABEL_21:
  uint64_t v20 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 192);
  uint64_t v21 = *(void *)(v0 + 160);
  *(_DWORD *)(v0 + 200) = v18;
  uint64_t v22 = (int8x16_t *)(v21 + *(int *)(type metadata accessor for RCSMessage(0) + 28));
  sub_1E944((uint64_t)v22, (uint64_t *)&unk_128170);
  int8x16_t v23 = (int8x16_t)vcvtq_f64_f32(*(float32x2_t *)(v0 + 200));
  *uint64_t v22 = vextq_s8(v23, v23, 8uLL);
  v22[1].i64[0] = v20;
  v22[1].i64[1] = v19;
  v22[2].i64[0] = 0;
  uint64_t v24 = type metadata accessor for RCSMessage.Content(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(int8x16_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 0, 1, v24);
LABEL_22:
  uint64_t v25 = *(uint64_t (**)(id))(v0 + 8);
  return v25(v4);
}

uint64_t sub_A81EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[26] = a3;
  v4[27] = v3;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = *v3;
  uint64_t v5 = sub_F70F0();
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v4[35] = swift_task_alloc();
  if (qword_1290D8 != -1) {
    swift_once();
  }
  uint64_t v6 = static RCSActor.shared;
  v4[36] = static RCSActor.shared;
  return _swift_task_switch(sub_A836C, v6, 0);
}

uint64_t sub_A836C()
{
  uint64_t v63 = v0;
  id v1 = *(void **)(v0 + 200);
  unint64_t v2 = sub_E9168((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v3 = type metadata accessor for RCSMessage(0);
  *(void *)(v0 + 296) = v3;
  RCSMessageMetadata.merge(with:)((CoreRCS::RCSMessageMetadata)v2);
  swift_bridgeObjectRelease();
  id v4 = sub_ED5BC(v1);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = (uint64_t *)(*(void *)(v0 + 192) + *(int *)(v3 + 28));
    sub_1E944((uint64_t)v6, (uint64_t *)&unk_128170);
    type metadata accessor for RCSSuggestedReply();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *uint64_t v6 = v7;
    uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = 1;
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v13(v12);
  }
  id v9 = sub_ED5D0(*(void **)(v0 + 200));
  if (v9)
  {
    id v10 = v9;
    uint64_t v6 = (uint64_t *)(*(void *)(v0 + 192) + *(int *)(v3 + 28));
    sub_1E944((uint64_t)v6, (uint64_t *)&unk_128170);
    type metadata accessor for RCSSuggestedAction();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *uint64_t v6 = v11;
    uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
    goto LABEL_7;
  }
  if ([*(id *)(v0 + 200) isDeviceActionMessage])
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v0 + 192) + *(int *)(v3 + 28));
    sub_1E944((uint64_t)v6, (uint64_t *)&unk_128170);
    uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
    goto LABEL_7;
  }
  if ([*(id *)(v0 + 200) isTypingMessage])
  {
    id v15 = *(unsigned char **)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 192);
    *id v15 = [*(id *)(v0 + 200) isFinished] ^ 1;
    uint64_t v17 = type metadata accessor for RCSMessage.Content(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = 1;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 0, 1, v17);
    sub_5610((uint64_t)v15, v16 + *(int *)(v3 + 28), (uint64_t *)&unk_128170);
    goto LABEL_8;
  }
  id v18 = [*(id *)(v0 + 200) fileTransferGUIDs];
  if (!v18)
  {
LABEL_19:
    uint64_t v24 = *(void *)(v0 + 224);
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v26 = sub_F6DC0();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = swift_task_alloc();
    sub_551C(&qword_128300);
    uint64_t v29 = swift_task_alloc();
    swift_unknownObjectUnownedLoadStrong();
    (*(void (**)(uint64_t, void))(*(void *)(v24 + 88) + 80))(v25, *(void *)(v24 + 80));
    swift_unknownObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v26) != 1)
    {
      uint64_t v39 = *(void *)(v0 + 296);
      uint64_t v40 = *(uint64_t **)(v0 + 280);
      uint64_t v41 = *(void *)(v0 + 192);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v28, v29, v26);
      swift_task_dealloc();
      uint64_t v42 = sub_F6D50();
      uint64_t v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
      uint64_t *v40 = v42;
      v40[1] = v44;
      v40[2] = 0;
      uint64_t v45 = type metadata accessor for RCSMessage.Content(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = 1;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v40, 0, 1, v45);
      sub_5610((uint64_t)v40, v41 + *(int *)(v39 + 28), (uint64_t *)&unk_128170);
      swift_task_dealloc();
      goto LABEL_8;
    }
    uint64_t v30 = *(void **)(v0 + 200);
    sub_1E944(v29, &qword_128300);
    swift_task_dealloc();
    swift_task_dealloc();
    id v31 = [v30 body];
    if (!v31)
    {
      uint64_t v46 = *(void **)(v0 + 200);
      sub_A5F64(*(void *)(v0 + 256));
      id v47 = v46;
      os_log_type_t v48 = sub_F70D0();
      os_log_type_t v49 = sub_F76A0();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v51 = *(void *)(v0 + 256);
      uint64_t v52 = *(void *)(v0 + 232);
      uint64_t v53 = *(void *)(v0 + 240);
      id v54 = *(void **)(v0 + 200);
      if (v50)
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v62 = swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 136446466;
        *(void *)(v0 + 152) = sub_A3FC(0xD000000000000023, 0x80000000001045C0, &v62);
        sub_F77B0();
        *(_WORD *)(v55 + 12) = 2080;
        uint64_t v61 = v51;
        id v56 = [v54 debugDescription];
        uint64_t v60 = v52;
        uint64_t v57 = sub_F7220();
        unint64_t v59 = v58;

        *(void *)(v0 + 144) = sub_A3FC(v57, v59, &v62);
        sub_F77B0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_0, v48, v49, "%{public}s asked to convert unknown message type to RCS: %s", (uint8_t *)v55, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v61, v60);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
      }
      uint64_t v12 = 0;
      goto LABEL_8;
    }
    id v32 = v31;
    uint64_t v33 = *(void *)(v0 + 296);
    uint64_t v34 = *(void *)(v0 + 192);
    id v35 = [v31 string];

    uint64_t v36 = sub_F7220();
    uint64_t v38 = v37;

    uint64_t v6 = (uint64_t *)(v34 + *(int *)(v33 + 28));
    sub_1E944((uint64_t)v6, (uint64_t *)&unk_128170);
    *uint64_t v6 = v36;
    v6[1] = v38;
    v6[2] = 0;
    uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
    goto LABEL_7;
  }
  uint64_t v19 = v18;
  uint64_t v20 = sub_F7410();
  *(void *)(v0 + 304) = v20;

  if (!*(void *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_A8B74;
  uint64_t v23 = *(void *)(v0 + 192);
  uint64_t v22 = *(void *)(v0 + 200);
  return sub_A7BC0(v23, v22);
}

uint64_t sub_A8B74(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 288);
  *(unsigned char *)(*(void *)v1 + 139) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_A8C8C, v2, 0);
}

uint64_t sub_A8C8C()
{
  uint64_t v41 = v0;
  if (*(unsigned char *)(v0 + 139) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease();
    sub_A5F64(v1);
    uint64_t v2 = sub_F70D0();
    os_log_type_t v3 = sub_F7670();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void *)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 240);
    if (v4)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      *(void *)(v0 + 184) = sub_A3FC(0xD000000000000023, 0x80000000001045C0, &v40);
      sub_F77B0();
      _os_log_impl(&dword_0, v2, v3, "%{public}s populated RCSMessage with geolocation content", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v26(1);
  }
  else
  {
    id v9 = *(void **)(v0 + 200);
    sub_A5F64(*(void *)(v0 + 264));
    id v10 = v9;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_F70D0();
    os_log_type_t v12 = sub_F7670();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = *(void *)(v0 + 304);
    if (v13)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446722;
      *(void *)(v0 + 160) = sub_A3FC(0xD000000000000023, 0x80000000001045C0, &v40);
      uint64_t result = sub_F77B0();
      *(_WORD *)(v15 + 12) = 2080;
      if (!*(void *)(v14 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v17 = *(void *)(v0 + 304);
      uint64_t v37 = *(void *)(v0 + 240);
      uint64_t v38 = *(void *)(v0 + 232);
      uint64_t v39 = *(void *)(v0 + 264);
      id v18 = *(void **)(v0 + 200);
      os_log_type_t v36 = v12;
      uint64_t v20 = *(void *)(v17 + 32);
      unint64_t v19 = *(void *)(v17 + 40);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 168) = sub_A3FC(v20, v19, &v40);
      sub_F77B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      unsigned int v21 = [v18 isAudioMessage];
      BOOL v22 = v21 == 0;
      if (v21) {
        uint64_t v23 = 7562617;
      }
      else {
        uint64_t v23 = 28526;
      }
      if (v22) {
        unint64_t v24 = 0xE200000000000000;
      }
      else {
        unint64_t v24 = 0xE300000000000000;
      }
      *(void *)(v0 + 176) = sub_A3FC(v23, v24, &v40);
      sub_F77B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_0, v11, v36, "%{public}s Sending attachment %s, isAudioMessage: %s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v25(v39, v38);
    }
    else
    {
      uint64_t v27 = *(void *)(v0 + 264);
      uint64_t v28 = *(void *)(v0 + 232);
      uint64_t v29 = *(void *)(v0 + 240);
      uint64_t v30 = *(void **)(v0 + 200);
      swift_bridgeObjectRelease();

      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v25(v27, v28);
    }
    *(void *)(v0 + 320) = v25;
    char v31 = [*(id *)(v0 + 200) isAudioMessage];
    id v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v32;
    *id v32 = v0;
    v32[1] = sub_A919C;
    uint64_t v33 = *(void *)(v0 + 304);
    uint64_t v34 = *(void *)(v0 + 208);
    uint64_t v35 = *(void *)(v0 + 192);
    return sub_D9034(v35, v31, v33, v34);
  }
}

uint64_t sub_A919C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 336) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 288);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v6 = sub_A9854;
  }
  else
  {
    *(unsigned char *)(v4 + 140) = a1 & 1;
    uint64_t v6 = sub_A92F8;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_A92F8()
{
  uint64_t v45 = v0;
  if (*(unsigned char *)(v0 + 140))
  {
    uint64_t v1 = 1;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v4 = sub_F6DC0();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = swift_task_alloc();
    sub_551C(&qword_128300);
    uint64_t v7 = swift_task_alloc();
    swift_unknownObjectUnownedLoadStrong();
    (*(void (**)(uint64_t, void))(*(void *)(v2 + 88) + 80))(v3, *(void *)(v2 + 80));
    swift_unknownObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4) == 1)
    {
      uint64_t v8 = *(void **)(v0 + 200);
      sub_1E944(v7, &qword_128300);
      swift_task_dealloc();
      swift_task_dealloc();
      id v9 = [v8 body];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)(v0 + 296);
        uint64_t v12 = *(void *)(v0 + 192);
        id v13 = [v9 string];

        uint64_t v14 = sub_F7220();
        uint64_t v16 = v15;

        uint64_t v17 = (uint64_t *)(v12 + *(int *)(v11 + 28));
        sub_1E944((uint64_t)v17, (uint64_t *)&unk_128170);
        *uint64_t v17 = v14;
        v17[1] = v16;
        v17[2] = 0;
        uint64_t v18 = type metadata accessor for RCSMessage.Content(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v1 = 1;
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
      }
      else
      {
        uint64_t v26 = *(void **)(v0 + 200);
        sub_A5F64(*(void *)(v0 + 256));
        id v27 = v26;
        uint64_t v28 = sub_F70D0();
        os_log_type_t v29 = sub_F76A0();
        BOOL v30 = os_log_type_enabled(v28, v29);
        uint64_t v31 = *(void *)(v0 + 256);
        uint64_t v32 = *(void *)(v0 + 232);
        uint64_t v33 = *(void *)(v0 + 240);
        uint64_t v34 = *(void **)(v0 + 200);
        if (v30)
        {
          uint64_t v35 = swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          *(_DWORD *)uint64_t v35 = 136446466;
          *(void *)(v0 + 152) = sub_A3FC(0xD000000000000023, 0x80000000001045C0, &v44);
          sub_F77B0();
          *(_WORD *)(v35 + 12) = 2080;
          uint64_t v43 = v31;
          id v36 = [v34 debugDescription];
          uint64_t v42 = v32;
          uint64_t v37 = sub_F7220();
          unint64_t v39 = v38;

          *(void *)(v0 + 144) = sub_A3FC(v37, v39, &v44);
          sub_F77B0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_0, v28, v29, "%{public}s asked to convert unknown message type to RCS: %s", (uint8_t *)v35, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v43, v42);
        }
        else
        {

          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
        }
        uint64_t v1 = 0;
      }
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 296);
      uint64_t v20 = *(uint64_t **)(v0 + 280);
      uint64_t v21 = *(void *)(v0 + 192);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v6, v7, v4);
      swift_task_dealloc();
      uint64_t v22 = sub_F6D50();
      uint64_t v24 = v23;
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      *uint64_t v20 = v22;
      v20[1] = v24;
      v20[2] = 0;
      uint64_t v25 = type metadata accessor for RCSMessage.Content(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v1 = 1;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v20, 0, 1, v25);
      sub_5610((uint64_t)v20, v21 + *(int *)(v19 + 28), (uint64_t *)&unk_128170);
      swift_task_dealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v40(v1);
}

uint64_t sub_A9854()
{
  sub_A5F64(v0[31]);
  uint64_t v1 = sub_F70D0();
  os_log_type_t v2 = sub_F7690();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "Failed to process attachments for message", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[40];
  uint64_t v5 = v0[31];
  uint64_t v6 = v0[29];
  uint64_t v7 = v0[24];
  uint64_t v8 = (void *)v0[25];

  v4(v5, v6);
  sub_27F4C(v7, (uint64_t)(v0 + 2));
  sub_F74E0();
  id v9 = v8;
  v0[43] = sub_F74D0();
  uint64_t v11 = sub_F7470();
  return _swift_task_switch(sub_A99B4, v11, v10);
}

uint64_t sub_A99B4()
{
  uint64_t v1 = v0[36];
  swift_release();
  v0[44] = RCSMessage.SenderInfo.description.getter();
  v0[45] = v2;
  sub_27EF8((uint64_t)(v0 + 2));
  return _swift_task_switch(sub_A9A34, v1, 0);
}

uint64_t sub_A9A34()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v3 = v0[25];
  unint64_t v4 = v0[42] | 0x8000000000000000;
  type metadata accessor for RCSMessageCreator.MessageCreationError();
  swift_getWitnessTable();
  swift_allocError();
  *uint64_t v5 = v3;
  v5[1] = v2;
  v5[2] = v1;
  v5[3] = v4;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6(0);
}

uint64_t sub_A9B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[34] = a4;
  v5[35] = v4;
  v5[32] = a2;
  v5[33] = a3;
  v5[31] = a1;
  uint64_t v6 = *v4;
  v5[36] = *(void *)(*v4 + 88);
  v5[37] = *(void *)(v6 + 80);
  v5[38] = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_F7770();
  v5[39] = v7;
  v5[40] = *(void *)(v7 - 8);
  v5[41] = swift_task_alloc();
  if (qword_1290D8 != -1) {
    swift_once();
  }
  uint64_t v8 = static RCSActor.shared;
  v5[42] = static RCSActor.shared;
  return _swift_task_switch(sub_A9CAC, v8, 0);
}

uint64_t sub_A9CAC()
{
  uint64_t v1 = v0[36];
  v0[43] = swift_unknownObjectUnownedLoadStrong();
  v0[44] = *(void *)(v1 + 40);
  v0[45] = (v1 + 40) & 0xFFFFFFFFFFFFLL | 0x7B1F000000000000;
  v0[46] = sub_F74E0();
  v0[47] = sub_F74D0();
  uint64_t v3 = sub_F7470();
  return _swift_task_switch(sub_A9D60, v3, v2);
}

uint64_t sub_A9D60()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[44];
  uint64_t v2 = v0[42];
  uint64_t v4 = v0[36];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[33];
  swift_release();
  uint64_t v6 = v1(v5, v3, v4);
  uint64_t v8 = v7;
  swift_unknownObjectRelease();
  v0[48] = v6;
  v0[49] = v8;
  return _swift_task_switch(sub_A9E14, v2, 0);
}

uint64_t sub_A9E14()
{
  uint64_t v1 = v0[36];
  v0[50] = swift_unknownObjectUnownedLoadStrong();
  v0[51] = *(void *)(v1 + 48);
  v0[52] = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x4D2E000000000000;
  v0[53] = sub_F74D0();
  uint64_t v3 = sub_F7470();
  return _swift_task_switch(sub_A9EBC, v3, v2);
}

uint64_t sub_A9EBC()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v5 = *(void *)(v0 + 264);
  swift_release();
  *(unsigned char *)(v0 + 73) = v1(v5, v3, v4);
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_A9F68, v2, 0);
}

id sub_A9F68()
{
  int v1 = *(unsigned __int8 *)(v0 + 73);
  if (v1 == 43)
  {
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 304);
    uint64_t v37 = *(void *)(v0 + 288);
    uint64_t v12 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 432) = swift_unknownObjectUnownedLoadStrong();
    uint64_t v13 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v12, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v11);
    id v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 24)
                                                                              + **(int **)(v37 + 24));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_AA2FC;
    uint64_t v15 = *(void *)(v0 + 328);
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v18 = *(void *)(v0 + 264);
    return (id)v36(v0 + 208, v18, v15, v16, v17);
  }
  else
  {
    if (v1 == 45)
    {
      uint64_t v2 = (long long *)(v0 + 144);
      sub_EAF1C(*(void *)(v0 + 384), *(void *)(v0 + 392), 0, 0, 0, (uint64_t *)(v0 + 144));
      unsigned int v3 = [*(id *)(v0 + 256) isFromMe];
      char v4 = v3;
      if (v3)
      {
        uint64_t v5 = *(void *)(v0 + 248);
        long long v6 = *v2;
        long long v7 = *(_OWORD *)(v0 + 160);
        long long v8 = *(_OWORD *)(v0 + 176);
        *(_OWORD *)(v5 + 41) = *(_OWORD *)(v0 + 185);
        *(_OWORD *)(v5 + 16) = v7;
        *(_OWORD *)(v5 + 32) = v8;
        *(_OWORD *)uint64_t v5 = v6;
        id v9 = (unsigned char *)(v5 + 57);
      }
      else
      {
        id result = [*(id *)(v0 + 256) sender];
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v26 = result;
        uint64_t v27 = sub_F7220();
        unint64_t v29 = v28;

        sub_EAF1C(v27, v29, 0, 0, 0, (uint64_t *)(v0 + 80));
        uint64_t v5 = *(void *)(v0 + 248);
        long long v30 = *(_OWORD *)(v0 + 80);
        long long v31 = *(_OWORD *)(v0 + 96);
        long long v32 = *(_OWORD *)(v0 + 112);
        *(_OWORD *)(v5 + 41) = *(_OWORD *)(v0 + 121);
        *(_OWORD *)(v5 + 16) = v31;
        *(_OWORD *)(v5 + 32) = v32;
        *(_OWORD *)uint64_t v5 = v30;
        long long v33 = *v2;
        long long v34 = *(_OWORD *)(v0 + 160);
        long long v35 = *(_OWORD *)(v0 + 176);
        *(_OWORD *)(v5 + 105) = *(_OWORD *)(v0 + 185);
        *(_OWORD *)(v5 + 80) = v34;
        *(_OWORD *)(v5 + 96) = v35;
        *(_OWORD *)(v5 + 64) = v33;
        id v9 = (unsigned char *)(v5 + 121);
      }
      unsigned char *v9 = 0;
      *(unsigned char *)(v5 + 122) = v4 ^ 1;
      swift_task_dealloc();
      uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      uint64_t v21 = *(void *)(v0 + 384);
      uint64_t v20 = *(void *)(v0 + 392);
      uint64_t v22 = *(void **)(v0 + 256);
      type metadata accessor for RCSMessageCreator.MessageCreationError();
      swift_getWitnessTable();
      swift_allocError();
      *uint64_t v23 = v22;
      v23[1] = v21;
      v23[2] = v20;
      v23[3] = 0x6000000000000000;
      id v24 = v22;
      swift_willThrow();
      swift_task_dealloc();
      uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    }
    return (id)v25();
  }
}

uint64_t sub_AA2FC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[42];
  (*(void (**)(void, void))(v2[40] + 8))(v2[41], v2[39]);
  swift_unknownObjectRelease();
  if (v0) {
    char v4 = sub_AA608;
  }
  else {
    char v4 = sub_AA49C;
  }
  return _swift_task_switch(v4, v3, 0);
}

id sub_AA49C()
{
  unsigned int v1 = [*(id *)(v0 + 256) isFromMe];
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 248);
    sub_1E87C((long long *)(v0 + 208), v2);
    uint64_t v3 = (unsigned char *)(v2 + 57);
LABEL_7:
    uint64_t v15 = *(void *)(v0 + 248);
    *uint64_t v3 = 1;
    *(unsigned char *)(v15 + 122) = v1 ^ 1;
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_8;
  }
  id result = [*(id *)(v0 + 256) sender];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v7 = sub_F7220();
  unint64_t v9 = v8;

  sub_EAF1C(v7, v9, 0, 0, 0, (uint64_t *)(v0 + 16));
  if (!v6)
  {
    uint64_t v11 = *(_OWORD **)(v0 + 248);
    long long v12 = *(_OWORD *)(v0 + 16);
    long long v13 = *(_OWORD *)(v0 + 32);
    long long v14 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)((char *)v11 + 41) = *(_OWORD *)(v0 + 57);
    v11[1] = v13;
    v11[2] = v14;
    *uint64_t v11 = v12;
    sub_1E87C((long long *)(v0 + 208), (uint64_t)(v11 + 4));
    uint64_t v3 = (char *)v11 + 121;
    goto LABEL_7;
  }
  sub_6BEC(v0 + 208);
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
LABEL_8:
  return (id)v10();
}

uint64_t sub_AA608()
{
  swift_task_dealloc();
  unsigned int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSMessageCreator.createSenderInfo(with:for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[20] = a3;
  v4[21] = a4;
  v4[18] = a1;
  v4[19] = a2;
  if (qword_1290D8 != -1) {
    swift_once();
  }
  uint64_t v5 = static RCSActor.shared;
  return _swift_task_switch(sub_AA70C, v5, 0);
}

id sub_AA70C()
{
  unsigned int v1 = (long long *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 160);
  unint64_t v2 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  sub_EAF1C(v3, v2, 0, 0, 0, (uint64_t *)(v0 + 80));
  unsigned int v4 = [*(id *)(v0 + 152) isFromMe];
  if (v4)
  {
    uint64_t v5 = *(_OWORD **)(v0 + 144);
    long long v6 = *v1;
    long long v7 = *(_OWORD *)(v0 + 96);
    long long v8 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)((char *)v5 + 41) = *(_OWORD *)(v0 + 121);
    v5[1] = v7;
    v5[2] = v8;
    *uint64_t v5 = v6;
    unint64_t v9 = (char *)v5 + 57;
  }
  else
  {
    id result = [*(id *)(v0 + 152) sender];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = result;
    uint64_t v12 = sub_F7220();
    unint64_t v14 = v13;

    sub_EAF1C(v12, v14, 0, 0, 0, (uint64_t *)(v0 + 16));
    uint64_t v15 = *(_OWORD **)(v0 + 144);
    long long v16 = *(_OWORD *)(v0 + 16);
    long long v17 = *(_OWORD *)(v0 + 32);
    long long v18 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)((char *)v15 + 41) = *(_OWORD *)(v0 + 57);
    v15[1] = v17;
    v15[2] = v18;
    *uint64_t v15 = v16;
    long long v19 = *v1;
    long long v20 = *(_OWORD *)(v0 + 96);
    long long v21 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)((char *)v15 + 105) = *(_OWORD *)(v0 + 121);
    v15[5] = v20;
    v15[6] = v21;
    v15[4] = v19;
    unint64_t v9 = (char *)v15 + 121;
  }
  uint64_t v22 = *(void *)(v0 + 144);
  unsigned char *v9 = 0;
  *(unsigned char *)(v22 + 122) = v4 ^ 1;
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v23();
}

uint64_t RCSMessageCreator.createRCSMessage(with:originalItem:in:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[38] = a5;
  v6[39] = v5;
  v6[36] = a3;
  v6[37] = a4;
  v6[34] = a1;
  v6[35] = a2;
  v6[40] = *v5;
  if (qword_1290D8 != -1) {
    swift_once();
  }
  v6[41] = static RCSActor.shared;
  uint64_t v10 = (void *)swift_task_alloc();
  v6[42] = v10;
  void *v10 = v6;
  v10[1] = sub_AA9DC;
  return sub_A9B54((uint64_t)(v6 + 18), a2, a4, a5);
}

uint64_t sub_AA9DC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 328);
  if (v0) {
    unsigned int v4 = sub_AAD48;
  }
  else {
    unsigned int v4 = sub_AAB08;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_AAB08()
{
  sub_55B4((uint64_t)(v0 + 18), (uint64_t)(v0 + 2));
  unsigned int v1 = (void *)swift_task_alloc();
  v0[44] = v1;
  *unsigned int v1 = v0;
  v1[1] = sub_AABB8;
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[35];
  uint64_t v4 = v0[36];
  uint64_t v5 = v0[34];
  return RCSMessageCreator.createRCSMessage(with:originalItem:with:using:)(v5, v3, v4, (uint64_t)(v0 + 2), v2);
}

uint64_t sub_AABB8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 328);
  if (v0) {
    uint64_t v4 = sub_AAF98;
  }
  else {
    uint64_t v4 = sub_AACE4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_AACE4()
{
  sub_27EF8(v0 + 16);
  unsigned int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_AAD48()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = (void *)v0[35];
  v0[46] = swift_unknownObjectUnownedLoadStrong();
  uint64_t v3 = *(void *)(v1 + 88);
  v0[47] = v3;
  v0[48] = *(void *)(v3 + 40);
  v0[49] = (v3 + 40) & 0xFFFFFFFFFFFFLL | 0x7B1F000000000000;
  sub_F74E0();
  id v4 = v2;
  v0[50] = sub_F74D0();
  uint64_t v6 = sub_F7470();
  return _swift_task_switch(sub_AAE10, v6, v5);
}

uint64_t sub_AAE10()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[48];
  uint64_t v3 = v0[40];
  uint64_t v2 = v0[41];
  uint64_t v4 = v0[37];
  swift_release();
  v0[51] = *(void *)(v3 + 80);
  uint64_t v5 = v1(v4);
  uint64_t v7 = v6;
  swift_unknownObjectRelease();
  v0[52] = v5;
  v0[53] = v7;
  return _swift_task_switch(sub_AAEC8, v2, 0);
}

uint64_t sub_AAEC8()
{
  uint64_t v2 = v0[52];
  uint64_t v1 = v0[53];
  uint64_t v3 = v0[35];
  uint64_t v4 = v0[43] | 0x2000000000000000;
  type metadata accessor for RCSMessageCreator.MessageCreationError();
  swift_getWitnessTable();
  swift_allocError();
  *uint64_t v5 = v3;
  v5[1] = v2;
  v5[2] = v1;
  v5[3] = v4;
  swift_willThrow();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_AAF98()
{
  sub_27EF8(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSMessageCreator.createRCSMessage(with:originalItem:with:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[27] = a5;
  v6[28] = v5;
  v6[25] = a3;
  v6[26] = a4;
  v6[23] = a1;
  v6[24] = a2;
  v6[29] = *v5;
  v6[30] = type metadata accessor for RCSMessage(0);
  v6[31] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v6[32] = swift_task_alloc();
  if (qword_1290D8 != -1) {
    swift_once();
  }
  uint64_t v7 = static RCSActor.shared;
  v6[33] = static RCSActor.shared;
  return _swift_task_switch(sub_AB12C, v7, 0);
}

id sub_AB12C()
{
  uint64_t v1 = *(void **)(v0 + 192);
  sub_27F4C(*(void *)(v0 + 208), v0 + 16);
  id result = [v1 guid];
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void **)(v0 + 192);
    uint64_t v5 = sub_F7220();
    uint64_t v7 = v6;

    id v8 = [v4 guid];
    uint64_t v45 = v5;
    uint64_t v44 = v7;
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_F7220();
      uint64_t v37 = v11;
      uint64_t v38 = v10;
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v38 = 0;
    }
    uint64_t v12 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v14 = *(void *)(v0 + 216);
    uint64_t v15 = *(void **)(v0 + 200);
    swift_unknownObjectUnownedLoadStrong();
    uint64_t v16 = *(void *)(v13 + 88);
    *(void *)(v0 + 272) = v16;
    long long v17 = *(uint64_t (**)(uint64_t))(v16 + 32);
    *(void *)(v0 + 280) = *(void *)(v13 + 80);
    uint64_t v18 = v17(v14);
    uint64_t v42 = v19;
    uint64_t v43 = v18;
    uint64_t v40 = v21;
    uint64_t v41 = v20;
    swift_unknownObjectRelease();
    uint64_t v22 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    v23(v12, 1, 1, v22);
    *(void *)(v0 + 176) = 0;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
    id v24 = v15;
    if (!v15) {
      id v24 = *(id *)(v0 + 192);
    }
    uint64_t v26 = *(void **)(v0 + 248);
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v27 = *(int **)(v0 + 240);
    uint64_t v39 = *(void *)(v0 + 184);
    id v28 = v15;
    unint64_t v29 = sub_E9168((uint64_t)_swiftEmptyArrayStorage);

    uint64_t v30 = (uint64_t)v26 + v27[7];
    v23(v30, 1, 1, v22);
    uint64_t v31 = (uint64_t)v26 + v27[8];
    *(void *)(v31 + 32) = 0;
    *(_OWORD *)uint64_t v31 = 0u;
    *(_OWORD *)(v31 + 16) = 0u;
    *((unsigned char *)v26 + v27[11]) = 0;
    *(void *)((char *)v26 + v27[12]) = 0;
    sub_55B4(v0 + 16, (uint64_t)v26);
    v26[16] = v45;
    v26[17] = v44;
    v26[18] = v38;
    v26[19] = v37;
    long long v32 = (void *)((char *)v26 + v27[13]);
    *long long v32 = v43;
    v32[1] = v42;
    v32[2] = v41;
    v32[3] = v40;
    sub_5610(v25, v30, (uint64_t *)&unk_128170);
    sub_5610(v0 + 144, v31, &qword_127C38);
    *(void *)((char *)v26 + v27[9]) = v29;
    *((unsigned char *)v26 + v27[10]) = 0;
    sub_5674((uint64_t)v26, v39);
    long long v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v33;
    *long long v33 = v0;
    v33[1] = sub_AB420;
    uint64_t v34 = *(void *)(v0 + 216);
    uint64_t v36 = *(void *)(v0 + 184);
    uint64_t v35 = *(void *)(v0 + 192);
    return (id)sub_A81EC(v36, v35, v34);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_AB420(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 296) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 264);
  if (v1)
  {
    uint64_t v6 = sub_AB690;
  }
  else
  {
    *(unsigned char *)(v4 + 139) = a1 & 1;
    uint64_t v6 = sub_AB560;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_AB560()
{
  if (*(unsigned char *)(v0 + 139) != 1)
  {
    id v2 = *(id *)(v0 + 192);
    unint64_t v3 = RCSMessage.SenderInfo.description.getter();
    uint64_t v5 = v4;
    type metadata accessor for RCSMessageCreator.MessageCreationError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v6 = v2;
    v6[1] = v3;
    v6[2] = v5;
    v6[3] = 0x6000000000000000;
    swift_willThrow();
    sub_56D8(*(void *)(v0 + 184));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_AB690()
{
  sub_56D8(*(void *)(v0 + 184));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_AB710()
{
  swift_unknownObjectUnownedInit();
  return v0;
}

uint64_t type metadata accessor for RCSMessageCreator.MessageCreationError()
{
  return sub_8B108();
}

uint64_t sub_AB74C()
{
  return swift_getWitnessTable();
}

uint64_t sub_AB768()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RCSMessageCreator()
{
  return sub_8B108();
}

void *sub_AB7C4(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a4 >> 61)
  {
    case 0uLL:
    case 3uLL:
    case 5uLL:
      id v4 = result;
      goto LABEL_6;
    case 1uLL:
    case 4uLL:
      id v5 = result;
      swift_bridgeObjectRetain();
      id result = (void *)swift_errorRetain();
      break;
    case 2uLL:
LABEL_6:
      id result = (void *)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_AB884(uint64_t a1)
{
  return sub_AB894(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
}

void *sub_AB894(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a4 >> 61)
  {
    case 0uLL:
    case 3uLL:
    case 5uLL:

      goto LABEL_6;
    case 1uLL:
    case 4uLL:

      swift_bridgeObjectRelease();
      id result = (void *)swift_errorRelease();
      break;
    case 2uLL:
LABEL_6:
      id result = (void *)swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_AB954(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  sub_AB7C4(*(void **)a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t sub_AB9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  sub_AB7C4(*(void **)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  sub_AB894(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_ABA10(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  long long v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v7;
  sub_AB894(v3, v5, v4, v6);
  return a1;
}

uint64_t sub_ABA50(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 57) >> 4) | (8
                                                           * ((*(void *)(a1 + 24) >> 57) & 8 | *(void *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_ABAAC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 - 123;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)id result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_ABB04(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 61;
}

uint64_t sub_ABB10(uint64_t result)
{
  *(void *)(result + 24) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_ABB20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = *(void *)(result + 24) & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

uint64_t sub_ABB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_127FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RCSReachabilityController.delegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t RCSMessageReceiver.__allocating_init(delegate:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t RCSMessageReceiver.init(delegate:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

unint64_t RCSMessageReceiver.MessageProcessingError.errorDescription.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RCSMessage(0);
  uint64_t v5 = __chkstk_darwin(v4);
  long long v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  unint64_t v10 = (char *)&v22 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_B6B64((uint64_t)v12, (uint64_t)v10, type metadata accessor for RCSMessage);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_F78A0(41);
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000027;
    unint64_t v23 = 0x8000000000104660;
    sub_B7CE8((uint64_t)v10, (uint64_t)v7, type metadata accessor for RCSMessage);
    v14._countAndFlagsBits = sub_F7270();
  }
  else
  {
    uint64_t v15 = (uint64_t *)&v12[*(int *)(sub_551C(&qword_1282D8) + 48)];
    uint64_t v17 = *v15;
    uint64_t v16 = (void *)v15[1];
    sub_B6B64((uint64_t)v12, (uint64_t)v10, type metadata accessor for RCSMessage);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_F78A0(41);
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000023;
    unint64_t v23 = 0x8000000000104690;
    uint64_t v18 = *((void *)v10 + 16);
    uint64_t v19 = (void *)*((void *)v10 + 17);
    swift_bridgeObjectRetain();
    v24._countAndFlagsBits = v18;
    v24._object = v19;
    sub_F72E0(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 8250;
    v25._object = (void *)0xE200000000000000;
    sub_F72E0(v25);
    v14._countAndFlagsBits = v17;
    v14._object = v16;
  }
  sub_F72E0(v14);
  swift_bridgeObjectRelease();
  unint64_t v20 = v22;
  sub_288DC((uint64_t)v10, type metadata accessor for RCSMessage);
  return v20;
}

uint64_t sub_ABE88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  id v8 = objc_allocWithZone((Class)IMToSuperParserContext);
  id v9 = a1;
  id v10 = [v8 init];
  a4[1] = v10;
  [v10 reset];
  uint64_t v11 = (int *)type metadata accessor for RCSMessageReceiver.MessageProcessingContext();
  sub_B7CE8(a2, (uint64_t)a4 + v11[10], type metadata accessor for RCSMessage);

  *(void *)((char *)a4 + v11[11]) = a3;
  uint64_t result = sub_288DC(a2, type metadata accessor for RCSMessage);
  *(void *)((char *)a4 + v11[12]) = 0;
  return result;
}

void sub_ABF78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v8 = *(void **)(v5 + 8);
  id v9 = (void *)sub_F71F0();
  [v8 appendString:v9];

  if (a3)
  {
    uint64_t v10 = RCSChipList.attributes.getter();
    a3 = (void *)v10;
    if (v10)
    {
      sub_1BC40(v10);
      swift_bridgeObjectRelease();
      a3 = (void *)sub_F71A0();
      swift_bridgeObjectRelease();
    }
  }
  [v8 appendChipList:a3];

  uint64_t v11 = *(int *)(a4 + 48);
  uint64_t v12 = *(void *)(v5 + v11);
  if ((v12 & 1) == 0) {
    *(void *)(v5 + v11) = v12 | 1;
  }
}

uint64_t sub_AC054(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(int *)(a2 + 48);
  uint64_t v4 = *(void *)(v2 + v3);
  if ((v4 & 8) == 0 || ((v4 | result) & 1) == 0)
  {
    uint64_t v5 = 8;
    if (((v4 | result) & 1) == 0) {
      uint64_t v5 = 9;
    }
    *(void *)(v2 + v3) = v5 | v4;
  }
  return result;
}

uint64_t sub_AC084(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v3[19] = type metadata accessor for RCSMessage(0);
  v3[20] = swift_task_alloc();
  v3[21] = *(void *)(a2 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for RCSFile(0);
  v3[23] = v5;
  v3[24] = *(void *)(v5 - 8);
  v3[25] = swift_task_alloc();
  return _swift_task_switch(sub_AC1CC, 0, 0);
}

uint64_t sub_AC1CC()
{
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  unint64_t v4 = sub_4B470((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = *(int *)(v3 + 40);
  *(_DWORD *)(v0 + 344) = v5;
  uint64_t v6 = v2 + v5 + *(int *)(v1 + 52);
  *(void *)(v0 + 208) = *(void *)(v6 + 16);
  uint64_t v7 = *(void *)(v6 + 24);
  *(void *)(v0 + 216) = v7;
  if (v7)
  {
    swift_bridgeObjectRetain();
    id v8 = RCSRichCards.files()();
    *(void *)(v0 + 224) = v8;
    uint64_t v9 = v8[2];
    *(void *)(v0 + 232) = v9;
    if (v9)
    {
      uint64_t v10 = *(void *)(v0 + 192);
      uint64_t v11 = *(void *)(v0 + 168);
      uint64_t v13 = *(void *)(v0 + 136);
      uint64_t v12 = *(void *)(v0 + 144);
      uint64_t v14 = *(int *)(v13 + 44);
      *(_DWORD *)(v0 + 348) = v14;
      uint64_t v15 = *(void *)(v13 + 24);
      *(void *)(v0 + 240) = v15;
      *(void *)(v0 + 248) = *(void *)(v15 + 160);
      *(void *)(v0 + 256) = (v15 + 160) & 0xFFFFFFFFFFFFLL | 0x3457000000000000;
      *(void *)(v0 + 264) = sub_F74E0();
      int v16 = *(_DWORD *)(v10 + 80);
      *(_DWORD *)(v0 + 352) = v16;
      uint64_t v17 = *(void *)(v10 + 72);
      *(void *)(v0 + 280) = v4;
      *(void *)(v0 + 288) = 0;
      *(void *)(v0 + 272) = v17;
      uint64_t v18 = *(void *)(v0 + 176);
      uint64_t v19 = *(void *)(v0 + 160);
      uint64_t v20 = (uint64_t)v8 + ((v16 + 32) & ~(unint64_t)v16);
      uint64_t v21 = v12 + *(int *)(v0 + 344);
      sub_B7CE8(v20, *(void *)(v0 + 200), type metadata accessor for RCSFile);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v18, v12, v13);
      *(void *)(v0 + 296) = *(void *)(v12 + v14);
      sub_B7CE8(v21, v19, type metadata accessor for RCSMessage);
      *(void *)(v0 + 304) = sub_F74D0();
      uint64_t v23 = sub_F7470();
      return _swift_task_switch(sub_AC698, v23, v22);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v24 = objc_allocWithZone((Class)IMUrlToTransferMap);
  swift_bridgeObjectRetain();
  Swift::String v25 = (void *)sub_F71A0();
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithUrlToTransferGuids:v25];

  id v27 = [v26 dictionaryRepresentation];
  uint64_t v28 = sub_F71B0();

  uint64_t v29 = RCSRichCards.attributes.getter();
  uint64_t v30 = sub_F7220();
  uint64_t v32 = v31;
  uint64_t v33 = sub_F7220();
  if (!*(void *)(v28 + 16) || (unint64_t v35 = sub_1C9BC(v33, v34), (v36 & 1) == 0))
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_BAD8(*(void *)(v28 + 56) + 32 * v35, v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
LABEL_12:
    sub_1E944(v0 + 16, &qword_127FF8);
    sub_9DBEC(v30, v32, (_OWORD *)(v0 + 48));
    swift_bridgeObjectRelease();
    sub_1E944(v0 + 48, &qword_127FF8);
    uint64_t v38 = v29;
    goto LABEL_13;
  }
  sub_1EBC4((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 80));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1CEB8((_OWORD *)(v0 + 80), v30, v32, isUniquelyReferenced_nonNull_native);
  uint64_t v38 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v40 = *(void *)(v0 + 136);
  uint64_t v39 = *(void *)(v0 + 144);
  uint64_t v41 = *(void **)(v39 + 8);
  sub_1BC40(v38);
  swift_bridgeObjectRelease();
  uint64_t v42 = (void *)sub_F71A0();
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_B6D38(v43);
  swift_bridgeObjectRelease();
  uint64_t v44 = (void *)sub_F7400();
  swift_release();
  [v41 appendRichCards:v42 transferGuids:v44];

  uint64_t v45 = *(int *)(v40 + 48);
  uint64_t v46 = *(void *)(v39 + v45);
  if ((v46 & 1) == 0) {
    *(void *)(v39 + v45) = v46 | 1;
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v47 = *(uint64_t (**)(void))(v0 + 8);
  return v47();
}

uint64_t sub_AC698()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, void, uint64_t))v0[31];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[17];
  swift_release();
  uint64_t v6 = v1(v4, *(void *)(v5 + 16), v2);
  v0[39] = v6;
  sub_288DC(v4, type metadata accessor for RCSMessage);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[40] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_AC7A4;
  uint64_t v9 = v0[25];
  uint64_t v8 = v0[26];
  uint64_t v10 = v0[17];
  return sub_BB320(v9, v8, v3, v6, v10);
}

uint64_t sub_AC7A4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[41] = a1;
  v4[42] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)v3[39];
  if (v1)
  {
    uint64_t v7 = v4[21];
    uint64_t v6 = v4[22];
    uint64_t v8 = v4[17];

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_AD020;
  }
  else
  {
    (*(void (**)(void, void))(v4[21] + 8))(v4[22], v4[17]);

    uint64_t v9 = sub_AC938;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_AC938()
{
  uint64_t v1 = *(void **)(v0 + 328);
  if (!v1)
  {
    uint64_t v21 = *(void **)(v0 + 280);
    goto LABEL_23;
  }
  type metadata accessor for RCSFile.DispositionInformation(0);
  unint64_t v2 = sub_F6D50();
  uint64_t v4 = v3;
  id v5 = [v1 guid];
  uint64_t v6 = (void *)(v0 + 280);
  uint64_t v7 = *(void **)(v0 + 280);
  if (!v5)
  {
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_1C9BC(v2, v4);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();

      uint64_t v21 = (void *)*v6;
      goto LABEL_23;
    }
    uint64_t v7 = (void *)(v0 + 112);
    id v24 = (void *)*v6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 112) = v24;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
  uint64_t v8 = v5;
  uint64_t v9 = (void *)(v0 + 120);
  uint64_t v10 = sub_F7220();
  uint64_t v68 = v11;

  char v12 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 120) = v7;
  unint64_t v13 = sub_1C9BC(v2, v4);
  uint64_t v15 = v7[2];
  BOOL v16 = (v14 & 1) == 0;
  BOOL v17 = __OFADD__(v15, v16);
  uint64_t v18 = v15 + v16;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    LOBYTE(v8) = v14;
    if (*(void *)(*v6 + 24) < v18)
    {
      sub_415A8(v18, v12);
      uint64_t v7 = (void *)*v9;
      unint64_t v13 = sub_1C9BC(v2, v4);
      if ((v8 & 1) != (v19 & 1))
      {
        return sub_F7BA0();
      }
LABEL_14:
      uint64_t v21 = (void *)*v9;
      if (v8)
      {
LABEL_15:
        id v26 = (uint64_t *)(v21[7] + 16 * v13);
        swift_bridgeObjectRelease();
        *id v26 = v10;
        v26[1] = v68;
LABEL_21:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      goto LABEL_19;
    }
    if (v12) {
      goto LABEL_14;
    }
  }
  uint64_t v7 = (void *)(v0 + 120);
  unint64_t v27 = v13;
  sub_42C8C();
  unint64_t v13 = v27;
  uint64_t v21 = (void *)*v9;
  if (v8) {
    goto LABEL_15;
  }
LABEL_19:
  v21[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v28 = (unint64_t *)(v21[6] + 16 * v13);
  *uint64_t v28 = v2;
  v28[1] = v4;
  uint64_t v29 = (uint64_t *)(v21[7] + 16 * v13);
  *uint64_t v29 = v10;
  v29[1] = v68;
  uint64_t v30 = v21[2];
  BOOL v17 = __OFADD__(v30, 1);
  uint64_t v31 = v30 + 1;
  if (!v17)
  {
    v21[2] = v31;
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  __break(1u);
LABEL_39:
  sub_42C8C();
  uint64_t v6 = v7;
LABEL_12:
  uint64_t v21 = (void *)*v6;
  swift_bridgeObjectRelease();
  sub_F1148(v2, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_22:
  swift_bridgeObjectRelease();

LABEL_23:
  uint64_t v32 = *(void *)(v0 + 232);
  uint64_t v33 = *(void *)(v0 + 288) + 1;
  sub_288DC(*(void *)(v0 + 200), type metadata accessor for RCSFile);
  if (v33 == v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v34 = objc_allocWithZone((Class)IMUrlToTransferMap);
    swift_bridgeObjectRetain();
    unint64_t v35 = (void *)sub_F71A0();
    swift_bridgeObjectRelease();
    id v36 = [v34 initWithUrlToTransferGuids:v35];

    id v37 = [v36 dictionaryRepresentation];
    uint64_t v38 = sub_F71B0();

    uint64_t v39 = RCSRichCards.attributes.getter();
    uint64_t v40 = sub_F7220();
    uint64_t v42 = v41;
    uint64_t v43 = sub_F7220();
    if (*(void *)(v38 + 16) && (unint64_t v45 = sub_1C9BC(v43, v44), (v46 & 1) != 0))
    {
      sub_BAD8(*(void *)(v38 + 56) + 32 * v45, v0 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 40))
      {
        sub_1EBC4((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 80));
        char v47 = swift_isUniquelyReferenced_nonNull_native();
        sub_1CEB8((_OWORD *)(v0 + 80), v40, v42, v47);
        uint64_t v48 = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_33:
        uint64_t v60 = *(void *)(v0 + 136);
        uint64_t v59 = *(void *)(v0 + 144);
        uint64_t v61 = *(void **)(v59 + 8);
        sub_1BC40(v48);
        swift_bridgeObjectRelease();
        uint64_t v62 = (void *)sub_F71A0();
        swift_bridgeObjectRelease();
        uint64_t v63 = swift_bridgeObjectRetain();
        sub_B6D38(v63);
        swift_bridgeObjectRelease();
        uint64_t v64 = (void *)sub_F7400();
        swift_release();
        [v61 appendRichCards:v62 transferGuids:v64];

        uint64_t v65 = *(int *)(v60 + 48);
        uint64_t v66 = *(void *)(v59 + v65);
        if ((v66 & 1) == 0) {
          *(void *)(v59 + v65) = v66 | 1;
        }
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v67 = *(uint64_t (**)(void))(v0 + 8);
        return v67();
      }
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1E944(v0 + 16, &qword_127FF8);
    sub_9DBEC(v40, v42, (_OWORD *)(v0 + 48));
    swift_bridgeObjectRelease();
    sub_1E944(v0 + 48, &qword_127FF8);
    uint64_t v48 = v39;
    goto LABEL_33;
  }
  uint64_t v49 = *(void *)(v0 + 288) + 1;
  *(void *)(v0 + 280) = v21;
  *(void *)(v0 + 288) = v49;
  uint64_t v50 = *(int *)(v0 + 348);
  uint64_t v52 = *(void *)(v0 + 168);
  uint64_t v51 = *(void *)(v0 + 176);
  uint64_t v53 = *(void *)(v0 + 160);
  uint64_t v55 = *(void *)(v0 + 136);
  uint64_t v54 = *(void *)(v0 + 144);
  uint64_t v56 = v54 + *(int *)(v0 + 344);
  sub_B7CE8(*(void *)(v0 + 224)+ ((*(unsigned __int8 *)(v0 + 352) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 352))+ *(void *)(v0 + 272) * v49, *(void *)(v0 + 200), type metadata accessor for RCSFile);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v51, v54, v55);
  *(void *)(v0 + 296) = *(void *)(v54 + v50);
  sub_B7CE8(v56, v53, type metadata accessor for RCSMessage);
  *(void *)(v0 + 304) = sub_F74D0();
  uint64_t v58 = sub_F7470();
  return _swift_task_switch(sub_AC698, v58, v57);
}

uint64_t sub_AD020()
{
  sub_288DC(*(void *)(v0 + 200), type metadata accessor for RCSFile);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_AD0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = type metadata accessor for RCSFile(0);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = type metadata accessor for RCSMessage(0);
  v4[16] = swift_task_alloc();
  v4[17] = *(void *)(a3 - 8);
  v4[18] = swift_task_alloc();
  return _swift_task_switch(sub_AD1FC, 0, 0);
}

uint64_t sub_AD1FC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(int *)(v2 + 40);
  *(_DWORD *)(v0 + 248) = v4;
  uint64_t v5 = v3 + v4;
  uint64_t v6 = v3 + v4 + *(int *)(v1 + 52);
  uint64_t v7 = *(void *)(v6 + 24);
  *(void *)(v0 + 152) = v7;
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 128);
    *(void *)(v0 + 160) = *(void *)(v6 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v3, v2);
    *(void *)(v0 + 168) = *(void *)(v3 + *(int *)(v2 + 44));
    sub_B7CE8(v5, v10, type metadata accessor for RCSMessage);
    uint64_t v11 = *(void *)(v2 + 24);
    *(void *)(v0 + 176) = v11;
    *(void *)(v0 + 184) = *(void *)(v11 + 160);
    *(void *)(v0 + 192) = (v11 + 160) & 0xFFFFFFFFFFFFLL | 0x3457000000000000;
    sub_F74E0();
    swift_bridgeObjectRetain();
    *(void *)(v0 + 200) = sub_F74D0();
    uint64_t v13 = sub_F7470();
    return _swift_task_switch(sub_AD4D4, v13, v12);
  }
  else
  {
    type metadata accessor for RCSMessageReceiver.MessageProcessingError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v15 = v14;
    BOOL v16 = (void *)(v14 + *(int *)(sub_551C(&qword_1282D8) + 48));
    sub_B7CE8(v5, v15, type metadata accessor for RCSMessage);
    sub_F78A0(42);
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0xE000000000000000;
    v21._object = (void *)0x80000000001048B0;
    v21._countAndFlagsBits = 0xD00000000000001ALL;
    sub_F72E0(v21);
    sub_F7990();
    v22._countAndFlagsBits = 0x72742061206F7420;
    v22._object = (void *)0xEE00726566736E61;
    sub_F72E0(v22);
    uint64_t v17 = *(void *)(v0 + 24);
    *BOOL v16 = *(void *)(v0 + 16);
    v16[1] = v17;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_AD4D4()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[23];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[10];
  swift_release();
  v0[26] = *(void *)(v4 + 16);
  uint64_t v5 = v1(v3);
  v0[27] = v5;
  sub_288DC(v3, type metadata accessor for RCSMessage);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[28] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_AD5E8;
  uint64_t v7 = v0[20];
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[8];
  return sub_BB320(v9, v7, v2, v5, v8);
}

uint64_t sub_AD5E8(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[29] = a1;
  v4[30] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)v3[27];
  (*(void (**)(void, void))(v3[17] + 8))(v3[18], v3[10]);
  swift_bridgeObjectRelease();

  if (v1) {
    uint64_t v6 = sub_ADF24;
  }
  else {
    uint64_t v6 = sub_AD794;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_AD794()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = *(void **)(*(void *)(v0 + 88) + 8);
    id v4 = [*(id *)(v0 + 232) guid];
    [v3 appendFileTransferWithGUID:v4];

    if (v2)
    {
      uint64_t v5 = RCSChipList.attributes.getter();
      uint64_t v6 = (void *)v5;
      if (v5)
      {
        sub_1BC40(v5);
        swift_bridgeObjectRelease();
        uint64_t v6 = (void *)sub_F71A0();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 88);
    [v3 appendChipList:v6];

    uint64_t v15 = *(int *)(v13 + 48);
    uint64_t v16 = *(void *)(v14 + v15);
    if ((v16 & 1) == 0) {
      *(void *)(v14 + v15) = v16 | 1;
    }
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 64) + *(int *)(v17 + 20);
    uint64_t v19 = type metadata accessor for RCSFile.DispositionInformation(0);
    if (*(unsigned char *)(v18 + *(int *)(v19 + 36)) == 2 && (uint64_t v20 = (uint64_t *)(v18 + *(int *)(v19 + 40)), (v20[1] & 1) == 0))
    {
      uint64_t v41 = *v20;
      if (qword_129070 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_F70F0();
      sub_8B44(v42, (uint64_t)static Logger.rcs);
      uint64_t v43 = sub_F70D0();
      os_log_type_t v44 = sub_F7670();
      if (os_log_type_enabled(v43, v44))
      {
        unint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v45 = 134217984;
        *(void *)(v0 + 56) = v41;
        sub_F77B0();
        _os_log_impl(&dword_0, v43, v44, "RCSFile disposition is .render and has timeLength %f, marking as audio message", v45, 0xCu);
        swift_slowDealloc();
      }

      uint64_t v46 = *(void *)(v14 + v15);
      if ((v46 & 0x200000) == 0) {
        *(void *)(v14 + v15) = v46 | 0x200000;
      }
    }
    else
    {
      sub_D0CD8();
      Swift::String v21 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      if (objc_msgSend(v21, "im_isAudioMessageExtension"))
      {
        uint64_t v51 = v15;
        uint64_t v52 = v14;
        if (qword_129070 != -1) {
          swift_once();
        }
        uint64_t v23 = *(void *)(v0 + 104);
        uint64_t v22 = *(void *)(v0 + 112);
        uint64_t v24 = *(void *)(v0 + 64);
        uint64_t v25 = sub_F70F0();
        sub_8B44(v25, (uint64_t)static Logger.rcs);
        sub_B7CE8(v24, v22, type metadata accessor for RCSFile);
        sub_B7CE8(v24, v23, type metadata accessor for RCSFile);
        id v26 = v21;
        unint64_t v27 = sub_F70D0();
        os_log_type_t v28 = sub_F7670();
        BOOL v29 = os_log_type_enabled(v27, v28);
        uint64_t v30 = *(void *)(v0 + 104);
        uint64_t v31 = *(void *)(v0 + 112);
        if (v29)
        {
          uint64_t v49 = *(void *)(v0 + 104);
          uint64_t v32 = swift_slowAlloc();
          uint64_t v50 = (void *)swift_slowAlloc();
          v53[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v32 = 136315650;
          uint64_t v33 = v31 + *(int *)(v17 + 20);
          uint64_t v34 = *(void *)(v33 + 24);
          unint64_t v35 = *(void *)(v33 + 32);
          swift_bridgeObjectRetain();
          *(void *)(v0 + 32) = sub_A3FC(v34, v35, v53);
          sub_F77B0();
          swift_bridgeObjectRelease();
          sub_288DC(v31, type metadata accessor for RCSFile);
          *(_WORD *)(v32 + 12) = 2112;
          *(void *)(v0 + 40) = v26;
          id v36 = v26;
          sub_F77B0();
          *uint64_t v50 = v26;

          id v37 = v36;
          *(_WORD *)(v32 + 22) = 2080;
          uint64_t v38 = v49 + *(int *)(v17 + 20);
          uint64_t v39 = *(void *)(v38 + 8);
          unint64_t v40 = *(void *)(v38 + 16);
          swift_bridgeObjectRetain();
          *(void *)(v0 + 48) = sub_A3FC(v39, v40, v53);
          sub_F77B0();
          swift_bridgeObjectRelease();
          sub_288DC(v49, type metadata accessor for RCSFile);
          _os_log_impl(&dword_0, v27, v28, "Marking audio message based on type %s inferred ext %@ original filename %s", (uint8_t *)v32, 0x20u);
          sub_551C(&qword_128C10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_288DC(*(void *)(v0 + 112), type metadata accessor for RCSFile);

          sub_288DC(v30, type metadata accessor for RCSFile);
        }
        uint64_t v47 = *(void *)(v52 + v51);
        if ((v47 & 0x200000) == 0) {
          *(void *)(v52 + v51) = v47 | 0x200000;
        }
      }
      else
      {
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 88) + *(int *)(v0 + 248);
    type metadata accessor for RCSMessageReceiver.MessageProcessingError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v9 = v8;
    uint64_t v10 = (void *)(v8 + *(int *)(sub_551C(&qword_1282D8) + 48));
    sub_B7CE8(v7, v9, type metadata accessor for RCSMessage);
    v53[0] = 0;
    v53[1] = 0xE000000000000000;
    sub_F78A0(42);
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0xE000000000000000;
    v56._object = (void *)0x80000000001048B0;
    v56._countAndFlagsBits = 0xD00000000000001ALL;
    sub_F72E0(v56);
    sub_F7990();
    v57._countAndFlagsBits = 0x72742061206F7420;
    v57._object = (void *)0xEE00726566736E61;
    sub_F72E0(v57);
    uint64_t v11 = *(void *)(v0 + 24);
    void *v10 = *(void *)(v0 + 16);
    v10[1] = v11;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v12();
}

uint64_t sub_ADF24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_ADFB0(uint64_t a1)
{
  uint64_t v2 = *(uint64_t *)((char *)v1 + *(int *)(a1 + 48));
  uint64_t v3 = *v1;
  id v4 = v1[1];
  if ((v2 & 8) == 0)
  {
    id v5 = [v1[1] body];
    [v3 setBody:v5];
  }
  id v6 = [v4 fileTransferGUIDs];
  [v3 setFileTransferGUIDs:v6];

  [v3 setFlags:v2];
  id v7 = (id)sub_F71F0();
  [v3 setFallbackHash:v7];
}

uint64_t sub_AE0B0(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  uint64_t v4 = *v2;
  type metadata accessor for RCSFile(0);
  v3[21] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v3[22] = swift_task_alloc();
  v3[23] = type metadata accessor for RCSMessage(0);
  v3[24] = swift_task_alloc();
  v3[25] = *(void *)(v4 + 80);
  v3[26] = *(void *)(v4 + 88);
  uint64_t v5 = type metadata accessor for RCSMessageReceiver.MessageProcessingContext();
  v3[27] = v5;
  v3[28] = *(void *)(v5 - 8);
  v3[29] = swift_task_alloc();
  return _swift_task_switch(sub_AE234, 0, 0);
}

uint64_t sub_AE234()
{
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void **)(v0 + 144);
  sub_B7CE8(v3, v2, type metadata accessor for RCSMessage);
  uint64_t v6 = *(void *)(v4 + 16);
  id v7 = v5;
  swift_unknownObjectRetain();
  sub_ABE88(v7, v2, v6, v1);
  sub_27F4C(v3, v0 + 16);
  if (*(unsigned char *)(v0 + 138))
  {
    uint64_t v8 = *(void **)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 16);
    uint64_t v9 = *(void *)(v0 + 24);
    uint64_t v11 = (void *)sub_F71F0();
    [v8 setSender:v11];

    uint64_t v12 = (void *)sub_F71F0();
    [v8 setUnformattedID:v12];

    if (v10 == 7103860 && v9 == 0xE300000000000000 || (sub_F7B60() & 1) != 0)
    {
      uint64_t v13 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = *(void *)(v0 + 184);
      uint64_t v34 = *(void *)(v0 + 152);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v34 + *(int *)(v33 + 52) + 8)) {
        uint64_t v13 = (void *)sub_F71F0();
      }
      else {
        uint64_t v13 = 0;
      }
    }
    uint64_t v14 = *(void **)(v0 + 144);
    id v15 = (id)IMCountryCodeForNumber();

    [v14 setCountryCode:v15];
    sub_27FA8(v0 + 80);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 232);
    uint64_t v17 = *(int *)(*(void *)(v0 + 216) + 48);
    uint64_t v18 = *(void *)(v16 + v17);
    if ((v18 & 4) == 0) {
      *(void *)(v16 + v17) = v18 | 4;
    }
    sub_27EF8(v0 + 16);
  }
  uint64_t v19 = *(void *)(v0 + 176);
  sub_2C4C0(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 184) + 28), v19, (uint64_t *)&unk_128170);
  uint64_t v20 = type metadata accessor for RCSMessage.Content(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20) != 1)
  {
    uint64_t v32 = *(void *)(v0 + 176);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v35 = *(void *)(v0 + 168);
        uint64_t v36 = *(void *)(v32 + *(int *)(sub_551C(&qword_128218) + 48));
        *(void *)(v0 + 272) = v36;
        sub_B6B64(v32, v35, type metadata accessor for RCSFile);
        id v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 280) = v37;
        *id v37 = v0;
        v37[1] = sub_AEF04;
        uint64_t v38 = *(void *)(v0 + 216);
        uint64_t v39 = *(void *)(v0 + 168);
        return sub_AD0D0(v39, v36, v38);
      case 2u:
        uint64_t v40 = *(void *)v32;
        double v41 = *(double *)(v32 + 8);
        *(void *)(v0 + 240) = *(void *)(v32 + 24);
        uint64_t v42 = *(void *)(v32 + 32);
        *(void *)(v0 + 248) = v42;
        v77 = (uint64_t (*)(uint64_t, uint64_t, double, double))((char *)&dword_12A1F8 + dword_12A1F8);
        uint64_t v43 = (void *)swift_task_alloc();
        *(void *)(v0 + 256) = v43;
        *uint64_t v43 = v0;
        v43[1] = sub_AEC68;
        uint64_t v44 = *(void *)(v0 + 216);
        return v77(v42, v44, *(double *)&v40, v41);
      case 3u:
        uint64_t v46 = *(void *)(v0 + 224);
        uint64_t v45 = *(void *)(v0 + 232);
        uint64_t v47 = *(void *)(v0 + 216);
        uint64_t v48 = *(void *)(v0 + 152);
        type metadata accessor for RCSMessageReceiver.MessageProcessingError();
        swift_getWitnessTable();
        swift_allocError();
        uint64_t v50 = v49;
        uint64_t v51 = (void *)(v49 + *(int *)(sub_551C(&qword_1282D8) + 48));
        sub_B7CE8(v48, v50, type metadata accessor for RCSMessage);
        *uint64_t v51 = 0xD00000000000005ALL;
        v51[1] = 0x8000000000104850;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
        sub_288DC(v32, type metadata accessor for RCSMessage.Content);
        goto LABEL_13;
      case 4u:
        uint64_t v52 = *(void *)(v0 + 232);
        uint64_t v53 = *(int *)(*(void *)(v0 + 216) + 48);
        uint64_t v54 = *(void *)(v52 + v53);
        if ((v54 & 8) == 0 || ((*(unsigned char *)v32 | v54) & 1) == 0)
        {
          uint64_t v55 = 8;
          if (((*(unsigned char *)v32 | v54) & 1) == 0) {
            uint64_t v55 = 9;
          }
          *(void *)(v52 + v53) = v55 | v54;
        }
        goto LABEL_33;
      case 5u:
        uint64_t v59 = *(void *)v32;
        *(void *)(v0 + 296) = v59;
        uint64_t v60 = (void *)swift_task_alloc();
        *(void *)(v0 + 304) = v60;
        *uint64_t v60 = v0;
        v60[1] = sub_AF0FC;
        uint64_t v61 = *(void *)(v0 + 216);
        return sub_AC084(v59, v61);
      case 6u:
        uint64_t v63 = *(void *)(v0 + 224);
        uint64_t v62 = *(void *)(v0 + 232);
        uint64_t v64 = *(void *)(v0 + 216);
        uint64_t v65 = *(void *)(v0 + 152);
        swift_release();
        type metadata accessor for RCSMessageReceiver.MessageProcessingError();
        swift_getWitnessTable();
        swift_allocError();
        uint64_t v67 = v66;
        uint64_t v68 = (unint64_t *)(v66 + *(int *)(sub_551C(&qword_1282D8) + 48));
        sub_B7CE8(v65, v67, type metadata accessor for RCSMessage);
        unint64_t v69 = 0xD000000000000067;
        v70 = "Suggested reply is selected by user and sent to a chatbot, it should not appear in the incoming message";
        goto LABEL_39;
      case 7u:
        uint64_t v63 = *(void *)(v0 + 224);
        uint64_t v62 = *(void *)(v0 + 232);
        uint64_t v64 = *(void *)(v0 + 216);
        uint64_t v71 = *(void *)(v0 + 152);
        swift_release();
        type metadata accessor for RCSMessageReceiver.MessageProcessingError();
        swift_getWitnessTable();
        swift_allocError();
        uint64_t v73 = v72;
        uint64_t v68 = (unint64_t *)(v72 + *(int *)(sub_551C(&qword_1282D8) + 48));
        sub_B7CE8(v71, v73, type metadata accessor for RCSMessage);
        unint64_t v69 = 0xD000000000000068;
        v70 = "Suggested action is selected by user and sent to a chatbot, it should not appear in the incoming message";
LABEL_39:
        *uint64_t v68 = v69;
        v68[1] = (unint64_t)(v70 - 32) | 0x8000000000000000;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
        goto LABEL_13;
      case 8u:
        uint64_t v22 = *(void *)(v0 + 224);
        uint64_t v21 = *(void *)(v0 + 232);
        uint64_t v23 = *(void *)(v0 + 216);
        uint64_t v74 = *(void *)(v0 + 152);
        type metadata accessor for RCSMessageReceiver.MessageProcessingError();
        swift_getWitnessTable();
        swift_allocError();
        uint64_t v76 = v75;
        unint64_t v27 = (unint64_t *)(v75 + *(int *)(sub_551C(&qword_1282D8) + 48));
        sub_B7CE8(v74, v76, type metadata accessor for RCSMessage);
        unint64_t v28 = 0xD000000000000050;
        BOOL v29 = "Device Action is sent to a chatbot, it should not appear in the incoming message";
        goto LABEL_12;
      default:
        sub_ABF78(*(void *)v32, *(void *)(v32 + 8), *(void **)(v32 + 16), *(void *)(v0 + 216));
        swift_bridgeObjectRelease();
        swift_release();
LABEL_33:
        uint64_t v57 = *(void *)(v0 + 224);
        uint64_t v56 = *(void *)(v0 + 232);
        uint64_t v58 = *(void *)(v0 + 216);
        sub_ADFB0(v58);
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_14;
    }
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v21 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 216);
  uint64_t v24 = *(void *)(v0 + 152);
  type metadata accessor for RCSMessageReceiver.MessageProcessingError();
  swift_getWitnessTable();
  swift_allocError();
  uint64_t v26 = v25;
  unint64_t v27 = (unint64_t *)(v25 + *(int *)(sub_551C(&qword_1282D8) + 48));
  sub_B7CE8(v24, v26, type metadata accessor for RCSMessage);
  unint64_t v28 = 0xD000000000000044;
  BOOL v29 = "Cannot generate an IMMessageItem from an RCSMessage with no content.";
LABEL_12:
  *unint64_t v27 = v28;
  v27[1] = (unint64_t)(v29 - 32) | 0x8000000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
  return v30();
}

uint64_t sub_AEC68()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_AEE50;
  }
  else
  {
    uint64_t v2 = sub_AED84;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_AED84()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  sub_ADFB0(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_AEE50()
{
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_AEF04()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_AF2D4;
  }
  else {
    uint64_t v2 = sub_AF018;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_AF018()
{
  uint64_t v1 = v0[21];
  swift_release();
  sub_288DC(v1, type metadata accessor for RCSFile);
  uint64_t v3 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[27];
  sub_ADFB0(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_AF0FC()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_AF3A8;
  }
  else {
    uint64_t v2 = sub_AF210;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_AF210()
{
  swift_release();
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  sub_ADFB0(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_AF2D4()
{
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[21];
  swift_release();
  sub_288DC(v4, type metadata accessor for RCSFile);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_AF3A8()
{
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_AF45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for RCSMessage(0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (uint64_t *)((char *)&v76 - v10);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v76 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v76 - v15;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  sub_B7CE8(a1, (uint64_t)&v76 - v15, type metadata accessor for RCSMessage);
  if (v18)
  {
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = *((void *)v16 + 16);
    uint64_t v19 = *((void *)v16 + 17);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_288DC((uint64_t)v16, type metadata accessor for RCSMessage);
  if ((*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v4 + 88) + 112))(v17, v19, *(void *)(v4 + 80)))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_F6F30();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(void *)(v21 + 64);
    __chkstk_darwin(v20);
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v24 = (char *)&v76 - v23;
    sub_F6F20();
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_F70F0();
    uint64_t v26 = sub_8B44(v25, (uint64_t)static Logger.rcs);
    v81 = &v76;
    __chkstk_darwin(v26);
    unint64_t v27 = (char *)&v76 - v23;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))((char *)&v76 - v23, (char *)&v76 - v23, v20);
    sub_B7CE8(a1, (uint64_t)v8, type metadata accessor for RCSMessage);
    unint64_t v28 = sub_F70D0();
    uint64_t v29 = v20;
    os_log_type_t v30 = sub_F76B0();
    if (os_log_type_enabled(v28, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      v80 = (char *)swift_slowAlloc();
      v85 = v80;
      *(_DWORD *)uint64_t v31 = 136315394;
      os_log_t v79 = v28;
      uint64_t v32 = sub_F6F00();
      uint64_t v84 = sub_A3FC(v32, v33, (uint64_t *)&v85);
      v82 = &v76;
      sub_F77B0();
      swift_bridgeObjectRelease();
      uint64_t v34 = v29;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v29);
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v35 = *((void *)v8 + 16);
      unint64_t v36 = *((void *)v8 + 17);
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_A3FC(v35, v36, (uint64_t *)&v85);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_288DC((uint64_t)v8, type metadata accessor for RCSMessage);
      os_log_t v37 = v79;
      _os_log_impl(&dword_0, v79, v30, "Assigning a random GUID %s to RCS message %s due to database collision", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v38 = v34;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))((char *)&v76 - v23, v29);
      sub_288DC((uint64_t)v8, type metadata accessor for RCSMessage);

      uint64_t v38 = v29;
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v83, v24, v38);
  }
  else
  {
    v80 = v14;
    v81 = v11;
    uint64_t v39 = sub_F6F30();
    v82 = &v76;
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(void *)(v40 + 64);
    __chkstk_darwin(v39);
    unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v43 = (char *)&v76 - v42;
    uint64_t v44 = sub_551C(&qword_1281E8);
    __chkstk_darwin(v44 - 8);
    uint64_t v46 = (char *)&v76 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_F6EF0();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v46, 1, v39) == 1)
    {
      uint64_t v47 = sub_1E944((uint64_t)v46, &qword_1281E8);
      v82 = &v76;
      __chkstk_darwin(v47);
      sub_F6F20();
      if (qword_129070 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_F70F0();
      uint64_t v49 = sub_8B44(v48, (uint64_t)static Logger.rcs);
      __chkstk_darwin(v49);
      uint64_t v50 = (char *)&v76 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
      v80 = (char *)v39;
      v51(v50, (char *)&v76 - v42, v39);
      uint64_t v52 = (uint64_t)v81;
      sub_B7CE8(a1, (uint64_t)v81, type metadata accessor for RCSMessage);
      uint64_t v53 = sub_F70D0();
      os_log_type_t v54 = sub_F76B0();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        os_log_t v79 = (os_log_t)&v76;
        uint64_t v56 = v55;
        uint64_t v78 = (uint64_t *)swift_slowAlloc();
        v85 = (char *)v78;
        *(_DWORD *)uint64_t v56 = 136315394;
        uint64_t v57 = sub_F6F00();
        uint64_t v84 = sub_A3FC(v57, v58, (uint64_t *)&v85);
        sub_F77B0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v40 + 8))(v50, v80);
        *(_WORD *)(v56 + 12) = 2080;
        uint64_t v59 = *(void *)(v52 + 128);
        unint64_t v60 = *(void *)(v52 + 136);
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_A3FC(v59, v60, (uint64_t *)&v85);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_288DC(v52, type metadata accessor for RCSMessage);
        _os_log_impl(&dword_0, v53, v54, "Assigning a random GUID %s to RCS message %s due to non-UUID network ID", (uint8_t *)v56, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, char *))(v40 + 8))(v50, v80);
        sub_288DC(v52, type metadata accessor for RCSMessage);
      }

      return (*(uint64_t (**)(uint64_t, char *, char *))(v40 + 32))(v83, (char *)&v76 - v42, v80);
    }
    else
    {
      uint64_t v62 = *(NSObject **)(v40 + 32);
      v81 = (uint64_t *)(v40 + 32);
      os_log_t v79 = v62;
      ((void (*)(char *, char *, uint64_t))v62)((char *)&v76 - v42, v46, v39);
      if (qword_129070 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_F70F0();
      uint64_t v64 = sub_8B44(v63, (uint64_t)static Logger.rcs);
      uint64_t v78 = &v76;
      __chkstk_darwin(v64);
      uint64_t v65 = (char *)&v76 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v65, (char *)&v76 - v42, v39);
      uint64_t v66 = (uint64_t)v80;
      sub_B7CE8(a1, (uint64_t)v80, type metadata accessor for RCSMessage);
      uint64_t v67 = sub_F70D0();
      os_log_type_t v68 = sub_F76B0();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = swift_slowAlloc();
        v77 = (char *)&v76 - v42;
        uint64_t v70 = v40;
        uint64_t v71 = v69;
        uint64_t v76 = swift_slowAlloc();
        v85 = (char *)v76;
        *(_DWORD *)uint64_t v71 = 136315394;
        uint64_t v72 = sub_F6F00();
        uint64_t v84 = sub_A3FC(v72, v73, (uint64_t *)&v85);
        sub_F77B0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v39);
        uint64_t v43 = v77;
        *(_WORD *)(v71 + 12) = 2080;
        uint64_t v74 = *(void *)(v66 + 128);
        unint64_t v75 = *(void *)(v66 + 136);
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_A3FC(v74, v75, (uint64_t *)&v85);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_288DC(v66, type metadata accessor for RCSMessage);
        _os_log_impl(&dword_0, v67, v68, "Assigning GUID %s to RCS message %s as the network ID was a valid, unique UUID", (uint8_t *)v71, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v65, v39);
        sub_288DC(v66, type metadata accessor for RCSMessage);
      }

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v79)(v83, v43, v39);
    }
  }
}

uint64_t sub_AFFE8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for RCSMessage(0);
  v2[5] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_B00BC, 0, 0);
}

uint64_t sub_B00BC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  sub_551C(&qword_127C78);
  uint64_t v4 = swift_task_alloc();
  v0[8] = v4;
  sub_F6ED0();
  uint64_t v5 = sub_F6EE0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_2C4C0(v3 + *(int *)(v2 + 28), v1, (uint64_t *)&unk_128170);
  uint64_t v6 = type metadata accessor for RCSMessage.Content(0);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v1, 1, v6);
  uint64_t v8 = 0;
  if (v7 != 1)
  {
    sub_2C4C0(v0[7], v0[6], (uint64_t *)&unk_128170);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v8 = 8;
    }
    else
    {
      sub_288DC(v0[6], type metadata accessor for RCSMessage.Content);
      uint64_t v8 = 0;
    }
  }
  v0[9] = v8;
  sub_1E944(v0[7], (uint64_t *)&unk_128170);
  uint64_t v9 = sub_F6F30();
  v0[10] = v9;
  v0[11] = *(void *)(v9 - 8);
  v0[12] = swift_task_alloc();
  sub_F74E0();
  v0[13] = sub_F74D0();
  uint64_t v11 = sub_F7470();
  return _swift_task_switch(sub_B0304, v11, v10);
}

uint64_t sub_B0304()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 16);
  swift_release();
  sub_AF45C(v2, v1);
  return _swift_task_switch(sub_B0384, 0, 0);
}

uint64_t sub_B0384()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[4];
  uint64_t v25 = v0[5];
  uint64_t v7 = v0[2];
  uint64_t v8 = sub_F6F00();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  id v11 = objc_allocWithZone((Class)IMMessageItem);
  id v12 = sub_B1C2C(0, 0, v5, 0, 0, (uint64_t)_swiftEmptyArrayStorage, v4, 0, v8, v10, 0, 0);
  v0[14] = v12;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (void *)sub_F71F0();
  [v12 setFallbackHash:v13];

  uint64_t v14 = *(void *)(v7 + *(int *)(v6 + 52) + 8);
  sub_B7CE8(v7, v25, type metadata accessor for RCSMessage);
  uint64_t v15 = v0[5];
  if (v14)
  {
    swift_bridgeObjectRetain();
    id v16 = v12;
    sub_288DC(v15, type metadata accessor for RCSMessage);
LABEL_4:
    uint64_t v19 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v17 = *(void *)(v15 + *(int *)(v6 + 52) + 24);
  swift_bridgeObjectRetain();
  id v18 = v12;
  sub_288DC(v15, type metadata accessor for RCSMessage);
  if (v17) {
    goto LABEL_4;
  }
  uint64_t v19 = 0;
LABEL_5:
  uint64_t v20 = v0[4];
  uint64_t v21 = v0[2];
  [v12 setDestinationCallerID:v19];

  if (*(unsigned char *)(v21 + *(int *)(v20 + 40)) == 1) {
    [v12 setBalloonBundleID:IMBalloonBundleIdentifierChatBot];
  }
  uint64_t v22 = (void *)swift_task_alloc();
  v0[15] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_B0600;
  uint64_t v23 = v0[2];
  return sub_AE0B0((uint64_t)v12, v23);
}

uint64_t sub_B0600()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_B0764, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(uint64_t))v2[1];
    uint64_t v4 = v2[14];
    return v3(v4);
  }
}

uint64_t sub_B0764()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSMessageReceiver.process(rcsMessage:)(uint64_t a1)
{
  v2[26] = a1;
  v2[27] = v1;
  uint64_t v3 = *v1;
  v2[28] = *(void *)(*v1 + 88);
  v2[29] = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[30] = AssociatedTypeWitness;
  uint64_t v5 = sub_F7770();
  v2[31] = v5;
  v2[32] = *(void *)(v5 - 8);
  v2[33] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v2[34] = swift_task_alloc();
  v2[35] = *(void *)(AssociatedTypeWitness - 8);
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  return _swift_task_switch(sub_B09AC, 0, 0);
}

uint64_t sub_B09AC()
{
  uint64_t v1 = v0[28];
  v0[40] = *(void *)(v0[27] + 16);
  v0[41] = *(void *)(v1 + 168);
  v0[42] = (v1 + 168) & 0xFFFFFFFFFFFFLL | 0xC96A000000000000;
  v0[43] = sub_F74E0();
  v0[44] = sub_F74D0();
  uint64_t v3 = sub_F7470();
  return _swift_task_switch(sub_B0A5C, v3, v2);
}

uint64_t sub_B0A5C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 208);
  swift_release();
  *(unsigned char *)(v0 + 512) = v1(v4, v2, v3) & 1;
  return _swift_task_switch(sub_B0AFC, 0, 0);
}

uint64_t sub_B0AFC()
{
  if (*(unsigned char *)(v0 + 512) == 1)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_F70F0();
    sub_8B44(v1, (uint64_t)static Logger.rcs);
    uint64_t v2 = sub_F70D0();
    os_log_type_t v3 = sub_F7690();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_0, v2, v3, "Dropping message because the sender is blocked.", v4, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 208);
  uint64_t v9 = type metadata accessor for RCSMessage(0);
  *(void *)(v0 + 360) = v9;
  sub_2C4C0(v8 + *(int *)(v9 + 28), v7, (uint64_t *)&unk_128170);
  uint64_t v10 = type metadata accessor for RCSMessage.Content(0);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10);
  id v12 = *(long long **)(v0 + 272);
  if (v11 == 1)
  {
    sub_1E944(*(void *)(v0 + 272), (uint64_t *)&unk_128170);
    goto LABEL_14;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_288DC((uint64_t)v12, type metadata accessor for RCSMessage.Content);
LABEL_14:
    sub_2C4C0(*(void *)(v0 + 208) + *(int *)(v9 + 32), v0 + 168, &qword_127C38);
    uint64_t v23 = *(void *)(v0 + 224);
    if (*(void *)(v0 + 192))
    {
      sub_1E87C((long long *)(v0 + 168), v0 + 128);
      *(void *)(v0 + 400) = *(void *)(v23 + 128);
      *(void *)(v0 + 408) = (v23 + 128) & 0xFFFFFFFFFFFFLL | 0xB1B7000000000000;
      *(void *)(v0 + 416) = sub_F74D0();
      uint64_t v19 = sub_F7470();
      uint64_t v21 = v24;
      uint64_t v22 = sub_B1030;
    }
    else
    {
      sub_1E944(v0 + 168, &qword_127C38);
      *(void *)(v0 + 424) = *(void *)(v23 + 136);
      *(void *)(v0 + 432) = (v23 + 136) & 0xFFFFFFFFFFFFLL | 0x6396000000000000;
      *(void *)(v0 + 440) = sub_F74D0();
      uint64_t v19 = sub_F7470();
      uint64_t v21 = v25;
      uint64_t v22 = sub_B1304;
    }
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v0 + 224);
  long long v14 = *v12;
  long long v15 = v12[2];
  *(_OWORD *)(v0 + 32) = v12[1];
  *(_OWORD *)(v0 + 48) = v15;
  *(_OWORD *)(v0 + 16) = v14;
  long long v16 = v12[3];
  long long v17 = v12[4];
  long long v18 = v12[6];
  *(_OWORD *)(v0 + 96) = v12[5];
  *(_OWORD *)(v0 + 112) = v18;
  *(_OWORD *)(v0 + 64) = v16;
  *(_OWORD *)(v0 + 80) = v17;
  *(void *)(v0 + 368) = *(void *)(v13 + 120);
  *(void *)(v0 + 376) = (v13 + 120) & 0xFFFFFFFFFFFFLL | 0x56C3000000000000;
  *(void *)(v0 + 384) = sub_F74D0();
  uint64_t v19 = sub_F7470();
  uint64_t v21 = v20;
  uint64_t v22 = sub_B0E94;
LABEL_17:
  return _swift_task_switch(v22, v19, v21);
}

uint64_t sub_B0E94()
{
  uint64_t v1 = (void (*)(uint64_t, void *, uint64_t, uint64_t))v0[46];
  uint64_t v3 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[26];
  swift_release();
  v1(v4, v0 + 2, v2, v3);
  v0[49] = 0;
  (*(void (**)(void, void))(v0[35] + 8))(v0[38], v0[30]);
  return _swift_task_switch(sub_B0F84, 0, 0);
}

uint64_t sub_B0F84()
{
  sub_1E8E8(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_B1030()
{
  uint64_t v1 = (void (*)(void *, uint64_t, uint64_t))v0[50];
  uint64_t v3 = v0[28];
  uint64_t v2 = v0[29];
  swift_release();
  v1(v0 + 16, v2, v3);
  return _swift_task_switch(sub_B10D8, 0, 0);
}

uint64_t sub_B10D8()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[30];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v4 = v0[26];
    (*(void (**)(uint64_t, void))(v0[32] + 8))(v2, v0[31]);
    type metadata accessor for RCSMessageReceiver.MessageProcessingError();
    swift_getWitnessTable();
    swift_allocError();
    sub_B7CE8(v4, v5, type metadata accessor for RCSMessage);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_6BEC((uint64_t)(v0 + 16));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = v0[39];
    sub_6BEC((uint64_t)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v8, v2, v3);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[57] = v9;
    void *v9 = v0;
    v9[1] = sub_B147C;
    uint64_t v10 = v0[26];
    return sub_AFFE8(v10);
  }
}

uint64_t sub_B1304()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[53];
  uint64_t v3 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[26];
  swift_release();
  v1(v4, v2, v3);
  v0[56] = 0;
  return _swift_task_switch(sub_B13C8, 0, 0);
}

uint64_t sub_B13C8()
{
  (*(void (**)(void, void, void))(v0[35] + 32))(v0[39], v0[37], v0[30]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[57] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_B147C;
  uint64_t v2 = v0[26];
  return sub_AFFE8(v2);
}

uint64_t sub_B147C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 464) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_B1AFC, 0, 0);
  }
  else
  {
    uint64_t v6 = v4[28];
    v4[59] = a1;
    long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 176)
                                                                                       + **(int **)(v6 + 176));
    uint64_t v7 = (void *)swift_task_alloc();
    v4[60] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_B166C;
    uint64_t v8 = v4[39];
    uint64_t v9 = v4[36];
    uint64_t v11 = v4[28];
    uint64_t v10 = v4[29];
    uint64_t v12 = v4[26];
    return v14(v9, a1, v12, v8, v10, v11);
  }
}

uint64_t sub_B166C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_B1768, 0, 0);
}

uint64_t sub_B1768()
{
  uint64_t v1 = *(void *)(v0 + 224);
  *(unsigned char *)(v0 + 513) = *(unsigned char *)(*(void *)(v0 + 208) + *(int *)(*(void *)(v0 + 360) + 44));
  *(void *)(v0 + 488) = *(void *)(v1 + 16);
  *(void *)(v0 + 496) = (v1 + 16) & 0xFFFFFFFFFFFFLL | 0x9197000000000000;
  *(void *)(v0 + 504) = sub_F74D0();
  uint64_t v3 = sub_F7470();
  return _swift_task_switch(sub_B1818, v3, v2);
}

uint64_t sub_B1818()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 488);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 513);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  swift_release();
  v1(v3, v4, v2, v5, v6);
  return _swift_task_switch(sub_B18C8, 0, 0);
}

uint64_t sub_B18C8()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 240);

  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v5(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_B19AC()
{
  sub_1E8E8(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_B1A58()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_B1AFC()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[39], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t type metadata accessor for RCSMessageReceiver.MessageProcessingError()
{
  return sub_8B108();
}

uint64_t RCSMessageReceiver.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RCSMessageReceiver.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

id sub_B1C2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  if (a2)
  {
    uint64_t v19 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v20 = sub_F6EE0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(a3, 1, v20) != 1)
  {
    uint64_t v22 = (void *)sub_F6E60();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v20);
  }
  if (a5)
  {
    uint64_t v23 = (void *)sub_F71A0();
    swift_bridgeObjectRelease();
    if (a6) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v23 = 0;
    if (a6)
    {
LABEL_8:
      uint64_t v24 = (void *)sub_F7400();
      swift_bridgeObjectRelease();
      uint64_t v25 = a10;
      if (a8) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  uint64_t v24 = 0;
  uint64_t v25 = a10;
  if (a8)
  {
LABEL_9:
    uint64_t v26 = (void *)sub_F6D20();
    swift_errorRelease();
    uint64_t v27 = a12;
    if (v25) {
      goto LABEL_10;
    }
LABEL_15:
    unint64_t v28 = 0;
    if (v27) {
      goto LABEL_11;
    }
LABEL_16:
    uint64_t v29 = 0;
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v26 = 0;
  uint64_t v27 = a12;
  if (!v25) {
    goto LABEL_15;
  }
LABEL_10:
  unint64_t v28 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  if (!v27) {
    goto LABEL_16;
  }
LABEL_11:
  uint64_t v29 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
LABEL_17:
  id v30 = [v13 initWithSender:v19 time:v22 body:a4 attributes:v23 fileTransferGUIDs:v24 flags:a7 error:v26 guid:v28 threadIdentifier:v29];

  return v30;
}

uint64_t sub_B1E78()
{
  return swift_getWitnessTable();
}

uint64_t sub_B1E94()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RCSMessageReceiver()
{
  return sub_8B108();
}

uint64_t sub_B1EF0()
{
  uint64_t result = type metadata accessor for RCSMessage(319);
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_B1F98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    char v7 = *((unsigned char *)a2 + 122);
    if (EnumCaseMultiPayload == 1)
    {
      if (*((unsigned char *)a2 + 122))
      {
        uint64_t v8 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v8;
        uint64_t v9 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v9;
        uint64_t v10 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v10;
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        char v11 = *((unsigned char *)a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v11)
        {
          long long v12 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 88) = v12;
          (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 64, (uint64_t)(a2 + 8));
        }
        else
        {
          uint64_t v23 = a2[9];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = v23;
          uint64_t v24 = a2[11];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = v24;
          uint64_t v25 = a2[13];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = v25;
          *(void *)(a1 + 112) = a2[14];
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v11;
      }
      else
      {
        char v19 = *((unsigned char *)a2 + 57);
        if (v19)
        {
          long long v20 = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 24) = v20;
          (**(void (***)(uint64_t, uint64_t *))(v20 - 8))(a1, a2);
        }
        else
        {
          uint64_t v29 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v29;
          uint64_t v30 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v30;
          uint64_t v31 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v31;
          *(void *)(a1 + 48) = a2[6];
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v19;
      }
      *(unsigned char *)(a1 + 122) = v7;
      uint64_t v32 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v32;
      uint64_t v33 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v33;
      uint64_t v34 = (int *)type metadata accessor for RCSMessage(0);
      uint64_t v35 = v34[7];
      unint64_t v36 = (void *)(a1 + v35);
      os_log_t v37 = (uint64_t *)((char *)a2 + v35);
      uint64_t v38 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48);
      uint64_t v41 = v38;
      swift_bridgeObjectRetain();
      unint64_t v42 = v37;
      swift_bridgeObjectRetain();
      if (v40(v37, 1, v41))
      {
        uint64_t v43 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        uint64_t v177 = v39;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v44 = v37[1];
            uint64_t v45 = v36;
            *unint64_t v36 = *v37;
            v36[1] = v44;
            v36[2] = v37[2];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_37;
          case 1u:
            uint64_t v175 = v41;
            uint64_t v62 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            uint64_t v63 = *(void *)(v62 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v63 + 48))(v42, 1, v62))
            {
              uint64_t v64 = sub_551C(&qword_1283F0);
              uint64_t v65 = v36;
              memcpy(v36, v42, *(void *)(*(void *)(v64 - 8) + 64));
              uint64_t v66 = v42;
            }
            else
            {
              uint64_t v65 = v36;
              *(_OWORD *)unint64_t v36 = *(_OWORD *)v42;
              v36[2] = v42[2];
              uint64_t v88 = *(int *)(v62 + 24);
              v168 = (char *)v42 + v88;
              v171 = (char *)v36 + v88;
              uint64_t v66 = v42;
              uint64_t v89 = sub_F6DC0();
              v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
              swift_bridgeObjectRetain();
              v162(v171, v168, v89);
              uint64_t v90 = *(int *)(v62 + 28);
              v91 = (char *)v36 + v90;
              v92 = (char *)v66 + v90;
              uint64_t v93 = sub_F6EE0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v36, 0, 1, v62);
            }
            v173 = v66;
            uint64_t v94 = *(int *)(type metadata accessor for RCSFile(0) + 20);
            v95 = (char *)v65 + v94;
            v96 = (char *)v66 + v94;
            *(_OWORD *)v95 = *(_OWORD *)((char *)v66 + v94);
            uint64_t v98 = *(void *)((char *)v66 + v94 + 16);
            uint64_t v97 = *(void *)((char *)v66 + v94 + 24);
            *((void *)v95 + 2) = v98;
            *((void *)v95 + 3) = v97;
            *((void *)v95 + 4) = *((void *)v96 + 4);
            v99 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v100 = v99[7];
            v163 = &v96[v100];
            v165 = &v95[v100];
            uint64_t v161 = sub_F6DC0();
            v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v101(v165, v163, v161);
            uint64_t v45 = v36;
            uint64_t v102 = v99[8];
            v103 = &v95[v102];
            v104 = &v96[v102];
            uint64_t v105 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
            v95[v99[9]] = v96[v99[9]];
            uint64_t v106 = v99[10];
            v107 = &v95[v106];
            v108 = &v96[v106];
            v107[8] = v108[8];
            *(void *)v107 = *(void *)v108;
            uint64_t v109 = sub_551C(&qword_128218);
            *(void *)((char *)v45 + *(int *)(v109 + 48)) = *(void *)((char *)v173 + *(int *)(v109 + 48));
            swift_retain();
            uint64_t v41 = v175;
            goto LABEL_50;
          case 2u:
            uint64_t v45 = v36;
            *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
            uint64_t v67 = v37[3];
            v36[2] = v37[2];
            v36[3] = v67;
            v36[4] = v37[4];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_37;
          case 3u:
            uint64_t v68 = v41;
            long long v69 = *(_OWORD *)(v37 + 3);
            uint64_t v45 = v36;
            *(_OWORD *)(v36 + 3) = v69;
            (**(void (***)(void *, void *))(v69 - 8))(v36, v37);
            uint64_t v70 = v37[6];
            v36[5] = v37[5];
            v36[6] = v70;
            uint64_t v71 = v37;
            v45[7] = v37[7];
            uint64_t v72 = v37[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v72)
            {
              v45[8] = v37[8];
              v45[9] = v72;
              uint64_t v74 = v37[10];
              unint64_t v73 = v37[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v74, v73);
              v45[10] = v74;
              v45[11] = v73;
              uint64_t v75 = v71[13];
              v45[12] = v71[12];
              v45[13] = v75;
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v110 = *((_OWORD *)v37 + 5);
              *((_OWORD *)v45 + 4) = *((_OWORD *)v37 + 4);
              *((_OWORD *)v45 + 5) = v110;
              *((_OWORD *)v45 + 6) = *((_OWORD *)v37 + 6);
            }
            uint64_t v41 = v68;
LABEL_50:
            swift_storeEnumTagMultiPayload();
            uint64_t v39 = v177;
            break;
          case 5u:
          case 6u:
          case 7u:
            uint64_t v45 = v36;
            *unint64_t v36 = *v37;
            swift_retain();
LABEL_37:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v45 = v36;
            memcpy(v36, v37, *(void *)(v39 + 64));
            break;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v45, 0, 1, v41);
      }
      uint64_t v111 = v34[8];
      uint64_t v112 = a1 + v111;
      uint64_t v113 = (uint64_t)a2 + v111;
      uint64_t v114 = *(uint64_t *)((char *)a2 + v111 + 24);
      if (v114)
      {
        uint64_t v115 = *(void *)(v113 + 32);
        *(void *)(v112 + 24) = v114;
        *(void *)(v112 + 32) = v115;
        (**(void (***)(void))(v114 - 8))();
      }
      else
      {
        long long v116 = *(_OWORD *)(v113 + 16);
        *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
        *(_OWORD *)(v112 + 16) = v116;
        *(void *)(v112 + 32) = *(void *)(v113 + 32);
      }
      *(void *)(a1 + v34[9]) = *(uint64_t *)((char *)a2 + v34[9]);
      *(unsigned char *)(a1 + v34[10]) = *((unsigned char *)a2 + v34[10]);
      *(unsigned char *)(a1 + v34[11]) = *((unsigned char *)a2 + v34[11]);
      *(void *)(a1 + v34[12]) = *(uint64_t *)((char *)a2 + v34[12]);
      uint64_t v117 = v34[13];
      v118 = (void *)(a1 + v117);
      v119 = (uint64_t *)((char *)a2 + v117);
      uint64_t v120 = v119[1];
      void *v118 = *v119;
      v118[1] = v120;
      uint64_t v121 = v119[3];
      v118[2] = v119[2];
      v118[3] = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (*((unsigned char *)a2 + 122))
      {
        uint64_t v14 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v14;
        uint64_t v15 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v15;
        uint64_t v16 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v16;
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        char v17 = *((unsigned char *)a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17)
        {
          long long v18 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 88) = v18;
          (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 64, (uint64_t)(a2 + 8));
        }
        else
        {
          uint64_t v26 = a2[9];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = v26;
          uint64_t v27 = a2[11];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = v27;
          uint64_t v28 = a2[13];
          *(void *)(a1 + 96) = a2[12];
          *(void *)(a1 + 104) = v28;
          *(void *)(a1 + 112) = a2[14];
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v17;
      }
      else
      {
        char v21 = *((unsigned char *)a2 + 57);
        if (v21)
        {
          long long v22 = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 24) = v22;
          (**(void (***)(uint64_t, uint64_t *))(v22 - 8))(a1, a2);
        }
        else
        {
          uint64_t v46 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v46;
          uint64_t v47 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v47;
          uint64_t v48 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v48;
          *(void *)(a1 + 48) = a2[6];
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v21;
      }
      *(unsigned char *)(a1 + 122) = v7;
      uint64_t v49 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v49;
      uint64_t v50 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v50;
      uint64_t v51 = (int *)type metadata accessor for RCSMessage(0);
      uint64_t v52 = v51[7];
      uint64_t v53 = (void *)(a1 + v52);
      os_log_type_t v54 = (uint64_t *)((char *)a2 + v52);
      uint64_t v55 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v56 = *(void *)(v55 - 8);
      uint64_t v57 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48);
      uint64_t v58 = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57(v54, 1, v58))
      {
        uint64_t v59 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v53, v54, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        uint64_t v178 = v56;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v60 = v54[1];
            uint64_t v61 = v53;
            *uint64_t v53 = *v54;
            v53[1] = v60;
            v53[2] = v54[2];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_58;
          case 1u:
            uint64_t v176 = v58;
            uint64_t v76 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            uint64_t v77 = *(void *)(v76 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v77 + 48))(v54, 1, v76))
            {
              uint64_t v78 = sub_551C(&qword_1283F0);
              os_log_t v79 = v53;
              memcpy(v53, v54, *(void *)(*(void *)(v78 - 8) + 64));
            }
            else
            {
              uint64_t v169 = v77;
              os_log_t v79 = v53;
              *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
              v53[2] = v54[2];
              uint64_t v122 = *(int *)(v76 + 24);
              v172 = (char *)v54 + v122;
              v174 = (char *)v53 + v122;
              uint64_t v123 = sub_F6DC0();
              v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
              swift_bridgeObjectRetain();
              v166(v174, v172, v123);
              uint64_t v124 = *(int *)(v76 + 28);
              v125 = (char *)v53 + v124;
              v126 = (char *)v54 + v124;
              uint64_t v127 = sub_F6EE0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v53, 0, 1, v76);
            }
            uint64_t v128 = *(int *)(type metadata accessor for RCSFile(0) + 20);
            v129 = (char *)v79 + v128;
            v130 = (char *)v54 + v128;
            *(_OWORD *)v129 = *(_OWORD *)((char *)v54 + v128);
            uint64_t v132 = *(void *)((char *)v54 + v128 + 16);
            uint64_t v131 = *(void *)((char *)v54 + v128 + 24);
            *((void *)v129 + 2) = v132;
            *((void *)v129 + 3) = v131;
            *((void *)v129 + 4) = *((void *)v130 + 4);
            v133 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v134 = v133[7];
            v167 = &v130[v134];
            v170 = &v129[v134];
            uint64_t v164 = sub_F6DC0();
            v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v135(v170, v167, v164);
            uint64_t v61 = v53;
            uint64_t v136 = v133[8];
            v137 = &v129[v136];
            v138 = &v130[v136];
            uint64_t v139 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
            v129[v133[9]] = v130[v133[9]];
            uint64_t v140 = v133[10];
            v141 = &v129[v140];
            v142 = &v130[v140];
            v141[8] = v142[8];
            *(void *)v141 = *(void *)v142;
            uint64_t v143 = sub_551C(&qword_128218);
            *(void *)((char *)v61 + *(int *)(v143 + 48)) = *(void *)((char *)v54 + *(int *)(v143 + 48));
            swift_retain();
            uint64_t v58 = v176;
            goto LABEL_58;
          case 2u:
            uint64_t v61 = v53;
            *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
            uint64_t v80 = v54[3];
            v53[2] = v54[2];
            uint64_t v53[3] = v80;
            v53[4] = v54[4];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_58;
          case 3u:
            uint64_t v81 = v58;
            long long v82 = *(_OWORD *)(v54 + 3);
            uint64_t v61 = v53;
            *(_OWORD *)(v53 + 3) = v82;
            (**(void (***)(void *, void *))(v82 - 8))(v53, v54);
            uint64_t v83 = v54[6];
            v53[5] = v54[5];
            v53[6] = v83;
            v53[7] = v54[7];
            uint64_t v84 = v54[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v84)
            {
              v53[8] = v54[8];
              v53[9] = v84;
              uint64_t v86 = v54[10];
              unint64_t v85 = v54[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v86, v85);
              v61[10] = v86;
              v61[11] = v85;
              uint64_t v87 = v54[13];
              v61[12] = v54[12];
              v61[13] = v87;
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v160 = *((_OWORD *)v54 + 5);
              *((_OWORD *)v53 + 4) = *((_OWORD *)v54 + 4);
              *((_OWORD *)v53 + 5) = v160;
              *((_OWORD *)v53 + 6) = *((_OWORD *)v54 + 6);
            }
            uint64_t v58 = v81;
            swift_storeEnumTagMultiPayload();
            break;
          case 5u:
          case 6u:
          case 7u:
            uint64_t v61 = v53;
            *uint64_t v53 = *v54;
            swift_retain();
LABEL_58:
            swift_storeEnumTagMultiPayload();
            uint64_t v56 = v178;
            break;
          default:
            uint64_t v61 = v53;
            memcpy(v53, v54, *(void *)(v56 + 64));
            break;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v61, 0, 1, v58);
      }
      uint64_t v144 = v51[8];
      uint64_t v145 = a1 + v144;
      uint64_t v146 = (uint64_t)a2 + v144;
      uint64_t v147 = *(uint64_t *)((char *)a2 + v144 + 24);
      if (v147)
      {
        uint64_t v148 = *(void *)(v146 + 32);
        *(void *)(v145 + 24) = v147;
        *(void *)(v145 + 32) = v148;
        (**(void (***)(void))(v147 - 8))();
      }
      else
      {
        long long v149 = *(_OWORD *)(v146 + 16);
        *(_OWORD *)uint64_t v145 = *(_OWORD *)v146;
        *(_OWORD *)(v145 + 16) = v149;
        *(void *)(v145 + 32) = *(void *)(v146 + 32);
      }
      *(void *)(a1 + v51[9]) = *(uint64_t *)((char *)a2 + v51[9]);
      *(unsigned char *)(a1 + v51[10]) = *((unsigned char *)a2 + v51[10]);
      *(unsigned char *)(a1 + v51[11]) = *((unsigned char *)a2 + v51[11]);
      *(void *)(a1 + v51[12]) = *(uint64_t *)((char *)a2 + v51[12]);
      uint64_t v150 = v51[13];
      v151 = (void *)(a1 + v150);
      v152 = (uint64_t *)((char *)a2 + v150);
      uint64_t v153 = v152[1];
      void *v151 = *v152;
      v151[1] = v153;
      uint64_t v154 = v152[3];
      v151[2] = v152[2];
      v151[3] = v154;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v155 = *(int *)(sub_551C(&qword_1282D8) + 48);
      v156 = (void *)(a1 + v155);
      v157 = (uint64_t *)((char *)a2 + v155);
      uint64_t v158 = v157[1];
      void *v156 = *v157;
      v156[1] = v158;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_B30AC(unsigned char *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (a1[122])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[121])
      {
        uint64_t v2 = (uint64_t)(a1 + 64);
LABEL_10:
        sub_6BEC(v2);
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = type metadata accessor for RCSMessage(0);
        int v5 = &a1[*(int *)(v4 + 28)];
        uint64_t v6 = type metadata accessor for RCSMessage.Content(0);
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 2u:
              swift_bridgeObjectRelease();
              goto LABEL_26;
            case 1u:
              uint64_t v10 = type metadata accessor for RCSFile.ThumbnailInformation(0);
              if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10))
              {
                swift_bridgeObjectRelease();
                char v11 = (char *)v5 + *(int *)(v10 + 24);
                uint64_t v12 = sub_F6DC0();
                (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
                uint64_t v13 = (char *)v5 + *(int *)(v10 + 28);
                uint64_t v14 = sub_F6EE0();
                (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
              }
              uint64_t v15 = (char *)v5 + *(int *)(type metadata accessor for RCSFile(0) + 20);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v16 = type metadata accessor for RCSFile.DispositionInformation(0);
              char v17 = &v15[*(int *)(v16 + 28)];
              uint64_t v18 = sub_F6DC0();
              (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
              char v19 = &v15[*(int *)(v16 + 32)];
              uint64_t v20 = sub_F6EE0();
              (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
              sub_551C(&qword_128218);
              goto LABEL_26;
            case 3u:
              sub_6BEC((uint64_t)v5);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v5[9])
              {
                swift_bridgeObjectRelease();
                sub_2852C(v5[10], v5[11]);
                swift_bridgeObjectRelease();
              }
              break;
            case 5u:
            case 6u:
            case 7u:
LABEL_26:
              swift_release();
              break;
            default:
              break;
          }
        }
        uint64_t v21 = (uint64_t)&a1[*(int *)(v4 + 32)];
        if (*(void *)(v21 + 24)) {
          sub_6BEC(v21);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    else if (a1[57])
    {
      uint64_t v2 = (uint64_t)a1;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if ((a1[122] & 1) == 0)
  {
    if (a1[57])
    {
      uint64_t v3 = (uint64_t)a1;
      goto LABEL_13;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a1[121] & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v3 = (uint64_t)(a1 + 64);
LABEL_13:
  sub_6BEC(v3);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for RCSMessage(0);
  uint64_t v8 = &a1[*(int *)(v7 + 28)];
  uint64_t v9 = type metadata accessor for RCSMessage.Content(0);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      case 1u:
        uint64_t v22 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v8, 1, v22))
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = (char *)v8 + *(int *)(v22 + 24);
          uint64_t v24 = sub_F6DC0();
          (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
          uint64_t v25 = (char *)v8 + *(int *)(v22 + 28);
          uint64_t v26 = sub_F6EE0();
          (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
        }
        uint64_t v27 = (char *)v8 + *(int *)(type metadata accessor for RCSFile(0) + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v29 = &v27[*(int *)(v28 + 28)];
        uint64_t v30 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
        uint64_t v31 = &v27[*(int *)(v28 + 32)];
        uint64_t v32 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
        sub_551C(&qword_128218);
        goto LABEL_36;
      case 3u:
        sub_6BEC((uint64_t)v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v8[9])
        {
          swift_bridgeObjectRelease();
          sub_2852C(v8[10], v8[11]);
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
      case 6u:
      case 7u:
LABEL_36:
        swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v33 = (uint64_t)&a1[*(int *)(v7 + 32)];
  if (*(void *)(v33 + 24)) {
    sub_6BEC(v33);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_551C(&qword_1282D8);
LABEL_40:

  return swift_bridgeObjectRelease();
}

uint64_t sub_B3810(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  char v5 = *(unsigned char *)(a2 + 122);
  if (EnumCaseMultiPayload == 1)
  {
    if (*(unsigned char *)(a2 + 122))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      char v9 = *(unsigned char *)(a2 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9)
      {
        long long v10 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 88) = v10;
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 64, a2 + 64);
      }
      else
      {
        uint64_t v20 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v20;
        uint64_t v21 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v21;
        uint64_t v22 = *(void *)(a2 + 104);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = v22;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 121) = v9;
    }
    else
    {
      char v16 = *(unsigned char *)(a2 + 57);
      if (v16)
      {
        long long v17 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v17;
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1, a2);
      }
      else
      {
        uint64_t v26 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v26;
        uint64_t v27 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v27;
        uint64_t v28 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v28;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 57) = v16;
    }
    *(unsigned char *)(a1 + 122) = v5;
    uint64_t v29 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v29;
    uint64_t v30 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v30;
    uint64_t v31 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v32 = v31[7];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (void *)(a2 + v32);
    uint64_t v35 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v36 = *(void *)(v35 - 8);
    os_log_t v37 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v38 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v34, 1, v38))
    {
      uint64_t v39 = sub_551C((uint64_t *)&unk_128170);
      memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v171 = v36;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v40 = v34[1];
          uint64_t v41 = v33;
          *uint64_t v33 = *v34;
          v33[1] = v40;
          v33[2] = v34[2];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_44;
        case 1u:
          uint64_t v167 = v38;
          uint64_t v58 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v59 = *(void *)(v58 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v59 + 48))(v34, 1, v58))
          {
            uint64_t v60 = sub_551C(&qword_1283F0);
            uint64_t v61 = v33;
            memcpy(v33, v34, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            uint64_t v159 = v59;
            uint64_t v61 = v33;
            *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
            v33[2] = v34[2];
            uint64_t v80 = *(int *)(v58 + 24);
            v163 = (char *)v34 + v80;
            v165 = (char *)v33 + v80;
            uint64_t v81 = sub_F6DC0();
            uint64_t v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
            swift_bridgeObjectRetain();
            v155(v165, v163, v81);
            uint64_t v82 = *(int *)(v58 + 28);
            uint64_t v83 = (char *)v33 + v82;
            uint64_t v84 = (char *)v34 + v82;
            uint64_t v85 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(v33, 0, 1, v58);
          }
          uint64_t v86 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v87 = (char *)v61 + v86;
          uint64_t v88 = (char *)v34 + v86;
          *(_OWORD *)uint64_t v87 = *(_OWORD *)((char *)v34 + v86);
          uint64_t v90 = *(void *)((char *)v34 + v86 + 16);
          uint64_t v89 = *(void *)((char *)v34 + v86 + 24);
          *((void *)v87 + 2) = v90;
          *((void *)v87 + 3) = v89;
          *((void *)v87 + 4) = *((void *)v88 + 4);
          v91 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v92 = v91[7];
          v156 = &v88[v92];
          long long v160 = &v87[v92];
          uint64_t v153 = sub_F6DC0();
          uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v93(v160, v156, v153);
          uint64_t v41 = v33;
          uint64_t v94 = v91[8];
          v95 = &v87[v94];
          v96 = &v88[v94];
          uint64_t v97 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
          v87[v91[9]] = v88[v91[9]];
          uint64_t v98 = v91[10];
          v99 = &v87[v98];
          uint64_t v100 = &v88[v98];
          v99[8] = v100[8];
          *(void *)v99 = *(void *)v100;
          uint64_t v101 = sub_551C(&qword_128218);
          *(void *)((char *)v41 + *(int *)(v101 + 48)) = *(void *)((char *)v34 + *(int *)(v101 + 48));
          swift_retain();
          uint64_t v38 = v167;
          goto LABEL_44;
        case 2u:
          uint64_t v41 = v33;
          *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
          uint64_t v62 = v34[3];
          v33[2] = v34[2];
          v33[3] = v62;
          v33[4] = v34[4];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_44;
        case 3u:
          uint64_t v168 = v38;
          long long v63 = *(_OWORD *)(v34 + 3);
          uint64_t v41 = v33;
          *(_OWORD *)(v33 + 3) = v63;
          (**(void (***)(void *, void *))(v63 - 8))(v33, v34);
          uint64_t v64 = v34[6];
          v33[5] = v34[5];
          v33[6] = v64;
          v33[7] = v34[7];
          uint64_t v65 = v34[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v65)
          {
            v33[8] = v34[8];
            v33[9] = v65;
            uint64_t v67 = v34[10];
            unint64_t v66 = v34[11];
            swift_bridgeObjectRetain();
            sub_2A4E4(v67, v66);
            v33[10] = v67;
            v33[11] = v66;
            uint64_t v68 = v34[13];
            v33[12] = v34[12];
            v33[13] = v68;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v113 = *((_OWORD *)v34 + 5);
            *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
            *((_OWORD *)v33 + 5) = v113;
            *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
          }
          uint64_t v38 = v168;
          swift_storeEnumTagMultiPayload();
          break;
        case 5u:
        case 6u:
        case 7u:
          uint64_t v41 = v33;
          *uint64_t v33 = *v34;
          swift_retain();
LABEL_44:
          swift_storeEnumTagMultiPayload();
          uint64_t v36 = v171;
          break;
        default:
          uint64_t v41 = v33;
          memcpy(v33, v34, *(void *)(v36 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v41, 0, 1, v38);
    }
    uint64_t v102 = v31[8];
    uint64_t v103 = a1 + v102;
    uint64_t v104 = a2 + v102;
    uint64_t v105 = *(void *)(a2 + v102 + 24);
    if (v105)
    {
      uint64_t v106 = *(void *)(v104 + 32);
      *(void *)(v103 + 24) = v105;
      *(void *)(v103 + 32) = v106;
      (**(void (***)(void))(v105 - 8))();
    }
    else
    {
      long long v107 = *(_OWORD *)(v104 + 16);
      *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
      *(_OWORD *)(v103 + 16) = v107;
      *(void *)(v103 + 32) = *(void *)(v104 + 32);
    }
    *(void *)(a1 + v31[9]) = *(void *)(a2 + v31[9]);
    *(unsigned char *)(a1 + v31[10]) = *(unsigned char *)(a2 + v31[10]);
    *(unsigned char *)(a1 + v31[11]) = *(unsigned char *)(a2 + v31[11]);
    *(void *)(a1 + v31[12]) = *(void *)(a2 + v31[12]);
    uint64_t v108 = v31[13];
    uint64_t v109 = (void *)(a1 + v108);
    long long v110 = (void *)(a2 + v108);
    uint64_t v111 = v110[1];
    *uint64_t v109 = *v110;
    v109[1] = v111;
    uint64_t v112 = v110[3];
    v109[2] = v110[2];
    v109[3] = v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (*(unsigned char *)(a2 + 122))
    {
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      uint64_t v12 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v12;
      uint64_t v13 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v13;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      char v14 = *(unsigned char *)(a2 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14)
      {
        long long v15 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 88) = v15;
        (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 64, a2 + 64);
      }
      else
      {
        uint64_t v23 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v23;
        uint64_t v24 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v24;
        uint64_t v25 = *(void *)(a2 + 104);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = v25;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 121) = v14;
    }
    else
    {
      char v18 = *(unsigned char *)(a2 + 57);
      if (v18)
      {
        long long v19 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v19;
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1, a2);
      }
      else
      {
        uint64_t v42 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v42;
        uint64_t v43 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v43;
        uint64_t v44 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v44;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 57) = v18;
    }
    *(unsigned char *)(a1 + 122) = v5;
    uint64_t v45 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v45;
    uint64_t v46 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v46;
    uint64_t v47 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v48 = v47[7];
    uint64_t v49 = (void *)(a1 + v48);
    uint64_t v50 = (void *)(a2 + v48);
    uint64_t v51 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48);
    uint64_t v54 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53(v50, 1, v54))
    {
      uint64_t v55 = sub_551C((uint64_t *)&unk_128170);
      memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      uint64_t v172 = v52;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v56 = v50[1];
          uint64_t v57 = v49;
          void *v49 = *v50;
          v49[1] = v56;
          v49[2] = v50[2];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_54;
        case 1u:
          uint64_t v169 = v54;
          uint64_t v69 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v70 = *(void *)(v69 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v70 + 48))(v50, 1, v69))
          {
            uint64_t v71 = sub_551C(&qword_1283F0);
            uint64_t v72 = v49;
            memcpy(v49, v50, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            uint64_t v161 = v70;
            uint64_t v72 = v49;
            *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
            v49[2] = v50[2];
            uint64_t v114 = *(int *)(v69 + 24);
            uint64_t v164 = (char *)v50 + v114;
            v166 = (char *)v49 + v114;
            uint64_t v115 = sub_F6DC0();
            v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
            swift_bridgeObjectRetain();
            v157(v166, v164, v115);
            uint64_t v116 = *(int *)(v69 + 28);
            uint64_t v117 = (char *)v49 + v116;
            v118 = (char *)v50 + v116;
            uint64_t v119 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v49, 0, 1, v69);
          }
          uint64_t v120 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v121 = (char *)v72 + v120;
          uint64_t v122 = (char *)v50 + v120;
          *(_OWORD *)uint64_t v121 = *(_OWORD *)((char *)v50 + v120);
          uint64_t v124 = *(void *)((char *)v50 + v120 + 16);
          uint64_t v123 = *(void *)((char *)v50 + v120 + 24);
          *((void *)v121 + 2) = v124;
          *((void *)v121 + 3) = v123;
          *((void *)v121 + 4) = *((void *)v122 + 4);
          v125 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v126 = v125[7];
          uint64_t v158 = &v122[v126];
          v162 = &v121[v126];
          uint64_t v154 = sub_F6DC0();
          uint64_t v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v127(v162, v158, v154);
          uint64_t v57 = v49;
          uint64_t v128 = v125[8];
          v129 = &v121[v128];
          v130 = &v122[v128];
          uint64_t v131 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
          v121[v125[9]] = v122[v125[9]];
          uint64_t v132 = v125[10];
          v133 = &v121[v132];
          uint64_t v134 = &v122[v132];
          v133[8] = v134[8];
          *(void *)v133 = *(void *)v134;
          uint64_t v135 = sub_551C(&qword_128218);
          *(void *)((char *)v57 + *(int *)(v135 + 48)) = *(void *)((char *)v50 + *(int *)(v135 + 48));
          swift_retain();
          uint64_t v54 = v169;
          goto LABEL_54;
        case 2u:
          uint64_t v57 = v49;
          *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          uint64_t v73 = v50[3];
          v49[2] = v50[2];
          v49[3] = v73;
          v49[4] = v50[4];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_54;
        case 3u:
          uint64_t v170 = v54;
          long long v74 = *(_OWORD *)(v50 + 3);
          uint64_t v57 = v49;
          *(_OWORD *)(v49 + 3) = v74;
          (**(void (***)(void *, void *))(v74 - 8))(v49, v50);
          uint64_t v75 = v50[6];
          v49[5] = v50[5];
          v49[6] = v75;
          v49[7] = v50[7];
          uint64_t v76 = v50[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v76)
          {
            v49[8] = v50[8];
            v49[9] = v76;
            uint64_t v78 = v50[10];
            unint64_t v77 = v50[11];
            swift_bridgeObjectRetain();
            sub_2A4E4(v78, v77);
            v49[10] = v78;
            v49[11] = v77;
            uint64_t v79 = v50[13];
            v49[12] = v50[12];
            v49[13] = v79;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v152 = *((_OWORD *)v50 + 5);
            *((_OWORD *)v49 + 4) = *((_OWORD *)v50 + 4);
            *((_OWORD *)v49 + 5) = v152;
            *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
          }
          uint64_t v54 = v170;
          swift_storeEnumTagMultiPayload();
          break;
        case 5u:
        case 6u:
        case 7u:
          uint64_t v57 = v49;
          void *v49 = *v50;
          swift_retain();
LABEL_54:
          swift_storeEnumTagMultiPayload();
          uint64_t v52 = v172;
          break;
        default:
          uint64_t v57 = v49;
          memcpy(v49, v50, *(void *)(v52 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v57, 0, 1, v54);
    }
    uint64_t v136 = v47[8];
    uint64_t v137 = a1 + v136;
    uint64_t v138 = a2 + v136;
    uint64_t v139 = *(void *)(a2 + v136 + 24);
    if (v139)
    {
      uint64_t v140 = *(void *)(v138 + 32);
      *(void *)(v137 + 24) = v139;
      *(void *)(v137 + 32) = v140;
      (**(void (***)(void))(v139 - 8))();
    }
    else
    {
      long long v141 = *(_OWORD *)(v138 + 16);
      *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
      *(_OWORD *)(v137 + 16) = v141;
      *(void *)(v137 + 32) = *(void *)(v138 + 32);
    }
    *(void *)(a1 + v47[9]) = *(void *)(a2 + v47[9]);
    *(unsigned char *)(a1 + v47[10]) = *(unsigned char *)(a2 + v47[10]);
    *(unsigned char *)(a1 + v47[11]) = *(unsigned char *)(a2 + v47[11]);
    *(void *)(a1 + v47[12]) = *(void *)(a2 + v47[12]);
    uint64_t v142 = v47[13];
    uint64_t v143 = (void *)(a1 + v142);
    uint64_t v144 = (void *)(a2 + v142);
    uint64_t v145 = v144[1];
    *uint64_t v143 = *v144;
    v143[1] = v145;
    uint64_t v146 = v144[3];
    v143[2] = v144[2];
    v143[3] = v146;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v147 = *(int *)(sub_551C(&qword_1282D8) + 48);
    uint64_t v148 = (void *)(a1 + v147);
    long long v149 = (void *)(a2 + v147);
    uint64_t v150 = v149[1];
    *uint64_t v148 = *v149;
    v148[1] = v150;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_B48B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    char v6 = *(unsigned char *)(a2 + 122);
    if (EnumCaseMultiPayload == 1)
    {
      if (*(unsigned char *)(a2 + 122))
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        char v7 = *(unsigned char *)(a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          uint64_t v8 = *(void *)(a2 + 88);
          *(void *)(a1 + 88) = v8;
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 64, a2 + 64);
        }
        else
        {
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v7;
      }
      else
      {
        char v11 = *(unsigned char *)(a2 + 57);
        if (v11)
        {
          uint64_t v12 = *(void *)(a2 + 24);
          *(void *)(a1 + 24) = v12;
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v11;
      }
      *(unsigned char *)(a1 + 122) = v6;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      uint64_t v138 = type metadata accessor for RCSMessage(0);
      uint64_t v15 = *(int *)(v138 + 28);
      char v16 = (void *)(a1 + v15);
      long long v17 = (void *)(a2 + v15);
      uint64_t v18 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20(v17, 1, v18))
      {
        uint64_t v21 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
        uint64_t v22 = (int *)v138;
      }
      else
      {
        uint64_t v136 = v19;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *char v16 = *v17;
            v16[1] = v17[1];
            v16[2] = v17[2];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_36;
          case 1u:
            uint64_t v32 = v17;
            uint64_t v134 = v18;
            uint64_t v33 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            uint64_t v34 = *(void *)(v33 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
            {
              uint64_t v35 = sub_551C(&qword_1283F0);
              uint64_t v36 = v16;
              memcpy(v16, v32, *(void *)(*(void *)(v35 - 8) + 64));
            }
            else
            {
              uint64_t v36 = v16;
              *char v16 = *v32;
              v16[1] = v32[1];
              v16[2] = v32[2];
              uint64_t v64 = *(int *)(v33 + 24);
              uint64_t v128 = (char *)v16 + v64;
              uint64_t v132 = (char *)v32 + v64;
              uint64_t v65 = sub_F6DC0();
              uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
              swift_bridgeObjectRetain();
              v124(v128, v132, v65);
              uint64_t v66 = *(int *)(v33 + 28);
              uint64_t v67 = (char *)v16 + v66;
              uint64_t v68 = (char *)v32 + v66;
              uint64_t v69 = sub_F6EE0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v16, 0, 1, v33);
            }
            uint64_t v22 = (int *)v138;
            uint64_t v70 = *(int *)(type metadata accessor for RCSFile(0) + 20);
            uint64_t v71 = (void *)((char *)v36 + v70);
            uint64_t v72 = (char *)v32 + v70;
            *uint64_t v71 = *(void *)((char *)v32 + v70);
            v71[1] = *(void *)((char *)v32 + v70 + 8);
            v71[2] = *(void *)((char *)v32 + v70 + 16);
            v71[3] = *(void *)((char *)v32 + v70 + 24);
            v71[4] = *(void *)((char *)v32 + v70 + 32);
            uint64_t v73 = type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v74 = *(int *)(v73 + 28);
            uint64_t v140 = v32;
            uint64_t v75 = (int *)v73;
            v125 = &v72[v74];
            v129 = (char *)v71 + v74;
            uint64_t v76 = sub_F6DC0();
            unint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v77(v129, v125, v76);
            uint64_t v78 = v75[8];
            uint64_t v79 = (char *)v71 + v78;
            uint64_t v80 = &v72[v78];
            uint64_t v81 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
            *((unsigned char *)v71 + v75[9]) = v72[v75[9]];
            uint64_t v82 = v75[10];
            uint64_t v83 = (char *)v71 + v82;
            uint64_t v84 = &v72[v82];
            char v85 = v84[8];
            *(void *)uint64_t v83 = *(void *)v84;
            v83[8] = v85;
            uint64_t v86 = sub_551C(&qword_128218);
            *(void *)((char *)v16 + *(int *)(v86 + 48)) = *(void *)((char *)v140 + *(int *)(v86 + 48));
            swift_retain();
            uint64_t v18 = v134;
            goto LABEL_56;
          case 2u:
            *char v16 = *v17;
            v16[1] = v17[1];
            v16[2] = v17[2];
            v16[3] = v17[3];
            v16[4] = v17[4];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_36;
          case 3u:
            uint64_t v37 = v17[3];
            v16[3] = v37;
            v16[4] = v17[4];
            (**(void (***)(void *, void *))(v37 - 8))(v16, v17);
            v16[5] = v17[5];
            v16[6] = v17[6];
            v16[7] = v17[7];
            uint64_t v38 = v17[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v38)
            {
              v16[8] = v17[8];
              v16[9] = v17[9];
              uint64_t v39 = v18;
              uint64_t v40 = v17[10];
              unint64_t v41 = v17[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v40, v41);
              v16[10] = v40;
              v16[11] = v41;
              uint64_t v18 = v39;
              v16[12] = v17[12];
              v16[13] = v17[13];
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v87 = *((_OWORD *)v17 + 4);
              long long v88 = *((_OWORD *)v17 + 6);
              *((_OWORD *)v16 + 5) = *((_OWORD *)v17 + 5);
              *((_OWORD *)v16 + 6) = v88;
              *((_OWORD *)v16 + 4) = v87;
            }
            uint64_t v22 = (int *)v138;
LABEL_56:
            swift_storeEnumTagMultiPayload();
            uint64_t v19 = v136;
            goto LABEL_57;
          case 5u:
          case 6u:
          case 7u:
            *char v16 = *v17;
            swift_retain();
LABEL_36:
            swift_storeEnumTagMultiPayload();
            goto LABEL_37;
          default:
            memcpy(v16, v17, *(void *)(v19 + 64));
LABEL_37:
            uint64_t v22 = (int *)v138;
LABEL_57:
            (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
            break;
        }
      }
      uint64_t v89 = v22[8];
      uint64_t v90 = a1 + v89;
      v91 = (long long *)(a2 + v89);
      uint64_t v92 = *(void *)(a2 + v89 + 24);
      if (v92)
      {
        *(void *)(v90 + 24) = v92;
        *(void *)(v90 + 32) = *((void *)v91 + 4);
        (**(void (***)(void))(v92 - 8))();
      }
      else
      {
        long long v93 = *v91;
        long long v94 = v91[1];
        *(void *)(v90 + 32) = *((void *)v91 + 4);
        *(_OWORD *)uint64_t v90 = v93;
        *(_OWORD *)(v90 + 16) = v94;
      }
      *(void *)(a1 + v22[9]) = *(void *)(a2 + v22[9]);
      *(unsigned char *)(a1 + v22[10]) = *(unsigned char *)(a2 + v22[10]);
      *(unsigned char *)(a1 + v22[11]) = *(unsigned char *)(a2 + v22[11]);
      *(void *)(a1 + v22[12]) = *(void *)(a2 + v22[12]);
      uint64_t v95 = v22[13];
      v96 = (void *)(a1 + v95);
      uint64_t v97 = (void *)(a2 + v95);
      void *v96 = *v97;
      v96[1] = v97[1];
      v96[2] = v97[2];
      v96[3] = v97[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (*(unsigned char *)(a2 + 122))
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        char v9 = *(unsigned char *)(a2 + 121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9)
        {
          uint64_t v10 = *(void *)(a2 + 88);
          *(void *)(a1 + 88) = v10;
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 64, a2 + 64);
        }
        else
        {
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 121) = v9;
      }
      else
      {
        char v13 = *(unsigned char *)(a2 + 57);
        if (v13)
        {
          uint64_t v14 = *(void *)(a2 + 24);
          *(void *)(a1 + 24) = v14;
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1, a2);
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        *(unsigned char *)(a1 + 57) = v13;
      }
      *(unsigned char *)(a1 + 122) = v6;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      uint64_t v139 = type metadata accessor for RCSMessage(0);
      uint64_t v23 = *(int *)(v139 + 28);
      uint64_t v24 = (void *)(a1 + v23);
      uint64_t v25 = (void *)(a2 + v23);
      uint64_t v26 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26))
      {
        uint64_t v29 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
        uint64_t v30 = (int *)v139;
      }
      else
      {
        uint64_t v137 = v27;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v31 = v24;
            *uint64_t v24 = *v25;
            v24[1] = v25[1];
            v24[2] = v25[2];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_45;
          case 1u:
            uint64_t v42 = v25;
            uint64_t v135 = v26;
            uint64_t v43 = type metadata accessor for RCSFile.ThumbnailInformation(0);
            uint64_t v44 = *(void *)(v43 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
            {
              uint64_t v45 = sub_551C(&qword_1283F0);
              uint64_t v46 = v24;
              memcpy(v24, v42, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              uint64_t v46 = v24;
              *uint64_t v24 = *v42;
              v24[1] = v42[1];
              v24[2] = v42[2];
              uint64_t v99 = *(int *)(v43 + 24);
              v130 = (char *)v24 + v99;
              v133 = (char *)v42 + v99;
              uint64_t v100 = sub_F6DC0();
              uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
              swift_bridgeObjectRetain();
              v126(v130, v133, v100);
              uint64_t v101 = *(int *)(v43 + 28);
              uint64_t v102 = (char *)v24 + v101;
              uint64_t v103 = (char *)v42 + v101;
              uint64_t v104 = sub_F6EE0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v24, 0, 1, v43);
            }
            uint64_t v30 = (int *)v139;
            uint64_t v105 = *(int *)(type metadata accessor for RCSFile(0) + 20);
            uint64_t v106 = (void *)((char *)v46 + v105);
            long long v107 = (char *)v42 + v105;
            *uint64_t v106 = *(void *)((char *)v42 + v105);
            v106[1] = *(void *)((char *)v42 + v105 + 8);
            v106[2] = *(void *)((char *)v42 + v105 + 16);
            v106[3] = *(void *)((char *)v42 + v105 + 24);
            v106[4] = *(void *)((char *)v42 + v105 + 32);
            uint64_t v108 = type metadata accessor for RCSFile.DispositionInformation(0);
            uint64_t v109 = *(int *)(v108 + 28);
            long long v141 = v42;
            long long v110 = (int *)v108;
            uint64_t v127 = &v107[v109];
            uint64_t v131 = (char *)v106 + v109;
            uint64_t v111 = sub_F6DC0();
            uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v112(v131, v127, v111);
            uint64_t v31 = v24;
            uint64_t v113 = v110[8];
            uint64_t v114 = (char *)v106 + v113;
            uint64_t v115 = &v107[v113];
            uint64_t v116 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
            *((unsigned char *)v106 + v110[9]) = v107[v110[9]];
            uint64_t v117 = v110[10];
            v118 = (char *)v106 + v117;
            uint64_t v119 = &v107[v117];
            char v120 = v119[8];
            *(void *)v118 = *(void *)v119;
            v118[8] = v120;
            uint64_t v121 = sub_551C(&qword_128218);
            *(void *)((char *)v31 + *(int *)(v121 + 48)) = *(void *)((char *)v141 + *(int *)(v121 + 48));
            swift_retain();
            uint64_t v26 = v135;
            swift_storeEnumTagMultiPayload();
            uint64_t v27 = v137;
            goto LABEL_47;
          case 2u:
            uint64_t v31 = v24;
            *uint64_t v24 = *v25;
            v24[1] = v25[1];
            v24[2] = v25[2];
            v24[3] = v25[3];
            v24[4] = v25[4];
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_45;
          case 3u:
            uint64_t v47 = v25[3];
            uint64_t v31 = v24;
            v24[3] = v47;
            v24[4] = v25[4];
            (**(void (***)(void *, void *))(v47 - 8))(v24, v25);
            v24[5] = v25[5];
            v24[6] = v25[6];
            v24[7] = v25[7];
            uint64_t v48 = v25[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v48)
            {
              v24[8] = v25[8];
              v24[9] = v25[9];
              uint64_t v49 = v26;
              uint64_t v50 = v25[10];
              unint64_t v51 = v25[11];
              swift_bridgeObjectRetain();
              sub_2A4E4(v50, v51);
              v31[10] = v50;
              v31[11] = v51;
              uint64_t v26 = v49;
              v31[12] = v25[12];
              v31[13] = v25[13];
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v122 = *((_OWORD *)v25 + 4);
              long long v123 = *((_OWORD *)v25 + 6);
              *((_OWORD *)v24 + 5) = *((_OWORD *)v25 + 5);
              *((_OWORD *)v24 + 6) = v123;
              *((_OWORD *)v24 + 4) = v122;
            }
            uint64_t v30 = (int *)v139;
            swift_storeEnumTagMultiPayload();
            goto LABEL_47;
          case 5u:
          case 6u:
          case 7u:
            uint64_t v31 = v24;
            *uint64_t v24 = *v25;
            swift_retain();
LABEL_45:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v31 = v24;
            memcpy(v24, v25, *(void *)(v27 + 64));
            break;
        }
        uint64_t v30 = (int *)v139;
LABEL_47:
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
      }
      uint64_t v52 = v30[8];
      uint64_t v53 = a1 + v52;
      uint64_t v54 = (long long *)(a2 + v52);
      uint64_t v55 = *(void *)(a2 + v52 + 24);
      if (v55)
      {
        *(void *)(v53 + 24) = v55;
        *(void *)(v53 + 32) = *((void *)v54 + 4);
        (**(void (***)(void))(v55 - 8))();
      }
      else
      {
        long long v56 = *v54;
        long long v57 = v54[1];
        *(void *)(v53 + 32) = *((void *)v54 + 4);
        *(_OWORD *)uint64_t v53 = v56;
        *(_OWORD *)(v53 + 16) = v57;
      }
      *(void *)(a1 + v30[9]) = *(void *)(a2 + v30[9]);
      *(unsigned char *)(a1 + v30[10]) = *(unsigned char *)(a2 + v30[10]);
      *(unsigned char *)(a1 + v30[11]) = *(unsigned char *)(a2 + v30[11]);
      *(void *)(a1 + v30[12]) = *(void *)(a2 + v30[12]);
      uint64_t v58 = v30[13];
      uint64_t v59 = (void *)(a1 + v58);
      uint64_t v60 = (void *)(a2 + v58);
      *uint64_t v59 = *v60;
      v59[1] = v60[1];
      v59[2] = v60[2];
      v59[3] = v60[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v61 = *(int *)(sub_551C(&qword_1282D8) + 48);
      uint64_t v62 = (void *)(a1 + v61);
      long long v63 = (void *)(a2 + v61);
      *uint64_t v62 = *v63;
      v62[1] = v63[1];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_B5B18(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  *(_OWORD *)((char *)a1 + 107) = *(_OWORD *)((char *)a2 + 107);
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  char v9 = (int *)type metadata accessor for RCSMessage(0);
  uint64_t v10 = v9[7];
  char v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (EnumCaseMultiPayload == 1)
  {
    if (v15)
    {
      uint64_t v16 = sub_551C((uint64_t *)&unk_128170);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18))
        {
          uint64_t v20 = sub_551C(&qword_1283F0);
          memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          *char v11 = *v12;
          *(_OWORD *)(v11 + 1) = *(_OWORD *)(v12 + 1);
          uint64_t v24 = *(int *)(v18 + 24);
          uint64_t v82 = (char *)v11 + v24;
          uint64_t v25 = (char *)v12 + v24;
          uint64_t v26 = sub_F6DC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v82, v25, v26);
          uint64_t v27 = *(int *)(v18 + 28);
          uint64_t v83 = (char *)v11 + v27;
          uint64_t v28 = (char *)v12 + v27;
          uint64_t v29 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v83, v28, v29);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v18);
        }
        uint64_t v30 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v31 = (char *)v11 + v30;
        uint64_t v32 = (char *)v12 + v30;
        *(void *)uint64_t v31 = *(void *)((char *)v12 + v30);
        *(_OWORD *)(v31 + 8) = *(_OWORD *)((char *)v12 + v30 + 8);
        *(_OWORD *)(v31 + 24) = *(_OWORD *)((char *)v12 + v30 + 24);
        uint64_t v33 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v34 = v33[7];
        uint64_t v78 = &v32[v34];
        uint64_t v84 = &v31[v34];
        uint64_t v35 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v84, v78, v35);
        uint64_t v36 = v33[8];
        uint64_t v79 = &v32[v36];
        char v85 = &v31[v36];
        uint64_t v37 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v85, v79, v37);
        v31[v33[9]] = v32[v33[9]];
        uint64_t v38 = v33[10];
        uint64_t v39 = &v31[v38];
        uint64_t v40 = &v32[v38];
        v39[8] = v40[8];
        *(void *)uint64_t v39 = *(void *)v40;
        uint64_t v41 = sub_551C(&qword_128218);
        *(void *)((char *)v11 + *(int *)(v41 + 48)) = *(void *)((char *)v12 + *(int *)(v41 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(v14 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v42 = v9[8];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    long long v45 = *((_OWORD *)v44 + 1);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v45;
    *((void *)v43 + 4) = *((void *)v44 + 4);
    *(void *)((char *)a1 + v9[9]) = *(void *)((char *)a2 + v9[9]);
    *((unsigned char *)a1 + v9[10]) = *((unsigned char *)a2 + v9[10]);
    *((unsigned char *)a1 + v9[11]) = *((unsigned char *)a2 + v9[11]);
    *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
    uint64_t v46 = v9[13];
    uint64_t v47 = (_OWORD *)((char *)a1 + v46);
    uint64_t v48 = (_OWORD *)((char *)a2 + v46);
    long long v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
  }
  else
  {
    if (v15)
    {
      uint64_t v17 = sub_551C((uint64_t *)&unk_128170);
      memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v21 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21))
        {
          uint64_t v23 = sub_551C(&qword_1283F0);
          memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          *char v11 = *v12;
          *(_OWORD *)(v11 + 1) = *(_OWORD *)(v12 + 1);
          uint64_t v50 = *(int *)(v21 + 24);
          uint64_t v86 = (char *)v11 + v50;
          unint64_t v51 = (char *)v12 + v50;
          uint64_t v52 = sub_F6DC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v86, v51, v52);
          uint64_t v53 = *(int *)(v21 + 28);
          long long v87 = (char *)v11 + v53;
          uint64_t v54 = (char *)v12 + v53;
          uint64_t v55 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v87, v54, v55);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v21);
        }
        uint64_t v56 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        long long v57 = (char *)v11 + v56;
        uint64_t v58 = (char *)v12 + v56;
        *(void *)long long v57 = *(void *)((char *)v12 + v56);
        *(_OWORD *)(v57 + 8) = *(_OWORD *)((char *)v12 + v56 + 8);
        *(_OWORD *)(v57 + 24) = *(_OWORD *)((char *)v12 + v56 + 24);
        uint64_t v59 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v60 = v59[7];
        uint64_t v80 = &v58[v60];
        long long v88 = &v57[v60];
        uint64_t v61 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v88, v80, v61);
        uint64_t v62 = v59[8];
        uint64_t v81 = &v58[v62];
        uint64_t v89 = &v57[v62];
        uint64_t v63 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v89, v81, v63);
        v57[v59[9]] = v58[v59[9]];
        uint64_t v64 = v59[10];
        uint64_t v65 = &v57[v64];
        uint64_t v66 = &v58[v64];
        v65[8] = v66[8];
        *(void *)uint64_t v65 = *(void *)v66;
        uint64_t v67 = sub_551C(&qword_128218);
        *(void *)((char *)v11 + *(int *)(v67 + 48)) = *(void *)((char *)v12 + *(int *)(v67 + 48));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(v14 + 64));
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v68 = v9[8];
    uint64_t v69 = (char *)a1 + v68;
    uint64_t v70 = (char *)a2 + v68;
    long long v71 = *((_OWORD *)v70 + 1);
    *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
    *((_OWORD *)v69 + 1) = v71;
    *((void *)v69 + 4) = *((void *)v70 + 4);
    *(void *)((char *)a1 + v9[9]) = *(void *)((char *)a2 + v9[9]);
    *((unsigned char *)a1 + v9[10]) = *((unsigned char *)a2 + v9[10]);
    *((unsigned char *)a1 + v9[11]) = *((unsigned char *)a2 + v9[11]);
    *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
    uint64_t v72 = v9[13];
    uint64_t v73 = (_OWORD *)((char *)a1 + v72);
    uint64_t v74 = (_OWORD *)((char *)a2 + v72);
    long long v75 = v74[1];
    *uint64_t v73 = *v74;
    v73[1] = v75;
    uint64_t v76 = sub_551C(&qword_1282D8);
    *(_OWORD *)((char *)a1 + *(int *)(v76 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v76 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_B631C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(_OWORD *, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    long long v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    a1[6] = a2[6];
    *(_OWORD *)((char *)a1 + 107) = *(_OWORD *)((char *)a2 + 107);
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    long long v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    long long v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v11 = v10[7];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v15 = *(void *)(v14 - 8);
    int v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    if (EnumCaseMultiPayload == 1)
    {
      if (v16)
      {
        uint64_t v17 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v19 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v20 = *(void *)(v19 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
          {
            uint64_t v21 = sub_551C(&qword_1283F0);
            memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            *uint64_t v12 = *v13;
            *(_OWORD *)(v12 + 1) = *(_OWORD *)(v13 + 1);
            uint64_t v25 = *(int *)(v19 + 24);
            uint64_t v79 = (char *)v13 + v25;
            long long v87 = (char *)v12 + v25;
            uint64_t v26 = sub_F6DC0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v87, v79, v26);
            uint64_t v27 = *(int *)(v19 + 28);
            uint64_t v80 = (char *)v13 + v27;
            long long v88 = (char *)v12 + v27;
            uint64_t v28 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v88, v80, v28);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
          }
          uint64_t v29 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v89 = v12;
          uint64_t v30 = (char *)v12 + v29;
          uint64_t v31 = (char *)v13 + v29;
          *(void *)uint64_t v30 = *(void *)((char *)v13 + v29);
          *(_OWORD *)(v30 + 8) = *(_OWORD *)((char *)v13 + v29 + 8);
          *(_OWORD *)(v30 + 24) = *(_OWORD *)((char *)v13 + v29 + 24);
          uint64_t v32 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v33 = v32[7];
          long long v75 = &v31[v33];
          uint64_t v81 = &v30[v33];
          uint64_t v34 = sub_F6DC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v81, v75, v34);
          uint64_t v35 = v32[8];
          uint64_t v76 = &v31[v35];
          uint64_t v82 = &v30[v35];
          uint64_t v36 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v82, v76, v36);
          v30[v32[9]] = v31[v32[9]];
          uint64_t v37 = v32[10];
          uint64_t v38 = &v30[v37];
          uint64_t v12 = v89;
          uint64_t v39 = &v31[v37];
          v38[8] = v39[8];
          *(void *)uint64_t v38 = *(void *)v39;
          uint64_t v40 = sub_551C(&qword_128218);
          *(void *)((char *)v89 + *(int *)(v40 + 48)) = *(void *)((char *)v13 + *(int *)(v40 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v12, v13, *(void *)(v15 + 64));
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v41 = v10[8];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      long long v44 = *((_OWORD *)v43 + 1);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v44;
      *((void *)v42 + 4) = *((void *)v43 + 4);
      *(void *)((char *)a1 + v10[9]) = *(void *)((char *)a2 + v10[9]);
      *((unsigned char *)a1 + v10[10]) = *((unsigned char *)a2 + v10[10]);
      *((unsigned char *)a1 + v10[11]) = *((unsigned char *)a2 + v10[11]);
      *(void *)((char *)a1 + v10[12]) = *(void *)((char *)a2 + v10[12]);
      uint64_t v45 = v10[13];
      uint64_t v46 = (_OWORD *)((char *)a1 + v45);
      uint64_t v47 = (_OWORD *)((char *)a2 + v45);
      long long v48 = v47[1];
      _OWORD *v46 = *v47;
      v46[1] = v48;
    }
    else
    {
      if (v16)
      {
        uint64_t v18 = sub_551C((uint64_t *)&unk_128170);
        memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v22 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22))
          {
            uint64_t v24 = sub_551C(&qword_1283F0);
            memcpy(v12, v13, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            *uint64_t v12 = *v13;
            *(_OWORD *)(v12 + 1) = *(_OWORD *)(v13 + 1);
            uint64_t v49 = *(int *)(v22 + 24);
            uint64_t v83 = (char *)v13 + v49;
            uint64_t v90 = (char *)v12 + v49;
            uint64_t v50 = sub_F6DC0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v90, v83, v50);
            uint64_t v51 = *(int *)(v22 + 28);
            uint64_t v84 = (char *)v13 + v51;
            v91 = (char *)v12 + v51;
            uint64_t v52 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v91, v84, v52);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
          }
          uint64_t v53 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v54 = (char *)v12 + v53;
          uint64_t v92 = v12;
          uint64_t v55 = (char *)v13 + v53;
          *(void *)uint64_t v54 = *(void *)((char *)v13 + v53);
          *(_OWORD *)(v54 + 8) = *(_OWORD *)((char *)v13 + v53 + 8);
          *(_OWORD *)(v54 + 24) = *(_OWORD *)((char *)v13 + v53 + 24);
          uint64_t v56 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v57 = v56[7];
          unint64_t v77 = &v55[v57];
          char v85 = &v54[v57];
          uint64_t v58 = sub_F6DC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v85, v77, v58);
          uint64_t v59 = v56[8];
          uint64_t v78 = &v55[v59];
          uint64_t v86 = &v54[v59];
          uint64_t v60 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v86, v78, v60);
          v54[v56[9]] = v55[v56[9]];
          uint64_t v61 = v56[10];
          uint64_t v62 = &v54[v61];
          uint64_t v63 = &v55[v61];
          uint64_t v12 = v92;
          v62[8] = v63[8];
          *(void *)uint64_t v62 = *(void *)v63;
          uint64_t v64 = sub_551C(&qword_128218);
          *(void *)((char *)v92 + *(int *)(v64 + 48)) = *(void *)((char *)v13 + *(int *)(v64 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v12, v13, *(void *)(v15 + 64));
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v65 = v10[8];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      long long v68 = *((_OWORD *)v67 + 1);
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v68;
      *((void *)v66 + 4) = *((void *)v67 + 4);
      *(void *)((char *)a1 + v10[9]) = *(void *)((char *)a2 + v10[9]);
      *((unsigned char *)a1 + v10[10]) = *((unsigned char *)a2 + v10[10]);
      *((unsigned char *)a1 + v10[11]) = *((unsigned char *)a2 + v10[11]);
      *(void *)((char *)a1 + v10[12]) = *(void *)((char *)a2 + v10[12]);
      uint64_t v69 = v10[13];
      uint64_t v70 = (_OWORD *)((char *)a1 + v69);
      long long v71 = (_OWORD *)((char *)a2 + v69);
      long long v72 = v71[1];
      _OWORD *v70 = *v71;
      v70[1] = v72;
      uint64_t v73 = sub_551C(&qword_1282D8);
      *(_OWORD *)((char *)a1 + *(int *)(v73 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v73 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for RCSMessageReceiver.MessageProcessingContext()
{
  return sub_8B108();
}

uint64_t sub_B6B64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_B6BCC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_B6BF4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_F77B0();
  *a1 = v5;
  return result;
}

void *sub_B6C50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_551C(&qword_129500);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 + 31;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 6);
  long long v6 = sub_B6E20(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_44A8();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_B6D38(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_551C(&qword_128260);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_B7090((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_44A8();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_B6E20(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v26 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v27 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v28 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    unint64_t v18 = *(void *)(a4 + 48) + (v14 << 6);
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v24 = *(void *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v25 = *(void *)(v18 + 48);
    LOBYTE(v18) = *(unsigned char *)(v18 + 56);
    *(void *)uint64_t v10 = v19;
    *(void *)(v10 + 8) = v20;
    *(void *)(v10 + 16) = v21;
    *(void *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v24;
    *(void *)(v10 + 40) = v23;
    *(void *)(v10 + 48) = v25;
    *(unsigned char *)(v10 + 56) = v18;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v28)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v28)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v28)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v28)
              {
                unint64_t v8 = 0;
                int64_t v11 = v28 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v26;
      uint64_t result = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_B7090(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_B7290(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 32) = a1;
  *(double *)(v5 + 16) = a3;
  *(double *)(v5 + 24) = a4;
  return _swift_task_switch(sub_B72B8, 0, 0);
}

uint64_t sub_B72B8()
{
  id v1 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:*(double *)(v0 + 16) longitude:*(double *)(v0 + 24)];
  *(void *)(v0 + 56) = v1;
  id v2 = (id)IMVCardDataFromLocation();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_F6E30();
    unint64_t v6 = v5;

    uint64_t v29 = v4;
    *(void *)(v0 + 64) = v4;
    *(void *)(v0 + 72) = v6;
    uint64_t v7 = sub_F6DC0();
    *(void *)(v0 + 80) = v7;
    uint64_t v8 = *(void *)(v7 - 8);
    *(void *)(v0 + 88) = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 96) = v9;
    id v10 = [self defaultManager];
    int64_t v11 = (void *)sub_F71F0();
    id v12 = objc_msgSend(v10, "im_randomTemporaryFileURLWithFileName:", v11);

    sub_551C(&qword_128300);
    uint64_t v13 = swift_task_alloc();
    uint64_t v14 = v13;
    if (v12)
    {
      uint64_t v15 = swift_task_alloc();
      sub_F6D80();

      unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
      v16(v14, v15, v7);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
      swift_task_dealloc();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) != 1)
      {
        uint64_t v17 = *(void *)(v0 + 40);
        uint64_t v18 = *(void *)(v0 + 48);
        v16(v9, v14, v7);
        swift_task_dealloc();
        uint64_t v19 = *(int *)(v17 + 44);
        *(_DWORD *)(v0 + 248) = v19;
        *(void *)(v0 + 104) = *(void *)(v18 + v19);
        uint64_t v20 = 0;
        switch(v6 >> 62)
        {
          case 1uLL:
            LODWORD(v20) = HIDWORD(v29) - v29;
            if (__OFSUB__(HIDWORD(v29), v29))
            {
              __break(1u);
LABEL_19:
              __break(1u);
              JUMPOUT(0xB76BCLL);
            }
            uint64_t v20 = (int)v20;
LABEL_15:
            *(void *)(v0 + 112) = v20;
            uint64_t v26 = *(void *)(*(void *)(v0 + 40) + 24);
            *(void *)(v0 + 120) = v26;
            *(void *)(v0 + 128) = *(void *)(v26 + 24);
            *(void *)(v0 + 136) = (v26 + 24) & 0xFFFFFFFFFFFFLL | 0xB17F000000000000;
            *(void *)(v0 + 144) = sub_F74E0();
            *(void *)(v0 + 152) = sub_F74D0();
            uint64_t v28 = sub_F7470();
            uint64_t result = _swift_task_switch(sub_B76CC, v28, v27);
            break;
          case 2uLL:
            uint64_t v24 = *(void *)(v29 + 16);
            uint64_t v23 = *(void *)(v29 + 24);
            BOOL v25 = __OFSUB__(v23, v24);
            uint64_t v20 = v23 - v24;
            if (!v25) {
              goto LABEL_15;
            }
            goto LABEL_19;
          case 3uLL:
            goto LABEL_15;
          default:
            uint64_t v20 = BYTE6(v6);
            goto LABEL_15;
        }
        return result;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
    }
    sub_2852C(v29, v6);

    sub_1E944(v14, &qword_128300);
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
  }
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_B76CC()
{
  id v1 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))v0[16];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[5];
  swift_release();
  v0[20] = *(void *)(v4 + 16);
  v0[21] = v1(0x762E636F6C2E4C43, 0xEA00000000006663, v2, v3);
  v0[22] = 0;
  return _swift_task_switch(sub_B77A8, 0, 0);
}

uint64_t sub_B77A8()
{
  uint64_t v1 = *(void *)(v0 + 176);
  sub_F6E40();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 168);
    unint64_t v3 = *(void *)(v0 + 72);
    unint64_t v5 = *(void **)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));

    sub_2852C(v4, v3);
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 120);
    *(void *)(v0 + 184) = *(void *)(*(void *)(v0 + 48) + *(int *)(v0 + 248));
    *(void *)(v0 + 192) = *(void *)(v8 + 48);
    *(void *)(v0 + 200) = (v8 + 48) & 0xFFFFFFFFFFFFLL | 0x5849000000000000;
    *(void *)(v0 + 208) = sub_F74D0();
    uint64_t v10 = sub_F7470();
    return _swift_task_switch(sub_B78F4, v10, v9);
  }
}

uint64_t sub_B78F4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[24];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[15];
  swift_release();
  v1(v2, v3, v4);
  return _swift_task_switch(sub_B7988, 0, 0);
}

uint64_t sub_B7988()
{
  uint64_t v1 = *(void *)(v0 + 120);
  *(void *)(v0 + 216) = *(void *)(*(void *)(v0 + 48) + *(int *)(v0 + 248));
  *(void *)(v0 + 224) = *(void *)(v1 + 64);
  *(void *)(v0 + 232) = (v1 + 64) & 0xFFFFFFFFFFFFLL | 0xE026000000000000;
  *(void *)(v0 + 240) = sub_F74D0();
  uint64_t v3 = sub_F7470();
  return _swift_task_switch(sub_B7A34, v3, v2);
}

uint64_t sub_B7A34()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[28];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[15];
  swift_release();
  v1(v2, v3, v4);
  return _swift_task_switch(sub_B7AC8, 0, 0);
}

uint64_t sub_B7AC8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(*(void *)(v0 + 48) + 8);
  id v3 = [*(id *)(v0 + 168) guid];
  [v2 appendFileTransferWithGUID:v3];

  if (v1)
  {
    uint64_t v4 = RCSChipList.attributes.getter();
    uint64_t v5 = (void *)v4;
    if (v4)
    {
      sub_1BC40(v4);
      swift_bridgeObjectRelease();
      uint64_t v5 = (void *)sub_F71A0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void **)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 64);
  unint64_t v7 = *(void *)(v0 + 72);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v10 = *(void **)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 40);
  [v2 appendChipList:v5];

  sub_2852C(v8, v7);
  uint64_t v12 = *(int *)(v11 + 48);
  uint64_t v13 = *(void *)(v9 + v12);
  if ((v13 & 1) == 0) {
    *(void *)(v9 + v12) = v13 | 1;
  }
  (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_B7C50()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = (void *)v0[7];
  sub_2852C(v0[8], v0[9]);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_B7CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_B7D50()
{
  uint64_t result = type metadata accessor for RCSMessage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_B7E04(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    char v12 = *((unsigned char *)a2 + v9 + 122);
    uint64_t v13 = v5;
    uint64_t v14 = v8;
    uint64_t v105 = a2;
    uint64_t v106 = a3;
    uint64_t v104 = a1;
    if (v12)
    {
      uint64_t v15 = *(void *)(v11 + 8);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v15;
      uint64_t v16 = *(void *)(v11 + 24);
      *((void *)v10 + 2) = *(void *)(v11 + 16);
      *((void *)v10 + 3) = v16;
      uint64_t v17 = *(void *)(v11 + 40);
      *((void *)v10 + 4) = *(void *)(v11 + 32);
      *((void *)v10 + 5) = v17;
      *((void *)v10 + 6) = *(void *)(v11 + 48);
      v10[56] = *(unsigned char *)(v11 + 56);
      char v18 = *(unsigned char *)(v11 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18)
      {
        long long v19 = *(_OWORD *)(v11 + 88);
        *(_OWORD *)(v10 + 88) = v19;
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))((uint64_t)(v10 + 64), v11 + 64);
      }
      else
      {
        uint64_t v23 = *(void *)(v11 + 72);
        *((void *)v10 + 8) = *(void *)(v11 + 64);
        *((void *)v10 + 9) = v23;
        uint64_t v24 = *(void *)(v11 + 88);
        *((void *)v10 + 10) = *(void *)(v11 + 80);
        *((void *)v10 + 11) = v24;
        uint64_t v25 = *(void *)(v11 + 104);
        *((void *)v10 + 12) = *(void *)(v11 + 96);
        *((void *)v10 + 13) = v25;
        *((void *)v10 + 14) = *(void *)(v11 + 112);
        v10[120] = *(unsigned char *)(v11 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v10[121] = v18;
    }
    else
    {
      char v21 = *(unsigned char *)(v11 + 57);
      if (v21)
      {
        long long v22 = *(_OWORD *)(v11 + 24);
        *(_OWORD *)(v10 + 24) = v22;
        (**(void (***)(char *, uint64_t))(v22 - 8))(v10, v11);
      }
      else
      {
        uint64_t v26 = *(void *)(v11 + 8);
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = v26;
        uint64_t v27 = *(void *)(v11 + 24);
        *((void *)v10 + 2) = *(void *)(v11 + 16);
        *((void *)v10 + 3) = v27;
        uint64_t v28 = *(void *)(v11 + 40);
        *((void *)v10 + 4) = *(void *)(v11 + 32);
        *((void *)v10 + 5) = v28;
        *((void *)v10 + 6) = *(void *)(v11 + 48);
        v10[56] = *(unsigned char *)(v11 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v10[57] = v21;
    }
    v10[122] = v12;
    uint64_t v29 = *(void *)(v11 + 136);
    *((void *)v10 + 16) = *(void *)(v11 + 128);
    *((void *)v10 + 17) = v29;
    uint64_t v30 = *(void *)(v11 + 152);
    *((void *)v10 + 18) = *(void *)(v11 + 144);
    *((void *)v10 + 19) = v30;
    uint64_t v31 = (int *)type metadata accessor for RCSMessage(0);
    uint64_t v32 = v31[7];
    uint64_t v33 = &v10[v32];
    uint64_t v34 = (void *)(v11 + v32);
    uint64_t v35 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v38 = v35;
    swift_bridgeObjectRetain();
    uint64_t v39 = v34;
    swift_bridgeObjectRetain();
    if (v37(v34, 1, v38))
    {
      uint64_t v40 = sub_551C((uint64_t *)&unk_128170);
      memcpy(v33, v34, *(void *)(*(void *)(v40 - 8) + 64));
      uint64_t v41 = v105;
      uint64_t v42 = v106;
      uint64_t v20 = v104;
    }
    else
    {
      uint64_t v103 = v36;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v43 = v34[1];
          long long v44 = v33;
          *(void *)uint64_t v33 = *v34;
          *((void *)v33 + 1) = v43;
          *((void *)v33 + 2) = v34[2];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_23;
        case 1u:
          uint64_t v101 = v38;
          uint64_t v45 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v46 = *(void *)(v45 - 8);
          uint64_t v100 = v39;
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v46 + 48))(v39, 1, v45))
          {
            uint64_t v47 = sub_551C(&qword_1283F0);
            long long v48 = v33;
            memcpy(v33, v39, *(void *)(*(void *)(v47 - 8) + 64));
            uint64_t v49 = v39;
          }
          else
          {
            long long v48 = v33;
            *(_OWORD *)uint64_t v33 = *(_OWORD *)v39;
            *((void *)v33 + 2) = v39[2];
            uint64_t v71 = *(int *)(v45 + 24);
            uint64_t v98 = &v33[v71];
            uint64_t v99 = (char *)v39 + v71;
            uint64_t v72 = sub_F6DC0();
            v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            v96(v98, v99, v72);
            uint64_t v49 = v100;
            uint64_t v73 = *(int *)(v45 + 28);
            uint64_t v74 = &v33[v73];
            long long v75 = (char *)v100 + v73;
            uint64_t v76 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v33, 0, 1, v45);
          }
          uint64_t v20 = v104;
          uint64_t v77 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v78 = (char *)v48 + v77;
          uint64_t v79 = (char *)v49 + v77;
          *(_OWORD *)uint64_t v78 = *(_OWORD *)((char *)v49 + v77);
          uint64_t v81 = *(void *)((char *)v49 + v77 + 16);
          uint64_t v80 = *(void *)((char *)v49 + v77 + 24);
          *((void *)v78 + 2) = v81;
          *((void *)v78 + 3) = v80;
          *((void *)v78 + 4) = *((void *)v79 + 4);
          uint64_t v82 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v83 = v82[7];
          uint64_t v95 = &v79[v83];
          uint64_t v97 = &v78[v83];
          uint64_t v94 = sub_F6DC0();
          uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v84(v97, v95, v94);
          long long v44 = v33;
          uint64_t v85 = v82[8];
          uint64_t v86 = &v78[v85];
          long long v87 = &v79[v85];
          uint64_t v88 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
          v78[v82[9]] = v79[v82[9]];
          uint64_t v89 = v82[10];
          uint64_t v90 = &v78[v89];
          v91 = &v79[v89];
          v90[8] = v91[8];
          *(void *)uint64_t v90 = *(void *)v91;
          uint64_t v92 = sub_551C(&qword_128218);
          *(void *)((char *)v44 + *(int *)(v92 + 48)) = *(void *)((char *)v100 + *(int *)(v92 + 48));
          swift_retain();
          uint64_t v38 = v101;
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = v105;
          uint64_t v42 = v106;
          uint64_t v36 = v103;
          goto LABEL_25;
        case 2u:
          long long v44 = v33;
          *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
          uint64_t v50 = v34[3];
          *((void *)v33 + 2) = v34[2];
          *((void *)v33 + 3) = v50;
          *((void *)v33 + 4) = v34[4];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_23;
        case 3u:
          uint64_t v102 = v38;
          long long v51 = *(_OWORD *)(v34 + 3);
          long long v44 = v33;
          *(_OWORD *)(v33 + 24) = v51;
          (**(void (***)(char *, void *))(v51 - 8))(v33, v34);
          uint64_t v52 = v34[6];
          *((void *)v33 + 5) = v34[5];
          *((void *)v33 + 6) = v52;
          uint64_t v53 = v34;
          v44[7] = v34[7];
          uint64_t v54 = v34[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v54)
          {
            v44[8] = v34[8];
            v44[9] = v54;
            uint64_t v56 = v34[10];
            unint64_t v55 = v34[11];
            swift_bridgeObjectRetain();
            sub_2A4E4(v56, v55);
            v44[10] = v56;
            v44[11] = v55;
            uint64_t v57 = v53[13];
            v44[12] = v53[12];
            v44[13] = v57;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v93 = *((_OWORD *)v34 + 5);
            *((_OWORD *)v44 + 4) = *((_OWORD *)v34 + 4);
            *((_OWORD *)v44 + 5) = v93;
            *((_OWORD *)v44 + 6) = *((_OWORD *)v34 + 6);
          }
          uint64_t v41 = v105;
          uint64_t v42 = v106;
          uint64_t v20 = v104;
          uint64_t v38 = v102;
          swift_storeEnumTagMultiPayload();
          goto LABEL_25;
        case 5u:
        case 6u:
        case 7u:
          long long v44 = v33;
          *(void *)uint64_t v33 = *v34;
          swift_retain();
LABEL_23:
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = v105;
          uint64_t v42 = v106;
          break;
        default:
          long long v44 = v33;
          memcpy(v33, v34, *(void *)(v36 + 64));
          uint64_t v41 = v105;
          uint64_t v42 = v106;
          break;
      }
      uint64_t v20 = v104;
LABEL_25:
      (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v38);
    }
    uint64_t v58 = v31[8];
    uint64_t v59 = &v10[v58];
    uint64_t v60 = v11 + v58;
    uint64_t v61 = *(void *)(v11 + v58 + 24);
    if (v61)
    {
      uint64_t v62 = *(void *)(v60 + 32);
      *((void *)v59 + 3) = v61;
      *((void *)v59 + 4) = v62;
      (**(void (***)(void))(v61 - 8))();
    }
    else
    {
      long long v63 = *(_OWORD *)(v60 + 16);
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v63;
      *((void *)v59 + 4) = *(void *)(v60 + 32);
    }
    *(void *)&v10[v31[9]] = *(void *)(v11 + v31[9]);
    v10[v31[10]] = *(unsigned char *)(v11 + v31[10]);
    v10[v31[11]] = *(unsigned char *)(v11 + v31[11]);
    *(void *)&v10[v31[12]] = *(void *)(v11 + v31[12]);
    uint64_t v64 = v31[13];
    uint64_t v65 = &v10[v64];
    uint64_t v66 = (void *)(v11 + v64);
    uint64_t v67 = v66[1];
    *(void *)uint64_t v65 = *v66;
    *((void *)v65 + 1) = v67;
    uint64_t v68 = v66[3];
    *((void *)v65 + 2) = v66[2];
    *((void *)v65 + 3) = v68;
    uint64_t v69 = *(int *)(v42 + 48);
    *(void *)&v20[*(int *)(v42 + 44)] = *(char **)((char *)v41 + *(int *)(v42 + 44));
    *(void *)&v20[v69] = *(char **)((char *)v41 + v69);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return v20;
}

uint64_t sub_B8718(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 40);
  if (v4[122])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4[121])
    {
      uint64_t v5 = (uint64_t)(v4 + 64);
LABEL_6:
      sub_6BEC(v5);
      goto LABEL_8;
    }
  }
  else if (v4[57])
  {
    uint64_t v5 = (uint64_t)a1 + *(int *)(a2 + 40);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for RCSMessage(0);
  uint64_t v7 = &v4[*(int *)(v6 + 28)];
  uint64_t v8 = type metadata accessor for RCSMessage.Content(0);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      case 1u:
        uint64_t v9 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = (char *)v7 + *(int *)(v9 + 24);
          uint64_t v11 = sub_F6DC0();
          (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
          char v12 = (char *)v7 + *(int *)(v9 + 28);
          uint64_t v13 = sub_F6EE0();
          (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        }
        uint64_t v14 = (char *)v7 + *(int *)(type metadata accessor for RCSFile(0) + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v16 = &v14[*(int *)(v15 + 28)];
        uint64_t v17 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        char v18 = &v14[*(int *)(v15 + 32)];
        uint64_t v19 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        sub_551C(&qword_128218);
        goto LABEL_14;
      case 3u:
        sub_6BEC((uint64_t)v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v7[9])
        {
          swift_bridgeObjectRelease();
          sub_2852C(v7[10], v7[11]);
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
      case 6u:
      case 7u:
LABEL_14:
        swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v20 = (uint64_t)&v4[*(int *)(v6 + 32)];
  if (*(void *)(v20 + 24)) {
    sub_6BEC(v20);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void *sub_B8B04(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(a2 + v8 + 122);
  id v12 = v6;
  id v13 = v7;
  uint64_t v103 = a3;
  uint64_t v104 = a2;
  uint64_t v102 = a1;
  if (v11)
  {
    uint64_t v14 = *(void *)(v10 + 8);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v14;
    uint64_t v15 = *(void *)(v10 + 24);
    *((void *)v9 + 2) = *(void *)(v10 + 16);
    *((void *)v9 + 3) = v15;
    uint64_t v16 = *(void *)(v10 + 40);
    *((void *)v9 + 4) = *(void *)(v10 + 32);
    *((void *)v9 + 5) = v16;
    *((void *)v9 + 6) = *(void *)(v10 + 48);
    v9[56] = *(unsigned char *)(v10 + 56);
    char v17 = *(unsigned char *)(v10 + 121);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      long long v18 = *(_OWORD *)(v10 + 88);
      *(_OWORD *)(v9 + 88) = v18;
      (**(void (***)(uint64_t, uint64_t))(v18 - 8))((uint64_t)(v9 + 64), v10 + 64);
    }
    else
    {
      uint64_t v21 = *(void *)(v10 + 72);
      *((void *)v9 + 8) = *(void *)(v10 + 64);
      *((void *)v9 + 9) = v21;
      uint64_t v22 = *(void *)(v10 + 88);
      *((void *)v9 + 10) = *(void *)(v10 + 80);
      *((void *)v9 + 11) = v22;
      uint64_t v23 = *(void *)(v10 + 104);
      *((void *)v9 + 12) = *(void *)(v10 + 96);
      *((void *)v9 + 13) = v23;
      *((void *)v9 + 14) = *(void *)(v10 + 112);
      v9[120] = *(unsigned char *)(v10 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v9[121] = v17;
  }
  else
  {
    char v19 = *(unsigned char *)(v10 + 57);
    if (v19)
    {
      long long v20 = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 24) = v20;
      (**(void (***)(char *, uint64_t))(v20 - 8))(v9, v10);
    }
    else
    {
      uint64_t v24 = *(void *)(v10 + 8);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v24;
      uint64_t v25 = *(void *)(v10 + 24);
      *((void *)v9 + 2) = *(void *)(v10 + 16);
      *((void *)v9 + 3) = v25;
      uint64_t v26 = *(void *)(v10 + 40);
      *((void *)v9 + 4) = *(void *)(v10 + 32);
      *((void *)v9 + 5) = v26;
      *((void *)v9 + 6) = *(void *)(v10 + 48);
      v9[56] = *(unsigned char *)(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v9[57] = v19;
  }
  v9[122] = v11;
  uint64_t v27 = *(void *)(v10 + 136);
  *((void *)v9 + 16) = *(void *)(v10 + 128);
  *((void *)v9 + 17) = v27;
  uint64_t v28 = *(void *)(v10 + 152);
  *((void *)v9 + 18) = *(void *)(v10 + 144);
  *((void *)v9 + 19) = v28;
  uint64_t v100 = type metadata accessor for RCSMessage(0);
  uint64_t v29 = *(int *)(v100 + 28);
  uint64_t v30 = &v9[v29];
  uint64_t v31 = (void *)(v10 + v29);
  uint64_t v32 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34(v31, 1, v32))
  {
    uint64_t v35 = sub_551C((uint64_t *)&unk_128170);
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v37 = v103;
    uint64_t v36 = v104;
    uint64_t v39 = (int *)v100;
    uint64_t v38 = v102;
  }
  else
  {
    uint64_t v99 = v33;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v40 = v31[1];
        *(void *)uint64_t v30 = *v31;
        *((void *)v30 + 1) = v40;
        *((void *)v30 + 2) = v31[2];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_21;
      case 1u:
        uint64_t v41 = v31;
        uint64_t v98 = v32;
        uint64_t v42 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v43 = *(void *)(v42 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
        {
          uint64_t v44 = sub_551C(&qword_1283F0);
          uint64_t v45 = v30;
          memcpy(v30, v41, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          uint64_t v45 = v30;
          *(_OWORD *)uint64_t v30 = *(_OWORD *)v41;
          *((void *)v30 + 2) = v41[2];
          uint64_t v55 = *(int *)(v42 + 24);
          uint64_t v95 = &v30[v55];
          uint64_t v97 = (char *)v41 + v55;
          uint64_t v56 = sub_F6DC0();
          long long v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
          swift_bridgeObjectRetain();
          v93(v95, v97, v56);
          uint64_t v57 = *(int *)(v42 + 28);
          uint64_t v58 = &v30[v57];
          uint64_t v59 = (char *)v41 + v57;
          uint64_t v60 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v30, 0, 1, v42);
        }
        uint64_t v39 = (int *)v100;
        uint64_t v61 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v62 = (char *)v45 + v61;
        long long v63 = (char *)v41 + v61;
        *(_OWORD *)uint64_t v62 = *(_OWORD *)((char *)v41 + v61);
        uint64_t v65 = *(void *)((char *)v41 + v61 + 16);
        uint64_t v64 = *(void *)((char *)v41 + v61 + 24);
        *((void *)v62 + 2) = v65;
        *((void *)v62 + 3) = v64;
        *((void *)v62 + 4) = *((void *)v63 + 4);
        uint64_t v66 = type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v67 = *(int *)(v66 + 28);
        uint64_t v101 = v41;
        uint64_t v68 = (int *)v66;
        uint64_t v94 = &v63[v67];
        v96 = &v62[v67];
        uint64_t v69 = sub_F6DC0();
        uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v70(v96, v94, v69);
        uint64_t v71 = v68[8];
        uint64_t v72 = &v62[v71];
        uint64_t v73 = &v63[v71];
        uint64_t v74 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
        v62[v68[9]] = v63[v68[9]];
        uint64_t v75 = v68[10];
        uint64_t v76 = &v62[v75];
        uint64_t v77 = &v63[v75];
        v76[8] = v77[8];
        *(void *)uint64_t v76 = *(void *)v77;
        uint64_t v78 = sub_551C(&qword_128218);
        *(void *)&v30[*(int *)(v78 + 48)] = *(void *)((char *)v101 + *(int *)(v78 + 48));
        swift_retain();
        uint64_t v32 = v98;
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = v103;
        uint64_t v36 = v104;
        goto LABEL_27;
      case 2u:
        *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
        uint64_t v46 = v31[3];
        *((void *)v30 + 2) = v31[2];
        *((void *)v30 + 3) = v46;
        *((void *)v30 + 4) = v31[4];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_21;
      case 3u:
        uint64_t v47 = v31;
        uint64_t v48 = v32;
        long long v49 = *(_OWORD *)(v31 + 3);
        *(_OWORD *)(v30 + 24) = v49;
        (**(void (***)(char *, void *))(v49 - 8))(v30, v31);
        uint64_t v50 = v31[6];
        *((void *)v30 + 5) = v31[5];
        *((void *)v30 + 6) = v50;
        *((void *)v30 + 7) = v31[7];
        uint64_t v51 = v31[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v51)
        {
          *((void *)v30 + 8) = v31[8];
          *((void *)v30 + 9) = v51;
          uint64_t v52 = v31[10];
          unint64_t v53 = v31[11];
          swift_bridgeObjectRetain();
          sub_2A4E4(v52, v53);
          *((void *)v30 + 10) = v52;
          *((void *)v30 + 11) = v53;
          uint64_t v54 = v47[13];
          *((void *)v30 + 12) = v47[12];
          *((void *)v30 + 13) = v54;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v79 = *((_OWORD *)v31 + 5);
          *((_OWORD *)v30 + 4) = *((_OWORD *)v31 + 4);
          *((_OWORD *)v30 + 5) = v79;
          *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
        }
        uint64_t v37 = v103;
        uint64_t v36 = v104;
        uint64_t v39 = (int *)v100;
        uint64_t v32 = v48;
        swift_storeEnumTagMultiPayload();
LABEL_27:
        uint64_t v38 = v102;
        uint64_t v33 = v99;
        goto LABEL_28;
      case 5u:
      case 6u:
      case 7u:
        *(void *)uint64_t v30 = *v31;
        swift_retain();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        uint64_t v37 = v103;
        uint64_t v36 = v104;
        uint64_t v38 = v102;
        goto LABEL_22;
      default:
        memcpy(v30, v31, *(void *)(v33 + 64));
        uint64_t v37 = v103;
        uint64_t v36 = v104;
        uint64_t v38 = v102;
LABEL_22:
        uint64_t v39 = (int *)v100;
LABEL_28:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        break;
    }
  }
  uint64_t v80 = v39[8];
  uint64_t v81 = &v9[v80];
  uint64_t v82 = v10 + v80;
  uint64_t v83 = *(void *)(v10 + v80 + 24);
  if (v83)
  {
    uint64_t v84 = *(void *)(v82 + 32);
    *((void *)v81 + 3) = v83;
    *((void *)v81 + 4) = v84;
    (**(void (***)(void))(v83 - 8))();
  }
  else
  {
    long long v85 = *(_OWORD *)(v82 + 16);
    *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
    *((_OWORD *)v81 + 1) = v85;
    *((void *)v81 + 4) = *(void *)(v82 + 32);
  }
  *(void *)&v9[v39[9]] = *(void *)(v10 + v39[9]);
  v9[v39[10]] = *(unsigned char *)(v10 + v39[10]);
  v9[v39[11]] = *(unsigned char *)(v10 + v39[11]);
  *(void *)&v9[v39[12]] = *(void *)(v10 + v39[12]);
  uint64_t v86 = v39[13];
  long long v87 = &v9[v86];
  uint64_t v88 = (void *)(v10 + v86);
  uint64_t v89 = v88[1];
  *(void *)long long v87 = *v88;
  *((void *)v87 + 1) = v89;
  uint64_t v90 = v88[3];
  *((void *)v87 + 2) = v88[2];
  *((void *)v87 + 3) = v90;
  uint64_t v91 = *(int *)(v37 + 48);
  *(void *)((char *)v38 + *(int *)(v37 + 44)) = *(void *)(v36 + *(int *)(v37 + 44));
  *(void *)((char *)v38 + v91) = *(void *)(v36 + v91);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return v38;
}

uint64_t sub_B93B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v116 = a3;
  uint64_t v117 = a2;
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  if (a1 != a2)
  {
    sub_27EF8(a1 + v12);
    char v15 = *(unsigned char *)(v14 + 122);
    if (v15)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = *(void *)(v14 + 8);
      *(void *)(v13 + 16) = *(void *)(v14 + 16);
      *(void *)(v13 + 24) = *(void *)(v14 + 24);
      *(void *)(v13 + 32) = *(void *)(v14 + 32);
      *(void *)(v13 + 40) = *(void *)(v14 + 40);
      *(void *)(v13 + 48) = *(void *)(v14 + 48);
      *(unsigned char *)(v13 + 56) = *(unsigned char *)(v14 + 56);
      char v16 = *(unsigned char *)(v14 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16)
      {
        uint64_t v17 = *(void *)(v14 + 88);
        *(void *)(v13 + 88) = v17;
        *(void *)(v13 + 96) = *(void *)(v14 + 96);
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(v13 + 64, v14 + 64);
      }
      else
      {
        *(void *)(v13 + 64) = *(void *)(v14 + 64);
        *(void *)(v13 + 72) = *(void *)(v14 + 72);
        *(void *)(v13 + 80) = *(void *)(v14 + 80);
        *(void *)(v13 + 88) = *(void *)(v14 + 88);
        *(void *)(v13 + 96) = *(void *)(v14 + 96);
        *(void *)(v13 + 104) = *(void *)(v14 + 104);
        *(void *)(v13 + 112) = *(void *)(v14 + 112);
        *(unsigned char *)(v13 + 120) = *(unsigned char *)(v14 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(v13 + 121) = v16;
    }
    else
    {
      char v18 = *(unsigned char *)(v14 + 57);
      if (v18)
      {
        uint64_t v19 = *(void *)(v14 + 24);
        *(void *)(v13 + 24) = v19;
        *(void *)(v13 + 32) = *(void *)(v14 + 32);
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))(v13, v14);
      }
      else
      {
        *(void *)uint64_t v13 = *(void *)v14;
        *(void *)(v13 + 8) = *(void *)(v14 + 8);
        *(void *)(v13 + 16) = *(void *)(v14 + 16);
        *(void *)(v13 + 24) = *(void *)(v14 + 24);
        *(void *)(v13 + 32) = *(void *)(v14 + 32);
        *(void *)(v13 + 40) = *(void *)(v14 + 40);
        *(void *)(v13 + 48) = *(void *)(v14 + 48);
        *(unsigned char *)(v13 + 56) = *(unsigned char *)(v14 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(v13 + 57) = v18;
    }
    *(unsigned char *)(v13 + 122) = v15;
  }
  *(void *)(v13 + 128) = *(void *)(v14 + 128);
  *(void *)(v13 + 136) = *(void *)(v14 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 144) = *(void *)(v14 + 144);
  *(void *)(v13 + 152) = *(void *)(v14 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v20 = (int *)type metadata accessor for RCSMessage(0);
  uint64_t v21 = v20[7];
  uint64_t v22 = (void *)(v13 + v21);
  uint64_t v23 = (void *)(v14 + v21);
  uint64_t v24 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v112 = *(void *)(v24 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v112 + 48);
  uint64_t v26 = v22;
  LODWORD(v22) = v25(v22, 1, v24);
  int v27 = v25(v23, 1, v24);
  if (v22)
  {
    if (!v27)
    {
      uint64_t v28 = v26;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *uint64_t v26 = *v23;
          v26[1] = v23[1];
          v26[2] = v23[2];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_40;
        case 1u:
          uint64_t v31 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v32 = *(void *)(v31 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v23, 1, v31))
          {
            uint64_t v33 = sub_551C(&qword_1283F0);
            memcpy(v26, v23, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            *uint64_t v26 = *v23;
            v26[1] = v23[1];
            v26[2] = v23[2];
            uint64_t v46 = *(int *)(v31 + 24);
            uint64_t v104 = (char *)v23 + v46;
            uint64_t v108 = (char *)v26 + v46;
            uint64_t v97 = sub_F6DC0();
            uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
            swift_bridgeObjectRetain();
            v94(v108, v104, v97);
            uint64_t v28 = v26;
            uint64_t v47 = *(int *)(v31 + 28);
            uint64_t v105 = (char *)v23 + v47;
            uint64_t v109 = (char *)v26 + v47;
            uint64_t v48 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v109, v105, v48);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v31);
          }
          uint64_t v49 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v50 = (void *)((char *)v28 + v49);
          uint64_t v51 = (char *)v23 + v49;
          *uint64_t v50 = *(void *)((char *)v23 + v49);
          v50[1] = *(void *)((char *)v23 + v49 + 8);
          v50[2] = *(void *)((char *)v23 + v49 + 16);
          v50[3] = *(void *)((char *)v23 + v49 + 24);
          v50[4] = *(void *)((char *)v23 + v49 + 32);
          long long v110 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v52 = v110[7];
          uint64_t v95 = &v51[v52];
          uint64_t v98 = (char *)v50 + v52;
          uint64_t v93 = sub_F6DC0();
          uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v92(v98, v95, v93);
          uint64_t v28 = v26;
          uint64_t v53 = v110[8];
          uint64_t v101 = &v51[v53];
          uint64_t v106 = (char *)v50 + v53;
          uint64_t v54 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v106, v101, v54);
          *((unsigned char *)v50 + v110[9]) = v51[v110[9]];
          uint64_t v55 = v110[10];
          uint64_t v56 = (char *)v50 + v55;
          uint64_t v57 = &v51[v55];
          char v58 = v57[8];
          *(void *)uint64_t v56 = *(void *)v57;
          v56[8] = v58;
          uint64_t v59 = sub_551C(&qword_128218);
          *(void *)((char *)v26 + *(int *)(v59 + 48)) = *(void *)((char *)v23 + *(int *)(v59 + 48));
          swift_retain();
          goto LABEL_40;
        case 2u:
          *uint64_t v26 = *v23;
          v26[1] = v23[1];
          v26[2] = v23[2];
          v26[3] = v23[3];
          v26[4] = v23[4];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_40;
        case 3u:
          uint64_t v34 = v23[3];
          v26[3] = v34;
          v26[4] = v23[4];
          (**(void (***)(void *, void *))(v34 - 8))(v26, v23);
          v26[5] = v23[5];
          v26[6] = v23[6];
          v26[7] = v23[7];
          uint64_t v35 = v23[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v35)
          {
            v26[8] = v23[8];
            v26[9] = v23[9];
            uint64_t v37 = v23[10];
            unint64_t v36 = v23[11];
            swift_bridgeObjectRetain();
            sub_2A4E4(v37, v36);
            v26[10] = v37;
            v26[11] = v36;
            v26[12] = v23[12];
            v26[13] = v23[13];
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v60 = *((_OWORD *)v23 + 4);
            long long v61 = *((_OWORD *)v23 + 6);
            *((_OWORD *)v26 + 5) = *((_OWORD *)v23 + 5);
            *((_OWORD *)v26 + 6) = v61;
            *((_OWORD *)v26 + 4) = v60;
          }
          goto LABEL_40;
        case 5u:
        case 6u:
        case 7u:
          *uint64_t v26 = *v23;
          swift_retain();
LABEL_40:
          swift_storeEnumTagMultiPayload();
          uint64_t v38 = v112;
          break;
        default:
          uint64_t v38 = v112;
          memcpy(v26, v23, *(void *)(v112 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v28, 0, 1, v24);
      goto LABEL_42;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    sub_288DC((uint64_t)v26, type metadata accessor for RCSMessage.Content);
LABEL_18:
    size_t v29 = *(void *)(*(void *)(sub_551C((uint64_t *)&unk_128170) - 8) + 64);
    uint64_t v30 = v26;
LABEL_19:
    memcpy(v30, v23, v29);
    goto LABEL_42;
  }
  if (a1 != v117)
  {
    sub_288DC((uint64_t)v26, type metadata accessor for RCSMessage.Content);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v26 = *v23;
        v26[1] = v23[1];
        v26[2] = v23[2];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v39 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48))(v23, 1, v39))
        {
          uint64_t v41 = sub_551C(&qword_1283F0);
          memcpy(v26, v23, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          *uint64_t v26 = *v23;
          v26[1] = v23[1];
          v26[2] = v23[2];
          uint64_t v72 = *(int *)(v39 + 24);
          uint64_t v111 = (char *)v23 + v72;
          uint64_t v113 = (char *)v26 + v72;
          uint64_t v102 = sub_F6DC0();
          uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          v99(v113, v111, v102);
          uint64_t v73 = *(int *)(v39 + 28);
          uint64_t v74 = (char *)v26 + v73;
          uint64_t v114 = (char *)v23 + v73;
          uint64_t v75 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v74, v114, v75);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v39);
        }
        uint64_t v76 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v91 = v26;
        uint64_t v77 = (void *)((char *)v26 + v76);
        uint64_t v78 = (char *)v23 + v76;
        void *v77 = *(void *)((char *)v23 + v76);
        v77[1] = *(void *)((char *)v23 + v76 + 8);
        v77[2] = *(void *)((char *)v23 + v76 + 16);
        v77[3] = *(void *)((char *)v23 + v76 + 24);
        v77[4] = *(void *)((char *)v23 + v76 + 32);
        long long v79 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v80 = v79[7];
        uint64_t v103 = &v78[v80];
        long long v107 = (char *)v77 + v80;
        uint64_t v100 = sub_F6DC0();
        v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v96(v107, v103, v100);
        uint64_t v81 = v79[8];
        uint64_t v82 = (char *)v77 + v81;
        uint64_t v115 = &v78[v81];
        uint64_t v83 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v82, v115, v83);
        *((unsigned char *)v77 + v79[9]) = v78[v79[9]];
        uint64_t v84 = v79[10];
        long long v85 = (char *)v77 + v84;
        uint64_t v86 = &v78[v84];
        char v87 = v86[8];
        *(void *)long long v85 = *(void *)v86;
        v85[8] = v87;
        uint64_t v88 = sub_551C(&qword_128218);
        *(void *)((char *)v91 + *(int *)(v88 + 48)) = *(void *)((char *)v23 + *(int *)(v88 + 48));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *uint64_t v26 = *v23;
        v26[1] = v23[1];
        v26[2] = v23[2];
        v26[3] = v23[3];
        v26[4] = v23[4];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v42 = v23[3];
        v26[3] = v42;
        v26[4] = v23[4];
        (**(void (***)(void *, void *))(v42 - 8))(v26, v23);
        v26[5] = v23[5];
        v26[6] = v23[6];
        v26[7] = v23[7];
        uint64_t v43 = v23[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v43)
        {
          v26[8] = v23[8];
          v26[9] = v23[9];
          uint64_t v45 = v23[10];
          unint64_t v44 = v23[11];
          swift_bridgeObjectRetain();
          sub_2A4E4(v45, v44);
          v26[10] = v45;
          v26[11] = v44;
          v26[12] = v23[12];
          v26[13] = v23[13];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v89 = *((_OWORD *)v23 + 4);
          long long v90 = *((_OWORD *)v23 + 6);
          *((_OWORD *)v26 + 5) = *((_OWORD *)v23 + 5);
          *((_OWORD *)v26 + 6) = v90;
          *((_OWORD *)v26 + 4) = v89;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 6u:
      case 7u:
        *uint64_t v26 = *v23;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        size_t v29 = *(void *)(v112 + 64);
        uint64_t v30 = v26;
        goto LABEL_19;
    }
  }
LABEL_42:
  uint64_t v62 = v20[8];
  uint64_t v63 = v13 + v62;
  uint64_t v64 = (long long *)(v14 + v62);
  uint64_t v65 = *(void *)(v14 + v62 + 24);
  if (!*(void *)(v13 + v62 + 24))
  {
    if (v65)
    {
      *(void *)(v63 + 24) = v65;
      *(void *)(v63 + 32) = *((void *)v64 + 4);
      (**(void (***)(uint64_t, long long *))(v65 - 8))(v63, v64);
      goto LABEL_49;
    }
LABEL_48:
    long long v66 = *v64;
    long long v67 = v64[1];
    *(void *)(v63 + 32) = *((void *)v64 + 4);
    *(_OWORD *)uint64_t v63 = v66;
    *(_OWORD *)(v63 + 16) = v67;
    goto LABEL_49;
  }
  if (!v65)
  {
    sub_6BEC(v63);
    goto LABEL_48;
  }
  sub_2A890((uint64_t *)v63, (uint64_t *)v64);
LABEL_49:
  *(void *)(v13 + v20[9]) = *(void *)(v14 + v20[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + v20[10]) = *(unsigned char *)(v14 + v20[10]);
  *(unsigned char *)(v13 + v20[11]) = *(unsigned char *)(v14 + v20[11]);
  *(void *)(v13 + v20[12]) = *(void *)(v14 + v20[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = v20[13];
  uint64_t v69 = (void *)(v13 + v68);
  uint64_t v70 = v14 + v68;
  *uint64_t v69 = *(void *)(v14 + v68);
  v69[1] = *(void *)(v14 + v68 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69[2] = *(void *)(v70 + 16);
  v69[3] = *(void *)(v70 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v116 + 44)) = *(void *)(v117 + *(int *)(v116 + 44));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + *(int *)(v116 + 48)) = *(void *)(v117 + *(int *)(v116 + 48));
  return a1;
}

_OWORD *sub_BA2C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  id v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)v7 + 107) = *(_OWORD *)((char *)a2 + v6 + 107);
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 96);
  long long v10 = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[6] = v9;
  long long v11 = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[4] = v10;
  long long v12 = *(_OWORD *)((char *)a2 + v6 + 16);
  *uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v12;
  v7[2] = v11;
  long long v13 = *(_OWORD *)((char *)a2 + v6 + 144);
  v7[8] = *(_OWORD *)((char *)a2 + v6 + 128);
  v7[9] = v13;
  uint64_t v14 = (int *)type metadata accessor for RCSMessage(0);
  uint64_t v15 = v14[7];
  char v16 = (void *)((char *)v7 + v15);
  uint64_t v17 = &v8[v15];
  uint64_t v18 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_551C((uint64_t *)&unk_128170);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v57 = v19;
      uint64_t v21 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      uint64_t v59 = *(void *)(v21 - 8);
      uint64_t v58 = v3;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v17, 1, v21))
      {
        uint64_t v22 = sub_551C(&qword_1283F0);
        memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        *char v16 = *(void *)v17;
        *(_OWORD *)(v16 + 1) = *(_OWORD *)(v17 + 8);
        uint64_t v23 = *(int *)(v21 + 24);
        uint64_t v24 = (char *)v16 + v23;
        uint64_t v53 = &v17[v23];
        uint64_t v25 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v24, v53, v25);
        uint64_t v26 = *(int *)(v21 + 28);
        int v27 = (char *)v16 + v26;
        uint64_t v54 = &v17[v26];
        uint64_t v28 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v27, v54, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v16, 0, 1, v21);
      }
      uint64_t v29 = *(int *)(type metadata accessor for RCSFile(0) + 20);
      long long v60 = v16;
      uint64_t v30 = (char *)v16 + v29;
      uint64_t v31 = &v17[v29];
      *(void *)uint64_t v30 = *(void *)&v17[v29];
      *(_OWORD *)(v30 + 8) = *(_OWORD *)&v17[v29 + 8];
      *(_OWORD *)(v30 + 24) = *(_OWORD *)&v17[v29 + 24];
      uint64_t v32 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
      uint64_t v33 = v32[7];
      uint64_t v51 = &v31[v33];
      uint64_t v55 = &v30[v33];
      uint64_t v34 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v55, v51, v34);
      uint64_t v35 = v32[8];
      uint64_t v52 = &v31[v35];
      uint64_t v56 = &v30[v35];
      uint64_t v36 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v56, v52, v36);
      v30[v32[9]] = v31[v32[9]];
      uint64_t v37 = v32[10];
      uint64_t v38 = &v30[v37];
      char v16 = v60;
      uint64_t v39 = &v31[v37];
      v38[8] = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      uint64_t v40 = sub_551C(&qword_128218);
      *(void *)((char *)v60 + *(int *)(v40 + 48)) = *(void *)&v17[*(int *)(v40 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = v57;
      uint64_t v3 = v58;
    }
    else
    {
      memcpy(v16, v17, *(void *)(v19 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v41 = v14[8];
  uint64_t v42 = (char *)v7 + v41;
  uint64_t v43 = &v8[v41];
  long long v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((void *)v42 + 4) = *((void *)v43 + 4);
  *(void *)((char *)v7 + v14[9]) = *(void *)&v8[v14[9]];
  *((unsigned char *)v7 + v14[10]) = v8[v14[10]];
  *((unsigned char *)v7 + v14[11]) = v8[v14[11]];
  *(void *)((char *)v7 + v14[12]) = *(void *)&v8[v14[12]];
  uint64_t v45 = v14[13];
  uint64_t v46 = (_OWORD *)((char *)v7 + v45);
  uint64_t v47 = &v8[v45];
  long long v48 = *((_OWORD *)v47 + 1);
  _OWORD *v46 = *(_OWORD *)v47;
  v46[1] = v48;
  uint64_t v49 = *(int *)(v3 + 48);
  *(void *)((char *)a1 + *(int *)(v3 + 44)) = *(void *)((char *)a2 + *(int *)(v3 + 44));
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);
  return a1;
}

void **sub_BA758(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a1[1];
  a1[1] = a2[1];

  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v8 = *(int *)(a3 + 40);
  long long v9 = (char *)a1 + v8;
  long long v10 = (char *)a2 + v8;
  if (a1 != a2)
  {
    sub_27EF8((uint64_t)a1 + v8);
    long long v11 = *((_OWORD *)v10 + 5);
    *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
    *((_OWORD *)v9 + 5) = v11;
    *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
    *(_OWORD *)(v9 + 107) = *(_OWORD *)(v10 + 107);
    long long v12 = *((_OWORD *)v10 + 1);
    *(_OWORD *)long long v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v12;
    long long v13 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v13;
  }
  uint64_t v14 = *((void *)v10 + 17);
  *((void *)v9 + 16) = *((void *)v10 + 16);
  *((void *)v9 + 17) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v10 + 19);
  *((void *)v9 + 18) = *((void *)v10 + 18);
  *((void *)v9 + 19) = v15;
  swift_bridgeObjectRelease();
  char v16 = (int *)type metadata accessor for RCSMessage(0);
  uint64_t v17 = v16[7];
  uint64_t v18 = &v9[v17];
  uint64_t v19 = &v10[v17];
  uint64_t v20 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v89 = *(void *)(v20 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  __dst = v18;
  LODWORD(v18) = v21(v18, 1, v20);
  uint64_t v92 = v20;
  int v22 = v21(v19, 1, v20);
  if (v18)
  {
    if (v22)
    {
      size_t v23 = *(void *)(*(void *)(sub_551C((uint64_t *)&unk_128170) - 8) + 64);
      uint64_t v24 = __dst;
LABEL_8:
      memcpy(v24, v19, v23);
LABEL_9:
      uint64_t v25 = v94;
      goto LABEL_21;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v26))
      {
        uint64_t v28 = sub_551C(&qword_1283F0);
        memcpy(__dst, v19, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        void *__dst = *(void *)v19;
        *(_OWORD *)(__dst + 1) = *(_OWORD *)(v19 + 8);
        uint64_t v34 = *(int *)(v26 + 24);
        uint64_t v35 = (char *)__dst + v34;
        long long v85 = &v19[v34];
        uint64_t v36 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v35, v85, v36);
        uint64_t v37 = *(int *)(v26 + 28);
        uint64_t v38 = (char *)__dst + v37;
        uint64_t v86 = &v19[v37];
        uint64_t v39 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v38, v86, v39);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      }
      uint64_t v40 = *(int *)(type metadata accessor for RCSFile(0) + 20);
      uint64_t v41 = (char *)__dst + v40;
      uint64_t v42 = &v19[v40];
      *(void *)uint64_t v41 = *(void *)&v19[v40];
      *(_OWORD *)(v41 + 8) = *(_OWORD *)&v19[v40 + 8];
      *(_OWORD *)(v41 + 24) = *(_OWORD *)&v19[v40 + 24];
      uint64_t v43 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
      uint64_t v44 = v43[7];
      uint64_t v45 = &v41[v44];
      char v87 = &v42[v44];
      uint64_t v46 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v45, v87, v46);
      uint64_t v47 = v43[8];
      long long v48 = &v41[v47];
      uint64_t v88 = &v42[v47];
      uint64_t v49 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v48, v88, v49);
      v41[v43[9]] = v42[v43[9]];
      uint64_t v50 = v43[10];
      uint64_t v51 = &v41[v50];
      uint64_t v33 = __dst;
      uint64_t v52 = &v42[v50];
      v51[8] = v52[8];
      *(void *)uint64_t v51 = *(void *)v52;
      uint64_t v53 = sub_551C(&qword_128218);
      *(void *)((char *)__dst + *(int *)(v53 + 48)) = *(void *)&v19[*(int *)(v53 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v25 = v94;
      uint64_t v32 = v89;
    }
    else
    {
      uint64_t v32 = v89;
      uint64_t v33 = __dst;
      memcpy(__dst, v19, *(void *)(v89 + 64));
      uint64_t v25 = v94;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v92);
  }
  else
  {
    if (v22)
    {
      sub_288DC((uint64_t)__dst, type metadata accessor for RCSMessage.Content);
      size_t v23 = *(void *)(*(void *)(sub_551C((uint64_t *)&unk_128170) - 8) + 64);
      uint64_t v24 = __dst;
      goto LABEL_8;
    }
    uint64_t v25 = a2;
    if (a1 != a2)
    {
      sub_288DC((uint64_t)__dst, type metadata accessor for RCSMessage.Content);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v29 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v19, 1, v29))
        {
          uint64_t v31 = sub_551C(&qword_1283F0);
          memcpy(__dst, v19, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          void *__dst = *(void *)v19;
          *(_OWORD *)(__dst + 1) = *(_OWORD *)(v19 + 8);
          uint64_t v63 = *(int *)(v29 + 24);
          uint64_t v64 = (char *)__dst + v63;
          uint64_t v65 = &v19[v63];
          uint64_t v66 = sub_F6DC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
          uint64_t v67 = *(int *)(v29 + 28);
          uint64_t v68 = (char *)__dst + v67;
          uint64_t v69 = &v19[v67];
          uint64_t v70 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
        }
        uint64_t v71 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v72 = (char *)__dst + v71;
        uint64_t v73 = &v19[v71];
        *(void *)uint64_t v72 = *(void *)&v19[v71];
        *(_OWORD *)(v72 + 8) = *(_OWORD *)&v19[v71 + 8];
        *(_OWORD *)(v72 + 24) = *(_OWORD *)&v19[v71 + 24];
        uint64_t v74 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v75 = v74[7];
        uint64_t v76 = &v72[v75];
        long long v90 = &v73[v75];
        uint64_t v77 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v76, v90, v77);
        uint64_t v78 = v74[8];
        long long v79 = &v72[v78];
        uint64_t v91 = &v73[v78];
        uint64_t v80 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v79, v91, v80);
        v72[v74[9]] = v73[v74[9]];
        uint64_t v81 = v74[10];
        uint64_t v82 = &v72[v81];
        uint64_t v83 = &v73[v81];
        v82[8] = v83[8];
        *(void *)uint64_t v82 = *(void *)v83;
        uint64_t v84 = sub_551C(&qword_128218);
        *(void *)((char *)__dst + *(int *)(v84 + 48)) = *(void *)&v19[*(int *)(v84 + 48)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_9;
      }
      memcpy(__dst, v19, *(void *)(v89 + 64));
    }
  }
LABEL_21:
  uint64_t v54 = v16[8];
  uint64_t v55 = &v9[v54];
  if (*(void *)&v9[v54 + 24]) {
    sub_6BEC((uint64_t)&v9[v54]);
  }
  long long v56 = *(_OWORD *)&v10[v54 + 16];
  *(_OWORD *)uint64_t v55 = *(_OWORD *)&v10[v54];
  *((_OWORD *)v55 + 1) = v56;
  *((void *)v55 + 4) = *(void *)&v10[v54 + 32];
  *(void *)&v9[v16[9]] = *(void *)&v10[v16[9]];
  swift_bridgeObjectRelease();
  v9[v16[10]] = v10[v16[10]];
  v9[v16[11]] = v10[v16[11]];
  *(void *)&v9[v16[12]] = *(void *)&v10[v16[12]];
  swift_bridgeObjectRelease();
  uint64_t v57 = v16[13];
  uint64_t v58 = &v9[v57];
  uint64_t v59 = &v10[v57];
  uint64_t v60 = *((void *)v59 + 1);
  *(void *)uint64_t v58 = *(void *)v59;
  *((void *)v58 + 1) = v60;
  swift_bridgeObjectRelease();
  uint64_t v61 = *((void *)v59 + 3);
  *((void *)v58 + 2) = *((void *)v59 + 2);
  *((void *)v58 + 3) = v61;
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + *(int *)(v93 + 44)) = *(void **)((char *)v25 + *(int *)(v93 + 44));
  swift_unknownObjectRelease();
  *(void **)((char *)a1 + *(int *)(v93 + 48)) = *(void **)((char *)v25 + *(int *)(v93 + 48));
  return a1;
}

uint64_t sub_BAFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BB004);
}

uint64_t sub_BB004(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for RCSMessage(0);
    long long v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = (char *)a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_BB0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BB0C8);
}

void *sub_BB0C8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for RCSMessage(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_BB170(uint64_t a1)
{
  return sub_BB210(a1, qword_12A280);
}

uint64_t sub_BB198(uint64_t a1)
{
  return sub_BB210(a1, qword_12A298);
}

uint64_t sub_BB1C0(uint64_t a1)
{
  return sub_BB210(a1, qword_12A2B0);
}

uint64_t sub_BB1E8(uint64_t a1)
{
  return sub_BB210(a1, qword_12A2C8);
}

uint64_t sub_BB210(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_551C(&qword_127FB8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_551C(&qword_127C70);
  sub_D994(v6, a2);
  sub_8B44(v6, (uint64_t)a2);
  uint64_t v7 = sub_551C(&qword_127FC0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  return sub_F7010();
}

uint64_t sub_BB320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return _swift_task_switch(sub_BB348, 0, 0);
}

uint64_t sub_BB348()
{
  uint64_t v1 = v0[7];
  v0[9] = *(void *)(v0[8] + *(int *)(v1 + 44));
  uint64_t v2 = *(void *)(v1 + 24);
  v0[10] = v2;
  v0[11] = *(void *)(v2 + 32);
  v0[12] = (v2 + 32) & 0xFFFFFFFFFFFFLL | 0x6CAE000000000000;
  sub_F74E0();
  v0[13] = sub_F74D0();
  uint64_t v4 = sub_F7470();
  return _swift_task_switch(sub_BB400, v4, v3);
}

uint64_t sub_BB400()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t))v0[11];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[3];
  swift_release();
  v0[14] = v2(v6, v5, v4, *(void *)(v3 + 16), v1);
  return _swift_task_switch(sub_BB504, 0, 0);
}

uint64_t sub_BB504()
{
  uint64_t v1 = v0[14];
  if (v1)
  {
    uint64_t v2 = v0[8];
    uint64_t v3 = *(int *)(v0[7] + 40);
    uint64_t v4 = v2 + *(int *)(type metadata accessor for RCSMessage(0) + 52) + v3;
    uint64_t v5 = *(void *)(v4 + 24);
    if (v5)
    {
      uint64_t v6 = *(void *)(v4 + 16);
      if (qword_129070 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_F70F0();
      v0[15] = sub_8B44(v7, (uint64_t)static Logger.rcs);
      uint64_t v8 = sub_F70D0();
      os_log_type_t v9 = sub_F7670();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl(&dword_0, v8, v9, "Attempting to auto download file", v10, 2u);
        swift_slowDealloc();
      }

      long long v11 = (void *)swift_task_alloc();
      v0[16] = v11;
      *long long v11 = v0;
      v11[1] = sub_BB78C;
      uint64_t v12 = v0[7];
      uint64_t v13 = v0[6];
      uint64_t v14 = v0[3];
      return sub_BBC5C(v1, v14, v6, v5, v13, v12);
    }
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_F70F0();
    sub_8B44(v16, (uint64_t)static Logger.rcs);
    uint64_t v17 = sub_F70D0();
    os_log_type_t v18 = sub_F7690();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_0, v17, v18, "Couldn't find simID to initiate download for rcsMessage", v19, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v20 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v21 = v0[14];
  return v20(v21);
}

uint64_t sub_BB78C()
{
  uint64_t v2 = (void *)*v1;
  v2[17] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_BB8C4, 0, 0);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(uint64_t))v2[1];
    uint64_t v4 = v2[14];
    return v3(v4);
  }
}

uint64_t sub_BB8C4()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_F70D0();
  os_log_type_t v2 = sub_F7690();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    sub_F77B0();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Failed to download transfer %@, showing tap to download", v3, 0xCu);
    sub_551C(&qword_128C10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v7 = v0[14];
  return v6(v7);
}

BOOL static RCSTransferError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void RCSTransferError.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int RCSTransferError.hashValue.getter(char a1)
{
  return sub_F7C50();
}

unint64_t sub_BBB04()
{
  unint64_t result = qword_12A2E0;
  if (!qword_12A2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_12A2E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RCSTransferError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBBC24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSTransferError()
{
  return &type metadata for RCSTransferError;
}

uint64_t sub_BBC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  sub_551C(&qword_1283F0);
  v7[9] = swift_task_alloc();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_12A2F8 + dword_12A2F8);
  uint64_t v12 = (void *)swift_task_alloc();
  v7[10] = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_BBD6C;
  return v14(a2, a3, a4, a6);
}

uint64_t sub_BBD6C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_BBE6C, 0, 0);
}

uint64_t sub_BBE6C()
{
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 56);
    *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 64) + *(int *)(v1 + 44));
    uint64_t v2 = *(void *)(v1 + 24);
    *(void *)(v0 + 96) = v2;
    *(void *)(v0 + 104) = *(void *)(v2 + 48);
    *(void *)(v0 + 112) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x5849000000000000;
    sub_F74E0();
    *(void *)(v0 + 120) = sub_F74D0();
    uint64_t v3 = sub_F7470();
    uint64_t v5 = v4;
    uint64_t v6 = sub_BC214;
LABEL_14:
    return _swift_task_switch(v6, v3, v5);
  }
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_F70F0();
  sub_8B44(v7, (uint64_t)static Logger.rcs);
  uint64_t v8 = sub_F70D0();
  os_log_type_t v9 = sub_F7670();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "Not auto downloading RCS file", v10, 2u);
    swift_slowDealloc();
  }
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v12 = *(void *)(v0 + 24);

  sub_2C4C0(v12, v11, &qword_1283F0);
  uint64_t v13 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13);
  sub_1E944(v11, &qword_1283F0);
  if (v12 == 1)
  {
    uint64_t v14 = sub_F70D0();
    os_log_type_t v15 = sub_F7670();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = "No thumbnail info found, nothing to download";
LABEL_19:
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v14, v15, v16, v26, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 56);
    uint64_t v18 = *(void *)(v0 + 24);
    *(void *)(v0 + 136) = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v17 + 24);
    *(void *)(v0 + 144) = v19;
    char v20 = sub_C1284(v18);
    uint64_t v14 = sub_F70D0();
    os_log_type_t v15 = sub_F7670();
    BOOL v21 = os_log_type_enabled(v14, v15);
    if (v20)
    {
      if (v21)
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_0, v14, v15, "Attempting to download thumbnail instead", v22, 2u);
        swift_slowDealloc();
      }
      uint64_t v24 = *(void *)(v0 + 56);
      uint64_t v23 = *(void *)(v0 + 64);

      *(void *)(v0 + 152) = *(void *)(v23 + *(int *)(v24 + 44));
      *(void *)(v0 + 160) = *(void *)(v19 + 40);
      *(void *)(v0 + 168) = (v19 + 40) & 0xFFFFFFFFFFFFLL | 0xE5CA000000000000;
      sub_F74E0();
      *(void *)(v0 + 176) = sub_F74D0();
      uint64_t v3 = sub_F7470();
      uint64_t v5 = v25;
      uint64_t v6 = sub_BC404;
      goto LABEL_14;
    }
    if (v21)
    {
      uint64_t v16 = "Thumbnail info present, but we decided not to download it";
      goto LABEL_19;
    }
  }

  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_BC214()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = (void (*)(uint64_t, void, uint64_t))v0[13];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[2];
  swift_release();
  v2(v4, *(void *)(v3 + 16), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_BC2EC;
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[3];
  uint64_t v10 = v0[4];
  uint64_t v11 = v0[2];
  return sub_BC5F4(0, v11, v9, v10, v7, v8, v6);
}

uint64_t sub_BC2EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_BC404()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[20];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[2];
  swift_release();
  v1(v4, 1, v3, v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_BC4DC;
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[3];
  uint64_t v10 = v0[4];
  uint64_t v11 = v0[2];
  return sub_BC5F4(1, v11, v9, v10, v7, v8, v6);
}

uint64_t sub_BC4DC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_BC5F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = v7;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a2;
  *(unsigned char *)(v8 + 72) = a1;
  char v14 = a1 & 1;
  os_log_type_t v15 = (void *)swift_task_alloc();
  *(void *)(v8 + 56) = v15;
  *os_log_type_t v15 = v8;
  v15[1] = sub_BC6D8;
  return sub_BC964(v14, a2, a3, a4, a5, a7);
}

uint64_t sub_BC6D8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(unsigned __int8 *)(v2 + 72);
    uint64_t v12 = (uint64_t (*)(char, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_12A310 + dword_12A310);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v2 + 64) = v7;
    *uint64_t v7 = v3;
    v7[1] = sub_BC870;
    uint64_t v8 = *(void *)(v2 + 40);
    uint64_t v9 = *(void *)(v2 + 24);
    uint64_t v10 = *(void *)(v2 + 32);
    uint64_t v11 = *(void *)(v2 + 16);
    return v12(v6 & 1, v11, v9, v10, v8);
  }
}

uint64_t sub_BC870()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_BC964(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 216) = a6;
  *(void *)(v7 + 224) = v6;
  *(void *)(v7 + 200) = a4;
  *(void *)(v7 + 208) = a5;
  *(void *)(v7 + 184) = a2;
  *(void *)(v7 + 192) = a3;
  *(unsigned char *)(v7 + 596) = a1;
  *(void *)(v7 + 232) = type metadata accessor for RCSFile(0);
  *(void *)(v7 + 240) = swift_task_alloc();
  *(void *)(v7 + 248) = swift_task_alloc();
  uint64_t v8 = sub_F70B0();
  *(void *)(v7 + 256) = v8;
  *(void *)(v7 + 264) = *(void *)(v8 - 8);
  *(void *)(v7 + 272) = swift_task_alloc();
  sub_551C(&qword_1282D0);
  *(void *)(v7 + 280) = swift_task_alloc();
  sub_551C(&qword_1283F0);
  *(void *)(v7 + 288) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  *(void *)(v7 + 296) = v9;
  *(void *)(v7 + 304) = *(void *)(v9 - 8);
  *(void *)(v7 + 312) = swift_task_alloc();
  return _swift_task_switch(sub_BCB2C, 0, 0);
}

uint64_t sub_BCB2C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = sub_F6DC0();
  *(void *)(v0 + 320) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v0 + 328) = v4;
  *(void *)(v0 + 336) = *(void *)(v4 + 64);
  *(void *)(v0 + 344) = swift_task_alloc();
  uint64_t v5 = *(int *)(v1 + 44);
  *(_DWORD *)(v0 + 592) = v5;
  *(void *)(v0 + 352) = *(void *)(v2 + v5);
  uint64_t v6 = *(void *)(v1 + 24);
  *(void *)(v0 + 360) = v6;
  *(void *)(v0 + 368) = *(void *)(v6 + 96);
  *(void *)(v0 + 376) = (v6 + 96) & 0xFFFFFFFFFFFFLL | 0x7EDE000000000000;
  *(void *)(v0 + 384) = sub_F74E0();
  *(void *)(v0 + 392) = sub_F74D0();
  uint64_t v8 = sub_F7470();
  return _swift_task_switch(sub_BCC50, v8, v7);
}

uint64_t sub_BCC50()
{
  uint64_t v1 = (uint64_t (*)(void))v0[46];
  uint64_t v2 = v0[27];
  swift_release();
  v0[50] = *(void *)(v2 + 16);
  v0[51] = v1();
  return _swift_task_switch(sub_BCCE8, 0, 0);
}

id sub_BCCE8()
{
  uint64_t v73 = v0;
  if (*(unsigned char *)(v0 + 596))
  {
    uint64_t v9 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 304);
    uint64_t v11 = *(void *)(v0 + 288);
    sub_2C4C0(*(void *)(v0 + 192), v11, &qword_1283F0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
    {
      sub_1E944(*(void *)(v0 + 288), &qword_1283F0);
      if (qword_129070 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_F70F0();
      sub_8B44(v12, (uint64_t)static Logger.rcs);
      uint64_t v13 = sub_F70D0();
      os_log_type_t v14 = sub_F7690();
      if (os_log_type_enabled(v13, v14))
      {
        os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v15 = 0;
        _os_log_impl(&dword_0, v13, v14, "Tried to download thumbnail, but no thumbnail information found", v15, 2u);
        swift_slowDealloc();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_26;
    }
    sub_95964(*(void *)(v0 + 288), *(void *)(v0 + 312));
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_F70F0();
    sub_8B44(v17, (uint64_t)static Logger.rcs);
    uint64_t v18 = sub_F70D0();
    os_log_type_t v19 = sub_F7670();
    if (os_log_type_enabled(v18, v19))
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v20 = 0;
      _os_log_impl(&dword_0, v18, v19, "Downloading thumbnail", v20, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = *(void *)(v0 + 344);
    uint64_t v22 = *(void *)(v0 + 320);
    uint64_t v23 = *(void *)(v0 + 328);
    uint64_t v24 = *(void *)(v0 + 312);
    uint64_t v25 = *(void *)(v0 + 296);

    uint64_t v6 = sub_BFA7C();
    unint64_t v5 = v26;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, v24 + *(int *)(v25 + 24), v22);
    sub_C1EA0(v24, type metadata accessor for RCSFile.ThumbnailInformation);
    long long v8 = xmmword_FB230;
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 344);
    uint64_t v2 = *(void *)(v0 + 320);
    uint64_t v3 = *(void *)(v0 + 328);
    uint64_t v4 = *(void *)(v0 + 192) + *(int *)(*(void *)(v0 + 232) + 20);
    uint64_t v6 = *(void *)(v4 + 8);
    unint64_t v5 = *(void *)(v4 + 16);
    uint64_t v7 = type metadata accessor for RCSFile.DispositionInformation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4 + *(int *)(v7 + 28), v2);
    swift_bridgeObjectRetain();
    long long v8 = xmmword_FB240;
  }
  *(_OWORD *)(v0 + 416) = v8;
  uint64_t v27 = swift_task_alloc();
  *(void *)(v0 + 432) = v27;
  id v28 = [self defaultManager];
  uint64_t v29 = (void *)sub_F71F0();
  id v30 = objc_msgSend(v28, "im_randomTemporaryFileURLWithFileName:", v29);

  *(void *)(v0 + 440) = *(void *)(*(void *)(sub_551C(&qword_128300) - 8) + 64);
  uint64_t v31 = swift_task_alloc();
  uint64_t v32 = v31;
  if (v30)
  {
    uint64_t v33 = *(void **)(v0 + 328);
    uint64_t v34 = *(void *)(v0 + 320);
    uint64_t v35 = swift_task_alloc();
    sub_F6D80();

    uint64_t v36 = (void (*)(uint64_t, uint64_t, uint64_t))v33[4];
    *(void *)(v0 + 448) = v36;
    *(void *)(v0 + 456) = (unint64_t)(v33 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v36(v32, v35, v34);
    uint64_t v37 = (void (*)(uint64_t, void, uint64_t, uint64_t))v33[7];
    *(void *)(v0 + 464) = v37;
    *(void *)(v0 + 472) = (unint64_t)(v33 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v37(v32, 0, 1, v34);
    swift_task_dealloc();
    uint64_t v38 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v33[6];
    *(void *)(v0 + 480) = v38;
    *(void *)(v0 + 488) = (unint64_t)(v33 + 6) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v38(v32, 1, v34) != 1)
    {
      uint64_t v39 = *(void *)(v0 + 320);
      uint64_t v66 = *(void *)(v0 + 272);
      uint64_t v67 = *(void *)(v0 + 280);
      uint64_t v68 = *(void *)(v0 + 264);
      uint64_t v70 = *(void *)(v0 + 256);
      uint64_t v40 = *(void **)(v0 + 184);
      swift_bridgeObjectRelease();
      v36(v27, v32, v39);
      swift_task_dealloc();
      uint64_t v41 = (void *)sub_F71F0();
      [v40 setTransferredFilename:v41];

      uint64_t v42 = (void *)sub_F71F0();
      [v40 setMimeType:v42];

      swift_bridgeObjectRetain();
      sub_F7070();
      sub_F7030();
      int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v67, 1, v70);
      uint64_t v44 = *(void *)(v0 + 280);
      if (v43 == 1)
      {
        sub_1E944(*(void *)(v0 + 280), &qword_1282D0);
        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v59 = *(void *)(v0 + 256);
        uint64_t v58 = *(void *)(v0 + 264);
        sub_F7040();
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v44, v59);
        uint64_t v45 = (void *)sub_F71F0();
        swift_bridgeObjectRelease();
      }
      uint64_t v71 = *(void *)(v0 + 360);
      objc_msgSend(*(id *)(v0 + 184), "setType:", v45, v66);

      uint64_t v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 + 56)
                                                                                         + **(int **)(v71 + 56));
      uint64_t v60 = (void *)swift_task_alloc();
      *(void *)(v0 + 496) = v60;
      *uint64_t v60 = v0;
      v60[1] = sub_BD704;
      uint64_t v61 = *(void *)(v0 + 400);
      uint64_t v62 = *(void *)(v0 + 360);
      uint64_t v63 = *(void *)(v0 + 344);
      uint64_t v65 = *(void *)(v0 + 200);
      uint64_t v64 = *(void *)(v0 + 208);
      return (id)v69(v65, v64, v63, v27, v61, v62);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 328) + 56))(v31, 1, 1, *(void *)(v0 + 320));
  }
  sub_1E944(v32, &qword_128300);
  swift_task_dealloc();
  swift_task_dealloc();
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_F70F0();
  sub_8B44(v46, (uint64_t)static Logger.rcs);
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_F70D0();
  os_log_type_t v48 = sub_F7690();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 136) = sub_A3FC(v6, v5, &v72);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v47, v48, "Couldn't create temp filename for file %s", v49, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v50 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:*(void *)(v0 + 408)];
  id result = [self sharedInstance];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v52 = result;
  uint64_t v53 = *(void *)(v0 + 344);
  uint64_t v54 = *(void *)(v0 + 320);
  uint64_t v55 = *(void *)(v0 + 328);
  id v56 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(*(void *)(v0 + 192) + *(int *)(*(void *)(v0 + 232) + 20))];
  [v52 trackAttachmentDownloadLimitExceeded:3 limitSize:v50 fileSize:v56 qualityType:0 isSticker:0 lowQualityModeEnabled:0];

  sub_C1E4C();
  swift_allocError();
  *uint64_t v57 = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
LABEL_26:
  return (id)v16();
}

uint64_t sub_BD704(uint64_t a1)
{
  *(void *)(*(void *)v1 + 504) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_BD804, 0, 0);
}

uint64_t sub_BD804()
{
  if (!*(void *)(*(void *)(v0 + 504) + 16)
    || (unint64_t v1 = sub_1C9BC(0x746C75736572, 0xE600000000000000), (v2 & 1) == 0)
    || (sub_BAD8(*(void *)(*(void *)(v0 + 504) + 56) + 32 * v1, v0 + 16),
        sub_551C(&qword_128730),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v6 = *(void *)(v0 + 360);
    *(void *)(v0 + 552) = *(void *)(*(void *)(v0 + 224) + *(int *)(v0 + 592));
    sub_C1E4C();
    *(void *)(v0 + 560) = swift_allocError();
    *uint64_t v7 = 1;
    *(void *)(v0 + 568) = *(void *)(v6 + 80);
    *(void *)(v0 + 576) = (v6 + 80) & 0xFFFFFFFFFFFFLL | 0x1AC000000000000;
    *(void *)(v0 + 584) = sub_F74D0();
    uint64_t v8 = sub_F7470();
    uint64_t v10 = v9;
    uint64_t v11 = sub_BE0E4;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + 160);
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1C9BC(0x4C5255656C6966, 0xE700000000000000), (v5 & 1) != 0))
  {
    sub_BAD8(*(void *)(v3 + 56) + 32 * v4, v0 + 80);
  }
  else
  {
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104))
  {
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_17;
    }
    os_log_type_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 480);
    uint64_t v16 = *(void *)(v0 + 320);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 512) = v3;
    uint64_t v17 = swift_task_alloc();
    sub_F6DB0();
    swift_bridgeObjectRelease();
    if (v15(v17, 1, v16) == 1)
    {
      sub_1E944(v17, &qword_128300);
      swift_task_dealloc();
      swift_task_dealloc();
      goto LABEL_17;
    }
    uint64_t v35 = *(void *)(v0 + 360);
    uint64_t v36 = *(int *)(v0 + 592);
    uint64_t v37 = *(void *)(v0 + 224);
    uint64_t v38 = *(void **)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, void))(v0 + 448))(v3, v17, *(void *)(v0 + 320));
    swift_task_dealloc();
    uint64_t v39 = (void *)sub_F6D70();
    [v38 _setLocalURL:v39];

    *(void *)(v0 + 520) = *(void *)(v37 + v36);
    *(void *)(v0 + 528) = *(void *)(v35 + 72);
    *(void *)(v0 + 536) = (v35 + 72) & 0xFFFFFFFFFFFFLL | 0x657E000000000000;
    *(void *)(v0 + 544) = sub_F74D0();
    uint64_t v8 = sub_F7470();
    uint64_t v10 = v40;
    uint64_t v11 = sub_BDD7C;
LABEL_8:
    uint64_t v12 = (uint64_t)v11;
    uint64_t v13 = v8;
    uint64_t v14 = v10;
    return _swift_task_switch(v12, v13, v14);
  }
  sub_1E944(v0 + 80, &qword_127FF8);
LABEL_17:
  id v18 = [self sharedInstance];
  if (!v18)
  {
    __break(1u);
    goto LABEL_25;
  }
  id v42 = v18;
  id v19 = [*(id *)(v0 + 184) localURL];
  uint64_t v3 = swift_task_alloc();
  if (!v19)
  {
LABEL_25:
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 464))(v3, 1, 1, *(void *)(v0 + 320));
    goto LABEL_26;
  }
  char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 480);
  uint64_t v21 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 464);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  uint64_t v23 = *(void *)(v0 + 320);
  uint64_t v24 = swift_task_alloc();
  sub_F6D80();

  v22(v3, v24, v23);
  v21(v3, 0, 1, v23);
  swift_task_dealloc();
  uint64_t v12 = v20(v3, 1, v23);
  if (v12 == 1)
  {
LABEL_26:
    __break(1u);
    return _swift_task_switch(v12, v13, v14);
  }
  uint64_t v25 = *(void *)(v0 + 432);
  uint64_t v27 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 416);
  uint64_t v41 = *(void *)(v0 + 344);
  uint64_t v28 = *(void *)(v0 + 320);
  uint64_t v29 = *(void *)(v0 + 328);
  id v30 = (void *)sub_F6D70();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v31(v3, v28);
  swift_task_dealloc();
  id v32 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:v27];
  [v42 trackAttachmentDownloadSuccess:v30 limitType:v26 limitSize:v32 qualityType:v26 isSticker:0 lowQualityModeEnabled:0];

  v31(v25, v28);
  v31(v41, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_BDD7C()
{
  unint64_t v1 = *(void (**)(uint64_t, uint64_t, BOOL, uint64_t, uint64_t))(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v5 = *(void *)(v0 + 184);
  char v6 = *(unsigned char *)(v0 + 596);
  swift_release();
  v1(v5, v2, (v6 & 1) == 0, v3, v4);
  return _swift_task_switch(sub_BDE38, 0, 0);
}

uint64_t sub_BDE38()
{
  uint64_t v1 = *(void *)(v0 + 512);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 328) + 8))(v1, *(void *)(v0 + 320));
  swift_task_dealloc();
  id v2 = [self sharedInstance];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v20 = v2;
  id v3 = [*(id *)(v0 + 184) localURL];
  uint64_t v1 = swift_task_alloc();
  if (!v3)
  {
LABEL_8:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 464))(v1, 1, 1, *(void *)(v0 + 320));
    goto LABEL_9;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 480);
  uint64_t v5 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 464);
  char v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  uint64_t v7 = *(void *)(v0 + 320);
  uint64_t v8 = swift_task_alloc();
  sub_F6D80();

  v6(v1, v8, v7);
  v5(v1, 0, 1, v7);
  swift_task_dealloc();
  uint64_t result = v4(v1, 1, v7);
  if (result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v10 = *(void *)(v0 + 432);
  uint64_t v12 = *(void *)(v0 + 408);
  uint64_t v11 = *(void *)(v0 + 416);
  uint64_t v19 = *(void *)(v0 + 344);
  uint64_t v13 = *(void *)(v0 + 320);
  uint64_t v14 = *(void *)(v0 + 328);
  os_log_type_t v15 = (void *)sub_F6D70();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v16(v1, v13);
  swift_task_dealloc();
  id v17 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:v12];
  [v20 trackAttachmentDownloadSuccess:v15 limitType:v11 limitSize:v17 qualityType:v11 isSticker:0 lowQualityModeEnabled:0];

  v16(v10, v13);
  v16(v19, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_BE0E4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[71];
  uint64_t v2 = v0[70];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[23];
  swift_release();
  v1(v5, v2, v3, v4);
  swift_errorRelease();
  return _swift_task_switch(sub_BE19C, 0, 0);
}

uint64_t sub_BE19C()
{
  uint64_t v41 = v0;
  if (*(void *)(v0[63] + 16)
    && (unint64_t v1 = sub_1C9BC(0x726F727265, 0xE500000000000000), (v2 & 1) != 0)
    && (sub_BAD8(*(void *)(v0[63] + 56) + 32 * v1, (uint64_t)(v0 + 6)),
        sub_551C(&qword_127D08),
        (swift_dynamicCast() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[31];
    uint64_t v4 = v0[24];
    uint64_t v5 = sub_F70F0();
    sub_8B44(v5, (uint64_t)static Logger.rcs);
    sub_C1F48(v4, v3, type metadata accessor for RCSFile);
    swift_errorRetain();
    swift_errorRetain();
    char v6 = sub_F70D0();
    os_log_type_t v7 = sub_F7690();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = v0[31];
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      type metadata accessor for RCSFile.DispositionInformation(0);
      sub_C1F00((unint64_t *)&qword_128740, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v11 = sub_F7B20();
      v0[18] = sub_A3FC(v11, v12, v40);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_C1EA0(v8, type metadata accessor for RCSFile);
      *(_WORD *)(v9 + 12) = 2112;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      v0[19] = v13;
      sub_F77B0();
      void *v10 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v6, v7, "No result found after download for RCS transfer %s error %@", (uint8_t *)v9, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_C1EA0(v0[31], type metadata accessor for RCSFile);
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v33 = v0[54];
    uint64_t v34 = v0[43];
    uint64_t v35 = v0[40];
    uint64_t v36 = v0[41];
    swift_willThrow();
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v37(v33, v35);
    v37(v34, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[30];
    uint64_t v15 = v0[24];
    uint64_t v16 = sub_F70F0();
    sub_8B44(v16, (uint64_t)static Logger.rcs);
    sub_C1F48(v15, v14, type metadata accessor for RCSFile);
    swift_bridgeObjectRetain();
    id v17 = sub_F70D0();
    os_log_type_t v18 = sub_F7690();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = v0[54];
    uint64_t v39 = v0[43];
    uint64_t v21 = v0[40];
    uint64_t v22 = v0[41];
    uint64_t v23 = v0[30];
    if (v19)
    {
      uint64_t v24 = swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t v38 = v20;
      type metadata accessor for RCSFile.DispositionInformation(0);
      sub_C1F00((unint64_t *)&qword_128740, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v25 = sub_F7B20();
      v0[21] = sub_A3FC(v25, v26, v40);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_C1EA0(v23, type metadata accessor for RCSFile);
      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_F71C0();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      v0[16] = sub_A3FC(v27, v29, v40);
      sub_F77B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v17, v18, "No result found after download for RCS transfer %s and no error in %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v30(v38, v21);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_C1EA0(v23, type metadata accessor for RCSFile);
      id v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v30(v20, v21);
    }
    v30(v39, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
  }
  return v31();
}

uint64_t sub_BE8EC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_BE91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v5[14] = type metadata accessor for RCSFile(0);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  return _swift_task_switch(sub_BE9C8, 0, 0);
}

uint64_t sub_BE9C8()
{
  unint64_t v1 = (uint64_t (*)())[self sharedInstance];
  if (!v1)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = v1;
  unsigned int v5 = [v1 isInternalInstall];

  if (!v5) {
    goto LABEL_18;
  }
  char v6 = self;
  id v7 = [v6 sharedInstance];
  uint64_t v8 = (void *)sub_F71F0();
  uint64_t v9 = (void *)sub_F71F0();
  id v10 = [v7 getBoolFromDomain:v8 forKey:v9];

  if (v10)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_F70F0();
    sub_8B44(v11, (uint64_t)static Logger.rcs);
    unint64_t v12 = sub_F70D0();
    os_log_type_t v13 = sub_F7670();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_0, v12, v13, "Forcing auto download behavior ON due to default com.apple.imessage AlwaysAutoDownloadAttachments.RCS", v14, 2u);
      swift_slowDealloc();
    }
    goto LABEL_15;
  }
  id v15 = [v6 sharedInstance];
  uint64_t v16 = (void *)sub_F71F0();
  id v17 = (void *)sub_F71F0();
  unsigned int v18 = [v15 getBoolFromDomain:v16 forKey:v17];

  if (!v18)
  {
LABEL_18:
    uint64_t v28 = *(void *)(v0 + 96);
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v29 = *(int *)(v28 + 44);
    *(_DWORD *)(v0 + 288) = v29;
    *(void *)(v0 + 136) = *(void *)(v27 + v29);
    uint64_t v30 = *(void *)(v28 + 24);
    *(void *)(v0 + 144) = v30;
    *(void *)(v0 + 152) = *(void *)(v30 + 96);
    *(void *)(v0 + 160) = (v30 + 96) & 0xFFFFFFFFFFFFLL | 0x7EDE000000000000;
    *(void *)(v0 + 168) = sub_F74E0();
    *(void *)(v0 + 176) = sub_F74D0();
    uint64_t v31 = sub_F7470();
    uint64_t v33 = v32;
    unint64_t v1 = sub_BEE54;
    uint64_t v2 = v31;
    uint64_t v3 = v33;
    return _swift_task_switch(v1, v2, v3);
  }
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_F70F0();
  sub_8B44(v19, (uint64_t)static Logger.rcs);
  uint64_t v20 = sub_F70D0();
  os_log_type_t v21 = sub_F7670();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "Forcing auto download behavior OFF due to default com.apple.madrid NeverAutoDownloadAttachments.RCS", v22, 2u);
    swift_slowDealloc();
  }

  sub_C1FB0();
  unint64_t v12 = sub_F7760();
  unint64_t v1 = (uint64_t (*)())[self sharedInstance];
  if (!v1)
  {
LABEL_22:
    __break(1u);
    return _swift_task_switch(v1, v2, v3);
  }
  uint64_t v23 = v1;
  id v24 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(*(void *)(v0 + 72) + *(int *)(*(void *)(v0 + 112) + 20))];
  [v23 trackAttachmentDownloadLimitExceeded:5 limitSize:v12 fileSize:v24 qualityType:0 isSticker:0 lowQualityModeEnabled:0];

LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(id))(v0 + 8);
  return v25(v10);
}

uint64_t sub_BEE54()
{
  unint64_t v1 = (uint64_t (*)(void))v0[19];
  uint64_t v2 = v0[12];
  swift_release();
  v0[23] = *(void *)(v2 + 16);
  v0[24] = v1();
  return _swift_task_switch(sub_BEEEC, 0, 0);
}

uint64_t sub_BEEEC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(int *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(int *)(*(void *)(v0 + 112) + 20);
  *(_DWORD *)(v0 + 292) = v5;
  *(void *)(v0 + 200) = *(void *)(v4 + v5);
  *(void *)(v0 + 208) = *(void *)(v3 + v2);
  *(void *)(v0 + 216) = *(void *)(v1 + 104);
  *(void *)(v0 + 224) = (v1 + 104) & 0xFFFFFFFFFFFFLL | 0xEECD000000000000;
  *(void *)(v0 + 232) = sub_F74D0();
  uint64_t v7 = sub_F7470();
  return _swift_task_switch(sub_BEFAC, v7, v6);
}

uint64_t sub_BEFAC()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[27];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[18];
  swift_release();
  v0[30] = v1(v2, v3);
  return _swift_task_switch(sub_BF040, 0, 0);
}

uint64_t sub_BF040(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(v3 + 192);
  if (v4 >= *(void *)(v3 + 240))
  {
    uint64_t v5 = *(void *)(v3 + 200);
    if (v5 + 0x4000000000000000 < 0)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      return _swift_task_switch(a1, a2, a3);
    }
    if (v5 < 1 || v4 >= 2 * v5)
    {
      uint64_t v7 = *(void *)(v3 + 144);
      *(void *)(v3 + 248) = *(void *)(*(void *)(v3 + 104) + *(int *)(v3 + 288));
      *(void *)(v3 + 256) = *(void *)(v7 + 88);
      *(void *)(v3 + 264) = (v7 + 88) & 0xFFFFFFFFFFFFLL | 0x2E18000000000000;
      *(void *)(v3 + 272) = sub_F74D0();
      uint64_t v8 = sub_F7470();
      uint64_t v10 = v9;
      a1 = sub_BF364;
      a2 = v8;
      a3 = v10;
      return _swift_task_switch(a1, a2, a3);
    }
  }
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_F70F0();
  sub_8B44(v11, (uint64_t)static Logger.rcs);
  unint64_t v12 = sub_F70D0();
  os_log_type_t v13 = sub_F7670();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = *(void *)(v3 + 240);
    uint64_t v16 = *(void *)(v3 + 192);
    uint64_t v15 = *(void *)(v3 + 200);
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 134218496;
    *(void *)(v3 + 48) = v16;
    sub_F77B0();
    *(_WORD *)(v17 + 12) = 2048;
    *(void *)(v3 + 56) = v14;
    sub_F77B0();
    *(_WORD *)(v17 + 22) = 2048;
    *(void *)(v3 + 64) = v15;
    sub_F77B0();
    _os_log_impl(&dword_0, v12, v13, "Not enough free space to safely download avail %llu minFree %llu fileSize %ld, not auto downloading", (uint8_t *)v17, 0x20u);
    swift_slowDealloc();
  }

  id v18 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:*(void *)(v3 + 192)];
  a1 = (uint64_t (*)())[self sharedInstance];
  if (!a1) {
    goto LABEL_20;
  }
  uint64_t v19 = a1;
  id v20 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 292))];
  [v19 trackAttachmentDownloadLimitExceeded:3 limitSize:v18 fileSize:v20 qualityType:0 isSticker:0 lowQualityModeEnabled:0];

  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v21 = *(uint64_t (**)(void))(v3 + 8);
  return v21(0);
}

uint64_t sub_BF364()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[32];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[9];
  swift_release();
  v0[35] = v1(v6, v5, v4, v2, v3);
  return _swift_task_switch(sub_BF414, 0, 0);
}

id sub_BF414()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 280);
  if (v1 < 1 || v1 < *(void *)(v0 + 200))
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = sub_F70F0();
    sub_8B44(v5, (uint64_t)static Logger.rcs);
    sub_C1F48(v4, v3, type metadata accessor for RCSFile);
    uint64_t v6 = sub_F70D0();
    os_log_type_t v7 = sub_F7670();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = *(void *)(v0 + 280);
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v9 = *(void *)(v0 + 120);
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134218240;
      uint64_t v12 = *(void *)(v9 + *(int *)(v10 + 20));
      sub_C1EA0(v9, type metadata accessor for RCSFile);
      *(void *)(v0 + 16) = v12;
      sub_F77B0();
      *(_WORD *)(v11 + 12) = 2048;
      *(void *)(v0 + 24) = v8;
      sub_F77B0();
      _os_log_impl(&dword_0, v6, v7, "RCS File's size %ld is larger than the autodownload size %lld, not auto downloading", (uint8_t *)v11, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      sub_C1EA0(*(void *)(v0 + 120), type metadata accessor for RCSFile);
    }

    id v31 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:*(void *)(v0 + 280)];
    id result = [self sharedInstance];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v33 = result;
    id v34 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(*(void *)(v0 + 72) + *(int *)(v0 + 292))];
    [v33 trackAttachmentDownloadLimitExceeded:3 limitSize:v31 fileSize:v34 qualityType:0 isSticker:0 lowQualityModeEnabled:0];

    goto LABEL_21;
  }
  uint64_t v13 = sub_F6EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = swift_task_alloc();
  sub_F6EB0();
  type metadata accessor for RCSFile.DispositionInformation(0);
  sub_C1F00(&qword_12A320, (void (*)(uint64_t))&type metadata accessor for Date);
  char v16 = sub_F71E0();
  if (v16)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 72);
    uint64_t v19 = sub_F70F0();
    sub_8B44(v19, (uint64_t)static Logger.rcs);
    sub_C1F48(v18, v17, type metadata accessor for RCSFile);
    uint64_t v20 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v20, v15, v13);
    os_log_type_t v21 = sub_F70D0();
    os_log_type_t v22 = sub_F7670();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void *)(v0 + 128);
    if (v23)
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v26 = sub_93520();
      *(void *)(v0 + 32) = sub_A3FC(v26, v27, &v38);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_C1EA0(v24, type metadata accessor for RCSFile);
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v28 = sub_93520();
      *(void *)(v0 + 40) = sub_A3FC(v28, v29, &v38);
      sub_F77B0();
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v30(v20, v13);
      _os_log_impl(&dword_0, v21, v22, "RCS File has passed expiration (%s, not auto downloading (now %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v30(v15, v13);
      swift_task_dealloc();
    }
    else
    {

      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v36(v20, v13);
      swift_task_dealloc();
      sub_C1EA0(v24, type metadata accessor for RCSFile);
      v36(v15, v13);
    }
    swift_task_dealloc();
LABEL_21:
    uint64_t v35 = 0;
    goto LABEL_22;
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
  swift_task_dealloc();
  uint64_t v35 = 1;
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return (id)v37(v35);
}

uint64_t sub_BFA7C()
{
  uint64_t v0 = (void *)sub_F71F0();
  id v1 = [v0 pathExtension];
  uint64_t v2 = sub_F7220();
  uint64_t v4 = v3;

  id v5 = [v0 stringByDeletingPathExtension];
  uint64_t v6 = sub_F7220();

  sub_F78A0(19);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x616E626D7568742DLL;
  v8._object = (void *)0xEB000000002E6C69;
  sub_F72E0(v8);
  v9._countAndFlagsBits = v2;
  v9._object = v4;
  sub_F72E0(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 1735420462;
  v10._object = (void *)0xE400000000000000;
  sub_F72E0(v10);

  return v6;
}

uint64_t sub_BFB84(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 280) = a5;
  *(void *)(v6 + 288) = v5;
  *(void *)(v6 + 264) = a2;
  *(void *)(v6 + 272) = a4;
  *(unsigned char *)(v6 + 488) = a1;
  uint64_t v7 = sub_F70F0();
  *(void *)(v6 + 296) = v7;
  *(void *)(v6 + 304) = *(void *)(v7 - 8);
  *(void *)(v6 + 312) = swift_task_alloc();
  return _swift_task_switch(sub_BFC4C, 0, 0);
}

uint64_t sub_BFC4C()
{
  id v1 = *(void **)(v0 + 264);
  if ((*(unsigned char *)(v0 + 488) & 1) == 0)
  {
    id v2 = [*(id *)(v0 + 264) localPath];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void *)(v0 + 280);
      sub_F7220();
      uint64_t v6 = v5;

      *(void *)(v0 + 320) = v6;
      uint64_t v22 = *(void *)(*(void *)(v4 + 24) + 144) + **(int **)(*(void *)(v4 + 24) + 144);
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 328) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_C0068;
      __asm { BRAA            X9, X16 }
    }
    __break(1u);
    goto LABEL_12;
  }
  *(void *)(v0 + 376) = *(void *)(*(void *)(sub_551C(&qword_128300) - 8) + 64);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 384) = v8;
  id v9 = [v1 localURL];
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v1;
  if (!v9)
  {
LABEL_12:
    uint64_t v21 = sub_F6DC0();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v1, 1, 1, v21);
    goto LABEL_13;
  }
  uint64_t v10 = sub_F6DC0();
  *(void *)(v0 + 400) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  *(void *)(v0 + 408) = v11;
  *(void *)(v0 + 416) = *(void *)(v11 + 64);
  uint64_t v13 = swift_task_alloc();
  sub_F6D80();

  uint64_t v14 = *(void (**)(void *, uint64_t, uint64_t))(v12 + 32);
  *(void *)(v0 + 424) = v14;
  *(void *)(v0 + 432) = (v12 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v14(v1, v13, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v1, 0, 1, v10);
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  *(void *)(v0 + 440) = v15;
  *(void *)(v0 + 448) = (v12 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  uint64_t result = v15(v1, 1, v10);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v17 = *(void *)(v0 + 280);
  uint64_t v19 = *(void *)(v17 + 16);
  uint64_t v18 = *(void *)(v17 + 24);
  BOOL v23 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v18 + 152) + **(int **)(v18 + 152));
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_C0528;
  return v23(v8, v1, v19, v18);
}

uint64_t sub_C0068()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 336) = v0;
  *(_OWORD *)(v2 + 344) = *(_OWORD *)(v2 + 16);
  *(unsigned char *)(v2 + 489) = *(unsigned char *)(v2 + 32);
  *(_OWORD *)(v2 + 360) = *(_OWORD *)(v2 + 40);
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_C0D08;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_C01A4;
  }
  return _swift_task_switch(v3, 0, 0);
}

id sub_C01A4()
{
  uint64_t v21 = v0;
  if (qword_129070 != -1) {
    swift_once();
  }
  unint64_t v1 = *(void *)(v0 + 352);
  sub_8B44(*(void *)(v0 + 296), (uint64_t)static Logger.rcs);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_F70D0();
  os_log_type_t v3 = sub_F7670();
  if (os_log_type_enabled(v2, v3))
  {
    int v19 = *(unsigned __int8 *)(v0 + 489);
    uint64_t v5 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 352);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315906;
    if (v4)
    {
      unint64_t v7 = v1;
    }
    else
    {
      uint64_t v5 = 0x64697567206F6ELL;
      unint64_t v7 = 0xE700000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 232) = sub_A3FC(v5, v7, &v20);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    if (v19) {
      uint64_t v8 = 0x73736563637553;
    }
    else {
      uint64_t v8 = 0x64656C696146;
    }
    if (v19) {
      unint64_t v9 = 0xE700000000000000;
    }
    else {
      unint64_t v9 = 0xE600000000000000;
    }
    *(void *)(v0 + 240) = sub_A3FC(v8, v9, &v20);
    sub_F77B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2080;
    uint64_t v10 = sub_F75F0();
    *(void *)(v0 + 248) = sub_A3FC(v10, v11, &v20);
    sub_F77B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2080;
    uint64_t v12 = sub_F75F0();
    *(void *)(v0 + 256) = sub_A3FC(v12, v13, &v20);
    sub_F77B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v2, v3, "Preview result %s %s (%s, %s)", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = *(unsigned __int8 *)(v0 + 489);
    uint64_t v17 = (void *)sub_F71F0();
    [v15 trackAttachmentRenderingAttempt:v16 failureReason:v17];

    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v18();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C0528(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 490) = a1;
  *(void *)(v3 + 464) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_C0FB4;
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 400);
    uint64_t v6 = *(void *)(v3 + 408);
    uint64_t v7 = *(void *)(v3 + 392);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    *(void *)(v3 + 472) = v8;
    *(void *)(v3 + 480) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v8(v7, v5);
    swift_task_dealloc();
    uint64_t v4 = sub_C0670;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_C0670()
{
  uint64_t v63 = v0;
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v1 = (unsigned __int8 *)(v0 + 490);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v6 = *(void **)(v0 + 264);
  uint64_t v7 = sub_8B44(v5, (uint64_t)static Logger.rcs);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v7, v5);
  uint64_t v8 = swift_task_alloc();
  sub_2C4C0(v2, v8, &qword_128300);
  id v9 = v6;
  uint64_t v10 = sub_F70D0();
  os_log_type_t v11 = sub_F7670();
  if (os_log_type_enabled(v10, v11))
  {
    log = v10;
    uint64_t v60 = v8;
    uint64_t v12 = *(void **)(v0 + 264);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315906;
    id v14 = [v12 guid];
    os_log_type_t v58 = v11;
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = sub_F7220();
      unint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0x64697567206F6ELL;
      unint64_t v18 = 0xE700000000000000;
    }
    int v23 = *(unsigned __int8 *)(v0 + 490);
    uint64_t v24 = *(void **)(v0 + 264);
    *(void *)(v0 + 152) = sub_A3FC(v16, v18, &v62);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2080;
    if (v23) {
      uint64_t v25 = 0x73736563637553;
    }
    else {
      uint64_t v25 = 0x64656C696146;
    }
    if (v23) {
      unint64_t v26 = 0xE700000000000000;
    }
    else {
      unint64_t v26 = 0xE600000000000000;
    }
    *(void *)(v0 + 160) = sub_A3FC(v25, v26, &v62);
    sub_F77B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2080;
    id v27 = [v24 localPath];
    if (!v27) {
      goto LABEL_27;
    }
    uint64_t v28 = v27;
    uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 440);
    uint64_t v56 = *(void *)(v0 + 400);
    unint64_t v29 = *(void **)(v0 + 264);
    uint64_t v30 = sub_F7220();
    unint64_t v32 = v31;

    *(void *)(v0 + 168) = sub_A3FC(v30, v32, &v62);
    sub_F77B0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 32) = 2080;
    uint64_t v33 = swift_task_alloc();
    sub_2C4C0(v60, v33, &qword_128300);
    if (v57(v33, 1, v56) == 1)
    {
      sub_1E944(v33, &qword_128300);
      unint64_t v34 = 0xE700000000000000;
      uint64_t v35 = 0x687461702D6F6ELL;
    }
    else
    {
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
      uint64_t v37 = *(void *)(v0 + 400);
      uint64_t v35 = sub_F6DA0();
      unint64_t v34 = v38;
      v36(v33, v37);
    }
    uint64_t v1 = (unsigned __int8 *)(v0 + 490);
    uint64_t v39 = *(void *)(v0 + 304);
    uint64_t v61 = *(void *)(v0 + 312);
    uint64_t v40 = *(void *)(v0 + 296);
    swift_task_dealloc();
    *(void *)(v0 + 176) = sub_A3FC(v35, v34, &v62);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_1E944(v60, &qword_128300);
    _os_log_impl(&dword_0, log, v58, "Safe Render result %s %s %s safely rendered to (%s)", (uint8_t *)v13, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v61, v40);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 304);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v21 = *(void *)(v0 + 296);
    uint64_t v22 = *(void **)(v0 + 264);

    sub_1E944(v8, &qword_128300);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  }
  id v41 = [self sharedInstance];
  if (!v41)
  {
    __break(1u);
LABEL_27:

    __break(1u);
    return;
  }
  uint64_t v42 = v41;
  uint64_t v43 = *v1;
  uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 440);
  uint64_t v45 = *(void *)(v0 + 400);
  uint64_t v46 = *(void *)(v0 + 384);
  uint64_t v47 = (void *)sub_F71F0();
  [v42 trackAttachmentRenderingAttempt:v43 failureReason:v47];

  uint64_t v48 = swift_task_alloc();
  uint64_t v49 = swift_task_alloc();
  sub_2C4C0(v46, v49, &qword_128300);
  if (v44(v49, 1, v45) == 1)
  {
    sub_1E944(*(void *)(v0 + 384), &qword_128300);
    sub_1E944(v49, &qword_128300);
    swift_task_dealloc();
  }
  else
  {
    id v50 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v51 = *(void *)(v0 + 400);
    uint64_t v52 = *(void *)(v0 + 384);
    uint64_t v53 = *(void **)(v0 + 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 424))(v48, v49, v51);
    swift_task_dealloc();
    sub_F6DA0();
    uint64_t v54 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v53 _setLocalPath:v54];

    v50(v48, v51);
    sub_1E944(v52, &qword_128300);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(void (**)(void))(v0 + 8);
  v55();
}

id sub_C0D08()
{
  os_log_type_t v11 = v0;
  swift_bridgeObjectRelease();
  if (qword_129070 != -1) {
    swift_once();
  }
  sub_8B44(v0[37], (uint64_t)static Logger.rcs);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_F70D0();
  os_log_type_t v2 = sub_F7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = sub_F7BD0();
    v0[28] = sub_A3FC(v4, v5, &v10);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Preview failed with error %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v7 = result;
    swift_getErrorValue();
    sub_F7BD0();
    uint64_t v8 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v7 trackAttachmentRenderingAttempt:0 failureReason:v8];

    swift_errorRelease();
    swift_task_dealloc();
    id v9 = (uint64_t (*)(void))v0[1];
    return (id)v9();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_C0FB4()
{
  os_log_type_t v11 = v0;
  (*(void (**)(void, void))(v0[51] + 8))(v0[49], v0[50]);
  swift_task_dealloc();
  swift_task_dealloc();
  if (qword_129070 != -1) {
    swift_once();
  }
  sub_8B44(v0[37], (uint64_t)static Logger.rcs);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_F70D0();
  os_log_type_t v2 = sub_F7670();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = sub_F7BD0();
    v0[25] = sub_A3FC(v4, v5, &v10);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Safe render failed with error %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v7 = result;
    swift_getErrorValue();
    sub_F7BD0();
    uint64_t v8 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    [v7 trackAttachmentRenderingAttempt:0 failureReason:v8];

    swift_errorRelease();
    swift_task_dealloc();
    id v9 = (uint64_t (*)(void))v0[1];
    return (id)v9();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C1284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RCSFile(0);
  __chkstk_darwin(v2);
  uint64_t v76 = &v70[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_551C(&qword_1283F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v70[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  Class isa = v7[-1].isa;
  os_log_t v79 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v75 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v77 = &v70[-v10];
  uint64_t v11 = sub_551C(&qword_1282D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v70[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_F70B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v18 = &v70[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = &v70[-v20];
  __chkstk_darwin(v19);
  int v23 = &v70[-v22];
  uint64_t v80 = a1;
  swift_bridgeObjectRetain();
  sub_F7070();
  uint64_t v24 = v14;
  sub_F7030();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1E944((uint64_t)v13, &qword_1282D0);
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_F70F0();
    sub_8B44(v25, (uint64_t)static Logger.rcs);
    unint64_t v26 = sub_F70D0();
    os_log_type_t v27 = sub_F7670();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "No mimetype in file description, not using any thumbnail", v28, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v23, v13, v14);
  sub_F7090();
  char v29 = sub_F70A0();
  uint64_t v30 = *(objc_class **)(v15 + 8);
  ((void (*)(unsigned char *, uint64_t))v30)(v21, v24);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v18, v23, v24);
  unint64_t v31 = v23;
  if (v29)
  {
    ((void (*)(unsigned char *, uint64_t))v30)(v18, v24);
    unint64_t v32 = v30;
LABEL_10:
    sub_2C4C0(v80, (uint64_t)v6, &qword_1283F0);
    if ((*((unsigned int (**)(unsigned char *, uint64_t, os_log_t))isa + 6))(v6, 1, v79) == 1)
    {
      sub_1E944((uint64_t)v6, &qword_1283F0);
      if (qword_129070 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_F70F0();
      sub_8B44(v34, (uint64_t)static Logger.rcs);
      uint64_t v35 = sub_F70D0();
      os_log_type_t v36 = sub_F7670();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_0, v35, v36, "No thumbnail info found", v37, 2u);
        swift_slowDealloc();
      }

      goto LABEL_27;
    }
    uint64_t v80 = v24;
    unint64_t v38 = v77;
    sub_95964((uint64_t)v6, (uint64_t)v77);
    uint64_t v39 = sub_F6EE0();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(void *)(v40 + 64);
    __chkstk_darwin(v39);
    uint64_t v42 = &v70[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
    sub_F6EB0();
    sub_C1F00(&qword_12A320, (void (*)(uint64_t))&type metadata accessor for Date);
    if ((sub_F71E0() & 1) == 0)
    {
      (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(&v70[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)], v39);
      sub_C1EA0((uint64_t)v38, type metadata accessor for RCSFile.ThumbnailInformation);
      ((void (*)(unsigned char *, uint64_t))v32)(v31, v80);
      return 1;
    }
    uint64_t v76 = v70;
    Class isa = v32;
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_F70F0();
    sub_8B44(v43, (uint64_t)static Logger.rcs);
    uint64_t v44 = v75;
    uint64_t v45 = sub_C1F48((uint64_t)v38, (uint64_t)v75, type metadata accessor for RCSFile.ThumbnailInformation);
    uint64_t v73 = v70;
    __chkstk_darwin(v45);
    uint64_t v46 = &v70[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 16))(v46, v46, v39);
    uint64_t v47 = sub_F70D0();
    os_log_type_t v48 = sub_F7670();
    int v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v74 = v31;
      uint64_t v51 = v50;
      uint64_t v72 = swift_slowAlloc();
      uint64_t v82 = v72;
      *(_DWORD *)uint64_t v51 = 136315394;
      int v71 = v49;
      os_log_t v79 = v47;
      uint64_t v52 = sub_93520();
      uint64_t v81 = sub_A3FC(v52, v53, &v82);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_C1EA0((uint64_t)v44, type metadata accessor for RCSFile.ThumbnailInformation);
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v54 = sub_93520();
      uint64_t v81 = sub_A3FC(v54, v55, &v82);
      sub_F77B0();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
      v56(v46, v39);
      os_log_t v57 = v79;
      _os_log_impl(&dword_0, v79, (os_log_type_t)v71, "RCS Thumbnail has passed expiration (%s, not auto downloading (now %s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v56(v42, v39);
      sub_C1EA0((uint64_t)v77, type metadata accessor for RCSFile.ThumbnailInformation);
      ((void (*)(unsigned char *, uint64_t))isa)(v74, v80);
    }
    else
    {

      uint64_t v69 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
      v69(v46, v39);
      sub_C1EA0((uint64_t)v44, type metadata accessor for RCSFile.ThumbnailInformation);
      v69(v42, v39);
      sub_C1EA0((uint64_t)v38, type metadata accessor for RCSFile.ThumbnailInformation);
      ((void (*)(unsigned char *, uint64_t))isa)(v31, v80);
    }
    return 0;
  }
  sub_F7080();
  char v33 = sub_F70A0();
  ((void (*)(unsigned char *, uint64_t))v30)(v21, v24);
  ((void (*)(unsigned char *, uint64_t))v30)(v18, v24);
  unint64_t v32 = v30;
  if (v33) {
    goto LABEL_10;
  }
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_F70F0();
  sub_8B44(v58, (uint64_t)static Logger.rcs);
  uint64_t v59 = (uint64_t)v76;
  sub_C1F48(v80, (uint64_t)v76, type metadata accessor for RCSFile);
  uint64_t v60 = sub_F70D0();
  os_log_type_t v61 = sub_F7670();
  if (!os_log_type_enabled(v60, v61))
  {

    sub_C1EA0(v59, type metadata accessor for RCSFile);
LABEL_27:
    ((void (*)(unsigned char *, uint64_t))v32)(v31, v24);
    return 0;
  }
  uint64_t v74 = v31;
  uint64_t v62 = v59;
  uint64_t v63 = (uint8_t *)swift_slowAlloc();
  uint64_t v64 = swift_slowAlloc();
  Class isa = v30;
  uint64_t v80 = v24;
  *(_DWORD *)uint64_t v63 = 136315138;
  uint64_t v82 = v64;
  uint64_t v65 = v62 + *(int *)(v2 + 20);
  uint64_t v66 = *(void *)(v65 + 24);
  unint64_t v67 = *(void *)(v65 + 32);
  swift_bridgeObjectRetain();
  uint64_t v81 = sub_A3FC(v66, v67, &v82);
  sub_F77B0();
  swift_bridgeObjectRelease();
  sub_C1EA0(v62, type metadata accessor for RCSFile);
  _os_log_impl(&dword_0, v60, v61, "Non A/V or image mimetype %s, not using any thumbnail", v63, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  ((void (*)(unsigned char *, uint64_t))isa)(v74, v80);
  return 0;
}

unint64_t sub_C1E4C()
{
  unint64_t result = qword_12A318;
  if (!qword_12A318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A318);
  }
  return result;
}

uint64_t sub_C1EA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_C1F00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_C1F48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_C1FB0()
{
  unint64_t result = qword_128248;
  if (!qword_128248)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_128248);
  }
  return result;
}

void CTGroupDestinationProviding.groupUri.getter(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v4 = (void *)(*(uint64_t (**)(void))(a1 + 8))();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 destination];
    uint64_t v7 = sub_F7220();
    unint64_t v9 = v8;

    sub_EAF1C(v7, v9, 0, 0, 0, (uint64_t *)v12);
    if (!v2)
    {
      long long v10 = v12[1];
      *a2 = v12[0];
      a2[1] = v10;
      a2[2] = v13[0];
      *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v13 + 9);
    }
  }
  else
  {
    sub_95A2C();
    swift_allocError();
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(void *)(v11 + 32) = 0x8000000000000000;
    swift_willThrow();
  }
}

id sub_C20F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 16))();
  id v3 = [v2 remoteUri];

  return v3;
}

id sub_C2148()
{
  id v1 = [*v0 chatInformation];

  return v1;
}

id protocol witness for CTGroupDestinationProviding.rawGroupUri.getter in conformance CTLazuliMessageGroupText(uint64_t a1)
{
  return sub_C20F4(a1, (uint64_t)&off_121048);
}

id protocol witness for CTGroupDestinationProviding.rawGroupUri.getter in conformance CTLazuliMessageGroupGeoLocationPush(uint64_t a1)
{
  return sub_C20F4(a1, (uint64_t)&off_121070);
}

id protocol witness for CTGroupDestinationProviding.rawGroupUri.getter in conformance CTLazuliMessageGroupFileTransferPush(uint64_t a1)
{
  return sub_C20F4(a1, (uint64_t)&off_121098);
}

id CTLazuliMessageIncomingGroupChat.rawGroupUri.getter()
{
  id v1 = [v0 chat];
  id v2 = [v1 remoteUri];

  return v2;
}

id sub_C21FC()
{
  id v1 = [*v0 chat];
  id v2 = [v1 remoteUri];

  return v2;
}

uint64_t sub_C2258(uint64_t a1, uint64_t a2, uint64_t (**a3)(void, void))
{
  uint64_t v4 = v3;
  char v7 = a1;
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v56 = (uint8_t *)v8;
  uint64_t v9 = __chkstk_darwin(a1);
  unint64_t v55 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v53 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v53 - v20;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v23, v22) & 1) == 0)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_F70F0();
    sub_8B44(v25, (uint64_t)static Logger.rcs);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v21, v3, a2);
    unint64_t v26 = sub_F70D0();
    os_log_type_t v27 = sub_F7680();
    if (!os_log_type_enabled(v26, v27))
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v21, a2);
      goto LABEL_26;
    }
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v58 = v29;
    uint64_t v56 = v28 + 4;
    uint64_t v30 = a3[1](a2, a3);
    uint64_t v57 = sub_A3FC(v30, v31, &v58);
    sub_F77B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v21, a2);
    unint64_t v32 = "%s unreachable beacuse doesn't support chat";
LABEL_13:
    _os_log_impl(&dword_0, v26, v27, v32, v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_26:

    return 0;
  }
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v54(v19, v3, a2);
  if (v7)
  {
    uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    v24(v19, a2);
    goto LABEL_14;
  }
  char v33 = a3[8](a2, a3);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v19, a2);
  if (v33)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_F70F0();
    sub_8B44(v34, (uint64_t)static Logger.rcs);
    v54(v16, v4, a2);
    unint64_t v26 = sub_F70D0();
    os_log_type_t v27 = sub_F7680();
    if (!os_log_type_enabled(v26, v27))
    {
      v24(v16, a2);
      goto LABEL_26;
    }
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v54 = (void (*)(char *, uint64_t, uint64_t))v24;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v58 = v35;
    uint64_t v56 = v28 + 4;
    uint64_t v36 = a3[1](a2, a3);
    uint64_t v57 = sub_A3FC(v36, v37, &v58);
    sub_F77B0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v54)(v16, a2);
    unint64_t v32 = "%s unreachable because destination is offline and this is not a group";
    goto LABEL_13;
  }
LABEL_14:
  if ((a3[7](a2, a3) & 1) == 0)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_F70F0();
    sub_8B44(v46, (uint64_t)static Logger.rcs);
    uint64_t v13 = v55;
    v54(v55, v4, a2);
    uint64_t v39 = sub_F70D0();
    os_log_type_t v47 = sub_F7680();
    if (os_log_type_enabled(v39, v47))
    {
      os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v48 = 136315138;
      uint64_t v58 = v49;
      uint64_t v54 = (void (*)(char *, uint64_t, uint64_t))v24;
      uint64_t v50 = a3[1](a2, a3);
      uint64_t v57 = sub_A3FC(v50, v51, &v58);
      sub_F77B0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v54)(v13, a2);
      _os_log_impl(&dword_0, v39, v47, "%s reachable because supports text and transfer", v48, 0xCu);
      uint64_t v45 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v45;
    }
LABEL_24:
    v24(v13, a2);

    return 1;
  }
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_F70F0();
  sub_8B44(v38, (uint64_t)static Logger.rcs);
  v54(v13, v4, a2);
  uint64_t v39 = sub_F70D0();
  os_log_type_t v40 = sub_F7680();
  if (!os_log_type_enabled(v39, v40)) {
    goto LABEL_24;
  }
  uint64_t v41 = (uint8_t *)swift_slowAlloc();
  uint64_t v42 = swift_slowAlloc();
  *(_DWORD *)uint64_t v41 = 136315138;
  uint64_t v58 = v42;
  uint64_t v54 = (void (*)(char *, uint64_t, uint64_t))v24;
  uint64_t v43 = a3[1](a2, a3);
  uint64_t v57 = sub_A3FC(v43, v44, &v58);
  sub_F77B0();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v54)(v13, a2);
  _os_log_impl(&dword_0, v39, v40, "%s reachable because is bot and supports chat", v41, 0xCu);
  uint64_t v45 = 1;
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  return v45;
}

uint64_t RCSPersistentMenu.properties.getter()
{
  id v1 = *(void **)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = qword_129080;
    id v3 = v1;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_F70F0();
    sub_8B44(v4, (uint64_t)static Logger.chatbot);
    uint64_t v5 = sub_F70D0();
    os_log_type_t v6 = sub_F7670();
    if (os_log_type_enabled(v5, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v7 = 0;
      _os_log_impl(&dword_0, v5, v6, "Fetched persistent menu", v7, 2u);
      swift_slowDealloc();
    }

    id v8 = [v3 dictionaryRepresentation];
    uint64_t v9 = sub_F71B0();
  }
  else
  {
    if (qword_129080 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_F70F0();
    sub_8B44(v10, (uint64_t)static Logger.chatbot);
    uint64_t v11 = sub_F70D0();
    os_log_type_t v12 = sub_F7690();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v11, v12, "Empty stamped persistent menu", v13, 2u);
      swift_slowDealloc();
    }

    id v8 = [self emptyStampProperty];
    uint64_t v9 = sub_F71B0();
  }

  return v9;
}

uint64_t RCSPersistentMenu.__allocating_init(menu:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_C3458(a1);
  uint64_t v4 = v3;

  *(void *)(v2 + 16) = v4;
  return v2;
}

uint64_t RCSPersistentMenu.init(menu:)(void *a1)
{
  sub_C3458(a1);
  uint64_t v4 = v3;

  *(void *)(v1 + 16) = v4;
  return v1;
}

uint64_t sub_C2D90(void *a1)
{
  uint64_t v1 = a1;
  id v2 = [a1 list];
  sub_6CA4(0, &qword_12A400);
  unint64_t v3 = sub_F7410();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    id v13 = [v1 displayText];
    sub_F7220();

    id v14 = objc_allocWithZone((Class)IMPersistentMenu);
    uint64_t v15 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    sub_F7740();
    uint64_t v16 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    id v17 = [v14 initWithLevel:2 displayText:v15 items:v16];

    return (uint64_t)v17;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_F79B0();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t result = self;
  if (v4 >= 1)
  {
    os_log_type_t v6 = (void *)result;
    uint64_t v18 = v1;
    uint64_t v7 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_F78D0();
      }
      else {
        id v8 = *(id *)(v3 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, "chip", v18);
      uint64_t v11 = (void *)sub_F71F0();
      id v12 = [v6 IMChipFromCTChip:v10 originalID:v11];

      [objc_allocWithZone((Class)IMPersistentMenuItem) initWithType:0 content:v12];
      sub_F73F0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_F7440();
      }
      ++v7;
      sub_F7450();
      sub_F7430();
    }
    while (v4 != v7);
    swift_bridgeObjectRelease();
    uint64_t v1 = v18;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_C3054(void *a1)
{
  uint64_t v1 = a1;
  unint64_t v33 = (unint64_t)_swiftEmptyArrayStorage;
  id v2 = [a1 list];
  sub_6CA4(0, &qword_12A3F0);
  unint64_t v3 = sub_F7410();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_F79B0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    id v25 = [v1 displayText];
    sub_F7220();

    id v26 = objc_allocWithZone((Class)IMPersistentMenu);
    os_log_type_t v27 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    sub_F7740();
    uint64_t v28 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    [v26 initWithLevel:1 displayText:v27 items:v28];

    return;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  if (!v4) {
    goto LABEL_21;
  }
LABEL_3:
  if (v4 >= 1)
  {
    id v29 = v1;
    uint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v7 = &selRef_updateDisplayName_fromDisplayName_fromID_forChatID_identifier_style_messageID_;
    id v8 = (unint64_t *)&unk_12A3F8;
    while (1)
    {
      if (v6) {
        id v9 = (id)sub_F78D0();
      }
      else {
        id v9 = *(id *)(v3 + 8 * v5 + 32);
      }
      id v10 = v9;
      id v11 = [v9 v7[157]];
      sub_F77F0();
      swift_unknownObjectRelease();
      sub_6CA4(0, v8);
      if (swift_dynamicCast())
      {
        id v12 = v31;
        id v13 = [v10 type];
        id v14 = (id)sub_C2D90(v31);
        id v15 = [objc_allocWithZone((Class)IMPersistentMenuItem) initWithType:v13 content:v14];
      }
      else
      {
        sub_6CA4(0, &qword_12A3E8);
        if ((swift_dynamicCast() & 1) == 0)
        {
          sub_6BEC((uint64_t)v32);
          goto LABEL_6;
        }
        id v12 = v31;
        id v30 = [v10 type];
        uint64_t v16 = self;
        unint64_t v17 = v3;
        uint64_t v18 = v4;
        uint64_t v19 = v8;
        unint64_t v20 = v6;
        uint64_t v21 = v7;
        uint64_t v22 = (void *)sub_F71F0();
        id v14 = [v16 IMChipFromCTChip:v31 originalID:v22];

        uint64_t v7 = v21;
        unint64_t v6 = v20;
        id v8 = v19;
        uint64_t v4 = v18;
        unint64_t v3 = v17;
        id v15 = [objc_allocWithZone((Class)IMPersistentMenuItem) initWithType:v30 content:v14];
      }
      uint64_t v23 = v15;

      sub_6BEC((uint64_t)v32);
      if (v23)
      {
        id v24 = v23;
        sub_F73F0();
        if (*(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v33 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_F7440();
        sub_F7450();
        sub_F7430();

        goto LABEL_7;
      }
LABEL_6:

LABEL_7:
      if (v4 == ++v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v29;
        goto LABEL_22;
      }
    }
  }
  __break(1u);
}

void sub_C3458(void *a1)
{
  id v1 = [a1 persistentMenu];
  if (!v1) {
    return;
  }
  id v2 = v1;
  unint64_t v33 = (unint64_t)_swiftEmptyArrayStorage;
  id v3 = [v1 list];
  sub_6CA4(0, &qword_12A3D8);
  unint64_t v4 = sub_F7410();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_F79B0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    id v27 = objc_allocWithZone((Class)IMPersistentMenu);
    sub_F7740();
    uint64_t v28 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    [v27 initWithLevel:0 displayText:0 items:v28];

    return;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
  if (!v5) {
    goto LABEL_23;
  }
LABEL_4:
  if (v5 >= 1)
  {
    id v29 = v2;
    uint64_t v6 = 0;
    unint64_t v7 = v4 & 0xC000000000000001;
    id v8 = &selRef_updateDisplayName_fromDisplayName_fromID_forChatID_identifier_style_messageID_;
    id v9 = (unint64_t *)&unk_12A3E0;
    while (1)
    {
      if (v7) {
        id v10 = (id)sub_F78D0();
      }
      else {
        id v10 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v11 = v10;
      id v12 = [v10 v8[157]];
      sub_F77F0();
      swift_unknownObjectRelease();
      sub_6CA4(0, v9);
      if (swift_dynamicCast())
      {
        id v13 = v31;
        id v14 = [v11 type];
        sub_C3054(v31);
        id v16 = v15;
        id v17 = [objc_allocWithZone((Class)IMPersistentMenuItem) initWithType:v14 content:v15];
      }
      else
      {
        sub_6CA4(0, &qword_12A3E8);
        if ((swift_dynamicCast() & 1) == 0)
        {
          sub_6BEC((uint64_t)v32);
          goto LABEL_7;
        }
        id v13 = v31;
        id v30 = [v11 type];
        uint64_t v18 = self;
        unint64_t v19 = v4;
        uint64_t v20 = v5;
        uint64_t v21 = v9;
        unint64_t v22 = v7;
        uint64_t v23 = v8;
        id v24 = (void *)sub_F71F0();
        id v16 = [v18 IMChipFromCTChip:v31 originalID:v24];

        id v8 = v23;
        unint64_t v7 = v22;
        id v9 = v21;
        uint64_t v5 = v20;
        unint64_t v4 = v19;
        id v17 = [objc_allocWithZone((Class)IMPersistentMenuItem) initWithType:v30 content:v16];
      }
      id v25 = v17;

      sub_6BEC((uint64_t)v32);
      if (v25)
      {
        id v26 = v25;
        sub_F73F0();
        if (*(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v33 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_F7440();
        sub_F7450();
        sub_F7430();

        goto LABEL_8;
      }
LABEL_7:

LABEL_8:
      if (v5 == ++v6)
      {
        swift_bridgeObjectRelease();
        id v2 = v29;
        goto LABEL_24;
      }
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for RCSPersistentMenu()
{
  return self;
}

uint64_t sub_C385C()
{
  sub_F72C0();

  return swift_bridgeObjectRelease();
}

id RCSMessage.fromChatBot.getter()
{
  sub_27F4C(v0, (uint64_t)v8);
  if (v9[58])
  {
    uint64_t v1 = v8[1];
    id v2 = (void *)v8[3];
    if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for RCSMessage(0) + 40)) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v3 = &dword_0 + 1;
    }
    else
    {
      uint64_t v4 = v8[2];
      uint64_t v7 = v8[0];
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = 58;
      v10._object = (void *)0xE100000000000000;
      sub_F72E0(v10);
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = v4;
      v11._object = v2;
      sub_F72E0(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v5 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
      id v3 = objc_msgSend(v5, "__im_isChatBot", v7, v1);
    }
    sub_27FA8((uint64_t)v9);
  }
  else
  {
    sub_27EF8((uint64_t)v8);
    return 0;
  }
  return v3;
}

uint64_t RCSMessage.Typing.isTyping.getter(char a1)
{
  return a1 & 1;
}

unint64_t RCSMessage.SenderInfo.description.getter()
{
  sub_27F4C(v0, (uint64_t)v7);
  if (v9[58])
  {
    v10[0] = v7[0];
    v10[1] = v7[1];
    v11[0] = v8[0];
    *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v8 + 9);
    sub_27FFC((uint64_t)v9, (uint64_t)v6);
    sub_F78A0(42);
    swift_bridgeObjectRelease();
    uint64_t v1 = RCSHandle.rawValue.getter();
    id v3 = v2;
    sub_6D20((uint64_t)v10);
    v12._countAndFlagsBits = v1;
    v12._object = v3;
    sub_F72E0(v12);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 0x6E6974736564202CLL;
    v13._object = (void *)0xEE003D6E6F697461;
    sub_F72E0(v13);
    v14._countAndFlagsBits = RCSDestination.description.getter();
    sub_F72E0(v14);
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = 41;
    v15._object = (void *)0xE100000000000000;
    sub_F72E0(v15);
    unint64_t v4 = 0xD000000000000017;
  }
  else
  {
    sub_27FFC((uint64_t)v7, (uint64_t)v6);
    *(void *)&v10[0] = 0;
    *((void *)&v10[0] + 1) = 0xE000000000000000;
    sub_F78A0(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "SenderInfo.to(");
    HIBYTE(v10[0]) = -18;
    v16._countAndFlagsBits = RCSDestination.description.getter();
    sub_F72E0(v16);
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 41;
    v17._object = (void *)0xE100000000000000;
    sub_F72E0(v17);
    unint64_t v4 = *(void *)&v10[0];
  }
  sub_27FA8((uint64_t)v6);
  return v4;
}

uint64_t RCSMessage.init(senderInfo:originalID:messageID:subscriptionInfo:content:groupIdentity:metadata:isChatBot:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v20 = (int *)type metadata accessor for RCSMessage(0);
  uint64_t v21 = (uint64_t)a9 + v20[7];
  uint64_t v22 = type metadata accessor for RCSMessage.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = (uint64_t)a9 + v20[8];
  *(void *)(v23 + 32) = 0;
  *(_OWORD *)uint64_t v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *((unsigned char *)a9 + v20[11]) = 0;
  *(void *)((char *)a9 + v20[12]) = 0;
  sub_55B4(a1, (uint64_t)a9);
  a9[16] = a2;
  a9[17] = a3;
  a9[18] = a4;
  a9[19] = a5;
  id v24 = (void *)((char *)a9 + v20[13]);
  *id v24 = a6;
  v24[1] = a7;
  v24[2] = a8;
  v24[3] = a10;
  sub_5610(a11, v21, (uint64_t *)&unk_128170);
  uint64_t result = sub_5610(a12, v23, &qword_127C38);
  *(void *)((char *)a9 + v20[9]) = a13;
  *((unsigned char *)a9 + v20[10]) = a14;
  return result;
}

uint64_t RCSMessage.senderInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_27F4C(v1, a1);
}

uint64_t RCSMessage.senderInfo.setter(uint64_t a1)
{
  return sub_C40C0(a1, v1);
}

uint64_t (*RCSMessage.senderInfo.modify())()
{
  return nullsub_5;
}

uint64_t RCSMessage.sender.getter@<X0>(uint64_t a1@<X8>)
{
  sub_27F4C(v1, (uint64_t)v12);
  if (v14[58])
  {
    uint64_t v3 = v12[0];
    uint64_t v4 = v12[1];
    uint64_t v5 = v12[2];
    uint64_t v6 = v12[3];
    uint64_t v7 = v12[4];
    uint64_t v8 = v12[5];
    uint64_t v9 = v12[6];
    char v10 = v13;
    uint64_t result = sub_27FA8((uint64_t)v14);
  }
  else
  {
    uint64_t result = sub_27EF8((uint64_t)v12);
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    char v10 = 0;
  }
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return result;
}

BOOL RCSMessage.looksLikeFromChatBot.getter()
{
  sub_27F4C(v0, (uint64_t)v4);
  if (v5[58])
  {
    int v1 = v4[56];
    sub_27FA8((uint64_t)v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v2 = (v1 - 1) < 2;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_27EF8((uint64_t)v4);
    return 0;
  }
  return v2;
}

uint64_t RCSMessage.fromMe.getter()
{
  sub_27F4C(v0, (uint64_t)&v3);
  int v1 = v5;
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_27FA8((uint64_t)&v4);
  }
  else
  {
    sub_27EF8((uint64_t)&v3);
  }
  return v1 ^ 1u;
}

uint64_t type metadata accessor for RCSMessage(uint64_t a1)
{
  return sub_C4088(a1, (uint64_t *)&unk_12A4C0);
}

uint64_t type metadata accessor for RCSMessage.Content(uint64_t a1)
{
  return sub_C4088(a1, qword_12A590);
}

uint64_t sub_C4088(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_C40C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t RCSMessage.destination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v6;
  sub_27F4C(v2, (uint64_t)&v6);
  if (v7[58] == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = (uint64_t *)v7;
  }
  return sub_27FFC((uint64_t)v4, a1);
}

uint64_t RCSMessage.originalID.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RCSMessage.originalID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

uint64_t (*RCSMessage.originalID.modify())()
{
  return nullsub_6;
}

uint64_t RCSMessage.messageID.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RCSMessage.messageID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return result;
}

uint64_t (*RCSMessage.messageID.modify())()
{
  return nullsub_7;
}

uint64_t RCSMessage.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RCSMessage(0);
  return sub_2C4C0(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_128170);
}

uint64_t RCSMessage.content.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RCSMessage(0);
  return sub_5610(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_128170);
}

uint64_t (*RCSMessage.content.modify())()
{
  return nullsub_8;
}

uint64_t RCSMessage.groupIdentity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RCSMessage(0);
  return sub_2C4C0(v1 + *(int *)(v3 + 32), a1, &qword_127C38);
}

uint64_t RCSMessage.groupIdentity.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RCSMessage(0);
  return sub_5610(a1, v1 + *(int *)(v3 + 32), &qword_127C38);
}

uint64_t (*RCSMessage.groupIdentity.modify())()
{
  return nullsub_9;
}

uint64_t RCSMessage.metadata.getter()
{
  type metadata accessor for RCSMessage(0);

  return swift_bridgeObjectRetain();
}

uint64_t RCSMessage.metadata.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for RCSMessage(0) + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RCSMessage.metadata.modify())()
{
  return nullsub_10;
}

uint64_t RCSMessage.isChatBot.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RCSMessage(0) + 40));
}

uint64_t RCSMessage.isChatBot.setter(char a1)
{
  uint64_t result = type metadata accessor for RCSMessage(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*RCSMessage.isChatBot.modify())()
{
  return nullsub_11;
}

uint64_t RCSMessage.alreadyReceivedReplicatedVersion.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RCSMessage(0) + 44));
}

uint64_t RCSMessage.alreadyReceivedReplicatedVersion.setter(char a1)
{
  uint64_t result = type metadata accessor for RCSMessage(0);
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*RCSMessage.alreadyReceivedReplicatedVersion.modify())()
{
  return nullsub_12;
}

uint64_t RCSMessageMetadata.Entry.headerValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t RCSHandle.scheme.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RCSMessage.SubscriptionInfo.handleID.modify())()
{
  return nullsub_13;
}

uint64_t RCSMessage.SubscriptionInfo.simID.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t (*RCSMessage.SubscriptionInfo.simID.modify())()
{
  return nullsub_14;
}

uint64_t sub_C471C()
{
  if (*v0) {
    return 0x44496D6973;
  }
  else {
    return 0x4449656C646E6168;
  }
}

uint64_t sub_C4754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C61CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_C477C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_C4788(uint64_t a1)
{
  unint64_t v2 = sub_C4974();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C47C4(uint64_t a1)
{
  unint64_t v2 = sub_C4974();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RCSMessage.SubscriptionInfo.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_551C(&qword_12A408);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6BA8(a1, a1[3]);
  sub_C4974();
  sub_F7C80();
  char v14 = 0;
  sub_F7AA0();
  if (!v5)
  {
    char v13 = 1;
    sub_F7AA0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_C4974()
{
  unint64_t result = qword_12A410;
  if (!qword_12A410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A410);
  }
  return result;
}

uint64_t RCSMessage.SubscriptionInfo.init(from:)(void *a1)
{
  uint64_t result = sub_C62B8(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_C49F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_C62B8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_C4A24(void *a1)
{
  return RCSMessage.SubscriptionInfo.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t RCSMessage.subscriptionInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RCSMessage(0) + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RCSMessage.subscriptionInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)(v4 + *(int *)(type metadata accessor for RCSMessage(0) + 52));
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  void *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return result;
}

uint64_t (*RCSMessage.subscriptionInfo.modify())()
{
  return nullsub_15;
}

uint64_t RCSMessage.ContentType.description.getter(char a1)
{
  uint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726566736E617274;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 0x70756F7267;
      break;
    case 4:
      uint64_t result = 0x676E69707974;
      break;
    case 5:
      uint64_t result = 0x6472614368636972;
      break;
    case 6:
    case 7:
      uint64_t result = 0x6574736567677573;
      break;
    case 8:
      uint64_t result = 0x6341656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t RCSMessage.ContentType.rawValue.getter(char a1)
{
  uint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726566736E617274;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 0x70756F7267;
      break;
    case 4:
      uint64_t result = 0x676E69707974;
      break;
    case 5:
      uint64_t result = 0x6472614368636972;
      break;
    case 6:
    case 7:
      uint64_t result = 0x6574736567677573;
      break;
    case 8:
      uint64_t result = 0x6341656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C4D9C(unsigned __int8 *a1, char *a2)
{
  return sub_E83E8(*a1, *a2);
}

uint64_t sub_C4DA8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s7CoreRCS10RCSMessageV11ContentTypeO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_C4DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RCSMessage.ContentType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_C4E04()
{
  return sub_F73D0();
}

uint64_t sub_C4E64()
{
  return sub_F7380();
}

Swift::Int sub_C4EB4()
{
  return sub_F7C50();
}

uint64_t sub_C4EFC()
{
  return sub_C385C();
}

Swift::Int sub_C4F04()
{
  return sub_F7C50();
}

uint64_t sub_C4F48()
{
  return RCSMessage.ContentType.description.getter(*v0);
}

uint64_t RCSMessage.Content.type.getter()
{
  uint64_t v1 = type metadata accessor for RCSMessage.Content(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C64E8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 4;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_551C(&qword_128218);
      swift_release();
      sub_C654C((uint64_t)v3, type metadata accessor for RCSFile);
      uint64_t result = 1;
      break;
    case 2:
      sub_C654C((uint64_t)v3, type metadata accessor for RCSMessage.Content);
      uint64_t result = 2;
      break;
    case 3:
      sub_C654C((uint64_t)v3, type metadata accessor for RCSMessage.Content);
      uint64_t result = 3;
      break;
    case 4:
      return result;
    case 5:
      sub_C654C((uint64_t)v3, type metadata accessor for RCSMessage.Content);
      uint64_t result = 5;
      break;
    case 6:
      sub_C654C((uint64_t)v3, type metadata accessor for RCSMessage.Content);
      uint64_t result = 6;
      break;
    case 7:
      sub_C654C((uint64_t)v3, type metadata accessor for RCSMessage.Content);
      uint64_t result = 7;
      break;
    case 8:
      uint64_t result = 8;
      break;
    default:
      sub_C654C((uint64_t)v3, type metadata accessor for RCSMessage.Content);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t (*RCSMessage.Coordinates.latitude.modify())()
{
  return nullsub_16;
}

double RCSMessage.Coordinates.longitude.getter(double a1, double a2)
{
  return a2;
}

uint64_t (*RCSMessage.Coordinates.longitude.modify())()
{
  return nullsub_17;
}

uint64_t RCSHandle.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RCSMessage.Coordinates.description.modify())()
{
  return nullsub_18;
}

uint64_t sub_C51F8()
{
  uint64_t v1 = 0x64757469676E6F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x7470697263736564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_C5260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C6600(a1, a2);
  *a3 = result;
  return result;
}

void sub_C5288(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_C5294(uint64_t a1)
{
  unint64_t v2 = sub_C65AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C52D0(uint64_t a1)
{
  unint64_t v2 = sub_C65AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RCSMessage.Coordinates.encode(to:)(void *a1)
{
  uint64_t v3 = sub_551C(&qword_12A418);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6BA8(a1, a1[3]);
  sub_C65AC();
  sub_F7C80();
  char v11 = 0;
  sub_F7AF0();
  if (!v1)
  {
    char v10 = 1;
    sub_F7AF0();
    char v9 = 2;
    sub_F7AA0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RCSMessage.Coordinates.init(from:)(void *a1)
{
  uint64_t result = sub_C677C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_C54DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_C677C(a1);
  if (!v2)
  {
    *a2 = v6;
    a2[1] = v7;
    a2[2] = result;
    a2[3] = v5;
  }
  return result;
}

uint64_t sub_C550C(void *a1)
{
  return RCSMessage.Coordinates.encode(to:)(a1);
}

uint64_t RCSMessage.Typing.isTyping.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*RCSMessage.Typing.isTyping.modify())()
{
  return nullsub_19;
}

uint64_t sub_C5558()
{
  return 0x676E697079547369;
}

uint64_t sub_C5570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676E697079547369 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_F7B60();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_C5608(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_C5614(uint64_t a1)
{
  unint64_t v2 = sub_C6958();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C5650(uint64_t a1)
{
  unint64_t v2 = sub_C6958();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RCSMessage.Typing.encode(to:)(void *a1)
{
  uint64_t v2 = sub_551C(&qword_12A428);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6BA8(a1, a1[3]);
  sub_C6958();
  sub_F7C80();
  sub_F7AE0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RCSMessage.Typing.init(from:)(void *a1)
{
  uint64_t v3 = sub_551C(&qword_12A438);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v7 = sub_6BA8(a1, a1[3]);
  sub_C6958();
  sub_F7C70();
  if (!v1)
  {
    unsigned __int8 v7 = sub_F7A60();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_6BEC((uint64_t)a1);
  return v7 & 1;
}

uint64_t sub_C5908@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_551C(&qword_12A438);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6BA8(a1, a1[3]);
  sub_C6958();
  sub_F7C70();
  if (v2) {
    return sub_6BEC((uint64_t)a1);
  }
  char v9 = sub_F7A60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_6BEC((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_C5A68(void *a1)
{
  uint64_t v2 = sub_551C(&qword_12A428);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6BA8(a1, a1[3]);
  sub_C6958();
  sub_F7C80();
  sub_F7AE0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t RCSGroup.identity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_289D4(v1, a1);
}

uint64_t RCSGroup.identity.setter(long long *a1)
{
  sub_6BEC(v1);

  return sub_1E87C(a1, v1);
}

uint64_t (*RCSGroup.identity.modify())()
{
  return nullsub_20;
}

uint64_t RCSGroup.participants.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RCSGroup.participants.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*RCSGroup.participants.modify())()
{
  return nullsub_21;
}

uint64_t RCSGroup.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RCSGroup.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*RCSGroup.displayName.modify())()
{
  return nullsub_22;
}

uint64_t RCSGroup.icon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2C4C0(v1 + 64, a1, &qword_12A440);
}

uint64_t RCSGroup.icon.setter(uint64_t a1)
{
  return sub_5610(a1, v1 + 64, &qword_12A440);
}

uint64_t (*RCSGroup.icon.modify())()
{
  return nullsub_23;
}

uint64_t (*RCSGroup.Icon.name.modify())()
{
  return nullsub_24;
}

uint64_t RCSGroup.Icon.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_2A4E4(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t RCSGroup.Icon.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2852C(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RCSGroup.Icon.data.modify())()
{
  return nullsub_25;
}

uint64_t RCSGroup.Icon.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RCSGroup.Icon.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*RCSGroup.Icon.type.modify())()
{
  return nullsub_26;
}

uint64_t sub_C5EA0()
{
  return *(void *)&aName_1[8 * *v0];
}

uint64_t sub_C5EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C6A48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C5EE0(uint64_t a1)
{
  unint64_t v2 = sub_C69AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C5F1C(uint64_t a1)
{
  unint64_t v2 = sub_C69AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RCSGroup.Icon.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_551C(&qword_12A448);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_6BA8(a1, a1[3]);
  sub_C69AC();
  sub_F7C80();
  LOBYTE(v11) = 0;
  sub_F7AD0();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 16);
    v10[15] = 1;
    sub_C6A00();
    sub_F7B10();
    LOBYTE(v11) = 2;
    sub_F7AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

double RCSGroup.Icon.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_C6B70(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_C613C(void *a1)
{
  return RCSGroup.Icon.encode(to:)(a1);
}

uint64_t RCSGroup.shouldRouteToSenderChat.getter()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 40) + 16);
  sub_1E9A0(v0, (uint64_t)v4);
  if (v1 > 1)
  {
    sub_1E8E8((uint64_t)v4);
    return 0;
  }
  uint64_t v2 = v4[7];
  swift_bridgeObjectRetain();
  sub_1E8E8((uint64_t)v4);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t sub_C61CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E6168 && a2 == 0xE800000000000000;
  if (v2 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44496D6973 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_F7B60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_C62B8(void *a1)
{
  uint64_t v3 = sub_551C(&qword_12A648);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_6BA8(a1, a1[3]);
  sub_C4974();
  sub_F7C70();
  if (v1)
  {
    sub_6BEC((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_F7A20();
    char v10 = 1;
    sub_F7A20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_6BEC((uint64_t)a1);
  }
  return v7;
}

uint64_t _s7CoreRCS10RCSMessageV11ContentTypeO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_11F068;
  v6._object = a2;
  unint64_t v4 = sub_F7A10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

uint64_t sub_C64E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSMessage.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C654C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_C65AC()
{
  unint64_t result = qword_12A420;
  if (!qword_12A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A420);
  }
  return result;
}

uint64_t sub_C6600(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_F7B60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_C677C(void *a1)
{
  uint64_t v3 = sub_551C(&qword_12A640);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (uint64_t)sub_6BA8(a1, a1[3]);
  sub_C65AC();
  sub_F7C70();
  if (!v1)
  {
    v9[15] = 0;
    sub_F7A70();
    v9[14] = 1;
    sub_F7A70();
    v9[13] = 2;
    uint64_t v7 = sub_F7A20();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_6BEC((uint64_t)a1);
  return v7;
}

unint64_t sub_C6958()
{
  unint64_t result = qword_12A430;
  if (!qword_12A430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A430);
  }
  return result;
}

unint64_t sub_C69AC()
{
  unint64_t result = qword_12A450;
  if (!qword_12A450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A450);
  }
  return result;
}

unint64_t sub_C6A00()
{
  unint64_t result = qword_12A458;
  if (!qword_12A458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A458);
  }
  return result;
}

uint64_t sub_C6A48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_F7B60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_C6B70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_551C(&qword_12A630);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6BA8(a1, a1[3]);
  sub_C69AC();
  sub_F7C70();
  if (v2) {
    return sub_6BEC((uint64_t)a1);
  }
  LOBYTE(v24) = 0;
  uint64_t v9 = sub_F7A50();
  uint64_t v11 = v10;
  uint64_t v23 = v9;
  char v26 = 1;
  sub_CD57C();
  swift_bridgeObjectRetain();
  sub_F7A90();
  uint64_t v12 = v24;
  LOBYTE(v24) = 2;
  unint64_t v21 = v25;
  uint64_t v22 = v12;
  sub_2A4E4(v12, v25);
  uint64_t v13 = sub_F7A50();
  uint64_t v15 = v14;
  uint64_t v16 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  unint64_t v18 = v21;
  uint64_t v17 = v22;
  sub_2A4E4(v22, v21);
  swift_bridgeObjectRetain();
  sub_2852C(v17, v18);
  swift_bridgeObjectRelease();
  sub_6BEC((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_2852C(v17, v18);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v17;
  a2[3] = v18;
  a2[4] = v16;
  a2[5] = v15;
  return result;
}

unint64_t sub_C6E50()
{
  unint64_t result = qword_12A460;
  if (!qword_12A460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A460);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for RCSMessage(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 122);
    if (v7)
    {
      uint64_t v8 = a2[1];
      *(void *)uint64_t v4 = *a2;
      *(void *)(v4 + 8) = v8;
      uint64_t v9 = a2[3];
      *(void *)(v4 + 16) = a2[2];
      *(void *)(v4 + 24) = v9;
      uint64_t v10 = a2[5];
      *(void *)(v4 + 32) = a2[4];
      *(void *)(v4 + 40) = v10;
      *(void *)(v4 + 48) = a2[6];
      *(unsigned char *)(v4 + 56) = *((unsigned char *)a2 + 56);
      char v11 = *((unsigned char *)a2 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11)
      {
        long long v12 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(v4 + 88) = v12;
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v4 + 64, (uint64_t)(a2 + 8));
      }
      else
      {
        uint64_t v16 = a2[9];
        *(void *)(v4 + 64) = a2[8];
        *(void *)(v4 + 72) = v16;
        uint64_t v17 = a2[11];
        *(void *)(v4 + 80) = a2[10];
        *(void *)(v4 + 88) = v17;
        uint64_t v18 = a2[13];
        *(void *)(v4 + 96) = a2[12];
        *(void *)(v4 + 104) = v18;
        *(void *)(v4 + 112) = a2[14];
        *(unsigned char *)(v4 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(v4 + 121) = v11;
    }
    else
    {
      char v14 = *((unsigned char *)a2 + 57);
      if (v14)
      {
        long long v15 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v15;
        (**(void (***)(uint64_t, uint64_t *))(v15 - 8))(a1, a2);
      }
      else
      {
        uint64_t v19 = a2[1];
        *(void *)uint64_t v4 = *a2;
        *(void *)(v4 + 8) = v19;
        uint64_t v20 = a2[3];
        *(void *)(v4 + 16) = a2[2];
        *(void *)(v4 + 24) = v20;
        uint64_t v21 = a2[5];
        *(void *)(v4 + 32) = a2[4];
        *(void *)(v4 + 40) = v21;
        *(void *)(v4 + 48) = a2[6];
        *(unsigned char *)(v4 + 56) = *((unsigned char *)a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(v4 + 57) = v14;
    }
    *(unsigned char *)(v4 + 122) = v7;
    uint64_t v22 = a2[17];
    *(void *)(v4 + 128) = a2[16];
    *(void *)(v4 + 136) = v22;
    uint64_t v23 = a2[19];
    *(void *)(v4 + 144) = a2[18];
    *(void *)(v4 + 152) = v23;
    uint64_t v24 = a3[7];
    unint64_t v25 = (void *)(v4 + v24);
    char v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for RCSMessage.Content(0);
    uint64_t v28 = *(void *)(v27 - 8);
    id v29 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48);
    uint64_t v30 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v26, 1, v30))
    {
      uint64_t v31 = sub_551C((uint64_t *)&unk_128170);
      memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v91 = v28;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v32 = v26[1];
          unint64_t v33 = v25;
          *unint64_t v25 = *v26;
          v25[1] = v32;
          v25[2] = v26[2];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_27;
        case 1u:
          uint64_t v89 = v30;
          uint64_t v34 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v26, 1, v34))
          {
            uint64_t v36 = sub_551C(&qword_1283F0);
            unint64_t v37 = v25;
            memcpy(v25, v26, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            unint64_t v37 = v25;
            *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
            uint64_t v45 = v35;
            v25[2] = v26[2];
            uint64_t v46 = *(int *)(v34 + 24);
            char v87 = (char *)v26 + v46;
            uint64_t v88 = (char *)v25 + v46;
            uint64_t v47 = sub_F6DC0();
            long long v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
            swift_bridgeObjectRetain();
            v85(v88, v87, v47);
            uint64_t v48 = *(int *)(v34 + 28);
            uint64_t v49 = (char *)v25 + v48;
            uint64_t v50 = (char *)v26 + v48;
            uint64_t v51 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v34);
          }
          uint64_t v52 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          uint64_t v53 = (char *)v37 + v52;
          uint64_t v54 = (char *)v26 + v52;
          *(_OWORD *)uint64_t v53 = *(_OWORD *)((char *)v26 + v52);
          uint64_t v56 = *(void *)((char *)v26 + v52 + 16);
          uint64_t v55 = *(void *)((char *)v26 + v52 + 24);
          *((void *)v53 + 2) = v56;
          *((void *)v53 + 3) = v55;
          *((void *)v53 + 4) = *((void *)v54 + 4);
          uint64_t v57 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v58 = v57[7];
          uint64_t v84 = &v54[v58];
          uint64_t v86 = &v53[v58];
          uint64_t v59 = sub_F6DC0();
          uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v83(v86, v84, v59);
          unint64_t v33 = v25;
          uint64_t v60 = v57[8];
          os_log_type_t v61 = &v53[v60];
          uint64_t v62 = &v54[v60];
          uint64_t v63 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
          v53[v57[9]] = v54[v57[9]];
          uint64_t v64 = v57[10];
          uint64_t v65 = &v53[v64];
          uint64_t v66 = &v54[v64];
          v65[8] = v66[8];
          *(void *)uint64_t v65 = *(void *)v66;
          uint64_t v67 = sub_551C(&qword_128218);
          *(void *)((char *)v33 + *(int *)(v67 + 48)) = *(void *)((char *)v26 + *(int *)(v67 + 48));
          swift_retain();
          uint64_t v30 = v89;
          goto LABEL_27;
        case 2u:
          unint64_t v33 = v25;
          *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
          uint64_t v38 = v26[3];
          v25[2] = v26[2];
          v25[3] = v38;
          void v25[4] = v26[4];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_27;
        case 3u:
          uint64_t v90 = v30;
          long long v39 = *(_OWORD *)(v26 + 3);
          unint64_t v33 = v25;
          *(_OWORD *)(v25 + 3) = v39;
          (**(void (***)(void *, void *))(v39 - 8))(v25, v26);
          uint64_t v40 = v26[6];
          v25[5] = v26[5];
          v25[6] = v40;
          v25[7] = v26[7];
          uint64_t v41 = v26[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v41)
          {
            v25[8] = v26[8];
            v25[9] = v41;
            uint64_t v42 = v26[10];
            unint64_t v43 = v26[11];
            swift_bridgeObjectRetain();
            sub_2A4E4(v42, v43);
            v25[10] = v42;
            v25[11] = v43;
            uint64_t v44 = v26[13];
            v25[12] = v26[12];
            v25[13] = v44;
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v68 = *((_OWORD *)v26 + 5);
            *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
            *((_OWORD *)v25 + 5) = v68;
            *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
          }
          uint64_t v30 = v90;
          goto LABEL_27;
        case 5u:
        case 6u:
        case 7u:
          unint64_t v33 = v25;
          *unint64_t v25 = *v26;
          swift_retain();
LABEL_27:
          swift_storeEnumTagMultiPayload();
          uint64_t v28 = v91;
          break;
        default:
          unint64_t v33 = v25;
          memcpy(v25, v26, *(void *)(v28 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v33, 0, 1, v30);
    }
    uint64_t v69 = a3[8];
    uint64_t v70 = v4 + v69;
    uint64_t v71 = (uint64_t)a2 + v69;
    uint64_t v72 = *(uint64_t *)((char *)a2 + v69 + 24);
    if (v72)
    {
      uint64_t v73 = *(void *)(v71 + 32);
      *(void *)(v70 + 24) = v72;
      *(void *)(v70 + 32) = v73;
      (**(void (***)(void))(v72 - 8))();
    }
    else
    {
      long long v74 = *(_OWORD *)(v71 + 16);
      *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
      *(_OWORD *)(v70 + 16) = v74;
      *(void *)(v70 + 32) = *(void *)(v71 + 32);
    }
    uint64_t v75 = a3[10];
    *(void *)(v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(unsigned char *)(v4 + v75) = *((unsigned char *)a2 + v75);
    uint64_t v76 = a3[12];
    *(unsigned char *)(v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)(v4 + v76) = *(uint64_t *)((char *)a2 + v76);
    uint64_t v77 = a3[13];
    uint64_t v78 = (void *)(v4 + v77);
    os_log_t v79 = (uint64_t *)((char *)a2 + v77);
    uint64_t v80 = v79[1];
    *uint64_t v78 = *v79;
    v78[1] = v80;
    uint64_t v81 = v79[3];
    v78[2] = v79[2];
    v78[3] = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RCSMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (*(unsigned char *)(a1 + 122))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v3 + 121))
    {
      a1 = v3 + 64;
LABEL_5:
      sub_6BEC(a1);
      goto LABEL_7;
    }
  }
  else if (*(unsigned char *)(a1 + 57))
  {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(v3 + *(int *)(a2 + 28));
  uint64_t v5 = type metadata accessor for RCSMessage.Content(0);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_13;
      case 1u:
        uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6))
        {
          swift_bridgeObjectRelease();
          char v7 = (char *)v4 + *(int *)(v6 + 24);
          uint64_t v8 = sub_F6DC0();
          (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
          uint64_t v9 = (char *)v4 + *(int *)(v6 + 28);
          uint64_t v10 = sub_F6EE0();
          (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        }
        char v11 = (char *)v4 + *(int *)(type metadata accessor for RCSFile(0) + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v13 = &v11[*(int *)(v12 + 28)];
        uint64_t v14 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        long long v15 = &v11[*(int *)(v12 + 32)];
        uint64_t v16 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
        sub_551C(&qword_128218);
        goto LABEL_13;
      case 3u:
        sub_6BEC((uint64_t)v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v4[9])
        {
          swift_bridgeObjectRelease();
          sub_2852C(v4[10], v4[11]);
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
      case 6u:
      case 7u:
LABEL_13:
        swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v17 = v3 + *(int *)(a2 + 32);
  if (*(void *)(v17 + 24)) {
    sub_6BEC(v17);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RCSMessage(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 122);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    char v10 = *(unsigned char *)(a2 + 121);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      long long v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 88) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 64, a2 + 64);
    }
    else
    {
      uint64_t v14 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v14;
      uint64_t v15 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v15;
      uint64_t v16 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v16;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 121) = v10;
  }
  else
  {
    char v12 = *(unsigned char *)(a2 + 57);
    if (v12)
    {
      long long v13 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1, a2);
    }
    else
    {
      uint64_t v17 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v17;
      uint64_t v18 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v18;
      uint64_t v19 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v19;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 57) = v12;
  }
  *(unsigned char *)(a1 + 122) = v6;
  uint64_t v20 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v20;
  uint64_t v21 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v21;
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v28 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27(v24, 1, v28))
  {
    uint64_t v29 = sub_551C((uint64_t *)&unk_128170);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v89 = v26;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v30 = v24[1];
        uint64_t v31 = v23;
        *uint64_t v23 = *v24;
        v23[1] = v30;
        v23[2] = v24[2];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_25;
      case 1u:
        uint64_t v87 = v28;
        uint64_t v32 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(v24, 1, v32))
        {
          uint64_t v34 = sub_551C(&qword_1283F0);
          uint64_t v35 = v23;
          memcpy(v23, v24, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v35 = v23;
          *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
          uint64_t v43 = v33;
          v23[2] = v24[2];
          uint64_t v44 = *(int *)(v32 + 24);
          long long v85 = (char *)v24 + v44;
          uint64_t v86 = (char *)v23 + v44;
          uint64_t v45 = sub_F6DC0();
          uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v83(v86, v85, v45);
          uint64_t v46 = *(int *)(v32 + 28);
          uint64_t v47 = (char *)v23 + v46;
          uint64_t v48 = (char *)v24 + v46;
          uint64_t v49 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v23, 0, 1, v32);
        }
        uint64_t v50 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v51 = (char *)v35 + v50;
        uint64_t v52 = (char *)v24 + v50;
        *(_OWORD *)uint64_t v51 = *(_OWORD *)((char *)v24 + v50);
        uint64_t v54 = *(void *)((char *)v24 + v50 + 16);
        uint64_t v53 = *(void *)((char *)v24 + v50 + 24);
        *((void *)v51 + 2) = v54;
        *((void *)v51 + 3) = v53;
        *((void *)v51 + 4) = *((void *)v52 + 4);
        uint64_t v55 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v56 = v55[7];
        uint64_t v82 = &v52[v56];
        uint64_t v84 = &v51[v56];
        uint64_t v57 = sub_F6DC0();
        uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v81(v84, v82, v57);
        uint64_t v31 = v23;
        uint64_t v58 = v55[8];
        uint64_t v59 = &v51[v58];
        uint64_t v60 = &v52[v58];
        uint64_t v61 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        v51[v55[9]] = v52[v55[9]];
        uint64_t v62 = v55[10];
        uint64_t v63 = &v51[v62];
        uint64_t v64 = &v52[v62];
        v63[8] = v64[8];
        *(void *)uint64_t v63 = *(void *)v64;
        uint64_t v65 = sub_551C(&qword_128218);
        *(void *)((char *)v31 + *(int *)(v65 + 48)) = *(void *)((char *)v24 + *(int *)(v65 + 48));
        swift_retain();
        uint64_t v28 = v87;
        goto LABEL_25;
      case 2u:
        uint64_t v31 = v23;
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        uint64_t v36 = v24[3];
        v23[2] = v24[2];
        v23[3] = v36;
        v23[4] = v24[4];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_25;
      case 3u:
        uint64_t v88 = v28;
        long long v37 = *(_OWORD *)(v24 + 3);
        uint64_t v31 = v23;
        *(_OWORD *)(v23 + 3) = v37;
        (**(void (***)(void *, void *))(v37 - 8))(v23, v24);
        uint64_t v38 = v24[6];
        v23[5] = v24[5];
        v23[6] = v38;
        v23[7] = v24[7];
        uint64_t v39 = v24[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39)
        {
          v23[8] = v24[8];
          v23[9] = v39;
          uint64_t v40 = v24[10];
          unint64_t v41 = v24[11];
          swift_bridgeObjectRetain();
          sub_2A4E4(v40, v41);
          v23[10] = v40;
          v23[11] = v41;
          uint64_t v42 = v24[13];
          v23[12] = v24[12];
          v23[13] = v42;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v66 = *((_OWORD *)v24 + 5);
          *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
          *((_OWORD *)v23 + 5) = v66;
          *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
        }
        uint64_t v28 = v88;
        goto LABEL_25;
      case 5u:
      case 6u:
      case 7u:
        uint64_t v31 = v23;
        *uint64_t v23 = *v24;
        swift_retain();
LABEL_25:
        swift_storeEnumTagMultiPayload();
        uint64_t v26 = v89;
        break;
      default:
        uint64_t v31 = v23;
        memcpy(v23, v24, *(void *)(v26 + 64));
        break;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v31, 0, 1, v28);
  }
  uint64_t v67 = a3[8];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  uint64_t v70 = *(void *)(a2 + v67 + 24);
  if (v70)
  {
    uint64_t v71 = *(void *)(v69 + 32);
    *(void *)(v68 + 24) = v70;
    *(void *)(v68 + 32) = v71;
    (**(void (***)(void))(v70 - 8))();
  }
  else
  {
    long long v72 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v72;
    *(void *)(v68 + 32) = *(void *)(v69 + 32);
  }
  uint64_t v73 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v73) = *(unsigned char *)(a2 + v73);
  uint64_t v74 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v74) = *(void *)(a2 + v74);
  uint64_t v75 = a3[13];
  uint64_t v76 = (void *)(a1 + v75);
  uint64_t v77 = (void *)(a2 + v75);
  uint64_t v78 = v77[1];
  *uint64_t v76 = *v77;
  v76[1] = v78;
  uint64_t v79 = v77[3];
  v76[2] = v77[2];
  v76[3] = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RCSMessage(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_27EF8(a1);
    char v6 = *(unsigned char *)(a2 + 122);
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      char v7 = *(unsigned char *)(a2 + 121);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7)
      {
        uint64_t v8 = *(void *)(a2 + 88);
        *(void *)(a1 + 88) = v8;
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 64, a2 + 64);
      }
      else
      {
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 121) = v7;
    }
    else
    {
      char v9 = *(unsigned char *)(a2 + 57);
      if (v9)
      {
        uint64_t v10 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v10;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1, a2);
      }
      else
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(a1 + 57) = v9;
    }
    *(unsigned char *)(a1 + 122) = v6;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  char v12 = (void *)(a1 + v11);
  long long v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *char v12 = *v13;
          v12[1] = v13[1];
          void v12[2] = v13[2];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_40;
        case 1u:
          uint64_t v20 = type metadata accessor for RCSFile.ThumbnailInformation(0);
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v13, 1, v20))
          {
            uint64_t v22 = sub_551C(&qword_1283F0);
            memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            *char v12 = *v13;
            v12[1] = v13[1];
            void v12[2] = v13[2];
            uint64_t v34 = *(int *)(v20 + 24);
            uint64_t v93 = (char *)v13 + v34;
            uint64_t v97 = (char *)v12 + v34;
            uint64_t v100 = v21;
            uint64_t v35 = sub_F6DC0();
            uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v89(v97, v93, v35);
            uint64_t v36 = *(int *)(v20 + 28);
            long long v37 = (char *)v12 + v36;
            uint64_t v38 = (char *)v13 + v36;
            uint64_t v39 = sub_F6EE0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v12, 0, 1, v20);
          }
          uint64_t v40 = *(int *)(type metadata accessor for RCSFile(0) + 20);
          unint64_t v41 = (void *)((char *)v12 + v40);
          uint64_t v42 = (char *)v13 + v40;
          *unint64_t v41 = *(void *)((char *)v13 + v40);
          v41[1] = *(void *)((char *)v13 + v40 + 8);
          v41[2] = *(void *)((char *)v13 + v40 + 16);
          v41[3] = *(void *)((char *)v13 + v40 + 24);
          v41[4] = *(void *)((char *)v13 + v40 + 32);
          uint64_t v101 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
          uint64_t v43 = v101[7];
          uint64_t v87 = &v42[v43];
          uint64_t v90 = (char *)v41 + v43;
          uint64_t v44 = sub_F6DC0();
          uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v86(v90, v87, v44);
          uint64_t v45 = v101[8];
          uint64_t v94 = &v42[v45];
          uint64_t v98 = (char *)v41 + v45;
          uint64_t v46 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v98, v94, v46);
          *((unsigned char *)v41 + v101[9]) = v42[v101[9]];
          uint64_t v47 = v101[10];
          uint64_t v48 = (char *)v41 + v47;
          uint64_t v49 = &v42[v47];
          char v50 = v49[8];
          *(void *)uint64_t v48 = *(void *)v49;
          v48[8] = v50;
          uint64_t v51 = sub_551C(&qword_128218);
          *(void *)((char *)v12 + *(int *)(v51 + 48)) = *(void *)((char *)v13 + *(int *)(v51 + 48));
          swift_retain();
          goto LABEL_40;
        case 2u:
          *char v12 = *v13;
          v12[1] = v13[1];
          void v12[2] = v13[2];
          v12[3] = v13[3];
          v12[4] = v13[4];
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_40;
        case 3u:
          uint64_t v23 = v13[3];
          v12[3] = v23;
          v12[4] = v13[4];
          (**(void (***)(void *, void *))(v23 - 8))(v12, v13);
          v12[5] = v13[5];
          v12[6] = v13[6];
          void v12[7] = v13[7];
          uint64_t v24 = v13[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v24)
          {
            v12[8] = v13[8];
            v12[9] = v13[9];
            uint64_t v25 = v13[10];
            unint64_t v26 = v13[11];
            swift_bridgeObjectRetain();
            sub_2A4E4(v25, v26);
            v12[10] = v25;
            v12[11] = v26;
            v12[12] = v13[12];
            v12[13] = v13[13];
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v52 = *((_OWORD *)v13 + 4);
            long long v53 = *((_OWORD *)v13 + 6);
            *((_OWORD *)v12 + 5) = *((_OWORD *)v13 + 5);
            *((_OWORD *)v12 + 6) = v53;
            *((_OWORD *)v12 + 4) = v52;
          }
          goto LABEL_40;
        case 5u:
        case 6u:
        case 7u:
          *char v12 = *v13;
          swift_retain();
LABEL_40:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v12, v13, *(void *)(v15 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_42;
    }
    goto LABEL_18;
  }
  if (v18)
  {
    sub_C654C((uint64_t)v12, type metadata accessor for RCSMessage.Content);
LABEL_18:
    size_t v19 = *(void *)(*(void *)(sub_551C((uint64_t *)&unk_128170) - 8) + 64);
LABEL_19:
    memcpy(v12, v13, v19);
    goto LABEL_42;
  }
  if (a1 != a2)
  {
    sub_C654C((uint64_t)v12, type metadata accessor for RCSMessage.Content);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *char v12 = *v13;
        v12[1] = v13[1];
        void v12[2] = v13[2];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v27 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v27))
        {
          uint64_t v29 = sub_551C(&qword_1283F0);
          memcpy(v12, v13, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          *char v12 = *v13;
          v12[1] = v13[1];
          uint64_t v102 = v28;
          void v12[2] = v13[2];
          uint64_t v64 = *(int *)(v27 + 24);
          uint64_t v95 = (char *)v13 + v64;
          uint64_t v99 = (char *)v12 + v64;
          uint64_t v65 = sub_F6DC0();
          uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
          swift_bridgeObjectRetain();
          v91(v99, v95, v65);
          uint64_t v66 = *(int *)(v27 + 28);
          uint64_t v67 = (char *)v12 + v66;
          uint64_t v68 = (char *)v13 + v66;
          uint64_t v69 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v12, 0, 1, v27);
        }
        uint64_t v70 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v71 = (void *)((char *)v12 + v70);
        long long v72 = (char *)v13 + v70;
        *uint64_t v71 = *(void *)((char *)v13 + v70);
        v71[1] = *(void *)((char *)v13 + v70 + 8);
        v71[2] = *(void *)((char *)v13 + v70 + 16);
        v71[3] = *(void *)((char *)v13 + v70 + 24);
        v71[4] = *(void *)((char *)v13 + v70 + 32);
        uint64_t v73 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v74 = v73[7];
        uint64_t v92 = &v72[v74];
        v96 = (char *)v71 + v74;
        uint64_t v75 = sub_F6DC0();
        uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v88(v96, v92, v75);
        uint64_t v76 = v73[8];
        uint64_t v77 = (char *)v71 + v76;
        uint64_t v103 = &v72[v76];
        uint64_t v78 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v77, v103, v78);
        *((unsigned char *)v71 + v73[9]) = v72[v73[9]];
        uint64_t v79 = v73[10];
        uint64_t v80 = (char *)v71 + v79;
        uint64_t v81 = &v72[v79];
        char v82 = v81[8];
        *(void *)uint64_t v80 = *(void *)v81;
        v80[8] = v82;
        uint64_t v83 = sub_551C(&qword_128218);
        *(void *)((char *)v12 + *(int *)(v83 + 48)) = *(void *)((char *)v13 + *(int *)(v83 + 48));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *char v12 = *v13;
        v12[1] = v13[1];
        void v12[2] = v13[2];
        v12[3] = v13[3];
        v12[4] = v13[4];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v30 = v13[3];
        v12[3] = v30;
        v12[4] = v13[4];
        (**(void (***)(void *, void *))(v30 - 8))(v12, v13);
        v12[5] = v13[5];
        v12[6] = v13[6];
        void v12[7] = v13[7];
        uint64_t v31 = v13[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31)
        {
          v12[8] = v13[8];
          v12[9] = v13[9];
          uint64_t v32 = v13[10];
          unint64_t v33 = v13[11];
          swift_bridgeObjectRetain();
          sub_2A4E4(v32, v33);
          v12[10] = v32;
          v12[11] = v33;
          v12[12] = v13[12];
          v12[13] = v13[13];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v84 = *((_OWORD *)v13 + 4);
          long long v85 = *((_OWORD *)v13 + 6);
          *((_OWORD *)v12 + 5) = *((_OWORD *)v13 + 5);
          *((_OWORD *)v12 + 6) = v85;
          *((_OWORD *)v12 + 4) = v84;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 6u:
      case 7u:
        *char v12 = *v13;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        size_t v19 = *(void *)(v15 + 64);
        goto LABEL_19;
    }
  }
LABEL_42:
  uint64_t v54 = a3[8];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = (long long *)(a2 + v54);
  uint64_t v57 = *(void *)(a2 + v54 + 24);
  if (!*(void *)(a1 + v54 + 24))
  {
    if (v57)
    {
      *(void *)(v55 + 24) = v57;
      *(void *)(v55 + 32) = *((void *)v56 + 4);
      (**(void (***)(uint64_t, long long *))(v57 - 8))(v55, v56);
      goto LABEL_49;
    }
LABEL_48:
    long long v58 = *v56;
    long long v59 = v56[1];
    *(void *)(v55 + 32) = *((void *)v56 + 4);
    *(_OWORD *)uint64_t v55 = v58;
    *(_OWORD *)(v55 + 16) = v59;
    goto LABEL_49;
  }
  if (!v57)
  {
    sub_6BEC(v55);
    goto LABEL_48;
  }
  sub_2A890((uint64_t *)v55, (uint64_t *)v56);
LABEL_49:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = a3[13];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = a2 + v60;
  *uint64_t v61 = *(void *)(a2 + v60);
  v61[1] = *(void *)(a2 + v60 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61[2] = *(void *)(v62 + 16);
  v61[3] = *(void *)(v62 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for RCSMessage(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  a1[6] = a2[6];
  *(_OWORD *)((char *)a1 + 107) = *(_OWORD *)((char *)a2 + 107);
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  long long v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  long long v9 = a2[9];
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  char v12 = (void *)((char *)a2 + v10);
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v13 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_551C((uint64_t *)&unk_128170);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16))
      {
        uint64_t v18 = sub_551C(&qword_1283F0);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        *uint64_t v11 = *v12;
        *(_OWORD *)(v11 + 1) = *(_OWORD *)(v12 + 1);
        uint64_t v19 = *(int *)(v16 + 24);
        char v50 = (char *)v11 + v19;
        uint64_t v20 = (char *)v12 + v19;
        uint64_t v21 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v50, v20, v21);
        uint64_t v22 = *(int *)(v16 + 28);
        uint64_t v51 = (char *)v11 + v22;
        uint64_t v23 = (char *)v12 + v22;
        uint64_t v24 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v51, v23, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
      }
      uint64_t v25 = *(int *)(type metadata accessor for RCSFile(0) + 20);
      unint64_t v26 = (char *)v11 + v25;
      uint64_t v27 = (char *)v12 + v25;
      *(void *)unint64_t v26 = *(void *)((char *)v12 + v25);
      *(_OWORD *)(v26 + 8) = *(_OWORD *)((char *)v12 + v25 + 8);
      *(_OWORD *)(v26 + 24) = *(_OWORD *)((char *)v12 + v25 + 24);
      uint64_t v28 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
      uint64_t v29 = v28[7];
      uint64_t v48 = &v27[v29];
      long long v52 = &v26[v29];
      uint64_t v30 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v52, v48, v30);
      uint64_t v31 = v28[8];
      uint64_t v49 = &v27[v31];
      long long v53 = &v26[v31];
      uint64_t v32 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v53, v49, v32);
      v26[v28[9]] = v27[v28[9]];
      uint64_t v33 = v28[10];
      uint64_t v34 = &v26[v33];
      uint64_t v35 = &v27[v33];
      v34[8] = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      uint64_t v36 = sub_551C(&qword_128218);
      *(void *)((char *)v11 + *(int *)(v36 + 48)) = *(void *)((char *)v12 + *(int *)(v36 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(v14 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v37 = a3[8];
  uint64_t v38 = a3[9];
  uint64_t v39 = (char *)a1 + v37;
  uint64_t v40 = (char *)a2 + v37;
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  *((void *)v39 + 4) = *((void *)v40 + 4);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v42 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
  uint64_t v43 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v44 = (_OWORD *)((char *)a1 + v43);
  uint64_t v45 = (_OWORD *)((char *)a2 + v43);
  long long v46 = v45[1];
  _OWORD *v44 = *v45;
  v44[1] = v46;
  return a1;
}

uint64_t assignWithTake for RCSMessage(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_27EF8(a1);
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 107) = *(_OWORD *)(a2 + 107);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  char v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for RCSMessage.Content(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      if (a1 == a2) {
        goto LABEL_20;
      }
      sub_C654C((uint64_t)v12, type metadata accessor for RCSMessage.Content);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v23 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v23))
        {
          uint64_t v25 = sub_551C(&qword_1283F0);
          memcpy(v12, v13, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          *char v12 = *v13;
          *(_OWORD *)(v12 + 1) = *(_OWORD *)(v13 + 1);
          uint64_t v54 = *(int *)(v23 + 24);
          uint64_t v55 = (char *)v12 + v54;
          uint64_t v56 = (char *)v13 + v54;
          uint64_t v57 = sub_F6DC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
          uint64_t v58 = *(int *)(v23 + 28);
          long long v59 = (char *)v12 + v58;
          uint64_t v60 = (char *)v13 + v58;
          uint64_t v61 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v23);
        }
        uint64_t v62 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v63 = (char *)v12 + v62;
        uint64_t v64 = (char *)v13 + v62;
        *(void *)uint64_t v63 = *(void *)((char *)v13 + v62);
        *(_OWORD *)(v63 + 8) = *(_OWORD *)((char *)v13 + v62 + 8);
        *(_OWORD *)(v63 + 24) = *(_OWORD *)((char *)v13 + v62 + 24);
        uint64_t v65 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v66 = v65[7];
        char v82 = &v63[v66];
        uint64_t v67 = &v64[v66];
        uint64_t v68 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v82, v67, v68);
        uint64_t v69 = v65[8];
        uint64_t v83 = &v63[v69];
        uint64_t v70 = &v64[v69];
        uint64_t v71 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v83, v70, v71);
        v63[v65[9]] = v64[v65[9]];
        uint64_t v72 = v65[10];
        uint64_t v73 = &v63[v72];
        uint64_t v74 = &v64[v72];
        v73[8] = v74[8];
        *(void *)uint64_t v73 = *(void *)v74;
        uint64_t v75 = sub_551C(&qword_128218);
        *(void *)((char *)v12 + *(int *)(v75 + 48)) = *(void *)((char *)v13 + *(int *)(v75 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_20;
      }
      size_t v22 = *(void *)(v15 + 64);
LABEL_11:
      memcpy(v12, v13, v22);
      goto LABEL_20;
    }
    sub_C654C((uint64_t)v12, type metadata accessor for RCSMessage.Content);
LABEL_10:
    size_t v22 = *(void *)(*(void *)(sub_551C((uint64_t *)&unk_128170) - 8) + 64);
    goto LABEL_11;
  }
  if (v18) {
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for RCSFile.ThumbnailInformation(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
    {
      uint64_t v21 = sub_551C(&qword_1283F0);
      memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *char v12 = *v13;
      *(_OWORD *)(v12 + 1) = *(_OWORD *)(v13 + 1);
      uint64_t v26 = *(int *)(v19 + 24);
      uint64_t v78 = (char *)v12 + v26;
      uint64_t v27 = (char *)v13 + v26;
      uint64_t v28 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v78, v27, v28);
      uint64_t v29 = *(int *)(v19 + 28);
      uint64_t v79 = (char *)v12 + v29;
      uint64_t v30 = (char *)v13 + v29;
      uint64_t v31 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v79, v30, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
    }
    uint64_t v32 = *(int *)(type metadata accessor for RCSFile(0) + 20);
    uint64_t v33 = (char *)v12 + v32;
    uint64_t v34 = (char *)v13 + v32;
    *(void *)uint64_t v33 = *(void *)((char *)v13 + v32);
    *(_OWORD *)(v33 + 8) = *(_OWORD *)((char *)v13 + v32 + 8);
    *(_OWORD *)(v33 + 24) = *(_OWORD *)((char *)v13 + v32 + 24);
    uint64_t v35 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
    uint64_t v36 = v35[7];
    uint64_t v76 = &v34[v36];
    uint64_t v80 = &v33[v36];
    uint64_t v37 = sub_F6DC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v80, v76, v37);
    uint64_t v38 = v35[8];
    uint64_t v77 = &v34[v38];
    uint64_t v81 = &v33[v38];
    uint64_t v39 = sub_F6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v81, v77, v39);
    v33[v35[9]] = v34[v35[9]];
    uint64_t v40 = v35[10];
    long long v41 = &v33[v40];
    uint64_t v42 = &v34[v40];
    v41[8] = v42[8];
    *(void *)long long v41 = *(void *)v42;
    uint64_t v43 = sub_551C(&qword_128218);
    *(void *)((char *)v12 + *(int *)(v43 + 48)) = *(void *)((char *)v13 + *(int *)(v43 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(v15 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_20:
  uint64_t v44 = a3[8];
  uint64_t v45 = a1 + v44;
  if (*(void *)(a1 + v44 + 24)) {
    sub_6BEC(a1 + v44);
  }
  long long v46 = *(_OWORD *)(a2 + v44 + 16);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)(a2 + v44);
  *(_OWORD *)(v45 + 16) = v46;
  *(void *)(v45 + 32) = *(void *)(a2 + v44 + 32);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[13];
  uint64_t v49 = (void *)(a1 + v48);
  char v50 = (void *)(a2 + v48);
  uint64_t v51 = v50[1];
  void *v49 = *v50;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = v50[3];
  v49[2] = v50[2];
  v49[3] = v52;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C9D6C);
}

uint64_t sub_C9D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 136);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_551C((uint64_t *)&unk_128170);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RCSMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C9E34);
}

uint64_t sub_C9E34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 136) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_551C((uint64_t *)&unk_128170);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_C9EE0()
{
  sub_C9FC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_C9FC4()
{
  if (!qword_12A4D0)
  {
    type metadata accessor for RCSMessage.Content(255);
    unint64_t v0 = sub_F7770();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_12A4D0);
    }
  }
}

uint64_t destroy for RCSMessage.SenderInfo(uint64_t a1)
{
  uint64_t v1 = a1;
  unsigned int v2 = *(unsigned __int8 *)(a1 + 122);
  if (v2 >= 2) {
    unsigned int v2 = *(_DWORD *)a1 + 2;
  }
  if (v2 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v1 + 121))
    {
      a1 = v1 + 64;
LABEL_9:
      return sub_6BEC(a1);
    }
  }
  else
  {
    unsigned int v3 = *(unsigned __int8 *)(a1 + 57);
    if (v3 >= 2) {
      unsigned int v3 = *(_DWORD *)a1 + 2;
    }
    if (v3 == 1) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RCSMessage.SenderInfo(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 122);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    char v8 = *(unsigned char *)(a2 + 121);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      long long v9 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 88) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
    }
    else
    {
      uint64_t v13 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v13;
      uint64_t v14 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v14;
      uint64_t v15 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v15;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 121) = v8;
    char v16 = 1;
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a2 + 57);
    if (v10 >= 2) {
      unsigned int v10 = *(_DWORD *)a2 + 2;
    }
    if (v10 == 1)
    {
      long long v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      char v12 = 1;
    }
    else
    {
      uint64_t v17 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v17;
      uint64_t v18 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v18;
      uint64_t v19 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v19;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = 0;
    }
    char v16 = 0;
    *(unsigned char *)(a1 + 57) = v12;
  }
  *(unsigned char *)(a1 + 122) = v16;
  return a1;
}

uint64_t assignWithCopy for RCSMessage.SenderInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 122);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 != 1)
  {
    unsigned int v5 = *(unsigned __int8 *)(a1 + 57);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a1 + 2;
    }
    if (v5 == 1) {
      goto LABEL_10;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned char *)(v2 + 121) & 1) == 0) {
    goto LABEL_11;
  }
  a1 = v2 + 64;
LABEL_10:
  sub_6BEC(a1);
LABEL_12:
  unsigned int v6 = *(unsigned __int8 *)(a2 + 122);
  if (v6 >= 2) {
    unsigned int v6 = *(_DWORD *)a2 + 2;
  }
  if (v6 == 1)
  {
    *(void *)uint64_t v2 = *(void *)a2;
    *(void *)(v2 + 8) = *(void *)(a2 + 8);
    *(void *)(v2 + 16) = *(void *)(a2 + 16);
    *(void *)(v2 + 24) = *(void *)(a2 + 24);
    *(void *)(v2 + 32) = *(void *)(a2 + 32);
    *(void *)(v2 + 40) = *(void *)(a2 + 40);
    *(void *)(v2 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(v2 + 56) = *(unsigned char *)(a2 + 56);
    char v7 = *(unsigned char *)(a2 + 121);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 88);
      *(void *)(v2 + 88) = v8;
      *(void *)(v2 + 96) = *(void *)(a2 + 96);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v2 + 64, a2 + 64);
    }
    else
    {
      *(void *)(v2 + 64) = *(void *)(a2 + 64);
      *(void *)(v2 + 72) = *(void *)(a2 + 72);
      *(void *)(v2 + 80) = *(void *)(a2 + 80);
      *(void *)(v2 + 88) = *(void *)(a2 + 88);
      *(void *)(v2 + 96) = *(void *)(a2 + 96);
      *(void *)(v2 + 104) = *(void *)(a2 + 104);
      *(void *)(v2 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(v2 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(v2 + 121) = v7;
    char v12 = 1;
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a2 + 57);
    if (v9 >= 2) {
      unsigned int v9 = *(_DWORD *)a2 + 2;
    }
    if (v9 == 1)
    {
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(v2 + 24) = v10;
      *(void *)(v2 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v2, a2);
      char v11 = 1;
    }
    else
    {
      *(void *)uint64_t v2 = *(void *)a2;
      *(void *)(v2 + 8) = *(void *)(a2 + 8);
      *(void *)(v2 + 16) = *(void *)(a2 + 16);
      *(void *)(v2 + 24) = *(void *)(a2 + 24);
      *(void *)(v2 + 32) = *(void *)(a2 + 32);
      *(void *)(v2 + 40) = *(void *)(a2 + 40);
      *(void *)(v2 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(v2 + 56) = *(unsigned char *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v11 = 0;
    }
    char v12 = 0;
    *(unsigned char *)(v2 + 57) = v11;
  }
  *(unsigned char *)(v2 + 122) = v12;
  return v2;
}

__n128 initializeWithTake for RCSMessage.SenderInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 107) = *(long long *)((char *)a2 + 107);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for RCSMessage.SenderInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 122);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a1 + 2;
  }
  if (v4 != 1)
  {
    unsigned int v5 = *(unsigned __int8 *)(a1 + 57);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a1 + 2;
    }
    if (v5 == 1) {
      goto LABEL_10;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned char *)(v2 + 121) & 1) == 0) {
    goto LABEL_11;
  }
  a1 = v2 + 64;
LABEL_10:
  sub_6BEC(a1);
LABEL_12:
  unsigned int v6 = *(unsigned __int8 *)(a2 + 122);
  if (v6 >= 2) {
    unsigned int v6 = *(_DWORD *)a2 + 2;
  }
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v2 + 80) = v7;
    *(_OWORD *)(v2 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v2 + 106) = *(_OWORD *)(a2 + 106);
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
    *(_OWORD *)(v2 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    char v10 = 1;
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v2 + 48) = v9;
  }
  else
  {
    unsigned int v11 = *(unsigned __int8 *)(a2 + 57);
    if (v11 >= 2) {
      unsigned int v11 = *(_DWORD *)a2 + 2;
    }
    if (v11 == 1)
    {
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
      *(_OWORD *)(v2 + 16) = v12;
      *(void *)(v2 + 32) = *(void *)(a2 + 32);
      char v13 = 1;
    }
    else
    {
      char v13 = 0;
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
      *(_OWORD *)(v2 + 16) = v14;
      *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v2 + 41) = *(_OWORD *)(a2 + 41);
    }
    char v10 = 0;
    *(unsigned char *)(v2 + 57) = v13;
  }
  *(unsigned char *)(v2 + 122) = v10;
  return v2;
}

uint64_t getEnumTagSinglePayload for RCSMessage.SenderInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 123)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 122);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RCSMessage.SenderInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 107) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 123) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 123) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 122) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_CA830(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 122);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_CA84C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 106) = 0u;
    unsigned int v2 = a2 - 2;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 2;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 122) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.SenderInfo()
{
  return &type metadata for RCSMessage.SenderInfo;
}

uint64_t getEnumTagSinglePayload for RCSMessage.SubscriptionInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RCSMessage.SubscriptionInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.SubscriptionInfo()
{
  return &type metadata for RCSMessage.SubscriptionInfo;
}

uint64_t getEnumTagSinglePayload for RCSMessage.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RCSMessage.ContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCAAACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.ContentType()
{
  return &type metadata for RCSMessage.ContentType;
}

uint64_t *initializeBufferWithCopyOfBuffer for RCSMessage.Content(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          uint64_t v12 = sub_551C(&qword_1283F0);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v20 = *(int *)(v10 + 24);
          uint64_t v47 = (char *)a1 + v20;
          uint64_t v21 = (char *)a2 + v20;
          uint64_t v22 = sub_F6DC0();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v47, v21, v22);
          uint64_t v24 = *(int *)(v10 + 28);
          uint64_t v25 = (char *)a1 + v24;
          uint64_t v26 = (char *)a2 + v24;
          uint64_t v27 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        uint64_t v28 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        *(_OWORD *)uint64_t v29 = *(_OWORD *)((char *)a2 + v28);
        uint64_t v32 = *(uint64_t *)((char *)a2 + v28 + 16);
        uint64_t v31 = *(uint64_t *)((char *)a2 + v28 + 24);
        *((void *)v29 + 2) = v32;
        *((void *)v29 + 3) = v31;
        *((void *)v29 + 4) = *((void *)v30 + 4);
        uint64_t v33 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v34 = v33[7];
        long long v46 = &v30[v34];
        uint64_t v48 = &v29[v34];
        uint64_t v35 = sub_F6DC0();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45(v48, v46, v35);
        uint64_t v36 = v33[8];
        uint64_t v37 = &v29[v36];
        uint64_t v38 = &v30[v36];
        uint64_t v39 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        v29[v33[9]] = v30[v33[9]];
        uint64_t v40 = v33[10];
        long long v41 = &v29[v40];
        uint64_t v42 = &v30[v40];
        v41[8] = v42[8];
        *(void *)long long v41 = *(void *)v42;
        uint64_t v43 = sub_551C(&qword_128218);
        *(uint64_t *)((char *)a1 + *(int *)(v43 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v43 + 48));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v13 = a2[3];
        a1[2] = a2[2];
        a1[3] = v13;
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        long long v14 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 3) = v14;
        (**(void (***)(uint64_t *, uint64_t *))(v14 - 8))(a1, a2);
        uint64_t v15 = a2[6];
        a1[5] = a2[5];
        a1[6] = v15;
        a1[7] = a2[7];
        uint64_t v16 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16)
        {
          a1[8] = a2[8];
          a1[9] = v16;
          uint64_t v17 = a2[10];
          unint64_t v18 = a2[11];
          swift_bridgeObjectRetain();
          sub_2A4E4(v17, v18);
          a1[10] = v17;
          a1[11] = v18;
          uint64_t v19 = a2[13];
          a1[12] = a2[12];
          a1[13] = v19;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v44 = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 5) = v44;
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for RCSMessage.Content(void *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
      uint64_t v3 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
      {
        swift_bridgeObjectRelease();
        unsigned int v4 = (char *)a1 + *(int *)(v3 + 24);
        uint64_t v5 = sub_F6DC0();
        (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
        uint64_t v6 = (char *)a1 + *(int *)(v3 + 28);
        uint64_t v7 = sub_F6EE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      }
      uint64_t v8 = (char *)a1 + *(int *)(type metadata accessor for RCSFile(0) + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for RCSFile.DispositionInformation(0);
      uint64_t v10 = &v8[*(int *)(v9 + 28)];
      uint64_t v11 = sub_F6DC0();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      uint64_t v12 = &v8[*(int *)(v9 + 32)];
      uint64_t v13 = sub_F6EE0();
      (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      sub_551C(&qword_128218);
      goto LABEL_6;
    case 3:
      sub_6BEC((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = a1[9];
      if (result)
      {
        swift_bridgeObjectRelease();
        sub_2852C(a1[10], a1[11]);
        return swift_bridgeObjectRelease();
      }
      return result;
    case 5:
    case 6:
    case 7:
LABEL_6:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for RCSMessage.Content(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_13;
    case 1u:
      uint64_t v7 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_551C(&qword_1283F0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v17 = *(int *)(v7 + 24);
        uint64_t v45 = (char *)a1 + v17;
        unint64_t v18 = (char *)a2 + v17;
        uint64_t v19 = sub_F6DC0();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v45, v18, v19);
        uint64_t v21 = *(int *)(v7 + 28);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v25 = *(int *)(type metadata accessor for RCSFile(0) + 20);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      *(_OWORD *)uint64_t v26 = *(_OWORD *)((char *)a2 + v25);
      uint64_t v29 = *(void *)((char *)a2 + v25 + 16);
      uint64_t v28 = *(void *)((char *)a2 + v25 + 24);
      *((void *)v26 + 2) = v29;
      *((void *)v26 + 3) = v28;
      *((void *)v26 + 4) = *((void *)v27 + 4);
      uint64_t v30 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
      uint64_t v31 = v30[7];
      long long v44 = &v27[v31];
      long long v46 = &v26[v31];
      uint64_t v32 = sub_F6DC0();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v46, v44, v32);
      uint64_t v33 = v30[8];
      uint64_t v34 = &v26[v33];
      uint64_t v35 = &v27[v33];
      uint64_t v36 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      v26[v30[9]] = v27[v30[9]];
      uint64_t v37 = v30[10];
      uint64_t v38 = &v26[v37];
      uint64_t v39 = &v27[v37];
      v38[8] = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      uint64_t v40 = sub_551C(&qword_128218);
      *(void *)((char *)a1 + *(int *)(v40 + 48)) = *(void *)((char *)a2 + *(int *)(v40 + 48));
      swift_retain();
      goto LABEL_13;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_13;
    case 3u:
      long long v11 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v11;
      (**(void (***)(void *, void *))(v11 - 8))(a1, a2);
      uint64_t v12 = a2[6];
      a1[5] = a2[5];
      a1[6] = v12;
      a1[7] = a2[7];
      uint64_t v13 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
      {
        a1[8] = a2[8];
        a1[9] = v13;
        uint64_t v14 = a2[10];
        unint64_t v15 = a2[11];
        swift_bridgeObjectRetain();
        sub_2A4E4(v14, v15);
        a1[10] = v14;
        a1[11] = v15;
        uint64_t v16 = a2[13];
        a1[12] = a2[12];
        a1[13] = v16;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v41 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v41;
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      }
      goto LABEL_13;
    case 5u:
    case 6u:
    case 7u:
      *a1 = *a2;
      swift_retain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for RCSMessage.Content(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_C654C((uint64_t)a1, type metadata accessor for RCSMessage.Content);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_14;
      case 1u:
        uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = sub_551C(&qword_1283F0);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v13 = *(int *)(v6 + 24);
          long long v41 = (char *)a1 + v13;
          uint64_t v14 = (char *)a2 + v13;
          uint64_t v15 = sub_F6DC0();
          uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v41, v14, v15);
          uint64_t v17 = *(int *)(v6 + 28);
          unint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          uint64_t v20 = sub_F6EE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        uint64_t v21 = *(int *)(type metadata accessor for RCSFile(0) + 20);
        uint64_t v22 = (void *)((char *)a1 + v21);
        uint64_t v23 = (char *)a2 + v21;
        *uint64_t v22 = *(void *)((char *)a2 + v21);
        v22[1] = *(void *)((char *)a2 + v21 + 8);
        v22[2] = *(void *)((char *)a2 + v21 + 16);
        v22[3] = *(void *)((char *)a2 + v21 + 24);
        v22[4] = *(void *)((char *)a2 + v21 + 32);
        uint64_t v24 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
        uint64_t v25 = v24[7];
        uint64_t v40 = &v23[v25];
        uint64_t v42 = (char *)v22 + v25;
        uint64_t v26 = sub_F6DC0();
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39(v42, v40, v26);
        uint64_t v27 = v24[8];
        uint64_t v28 = (char *)v22 + v27;
        uint64_t v29 = &v23[v27];
        uint64_t v30 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        *((unsigned char *)v22 + v24[9]) = v23[v24[9]];
        uint64_t v31 = v24[10];
        uint64_t v32 = (char *)v22 + v31;
        uint64_t v33 = &v23[v31];
        char v34 = v33[8];
        *(void *)uint64_t v32 = *(void *)v33;
        v32[8] = v34;
        uint64_t v35 = sub_551C(&qword_128218);
        *(void *)((char *)a1 + *(int *)(v35 + 48)) = *(void *)((char *)a2 + *(int *)(v35 + 48));
        swift_retain();
        goto LABEL_14;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_14;
      case 3u:
        uint64_t v9 = a2[3];
        a1[3] = v9;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v9 - 8))(a1, a2);
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        uint64_t v10 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10)
        {
          a1[8] = a2[8];
          a1[9] = a2[9];
          uint64_t v11 = a2[10];
          unint64_t v12 = a2[11];
          swift_bridgeObjectRetain();
          sub_2A4E4(v11, v12);
          a1[10] = v11;
          a1[11] = v12;
          a1[12] = a2[12];
          a1[13] = a2[13];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v36 = *((_OWORD *)a2 + 4);
          long long v37 = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 6) = v37;
          *((_OWORD *)a1 + 4) = v36;
        }
        goto LABEL_14;
      case 5u:
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_retain();
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for RCSMessage.Content(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_551C(&qword_1283F0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      uint64_t v13 = *(int *)(v6 + 28);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v17 = *(int *)(type metadata accessor for RCSFile(0) + 20);
    unint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)unint64_t v18 = *(void *)((char *)a2 + v17);
    *(_OWORD *)(v18 + 8) = *(_OWORD *)((char *)a2 + v17 + 8);
    *(_OWORD *)(v18 + 24) = *(_OWORD *)((char *)a2 + v17 + 24);
    uint64_t v20 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
    uint64_t v21 = v20[7];
    uint64_t v22 = &v18[v21];
    uint64_t v23 = &v19[v21];
    uint64_t v24 = sub_F6DC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    uint64_t v25 = v20[8];
    uint64_t v26 = &v18[v25];
    uint64_t v27 = &v19[v25];
    uint64_t v28 = sub_F6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    v18[v20[9]] = v19[v20[9]];
    uint64_t v29 = v20[10];
    uint64_t v30 = &v18[v29];
    uint64_t v31 = &v19[v29];
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = sub_551C(&qword_128218);
    *(void *)((char *)a1 + *(int *)(v32 + 48)) = *(void *)((char *)a2 + *(int *)(v32 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for RCSMessage.Content(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_C654C((uint64_t)a1, type metadata accessor for RCSMessage.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_551C(&qword_1283F0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        uint64_t v9 = *(int *)(v6 + 24);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_F6DC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        uint64_t v13 = *(int *)(v6 + 28);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_F6EE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v17 = *(int *)(type metadata accessor for RCSFile(0) + 20);
      unint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      *(void *)unint64_t v18 = *(void *)((char *)a2 + v17);
      *(_OWORD *)(v18 + 8) = *(_OWORD *)((char *)a2 + v17 + 8);
      *(_OWORD *)(v18 + 24) = *(_OWORD *)((char *)a2 + v17 + 24);
      uint64_t v20 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
      uint64_t v21 = v20[7];
      uint64_t v22 = &v18[v21];
      uint64_t v23 = &v19[v21];
      uint64_t v24 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      uint64_t v25 = v20[8];
      uint64_t v26 = &v18[v25];
      uint64_t v27 = &v19[v25];
      uint64_t v28 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      v18[v20[9]] = v19[v20[9]];
      uint64_t v29 = v20[10];
      uint64_t v30 = &v18[v29];
      uint64_t v31 = &v19[v29];
      v30[8] = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      uint64_t v32 = sub_551C(&qword_128218);
      *(void *)((char *)a1 + *(int *)(v32 + 48)) = *(void *)((char *)a2 + *(int *)(v32 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_CC30C()
{
  v2[4] = &unk_FB888;
  uint64_t result = type metadata accessor for RCSFile(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    v2[6] = &unk_FB7F0;
    v2[7] = &unk_FB8A0;
    v2[8] = &unk_FB808;
    v2[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v2[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    v2[11] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for RCSMessage.Coordinates()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RCSMessage.Coordinates(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RCSMessage.Coordinates(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RCSMessage.Coordinates(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSMessage.Coordinates(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RCSMessage.Coordinates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.Coordinates()
{
  return &type metadata for RCSMessage.Coordinates;
}

uint64_t getEnumTagSinglePayload for RCSMessage.Typing(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RCSMessage.Typing(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCC6E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.Typing()
{
  return &type metadata for RCSMessage.Typing;
}

uint64_t destroy for RCSGroup(void *a1)
{
  sub_6BEC((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[9];
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_2852C(a1[10], a1[11]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RCSGroup(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v6;
    uint64_t v7 = *(void *)(a2 + 80);
    unint64_t v8 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    sub_2A4E4(v7, v8);
    *(void *)(a1 + 80) = v7;
    *(void *)(a1 + 88) = v8;
    uint64_t v9 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  }
  return a1;
}

uint64_t *assignWithCopy for RCSGroup(uint64_t *a1, uint64_t *a2)
{
  sub_2A890(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  uint64_t v6 = a2[9];
  if (a1[9])
  {
    if (v6)
    {
      a1[8] = a2[8];
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = a2[10];
      unint64_t v8 = a2[11];
      sub_2A4E4(v7, v8);
      uint64_t v9 = a1[10];
      unint64_t v10 = a1[11];
      a1[10] = v7;
      a1[11] = v8;
      sub_2852C(v9, v10);
      a1[12] = a2[12];
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2AAC0((uint64_t)(a1 + 8));
      long long v14 = *((_OWORD *)a2 + 5);
      long long v13 = *((_OWORD *)a2 + 6);
      *long long v4 = *v5;
      *((_OWORD *)a1 + 5) = v14;
      *((_OWORD *)a1 + 6) = v13;
    }
  }
  else if (v6)
  {
    a1[8] = a2[8];
    a1[9] = a2[9];
    uint64_t v11 = a2[10];
    unint64_t v12 = a2[11];
    swift_bridgeObjectRetain();
    sub_2A4E4(v11, v12);
    a1[10] = v11;
    a1[11] = v12;
    a1[12] = a2[12];
    a1[13] = a2[13];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *v5;
    long long v16 = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 6) = v16;
    *long long v4 = v15;
  }
  return a1;
}

__n128 initializeWithTake for RCSGroup(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for RCSGroup(uint64_t a1, uint64_t a2)
{
  sub_6BEC(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 72)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 72);
  if (!v7)
  {
    sub_2AAC0(a1 + 64);
LABEL_5:
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    return a1;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a1 + 80);
  unint64_t v9 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  sub_2852C(v8, v9);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RCSGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSGroup()
{
  return &type metadata for RCSGroup;
}

uint64_t destroy for RCSGroup.Icon(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_2852C(*(void *)(a1 + 16), *(void *)(a1 + 24));

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RCSGroup.Icon(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_2A4E4(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RCSGroup.Icon(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_2A4E4(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_2852C(v6, v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RCSGroup.Icon(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for RCSGroup.Icon(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_2852C(v5, v6);
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSGroup.Icon(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RCSGroup.Icon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSGroup.Icon()
{
  return &type metadata for RCSGroup.Icon;
}

ValueMetadata *type metadata accessor for RCSGroup.Icon.CodingKeys()
{
  return &type metadata for RCSGroup.Icon.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RCSMessage.Typing.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xCCE38);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.Typing.CodingKeys()
{
  return &type metadata for RCSMessage.Typing.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RCSFile.Disposition(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s7CoreRCS8RCSGroupV4IconV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCCFCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.Coordinates.CodingKeys()
{
  return &type metadata for RCSMessage.Coordinates.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RCSMessage.SubscriptionInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCD0D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessage.SubscriptionInfo.CodingKeys()
{
  return &type metadata for RCSMessage.SubscriptionInfo.CodingKeys;
}

unint64_t sub_CD10C()
{
  unint64_t result = qword_12A5C8;
  if (!qword_12A5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A5C8);
  }
  return result;
}

unint64_t sub_CD164()
{
  unint64_t result = qword_12A5D0;
  if (!qword_12A5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A5D0);
  }
  return result;
}

unint64_t sub_CD1BC()
{
  unint64_t result = qword_12A5D8;
  if (!qword_12A5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A5D8);
  }
  return result;
}

unint64_t sub_CD214()
{
  unint64_t result = qword_12A5E0;
  if (!qword_12A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A5E0);
  }
  return result;
}

unint64_t sub_CD26C()
{
  unint64_t result = qword_12A5E8;
  if (!qword_12A5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A5E8);
  }
  return result;
}

unint64_t sub_CD2C4()
{
  unint64_t result = qword_12A5F0;
  if (!qword_12A5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A5F0);
  }
  return result;
}

unint64_t sub_CD31C()
{
  unint64_t result = qword_12A5F8;
  if (!qword_12A5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A5F8);
  }
  return result;
}

unint64_t sub_CD374()
{
  unint64_t result = qword_12A600;
  if (!qword_12A600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A600);
  }
  return result;
}

unint64_t sub_CD3CC()
{
  unint64_t result = qword_12A608;
  if (!qword_12A608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A608);
  }
  return result;
}

unint64_t sub_CD424()
{
  unint64_t result = qword_12A610;
  if (!qword_12A610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A610);
  }
  return result;
}

unint64_t sub_CD47C()
{
  unint64_t result = qword_12A618;
  if (!qword_12A618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A618);
  }
  return result;
}

unint64_t sub_CD4D4()
{
  unint64_t result = qword_12A620;
  if (!qword_12A620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A620);
  }
  return result;
}

unint64_t sub_CD528()
{
  unint64_t result = qword_12A628;
  if (!qword_12A628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A628);
  }
  return result;
}

unint64_t sub_CD57C()
{
  unint64_t result = qword_12A638;
  if (!qword_12A638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A638);
  }
  return result;
}

id CTLazuliOperationID.init(id:)(uint64_t a1, uint64_t a2)
{
  return sub_CD680(a1, a2, (SEL *)&selRef_setUuid_);
}

id CTLazuliGroupChatSubject.init(displayString:)(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  int v3 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  [v2 setDisplayString:v3];

  return v2;
}

id CTLazuliDestination.init(uri:)(uint64_t a1, uint64_t a2)
{
  return sub_CD680(a1, a2, (SEL *)&selRef_setUri_);
}

id sub_CD680(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v5 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, *a3, v5);

  return v4;
}

id CTLazuliMessageRevokeData.init(messageGUID:destination:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v5 = objc_allocWithZone((Class)CTLazuliMessageID);
  id v6 = v4;
  id v7 = [v5 init];
  int v8 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  [v7 setUuid:v8];

  [v6 setMessageID:v7];
  [v6 setDestination:a3];

  return v6;
}

uint64_t RCSRichCards.__allocating_init(card:originalID:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_CD820(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_CFB90);
}

uint64_t RCSRichCards.__allocating_init(cardCarousel:originalID:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_CD820(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_D02FC);
}

uint64_t sub_CD820(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = a4(a1, a2, a3);
  swift_bridgeObjectRelease();

  *(void *)(v8 + 16) = v9;
  return v8;
}

void *RCSRichCards.files()()
{
  uint64_t v130 = type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v1 = __chkstk_darwin(v130);
  uint64_t v121 = (char *)&v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  long long v122 = (char *)&v121 - v3;
  uint64_t v4 = sub_551C(&qword_1283F0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v125 = (uint64_t)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v135 = (uint64_t)&v121 - v7;
  uint64_t v8 = type metadata accessor for RCSFile(0);
  uint64_t v128 = *(void *)(v8 - 8);
  uint64_t v129 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v124 = (uint64_t)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v123 = (uint64_t)&v121 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v134 = (uint64_t)&v121 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v127 = (char *)&v121 - v16;
  __chkstk_darwin(v15);
  uint64_t v133 = (uint64_t)&v121 - v17;
  id v18 = [*(id *)(v0 + 16) cards];
  sub_F7650();
  unint64_t v19 = sub_F7410();

  if (v19 >> 62)
  {
LABEL_61:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_F79B0();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_3;
    }
LABEL_62:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v20 = *(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
  if (!v20) {
    goto LABEL_62;
  }
LABEL_3:
  unint64_t v139 = v19 & 0xC000000000000001;
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v22 = 4;
  uint64_t v23 = &selRef_updateDisplayName_fromDisplayName_fromID_forChatID_identifier_style_messageID_;
  unint64_t v126 = v19;
  uint64_t v136 = v20;
  while (1)
  {
    if (v139) {
      id v24 = (id)sub_F78D0();
    }
    else {
      id v24 = *(id *)(v19 + 8 * v22);
    }
    id v25 = v24;
    if (__OFADD__(v22 - 4, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    uint64_t v141 = v22 - 4;
    uint64_t v142 = v22 - 3;
    id v26 = [v24 v23[178]];
    id v144 = v25;
    if (v26) {
      break;
    }
LABEL_33:
    id v77 = [v25 v23[178]];
    if (v77
      && (uint64_t v78 = v77, v79 = [v77 thumbnailUrl], v78, v79))
    {
      uint64_t v143 = v21;
      sub_F7220();

      uint64_t v80 = sub_F6DC0();
      uint64_t v81 = *(char ***)(v80 - 8);
      __chkstk_darwin(v80);
      uint64_t v83 = (char *)&v121 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v84 = sub_551C(&qword_128300);
      __chkstk_darwin(v84 - 8);
      uint64_t v86 = (char *)&v121 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_F6DB0();
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v81[6])(v86, 1, v80) == 1)
      {

        sub_D0784((uint64_t)v86);
        uint64_t v21 = v143;
        uint64_t v23 = &selRef_updateDisplayName_fromDisplayName_fromID_forChatID_identifier_style_messageID_;
        uint64_t v20 = v136;
      }
      else
      {
        uint64_t v137 = &v121;
        ((void (*)(char *, char *, uint64_t))v81[4])(v83, v86, v80);
        uint64_t v146 = 0x69616E626D756874;
        unint64_t v147 = 0xEA00000000005F6CLL;
        uint64_t v145 = v141;
        v149._countAndFlagsBits = sub_F7B20();
        sub_F72E0(v149);
        swift_bridgeObjectRelease();
        uint64_t v88 = v146;
        unint64_t v87 = v147;
        uint64_t v89 = self;
        swift_bridgeObjectRetain();
        id v90 = [v89 defaultHFSFileManager];
        unint64_t result = v144;
        if (!v90) {
          goto LABEL_65;
        }
        uint64_t v141 = v80;
        id v91 = [v144 media];
        if (v91)
        {
          uint64_t v92 = v91;
          id v93 = [v91 thumbnailContentType];

          if (v93)
          {
            sub_F7220();

            id v93 = (id)sub_F71F0();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          id v93 = 0;
        }
        id v94 = [v90 pathExtensionForMIMEType:v93];

        uint64_t v140 = v81;
        uint64_t v138 = v83;
        if (v94
          && (uint64_t v95 = (void *)sub_F71F0(),
              id v96 = [v95 stringByAppendingPathExtension:v94],
              v95,
              v94,
              v96))
        {
          uint64_t v132 = sub_F7220();
          unint64_t v98 = v97;

          swift_bridgeObjectRelease_n();
          unint64_t v87 = v98;
        }
        else
        {
          uint64_t v132 = v88;
          swift_bridgeObjectRelease();
        }
        uint64_t v99 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        uint64_t v100 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56);
        v100(v125, 1, 1, v99);
        id v101 = [v144 media];
        id v102 = v101;
        if (v101)
        {
          id v103 = [v101 thumbnailFileSize];

          if (v103)
          {
            id v102 = [v103 integerValue];
          }
          else
          {
            id v102 = 0;
          }
        }
        id v104 = [v144 media];
        if (v104
          && (uint64_t v105 = v104,
              id v106 = [v104 thumbnailContentType],
              v105,
              v106))
        {
          uint64_t v107 = sub_F7220();
          unint64_t v109 = v108;
        }
        else
        {
          uint64_t v107 = 0;
          unint64_t v109 = 0xE000000000000000;
        }
        uint64_t v110 = v130;
        uint64_t v111 = v121;
        ((void (*)(char *, char *, uint64_t))v140[2])(&v121[*(int *)(v130 + 28)], v138, v141);
        sub_F6E50();
        v111[3] = v107;
        v111[4] = v109;
        uint64_t v112 = *(int *)(v110 + 36);
        uint64_t v113 = (char *)v111 + *(int *)(v110 + 40);
        uint64_t v114 = v132;
        *uint64_t v111 = v102;
        v111[1] = v114;
        v111[2] = v87;
        *((unsigned char *)v111 + v112) = 1;
        *(void *)uint64_t v113 = 0;
        v113[8] = 1;
        uint64_t v115 = (uint64_t)v127;
        v100((uint64_t)v127, 1, 1, v99);
        swift_bridgeObjectRetain();
        sub_93ED4(v125, v115);
        sub_D07E4((uint64_t)v111, v115 + *(int *)(v129 + 20), type metadata accessor for RCSFile.DispositionInformation);
        uint64_t v116 = v115;
        uint64_t v117 = v123;
        sub_D07E4(v116, v123, type metadata accessor for RCSFile);
        sub_95898(v117, v124);
        uint64_t v21 = v143;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = (void *)sub_CEFFC(0, v21[2] + 1, 1, (unint64_t)v21, &qword_12A718, type metadata accessor for RCSFile, type metadata accessor for RCSFile);
        }
        unint64_t v19 = v126;
        uint64_t v20 = v136;
        unint64_t v119 = v21[2];
        unint64_t v118 = v21[3];
        uint64_t v23 = &selRef_updateDisplayName_fromDisplayName_fromID_forChatID_identifier_style_messageID_;
        char v120 = v140;
        if (v119 >= v118 >> 1) {
          uint64_t v21 = (void *)sub_CEFFC(v118 > 1, v119 + 1, 1, (unint64_t)v21, &qword_12A718, type metadata accessor for RCSFile, type metadata accessor for RCSFile);
        }
        v21[2] = v119 + 1;
        sub_D07E4(v124, (uint64_t)v21+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(void *)(v128 + 72) * v119, type metadata accessor for RCSFile);
        swift_bridgeObjectRelease();

        sub_D084C(v123);
        ((void (*)(char *, uint64_t))v120[1])(v138, v141);
      }
    }
    else
    {
    }
    ++v22;
    if (v142 == v20)
    {
      swift_bridgeObjectRelease();
      return v21;
    }
  }
  uint64_t v27 = v26;
  unint64_t v28 = v19;
  uint64_t v143 = v21;
  id v29 = [v26 mediaUrl];

  sub_F7220();
  uint64_t v30 = sub_F6DC0();
  uint64_t v140 = &v121;
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_551C(&qword_128300);
  __chkstk_darwin(v34 - 8);
  long long v36 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6DB0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v36, 1, v30) == 1)
  {
    sub_D0784((uint64_t)v36);
    uint64_t v21 = v143;
LABEL_32:
    id v25 = v144;
    unint64_t v19 = v28;
    uint64_t v23 = &selRef_updateDisplayName_fromDisplayName_fromID_forChatID_identifier_style_messageID_;
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v36, v30);
  uint64_t v146 = 0x5F616964656DLL;
  unint64_t v147 = 0xE600000000000000;
  uint64_t v145 = v141;
  v148._countAndFlagsBits = sub_F7B20();
  sub_F72E0(v148);
  swift_bridgeObjectRelease();
  uint64_t v38 = v146;
  unint64_t v37 = v147;
  uint64_t v39 = self;
  swift_bridgeObjectRetain();
  unint64_t result = [v39 defaultHFSFileManager];
  if (result)
  {
    long long v41 = result;
    uint64_t v137 = (char **)v33;
    uint64_t v138 = (char *)v30;
    id v42 = [v144 media];
    if (v42)
    {
      uint64_t v43 = v42;
      id v44 = [v42 mediaContentType];

      sub_F7220();
      uint64_t v45 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v45 = 0;
    }
    id v46 = [v41 pathExtensionForMIMEType:v45];

    if (v46
      && (uint64_t v47 = (void *)sub_F71F0(),
          id v48 = [v47 stringByAppendingPathExtension:v46],
          v47,
          v46,
          v48))
    {
      uint64_t v49 = v31;
      uint64_t v131 = sub_F7220();
      unint64_t v51 = v50;

      swift_bridgeObjectRelease_n();
      unint64_t v37 = v51;
    }
    else
    {
      uint64_t v131 = v38;
      uint64_t v49 = v31;
      swift_bridgeObjectRelease();
    }
    uint64_t v52 = type metadata accessor for RCSFile.ThumbnailInformation(0);
    long long v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
    v53(v135, 1, 1, v52);
    id v54 = [v144 media];
    if (v54)
    {
      uint64_t v55 = v54;
      id v56 = [v54 mediaFileSize];

      id v57 = [v56 integerValue];
    }
    else
    {
      id v57 = 0;
    }
    uint64_t v132 = v22;
    id v58 = [v144 media];
    if (v58)
    {
      long long v59 = v58;
      uint64_t v60 = v49;
      id v61 = [v58 mediaContentType];

      uint64_t v62 = sub_F7220();
      unint64_t v64 = v63;
    }
    else
    {
      uint64_t v60 = v49;
      uint64_t v62 = 0;
      unint64_t v64 = 0xE000000000000000;
    }
    uint64_t v65 = v130;
    uint64_t v66 = v122;
    (*(void (**)(char *, char **, char *))(v60 + 16))(&v122[*(int *)(v130 + 28)], v137, v138);
    sub_F6E50();
    v66[3] = v62;
    v66[4] = v64;
    uint64_t v67 = *(int *)(v65 + 36);
    uint64_t v68 = (char *)v66 + *(int *)(v65 + 40);
    uint64_t v69 = v131;
    *uint64_t v66 = v57;
    v66[1] = v69;
    v66[2] = v37;
    *((unsigned char *)v66 + v67) = 1;
    *(void *)uint64_t v68 = 0;
    v68[8] = 1;
    uint64_t v70 = (uint64_t)v127;
    v53((uint64_t)v127, 1, 1, v52);
    swift_bridgeObjectRetain();
    sub_93ED4(v135, v70);
    sub_D07E4((uint64_t)v66, v70 + *(int *)(v129 + 20), type metadata accessor for RCSFile.DispositionInformation);
    uint64_t v71 = v133;
    sub_D07E4(v70, v133, type metadata accessor for RCSFile);
    sub_95898(v71, v134);
    uint64_t v21 = v143;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v21 = (void *)sub_CEFFC(0, v21[2] + 1, 1, (unint64_t)v21, &qword_12A718, type metadata accessor for RCSFile, type metadata accessor for RCSFile);
    }
    unint64_t v28 = v126;
    uint64_t v73 = v136;
    uint64_t v72 = v137;
    unint64_t v75 = v21[2];
    unint64_t v74 = v21[3];
    uint64_t v76 = v138;
    if (v75 >= v74 >> 1) {
      uint64_t v21 = (void *)sub_CEFFC(v74 > 1, v75 + 1, 1, (unint64_t)v21, &qword_12A718, type metadata accessor for RCSFile, type metadata accessor for RCSFile);
    }
    v21[2] = v75 + 1;
    sub_D07E4(v134, (uint64_t)v21+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(void *)(v128 + 72) * v75, type metadata accessor for RCSFile);
    swift_bridgeObjectRelease();
    sub_D084C(v133);
    (*(void (**)(char **, char *))(v60 + 8))(v72, v76);
    uint64_t v22 = v132;
    uint64_t v20 = v73;
    goto LABEL_32;
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t RCSRichCards.attributes.getter()
{
  uint64_t v1 = v0;
  if (qword_129080 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_F70F0();
  sub_8B44(v2, (uint64_t)static Logger.chatbot);
  swift_retain_n();
  uint64_t v3 = sub_F70D0();
  os_log_type_t v4 = sub_F7670();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    id v6 = [*(id *)(v1 + 16) cards];
    sub_F7650();
    unint64_t v7 = sub_F7410();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_F79B0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_F77B0();
    swift_release();
    _os_log_impl(&dword_0, v3, v4, "Apply %ld rich cards attributes", v5, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v8 = [*(id *)(v1 + 16) dictionaryRepresentation];
  uint64_t v9 = sub_F71B0();

  return v9;
}

id RCSSuggestedReply.chipReply.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t RCSRichCards.init(card:originalID:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_CEB60(a1, a2, a3, (uint64_t (*)(void))sub_CFB90);
}

uint64_t RCSRichCards.init(cardCarousel:originalID:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_CEB60(a1, a2, a3, (uint64_t (*)(void))sub_D02FC);
}

uint64_t sub_CEB60(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  swift_bridgeObjectRelease();

  *(void *)(v4 + 16) = v6;
  return v4;
}

id sub_CEBAC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v8 = v7;
  if (!a4)
  {
    uint64_t v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v14 = 0;
    goto LABEL_6;
  }
  uint64_t v13 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v14 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = [v8 initWithLayout:a1 media:a2 title:v13 cardDescription:v14 chipList:a7];

  return v15;
}

id sub_CEC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  if (a7)
  {
    id v18 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v18 = 0;
  }
  if (!a9)
  {
    unint64_t v19 = 0;
    uint64_t v20 = a11;
    if (a13) {
      goto LABEL_6;
    }
LABEL_8:
    uint64_t v21 = 0;
    goto LABEL_9;
  }
  unint64_t v19 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v20 = a11;
  if (!a13) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
LABEL_9:
  id v22 = [v13 initWithMediaUrl:v16 mediaContentType:v17 mediaFileSize:a5 thumbnailUrl:v18 thumbnailContentType:v19 thumbnailFileSize:a10 height:v20 contentDescription:v21];

  return v22;
}

char *sub_CEDDC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_551C(&qword_12A708);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_CF3A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_CEEEC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_551C(&qword_129500);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_CF2B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_CEFFC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    id v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_551C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  id v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_F79A0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_D08CC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_CF27C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_CEFFC(a1, a2, a3, a4, &qword_12A700, (uint64_t (*)(void))type metadata accessor for TypingIndicator, (uint64_t (*)(void))type metadata accessor for TypingIndicator);
}

uint64_t sub_CF2B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

uint64_t sub_CF3A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_551C(&qword_12A710);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

id sub_CF4B0(void *a1)
{
  id v2 = [a1 cardOrientation];
  id v3 = [a1 imageAlignment];
  id v4 = [a1 titleStyle];
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 style];

    if (v6)
    {
      id v7 = v6;
      id v5 = objc_msgSend(objc_allocWithZone((Class)IMRichCardStyle), "initWithBold:italics:underline:", objc_msgSend(v7, "bold"), objc_msgSend(v7, "italics"), objc_msgSend(v7, "underline"));
    }
    else
    {
      id v5 = 0;
    }
  }
  id v8 = [a1 descriptionStyle];
  id v9 = v8;
  if (v8)
  {
    id v10 = [v8 style];

    if (v10)
    {
      id v11 = v10;
      id v9 = objc_msgSend(objc_allocWithZone((Class)IMRichCardStyle), "initWithBold:italics:underline:", objc_msgSend(v11, "bold"), objc_msgSend(v11, "italics"), objc_msgSend(v11, "underline"));
    }
    else
    {
      id v9 = 0;
    }
  }
  id v12 = [a1 cardStyle];
  uint64_t v13 = v12;
  if (v12)
  {
    id v14 = [v12 uri];

    uint64_t v15 = sub_F6DC0();
    uint64_t v16 = *(void *)(v15 - 8);
    __chkstk_darwin(v15);
    id v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_F6D80();

    sub_F6D50();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v13 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  id v19 = [objc_allocWithZone((Class)IMRichCardLayout) initWithOrientation:v2 imageAlignment:v3 width:-1 titleStyle:v5 descriptionStyle:v9 cardStyleUrl:v13];

  return v19;
}

id sub_CF7DC(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  id v2 = [v1 mediaUrl];
  uint64_t v3 = sub_F6DC0();
  unint64_t v37 = &v35;
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6D80();

  uint64_t v7 = sub_F6D50();
  uint64_t v41 = v8;
  uint64_t v42 = v7;
  id v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  id v10 = [v1 mediaContentType];
  uint64_t v11 = sub_F7220();
  uint64_t v39 = v12;
  uint64_t v40 = v11;

  id v38 = [v1 mediaFileSize];
  uint64_t v13 = sub_551C(&qword_128300);
  uint64_t v35 = (uint64_t)&v35;
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v16 = [v1 thumbnailUrl];
  if (__chkstk_darwin(v16))
  {
    sub_F6D80();

    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))((char *)&v35 - v15, v17, 1, v3);
  sub_50FCC((uint64_t)&v35 - v15, (uint64_t)&v35 - v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))((char *)&v35 - v15, 1, v3) == 1)
  {
    sub_D0784((uint64_t)&v35 - v15);
    uint64_t v36 = 0;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v36 = sub_F6D50();
    uint64_t v19 = v20;
    v9((char *)&v35 - v15, v3);
  }
  id v21 = [v1 thumbnailContentType];
  if (v21)
  {
    unint64_t v22 = v21;
    uint64_t v23 = sub_F7220();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  id v26 = [v1 thumbnailFileSize];
  id v27 = [v1 height];
  id v28 = [v1 contentDescription];
  if (v28)
  {
    id v29 = v28;
    uint64_t v30 = sub_F7220();
    uint64_t v32 = v31;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  id v33 = objc_allocWithZone((Class)IMRichCardMedia);
  id v18 = sub_CEC84(v42, v41, v40, v39, v38, v36, v19, v23, v25, v26, (uint64_t)v27, v30, v32);

  return v18;
}

id sub_CFB90(void *a1)
{
  id v2 = self;
  id v3 = [a1 card];
  id v4 = [v3 content];

  id v5 = [v4 chipList];
  id v6 = (void *)sub_F71F0();
  id v36 = [v2 IMChipListFromCTChipList:v5 originalID:v6];

  id v7 = [a1 chipList];
  uint64_t v8 = (void *)sub_F71F0();
  id v9 = [v2 IMChipListFromCTChipList:v7 originalID:v8];

  sub_551C(&qword_128D68);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_F9970;
  id v11 = [a1 card];
  id v12 = [v11 layout];

  id v35 = sub_CF4B0(v12);
  id v13 = [a1 card];
  id v14 = [v13 content];

  id v15 = [v14 media];
  id v16 = sub_CF7DC(v15);

  id v17 = [a1 card];
  id v18 = [v17 content];

  id v19 = [v18 title];
  if (v19)
  {
    id v20 = [v19 text];

    id v19 = (id)sub_F7220();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = 0;
  }
  id v23 = [a1 card];
  id v24 = [v23 content];

  id v25 = [v24 cardDescription];
  if (v25)
  {
    id v26 = [v25 text];

    id v25 = (id)sub_F7220();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v28 = 0;
  }
  id v29 = [self merge:v36 with:v9];
  id v30 = objc_allocWithZone((Class)IMRichCard);
  *(void *)(v10 + 32) = sub_CEBAC(v35, v16, (uint64_t)v19, v22, (uint64_t)v25, v28, v29);
  sub_F7430();
  id v31 = objc_allocWithZone((Class)IMRichCards);
  sub_F7650();
  uint64_t v32 = (void *)sub_F7400();
  swift_bridgeObjectRelease();
  id v33 = [v31 initWithCards:v32];

  return v33;
}

id sub_CFF94(void *a1)
{
  id v2 = [a1 orientation];
  id v3 = [a1 imageAlignment];
  id v4 = [a1 width];
  id v5 = [a1 titleStyle];
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 style];

    if (v7)
    {
      id v8 = v7;
      id v6 = objc_msgSend(objc_allocWithZone((Class)IMRichCardStyle), "initWithBold:italics:underline:", objc_msgSend(v8, "bold"), objc_msgSend(v8, "italics"), objc_msgSend(v8, "underline"));
    }
    else
    {
      id v6 = 0;
    }
  }
  id v9 = [a1 descriptionStyle];
  if (v9 && (v10 = v9, id v11 = [v9 style], v10, v11))
  {
    id v12 = v11;
    id v13 = objc_msgSend(objc_allocWithZone((Class)IMRichCardStyle), "initWithBold:italics:underline:", objc_msgSend(v12, "bold"), objc_msgSend(v12, "italics"), objc_msgSend(v12, "underline"));
  }
  else
  {
    id v13 = 0;
  }
  id v14 = [a1 cardStyle];
  id v15 = v14;
  if (v14)
  {
    id v16 = [v14 uri];

    uint64_t v17 = sub_F6DC0();
    v27[1] = v27;
    id v18 = v6;
    id v19 = v4;
    id v20 = v3;
    id v21 = v2;
    uint64_t v22 = *(void *)(v17 - 8);
    __chkstk_darwin(v17);
    id v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_F6D80();

    sub_F6D50();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v17);
    id v2 = v21;
    id v3 = v20;
    id v4 = v19;
    id v6 = v18;
    id v15 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  id v25 = [objc_allocWithZone((Class)IMRichCardLayout) initWithOrientation:v2 imageAlignment:v3 width:v4 titleStyle:v6 descriptionStyle:v13 cardStyleUrl:v15];

  return v25;
}

uint64_t sub_D02FC(void *a1)
{
  id v39 = [a1 layout];
  id v2 = self;
  id v3 = [a1 chipList];
  id v4 = (void *)sub_F71F0();
  id v37 = v2;
  id v38 = [v2 IMChipListFromCTChipList:v3 originalID:v4];

  id v5 = [a1 content];
  sub_D0A28();
  unint64_t v6 = sub_F7410();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_F79B0();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    id v30 = objc_allocWithZone((Class)IMRichCards);
    sub_F7650();
    id v31 = (void *)sub_F7400();
    swift_bridgeObjectRelease();
    id v32 = [v30 initWithCards:v31];

    return (uint64_t)v32;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  if (!v7) {
    goto LABEL_23;
  }
LABEL_3:
  uint64_t result = self;
  id v36 = (id)result;
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v33 = v6 & 0xC000000000000001;
    uint64_t v34 = v7;
    unint64_t v35 = v6;
    while (1)
    {
      if (v33) {
        id v10 = (id)sub_F78D0();
      }
      else {
        id v10 = *(id *)(v6 + 8 * v9 + 32);
      }
      id v11 = v10;
      id v12 = objc_msgSend(v10, "chipList", v33);
      id v13 = (void *)sub_F71F0();
      id v14 = [v37 IMChipListFromCTChipList:v12 originalID:v13];

      id v15 = sub_CFF94(v39);
      id v16 = [v11 media];
      id v17 = sub_CF7DC(v16);

      id v18 = [v11 title];
      id v19 = v18;
      if (v18)
      {
        id v20 = [v18 text];

        sub_F7220();
        id v19 = v21;
      }
      id v22 = [v11 cardDescription];
      uint64_t v23 = v22;
      if (v22)
      {
        id v24 = [v22 text];

        sub_F7220();
        uint64_t v26 = v25;
      }
      else
      {
        uint64_t v26 = 0;
      }
      id v27 = [v36 merge:v14 with:v38];
      if (v19)
      {
        uint64_t v28 = (void *)sub_F71F0();
        swift_bridgeObjectRelease();
        if (!v26) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v28 = 0;
        if (!v26)
        {
LABEL_17:
          id v29 = 0;
          goto LABEL_18;
        }
      }
      id v29 = (void *)sub_F71F0();
      swift_bridgeObjectRelease();
LABEL_18:
      [objc_allocWithZone((Class)IMRichCard) initWithLayout:v15 media:v17 title:v28 cardDescription:v29 chipList:v27];

      sub_F73F0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_F7440();
      }
      ++v9;
      sub_F7450();
      sub_F7430();

      unint64_t v6 = v35;
      if (v34 == v9) {
        goto LABEL_23;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_D0784(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_128300);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_D07E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_D084C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RCSFile(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RCSRichCards()
{
  return self;
}

uint64_t sub_D08CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_F79F0();
  __break(1u);
  return result;
}

unint64_t sub_D0A28()
{
  unint64_t result = qword_12A720;
  if (!qword_12A720)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_12A720);
  }
  return result;
}

CoreRCS::RCSFile::Disposition_optional __swiftcall RCSFile.Disposition.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)(rawValue + 1) < 3) {
    return (CoreRCS::RCSFile::Disposition_optional)(rawValue + 1);
  }
  else {
    return (CoreRCS::RCSFile::Disposition_optional)3;
  }
}

uint64_t RCSFile.Disposition.rawValue.getter(unsigned __int8 a1)
{
  return a1 - 1;
}

uint64_t RCSFile.isAudio.getter()
{
  return sub_D0AD8((void (*)(uint64_t))&static UTType.audio.getter);
}

uint64_t type metadata accessor for RCSFile(uint64_t a1)
{
  return sub_C4088(a1, (uint64_t *)&unk_12A820);
}

uint64_t RCSFile.isMovie.getter()
{
  return sub_D0AD8((void (*)(uint64_t))&static UTType.movie.getter);
}

uint64_t sub_D0AD8(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_551C(&qword_1282D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_F70B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  type metadata accessor for RCSFile(0);
  swift_bridgeObjectRetain();
  sub_F7070();
  sub_F7030();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E944((uint64_t)v4, &qword_1282D0);
    char v12 = 0;
  }
  else
  {
    uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    a1(v13);
    char v12 = sub_F70A0();
    id v14 = *(void (**)(char *, uint64_t))(v6 + 8);
    v14(v9, v5);
    v14(v11, v5);
  }
  return v12 & 1;
}

uint64_t sub_D0CD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = sub_551C(&qword_1282D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_F70B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  id v15 = (char *)&v28 - v14;
  swift_bridgeObjectRetain();
  sub_F7070();
  sub_F7030();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1E944((uint64_t)v10, &qword_1282D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    uint64_t v16 = sub_F7060();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if (v18) {
      return v16;
    }
  }
  if (qword_129070 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_F70F0();
  sub_8B44(v19, (uint64_t)static Logger.rcs);
  sub_D4128(v1, (uint64_t)v7, type metadata accessor for RCSFile.DispositionInformation);
  sub_D4128(v1, (uint64_t)v5, type metadata accessor for RCSFile.DispositionInformation);
  id v20 = sub_F70D0();
  os_log_type_t v21 = sub_F7690();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v23 = *((void *)v7 + 3);
    unint64_t v24 = *((void *)v7 + 4);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_A3FC(v23, v24, &v29);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_D4190((uint64_t)v7, type metadata accessor for RCSFile.DispositionInformation);
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v25 = *((void *)v5 + 1);
    unint64_t v26 = *((void *)v5 + 2);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_A3FC(v25, v26, &v29);
    sub_F77B0();
    swift_bridgeObjectRelease();
    sub_D4190((uint64_t)v5, type metadata accessor for RCSFile.DispositionInformation);
    _os_log_impl(&dword_0, v20, v21, "Failed to find file's UTType or path extension for mimetype %s, filename %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_D4190((uint64_t)v7, type metadata accessor for RCSFile.DispositionInformation);
    sub_D4190((uint64_t)v5, type metadata accessor for RCSFile.DispositionInformation);
  }

  return 0;
}

uint64_t RCSFile.DispositionInformation.init(fileSizeInBytes:originalFileName:mimeType:dataUrl:validUntil:disposition:timeLength:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, char a11)
{
  uint64_t v18 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v19 = (char *)a9 + v18[10];
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  id v20 = (char *)a9 + v18[7];
  uint64_t v21 = sub_F6DC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a6, v21);
  uint64_t v22 = (char *)a9 + v18[8];
  uint64_t v23 = sub_F6EE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a7, v23);
  *((unsigned char *)a9 + v18[9]) = a8;
  *(void *)uint64_t v19 = a10;
  v19[8] = a11 & 1;
  return result;
}

uint64_t type metadata accessor for RCSFile.DispositionInformation(uint64_t a1)
{
  return sub_C4088(a1, qword_12A950);
}

uint64_t RCSFile.init(thumbnail:disposition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 1, 1, v6);
  sub_93ED4(a1, a3);
  uint64_t v7 = type metadata accessor for RCSFile(0);
  return sub_D5794(a2, a3 + *(int *)(v7 + 20), type metadata accessor for RCSFile.DispositionInformation);
}

uint64_t type metadata accessor for RCSFile.ThumbnailInformation(uint64_t a1)
{
  return sub_C4088(a1, qword_12A8B8);
}

uint64_t RCSFile.DispositionInformation.fileSizeInBytes.getter()
{
  return *(void *)v0;
}

uint64_t RCSFile.DispositionInformation.fileSizeInBytes.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*RCSFile.ThumbnailInformation.fileSizeInBytes.modify())()
{
  return nullsub_27;
}

uint64_t RCSFile.ThumbnailInformation.contentType.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RCSFile.ThumbnailInformation.contentType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*RCSFile.ThumbnailInformation.contentType.modify())()
{
  return nullsub_28;
}

uint64_t RCSFile.ThumbnailInformation.dataUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RCSFile.ThumbnailInformation(0) + 24);
  uint64_t v4 = sub_F6DC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RCSFile.ThumbnailInformation.dataUrl.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RCSFile.ThumbnailInformation(0) + 24);
  uint64_t v4 = sub_F6DC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RCSFile.ThumbnailInformation.dataUrl.modify())()
{
  return nullsub_29;
}

uint64_t RCSFile.ThumbnailInformation.validUntil.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_D28C4(type metadata accessor for RCSFile.ThumbnailInformation, (uint64_t (*)(void))&type metadata accessor for Date, a1);
}

uint64_t RCSFile.ThumbnailInformation.validUntil.setter(uint64_t a1)
{
  return sub_D2974(a1, type metadata accessor for RCSFile.ThumbnailInformation, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t (*RCSFile.ThumbnailInformation.validUntil.modify())()
{
  return nullsub_30;
}

uint64_t RCSFile.ThumbnailInformation.init(fileSizeInBytes:contentType:dataUrl:validUntil:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  uint64_t v9 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v10 = (char *)a6 + *(int *)(v9 + 24);
  uint64_t v11 = sub_F6DC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a4, v11);
  uint64_t v12 = (char *)a6 + *(int *)(v9 + 28);
  uint64_t v13 = sub_F6EE0();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);

  return v14(v12, a5, v13);
}

uint64_t sub_D16C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_F7220();
  if (!*(void *)(a1 + 16) || (unint64_t v6 = sub_1C9BC(v4, v5), (v7 & 1) == 0))
  {
    long long v57 = 0u;
    long long v58 = 0u;
    goto LABEL_9;
  }
  sub_BAD8(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v57);
  swift_bridgeObjectRelease();
  if (!*((void *)&v58 + 1))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)&v57, &qword_127FF8);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v8 = v55;
  uint64_t v9 = sub_F7220();
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_1C9BC(v9, v10), (v12 & 1) != 0))
  {
    sub_BAD8(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v57);
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v58 + 1)) {
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v15 = sub_F7220();
  if (*(void *)(a1 + 16) && (unint64_t v17 = sub_1C9BC(v15, v16), (v18 & 1) != 0))
  {
    sub_BAD8(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v57);
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v58 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v51 = v55;
  uint64_t v52 = v56;
  uint64_t v19 = sub_F6DC0();
  long long v53 = &v45;
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_551C(&qword_128300);
  id v54 = &v45;
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6DB0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v25, 1, v19) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)v25, &qword_128300);
  }
  else
  {
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v50 = v19;
    id v46 = v26;
    uint64_t v47 = v20 + 32;
    v26(v22, v25, v19);
    uint64_t v27 = sub_F6EE0();
    id v54 = &v45;
    uint64_t v28 = *(void *)(v27 - 8);
    __chkstk_darwin(v27);
    uint64_t v45 = (char *)&v45 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v30 = sub_551C(&qword_127C78);
    uint64_t v49 = &v45;
    __chkstk_darwin(v30 - 8);
    id v32 = (char *)&v45 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v33 = sub_F7220();
    if (*(void *)(a1 + 16) && (unint64_t v35 = sub_1C9BC(v33, v34), (v36 & 1) != 0))
    {
      sub_BAD8(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v48 = v22;
    uint64_t v37 = v20;
    if (*((void *)&v58 + 1))
    {
      int v38 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v32, v38 ^ 1u, 1, v27);
      int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v32, 1, v27);
      uint64_t v40 = v52;
      if (v39 != 1)
      {
        uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
        uint64_t v42 = v45;
        v41(v45, v32, v27);
        uint64_t v43 = type metadata accessor for RCSFile.ThumbnailInformation(0);
        v46(&a2[*(int *)(v43 + 24)], v48, v50);
        v41(&a2[*(int *)(v43 + 28)], v42, v27);
        uint64_t v44 = v51;
        *(void *)a2 = v8;
        *((void *)a2 + 1) = v44;
        *((void *)a2 + 2) = v40;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(a2, 0, 1, v43);
      }
    }
    else
    {
      sub_1E944((uint64_t)&v57, &qword_127FF8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v32, 1, 1, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v48, v50);
    sub_1E944((uint64_t)v32, &qword_127C78);
  }
LABEL_11:
  uint64_t v13 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
}

uint64_t sub_D1D3C()
{
  uint64_t result = 0x657A6953656C6966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x54746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0x6C725561746164;
      break;
    case 3:
      uint64_t result = 0x746E5564696C6176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_D1DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_D88C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_D1E0C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_D1E18(uint64_t a1)
{
  unint64_t v2 = sub_D20BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D1E54(uint64_t a1)
{
  unint64_t v2 = sub_D20BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RCSFile.ThumbnailInformation.encode(to:)(void *a1)
{
  uint64_t v3 = sub_551C(&qword_12A728);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_6BA8(a1, a1[3]);
  sub_D20BC();
  sub_F7C80();
  v8[15] = 0;
  sub_F7B00();
  if (!v1)
  {
    v8[14] = 1;
    sub_F7AD0();
    type metadata accessor for RCSFile.ThumbnailInformation(0);
    v8[13] = 2;
    sub_F6DC0();
    sub_D25C0(&qword_12A738, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_F7B10();
    v8[12] = 3;
    sub_F6EE0();
    sub_D25C0(&qword_12A740, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_F7B10();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_D20BC()
{
  unint64_t result = qword_12A730;
  if (!qword_12A730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A730);
  }
  return result;
}

uint64_t RCSFile.ThumbnailInformation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = sub_551C(&qword_12A748);
  uint64_t v4 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_6BA8(a1, a1[3]);
  sub_D20BC();
  sub_F7C70();
  if (v2) {
    return sub_6BEC((uint64_t)a1);
  }
  uint64_t v10 = v4;
  char v31 = 0;
  uint64_t v11 = v27;
  uint64_t *v9 = sub_F7A80();
  char v30 = 1;
  v9[1] = sub_F7A50();
  v9[2] = v12;
  uint64_t v13 = sub_F6DC0();
  uint64_t v25 = &v20;
  uint64_t v23 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v29 = 2;
  sub_D25C0(&qword_12A750, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v24 = v13;
  sub_F7A90();
  uint64_t v22 = v7;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)v9 + *(int *)(v7 + 24), v15, v24);
  uint64_t v16 = sub_F6EE0();
  uint64_t v25 = &v20;
  uint64_t v21 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = 3;
  sub_D25C0(&qword_12A758, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_F7A90();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v9 + *(int *)(v22 + 28), v18, v16);
  sub_D4128((uint64_t)v9, v26, type metadata accessor for RCSFile.ThumbnailInformation);
  sub_6BEC((uint64_t)a1);
  return sub_D4190((uint64_t)v9, type metadata accessor for RCSFile.ThumbnailInformation);
}

uint64_t sub_D25C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_D2608@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RCSFile.ThumbnailInformation.init(from:)(a1, a2);
}

uint64_t sub_D2620(void *a1)
{
  return RCSFile.ThumbnailInformation.encode(to:)(a1);
}

Swift::Int sub_D2638()
{
  uint64_t v1 = *v0;
  sub_F7C20();
  sub_F7C30(v1 - 1);
  return sub_F7C50();
}

void sub_D2680()
{
  sub_F7C30(*v0 - 1);
}

Swift::Int sub_D26B0()
{
  uint64_t v1 = *v0;
  sub_F7C20();
  sub_F7C30(v1 - 1);
  return sub_F7C50();
}

void *sub_D26F4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  if ((unint64_t)(*result + 1) < 3) {
    uint64_t v2 = *result + 1;
  }
  else {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_D2710(void *a1@<X8>)
{
  *a1 = *v1 - 1;
}

uint64_t sub_D2720()
{
  return sub_F73E0();
}

uint64_t sub_D2780()
{
  return sub_F7390();
}

uint64_t (*RCSFile.DispositionInformation.fileSizeInBytes.modify())()
{
  return nullsub_31;
}

uint64_t (*RCSFile.DispositionInformation.originalFileName.modify())()
{
  return nullsub_32;
}

uint64_t RCSFile.DispositionInformation.mimeType.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RCSFile.DispositionInformation.mimeType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RCSFile.DispositionInformation.mimeType.modify())()
{
  return nullsub_33;
}

uint64_t RCSFile.DispositionInformation.dataUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_D28C4(type metadata accessor for RCSFile.DispositionInformation, (uint64_t (*)(void))&type metadata accessor for URL, a1);
}

uint64_t sub_D28C4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 28);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t RCSFile.DispositionInformation.dataUrl.setter(uint64_t a1)
{
  return sub_D2974(a1, type metadata accessor for RCSFile.DispositionInformation, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_D2974(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a2(0) + 28);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40);

  return v8(v6, a1, v7);
}

uint64_t (*RCSFile.DispositionInformation.dataUrl.modify())()
{
  return nullsub_34;
}

uint64_t RCSFile.DispositionInformation.validUntil.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RCSFile.DispositionInformation(0) + 32);
  uint64_t v4 = sub_F6EE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RCSFile.DispositionInformation.validUntil.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RCSFile.DispositionInformation(0) + 32);
  uint64_t v4 = sub_F6EE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*RCSFile.DispositionInformation.validUntil.modify())()
{
  return nullsub_35;
}

uint64_t RCSFile.DispositionInformation.disposition.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RCSFile.DispositionInformation(0) + 36));
}

uint64_t RCSFile.DispositionInformation.disposition.setter(char a1)
{
  uint64_t result = type metadata accessor for RCSFile.DispositionInformation(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*RCSFile.DispositionInformation.disposition.modify())()
{
  return nullsub_36;
}

uint64_t RCSFile.DispositionInformation.timeLength.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for RCSFile.DispositionInformation(0) + 40));
}

uint64_t RCSFile.DispositionInformation.timeLength.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v6 = v2 + *(int *)(result + 40);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*RCSFile.DispositionInformation.timeLength.modify())()
{
  return nullsub_37;
}

uint64_t sub_D2CE8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_F7220();
  if (!*(void *)(a1 + 16) || (unint64_t v8 = sub_1C9BC(v6, v7), (v9 & 1) == 0))
  {
    long long v74 = 0u;
    long long v75 = 0u;
    goto LABEL_9;
  }
  sub_BAD8(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v74);
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)&v74, &qword_127FF8);
LABEL_11:
    uint64_t v15 = type metadata accessor for RCSFile.DispositionInformation(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_33;
  }
  uint64_t v10 = v72;
  uint64_t v11 = sub_F7220();
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_1C9BC(v11, v12), (v14 & 1) != 0))
  {
    sub_BAD8(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1)) {
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v17 = v73;
  uint64_t v18 = sub_F7220();
  if (*(void *)(a1 + 16) && (unint64_t v20 = sub_1C9BC(v18, v19), (v21 & 1) != 0))
  {
    sub_BAD8(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v22 = sub_F7220();
  if (*(void *)(a1 + 16) && (unint64_t v24 = sub_1C9BC(v22, v23), (v25 & 1) != 0))
  {
    sub_BAD8(*(void *)(a1 + 56) + 32 * v24, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v65 = v72;
  uint64_t v66 = v72;
  uint64_t v68 = v73;
  uint64_t v70 = v72;
  uint64_t v26 = sub_F6DC0();
  uint64_t v71 = &v58;
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v67 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_551C(&qword_128300);
  uint64_t v69 = &v58;
  __chkstk_darwin(v29 - 8);
  char v31 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F6DB0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v31, 1, v26) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1E944((uint64_t)v31, &qword_128300);
    goto LABEL_11;
  }
  uint64_t v62 = v27;
  id v32 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  uint64_t v64 = v26;
  long long v59 = v32;
  uint64_t v60 = v27 + 32;
  v32(v67, v31, v26);
  uint64_t v33 = sub_F6EE0();
  uint64_t v69 = &v58;
  uint64_t v70 = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v61 = (char *)&v58 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_551C(&qword_127C78);
  unint64_t v63 = &v58;
  __chkstk_darwin(v36 - 8);
  int v38 = (char *)&v58 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_F7220();
  if (*(void *)(a1 + 16) && (unint64_t v41 = sub_1C9BC(v39, v40), (v42 & 1) != 0))
  {
    sub_BAD8(*(void *)(a1 + 56) + 32 * v41, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1))
  {
    sub_1E944((uint64_t)&v74, &qword_127FF8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v38, 1, 1, v70);
    goto LABEL_45;
  }
  uint64_t v43 = v70;
  int v44 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v38, v44 ^ 1u, 1, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v38, 1, v43) == 1)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v67, v64);
    sub_1E944((uint64_t)v38, &qword_127C78);
    goto LABEL_11;
  }
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v45(v61, v38, v43);
  if (a2)
  {
    uint64_t v46 = sub_F7220();
    uint64_t v48 = v65;
    if (*(void *)(a1 + 16) && (unint64_t v49 = sub_1C9BC(v46, v47), (v50 & 1) != 0))
    {
      sub_BAD8(*(void *)(a1 + 56) + 32 * v49, (uint64_t)&v74);
    }
    else
    {
      long long v74 = 0u;
      long long v75 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v75 + 1))
    {
      int v54 = swift_dynamicCast();
      if (v54) {
        uint64_t v51 = v72;
      }
      else {
        uint64_t v51 = 0;
      }
      char v52 = v54 ^ 1;
      char v53 = 2;
    }
    else
    {
      sub_1E944((uint64_t)&v74, &qword_127FF8);
      uint64_t v51 = 0;
      char v53 = 2;
      char v52 = 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = 0;
    char v52 = 1;
    char v53 = 1;
    uint64_t v48 = v65;
  }
  uint64_t v55 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
  v59((char *)a3 + v55[7], v67, v64);
  v45((char *)a3 + v55[8], v61, v70);
  uint64_t v56 = (char *)a3 + v55[10];
  *a3 = v10;
  a3[1] = v48;
  uint64_t v57 = v66;
  a3[2] = v17;
  a3[3] = v57;
  a3[4] = v68;
  *((unsigned char *)a3 + v55[9]) = v53;
  *(void *)uint64_t v56 = v51;
  v56[8] = v52;
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v55 - 1) + 56))(a3, 0, 1, v55);
}

unint64_t sub_D34F8(char a1)
{
  unint64_t result = 0x657A6953656C6966;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x65707954656D696DLL;
      break;
    case 3:
      unint64_t result = 0x6C725561746164;
      break;
    case 4:
      unint64_t result = 0x746E5564696C6176;
      break;
    case 5:
      unint64_t result = 0x7469736F70736964;
      break;
    case 6:
      unint64_t result = 0x676E654C656D6974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_D3604()
{
  return sub_D34F8(*v0);
}

uint64_t sub_D360C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_D8ACC(a1, a2);
  *a3 = result;
  return result;
}

void sub_D3634(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_D3640(uint64_t a1)
{
  unint64_t v2 = sub_D3984();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D367C(uint64_t a1)
{
  unint64_t v2 = sub_D3984();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RCSFile.DispositionInformation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_551C(&qword_12A760);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_6BA8(a1, a1[3]);
  sub_D3984();
  sub_F7C80();
  v11[15] = 0;
  sub_F7B00();
  if (!v2)
  {
    v11[14] = 1;
    sub_F7AD0();
    v11[13] = 2;
    sub_F7AD0();
    uint64_t v9 = type metadata accessor for RCSFile.DispositionInformation(0);
    v11[12] = 3;
    sub_F6DC0();
    sub_D25C0(&qword_12A738, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_F7B10();
    v11[11] = 4;
    sub_F6EE0();
    sub_D25C0(&qword_12A740, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_F7B10();
    v11[10] = *(unsigned char *)(v3 + *(int *)(v9 + 36));
    v11[9] = 5;
    sub_D39D8();
    sub_F7B10();
    v11[8] = 6;
    sub_F7AB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_D3984()
{
  unint64_t result = qword_12A768;
  if (!qword_12A768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A768);
  }
  return result;
}

unint64_t sub_D39D8()
{
  unint64_t result = qword_12A770;
  if (!qword_12A770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A770);
  }
  return result;
}

uint64_t RCSFile.DispositionInformation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = sub_551C(&qword_12A778);
  uint64_t v5 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v34 = a1;
  uint64_t v35 = (int *)v9;
  uint64_t v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t *)((char *)v11 + *(int *)(v9 + 40));
  *uint64_t v12 = 0;
  *((unsigned char *)v12 + 8) = 1;
  sub_6BA8(a1, a1[3]);
  sub_D3984();
  sub_F7C70();
  if (v2) {
    return sub_6BEC((uint64_t)v34);
  }
  char v31 = v12;
  uint64_t v32 = a2;
  uint64_t v13 = v5;
  char v43 = 0;
  uint64_t v14 = (uint64_t)v11;
  *uint64_t v11 = sub_F7A80();
  char v42 = 1;
  v11[1] = sub_F7A50();
  _OWORD v11[2] = v15;
  char v41 = 2;
  v11[3] = sub_F7A50();
  v11[4] = v16;
  uint64_t v17 = sub_F6DC0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v40 = 3;
  sub_D25C0(&qword_12A750, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_F7A90();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v14 + v35[7], v20, v17);
  uint64_t v21 = sub_F6EE0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v39 = 4;
  sub_D25C0(&qword_12A758, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_F7A90();
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v14 + v35[8], v24, v21);
  char v37 = 5;
  sub_D40D4();
  sub_F7A90();
  *(unsigned char *)(v14 + v35[9]) = v38;
  char v36 = 6;
  uint64_t v25 = sub_F7A30();
  LOBYTE(v21) = v26;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v33);
  uint64_t v28 = v31;
  uint64_t v27 = v32;
  *char v31 = v25;
  *((unsigned char *)v28 + 8) = v21 & 1;
  sub_D4128(v14, v27, type metadata accessor for RCSFile.DispositionInformation);
  sub_6BEC((uint64_t)v34);
  return sub_D4190(v14, type metadata accessor for RCSFile.DispositionInformation);
}

unint64_t sub_D40D4()
{
  unint64_t result = qword_12A780;
  if (!qword_12A780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A780);
  }
  return result;
}

uint64_t sub_D4128(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_D4190(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_D41F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RCSFile.DispositionInformation.init(from:)(a1, a2);
}

uint64_t sub_D4208(void *a1)
{
  return RCSFile.DispositionInformation.encode(to:)(a1);
}

uint64_t RCSFile.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_958FC(v1, a1);
}

uint64_t RCSFile.thumbnail.setter(uint64_t a1)
{
  return sub_93ED4(a1, v1);
}

uint64_t (*RCSFile.thumbnail.modify())()
{
  return nullsub_38;
}

uint64_t RCSFile.disposition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RCSFile(0);
  return sub_D4128(v1 + *(int *)(v3 + 20), a1, type metadata accessor for RCSFile.DispositionInformation);
}

uint64_t RCSFile.disposition.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RCSFile(0) + 20);

  return sub_D42E8(a1, v3);
}

uint64_t sub_D42E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSFile.DispositionInformation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*RCSFile.disposition.modify())()
{
  return nullsub_39;
}

uint64_t sub_D4398@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v48) = a2;
  uint64_t v52 = a3;
  uint64_t v51 = type metadata accessor for RCSFile(0);
  uint64_t v4 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_551C(&qword_1283F0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v45 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  __chkstk_darwin(v11);
  uint64_t v50 = (uint64_t)&v44 - v14;
  uint64_t v15 = sub_551C(&qword_12A9F0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_F7220();
  if (!*(void *)(a1 + 16) || (unint64_t v27 = sub_1C9BC(v25, v26), (v28 & 1) == 0))
  {
    long long v54 = 0u;
    long long v55 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_BAD8(*(void *)(a1 + 56) + 32 * v27, (uint64_t)&v54);
  swift_bridgeObjectRelease();
  if (!*((void *)&v55 + 1))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v29 = &qword_127FF8;
    uint64_t v30 = (uint64_t *)&v54;
    goto LABEL_9;
  }
  sub_551C(&qword_128730);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_D2CE8(v53, v48 & 1, v17);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = &qword_12A9F0;
    uint64_t v30 = v17;
LABEL_9:
    sub_1E944((uint64_t)v30, v29);
LABEL_10:
    uint64_t v31 = 1;
    uint64_t v33 = v51;
    uint64_t v32 = v52;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v32, v31, 1, v33);
  }
  sub_D5794((uint64_t)v17, (uint64_t)v24, type metadata accessor for RCSFile.DispositionInformation);
  uint64_t v35 = v49;
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v48(v50, 1, 1, v49);
  uint64_t v36 = sub_F7220();
  if (*(void *)(a1 + 16) && (unint64_t v38 = sub_1C9BC(v36, v37), (v39 & 1) != 0))
  {
    sub_BAD8(*(void *)(a1 + 56) + 32 * v38, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v55 + 1))
  {
    if (swift_dynamicCast())
    {
      sub_D16C4(v53, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v13, 1, v35) == 1)
      {
        sub_1E944((uint64_t)v13, &qword_1283F0);
      }
      else
      {
        uint64_t v40 = v50;
        sub_1E944(v50, &qword_1283F0);
        sub_D5794((uint64_t)v13, (uint64_t)v7, type metadata accessor for RCSFile.ThumbnailInformation);
        sub_D5794((uint64_t)v7, v40, type metadata accessor for RCSFile.ThumbnailInformation);
        v48(v40, 0, 1, v35);
      }
    }
  }
  else
  {
    sub_1E944((uint64_t)&v54, &qword_127FF8);
  }
  uint64_t v33 = v51;
  uint64_t v32 = v52;
  uint64_t v42 = v45;
  uint64_t v41 = (uint64_t)v46;
  uint64_t v43 = v50;
  sub_958FC(v50, v45);
  sub_D4128((uint64_t)v24, (uint64_t)v22, type metadata accessor for RCSFile.DispositionInformation);
  v48(v41, 1, 1, v49);
  sub_93ED4(v42, v41);
  sub_D5794((uint64_t)v22, v41 + *(int *)(v33 + 20), type metadata accessor for RCSFile.DispositionInformation);
  sub_D5794(v41, v32, type metadata accessor for RCSFile);
  sub_1E944(v43, &qword_1283F0);
  sub_D4190((uint64_t)v24, type metadata accessor for RCSFile.DispositionInformation);
  uint64_t v31 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v32, v31, 1, v33);
}

uint64_t sub_D49C0()
{
  if (*v0) {
    return 0x7469736F70736964;
  }
  else {
    return 0x69616E626D756874;
  }
}

uint64_t sub_D4A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_D8DF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_D4A30(uint64_t a1)
{
  unint64_t v2 = sub_D4CA8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D4A6C(uint64_t a1)
{
  unint64_t v2 = sub_D4CA8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t RCSFile.encode(to:)(void *a1)
{
  uint64_t v3 = sub_551C(&qword_12A788);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_6BA8(a1, a1[3]);
  sub_D4CA8();
  sub_F7C80();
  v8[15] = 0;
  type metadata accessor for RCSFile.ThumbnailInformation(0);
  sub_D4CFC(&qword_12A798, (void (*)(uint64_t))type metadata accessor for RCSFile.ThumbnailInformation);
  sub_F7AC0();
  if (!v1)
  {
    type metadata accessor for RCSFile(0);
    v8[14] = 1;
    type metadata accessor for RCSFile.DispositionInformation(0);
    sub_D4CFC(&qword_12A7A0, (void (*)(uint64_t))type metadata accessor for RCSFile.DispositionInformation);
    sub_F7B10();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_D4CA8()
{
  unint64_t result = qword_12A790;
  if (!qword_12A790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A790);
  }
  return result;
}

uint64_t sub_D4CFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RCSFile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v20 = type metadata accessor for RCSFile.DispositionInformation(0);
  __chkstk_darwin(v20);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_551C(&qword_1283F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v21 = (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_551C(&qword_12A7A8);
  uint64_t v19 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RCSFile(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_6BA8(a1, a1[3]);
  sub_D4CA8();
  uint64_t v13 = v23;
  sub_F7C70();
  if (v13)
  {
    sub_6BEC((uint64_t)a1);
    return sub_1E944((uint64_t)v11, &qword_1283F0);
  }
  else
  {
    uint64_t v23 = v9;
    uint64_t v14 = v19;
    char v25 = 0;
    sub_D4CFC(&qword_12A7B0, (void (*)(uint64_t))type metadata accessor for RCSFile.ThumbnailInformation);
    sub_F7A40();
    sub_93ED4(v21, (uint64_t)v11);
    char v24 = 1;
    sub_D4CFC(&qword_12A7B8, (void (*)(uint64_t))type metadata accessor for RCSFile.DispositionInformation);
    uint64_t v15 = v22;
    sub_F7A90();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
    uint64_t v16 = v18;
    sub_D5794((uint64_t)v4, (uint64_t)&v11[*(int *)(v23 + 20)], type metadata accessor for RCSFile.DispositionInformation);
    sub_D4128((uint64_t)v11, v16, type metadata accessor for RCSFile);
    sub_6BEC((uint64_t)a1);
    return sub_D4190((uint64_t)v11, type metadata accessor for RCSFile);
  }
}

uint64_t sub_D5114@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RCSFile.init(from:)(a1, a2);
}

uint64_t sub_D512C(void *a1)
{
  return RCSFile.encode(to:)(a1);
}

unint64_t RCSFile.userInfoRepresentation(simID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_551C(&qword_1283F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v89 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v90 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (void *)((char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_551C(&qword_128538);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_FBD50;
  *(void *)(inited + 32) = sub_F7220();
  *(void *)(inited + 40) = v10;
  uint64_t v11 = sub_F7220();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v11;
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 80) = sub_F7220();
  *(void *)(inited + 88) = v13;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = a1;
  *(void *)(inited + 104) = a2;
  v78[1] = IMFileTransferUserInfoRCSFileKey;
  *(void *)(inited + 128) = sub_F7220();
  *(void *)(inited + 136) = v14;
  uint64_t v85 = v8;
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_F9300;
  uint64_t v84 = IMFileTransferUserInfoRCSURLKey;
  *(void *)(v15 + 32) = sub_F7220();
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = (uint64_t *)(v2 + *(int *)(type metadata accessor for RCSFile(0) + 20));
  uint64_t v18 = type metadata accessor for RCSFile.DispositionInformation(0);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_F6D50();
  *(void *)(v15 + 72) = &type metadata for String;
  *(void *)(v15 + 48) = v19;
  *(void *)(v15 + 56) = v20;
  uint64_t v83 = IMFileTransferUserInfoRCSMIMETypeKey;
  *(void *)(v15 + 80) = sub_F7220();
  *(void *)(v15 + 88) = v21;
  uint64_t v22 = v17[3];
  uint64_t v23 = v17[4];
  *(void *)(v15 + 120) = &type metadata for String;
  *(void *)(v15 + 96) = v22;
  *(void *)(v15 + 104) = v23;
  *(void *)(v15 + 128) = sub_F7220();
  *(void *)(v15 + 136) = v24;
  uint64_t v25 = v17[1];
  uint64_t v26 = v17[2];
  *(void *)(v15 + 168) = &type metadata for String;
  *(void *)(v15 + 144) = v25;
  *(void *)(v15 + 152) = v26;
  uint64_t v82 = IMFileTransferUserInfoRCSFileSizeKey;
  *(void *)(v15 + 176) = sub_F7220();
  *(void *)(v15 + 184) = v27;
  uint64_t v28 = *v17;
  *(void *)(v15 + 216) = &type metadata for Int;
  *(void *)(v15 + 192) = v28;
  uint64_t v80 = IMFileTransferUserInfoRCSValidUntilKey;
  *(void *)(v15 + 224) = sub_F7220();
  *(void *)(v15 + 232) = v29;
  uint64_t v30 = (char *)v17 + *(int *)(v18 + 32);
  uint64_t v31 = sub_F6EE0();
  *(void *)(v15 + 264) = v31;
  uint64_t v32 = sub_28728((uint64_t *)(v15 + 240));
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(void (**)(uint64_t *, char *, uint64_t))(v33 + 16);
  uint64_t v35 = v30;
  uint64_t v81 = v31;
  uint64_t v36 = v31;
  uint64_t v37 = v88;
  uint64_t v38 = (uint64_t)v89;
  v78[2] = v33 + 16;
  id v79 = v34;
  v34(v32, v35, v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_4B338(v15);
  uint64_t v40 = sub_551C(&qword_128730);
  *(void *)(inited + 168) = v40;
  *(void *)(inited + 144) = v39;
  unint64_t v41 = sub_4B338(inited);
  uint64_t v42 = v87;
  uint64_t v43 = (char *)v17 + *(int *)(v18 + 40);
  uint64_t v44 = v90;
  if ((v43[8] & 1) == 0)
  {
    uint64_t v45 = v87;
    uint64_t v46 = *(void *)v43;
    uint64_t v47 = sub_F7220();
    uint64_t v49 = v48;
    if (*(void *)(v41 + 16))
    {
      uint64_t v50 = v47;
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_1C9BC(v50, v49);
      if (v52)
      {
        sub_BAD8(*(void *)(v41 + 56) + 32 * v51, (uint64_t)&v93);
      }
      else
      {
        long long v93 = 0u;
        long long v94 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v93 = 0u;
      long long v94 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v94 + 1))
    {
      if (swift_dynamicCast())
      {
        unint64_t v53 = *(void *)&v92[0];
        uint64_t v54 = sub_F7220();
        uint64_t v56 = v55;
        *((void *)&v94 + 1) = &type metadata for Double;
        *(void *)&long long v93 = v46;
        sub_1EBC4(&v93, v92);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v91 = v53;
        sub_1CEB8(v92, v54, v56, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1E944((uint64_t)&v93, &qword_127FF8);
    }
    uint64_t v42 = v45;
  }
  sub_958FC(v42, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v38, 1, v37) == 1)
  {
    sub_1E944(v38, &qword_1283F0);
  }
  else
  {
    uint64_t v58 = v37;
    long long v59 = v86;
    sub_D5794(v38, (uint64_t)v86, type metadata accessor for RCSFile.ThumbnailInformation);
    uint64_t v90 = sub_F7220();
    uint64_t v61 = v60;
    uint64_t v62 = swift_initStackObject();
    *(_OWORD *)(v62 + 16) = xmmword_F9BF0;
    *(void *)(v62 + 32) = sub_F7220();
    *(void *)(v62 + 40) = v63;
    uint64_t v64 = sub_F6D50();
    *(void *)(v62 + 72) = &type metadata for String;
    *(void *)(v62 + 48) = v64;
    *(void *)(v62 + 56) = v65;
    *(void *)(v62 + 80) = sub_F7220();
    *(void *)(v62 + 88) = v66;
    uint64_t v67 = v59[1];
    uint64_t v68 = v59[2];
    *(void *)(v62 + 120) = &type metadata for String;
    *(void *)(v62 + 96) = v67;
    *(void *)(v62 + 104) = v68;
    *(void *)(v62 + 128) = sub_F7220();
    *(void *)(v62 + 136) = v69;
    uint64_t v70 = *v59;
    *(void *)(v62 + 168) = &type metadata for Int;
    *(void *)(v62 + 144) = v70;
    *(void *)(v62 + 176) = sub_F7220();
    *(void *)(v62 + 184) = v71;
    uint64_t v72 = (char *)v59 + *(int *)(v58 + 28);
    uint64_t v73 = v81;
    *(void *)(v62 + 216) = v81;
    long long v74 = sub_28728((uint64_t *)(v62 + 192));
    v79(v74, v72, v73);
    swift_bridgeObjectRetain();
    unint64_t v75 = sub_4B338(v62);
    *((void *)&v94 + 1) = v40;
    *(void *)&long long v93 = v75;
    sub_1EBC4(&v93, v92);
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v91 = v41;
    sub_1CEB8(v92, v90, v61, v76);
    unint64_t v41 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_D4190((uint64_t)v59, type metadata accessor for RCSFile.ThumbnailInformation);
  }
  return v41;
}

uint64_t sub_D5794(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_D5800()
{
  unint64_t result = qword_12A7C0;
  if (!qword_12A7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A7C0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RCSFile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for RCSFile.ThumbnailInformation(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_551C(&qword_1283F0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v12 = *(int *)(v7 + 24);
      uint64_t v38 = (char *)a1 + v12;
      uint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = sub_F6DC0();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v38, v13, v14);
      uint64_t v16 = *(int *)(v7 + 28);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v20 = *(int *)(a3 + 20);
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)((char *)a2 + v20);
    uint64_t v24 = *(uint64_t *)((char *)a2 + v20 + 16);
    uint64_t v23 = *((void *)v22 + 3);
    *((void *)v21 + 2) = v24;
    *((void *)v21 + 3) = v23;
    *((void *)v21 + 4) = *((void *)v22 + 4);
    uint64_t v25 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
    uint64_t v26 = v25[7];
    unint64_t v39 = &v21[v26];
    uint64_t v27 = &v22[v26];
    uint64_t v28 = sub_F6DC0();
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    uint64_t v11 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v39, v27, v28);
    uint64_t v30 = v25[8];
    uint64_t v31 = &v21[v30];
    uint64_t v32 = &v22[v30];
    uint64_t v33 = sub_F6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    v21[v25[9]] = v22[v25[9]];
    uint64_t v34 = v25[10];
    uint64_t v35 = &v21[v34];
    uint64_t v36 = &v22[v34];
    v35[8] = v36[8];
    *(void *)uint64_t v35 = *(void *)v36;
  }
  return v11;
}

uint64_t destroy for RCSFile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = sub_F6DC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 28);
    uint64_t v8 = sub_F6EE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v11 = v9 + *(int *)(v10 + 28);
  uint64_t v12 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v9 + *(int *)(v10 + 32);
  uint64_t v14 = sub_F6EE0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

void *initializeWithCopy for RCSFile(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_551C(&qword_1283F0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(v6 + 24);
    uint64_t v36 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_F6DC0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v36, v10, v11);
    uint64_t v13 = *(int *)(v6 + 28);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_F6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)((char *)a2 + v17);
  uint64_t v21 = *(void *)((char *)a2 + v17 + 16);
  uint64_t v20 = *((void *)v19 + 3);
  *((void *)v18 + 2) = v21;
  *((void *)v18 + 3) = v20;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  uint64_t v22 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v23 = v22[7];
  uint64_t v24 = &v18[v23];
  uint64_t v25 = &v19[v23];
  uint64_t v26 = sub_F6DC0();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  uint64_t v28 = v22[8];
  uint64_t v29 = &v18[v28];
  uint64_t v30 = &v19[v28];
  uint64_t v31 = sub_F6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  v18[v22[9]] = v19[v22[9]];
  uint64_t v32 = v22[10];
  uint64_t v33 = &v18[v32];
  uint64_t v34 = &v19[v32];
  v33[8] = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  return a1;
}

void *assignWithCopy for RCSFile(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v37 = *(int *)(v6 + 24);
      uint64_t v38 = (char *)a1 + v37;
      unint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = sub_F6DC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
      uint64_t v41 = *(int *)(v6 + 28);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = sub_F6EE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
      goto LABEL_7;
    }
    sub_D4190((uint64_t)a1, type metadata accessor for RCSFile.ThumbnailInformation);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v19 = sub_551C(&qword_1283F0);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v11 = *(int *)(v6 + 24);
  uint64_t v45 = (char *)a1 + v11;
  uint64_t v12 = (char *)a2 + v11;
  uint64_t v13 = sub_F6DC0();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v45, v12, v13);
  uint64_t v15 = *(int *)(v6 + 28);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_F6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  *uint64_t v21 = *(void *)((char *)a2 + v20);
  v21[1] = *(void *)((char *)a2 + v20 + 8);
  v21[2] = *(void *)((char *)a2 + v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[3] = *((void *)v22 + 3);
  v21[4] = *((void *)v22 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v24 = v23[7];
  uint64_t v25 = (char *)v21 + v24;
  uint64_t v26 = &v22[v24];
  uint64_t v27 = sub_F6DC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  uint64_t v28 = v23[8];
  uint64_t v29 = (char *)v21 + v28;
  uint64_t v30 = &v22[v28];
  uint64_t v31 = sub_F6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  *((unsigned char *)v21 + v23[9]) = v22[v23[9]];
  uint64_t v32 = v23[10];
  uint64_t v33 = (char *)v21 + v32;
  uint64_t v34 = &v22[v32];
  char v35 = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v35;
  return a1;
}

void *initializeWithTake for RCSFile(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_551C(&qword_1283F0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    uint64_t v9 = *(int *)(v6 + 24);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_F6DC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    uint64_t v13 = *(int *)(v6 + 28);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_F6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)((char *)a2 + v17);
  *(_OWORD *)(v18 + 8) = *(_OWORD *)((char *)a2 + v17 + 8);
  *(_OWORD *)(v18 + 24) = *(_OWORD *)((char *)a2 + v17 + 24);
  uint64_t v20 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v21 = v20[7];
  uint64_t v22 = &v18[v21];
  uint64_t v23 = &v19[v21];
  uint64_t v24 = sub_F6DC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = v20[8];
  uint64_t v26 = &v18[v25];
  uint64_t v27 = &v19[v25];
  uint64_t v28 = sub_F6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  v18[v20[9]] = v19[v20[9]];
  uint64_t v29 = v20[10];
  uint64_t v30 = &v18[v29];
  uint64_t v31 = &v19[v29];
  v30[8] = v31[8];
  *(void *)uint64_t v30 = *(void *)v31;
  return a1;
}

uint64_t assignWithTake for RCSFile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RCSFile.ThumbnailInformation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRelease();
      uint64_t v37 = *(int *)(v6 + 24);
      uint64_t v38 = a1 + v37;
      uint64_t v39 = a2 + v37;
      uint64_t v40 = sub_F6DC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
      uint64_t v41 = *(int *)(v6 + 28);
      uint64_t v42 = a1 + v41;
      uint64_t v43 = a2 + v41;
      uint64_t v44 = sub_F6EE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
      goto LABEL_7;
    }
    sub_D4190(a1, type metadata accessor for RCSFile.ThumbnailInformation);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v19 = sub_551C(&qword_1283F0);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v11 = *(int *)(v6 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = *(int *)(v6 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)(a2 + v20);
  *(void *)(v21 + 16) = *(void *)(a2 + v20 + 16);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v22 + 32);
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  *(void *)(v21 + 32) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = (int *)type metadata accessor for RCSFile.DispositionInformation(0);
  uint64_t v25 = v24[7];
  uint64_t v26 = v21 + v25;
  uint64_t v27 = v22 + v25;
  uint64_t v28 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = v24[8];
  uint64_t v30 = v21 + v29;
  uint64_t v31 = v22 + v29;
  uint64_t v32 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  *(unsigned char *)(v21 + v24[9]) = *(unsigned char *)(v22 + v24[9]);
  uint64_t v33 = v24[10];
  uint64_t v34 = v21 + v33;
  uint64_t v35 = v22 + v33;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSFile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D69F0);
}

uint64_t sub_D69F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_551C(&qword_1283F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for RCSFile.DispositionInformation(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for RCSFile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D6B00);
}

uint64_t sub_D6B00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_551C(&qword_1283F0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for RCSFile.DispositionInformation(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_D6C08()
{
  sub_D6CD0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for RCSFile.DispositionInformation(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_D6CD0()
{
  if (!qword_12A830)
  {
    type metadata accessor for RCSFile.ThumbnailInformation(255);
    unint64_t v0 = sub_F7770();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_12A830);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RCSFile.ThumbnailInformation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_F6DC0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_F6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t destroy for RCSFile.ThumbnailInformation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_F6EE0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for RCSFile.ThumbnailInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_F6DC0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *assignWithCopy for RCSFile.ThumbnailInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_F6DC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_F6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for RCSFile.ThumbnailInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for RCSFile.ThumbnailInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSFile.ThumbnailInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D72F0);
}

uint64_t sub_D72F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_F6DC0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_F6EE0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for RCSFile.ThumbnailInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D7430);
}

uint64_t sub_D7430(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_F6DC0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_F6EE0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_D755C()
{
  uint64_t result = sub_F6DC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_F6EE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RCSFile.Disposition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD7708);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSFile.Disposition()
{
  return &type metadata for RCSFile.Disposition;
}

void *initializeBufferWithCopyOfBuffer for RCSFile.DispositionInformation(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_F6DC0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_F6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
  }
  return v4;
}

uint64_t destroy for RCSFile.DispositionInformation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_F6EE0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for RCSFile.DispositionInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_F6DC0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

void *assignWithCopy for RCSFile.DispositionInformation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_F6DC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_F6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v14 = a3[10];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v17;
  return a1;
}

uint64_t initializeWithTake for RCSFile.DispositionInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  return a1;
}

uint64_t assignWithTake for RCSFile.DispositionInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_F6DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSFile.DispositionInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D7E20);
}

uint64_t sub_D7E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_F6DC0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_F6EE0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for RCSFile.DispositionInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D7F60);
}

uint64_t sub_D7F60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_F6DC0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_F6EE0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_D808C()
{
  uint64_t result = sub_F6DC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_F6EE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RCSFile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD8250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSFile.CodingKeys()
{
  return &type metadata for RCSFile.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RCSFile.DispositionInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RCSFile.DispositionInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD83E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSFile.DispositionInformation.CodingKeys()
{
  return &type metadata for RCSFile.DispositionInformation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RCSFile.ThumbnailInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RCSFile.ThumbnailInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD8578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSFile.ThumbnailInformation.CodingKeys()
{
  return &type metadata for RCSFile.ThumbnailInformation.CodingKeys;
}

unint64_t sub_D85B4()
{
  unint64_t result = qword_12A9A0;
  if (!qword_12A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9A0);
  }
  return result;
}

unint64_t sub_D860C()
{
  unint64_t result = qword_12A9A8;
  if (!qword_12A9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9A8);
  }
  return result;
}

unint64_t sub_D8664()
{
  unint64_t result = qword_12A9B0;
  if (!qword_12A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9B0);
  }
  return result;
}

unint64_t sub_D86BC()
{
  unint64_t result = qword_12A9B8;
  if (!qword_12A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9B8);
  }
  return result;
}

unint64_t sub_D8714()
{
  unint64_t result = qword_12A9C0;
  if (!qword_12A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9C0);
  }
  return result;
}

unint64_t sub_D876C()
{
  unint64_t result = qword_12A9C8;
  if (!qword_12A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9C8);
  }
  return result;
}

unint64_t sub_D87C4()
{
  unint64_t result = qword_12A9D0;
  if (!qword_12A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9D0);
  }
  return result;
}

unint64_t sub_D881C()
{
  unint64_t result = qword_12A9D8;
  if (!qword_12A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9D8);
  }
  return result;
}

unint64_t sub_D8874()
{
  unint64_t result = qword_12A9E0;
  if (!qword_12A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9E0);
  }
  return result;
}

uint64_t sub_D88C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657A6953656C6966 && a2 == 0xEF73657479426E49;
  if (v2 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C725561746164 && a2 == 0xE700000000000000 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E5564696C6176 && a2 == 0xEA00000000006C69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_F7B60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_D8ACC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657A6953656C6966 && a2 == 0xEF73657479426E49;
  if (v2 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000104A50 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65707954656D696DLL && a2 == 0xE800000000000000 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C725561746164 && a2 == 0xE700000000000000 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E5564696C6176 && a2 == 0xEA00000000006C69 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7469736F70736964 && a2 == 0xEB000000006E6F69 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E654C656D6974 && a2 == 0xEA00000000006874)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_F7B60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_D8DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69616E626D756874 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_F7B60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469736F70736964 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_F7B60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_D8F10()
{
  unint64_t result = qword_12A9E8;
  if (!qword_12A9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12A9E8);
  }
  return result;
}

uint64_t sub_D8F6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_F7B60();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_F7B60() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_D9034(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 80) = a4;
  *(void *)(v5 + 88) = v4;
  *(unsigned char *)(v5 + 296) = a2;
  *(void *)(v5 + 64) = a1;
  *(void *)(v5 + 72) = a3;
  *(void *)(v5 + 96) = *v4;
  uint64_t v6 = sub_F70F0();
  *(void *)(v5 + 104) = v6;
  *(void *)(v5 + 112) = *(void *)(v6 - 8);
  *(void *)(v5 + 120) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for RCSFile(0);
  *(void *)(v5 + 128) = v7;
  *(void *)(v5 + 136) = *(void *)(v7 - 8);
  *(void *)(v5 + 144) = swift_task_alloc();
  sub_551C(&qword_12AA00);
  *(void *)(v5 + 152) = swift_task_alloc();
  uint64_t v8 = sub_551C(&qword_12AA08);
  *(void *)(v5 + 160) = v8;
  *(void *)(v5 + 168) = *(void *)(v8 - 8);
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = swift_task_alloc();
  *(void *)(v5 + 192) = swift_task_alloc();
  return _swift_task_switch(sub_D922C, 0, 0);
}

uint64_t sub_D922C()
{
  unint64_t v1 = (void *)v0[9];
  if (v1[2])
  {
    uint64_t v2 = v0[12];
    v0[25] = v1[4];
    v0[26] = v1[5];
    v0[27] = swift_unknownObjectUnownedLoadStrong();
    uint64_t v3 = *(void *)(v2 + 88);
    v0[28] = v3;
    v0[29] = *(void *)(v3 + 32);
    v0[30] = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0xDA16000000000000;
    uint64_t v4 = qword_1290D8;
    swift_bridgeObjectRetain();
    if (v4 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v5 = static RCSActor.shared;
  return _swift_task_switch(sub_D9310, v5, 0);
}

uint64_t sub_D9310()
{
  unint64_t v1 = (uint64_t (*)(uint64_t))v0[29];
  uint64_t v2 = v0[10];
  v0[31] = *(void *)(v0[12] + 80);
  uint64_t v3 = v1(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v8;
  v0[5] = v6;
  swift_unknownObjectRelease();
  v0[32] = v5;
  v0[33] = v7;
  return _swift_task_switch(sub_D93B0, 0, 0);
}

uint64_t sub_D93B0()
{
  uint64_t v1 = *(void *)(v0 + 264);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
  }
  *(void *)(v0 + 272) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_D9490;
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 152);
  char v7 = *(unsigned char *)(v0 + 296);
  return sub_D9B50(v6, v4, v5, v7, v2, v1);
}

uint64_t sub_D9490()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_D9AA4;
  }
  else
  {
    uint64_t v2 = sub_D95D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_D95D4()
{
  uint64_t v41 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[19];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[21] + 48))(v2, 1, v1) == 1)
  {
    uint64_t v3 = v0[15];
    sub_1E944(v2, &qword_12AA00);
    sub_A5F64(v3);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_F70D0();
    os_log_type_t v5 = sub_F7670();
    BOOL v6 = os_log_type_enabled(v4, v5);
    unint64_t v7 = v0[26];
    if (v6)
    {
      uint64_t v8 = v0[14];
      uint64_t v39 = v0[15];
      uint64_t v37 = v0[25];
      uint64_t v38 = v0[13];
      uint64_t v9 = swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446466;
      v0[6] = sub_A3FC(0xD000000000000046, 0x8000000000104A70, v40);
      sub_F77B0();
      *(_WORD *)(v9 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[7] = sub_A3FC(v37, v7, v40);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v4, v5, "%{public}s Failed to upload or generate RCSFile for %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v39, v38);
    }
    else
    {
      uint64_t v18 = v0[14];
      uint64_t v17 = v0[15];
      uint64_t v19 = v0[13];
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    uint64_t v21 = v0[25];
    uint64_t v20 = v0[26];
    type metadata accessor for RCSMessageCreator.MessageCreationError();
    swift_getWitnessTable();
    swift_allocError();
    *(void *)uint64_t v22 = v21;
    *(void *)(v22 + 8) = v20;
    *(_OWORD *)(v22 + 16) = xmmword_FC310;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v24 = 0;
    goto LABEL_13;
  }
  uint64_t v11 = v0[23];
  uint64_t v10 = v0[24];
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(v1 + 48);
  sub_DBD84(v2, v10);
  int v13 = *(unsigned __int8 *)(v2 + v12);
  *(unsigned char *)(v10 + v12) = v13;
  uint64_t v14 = *(int *)(v1 + 48);
  sub_2C4C0(v10, v11, &qword_12AA18);
  *(unsigned char *)(v11 + v14) = v13;
  sub_1E944(v11, &qword_12AA18);
  uint64_t v15 = v0[24];
  if (v13 == 1)
  {
    uint64_t v16 = (uint64_t *)&unk_12AA08;
  }
  else
  {
    uint64_t v25 = v0[22];
    uint64_t v26 = v0[16];
    uint64_t v27 = v0[17];
    uint64_t v28 = *(int *)(v1 + 48);
    sub_DBD84(v15, v25);
    *(unsigned char *)(v25 + v28) = v13;
    int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
    uint64_t v15 = v0[22];
    if (v29 != 1)
    {
      uint64_t v31 = v0[18];
      uint64_t v32 = v0[8];
      sub_DBDEC(v15, v31);
      uint64_t v33 = v32 + *(int *)(type metadata accessor for RCSMessage(0) + 28);
      sub_1E944(v33, (uint64_t *)&unk_128170);
      uint64_t v34 = *(int *)(sub_551C(&qword_128218) + 48);
      sub_DBDEC(v31, v33);
      *(void *)(v33 + v34) = 0;
      uint64_t v35 = type metadata accessor for RCSMessage.Content(0);
      uint64_t v30 = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 0, 1, v35);
      goto LABEL_12;
    }
    uint64_t v16 = &qword_12AA18;
  }
  sub_1E944(v15, v16);
  uint64_t v30 = 0;
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v24 = v30;
LABEL_13:
  return v23(v24);
}

uint64_t sub_D9AA4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_D9B50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 192) = a6;
  *(void *)(v7 + 200) = v6;
  *(unsigned char *)(v7 + 416) = a4;
  *(void *)(v7 + 176) = a3;
  *(void *)(v7 + 184) = a5;
  *(void *)(v7 + 160) = a1;
  *(void *)(v7 + 168) = a2;
  *(void *)(v7 + 208) = *v6;
  sub_551C(&qword_12AA18);
  *(void *)(v7 + 216) = swift_task_alloc();
  uint64_t v8 = sub_F70F0();
  *(void *)(v7 + 224) = v8;
  *(void *)(v7 + 232) = *(void *)(v8 - 8);
  *(void *)(v7 + 240) = swift_task_alloc();
  *(void *)(v7 + 248) = swift_task_alloc();
  *(void *)(v7 + 256) = swift_task_alloc();
  *(void *)(v7 + 264) = swift_task_alloc();
  return _swift_task_switch(sub_D9C9C, 0, 0);
}

uint64_t sub_D9C9C()
{
  uint64_t v1 = v0[26];
  v0[34] = swift_unknownObjectUnownedLoadStrong();
  uint64_t v2 = *(void *)(v1 + 88);
  v0[35] = v2;
  v0[36] = *(void *)(v2 + 56);
  v0[37] = (v2 + 56) & 0xFFFFFFFFFFFFLL | 0x9BEB000000000000;
  sub_F74E0();
  v0[38] = sub_F74D0();
  uint64_t v4 = sub_F7470();
  return _swift_task_switch(sub_D9D54, v4, v3);
}

uint64_t sub_D9D54()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  swift_release();
  v0[39] = *(void *)(v2 + 80);
  v0[40] = v1(v4, v3);
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_D9E08, 0, 0);
}

uint64_t sub_D9E08()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 320);
  if (v1)
  {
    uint64_t v23 = *(void *)(v0 + 280);
    *(void *)(v0 + 328) = swift_unknownObjectUnownedLoadStrong();
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 64)
                                                                                       + **(int **)(v23 + 64));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_DA164;
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 192);
    uint64_t v7 = *(unsigned __int8 *)(v0 + 416);
    return v21(v1, v5, v6, v7, v3, v4);
  }
  else
  {
    sub_A5F64(*(void *)(v0 + 240));
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_F70D0();
    os_log_type_t v10 = sub_F7690();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 224);
    unint64_t v15 = *(void *)(v0 + 176);
    if (v11)
    {
      uint64_t v16 = *(void *)(v0 + 168);
      uint64_t v22 = *(void *)(v0 + 240);
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 136) = sub_A3FC(v16, v15, &v24);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v9, v10, "Couldn't find transfer to upload to RCS server for guid %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v22, v14);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    }
    uint64_t v18 = *(void *)(v0 + 160);
    uint64_t v19 = sub_551C(&qword_12AA08);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_DA164(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 344) = a1;
  *(void *)(v3 + 352) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_DB3B4;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v4 = sub_DA280;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_DA280()
{
  uint64_t v61 = v0;
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = sub_F6DC0();
  *(void *)(v0 + 360) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)(v0 + 368) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 376) = v4;
  sub_551C(&qword_128300);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = v5;
  unint64_t v7 = *(void *)(v1 + 16);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v5, 1, 1, v2);
    goto LABEL_6;
  }
  os_log_t log = (os_log_t)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  char v52 = *(void (**)(uint64_t))(v3 + 16);
  v52(v5);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v56(v6, 0, 1, v2);
  type = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (type(v6, 1, v2) == 1)
  {
LABEL_6:
    uint64_t v14 = *(void *)(v0 + 248);
    swift_bridgeObjectRelease();
    sub_1E944(v6, &qword_128300);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_A5F64(v14);
    swift_bridgeObjectRetain_n();
    unint64_t v15 = sub_F70D0();
    os_log_type_t v16 = sub_F7670();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void **)(v0 + 320);
    uint64_t v19 = *(void *)(v0 + 248);
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v20 = *(void *)(v0 + 232);
    unint64_t v22 = *(void *)(v0 + 176);
    if (v17)
    {
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v58 = *(void *)(v0 + 224);
      uint64_t v24 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446466;
      *(void *)(v0 + 104) = sub_A3FC(0xD00000000000003ELL, 0x8000000000104AC0, &v60);
      sub_F77B0();
      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 96) = sub_A3FC(v23, v22, &v60);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v15, v16, "%{public}s Failed to transcode %s, upload failed", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v58);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }
    uint64_t v25 = *(void *)(v0 + 160);
    uint64_t v26 = sub_551C(&qword_12AA08);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
    goto LABEL_10;
  }
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v49(v4, v6, v2);
  swift_task_dealloc();
  uint64_t v50 = v4;
  sub_F6D60();
  v63._object = (void *)0x8000000000104B00;
  v63._countAndFlagsBits = 0xD000000000000018;
  BOOL v8 = sub_F7350(v63);
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v9 = *(void **)(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);

    swift_bridgeObjectRelease();
    uint64_t v11 = sub_551C(&qword_12AA08);
    uint64_t v12 = *(int *)(v11 + 48);
    uint64_t v13 = type metadata accessor for RCSFile(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    *(unsigned char *)(v10 + v12) = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
    swift_task_dealloc();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  uint64_t result = swift_task_alloc();
  uint64_t v29 = result;
  *(void *)(v0 + 384) = result;
  unint64_t v30 = *(void *)(v1 + 16);
  if (v30 < 2)
  {
    swift_bridgeObjectRelease();
    v56(v29, 1, 1, v2);
  }
  else
  {
    if (v7 > v30)
    {
      __break(1u);
      return result;
    }
    ((void (*)(uint64_t, char *, uint64_t))v52)(result, (char *)log + *(void *)(v3 + 72) * (v7 - 1), v2);
    v56(v29, 0, 1, v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = swift_task_alloc();
  uint64_t v32 = swift_task_alloc();
  sub_2C4C0(v29, v32, &qword_128300);
  if (type(v32, 1, v2) == 1)
  {
    sub_1E944(v32, &qword_128300);
    swift_task_dealloc();
  }
  else
  {
    v49(v31, v32, v2);
    swift_task_dealloc();
    if (sub_DB460())
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v2);
    }
    else
    {
      sub_A5F64(*(void *)(v0 + 264));
      uint64_t v33 = swift_task_alloc();
      ((void (*)(uint64_t, uint64_t, uint64_t))v52)(v33, v4, v2);
      uint64_t v34 = sub_F70D0();
      os_log_type_t typea = sub_F7690();
      BOOL v35 = os_log_type_enabled(v34, typea);
      uint64_t v55 = *(void *)(v0 + 264);
      uint64_t v36 = *(void *)(v0 + 224);
      uint64_t v37 = *(void *)(v0 + 232);
      if (v35)
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 136315138;
        sub_50D40();
        uint64_t v39 = sub_F7B20();
        *(void *)(v0 + 152) = sub_A3FC(v39, v40, &v60);
        sub_F77B0();
        swift_bridgeObjectRelease();
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
        v41(v33, v2);
        _os_log_impl(&dword_0, v34, typea, "Couldn't generate valid thumbnail for %s, omitting", v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v55, v36);
        v41(v31, v2);
        sub_1E944(v29, &qword_128300);
        swift_task_dealloc();
      }
      else
      {

        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
        v42(v33, v2);
        swift_task_dealloc();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v55, v36);
        v42(v31, v2);
        sub_1E944(v29, &qword_128300);
      }
      v56(v29, 1, 1, v2);
    }
  }
  uint64_t v59 = *(void *)(v0 + 280);
  swift_task_dealloc();
  *(void *)(v0 + 392) = swift_unknownObjectUnownedLoadStrong();
  uint64_t v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 + 72) + **(int **)(v59 + 72));
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_DACB8;
  uint64_t v44 = *(void *)(v0 + 312);
  uint64_t v45 = *(void *)(v0 + 280);
  uint64_t v46 = *(void *)(v0 + 192);
  uint64_t v47 = *(unsigned __int8 *)(v0 + 416);
  uint64_t v48 = *(void *)(v0 + 184);
  return v57(v48, v46, v50, v29, v47, 0, v44, v45);
}

uint64_t sub_DACB8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 408) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_DADD8, 0, 0);
}

uint64_t sub_DADD8()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 408);
  if (*(void *)(v1 + 16)
    && (unint64_t v2 = sub_1C9BC(0x746C75736572, 0xE600000000000000), (v3 & 1) != 0)
    && (sub_BAD8(*(void *)(*(void *)(v0 + 408) + 56) + 32 * v2, v0 + 48),
        sub_551C(&qword_128730),
        (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v5 = *(void *)(v0 + 376);
    uint64_t v4 = *(void *)(v0 + 384);
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v7 = *(void *)(v0 + 368);
    BOOL v8 = *(void **)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 216);
    int v10 = *(unsigned __int8 *)(v0 + 416);
    uint64_t v11 = *(void *)(v0 + 160);
    swift_bridgeObjectRelease();
    sub_D4398(*(void *)(v0 + 144), v10, v9);

    sub_1E944(v4, &qword_128300);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    uint64_t v12 = sub_551C(&qword_12AA08);
    uint64_t v13 = *(int *)(v12 + 48);
    sub_DBD84(v9, v11);
    *(unsigned char *)(v11 + v13) = 0;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    if (*(void *)(v1 + 16) && (unint64_t v14 = sub_1C9BC(0x73654D726F727265, 0xEC00000065676173), (v15 & 1) != 0))
    {
      sub_BAD8(*(void *)(*(void *)(v0 + 408) + 56) + 32 * v14, v0 + 16);
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 40))
    {
      int v16 = swift_dynamicCast();
      uint64_t v17 = *(void *)(v0 + 80);
      if (!v16) {
        uint64_t v17 = 0;
      }
      uint64_t v45 = v17;
      if (v16) {
        unint64_t v18 = *(void *)(v0 + 88);
      }
      else {
        unint64_t v18 = 0;
      }
    }
    else
    {
      sub_1E944(v0 + 16, &qword_127FF8);
      uint64_t v45 = 0;
      unint64_t v18 = 0;
    }
    sub_A5F64(*(void *)(v0 + 256));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_F70D0();
    os_log_type_t v20 = sub_F7670();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 384);
    uint64_t v46 = *(void *)(v0 + 376);
    uint64_t v23 = *(void *)(v0 + 360);
    uint64_t v24 = *(void **)(v0 + 320);
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v26 = *(void *)(v0 + 232);
    unint64_t v27 = *(void *)(v0 + 176);
    if (v21)
    {
      uint64_t v44 = *(void *)(v0 + 360);
      uint64_t v38 = *(void *)(v0 + 168);
      uint64_t v41 = *(void *)(v0 + 256);
      uint64_t v42 = *(void *)(v0 + 224);
      uint64_t v39 = *(void *)(v0 + 368);
      unint64_t v40 = *(void **)(v0 + 320);
      uint64_t v43 = *(void *)(v0 + 384);
      uint64_t v28 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446722;
      *(void *)(v0 + 112) = sub_A3FC(0xD00000000000003ELL, 0x8000000000104AC0, &v47);
      sub_F77B0();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 120) = sub_A3FC(v38, v27, &v47);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 22) = 2080;
      if (v18) {
        uint64_t v29 = v45;
      }
      else {
        uint64_t v29 = 0x206E776F6E6B6E75;
      }
      if (v18) {
        unint64_t v30 = v18;
      }
      else {
        unint64_t v30 = 0xED0000726F727265;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 128) = sub_A3FC(v29, v30, &v47);
      sub_F77B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v19, v20, "%{public}s Failed to upload RCSFile for %s %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v41, v42);
      sub_1E944(v43, &qword_128300);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v46, v44);
    }
    else
    {
      uint64_t v31 = *(void *)(v0 + 256);
      uint64_t v32 = v19;
      uint64_t v33 = *(void *)(v0 + 368);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v31, v25);
      sub_1E944(v22, &qword_128300);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v46, v23);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(void *)(v0 + 160);
    uint64_t v35 = sub_551C(&qword_12AA08);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_DB3B4()
{
  uint64_t v1 = *(void **)(v0 + 320);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_DB460()
{
  uint64_t v1 = sub_F70F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  BOOL v8 = (char *)&v55 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v55 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v55 - v12;
  if ((sub_F6D40() & 1) == 0) {
    return 0;
  }
  uint64_t v55 = v8;
  uint64_t v56 = v0;
  uint64_t v57 = v1;
  uint64_t v58 = v2;
  uint64_t v14 = sub_F6D90();
  unint64_t v16 = v15;
  uint64_t v17 = (void *)sub_F71F0();
  id v18 = [v17 pathExtension];

  uint64_t v19 = sub_F7220();
  unint64_t v21 = v20;

  uint64_t v22 = sub_F7280();
  char v24 = sub_D8F6C(v22, v23, &off_11F028);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_A5F64((uint64_t)v13);
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_F70D0();
    os_log_type_t v39 = sub_F7690();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v60 = swift_slowAlloc();
      *(_DWORD *)unint64_t v40 = 136315138;
      swift_bridgeObjectRetain();
      unint64_t v59 = sub_A3FC(v19, v21, (uint64_t *)&v60);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v38, v39, "Wrong type for thumbnail %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v57);
    return 0;
  }
  swift_bridgeObjectRelease();
  id v25 = [self defaultManager];
  uint64_t v26 = (void *)sub_F71F0();
  unsigned int v27 = [v25 fileExistsAtPath:v26];

  unint64_t v28 = v16;
  if (!v27)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  uint64_t v29 = (void *)sub_F71F0();
  *(void *)&long long v60 = 0;
  id v30 = [v25 attributesOfItemAtPath:v29 error:&v60];

  uint64_t v31 = (void *)v60;
  if (!v30)
  {
    id v42 = (id)v60;
    sub_F6D30();

    swift_willThrow();
    sub_A5F64((uint64_t)v5);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v43 = sub_F70D0();
    os_log_type_t v44 = sub_F7690();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(void *)&long long v60 = v56;
      *(_DWORD *)uint64_t v45 = 136315394;
      swift_bridgeObjectRetain();
      unint64_t v59 = sub_A3FC(v14, v28, (uint64_t *)&v60);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2112;
      swift_errorRetain();
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
      unint64_t v59 = v47;
      sub_F77B0();
      void *v46 = v47;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v43, v44, "Failed to get attributes of %s: %@", (uint8_t *)v45, 0x16u);
      sub_551C(&qword_128C10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v5, v57);
    return 0;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_DBE50();
  uint64_t v32 = sub_F71B0();
  id v33 = v31;

  if (*(void *)(v32 + 16))
  {
    uint64_t v34 = NSFileSize;
    uint64_t v35 = sub_9D5A8();
    uint64_t v36 = (uint64_t)v55;
    if (v37)
    {
      sub_BAD8(*(void *)(v32 + 56) + 32 * v35, (uint64_t)&v60);
    }
    else
    {
      long long v60 = 0u;
      long long v61 = 0u;
    }
  }
  else
  {
    long long v60 = 0u;
    long long v61 = 0u;
    uint64_t v36 = (uint64_t)v55;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v61 + 1))
  {
    sub_1E944((uint64_t)&v60, &qword_127FF8);
    goto LABEL_27;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    sub_A5F64(v36);
    swift_bridgeObjectRetain();
    char v52 = sub_F70D0();
    os_log_type_t v53 = sub_F7690();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v60 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315138;
      swift_bridgeObjectRetain();
      unint64_t v59 = sub_A3FC(v14, v16, (uint64_t *)&v60);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v52, v53, "Couldn't find file size for %s", v54, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v36, v57);
    return 0;
  }
  swift_bridgeObjectRelease();
  unint64_t v48 = v59;
  if (v59 <= 0x2800)
  {

    return 1;
  }
  sub_A5F64((uint64_t)v11);
  uint64_t v49 = sub_F70D0();
  os_log_type_t v50 = sub_F7690();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 134218240;
    *(void *)&long long v60 = v48;
    sub_F77B0();
    *(_WORD *)(v51 + 12) = 2048;
    *(void *)&long long v60 = 10240;
    sub_F77B0();
    _os_log_impl(&dword_0, v49, v50, "Too large for thumbnail %llu > %ld", (uint8_t *)v51, 0x16u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v57);
  return 0;
}

uint64_t sub_DBD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_12AA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_DBDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RCSFile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_DBE50()
{
  unint64_t result = qword_1296B0;
  if (!qword_1296B0)
  {
    type metadata accessor for FileAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1296B0);
  }
  return result;
}

uint64_t sub_DBEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  sub_551C((uint64_t *)&unk_128000);
  v4[7] = swift_task_alloc();
  return _swift_task_switch(sub_DBF3C, 0, 0);
}

uint64_t sub_DBF3C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_DC00C, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_DC00C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = v2 + OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_priority;
  uint64_t v4 = sub_F7520();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v6;
  uint64_t v8 = sub_DC3EC(v1, (uint64_t)&unk_12AB50, (uint64_t)v7);
  sub_B8D0(v1);
  *(void *)(v2 + OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_task) = v8;
  swift_release();
  swift_release();
  return _swift_task_switch(sub_DC190, 0, 0);
}

uint64_t sub_DC190()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 64) == 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_DC200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_DDD04(a1, (uint64_t)v8);
  uint64_t v9 = sub_F7520();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_B8D0((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_F7470();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_F7510();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  sub_551C(&qword_12AB40);
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_DC3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_DDD04(a1, (uint64_t)v8);
  uint64_t v9 = sub_F7520();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_B8D0((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_F7470();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_F7510();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_DC5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[20] = a4;
  uint64_t v5 = sub_F7950();
  v4[21] = v5;
  v4[22] = *(void *)(v5 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  uint64_t v6 = sub_F7970();
  v4[25] = v6;
  v4[26] = *(void *)(v6 - 8);
  v4[27] = swift_task_alloc();
  return _swift_task_switch(sub_DC6FC, 0, 0);
}

uint64_t sub_DC6FC()
{
  if ((sub_F75D0() & 1) != 0
    || (swift_beginAccess(), uint64_t Strong = swift_weakLoadStrong(), (*(void *)(v0 + 224) = Strong) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    return _swift_task_switch(sub_DC7DC, Strong, 0);
  }
}

uint64_t sub_DC7DC()
{
  uint64_t v1 = sub_F7C90();
  uint64_t v3 = v2;
  sub_F7960();
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  *(unsigned char *)(v0 + 128) = 1;
  return _swift_task_switch(sub_DC878, 0, 0);
}

uint64_t sub_DC878()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v4 = sub_DE1B4(&qword_12AB58, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_F7BB0();
  sub_DE1B4(&qword_12AB60, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_F7980();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[29] = v5;
  v0[30] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[31] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_DCA0C;
  uint64_t v8 = v0[24];
  uint64_t v7 = v0[25];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 14, v7, v4);
}

uint64_t sub_DCA0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 232))(*(void *)(v2 + 192), *(void *)(v2 + 168));
    uint64_t v3 = sub_DCCAC;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 216);
    uint64_t v5 = *(void *)(v2 + 224);
    uint64_t v7 = *(void *)(v2 + 200);
    uint64_t v8 = *(void *)(v2 + 208);
    (*(void (**)(void, void))(v2 + 232))(*(void *)(v2 + 192), *(void *)(v2 + 168));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    uint64_t v3 = sub_DCB78;
    uint64_t v4 = v5;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_DCB78()
{
  *(unsigned char *)(v0 + 129) = sub_F75D0() & 1;
  return _swift_task_switch(sub_DCBE4, 0, 0);
}

uint64_t sub_DCBE4()
{
  uint64_t v1 = *(void *)(v0 + 224);
  if (*(unsigned char *)(v0 + 129))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    *(void *)(v0 + 264) = OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_block;
    return _swift_task_switch(sub_DD288, v1, 0);
  }
}

uint64_t sub_DCCAC()
{
  uint64_t v1 = v0[28];
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  return _swift_task_switch(sub_DCD24, v1, 0);
}

uint64_t sub_DCD24()
{
  return _swift_task_switch(sub_DCD40, 0, 0);
}

uint64_t sub_DCD40()
{
  swift_release();
  sub_9F5EC();
  uint64_t v1 = sub_F7120();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v1);
  uint64_t v22 = (void *)sub_F7730();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  uint64_t v20 = sub_F7180();
  uint64_t v4 = *(void *)(v20 - 8);
  uint64_t v18 = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  sub_F7160();
  uint64_t v6 = sub_F7100();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = (void *)swift_task_alloc();
  *uint64_t v8 = 5;
  (*(void (**)(void))(v7 + 104))();
  sub_F7170();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v8, v6);
  unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v21(v5, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v0[6] = sub_DE1FC;
  v0[7] = v9;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_552C4;
  v0[5] = &unk_121C88;
  uint64_t v10 = _Block_copy(v0 + 2);
  uint64_t v19 = sub_F7150();
  uint64_t v11 = *(void *)(v19 - 8);
  uint64_t v12 = swift_task_alloc();
  swift_retain();
  sub_F7130();
  uint64_t v13 = sub_F7110();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = swift_task_alloc();
  v0[19] = _swiftEmptyArrayStorage;
  sub_1ECF8();
  sub_551C(&qword_128158);
  sub_1ED44();
  sub_F7810();
  sub_F76E0();
  _Block_release(v10);

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v19);
  v21(v18, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_DD288()
{
  uint64_t v1 = (void *)(v0[28] + v0[33]);
  uint64_t v4 = (uint64_t (*)(void))(*v1 + *(int *)*v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[34] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_DD35C;
  return v4();
}

uint64_t sub_DD35C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_DD458, 0, 0);
}

uint64_t sub_DD458()
{
  swift_release();
  if ((sub_F75D0() & 1) != 0 || (uint64_t Strong = swift_weakLoadStrong(), (*(void *)(v0 + 224) = Strong) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    return _swift_task_switch(sub_DC7DC, Strong, 0);
  }
}

uint64_t sub_DD528()
{
  uint64_t v0 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_F7500();
    uint64_t v4 = sub_F7520();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 0, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    uint64_t v6 = (void *)swift_allocObject();
    _OWORD v6[2] = 0;
    v6[3] = 0;
    v6[4] = v5;
    sub_DC200((uint64_t)v2, (uint64_t)&unk_12AB68, (uint64_t)v6);
    swift_release();
    sub_B8D0((uint64_t)v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_DD684()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_priority;
  uint64_t v2 = sub_F7520();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_DD724()
{
  return type metadata accessor for AsyncPersistentTimer();
}

uint64_t type metadata accessor for AsyncPersistentTimer()
{
  uint64_t result = qword_12AA48;
  if (!qword_12AA48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_DD778()
{
  uint64_t result = sub_F7520();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_DD838(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_DD918;
  return v5(v2 + 32);
}

uint64_t sub_DD918()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_DDA2C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = sub_551C((uint64_t *)&unk_128000);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(void *)(v4 + OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_task) = 0;
  uint64_t v12 = v4 + OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_priority;
  uint64_t v13 = sub_F7520();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  *(double *)(v4 + OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_interval) = a4;
  uint64_t v15 = (void *)(v4 + OBJC_IVAR____TtC7CoreRCS20AsyncPersistentTimer_block);
  *uint64_t v15 = a2;
  v15[1] = a3;
  swift_retain();
  sub_F7500();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v16;
  sub_DC200((uint64_t)v11, (uint64_t)&unk_12AB28, (uint64_t)v17);
  swift_release();
  sub_B8D0((uint64_t)v11);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v4;
}

uint64_t sub_DDC14()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_DDC50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_DE31C;
  return sub_DBEA8(a1, v4, v5, v6);
}

uint64_t sub_DDD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C((uint64_t *)&unk_128000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_DDD6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DDDA4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_DDE5C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_12AB30 + dword_12AB30);
  return v6(a1, v4);
}

uint64_t sub_DDE5C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_DDF54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_DE008;
  return sub_DC5D0(a1, v4, v5, v6);
}

uint64_t sub_DE008()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_DE0FC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_DE314;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_127CE8 + dword_127CE8);
  return v6(a1, v4);
}

uint64_t sub_DE1B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_DE1FC()
{
  return sub_DD528();
}

uint64_t sub_DE204(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_DE214()
{
  return swift_release();
}

uint64_t sub_DE220()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_DE260(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_DE320;
  return sub_DBEA8(a1, v4, v5, v6);
}

void *sub_DE324(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_86D58(0, v1, 0);
  uint64_t result = (void *)sub_E12E8(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  uint64_t v23 = a1 + 64;
  int v22 = v4;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
    uint64_t v12 = v11[1];
    uint64_t v24 = *v11;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      uint64_t result = (void *)sub_86D58(v13 > 1, v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    uint64_t v15 = &_swiftEmptyArrayStorage[4 * v14];
    v15[4] = 0xD000000000000015;
    v15[5] = 0x8000000000103E70;
    v15[6] = v24;
    v15[7] = v12;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

unint64_t RCSMessageMetadata.init(item:)(void *a1)
{
  unint64_t v2 = sub_E9168((uint64_t)_swiftEmptyArrayStorage);

  return v2;
}

Swift::Void __swiftcall RCSMessageMetadata.merge(with:)(CoreRCS::RCSMessageMetadata with)
{
  unint64_t v2 = v1;
  uint64_t v32 = (char *)with.entries._rawValue + 64;
  uint64_t v4 = 1 << *((unsigned char *)with.entries._rawValue + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *((void *)with.entries._rawValue + 8);
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_38;
    }
    if (v11 >= v33) {
      break;
    }
    unint64_t v12 = *(void *)&v32[8 * v11];
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v33) {
        break;
      }
      unint64_t v12 = *(void *)&v32[8 * v7];
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v33) {
          break;
        }
        unint64_t v12 = *(void *)&v32[8 * v7];
        if (!v12)
        {
          int64_t v13 = v11 + 3;
          if (v13 >= v33) {
            break;
          }
          unint64_t v12 = *(void *)&v32[8 * v13];
          if (!v12)
          {
            while (1)
            {
              int64_t v7 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_39;
              }
              if (v7 >= v33) {
                goto LABEL_33;
              }
              unint64_t v12 = *(void *)&v32[8 * v7];
              ++v13;
              if (v12) {
                goto LABEL_21;
              }
            }
          }
          int64_t v7 = v13;
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_22:
    unint64_t v14 = (uint64_t *)(*((void *)with.entries._rawValue + 7) + 16 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v2;
    uint64_t v34 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    unint64_t v20 = sub_9F19C();
    uint64_t v21 = *(void *)(v18 + 16);
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      sub_F7BA0();
      __break(1u);
      return;
    }
    char v24 = v19;
    if (*(void *)(v18 + 24) >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v27 = v34;
        if (v19) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_E0AEC();
        uint64_t v27 = v34;
        if (v24) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_DF608(v23, isUniquelyReferenced_nonNull_native);
      uint64_t v25 = sub_9F19C();
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_40;
      }
      unint64_t v20 = v25;
      uint64_t v27 = v34;
      if (v24)
      {
LABEL_4:
        int64_t v8 = (void *)(*(void *)(v27 + 56) + 16 * v20);
        swift_bridgeObjectRelease();
        *int64_t v8 = v16;
        v8[1] = v15;
        goto LABEL_5;
      }
    }
    *(void *)(v27 + 8 * (v20 >> 6) + 64) |= 1 << v20;
    unint64_t v28 = (void *)(*(void *)(v27 + 56) + 16 * v20);
    *unint64_t v28 = v16;
    v28[1] = v15;
    uint64_t v29 = *(void *)(v27 + 16);
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_37;
    }
    *(void *)(v27 + 16) = v31;
LABEL_5:
    *unint64_t v2 = v27;
    swift_bridgeObjectRelease();
  }
LABEL_33:

  swift_release();
}

uint64_t RCSMessageMetadata.Entry.init(key:value:)(uint64_t a1, void *a2, uint64_t a3)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_11F160;
  v8._object = a2;
  Swift::Int v6 = sub_F7A10(v5, v8);
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return a3;
}

BOOL RCSMessageMetadata.Entry.HeaderKeys.init(rawValue:)(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_11F198;
  v6._object = a2;
  Swift::Int v4 = sub_F7A10(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

Swift::tuple_key_String_value_String __swiftcall RCSMessageMetadata.Entry.toPair()()
{
  unint64_t v2 = v1;
  uint64_t v3 = v0;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0xD000000000000015;
  Swift::OpaquePointer v5 = (void *)0x8000000000103E70;
  uint64_t v6 = v3;
  int64_t v7 = v2;
  result.value._object = v7;
  result.value._countAndFlagsBits = v6;
  result.key._object = v5;
  result.key._countAndFlagsBits = v4;
  return result;
}

unint64_t RCSMessageMetadata.Entry.HeaderKeys.rawValue.getter()
{
  return 0xD000000000000015;
}

Swift::Int sub_DE95C()
{
  return sub_F7C50();
}

uint64_t sub_DE9B4()
{
  return sub_F72C0();
}

Swift::Int sub_DE9D0()
{
  return sub_F7C50();
}

uint64_t sub_DEA24@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_11F1D0;
  v7._object = v3;
  Swift::Int v5 = sub_F7A10(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_DEA78(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000000103E70;
}

uint64_t RCSMessageMetadata.entries.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int64_t v1 = a1;
  return result;
}

uint64_t (*RCSMessageMetadata.entries.modify())()
{
  return nullsub_40;
}

CoreRCS::RCSMessageMetadata __swiftcall RCSMessageMetadata.init(pairs:)(Swift::OpaquePointer pairs)
{
  unint64_t v2 = (void *)sub_E9168((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v3 = *((void *)pairs._rawValue + 2);
  if (!v3)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (CoreRCS::RCSMessageMetadata)v2;
  }
  Swift::OpaquePointer v4 = (uint64_t *)((char *)pairs._rawValue + 56);
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    uint64_t v8 = *(v4 - 3);
    Swift::String v7 = (void *)*(v4 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9._rawValue = &off_11F208;
    v26._countAndFlagsBits = v8;
    v26._object = v7;
    Swift::Int v10 = sub_F7A10(v9, v26);
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_9F19C();
    uint64_t v14 = v2[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v2[3] >= v16)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v12) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_E0AEC();
        if (v17) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_DF608(v16, isUniquelyReferenced_nonNull_native);
      uint64_t v18 = sub_9F19C();
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_19;
      }
      unint64_t v13 = v18;
      if (v17)
      {
LABEL_12:
        unint64_t v20 = (void *)(v2[7] + 16 * v13);
        swift_bridgeObjectRelease();
        *unint64_t v20 = v6;
        v20[1] = v5;
        goto LABEL_3;
      }
    }
    v2[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v21 = (void *)(v2[7] + 16 * v13);
    *uint64_t v21 = v6;
    v21[1] = v5;
    uint64_t v22 = v2[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_18;
    }
    v2[2] = v24;
LABEL_3:
    swift_bridgeObjectRelease();
    v4 += 4;
    if (!--v3) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result.entries._rawValue = (void *)sub_F7BA0();
  __break(1u);
  return result;
}

void *RCSMessageMetadata.toPairs()()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  int64_t v1 = sub_DE324(v0);
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t RCSMessageMetadata.debugDescription.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_DED1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_128140);
  char v37 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    char v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    BOOL v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v17);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_F7C20();
    sub_F72C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_F7C50();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v22;
    BOOL v15 = (void *)(*(void *)(v7 + 56) + 16 * v14);
    *BOOL v15 = v25;
    v15[1] = v24;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  char v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_DF080(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_129DB0);
  char v36 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_F7C20();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_DF398(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_551C(&qword_12AB98);
  char v32 = a2;
  uint64_t v33 = (void *)sub_F79D0();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v30 = (void *)(v4 + 64);
    uint64_t v6 = -1;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v29 = (unint64_t)(v5 + 63) >> 6;
    swift_retain();
    int64_t v8 = 0;
    uint64_t v31 = v4;
    while (1)
    {
      if (v7)
      {
        uint64_t v34 = (v7 - 1) & v7;
        int64_t v35 = v8;
        unint64_t v9 = __clz(__rbit64(v7)) | (v8 << 6);
      }
      else
      {
        int64_t v10 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v10 >= v29) {
          goto LABEL_22;
        }
        unint64_t v11 = v30[v10];
        int64_t v12 = v8 + 1;
        if (!v11)
        {
          int64_t v12 = v8 + 2;
          if (v8 + 2 >= v29) {
            goto LABEL_22;
          }
          unint64_t v11 = v30[v12];
          if (!v11)
          {
            uint64_t v13 = v8 + 3;
            if (v8 + 3 >= v29)
            {
LABEL_22:
              swift_release();
              if (v32)
              {
                uint64_t v27 = 1 << *(unsigned char *)(v4 + 32);
                if (v27 > 63) {
                  bzero(v30, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v27;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v11 = v30[v13];
            if (!v11)
            {
              while (1)
              {
                int64_t v12 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_29;
                }
                if (v12 >= v29) {
                  goto LABEL_22;
                }
                unint64_t v11 = v30[v12];
                ++v13;
                if (v11) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v12 = v8 + 3;
          }
        }
LABEL_19:
        uint64_t v34 = (v11 - 1) & v11;
        int64_t v35 = v12;
        unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
      }
      uint64_t v14 = *(void *)(v4 + 56);
      unint64_t v15 = *(void *)(v4 + 48) + (v9 << 6);
      uint64_t v17 = *(void *)v15;
      uint64_t v16 = *(void *)(v15 + 8);
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = *(void *)(v15 + 24);
      uint64_t v21 = *(void *)(v15 + 32);
      uint64_t v20 = *(void *)(v15 + 40);
      uint64_t v22 = *(void *)(v15 + 48);
      char v23 = *(unsigned char *)(v15 + 56);
      int64_t v24 = (uint64_t *)(v14 + 16 * v9);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v36[0] = v17;
      v36[1] = v16;
      v36[2] = v18;
      v36[3] = v19;
      v36[4] = v21;
      v36[5] = v20;
      v36[6] = v22;
      char v37 = v23;
      sub_E0240((uint64_t)v36, v26, v25, v33);
      uint64_t v4 = v31;
      unint64_t v7 = v34;
      int64_t v8 = v35;
    }
  }
  swift_release();
  *uint64_t v28 = v33;
}

uint64_t sub_DF608(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_12AB90);
  char v36 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v33 = v2;
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    if ((v36 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_F7C20();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
    *uint64_t v18 = v30;
    v18[1] = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_DF91C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_12AB78);
  char v38 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_F7C20();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_DFC2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_551C(&qword_12AB88);
  char v36 = a2;
  uint64_t v6 = sub_F79D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_F7C20();
    sub_F72C0();
    uint64_t result = sub_F7C50();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_DFF44(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TypingIndicator();
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_551C(&qword_12AB80);
  int v41 = a2;
  id v42 = (void *)sub_F79D0();
  if (*(void *)(v8 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v10 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    uint64_t v11 = -1;
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    unint64_t v12 = v11 & v10;
    uint64_t v35 = v2;
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    char v38 = v7;
    uint64_t v39 = v8;
    while (1)
    {
      if (v12)
      {
        unint64_t v15 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }
      else
      {
        int64_t v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        uint64_t v18 = v37;
        if (v17 >= v36) {
          goto LABEL_23;
        }
        unint64_t v19 = v37[v17];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v17 + 1;
          if (v17 + 1 >= v36) {
            goto LABEL_23;
          }
          unint64_t v19 = v37[v14];
          if (!v19)
          {
            int64_t v20 = v17 + 2;
            if (v20 >= v36)
            {
LABEL_23:
              swift_release();
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_30;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v18, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v18 = -1 << v33;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_32;
                }
                if (v14 >= v36) {
                  goto LABEL_23;
                }
                unint64_t v19 = v37[v14];
                ++v20;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v14 = v20;
          }
        }
LABEL_20:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v16 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v8 + 56);
      unint64_t v22 = *(void *)(v8 + 48) + (v16 << 6);
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 16);
      uint64_t v26 = *(void *)(v22 + 24);
      uint64_t v28 = *(void *)(v22 + 32);
      uint64_t v27 = *(void *)(v22 + 40);
      uint64_t v29 = *(void *)(v22 + 48);
      char v30 = *(unsigned char *)(v22 + 56);
      uint64_t v31 = v21 + *(void *)(v40 + 72) * v16;
      int64_t v43 = v14;
      uint64_t v32 = (uint64_t)v38;
      if (v41)
      {
        sub_9F7BC(v31, (uint64_t)v38);
      }
      else
      {
        sub_E15E8(v31, (uint64_t)v38);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v44[0] = v24;
      v44[1] = v23;
      v44[2] = v25;
      v44[3] = v26;
      v44[4] = v28;
      v44[5] = v27;
      v44[6] = v29;
      char v45 = v30;
      uint64_t result = sub_E03D0((uint64_t)v44, v32, v42);
      uint64_t v8 = v39;
      int64_t v14 = v43;
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v42;
  return result;
}

__n128 sub_E0240(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_F7C20();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_EAC58((uint64_t)v14, v8);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    sub_F7C40(1u);
    swift_bridgeObjectRetain();
    sub_F72C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_F7C40(0);
  }
  sub_F7C30(*(unsigned __int8 *)(a1 + 56));
  sub_F7C50();
  unint64_t v9 = sub_F7830();
  *(void *)((char *)a4 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
  unint64_t v10 = a4[6] + (v9 << 6);
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)unint64_t v10 = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 16) = v11;
  *(_OWORD *)(v10 + 32) = *(_OWORD *)(a1 + 32);
  __n128 result = *(__n128 *)(a1 + 41);
  *(__n128 *)(v10 + 41) = result;
  int64_t v13 = (void *)(a4[7] + 16 * v9);
  *int64_t v13 = a2;
  v13[1] = a3;
  ++a4[2];
  return result;
}

uint64_t sub_E03D0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_F7C20();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_EAC58((uint64_t)v13, v6);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    sub_F7C40(1u);
    swift_bridgeObjectRetain();
    sub_F72C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_F7C40(0);
  }
  sub_F7C30(*(unsigned __int8 *)(a1 + 56));
  sub_F7C50();
  unint64_t v7 = sub_F7830();
  *(void *)((char *)a3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
  uint64_t v8 = (_OWORD *)(a3[6] + (v7 << 6));
  long long v9 = *(_OWORD *)(a1 + 16);
  *uint64_t v8 = *(_OWORD *)a1;
  v8[1] = v9;
  _OWORD v8[2] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)(a1 + 41);
  uint64_t v10 = a3[7];
  uint64_t v11 = type metadata accessor for TypingIndicator();
  uint64_t result = sub_9F7BC(a2, v10 + *(void *)(*(void *)(v11 - 8) + 72) * v7);
  ++a3[2];
  return result;
}

void *sub_E0578()
{
  int64_t v1 = v0;
  sub_551C(&qword_128140);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    unint64_t v19 = (void *)(*(void *)(v4 + 56) + 16 * v15);
    *unint64_t v19 = v18;
    v19[1] = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_E0724()
{
  int64_t v1 = v0;
  sub_551C(&qword_129DB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_E08DC()
{
  sub_551C(&qword_12AB98);
  uint64_t v33 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_F79C0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v33 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v12) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v5 + 8 * v30);
    ++v8;
    if (!v31)
    {
      int64_t v8 = v30 + 1;
      if (v30 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v5 + 8 * v8);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v31 - 1) & v31;
    unint64_t v14 = __clz(__rbit64(v31)) + (v8 << 6);
LABEL_12:
    unint64_t v15 = v14 << 6;
    unint64_t v16 = *(void *)(v1 + 48) + (v14 << 6);
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    uint64_t v22 = *(void *)(v16 + 32);
    uint64_t v21 = *(void *)(v16 + 40);
    uint64_t v23 = *(void *)(v16 + 48);
    LOBYTE(v16) = *(unsigned char *)(v16 + 56);
    uint64_t v24 = 16 * v14;
    uint64_t v25 = (uint64_t *)(*(void *)(v1 + 56) + v24);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    unint64_t v28 = *(void *)(v3 + 48) + v15;
    *(void *)unint64_t v28 = v17;
    *(void *)(v28 + 8) = v18;
    *(void *)(v28 + 16) = v19;
    *(void *)(v28 + 24) = v20;
    *(void *)(v28 + 32) = v22;
    *(void *)(v28 + 40) = v21;
    *(void *)(v28 + 48) = v23;
    *(unsigned char *)(v28 + 56) = v16;
    uint64_t v29 = (void *)(*(void *)(v3 + 56) + v24);
    *uint64_t v29 = v26;
    v29[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v12) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v5 + 8 * v32);
  if (v31)
  {
    int64_t v8 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v5 + 8 * v8);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_E0AEC()
{
  uint64_t v1 = v0;
  sub_551C(&qword_12AB90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 56) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_E0C8C()
{
  uint64_t v1 = v0;
  sub_551C(&qword_12AB78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_E0E40()
{
  uint64_t v1 = type metadata accessor for TypingIndicator();
  uint64_t v40 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v39 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_551C(&qword_12AB80);
  int64_t v36 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_F79C0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v42 = v4;
  if (!v5)
  {
    uint64_t result = swift_release();
    uint64_t v35 = v42;
    uint64_t v34 = v36;
LABEL_25:
    uint64_t *v34 = v35;
    return result;
  }
  uint64_t v6 = v4;
  unint64_t v7 = (char *)(v4 + 64);
  int64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v37 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    uint64_t v6 = v42;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v41 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = (uint64_t)v39;
  while (1)
  {
    if (v13)
    {
      uint64_t v43 = (v13 - 1) & v13;
      int64_t v44 = v10;
      unint64_t v15 = __clz(__rbit64(v13)) | (v10 << 6);
      uint64_t result = v41;
      goto LABEL_9;
    }
    int64_t v30 = v10 + 1;
    uint64_t result = v41;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v38) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v37 + 8 * v30);
    int64_t v32 = v10 + 1;
    if (!v31)
    {
      int64_t v32 = v10 + 2;
      if (v10 + 2 >= v38) {
        goto LABEL_23;
      }
      unint64_t v31 = *(void *)(v37 + 8 * v32);
      if (!v31) {
        break;
      }
    }
LABEL_22:
    uint64_t v43 = (v31 - 1) & v31;
    int64_t v44 = v32;
    unint64_t v15 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_9:
    unint64_t v17 = v15 << 6;
    uint64_t v18 = *(void *)(result + 56);
    unint64_t v19 = *(void *)(result + 48) + (v15 << 6);
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 48);
    int v45 = *(unsigned __int8 *)(v19 + 56);
    unint64_t v27 = *(void *)(v40 + 72) * v15;
    sub_E15E8(v18 + v27, v14);
    uint64_t v28 = v42;
    unint64_t v29 = *(void *)(v42 + 48) + v17;
    *(void *)unint64_t v29 = v20;
    *(void *)(v29 + 8) = v21;
    *(void *)(v29 + 16) = v22;
    *(void *)(v29 + 24) = v23;
    *(void *)(v29 + 32) = v24;
    *(void *)(v29 + 40) = v25;
    *(void *)(v29 + 48) = v26;
    *(unsigned char *)(v29 + 56) = v45;
    sub_9F7BC(v14, *(void *)(v28 + 56) + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = v43;
    int64_t v10 = v44;
  }
  uint64_t v33 = v10 + 3;
  if (v10 + 3 >= v38)
  {
LABEL_23:
    uint64_t result = swift_release();
    uint64_t v34 = v36;
    uint64_t v35 = v42;
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v37 + 8 * v33);
  if (v31)
  {
    int64_t v32 = v10 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v32 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v32 >= v38) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v37 + 8 * v32);
    ++v33;
    if (v31) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_E1130()
{
  uint64_t v1 = v0;
  sub_551C(&qword_12AB88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_F79C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_E12E8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_E1374()
{
  unint64_t result = qword_12AB70;
  if (!qword_12AB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12AB70);
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessageMetadata()
{
  return &type metadata for RCSMessageMetadata;
}

void *initializeBufferWithCopyOfBuffer for RCSMessageMetadata.Entry(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RCSMessageMetadata.Entry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RCSMessageMetadata.Entry(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSMessageMetadata.Entry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RCSMessageMetadata.Entry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessageMetadata.Entry()
{
  return &type metadata for RCSMessageMetadata.Entry;
}

unsigned char *storeEnumTagSinglePayload for RCSMessageMetadata.Entry.HeaderKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xE15B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSMessageMetadata.Entry.HeaderKeys()
{
  return &type metadata for RCSMessageMetadata.Entry.HeaderKeys;
}

uint64_t sub_E15E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TypingIndicator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E1650(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 49) = a4;
  *(void *)(v5 + 136) = a3;
  *(void *)(v5 + 144) = v4;
  *(void *)(v5 + 120) = a1;
  *(void *)(v5 + 128) = a2;
  return _swift_task_switch(sub_E1678, v4, 0);
}

uint64_t sub_E1678()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  swift_beginAccess();
  uint64_t v3 = sub_9DBC0(v1, v2);
  *(void *)(v0 + 152) = v3;
  swift_endAccess();
  if (v3)
  {
    uint64_t v4 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 24);
    uint64_t v5 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 32);
    sub_6BA8((void *)(v3 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    swift_beginAccess();
    sub_9DAD8(v6, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_E1AA8, v3, 0);
  }
  else
  {
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_F70F0();
    sub_8B44(v9, (uint64_t)qword_129B10);
    swift_bridgeObjectRetain_n();
    unint64_t v10 = sub_F70D0();
    os_log_type_t v11 = sub_F76B0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = *(void *)(v0 + 128);
    if (v12)
    {
      uint64_t v14 = *(void *)(v0 + 120);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      *(void *)(v0 + 104) = 1752392040;
      sub_F77B0();
      *(_WORD *)(v15 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 112) = sub_A3FC(v14, v13, &v23);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v10, v11, "Operation completed with ID %{private,mask.hash}s but no operation with that ID is being tracked", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = *(int **)(*(void *)(v0 + 144) + 136);
    if (v16)
    {
      if (*(unsigned char *)(v0 + 49))
      {
        *(void *)(v0 + 16) = *(void *)(v0 + 136);
        *(unsigned char *)(v0 + 48) = 1;
        swift_errorRetain();
      }
      else
      {
        *(void *)(v0 + 40) = &type metadata for Never;
        *(unsigned char *)(v0 + 48) = 0;
      }
      int64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v16 + *v16);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_E1B7C;
      uint64_t v20 = *(void *)(v0 + 120);
      uint64_t v19 = *(void *)(v0 + 128);
      return v22(v20, v19, v0 + 16);
    }
    else
    {
      unint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
}

uint64_t sub_E1AA8()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_967CC(*(void *)(v0 + 136), *(unsigned char *)(v0 + 49) & 1);
  return _swift_task_switch(sub_E1B1C, v1, 0);
}

uint64_t sub_E1B1C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_E1B7C()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_1E944(v1, (uint64_t *)&unk_128CF0);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_E1C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  return _swift_task_switch(sub_E1CA8, v3, 0);
}

uint64_t sub_E1CA8()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  swift_beginAccess();
  uint64_t v3 = sub_9DBC0(v1, v2);
  *(void *)(v0 + 192) = v3;
  swift_endAccess();
  if (v3)
  {
    uint64_t v4 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 24);
    uint64_t v5 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 32);
    sub_6BA8((void *)(v3 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    swift_beginAccess();
    sub_9DAD8(v6, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_E210C, v3, 0);
  }
  else
  {
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_F70F0();
    sub_8B44(v9, (uint64_t)qword_129B10);
    swift_bridgeObjectRetain_n();
    unint64_t v10 = sub_F70D0();
    os_log_type_t v11 = sub_F76B0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = *(void *)(v0 + 168);
    if (v12)
    {
      uint64_t v14 = *(void *)(v0 + 160);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      *(void *)(v0 + 144) = 1752392040;
      sub_F77B0();
      *(_WORD *)(v15 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 152) = sub_A3FC(v14, v13, &v26);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v10, v11, "Operation completed with ID %{private,mask.hash}s but no operation with that ID is being tracked", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = *(int **)(*(void *)(v0 + 184) + 136);
    if (v16)
    {
      unint64_t v17 = (void *)(v0 + 16);
      sub_2C4C0(*(void *)(v0 + 176), v0 + 56, (uint64_t *)&unk_128CF0);
      char v18 = *(unsigned char *)(v0 + 88);
      if (v18)
      {
        *unint64_t v17 = *(void *)(v0 + 56);
      }
      else
      {
        *(void *)(v0 + 40) = (char *)&type metadata for Any + 8;
        uint64_t v20 = swift_allocObject();
        *(void *)(v0 + 16) = v20;
        sub_1EBC4((_OWORD *)(v0 + 56), (_OWORD *)(v20 + 16));
      }
      *(unsigned char *)(v0 + 48) = v18;
      uint64_t v25 = (int *)((char *)v16 + *v16);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_E21D8;
      uint64_t v23 = *(void *)(v0 + 160);
      uint64_t v22 = *(void *)(v0 + 168);
      return ((uint64_t (*)(uint64_t, uint64_t, void *))v25)(v23, v22, v17);
    }
    else
    {
      uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
      return v19();
    }
  }
}

uint64_t sub_E210C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  sub_96FAC(*(void *)(v0 + 176));
  return _swift_task_switch(sub_E2178, v1, 0);
}

uint64_t sub_E2178()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_E21D8()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_1E944(v1, (uint64_t *)&unk_128CF0);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_E22E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  return _swift_task_switch(sub_E2304, v3, 0);
}

uint64_t sub_E2304()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  swift_beginAccess();
  uint64_t v3 = sub_9DBC0(v1, v2);
  *(void *)(v0 + 200) = v3;
  swift_endAccess();
  if (v3)
  {
    uint64_t v4 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 24);
    uint64_t v5 = *(void *)(v3
                   + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id
                   + 32);
    sub_6BA8((void *)(v3 + OBJC_IVAR____TtCC7CoreRCS22RCSOperationControllerP33_1B0F715D17C82627C67D971FB94137349Operation_id), v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    swift_beginAccess();
    sub_9DAD8(v6, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_E2768, v3, 0);
  }
  else
  {
    if (qword_1290A8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_F70F0();
    sub_8B44(v9, (uint64_t)qword_129B10);
    swift_bridgeObjectRetain_n();
    unint64_t v10 = sub_F70D0();
    os_log_type_t v11 = sub_F76B0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    unint64_t v13 = *(void *)(v0 + 176);
    if (v12)
    {
      uint64_t v14 = *(void *)(v0 + 168);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      *(void *)(v0 + 152) = 1752392040;
      sub_F77B0();
      *(_WORD *)(v15 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 160) = sub_A3FC(v14, v13, &v26);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v10, v11, "Operation completed with ID %{private,mask.hash}s but no operation with that ID is being tracked", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = *(int **)(*(void *)(v0 + 192) + 136);
    if (v16)
    {
      unint64_t v17 = (void *)(v0 + 64);
      sub_2C4C0(*(void *)(v0 + 184), v0 + 16, &qword_128030);
      char v18 = *(unsigned char *)(v0 + 56);
      if (v18)
      {
        *unint64_t v17 = *(void *)(v0 + 16);
      }
      else
      {
        *(void *)(v0 + 88) = sub_551C(&qword_1294C0);
        uint64_t v20 = swift_allocObject();
        *(void *)(v0 + 64) = v20;
        sub_1E87C((long long *)(v0 + 16), v20 + 16);
      }
      *(unsigned char *)(v0 + 96) = v18;
      uint64_t v25 = (int *)((char *)v16 + *v16);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_E2834;
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v22 = *(void *)(v0 + 176);
      return ((uint64_t (*)(uint64_t, uint64_t, void *))v25)(v23, v22, v17);
    }
    else
    {
      uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
      return v19();
    }
  }
}

uint64_t sub_E2768()
{
  uint64_t v1 = *(void *)(v0 + 192);
  sub_97794(*(void *)(v0 + 184));
  return _swift_task_switch(sub_E27D4, v1, 0);
}

uint64_t sub_E27D4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_E2834()
{
  uint64_t v1 = *v0 + 64;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_1E944(v1, (uint64_t *)&unk_128CF0);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t RCSReachabilityController.__allocating_init(delegate:operationConfiguration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  RCSReachabilityController.init(delegate:operationConfiguration:)(a1, a2);
  return v4;
}

uint64_t RCSReachabilityController.init(delegate:operationConfiguration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 16) = a1;
  type metadata accessor for RCSOperationController();
  swift_allocObject();
  *(void *)(v3 + 24) = RCSOperationController.init(configuration:)(a2);
  return v3;
}

uint64_t RCSReachabilityController.receivedCapabilities(_:operationID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_E2A04, 0, 0);
}

uint64_t sub_E2A04()
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_12ABA8 + dword_12ABA8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_E2AB8;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[2];
  return v6(v3, v2, v4);
}

uint64_t sub_E2AB8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_E2BAC(uint64_t a1, void *a2)
{
  unint64_t result = sub_E9260((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v10 = result;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *v7;
      v9[0] = *(v7 - 1);
      v9[1] = v8;
      swift_bridgeObjectRetain();
      sub_E2C80((uint64_t *)&v10, v9, v2, a2);
      v7 += 2;
      swift_bridgeObjectRelease();
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_E2C80(uint64_t *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v37 = a1;
  uint64_t v7 = sub_551C(&qword_127C70);
  uint64_t v36 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v39 = v10;
  BOOL v12 = *(void **)(a3 + 16);
  swift_bridgeObjectRetain_n();
  id v13 = [v12 internalServiceName];
  sub_F7220();
  uint64_t v38 = v14;

  id v15 = [a4 serviceOfLastMessage];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_F7220();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  id v20 = objc_msgSend(v12, "internalServiceName", v36);
  uint64_t v21 = sub_F7220();
  uint64_t v23 = v22;

  if (v19)
  {
    if (v17 == v21 && v19 == v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = 1;
      goto LABEL_14;
    }
    char v25 = sub_F7B60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25)
    {
      uint64_t v24 = 1;
      goto LABEL_14;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_1290B8 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_8B44(v7, (uint64_t)qword_12A298);
  uint64_t v27 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v9, v26, v7);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  uint64_t v24 = v41;
LABEL_14:
  id v28 = objc_allocWithZone((Class)IMServiceReachabilityHandleResult);
  uint64_t v29 = v39;
  int64_t v30 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  unint64_t v31 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v32 = [v28 initWithHandleID:v30 service:v31 isReachable:v24];

  if (v32)
  {
    uint64_t v33 = v37;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *v33;
    *uint64_t v33 = 0x8000000000000000;
    sub_9E0F4((uint64_t)v32, v29, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v33 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = (void *)sub_9DCF0(v29, v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_E2FE0(void *a1)
{
  uint64_t v3 = *v1;
  id v4 = [a1 handleIDs];
  uint64_t v5 = sub_F7410();

  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    if (qword_129078 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_F70F0();
    sub_8B44(v24, (uint64_t)static Logger.reachability);
    char v25 = sub_F70D0();
    os_log_type_t v26 = sub_F7670();
    if (!os_log_type_enabled(v25, v26)) {
      goto LABEL_13;
    }
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_0, v25, v26, "RCS is unavailable for sending: no handles requested", v27, 2u);
LABEL_12:
    swift_slowDealloc();
LABEL_13:

    return 0;
  }
  uint64_t v7 = (void *)v1[2];
  id v8 = [a1 context];
  uint64_t v9 = *(void *)(v3 + 88);
  char v10 = (*(uint64_t (**)(void))(v9 + 64))();

  if (v10)
  {
    id v11 = [a1 handleIDs];
    uint64_t v12 = sub_F7410();

    uint64_t v13 = *(void *)(v12 + 16);
    swift_bridgeObjectRelease();
    id v14 = [a1 context];
    id v15 = [v7 maxChatParticipantsForContext:v14];

    if ((uint64_t)v15 < v13)
    {
      if (qword_129078 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_F70F0();
      sub_8B44(v16, (uint64_t)static Logger.reachability);
      id v17 = a1;
      uint64_t v18 = sub_F70D0();
      os_log_type_t v19 = sub_F7670();
      if (os_log_type_enabled(v18, v19))
      {
        id v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v20 = 134217984;
        id v21 = [v17 handleIDs];
        uint64_t v22 = sub_F7410();

        uint64_t v23 = *(void *)(v22 + 16);
        swift_bridgeObjectRelease();
        uint64_t v65 = v23;
        sub_F77B0();

        _os_log_impl(&dword_0, v18, v19, "Too many participants (%ld) greater than service max participants", v20, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      return 1;
    }
    id v33 = [a1 context];
    unsigned __int8 v34 = [v33 conversationWasDowngraded];

    if (v34)
    {
      if (qword_129078 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_F70F0();
      sub_8B44(v35, (uint64_t)static Logger.reachability);
      uint64_t v36 = sub_F70D0();
      os_log_type_t v37 = sub_F7670();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_0, v36, v37, "RCS service downgraded", v38, 2u);
        swift_slowDealloc();
      }

      return 7;
    }
    id v39 = [a1 context];
    char v40 = (*(uint64_t (**)(void))(v9 + 48))();

    if (v40)
    {
      if (qword_129078 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_F70F0();
      sub_8B44(v41, (uint64_t)static Logger.reachability);
      uint64_t v42 = sub_F70D0();
      os_log_type_t v43 = sub_F7670();
      if (!os_log_type_enabled(v42, v43)) {
        goto LABEL_51;
      }
      int64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v44 = 0;
      int v45 = "RCS is available for sending: carrier supports interworking";
LABEL_50:
      _os_log_impl(&dword_0, v42, v43, v45, v44, 2u);
      swift_slowDealloc();
LABEL_51:

      return 1;
    }
    id v46 = [a1 handleIDs];
    uint64_t v47 = sub_F7410();

    uint64_t v48 = *(void *)(v47 + 16);
    if (v48)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = v47 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        os_log_type_t v50 = (void *)sub_F71F0();
        swift_bridgeObjectRelease();
        unsigned __int8 v51 = objc_msgSend(v50, "__im_isChatBot");

        if (v51) {
          break;
        }
        v49 += 16;
        if (!--v48)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease_n();
      if (qword_129078 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_F70F0();
      sub_8B44(v64, (uint64_t)static Logger.reachability);
      uint64_t v42 = sub_F70D0();
      os_log_type_t v43 = sub_F7670();
      if (!os_log_type_enabled(v42, v43)) {
        goto LABEL_51;
      }
      int64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v44 = 0;
      int v45 = "RCS is available for sending: assume RCS is avaibable for chat bot";
      goto LABEL_50;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    id v52 = [a1 handleIDs];
    os_log_type_t v53 = (void *)sub_F7410();

    if (!v53[2]) {
      goto LABEL_52;
    }
    uint64_t v55 = v53[4];
    unint64_t v54 = v53[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v56 = [a1 handleIDs];
    uint64_t v57 = sub_F7410();

    uint64_t v58 = *(void *)(v57 + 16);
    swift_bridgeObjectRelease();
    if (v58 != 1
      || (unint64_t v59 = (void *)sub_F71F0(),
          unsigned __int8 v60 = [v7 hasValidDowngradeRequestForHandleID:v59],
          v59,
          (v60 & 1) == 0))
    {
LABEL_52:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (qword_129078 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_F70F0();
    sub_8B44(v61, (uint64_t)static Logger.reachability);
    swift_bridgeObjectRetain();
    char v25 = sub_F70D0();
    os_log_type_t v62 = sub_F7670();
    if (!os_log_type_enabled(v25, v62))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    Swift::String v63 = (uint8_t *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    *(_DWORD *)Swift::String v63 = 136315138;
    swift_bridgeObjectRetain();
    sub_A3FC(v55, v54, &v65);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v25, v62, "RCS is unavailable for sending: %s requested downgrade", v63, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_12;
  }
  if (qword_129078 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_F70F0();
  sub_8B44(v29, (uint64_t)static Logger.reachability);
  int64_t v30 = sub_F70D0();
  os_log_type_t v31 = sub_F7670();
  if (os_log_type_enabled(v30, v31))
  {
    id v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v32 = 0;
    _os_log_impl(&dword_0, v30, v31, "RCS is unavailable for sending: RCS disabled", v32, 2u);
    swift_slowDealloc();
  }

  return 3;
}

uint64_t sub_E3960(void *a1)
{
  id v2 = [a1 handleIDs];
  uint64_t v3 = sub_F7410();

  unint64_t v4 = sub_E9260((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v11 = v4;
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v7 = *v6;
      v10[0] = *(v6 - 1);
      v10[1] = v7;
      swift_bridgeObjectRetain();
      sub_E4E70((uint64_t *)&v11, v10, v1);
      v6 += 2;
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    return v11;
  }
  else
  {
    unint64_t v8 = v4;
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t RCSReachabilityController.calculateReachability(with:responseHandler:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = *v2;
  v3[5] = *(void *)(*v2 + 88);
  void v3[6] = *(void *)(v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(void *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  uint64_t v6 = sub_F7770();
  v3[10] = v6;
  v3[11] = *(void *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_E3BE0, 0, 0);
}

uint64_t sub_E3BE0()
{
  uint64_t v42 = v0;
  uint64_t v1 = sub_E2FE0(*(void **)(v0 + 16));
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 32);
  if ((v4 & 1) == 0)
  {
    id v5 = [*(id *)(v3 + 16) internalServiceName];
    if (!v5)
    {
      sub_F7220();
      id v5 = (id)sub_F71F0();
      swift_bridgeObjectRelease();
    }
    id v6 = [*(id *)(v0 + 16) handleIDs];
    if (!v6)
    {
      sub_F7410();
      id v6 = (id)sub_F7400();
      swift_bridgeObjectRelease();
    }
    uint64_t v8 = *(void *)(v0 + 16);
    uint64_t v7 = *(void **)(v0 + 24);
    id v9 = [self finalResultForService:v5 handleIDs:v6 allAreReachable:0 checkedServer:0 error:v2];

    [v7 reachabilityRequest:v8 updatedWithResult:v9];
    goto LABEL_25;
  }
  if (v1)
  {
    id v10 = [*(id *)(v3 + 16) internalServiceName];
    if (!v10)
    {
      sub_F7220();
      id v10 = (id)sub_F71F0();
      swift_bridgeObjectRelease();
    }
    id v11 = [*(id *)(v0 + 16) handleIDs];
    if (!v11)
    {
      sub_F7410();
      id v11 = (id)sub_F7400();
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = *(void *)(v0 + 16);
    uint64_t v12 = *(void **)(v0 + 24);
    id v14 = [self finalResultForService:v10 handleIDs:v11 allAreReachable:1 checkedServer:0 error:0];

    [v12 reachabilityRequest:v13 updatedWithResult:v14];
    goto LABEL_25;
  }
  if (((*(uint64_t (**)(void))(*(void *)(v0 + 40) + 40))(*(void *)(v0 + 48)) & 1) == 0)
  {
    sub_E4A18(*(void **)(v0 + 16), *(uint64_t **)(v0 + 32), *(void **)(v0 + 24));
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
  uint64_t v16 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 104);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 64);
  uint64_t v38 = *(void *)(v0 + 80);
  uint64_t v39 = *(void *)(v0 + 56);
  uint64_t v19 = *(void *)(v0 + 40);
  id v20 = [*(id *)(v0 + 16) context];
  (*(void (**)(void))(v19 + 24))();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v39) == 1)
  {
    id v21 = *(void **)(v0 + 16);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
    v22(*(void *)(v0 + 96), *(void *)(v0 + 80));
    id v23 = [v21 handleIDs];
    uint64_t v24 = sub_F7410();

    unint64_t v25 = sub_E9260((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v40 = v25;
    uint64_t v26 = *(void *)(v24 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = (uint64_t *)(v24 + 40);
      do
      {
        uint64_t v28 = *(void *)(v0 + 32);
        uint64_t v29 = *v27;
        v41[0] = *(v27 - 1);
        v41[1] = v29;
        swift_bridgeObjectRetain();
        sub_E4E70((uint64_t *)&v40, v41, v28);
        v27 += 2;
        swift_bridgeObjectRelease();
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease_n();
      uint64_t v30 = v40;
    }
    else
    {
      uint64_t v30 = v25;
      swift_bridgeObjectRelease();
    }
    uint64_t v34 = *(void *)(v0 + 104);
    uint64_t v35 = *(void *)(v0 + 80);
    sub_E451C(v30, 1, 0, 4, *(void *)(v0 + 32), *(void **)(v0 + 24), *(void *)(v0 + 16));
    swift_bridgeObjectRelease();
    v22(v34, v35);
    goto LABEL_25;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 64) + 32))(*(void *)(v0 + 72), *(void *)(v0 + 96), *(void *)(v0 + 56));
  uint64_t v31 = swift_task_alloc();
  *(void *)(v0 + 112) = v31;
  *(void *)uint64_t v31 = v0;
  *(void *)(v31 + 8) = sub_E4144;
  uint64_t v32 = *(void *)(v0 + 32);
  uint64_t v33 = *(void *)(v0 + 16);
  *(void *)(v31 + 32) = *(void *)(v0 + 72);
  *(void *)(v31 + 40) = v32;
  *(unsigned char *)(v31 + 64) = 1;
  *(void *)(v31 + 24) = v33;
  return _swift_task_switch(sub_E4C14, 0, 0);
}

uint64_t sub_E4144(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_E4244, 0, 0);
}

uint64_t sub_E4244()
{
  sub_E451C(*(void *)(v0 + 120), 0, 0, 0, *(void *)(v0 + 32), *(void **)(v0 + 24), *(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *(void *)uint64_t v1 = v0;
  *(void *)(v1 + 8) = sub_E4328;
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16);
  *(void *)(v1 + 32) = *(void *)(v0 + 72);
  *(void *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 64) = 0;
  *(void *)(v1 + 24) = v3;
  return _swift_task_switch(sub_E4C14, 0, 0);
}

uint64_t sub_E4328(uint64_t a1)
{
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_E4428, 0, 0);
}

uint64_t sub_E4428()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 56);
  sub_E451C(*(void *)(v0 + 136), 1, 1, 0, *(void *)(v0 + 32), *(void **)(v0 + 24), *(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_E451C(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v10 = [*(id *)(a5 + 16) internalServiceName];
  sub_F7220();

  uint64_t v11 = swift_bridgeObjectRetain();
  char v12 = sub_E48A4(v11);
  swift_bridgeObjectRelease();
  id v13 = objc_allocWithZone((Class)IMServiceReachabilityResult);
  swift_bridgeObjectRetain();
  id v14 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  sub_E6FE8();
  uint64_t v15 = (void *)sub_F71A0();
  swift_bridgeObjectRelease();
  id v16 = [v13 initWithService:v14 error:a4 handleResults:v15 isFinal:a2 & 1 allAreReachable:v12 & 1 didCheckServer:a3 & 1];

  if (qword_129078 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_F70F0();
  sub_8B44(v17, (uint64_t)static Logger.reachability);
  id v18 = v16;
  uint64_t v19 = sub_F70D0();
  os_log_type_t v20 = sub_F7670();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 67109634;
    [v18 allAreReachable];
    sub_F77B0();
    *(_WORD *)(v21 + 8) = 1024;
    sub_F77B0();
    *(_WORD *)(v21 + 14) = 2080;
    id v22 = [v18 handleResults];
    uint64_t v23 = sub_F71B0();

    sub_E70F4(v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_F71C0();
    unint64_t v26 = v25;
    swift_release();
    sub_A3FC(v24, v26, &v29);
    sub_F77B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v19, v20, "All handles reachable over RCS %{BOOL}d isFinal %{BOOL}d per-handle reachability %s", (uint8_t *)v21, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  [a6 reachabilityRequest:a7 updatedWithResult:v18];
}

uint64_t sub_E48A4(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v11 >= v6) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12)
          {
            int64_t v13 = v11 + 4;
            if (v13 >= v6)
            {
LABEL_24:
              uint64_t v14 = 1;
              goto LABEL_25;
            }
            unint64_t v12 = *(void *)(v2 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                int64_t v8 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_27;
                }
                if (v8 >= v6) {
                  goto LABEL_24;
                }
                unint64_t v12 = *(void *)(v2 + 8 * v8);
                ++v13;
                if (v12) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v8 = v13;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    uint64_t result = (uint64_t)[*(id *)(*(void *)(a1 + 56) + 8 * v10) isReachable];
    if ((result & 1) == 0)
    {
      uint64_t v14 = 0;
LABEL_25:
      swift_release();
      return v14;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_E4A18(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  id v7 = [a1 context];
  unsigned int v8 = [v7 isForPendingConversation];

  if (v8
    && (uint64_t v10 = *(void *)(v6 + 80),
        uint64_t v9 = *(void *)(v6 + 88),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 80))(v10, v9) & 1) != 0))
  {
    uint64_t v11 = sub_E3960(a1);
    sub_E451C(v11, 0, 0, 0, (uint64_t)a2, a3, (uint64_t)a1);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void *, void *, uint64_t, uint64_t))(v9 + 88))(a1, a3, v10, v9);
  }
  else
  {
    id v13 = [a1 handleIDs];
    uint64_t v14 = sub_F7410();

    id v15 = [a1 context];
    unint64_t v16 = sub_E2BAC(v14, v15);
    swift_bridgeObjectRelease();

    sub_E451C(v16, 1, 0, 0, (uint64_t)a2, a3, (uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_E4BEC(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 64) = a2;
  *(void *)(v4 + 24) = a1;
  return _swift_task_switch(sub_E4C14, 0, 0);
}

uint64_t sub_E4C14()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 24);
  unint64_t v5 = sub_E6FE8();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v1;
  *(unsigned char *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v2;
  uint64_t v7 = sub_551C(&qword_12AC58);
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v8;
  *unsigned int v8 = v0;
  v8[1] = sub_E4D40;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v5, v7, 0, 0, &unk_12AC50, v6, v5);
}

uint64_t sub_E4D40()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_E4E58, 0, 0);
}

uint64_t sub_E4E58()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void sub_E4E70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = *(void **)(a3 + 16);
  swift_bridgeObjectRetain_n();
  id v7 = [v6 internalServiceName];
  sub_F7220();

  id v8 = objc_allocWithZone((Class)IMServiceReachabilityHandleResult);
  uint64_t v9 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithHandleID:v9 service:v10 isReachable:0];

  if (v11)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *a1;
    *a1 = 0x8000000000000000;
    sub_9E0F4((uint64_t)v11, v5, v4, isUniquelyReferenced_nonNull_native);
    *a1 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = (void *)sub_9DCF0(v5, v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t RCSReachabilityController.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t RCSReachabilityController.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_E503C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RCSReachabilityController()
{
  return sub_8B108();
}

unint64_t sub_E50A4()
{
  sub_F78A0(25);
  swift_bridgeObjectRelease();
  uint64_t v2 = *v0;
  uint64_t v1 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v1;
  sub_F72E0(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_F72E0(v5);
  return 0xD000000000000016;
}

uint64_t sub_E5148(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RCSOperationController.OperationID.description.getter(a1, WitnessTable);
}

uint64_t sub_E519C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 344) = a5;
  *(void *)(v6 + 352) = v5;
  *(unsigned char *)(v6 + 73) = a4;
  *(void *)(v6 + 328) = a2;
  *(void *)(v6 + 336) = a3;
  *(void *)(v6 + 320) = a1;
  uint64_t v7 = *v5;
  *(void *)(v6 + 360) = *(void *)(*v5 + 88);
  *(void *)(v6 + 368) = *(void *)(v7 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v6 + 376) = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v6 + 384) = v9;
  *(void *)(v6 + 392) = *(void *)(v9 + 64);
  *(void *)(v6 + 400) = swift_task_alloc();
  return _swift_task_switch(sub_E52B4, 0, 0);
}

uint64_t sub_E52B4()
{
  uint64_t v52 = v0;
  id v1 = [*(id *)(v0 + 336) context];
  unsigned int v2 = [v1 hasConversationHistory];

  if (!v2) {
    goto LABEL_15;
  }
  id v3 = [*(id *)(v0 + 336) context];
  id v4 = [v3 serviceOfLastMessage];

  if (!v4) {
    goto LABEL_15;
  }
  uint64_t v5 = sub_F7220();
  uint64_t v7 = v6;

  if (v5 == 5459283 && v7 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_F7B60();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_15;
    }
  }
  if (((*(uint64_t (**)(void, void, void, void))(*(void *)(v0 + 360) + 56))(*(void *)(v0 + 320), *(void *)(v0 + 328), *(void *)(v0 + 344), *(void *)(v0 + 368)) & 1) == 0)
  {
LABEL_15:
    uint64_t v17 = *(void *)(v0 + 320);
    unint64_t v16 = *(void *)(v0 + 328);
    *(void *)(v0 + 408) = *(void *)(*(void *)(v0 + 352) + 16);
    swift_bridgeObjectRetain();
    sub_EAF1C(v17, v16, 0, 0, 0, (uint64_t *)(v0 + 80));
    uint64_t v49 = (uint64_t *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 384);
    uint64_t v46 = *(void *)(v0 + 400);
    uint64_t v19 = *(void *)(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 360);
    uint64_t v44 = *(void *)(v0 + 352);
    uint64_t v45 = *(void *)(v0 + 376);
    uint64_t v43 = *(void *)(v0 + 344);
    int v21 = *(unsigned __int8 *)(v0 + 73);
    char v42 = *(unsigned char *)(v0 + 73);
    (*(void (**)(uint64_t))(v20 + 32))(v0 + 80);
    sub_6D20(v0 + 80);
    uint64_t v22 = RCSHandle.rawValue.getter();
    uint64_t v41 = v22;
    uint64_t v24 = v23;
    sub_6D20(v0 + 16);
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    if (v21) {
      v25._countAndFlagsBits = 0x646568636163;
    }
    else {
      v25._countAndFlagsBits = 0x6465686361636E75;
    }
    if (v21) {
      unint64_t v26 = (void *)0xE600000000000000;
    }
    else {
      unint64_t v26 = (void *)0xE800000000000000;
    }
    v25._object = v26;
    sub_F72E0(v25);
    swift_bridgeObjectRelease();
    v54._countAndFlagsBits = 45;
    v54._object = (void *)0xE100000000000000;
    sub_F72E0(v54);
    v55._countAndFlagsBits = v22;
    v55._object = v24;
    sub_F72E0(v55);
    uint64_t v27 = v50;
    unint64_t v28 = v51;
    *(void *)(v0 + 208) = type metadata accessor for RCSReachabilityController.CapabilityOperationID();
    *(void *)(v0 + 216) = swift_getWitnessTable();
    uint64_t v29 = sub_28728(v49);
    sub_F6F20();
    *uint64_t v29 = v27;
    v29[1] = v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v46, v43, v45);
    unint64_t v30 = (*(unsigned __int8 *)(v18 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v0 + 416) = v31;
    *(void *)(v31 + 16) = v19;
    *(void *)(v31 + 24) = v20;
    *(void *)(v31 + 32) = v44;
    *(void *)(v31 + 40) = v41;
    *(void *)(v31 + 48) = v24;
    *(unsigned char *)(v31 + 56) = v42;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v31 + v30, v46, v45);
    uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t *, void *, uint64_t))((char *)&dword_129498 + dword_129498);
    swift_retain();
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_E5BD0;
    return v47(v0 + 224, v49, &unk_12AC98, v31);
  }
  if (qword_129078 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_F70F0();
  sub_8B44(v10, (uint64_t)static Logger.reachability);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_F70D0();
  os_log_type_t v12 = sub_F7670();
  BOOL v13 = os_log_type_enabled(v11, v12);
  unint64_t v14 = *(void *)(v0 + 328);
  if (v13)
  {
    uint64_t v48 = *(void *)(v0 + 320);
    id v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(_DWORD *)id v15 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 312) = sub_A3FC(v48, v14, &v50);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v11, v12, "Not doing reachability request for %s because it is a shortcode with established SMS history", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v35 = *(void **)(v0 + 336);
  swift_bridgeObjectRetain();
  id v36 = [v35 serviceName];
  sub_F7220();

  id v37 = objc_allocWithZone((Class)IMServiceReachabilityHandleResult);
  uint64_t v38 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v40 = [v37 initWithHandleID:v38 service:v39 isReachable:0];

  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(id))(v0 + 8);
  return v34(v40);
}

uint64_t sub_E5BD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 432) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    id v3 = sub_E5E7C;
  }
  else
  {
    sub_6BEC(v2 + 184);
    id v3 = sub_E5D00;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_E5D00()
{
  id v1 = (void *)v0[42];
  sub_289D4((uint64_t)(v0 + 28), (uint64_t)(v0 + 18));
  id v2 = [v1 context];
  unsigned int v3 = [v2 chatStyle];

  BOOL v4 = v3 == 43;
  id v5 = objc_allocWithZone((Class)IMServiceReachabilityHandleResult);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)IMServiceNameRCS;
  uint64_t v8 = v0[21];
  char v9 = (uint64_t (**)(void, void))v0[22];
  sub_6BA8(v0 + 18, v8);
  id v10 = v7;
  id v11 = objc_msgSend(v5, "initWithHandleID:service:isReachable:", v6, v10, sub_C2258(v4, v8, v9) & 1);

  sub_6BEC((uint64_t)(v0 + 18));
  sub_6BEC((uint64_t)(v0 + 28));
  swift_task_dealloc();
  os_log_type_t v12 = (uint64_t (*)(id))v0[1];
  return v12(v11);
}

uint64_t sub_E5E7C()
{
  uint64_t v19 = v0;
  sub_6BEC((uint64_t)(v0 + 23));
  if (qword_129078 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_F70F0();
  sub_8B44(v1, (uint64_t)static Logger.reachability);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v2 = sub_F70D0();
  os_log_type_t v3 = sub_F7690();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[41];
  if (v4)
  {
    uint64_t v6 = v0[40];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[38] = sub_A3FC(v6, v5, &v18);
    sub_F77B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v8 = sub_F7BD0();
    v0[36] = sub_A3FC(v8, v9, &v18);
    sub_F77B0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "Failed to calculate reachability for %s: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  id v10 = (void *)v0[51];
  swift_bridgeObjectRetain();
  id v11 = [v10 internalServiceName];
  sub_F7220();

  id v12 = objc_allocWithZone((Class)IMServiceReachabilityHandleResult);
  BOOL v13 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithHandleID:v13 service:v14 isReachable:0];

  swift_errorRelease();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(id))v0[1];
  return v16(v15);
}

uint64_t sub_E61BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(unsigned char *)(v7 + 80) = a6;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a7;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 64) = *a3;
  return _swift_task_switch(sub_E6210, 0, 0);
}

uint64_t sub_E6210()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v2 = *(void *)(v1 + 88);
  id v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16) + **(int **)(v2 + 16));
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *BOOL v4 = v0;
  v4[1] = sub_E6320;
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = *(void *)(v0 + 40);
  return v12(v10, v5, v7, v6, v8, v9, v3, v2);
}

uint64_t sub_E6320()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_E6414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 112) = a4;
  *(void *)(v6 + 120) = a6;
  *(unsigned char *)(v6 + 232) = a5;
  *(void *)(v6 + 96) = a2;
  *(void *)(v6 + 104) = a3;
  *(void *)(v6 + 88) = a1;
  uint64_t v7 = *a4;
  *(void *)(v6 + 128) = *(void *)(*a4 + 88);
  *(void *)(v6 + 136) = *(void *)(v7 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v6 + 144) = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v6 + 152) = v9;
  *(void *)(v6 + 160) = *(void *)(v9 + 64);
  *(void *)(v6 + 168) = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128000);
  *(void *)(v6 + 176) = swift_task_alloc();
  *(void *)(v6 + 184) = swift_task_alloc();
  uint64_t v10 = sub_551C(&qword_12AC60);
  *(void *)(v6 + 192) = v10;
  *(void *)(v6 + 200) = *(void *)(v10 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  return _swift_task_switch(sub_E65CC, 0, 0);
}

uint64_t sub_E65CC()
{
  id v1 = [*(id *)(v0 + 104) handleIDs];
  uint64_t v2 = sub_F7410();

  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v29 = *(void *)(v0 + 152);
    __int8 v28 = *(unsigned char *)(v0 + 232);
    uint64_t v4 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v31 = v3;
      uint64_t v6 = *(void *)(v0 + 184);
      uint64_t v36 = *(void *)(v0 + 176);
      uint64_t v7 = *(void *)(v0 + 168);
      uint64_t v32 = v7;
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v9 = *(void *)(v0 + 112);
      uint64_t v10 = *(void *)(v0 + 120);
      uint64_t v11 = *v4;
      uint64_t v34 = *(v4 - 1);
      uint64_t v35 = *(void **)(v0 + 104);
      unint64_t v30 = v4;
      swift_bridgeObjectRetain();
      int8x16_t v33 = *(int8x16_t *)(v0 + 128);
      sub_F74F0();
      uint64_t v12 = sub_F7520();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v7, v10, v8);
      unint64_t v14 = (*(unsigned __int8 *)(v29 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      id v15 = (int8x16_t *)swift_allocObject();
      v15[1].i64[0] = 0;
      v15[1].i64[1] = 0;
      v15[2] = vextq_s8(v33, v33, 8uLL);
      v15[3].i64[0] = v9;
      v15[3].i64[1] = v34;
      v15[4].i64[0] = v11;
      v15[4].i64[1] = (uint64_t)v35;
      v15[5].i8[0] = v28;
      (*(void (**)(__int8 *, uint64_t, uint64_t))(v29 + 32))(&v15->i8[v14], v32, v8);
      sub_2C4C0(v6, v36, (uint64_t *)&unk_128000);
      LODWORD(v6) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v36, 1, v12);
      swift_retain();
      id v16 = v35;
      uint64_t v17 = *(void *)(v0 + 176);
      if (v6 == 1)
      {
        sub_1E944(*(void *)(v0 + 176), (uint64_t *)&unk_128000);
      }
      else
      {
        sub_F7510();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
      }
      if (v15[1].i64[0])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v18 = sub_F7470();
        uint64_t v20 = v19;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v18 = 0;
        uint64_t v20 = 0;
      }
      uint64_t v21 = **(void **)(v0 + 96);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = &unk_12AC78;
      *(void *)(v22 + 24) = v15;
      sub_E6FE8();
      uint64_t v23 = v20 | v18;
      if (v20 | v18)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v18;
        *(void *)(v0 + 40) = v20;
      }
      uint64_t v5 = *(void *)(v0 + 184);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v21;
      swift_task_create();
      swift_release();
      sub_1E944(v5, (uint64_t *)&unk_128000);
      uint64_t v4 = v30 + 2;
      uint64_t v3 = v31 - 1;
    }
    while (v31 != 1);
  }
  swift_bridgeObjectRelease();
  unint64_t v24 = sub_E9260((uint64_t)_swiftEmptyArrayStorage);
  sub_E6FE8();
  sub_F74B0();
  *(void *)(v0 + 216) = v24;
  Swift::String v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v25;
  *Swift::String v25 = v0;
  v25[1] = sub_E6A18;
  uint64_t v26 = *(void *)(v0 + 192);
  return TaskGroup.Iterator.next(isolation:)(v0 + 72, 0, 0, v26);
}

uint64_t sub_E6A18()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_E6B14, 0, 0);
}

uint64_t sub_E6B14()
{
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 216);
  if (v1)
  {
    id v3 = [*(id *)(v0 + 72) handleID];
    uint64_t v4 = sub_F7220();
    uint64_t v6 = v5;

    id v7 = v1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 80) = v2;
    unint64_t v12 = sub_1C9BC(v4, v6);
    uint64_t v13 = *(void *)(v2 + 16);
    BOOL v14 = (v9 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
    }
    else
    {
      char v16 = v9;
      if (*(void *)(*(void *)(v0 + 216) + 24) >= v15)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v15 = (uint64_t)sub_E0C8C();
        }
      }
      else
      {
        sub_DF91C(v15, isUniquelyReferenced_nonNull_native);
        uint64_t v15 = sub_1C9BC(v4, v6);
        if ((v16 & 1) != (v9 & 1))
        {
          return sub_F7BA0();
        }
        unint64_t v12 = v15;
      }
      uint64_t v20 = *(void **)(v0 + 80);
      if (v16)
      {
        uint64_t v21 = v20[7];

        *(void *)(v21 + 8 * v12) = v7;
        goto LABEL_18;
      }
      v20[(v12 >> 6) + 8] |= 1 << v12;
      uint64_t v22 = (uint64_t *)(v20[6] + 16 * v12);
      *uint64_t v22 = v4;
      v22[1] = v6;
      *(void *)(v20[7] + 8 * v12) = v7;
      uint64_t v23 = v20[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (!v24)
      {
        v20[2] = v25;
        swift_bridgeObjectRetain();
LABEL_18:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        *(void *)(v0 + 216) = v20;
        uint64_t v26 = (void *)swift_task_alloc();
        *(void *)(v0 + 224) = v26;
        *uint64_t v26 = v0;
        v26[1] = sub_E6A18;
        uint64_t v11 = *(void *)(v0 + 192);
        uint64_t v15 = v0 + 72;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        return TaskGroup.Iterator.next(isolation:)(v15, v9, v10, v11);
      }
    }
    __break(1u);
    return TaskGroup.Iterator.next(isolation:)(v15, v9, v10, v11);
  }
  uint64_t v18 = *(void **)(v0 + 88);
  (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
  *uint64_t v18 = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_E6DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_E6EC8;
  return sub_E519C(a5, a6, a7, a8, v16);
}

uint64_t sub_E6EC8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_E6FC8, 0, 0);
}

uint64_t sub_E6FC8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_E6FE8()
{
  unint64_t result = qword_12AC40;
  if (!qword_12AC40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_12AC40);
  }
  return result;
}

uint64_t sub_E7028(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  id v7 = *(uint64_t **)(v2 + 24);
  char v8 = *(unsigned char *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  void *v10 = v3;
  v10[1] = sub_E82C0;
  return sub_E6414(a1, a2, v6, v7, v8, v9);
}

void *sub_E70F4(uint64_t a1)
{
  sub_551C(&qword_12ACA0);
  unint64_t result = (void *)sub_F79C0();
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = (char *)(result + 8);
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    unint64_t result = [v18 isReachable];
    *(void *)&v9[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v17;
    v19[1] = v16;
    *(unsigned char *)(v3[7] + i) = (_BYTE)result;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v3[2] = v22;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_22;
    }
    if (v12 >= v23) {
      return v3;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v23) {
        return v3;
      }
      unint64_t v13 = *(void *)(v24 + 8 * v4);
      if (!v13) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v23) {
    return v3;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v23) {
      return v3;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_E72C4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_E73A4;
  return v5(v2 + 16);
}

uint64_t sub_E73A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_E74D4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 81) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E75CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  char v8 = *(unsigned char *)(v1 + 80);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_E772C;
  uint64_t v10[2] = a1;
  uint64_t v11 = (void *)swift_task_alloc();
  v10[3] = v11;
  *uint64_t v11 = v10;
  v11[1] = sub_E6EC8;
  return sub_E519C(v5, v6, v7, v8, v9);
}

uint64_t sub_E772C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_E7820()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_E7858(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_E82BC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_12AC70 + dword_12AC70);
  return v6(a1, v4);
}

uint64_t type metadata accessor for RCSReachabilityController.CapabilityOperationID()
{
  return sub_8B108();
}

uint64_t sub_E7928()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 57) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E7A10(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(void **)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  char v10 = *(unsigned char *)(v2 + 56);
  uint64_t v11 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v12 = swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *(void *)uint64_t v12 = v3;
  *(void *)(v12 + 48) = v9;
  *(void *)(v12 + 56) = v11;
  *(unsigned char *)(v12 + 80) = v10;
  *(void *)(v12 + 32) = v7;
  *(void *)(v12 + 40) = v8;
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 8) = sub_E7B68;
  *(void *)(v12 + 64) = *v7;
  return _swift_task_switch(sub_E6210, 0, 0);
}

uint64_t sub_E7B68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_E7C5C()
{
  sub_6BEC(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_E7C94()
{
  sub_6BEC(v0 + 16);

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_E7CCC()
{
  uint64_t result = sub_F6F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_E7D64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_F6F30();
    char v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_E7E4C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_F6F30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_E7EC4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_F6F30();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_E7F5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_F6F30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_E7FF8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_F6F30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_E8074(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_F6F30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_E8100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E8114);
}

uint64_t sub_E8114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_F6F30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_E81C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E81D8);
}

uint64_t sub_E81D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_F6F30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_E8280(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_E82C4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED0000747865746ELL;
  uint64_t v3 = 0x6F632D656E6F6870;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1919251317;
    }
    else {
      uint64_t v5 = 0x6E657265666E6F63;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xEA00000000006563;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6F632D656E6F6870;
  unint64_t v6 = 0xED0000747865746ELL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 1919251317;
    }
    else {
      uint64_t v3 = 0x6E657265666E6F63;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE400000000000000;
    }
    else {
      unint64_t v2 = 0xEA00000000006563;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_F7B60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_E83E8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1954047348;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1954047348;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x726566736E617274;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461636F6CLL;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x70756F7267;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x676E69707974;
      break;
    case 5:
      uint64_t v5 = 0x6472614368636972;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 6:
      uint64_t v5 = 0x6574736567677573;
      unint64_t v3 = 0xEE00796C70655264;
      break;
    case 7:
      uint64_t v5 = 0x6574736567677573;
      unint64_t v3 = 0xEF6E6F6974634164;
      break;
    case 8:
      uint64_t v5 = 0x6341656369766564;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x726566736E617274) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6F697461636F6CLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x70756F7267) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x676E69707974) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xE900000000000073;
      if (v5 != 0x6472614368636972) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xEE00796C70655264;
      if (v5 != 0x6574736567677573) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x6574736567677573;
      unint64_t v6 = 0xEF6E6F6974634164;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 != 0x6341656369766564) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_F7B60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void __swiftcall RCSHandle.init(scheme:id:attributes:botStatus:alternateHandle:)(CoreRCS::RCSHandle *__return_ptr retstr, Swift::String scheme, Swift::String id, Swift::OpaquePointer attributes, CoreRCS::RCSHandle::BotStatus botStatus, Swift::String_optional alternateHandle)
{
  object = alternateHandle.value._object;
  uint64_t countAndFlagsBits = alternateHandle.value._countAndFlagsBits;
  uint64_t v10 = id._object;
  uint64_t v11 = id._countAndFlagsBits;
  uint64_t v12 = scheme._object;
  uint64_t v13 = scheme._countAndFlagsBits;
  sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  retstr->scheme._uint64_t countAndFlagsBits = v13;
  retstr->scheme._object = v12;
  retstr->id._uint64_t countAndFlagsBits = v11;
  retstr->id._object = v10;
  retstr->attributes = attributes;
  retstr->alternateHandle.value._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->alternateHandle.value._object = object;
  retstr->botStatus = botStatus;
}

uint64_t RCSHandle.canonicalizedHandle(for:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v7 = *(void *)v2;
  unint64_t v6 = *(void *)(v2 + 8);
  BOOL v8 = *(void *)v2 == 7103860 && v6 == 0xE300000000000000;
  if (!v8 && (sub_F7B60() & 1) == 0)
  {
    BOOL v30 = v7 == 0x6F746C69616DLL && v6 == 0xE600000000000000;
    if (v30 || (sub_F7B60() & 1) != 0)
    {
      uint64_t v11 = *(void *)(v2 + 16);
      unint64_t v12 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
      sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      char v23 = 0;
      unint64_t v6 = 0xE300000000000000;
      uint64_t v7 = 7367027;
      goto LABEL_24;
    }
    char v23 = *(unsigned char *)(v2 + 56);
    uint64_t v21 = *(void *)(v2 + 40);
    uint64_t v22 = *(void *)(v2 + 48);
    unint64_t v12 = *(void *)(v2 + 24);
    unint64_t v19 = *(void *)(v2 + 32);
    uint64_t v11 = *(void *)(v3 + 16);
LABEL_23:
    uint64_t result = sub_5560(v3);
    goto LABEL_24;
  }
  a1();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v2 + 16);
  unint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = (void *)sub_F71F0();
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v15 = (void *)IMPhoneNumberRefCopyForPhoneNumber();

  id v16 = (id)IMNormalizedPhoneNumberForCFPhoneNumberRef();
  if (!v16)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_F70F0();
    sub_8B44(v24, (uint64_t)static Logger.rcs);
    sub_5560(v3);
    swift_bridgeObjectRetain();
    sub_5560(v3);
    uint64_t v25 = sub_F70D0();
    os_log_type_t v26 = sub_F7690();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_t log = v25;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      sub_A3FC(v11, v12, &v32);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6D20(v3);
      sub_6D20(v3);
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_551C(&qword_128B88);
      uint64_t v28 = sub_F7270();
      sub_A3FC(v28, v29, &v32);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, log, v26, "Could not normalize phone number %s country code %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_6D20(v3);
      sub_6D20(v3);

      swift_bridgeObjectRelease_n();
    }
    char v23 = *(unsigned char *)(v3 + 56);
    uint64_t v21 = *(void *)(v3 + 40);
    uint64_t v22 = *(void *)(v3 + 48);
    unint64_t v19 = *(void *)(v3 + 32);
    goto LABEL_23;
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_F7220();
  unint64_t v12 = v18;

  unint64_t v19 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
  sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  char v23 = 0;
  unint64_t v6 = 0xE300000000000000;
  uint64_t v7 = 7103860;
LABEL_24:
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 56) = v23;
  return result;
}

uint64_t RCSHandle.rawValue.getter()
{
  unint64_t v1 = v0;
  sub_551C(&qword_128260);
  uint64_t v2 = swift_allocObject();
  long long v12 = v1[1];
  long long v3 = v12;
  *(_OWORD *)(v2 + 16) = xmmword_F8F20;
  *(_OWORD *)(v2 + 32) = v3;
  sub_EAC2C((uint64_t)&v12);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_E96F0(v4);
  swift_bridgeObjectRelease();
  *(void *)&long long v11 = v2;
  sub_74CC8((uint64_t)v5);
  long long v11 = *v1;
  uint64_t v10 = v11;
  sub_EAC2C((uint64_t)&v11);
  v13._uint64_t countAndFlagsBits = 58;
  v13._object = (void *)0xE100000000000000;
  sub_F72E0(v13);
  sub_551C(&qword_128550);
  sub_64858();
  uint64_t v6 = sub_F71D0();
  BOOL v8 = v7;
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = v6;
  v14._object = v8;
  sub_F72E0(v14);
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_E8DA4(uint64_t a1)
{
  return sub_E8ED8(a1, sub_9D3B4);
}

unint64_t sub_E8DBC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_129DB0);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1C9BC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_E8ED8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_128140);
  uint64_t v4 = (void *)sub_F79E0();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *((unsigned __int8 *)v6 - 16);
    uint64_t v9 = *(v6 - 1);
    uint64_t v8 = *v6;
    swift_bridgeObjectRetain();
    unint64_t result = a2(v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v4[6] + result) = v7;
    BOOL v12 = (void *)(v4[7] + 16 * result);
    *BOOL v12 = v9;
    v12[1] = v8;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_E8FF0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_12AB98);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 104);
  while (1)
  {
    uint64_t v5 = *(v4 - 8);
    uint64_t v6 = *(v4 - 7);
    uint64_t v7 = *(v4 - 6);
    uint64_t v9 = *(v4 - 5);
    uint64_t v8 = *(v4 - 4);
    uint64_t v10 = *(v4 - 3);
    char v11 = *((unsigned char *)v4 - 16);
    uint64_t v12 = *(v4 - 1);
    uint64_t v13 = *v4;
    *(void *)&long long v22 = *(v4 - 9);
    *((void *)&v22 + 1) = v5;
    *(void *)&long long v23 = v6;
    *((void *)&v23 + 1) = v7;
    *(void *)uint64_t v24 = v9;
    *(void *)&v24[8] = v8;
    *(void *)&v24[16] = v10;
    v24[24] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_9D484((uint64_t)&v22);
    if (v15) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v16 = (_OWORD *)(v2[6] + (result << 6));
    long long v17 = v23;
    *id v16 = v22;
    v16[1] = v17;
    v16[2] = *(_OWORD *)v24;
    *(_OWORD *)((char *)v16 + 41) = *(_OWORD *)&v24[9];
    unint64_t v18 = (void *)(v2[7] + 16 * result);
    *unint64_t v18 = v12;
    v18[1] = v13;
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v4 += 10;
    v2[2] = v21;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_E9168(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_12AB90);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_9F19C();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (void *)(v2[7] + 16 * result);
    void *v9 = v6;
    v9[1] = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_E9260(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_12AB78);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1C9BC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_E937C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_12AB88);
  uint64_t v2 = (void *)sub_F79E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C9BC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_E9498(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_12AD60);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (long long *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_551C(&qword_12AB80);
  uint64_t v6 = sub_F79E0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2C4C0(v12, (uint64_t)v5, &qword_12AD60);
    long long v14 = v5[1];
    long long v26 = *v5;
    long long v27 = v14;
    v28[0] = v5[2];
    *(_OWORD *)((char *)v28 + 9) = *(long long *)((char *)v5 + 41);
    unint64_t result = sub_9D484((uint64_t)&v26);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v18 = (_OWORD *)(v7[6] + (result << 6));
    long long v19 = v27;
    *unint64_t v18 = v26;
    v18[1] = v19;
    v18[2] = v28[0];
    *(_OWORD *)((char *)v18 + 41) = *(_OWORD *)((char *)v28 + 9);
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for TypingIndicator();
    unint64_t result = sub_9F7BC(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RCSHandle.init(rawValue:botStatus:alternateHandle:)(CoreRCS::RCSHandle *__return_ptr retstr, Swift::String rawValue, CoreRCS::RCSHandle::BotStatus botStatus, Swift::String_optional alternateHandle)
{
  sub_EAF1C(rawValue._countAndFlagsBits, (unint64_t)rawValue._object, botStatus, alternateHandle.value._countAndFlagsBits, (uint64_t)alternateHandle.value._object, (uint64_t *)v7);
  if (!v4)
  {
    Swift::String v6 = (Swift::String)v7[1];
    retstr->scheme = (Swift::String)v7[0];
    retstr->id = v6;
    *(_OWORD *)&retstr->attributes._rawValue = v8[0];
    *(Swift::String_optional *)((char *)&retstr->alternateHandle + 1) = *(Swift::String_optional *)((char *)v8 + 9);
  }
}

void *sub_E96F0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_4FE88(0, v1, 0);
  unint64_t result = (void *)sub_E12E8(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v4;
  uint64_t v24 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v25 = v6;
    unint64_t v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
    uint64_t v12 = *v11;
    uint64_t v13 = (void *)v11[1];
    v26[8] = 0;
    *(void *)long long v26 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v5);
    swift_bridgeObjectRetain();
    sub_F7990();
    v27._uint64_t countAndFlagsBits = 61;
    v27._object = (void *)0xE100000000000000;
    sub_F72E0(v27);
    v28._uint64_t countAndFlagsBits = v12;
    v28._object = v13;
    sub_F72E0(v28);
    unint64_t result = (void *)swift_bridgeObjectRelease();
    unint64_t v15 = _swiftEmptyArrayStorage[2];
    unint64_t v14 = _swiftEmptyArrayStorage[3];
    if (v15 >= v14 >> 1) {
      unint64_t result = (void *)sub_4FE88(v14 > 1, v15 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v15 + 1;
    char v16 = &_swiftEmptyArrayStorage[2 * v15];
    void v16[4] = *(void *)&v26[1];
    v16[5] = 0xE000000000000000;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v10);
    if ((v17 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v5 & 0x3F));
    if (v18)
    {
      int64_t v8 = __clz(__rbit64(v18)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v22;
    }
    else
    {
      unint64_t v19 = v10 + 1;
      unint64_t v20 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v22;
      if (v10 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v10)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v10++);
            if (v21)
            {
              unint64_t v19 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v25 + 1;
    uint64_t v5 = v8;
    if (v25 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

BOOL RCSHandle.couldBeChatBot.getter()
{
  return *(unsigned __int8 *)(v0 + 56) - 1 < 2;
}

uint64_t RCSHandle.uri.getter()
{
  long long v5 = *v0;
  uint64_t v4 = v5;
  sub_EAC2C((uint64_t)&v5);
  v6._uint64_t countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  sub_F72E0(v6);
  uint64_t v2 = *((void *)v0 + 2);
  int64_t v1 = (void *)*((void *)v0 + 3);
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v2;
  v7._object = v1;
  sub_F72E0(v7);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t RCSHandle.Attribute.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6F632D656E6F6870;
  }
  if (a1 == 1) {
    return 1919251317;
  }
  return 0x6E657265666E6F63;
}

uint64_t sub_E9A58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_E82C4(*a1, *a2);
}

uint64_t sub_E9A64@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s7CoreRCS9RCSHandleV9AttributeO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_E9A94(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xED0000747865746ELL;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1919251317;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E657265666E6F63;
    unint64_t v4 = 0xEA00000000006563;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6F632D656E6F6870;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

Swift::Int sub_E9AFC()
{
  return sub_F7C50();
}

uint64_t sub_E9BA8()
{
  sub_F72C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_E9C40()
{
  return sub_F7C50();
}

uint64_t static RCSHandle.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_F7B60() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_F7B60() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[4];
  uint64_t v7 = a2[4];

  return sub_E9D7C(v6, v7);
}

uint64_t sub_E9D7C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    unint64_t v15 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_9D3B4(v18);
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    unint64_t v21 = (void *)(*(void *)(a2 + 56) + 16 * v19);
    if (*v21 == v17 && v21[1] == v16)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_F7B60();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t (*RCSHandle.scheme.modify())()
{
  return nullsub_41;
}

uint64_t RCSHandle.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*RCSHandle.id.modify())()
{
  return nullsub_42;
}

uint64_t RCSHandle.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RCSHandle.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*RCSHandle.attributes.modify())()
{
  return nullsub_43;
}

uint64_t RCSHandle.botStatus.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t RCSHandle.botStatus.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*RCSHandle.botStatus.modify())()
{
  return nullsub_44;
}

BOOL RCSHandle.isChatBot.getter()
{
  return *(unsigned char *)(v0 + 56) == 2;
}

uint64_t RCSHandle.chatBotId.getter()
{
  uint64_t v1 = v0;
  sub_ECC94((uint64_t)(v0 + 5), (uint64_t)v27);
  sub_ECC94((uint64_t)v27, (uint64_t)&v28);
  unint64_t v2 = v29;
  if (v29)
  {
    uint64_t v3 = v28;
    sub_EAC2C((uint64_t)v27);
    sub_EAF1C(v3, v2, 0, 0, 0, &v23);
    uint64_t v11 = v23;
    unint64_t v10 = v24;
    if (v23 == 7367027 && v24 == 0xE300000000000000 || (sub_F7B60() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v32._uint64_t countAndFlagsBits = 58;
      v32._object = (void *)0xE100000000000000;
      sub_F72E0(v32);
      uint64_t v12 = v25;
      unint64_t v13 = v26;
      swift_bridgeObjectRetain();
      v33._uint64_t countAndFlagsBits = v12;
      v33._object = v13;
      sub_F72E0(v33);
      swift_bridgeObjectRelease();
      sub_6D20((uint64_t)&v23);
      return v11;
    }
    if (qword_129080 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_F70F0();
    sub_8B44(v14, (uint64_t)static Logger.chatbot);
    sub_5560((uint64_t)&v23);
    unint64_t v15 = sub_F70D0();
    os_log_type_t v16 = sub_F7690();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      unint64_t v21 = v10;
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v20 = v11;
      swift_bridgeObjectRetain();
      v34._uint64_t countAndFlagsBits = 58;
      v34._object = (void *)0xE100000000000000;
      sub_F72E0(v34);
      uint64_t v18 = v25;
      uint64_t v19 = v26;
      swift_bridgeObjectRetain();
      v35._uint64_t countAndFlagsBits = v18;
      v35._object = v19;
      sub_F72E0(v35);
      swift_bridgeObjectRelease();
      sub_A3FC(v20, v21, &v22);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6D20((uint64_t)&v23);
      sub_6D20((uint64_t)&v23);
      _os_log_impl(&dword_0, v15, v16, "Alternate handle is not a sip, something is very wrong: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_6D20((uint64_t)&v23);
      sub_6D20((uint64_t)&v23);
    }
  }
  else
  {
    uint64_t v5 = *v1;
    uint64_t v4 = v1[1];
    BOOL v6 = *v1 == 7367027 && v4 == 0xE300000000000000;
    if (v6 || (sub_F7B60() & 1) != 0)
    {
      uint64_t v23 = v5;
      unint64_t v24 = v4;
      swift_bridgeObjectRetain();
      v30._uint64_t countAndFlagsBits = 58;
      v30._object = (void *)0xE100000000000000;
      sub_F72E0(v30);
      uint64_t v8 = v1[2];
      uint64_t v7 = (void *)v1[3];
      swift_bridgeObjectRetain();
      v31._uint64_t countAndFlagsBits = v8;
      v31._object = v7;
      sub_F72E0(v31);
      swift_bridgeObjectRelease();
      return v23;
    }
  }
  return 0;
}

void RCSHandle.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_EAC58(a1, v4);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 48))
  {
    sub_F7C40(1u);
    swift_bridgeObjectRetain();
    sub_F72C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_F7C40(0);
  }
  sub_F7C30(*(unsigned __int8 *)(v2 + 56));
}

Swift::Int RCSHandle.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_F7C20();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_F72C0();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_EAC58((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 48))
  {
    sub_F7C40(1u);
    swift_bridgeObjectRetain();
    sub_F72C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_F7C40(0);
  }
  sub_F7C30(*(unsigned __int8 *)(v1 + 56));
  return sub_F7C50();
}

Swift::Int sub_EA728()
{
  sub_F7C20();
  RCSHandle.hash(into:)((uint64_t)v1);
  return sub_F7C50();
}

uint64_t sub_EA764(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_F7B60() & 1) == 0) {
    return 0;
  }
  BOOL v9 = v2 == v5 && v4 == v6;
  if (!v9 && (sub_F7B60() & 1) == 0) {
    return 0;
  }

  return sub_E9D7C(v3, v7);
}

unint64_t RCSHandle.ParseError.errorDescription.getter(char a1)
{
  if (!a1) {
    return 0xD00000000000003DLL;
  }
  if (a1 == 1) {
    return 0xD00000000000004CLL;
  }
  return 0xD00000000000003ALL;
}

BOOL static RCSHandle.ParseError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void RCSHandle.ParseError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int _s7CoreRCS9RCSHandleV9BotStatusO9hashValueSivg_0(unsigned __int8 a1)
{
  return sub_F7C50();
}

unint64_t sub_EA8FC()
{
  return RCSHandle.ParseError.errorDescription.getter(*v0);
}

unint64_t static RCSHandle.couldBeGroupURI(_:)(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_EAF1C(a1, a2, 0, 0, 0, v5);
  LOBYTE(a2) = RCSHandle.couldBeGroupURI.getter();
  sub_6D20((uint64_t)v5);
  return a2 & 1;
}

BOOL RCSHandle.couldBeGroupURI.getter()
{
  BOOL v1 = *v0 == 7367027 && v0[1] == 0xE300000000000000;
  if (v1 || (v2 = sub_F7B60(), BOOL result = 0, (v2 & 1) != 0))
  {
    uint64_t v4 = v0[4];
    if (*(void *)(v4 + 16) && (uint64_t v5 = sub_9D3B4(2), (v6 & 1) != 0))
    {
      uint64_t v7 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v5);
      uint64_t v9 = *v7;
      unint64_t v8 = v7[1];
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
      if ((v8 & 0x2000000000000000) != 0) {
        uint64_t v11 = HIBYTE(v8) & 0xF;
      }
      else {
        uint64_t v11 = v10;
      }
      return v11 != 0;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

double RCSHandle.canonicalizedHandle(for:)@<D0>(uint64_t (*a1)(void)@<X0>, _OWORD *a2@<X8>)
{
  sub_EC710(v2, a1, (uint64_t)v6);
  long long v4 = v6[1];
  *a2 = v6[0];
  a2[1] = v4;
  a2[2] = v7[0];
  double result = *(double *)((char *)v7 + 9);
  *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  return result;
}

void RCSHandle.init(destination:)(void *a1@<X0>, _OWORD *a2@<X8>)
{
  id v5 = [a1 extractedUri];
  uint64_t v6 = sub_F7220();
  unint64_t v8 = v7;

  swift_bridgeObjectRelease();
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v9) {
    uint64_t v10 = &selRef_extractedUri;
  }
  else {
    uint64_t v10 = &selRef_uri;
  }
  id v11 = [a1 *v10];
  uint64_t v12 = sub_F7220();
  unint64_t v14 = v13;

  if ([a1 isBot]) {
    int v15 = 2;
  }
  else {
    int v15 = 0;
  }
  id v16 = [a1 identities];
  uint64_t v17 = v16;
  if (v16)
  {
    id v18 = [v16 identityList];

    uint64_t v19 = (void *)sub_F7410();
    if (!v19[2])
    {
      __break(1u);
      return;
    }
    uint64_t v17 = (void *)v19[4];
    uint64_t v20 = v19[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  sub_EAF1C(v12, v14, v15, (uint64_t)v17, v20, (uint64_t *)v22);

  if (!v2)
  {
    long long v21 = v22[1];
    *a2 = v22[0];
    a2[1] = v21;
    a2[2] = v23[0];
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v23 + 9);
  }
}

uint64_t sub_EAC2C(uint64_t a1)
{
  return a1;
}

void sub_EAC58(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v11 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_F72C0();
    swift_bridgeObjectRelease();
    sub_F72C0();
    swift_bridgeObjectRelease();
    v6 ^= sub_F7C50();
  }
  int64_t v10 = v8 + 2;
  if (v10 >= v5)
  {
LABEL_19:
    swift_release();
    sub_F7C30(v6);
    return;
  }
  uint64_t v9 = *(void *)(v11 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_EAE6C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return String.subscript.getter();
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t v6 = sub_F72D0();
  if (v7) {
    unint64_t v6 = v5;
  }
  if (4 * v3 < v6 >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

void sub_EAF1C(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  int v138 = a3;
  uint64_t v12 = (void *)sub_E8ED8((uint64_t)&_swiftEmptyArrayStorage, sub_9D3B4);
  unint64_t v13 = (void *)sub_F71F0();
  char IsPhoneNumber = IMStringIsPhoneNumber();

  if (IsPhoneNumber)
  {
    uint64_t v132 = a1;
    unint64_t v136 = a2;
    uint64_t v137 = a6;
    unint64_t v15 = 0xE300000000000000;
    uint64_t v16 = 7103860;
    char v17 = v138;
LABEL_69:
    unint64_t v119 = v137;
    uint64_t *v137 = v16;
    v119[1] = v15;
    unint64_t v120 = v136;
    v119[2] = v132;
    v119[3] = v120;
    v119[4] = (uint64_t)v12;
    v119[5] = a4;
    v119[6] = a5;
    *((unsigned char *)v119 + 56) = v17;
    return;
  }
  uint64_t v149 = a1;
  unint64_t v150 = a2;
  swift_bridgeObjectRetain();
  v152._uint64_t countAndFlagsBits = 60;
  v152._object = (void *)0xE100000000000000;
  BOOL v18 = sub_F7340(v152);
  swift_bridgeObjectRelease();
  uint64_t v129 = v6;
  uint64_t v131 = a5;
  uint64_t v128 = a4;
  id v144 = v12;
  if (!v18) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v153._uint64_t countAndFlagsBits = 62;
  v153._object = (void *)0xE100000000000000;
  BOOL v19 = sub_F7350(v153);
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_11;
  }
  uint64_t v137 = a6;
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_EAE6C(1, a1, a2);
  unint64_t v22 = v21;
  unint64_t v136 = a2;
  swift_bridgeObjectRelease();
  if (__OFSUB__(sub_F7790(), 1)) {
    goto LABEL_73;
  }
  uint64_t v23 = sub_F7780();
  if (v24) {
    unint64_t v25 = v22;
  }
  else {
    unint64_t v25 = v23;
  }
  if (v25 >> 14 >= v20 >> 14)
  {
    sub_F77A0();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_F72B0();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v149 = v26;
    unint64_t v150 = v28;
    a6 = v137;
LABEL_11:
    uint64_t v29 = sub_F6C50();
    uint64_t v30 = *(void *)(v29 - 8);
    __chkstk_darwin();
    Swift::String v32 = (char *)&v121 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_551C(&qword_12AD68);
    __chkstk_darwin();
    Swift::String v34 = (char *)&v121 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    sub_F6C40();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29) == 1)
    {
      swift_bridgeObjectRelease();
      sub_ED260((uint64_t)v34);
      sub_ECE60();
      swift_allocError();
      *Swift::String v35 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    uint64_t v127 = &v121;
    uint64_t v137 = a6;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v34, v29);
    uint64_t v145 = (void *)sub_F6C20();
    uint64_t v146 = v36;
    sub_8C60();
    uint64_t v37 = sub_F77E0();
    swift_bridgeObjectRelease();
    unint64_t v38 = *(void *)(v37 + 16);
    if (!v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_ECE60();
      swift_allocError();
      unsigned char *v49 = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    uint64_t v123 = v32;
    uint64_t v122 = v29;
    uint64_t v39 = v37;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_F72B0();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v126 = v39;
    if (*(void *)(v39 + 16) < v38) {
      goto LABEL_72;
    }
    uint64_t v121 = v30;
    unint64_t v43 = v38 - 1;
    uint64_t v12 = v144;
    unint64_t v136 = v42;
    uint64_t v132 = v40;
    if (v38 == 1)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v44 = v123;
      uint64_t v45 = sub_F6C30();
      if (v46)
      {
        uint64_t v47 = v45;
        unint64_t v15 = v46;
        uint64_t v16 = 7367027;
        a5 = v131;
        a4 = v128;
        uint64_t v48 = v121;
        if (v45 == 7367027 && v46 == 0xE300000000000000)
        {
          (*(void (**)(char *, uint64_t))(v121 + 8))(v44, v122);
          swift_bridgeObjectRelease();
          char v17 = v138;
          if ((_BYTE)v138) {
            goto LABEL_69;
          }
          goto LABEL_60;
        }
        char v115 = sub_F7B60();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v122);
        swift_bridgeObjectRelease();
        if (v115)
        {
          char v17 = v138;
          if ((_BYTE)v138)
          {
LABEL_61:
            uint64_t v16 = v47;
            goto LABEL_69;
          }
LABEL_60:
          char v17 = 1;
          goto LABEL_61;
        }
        uint64_t v16 = v47;
      }
      else
      {
        a5 = v131;
        a4 = v128;
        uint64_t v107 = v121;
        if (!v12[2]
          || (uint64_t v108 = sub_9D3B4(2), (v109 & 1) == 0)
          || ((uint64_t v110 = (uint64_t *)(v12[7] + 16 * v108),
               uint64_t v112 = *v110,
               unint64_t v111 = v110[1],
               uint64_t v113 = v112 & 0xFFFFFFFFFFFFLL,
               (v111 & 0x2000000000000000) != 0)
            ? (uint64_t v114 = HIBYTE(v111) & 0xF)
            : (uint64_t v114 = v113),
              !v114))
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          uint64_t v116 = (void *)sub_F71F0();
          swift_bridgeObjectRelease();
          int IsEmail = IMStringIsEmail();

          if (IsEmail)
          {
            uint64_t v16 = 7367027;
            (*(void (**)(char *, uint64_t))(v107 + 8))(v44, v122);
            swift_bridgeObjectRelease();
            char v17 = v138;
            if ((v138 & 0xFE) == 0) {
              char v17 = 1;
            }
            unint64_t v15 = 0xE300000000000000;
            goto LABEL_69;
          }
          sub_ECE60();
          swift_allocError();
          unsigned char *v118 = 2;
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v107 + 8))(v44, v122);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v16 = 7367027;
        (*(void (**)(char *, uint64_t))(v107 + 8))(v44, v122);
        swift_bridgeObjectRelease();
        unint64_t v15 = 0xE300000000000000;
      }
      char v17 = v138;
      goto LABEL_69;
    }
    swift_beginAccess();
    unint64_t v143 = sub_ED2C0();
    uint64_t v50 = (uint64_t *)(v126 + 88);
    *(void *)&long long v51 = 136315650;
    long long v125 = v51;
    uint64_t v124 = (char *)&type metadata for Any + 8;
    *(void *)&long long v51 = 136315394;
    long long v130 = v51;
    while (1)
    {
      uint64_t v52 = *(v50 - 3);
      uint64_t v53 = *(v50 - 2);
      uint64_t v55 = *(v50 - 1);
      uint64_t v54 = *v50;
      uint64_t v145 = (void *)v52;
      uint64_t v146 = v53;
      uint64_t v147 = v55;
      uint64_t v148 = v54;
      swift_bridgeObjectRetain();
      id v56 = (void *)sub_F77E0();
      if (v56[2] != 2)
      {
        swift_bridgeObjectRelease();
        if (qword_129070 != -1) {
          swift_once();
        }
        uint64_t v82 = sub_F70F0();
        sub_8B44(v82, (uint64_t)static Logger.rcs);
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_F70D0();
        os_log_type_t v84 = sub_F7690();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = swift_slowAlloc();
          unint64_t v151 = v43;
          uint64_t v86 = v85;
          uint64_t v145 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v86 = v130;
          swift_bridgeObjectRetain();
          uint64_t v87 = sub_F72B0();
          unint64_t v89 = v88;
          swift_bridgeObjectRelease();
          *(void *)(v86 + 4) = sub_A3FC(v87, v89, (uint64_t *)&v145);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v86 + 12) = 2080;
          uint64_t v91 = v149;
          unint64_t v90 = v150;
          swift_bridgeObjectRetain();
          *(void *)(v86 + 14) = sub_A3FC(v91, v90, (uint64_t *)&v145);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v83, v84, "Skipping path component %s in RCS URI %s: not a valid pair", (uint8_t *)v86, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v43 = v151;
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_25;
      }
      uint64_t v140 = v55;
      uint64_t v141 = v53;
      uint64_t v142 = v52;
      unint64_t v151 = v43;
      id v144 = v12;
      uint64_t v57 = v56[4];
      uint64_t v58 = v56[5];
      uint64_t v59 = v56[6];
      uint64_t v139 = v56[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v134 = v58;
      uint64_t v135 = v57;
      uint64_t v133 = v59;
      uint64_t v60 = sub_F72B0();
      os_log_type_t v62 = v61;
      v63._rawValue = &off_11EFC0;
      v154._uint64_t countAndFlagsBits = v60;
      v154._object = v62;
      unint64_t v64 = sub_F7A10(v63, v154);
      swift_bridgeObjectRelease();
      if (v64 >= 3)
      {
        swift_bridgeObjectRelease();
        if (qword_129070 != -1) {
          swift_once();
        }
        uint64_t v92 = sub_F70F0();
        sub_8B44(v92, (uint64_t)static Logger.rcs);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v93 = sub_F70D0();
        os_log_type_t v94 = sub_F7690();
        int v95 = v94;
        if (os_log_type_enabled(v93, v94))
        {
          uint64_t v96 = swift_slowAlloc();
          LODWORD(v139) = v95;
          uint64_t v97 = v96;
          uint64_t v145 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v97 = v125;
          swift_bridgeObjectRetain();
          uint64_t v98 = sub_F72B0();
          unint64_t v100 = v99;
          swift_bridgeObjectRelease();
          *(void *)(v97 + 4) = sub_A3FC(v98, v100, (uint64_t *)&v145);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v97 + 12) = 2080;
          uint64_t v102 = v149;
          unint64_t v101 = v150;
          swift_bridgeObjectRetain();
          *(void *)(v97 + 14) = sub_A3FC(v102, v101, (uint64_t *)&v145);
          swift_bridgeObjectRelease();
          *(_WORD *)(v97 + 22) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v103 = sub_F72B0();
          unint64_t v105 = v104;
          swift_bridgeObjectRelease();
          *(void *)(v97 + 24) = sub_A3FC(v103, v105, (uint64_t *)&v145);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v93, (os_log_type_t)v139, "Skipping path component %s in RCS URI %s: unknown part %s", (uint8_t *)v97, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v12 = v144;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_F72B0();
      uint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v68 = (uint64_t)v144;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v145 = (void *)v68;
      unint64_t v71 = sub_9D3B4(v64);
      uint64_t v72 = *(void *)(v68 + 16);
      BOOL v73 = (v70 & 1) == 0;
      uint64_t v74 = v72 + v73;
      if (__OFADD__(v72, v73))
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        break;
      }
      char v75 = v70;
      if (*(void *)(v68 + 24) >= v74)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v12 = v145;
          if ((v70 & 1) == 0) {
            goto LABEL_32;
          }
        }
        else
        {
          sub_E0578();
          uint64_t v12 = v145;
          if ((v75 & 1) == 0) {
            goto LABEL_32;
          }
        }
      }
      else
      {
        sub_DED1C(v74, isUniquelyReferenced_nonNull_native);
        uint64_t v76 = sub_9D3B4(v64);
        if ((v75 & 1) != (v77 & 1)) {
          goto LABEL_75;
        }
        unint64_t v71 = v76;
        uint64_t v12 = v145;
        if ((v75 & 1) == 0)
        {
LABEL_32:
          v12[(v71 >> 6) + 8] |= 1 << v71;
          *(unsigned char *)(v12[6] + v71) = v64;
          uint64_t v78 = (uint64_t *)(v12[7] + 16 * v71);
          *uint64_t v78 = v65;
          v78[1] = v67;
          uint64_t v79 = v12[2];
          BOOL v80 = __OFADD__(v79, 1);
          uint64_t v81 = v79 + 1;
          if (v80) {
            goto LABEL_71;
          }
          void v12[2] = v81;
          goto LABEL_47;
        }
      }
      id v106 = (uint64_t *)(v12[7] + 16 * v71);
      swift_bridgeObjectRelease();
      *id v106 = v65;
      v106[1] = v67;
LABEL_47:
      swift_bridgeObjectRelease();
LABEL_48:
      unint64_t v43 = v151;
LABEL_25:
      v50 += 4;
      if (!--v43) {
        goto LABEL_16;
      }
    }
  }
  __break(1u);
LABEL_75:
  sub_F7BA0();
  __break(1u);
}

uint64_t sub_EBD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)a1;
  unint64_t v4 = *(void *)(a1 + 8);
  BOOL v6 = *(void *)a1 == 7103860 && v4 == 0xE300000000000000;
  if (v6 || (sub_F7B60() & 1) != 0)
  {
    unint64_t v30 = v4;
    uint64_t v8 = *(void *)(a1 + 16);
    unint64_t v7 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_F71F0();
    swift_bridgeObjectRetain();
    int64_t v10 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)IMPhoneNumberRefCopyForPhoneNumber();

    id v12 = (id)IMNormalizedPhoneNumberForCFPhoneNumberRef();
    if (v12)
    {
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_F7220();
      unint64_t v7 = v15;

      unint64_t v16 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
      sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      char v20 = 0;
      unint64_t v4 = 0xE300000000000000;
      uint64_t v5 = 7103860;
    }
    else
    {
      uint64_t v29 = v8;
      if (qword_129070 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_F70F0();
      sub_8B44(v21, (uint64_t)static Logger.rcs);
      sub_5560(a1);
      swift_bridgeObjectRetain();
      sub_5560(a1);
      unint64_t v22 = sub_F70D0();
      os_log_type_t v23 = sub_F7690();
      if (os_log_type_enabled(v22, v23))
      {
        os_log_type_t type = v23;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315394;
        swift_bridgeObjectRetain();
        sub_A3FC(v29, v7, &v31);
        sub_F77B0();
        swift_bridgeObjectRelease();
        sub_6D20(a1);
        sub_6D20(a1);
        *(_WORD *)(v24 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_551C(&qword_128B88);
        uint64_t v25 = sub_F7270();
        sub_A3FC(v25, v26, &v31);
        sub_F77B0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v22, type, "Could not normalize phone number %s country code %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_6D20(a1);
        sub_6D20(a1);

        swift_bridgeObjectRelease_n();
      }
      char v20 = *(unsigned char *)(a1 + 56);
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 48);
      unint64_t v16 = *(void *)(a1 + 32);
      uint64_t result = sub_5560(a1);
      uint64_t v14 = v29;
      unint64_t v4 = v30;
    }
  }
  else
  {
    BOOL v27 = v5 == 0x6F746C69616DLL && v4 == 0xE600000000000000;
    if (v27 || (sub_F7B60() & 1) != 0)
    {
      uint64_t v14 = *(void *)(a1 + 16);
      unint64_t v7 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
      sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      char v20 = 0;
      unint64_t v4 = 0xE300000000000000;
      uint64_t v5 = 7367027;
    }
    else
    {
      char v20 = *(unsigned char *)(a1 + 56);
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 48);
      unint64_t v7 = *(void *)(a1 + 24);
      unint64_t v16 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t result = sub_5560(a1);
    }
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v19;
  *(unsigned char *)(a2 + 56) = v20;
  return result;
}

uint64_t sub_EC238@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  BOOL v8 = *(void *)a1 == 7103860 && v6 == 0xE300000000000000;
  if (!v8 && (sub_F7B60() & 1) == 0)
  {
    BOOL v30 = v7 == 0x6F746C69616DLL && v6 == 0xE600000000000000;
    if (v30 || (sub_F7B60() & 1) != 0)
    {
      uint64_t v11 = *(void *)(a1 + 16);
      unint64_t v12 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
      sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      char v23 = 0;
      unint64_t v6 = 0xE300000000000000;
      uint64_t v7 = 7367027;
      goto LABEL_24;
    }
    char v23 = *(unsigned char *)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 40);
    uint64_t v22 = *(void *)(a1 + 48);
    unint64_t v12 = *(void *)(a1 + 24);
    unint64_t v19 = *(void *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 16);
LABEL_23:
    uint64_t result = sub_5560(a1);
    goto LABEL_24;
  }
  a2();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(a1 + 16);
  unint64_t v12 = *(void *)(a1 + 24);
  unint64_t v13 = (void *)sub_F71F0();
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  unint64_t v15 = (void *)IMPhoneNumberRefCopyForPhoneNumber();

  id v16 = (id)IMNormalizedPhoneNumberForCFPhoneNumberRef();
  if (!v16)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_F70F0();
    sub_8B44(v24, (uint64_t)static Logger.rcs);
    sub_5560(a1);
    swift_bridgeObjectRetain();
    sub_5560(a1);
    uint64_t v25 = sub_F70D0();
    os_log_type_t v26 = sub_F7690();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_t log = v25;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      sub_A3FC(v11, v12, &v32);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6D20(a1);
      sub_6D20(a1);
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_551C(&qword_128B88);
      uint64_t v28 = sub_F7270();
      sub_A3FC(v28, v29, &v32);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, log, v26, "Could not normalize phone number %s country code %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_6D20(a1);
      sub_6D20(a1);

      swift_bridgeObjectRelease_n();
    }
    char v23 = *(unsigned char *)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 40);
    uint64_t v22 = *(void *)(a1 + 48);
    unint64_t v19 = *(void *)(a1 + 32);
    goto LABEL_23;
  }
  char v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_F7220();
  unint64_t v12 = v18;

  unint64_t v19 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
  sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  char v23 = 0;
  unint64_t v6 = 0xE300000000000000;
  uint64_t v7 = 7103860;
LABEL_24:
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v6;
  *(void *)(a3 + 16) = v11;
  *(void *)(a3 + 24) = v12;
  *(void *)(a3 + 32) = v19;
  *(void *)(a3 + 40) = v21;
  *(void *)(a3 + 48) = v22;
  *(unsigned char *)(a3 + 56) = v23;
  return result;
}

uint64_t sub_EC710@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  BOOL v8 = *(void *)a1 == 7103860 && v6 == 0xE300000000000000;
  if (!v8 && (sub_F7B60() & 1) == 0)
  {
    BOOL v34 = v7 == 0x6F746C69616DLL && v6 == 0xE600000000000000;
    if (v34 || (sub_F7B60() & 1) != 0)
    {
      uint64_t v15 = *(void *)(a1 + 16);
      unint64_t v16 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
      sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      char v27 = 0;
      unint64_t v6 = 0xE300000000000000;
      uint64_t v7 = 7367027;
      goto LABEL_27;
    }
    char v27 = *(unsigned char *)(a1 + 56);
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v26 = *(void *)(a1 + 48);
    unint64_t v16 = *(void *)(a1 + 24);
    unint64_t v23 = *(void *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 16);
LABEL_26:
    uint64_t result = sub_5560(a1);
    goto LABEL_27;
  }
  uint64_t v9 = a2();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    id v11 = [self sharedInstance];
    id v12 = [v11 copyIsoCountryCodeForSubscriptionContext:v10];

    sub_F7220();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *(void *)(a1 + 24);
  char v17 = (void *)sub_F71F0();
  if (v14)
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = (void *)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v18 = 0;
  }
  unint64_t v19 = (void *)IMPhoneNumberRefCopyForPhoneNumber();

  id v20 = (id)IMNormalizedPhoneNumberForCFPhoneNumberRef();
  if (!v20)
  {
    if (qword_129070 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_F70F0();
    sub_8B44(v28, (uint64_t)static Logger.rcs);
    sub_5560(a1);
    swift_bridgeObjectRetain();
    sub_5560(a1);
    unint64_t v29 = sub_F70D0();
    os_log_type_t v30 = sub_F7690();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_t log = v29;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_bridgeObjectRetain();
      sub_A3FC(v15, v16, &v36);
      sub_F77B0();
      swift_bridgeObjectRelease();
      sub_6D20(a1);
      sub_6D20(a1);
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_551C(&qword_128B88);
      uint64_t v32 = sub_F7270();
      sub_A3FC(v32, v33, &v36);
      sub_F77B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, log, v30, "Could not normalize phone number %s country code %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_6D20(a1);
      sub_6D20(a1);

      swift_bridgeObjectRelease_n();
    }
    char v27 = *(unsigned char *)(a1 + 56);
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v26 = *(void *)(a1 + 48);
    unint64_t v23 = *(void *)(a1 + 32);
    goto LABEL_26;
  }
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_F7220();
  unint64_t v16 = v22;

  unint64_t v23 = sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, (uint64_t (*)(uint64_t))sub_1C520);
  sub_E8ED8((uint64_t)_swiftEmptyArrayStorage, sub_9D3B4);
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  char v27 = 0;
  unint64_t v6 = 0xE300000000000000;
  uint64_t v7 = 7103860;
LABEL_27:
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v6;
  *(void *)(a3 + 16) = v15;
  *(void *)(a3 + 24) = v16;
  *(void *)(a3 + 32) = v23;
  *(void *)(a3 + 40) = v25;
  *(void *)(a3 + 48) = v26;
  *(unsigned char *)(a3 + 56) = v27;
  return result;
}

uint64_t _s7CoreRCS9RCSHandleV9AttributeO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_11F240;
  v6._object = a2;
  unint64_t v4 = sub_F7A10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_ECC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_128B88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_ECD00()
{
  unint64_t result = qword_12AD38;
  if (!qword_12AD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12AD38);
  }
  return result;
}

unint64_t sub_ECD58()
{
  unint64_t result = qword_12AD40;
  if (!qword_12AD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12AD40);
  }
  return result;
}

unint64_t sub_ECDB0()
{
  unint64_t result = qword_12AD48;
  if (!qword_12AD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12AD48);
  }
  return result;
}

unint64_t sub_ECE08()
{
  unint64_t result = qword_12AD50;
  if (!qword_12AD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12AD50);
  }
  return result;
}

unint64_t sub_ECE60()
{
  unint64_t result = qword_12AD58;
  if (!qword_12AD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12AD58);
  }
  return result;
}

uint64_t destroy for RCSHandle()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RCSHandle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RCSHandle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for RCSHandle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSHandle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RCSHandle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSHandle()
{
  return &type metadata for RCSHandle;
}

ValueMetadata *type metadata accessor for RCSHandle.Attribute()
{
  return &type metadata for RCSHandle.Attribute;
}

ValueMetadata *type metadata accessor for RCSHandle.BotStatus()
{
  return &type metadata for RCSHandle.BotStatus;
}

unsigned char *_s7CoreRCS9RCSHandleV9AttributeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xED228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSHandle.ParseError()
{
  return &type metadata for RCSHandle.ParseError;
}

uint64_t sub_ED260(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_12AD68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_ED2C0()
{
  unint64_t result = qword_12AD70;
  if (!qword_12AD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12AD70);
  }
  return result;
}

id static RCSSuggestedReply.imChipReply(from:)(void *a1)
{
  return sub_ED5E4(a1, &IMSuggestedReplyAttributeName, (Class *)IMChipReply_ptr);
}

id static RCSSuggestedAction.imChipAction(from:)(void *a1)
{
  return sub_ED5E4(a1, &IMSuggestedActionAttributeName, (Class *)IMChipAction_ptr);
}

id RCSSuggestedReply.responseForSuggestedReply.getter()
{
  return sub_ED384((Class *)CTLazuliChatBotResponseForSuggestedReply_ptr);
}

id RCSSuggestedAction.responseForSuggestedAction.getter()
{
  return sub_ED384((Class *)CTLazuliChatBotResponseForSuggestedAction_ptr);
}

id sub_ED384(Class *a1)
{
  id v3 = [objc_allocWithZone((Class)CTLazuliChatBotPostbackData) init];
  unsigned int v4 = *(void **)(v1 + 16);
  id v5 = [v4 suggestion];
  id v6 = [v5 postback];

  if (v6)
  {
    sub_F7220();
  }
  uint64_t v7 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  [v3 setData:v7];

  id v8 = [objc_allocWithZone(*a1) init];
  id v9 = [v4 suggestion];
  id v10 = [v9 displayText];

  if (!v10)
  {
    sub_F7220();
    id v10 = (id)sub_F71F0();
    swift_bridgeObjectRelease();
  }
  [v8 setDisplayText:v10];

  [v8 setPostBackData:v3];
  id v11 = [objc_allocWithZone((Class)CTLazuliMessageID) init];
  id v12 = [v4 suggestion];
  id v13 = [v12 inReplyToID];

  if (v13)
  {
    sub_F7220();
  }
  uint64_t v14 = (void *)sub_F71F0();
  swift_bridgeObjectRelease();
  [v11 setUuid:v14];

  [v8 setInReplyToID:v11];
  return v8;
}

id sub_ED5BC(void *a1)
{
  return sub_ED5E4(a1, &IMSuggestedReplyAttributeName, (Class *)IMChipReply_ptr);
}

id sub_ED5D0(void *a1)
{
  return sub_ED5E4(a1, &IMSuggestedActionAttributeName, (Class *)IMChipAction_ptr);
}

id sub_ED5E4(void *a1, id *a2, Class *a3)
{
  id v5 = [a1 body];
  if (!v5) {
    return 0;
  }
  id v6 = v5;
  id v7 = [v5 string];
  uint64_t v8 = sub_F7220();
  uint64_t v10 = v9;

  if (v8 == sub_F7220() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_F7B60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      goto LABEL_14;
    }
  }
  id v14 = [v6 attributesAtIndex:0 effectiveRange:0];
  type metadata accessor for Key(0);
  sub_ED86C();
  uint64_t v15 = sub_F71B0();

  if (!*(void *)(v15 + 16))
  {
    long long v23 = 0u;
    long long v24 = 0u;
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  id v16 = *a2;
  uint64_t v17 = sub_9D5A8();
  if ((v18 & 1) == 0)
  {
    long long v23 = 0u;
    long long v24 = 0u;

    goto LABEL_17;
  }
  sub_BAD8(*(void *)(v15 + 56) + 32 * v17, (uint64_t)&v23);

  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1))
  {
LABEL_18:

    sub_4A990((uint64_t)&v23);
    return 0;
  }
  sub_551C(&qword_128730);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:

    return 0;
  }
  id v19 = objc_allocWithZone(*a3);
  id v20 = (void *)sub_F71A0();
  swift_bridgeObjectRelease();
  id v21 = [v19 initWithDictionary:v20];

  return v21;
}

uint64_t type metadata accessor for RCSSuggestedReply()
{
  return self;
}

uint64_t type metadata accessor for RCSSuggestedAction()
{
  return self;
}

unint64_t sub_ED86C()
{
  unint64_t result = qword_1296A0;
  if (!qword_1296A0)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1296A0);
  }
  return result;
}

uint64_t IMDChatRCSGroupSnapshot.originalGroupID.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IMDChatRCSGroupSnapshot.originalGroupID.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*IMDChatRCSGroupSnapshot.originalGroupID.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t IMDChatRCSGroupSnapshot.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IMDChatRCSGroupSnapshot.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*IMDChatRCSGroupSnapshot.properties.modify())()
{
  return j__swift_endAccess;
}

void *IMDChatRCSGroupSnapshot.__allocating_init(originalGroupID:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (void *)swift_allocObject();
  v6[3] = 0;
  v6[4] = 0;
  _OWORD v6[2] = 0;
  swift_beginAccess();
  _OWORD v6[2] = a1;
  v6[3] = a2;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6[4] = a3;
  swift_bridgeObjectRelease();
  return v6;
}

void *IMDChatRCSGroupSnapshot.init(originalGroupID:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = 0;
  swift_beginAccess();
  v3[2] = a1;
  v3[3] = a2;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v3[4] = a3;
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Bool __swiftcall IMDChatRCSGroupSnapshot.updateProperties(_:)(Swift::OpaquePointer_optional a1)
{
  if (!a1.value._rawValue) {
    goto LABEL_63;
  }
  rawValue = a1.value._rawValue;
  unint64_t v43 = (char *)a1.value._rawValue + 64;
  uint64_t v3 = 1 << *((unsigned char *)a1.value._rawValue + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *((void *)a1.value._rawValue + 8);
  id v6 = (uint64_t *)(v1 + 32);
  id v7 = &v54[1];
  uint64_t v8 = &v58;
  int64_t v44 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v9 << 6);
LABEL_10:
      sub_1EBD4(rawValue[6] + 40 * v11, (uint64_t)&v52);
      sub_BAD8(rawValue[7] + 32 * v11, (uint64_t)v7);
      goto LABEL_29;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    if (v12 < v44)
    {
      unint64_t v13 = *(void *)&v43[8 * v12];
      if (v13) {
        goto LABEL_14;
      }
      int64_t v14 = v9 + 2;
      ++v9;
      if (v12 + 1 < v44)
      {
        unint64_t v13 = *(void *)&v43[8 * v14];
        if (v13) {
          goto LABEL_17;
        }
        int64_t v9 = v12 + 1;
        if (v12 + 2 < v44)
        {
          unint64_t v13 = *(void *)&v43[8 * v12 + 16];
          if (v13)
          {
            v12 += 2;
            goto LABEL_14;
          }
          int64_t v14 = v12 + 3;
          int64_t v9 = v12 + 2;
          if (v12 + 3 < v44) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = 0;
    memset(v54, 0, sizeof(v54));
    long long v52 = 0u;
    long long v53 = 0u;
LABEL_29:
    sub_1E74C((uint64_t)&v52, (uint64_t)&v55, &qword_1284D8);
    if (!*((void *)&v56 + 1))
    {
      swift_release();
      return 1;
    }
    long long v52 = v55;
    long long v53 = v56;
    v54[0] = v57;
    sub_1EBC4(v8, v51);
    sub_BAD8((uint64_t)v51, (uint64_t)v50);
    sub_EE1A0();
    if (swift_dynamicCast())
    {

      swift_beginAccess();
      if (!*v6) {
        goto LABEL_61;
      }
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_1C978((uint64_t)&v52);
      char v17 = v16;
      swift_bridgeObjectRelease();
      if (v17)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = *v6;
        *(void *)&v47[0] = *v6;
        *id v6 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_4306C();
          uint64_t v19 = *(void *)&v47[0];
        }
        sub_1EC30(*(void *)(v19 + 48) + 40 * v15);
        sub_1EBC4((_OWORD *)(*(void *)(v19 + 56) + 32 * v15), v50);
        sub_42300(v15, v19);
        *id v6 = v19;
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v50, 0, 32);
      }
      sub_1E944((uint64_t)v50, &qword_127FF8);
    }
    else
    {
      sub_1EBD4((uint64_t)&v52, (uint64_t)v50);
      sub_BAD8((uint64_t)v51, (uint64_t)&v48);
      swift_beginAccess();
      if (!*v6) {
        goto LABEL_62;
      }
      if (v49)
      {
        id v20 = v8;
        id v21 = v7;
        sub_1EBC4(&v48, v47);
        char v22 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = *v6;
        uint64_t v45 = (void *)*v6;
        *id v6 = 0x8000000000000000;
        unint64_t v25 = sub_1C978((uint64_t)v50);
        uint64_t v26 = *(void *)(v23 + 16);
        BOOL v27 = (v24 & 1) == 0;
        uint64_t v28 = v26 + v27;
        if (__OFADD__(v26, v27)) {
          goto LABEL_58;
        }
        char v29 = v24;
        if (*(void *)(v23 + 24) >= v28)
        {
          if (v22)
          {
            uint64_t v32 = v45;
            if ((v24 & 1) == 0) {
              goto LABEL_42;
            }
          }
          else
          {
            sub_4306C();
            uint64_t v32 = v45;
            if ((v29 & 1) == 0) {
              goto LABEL_42;
            }
          }
        }
        else
        {
          sub_41C2C(v28, v22);
          unint64_t v30 = sub_1C978((uint64_t)v50);
          if ((v29 & 1) != (v31 & 1)) {
            goto LABEL_64;
          }
          unint64_t v25 = v30;
          uint64_t v32 = v45;
          if ((v29 & 1) == 0)
          {
LABEL_42:
            v32[(v25 >> 6) + 8] |= 1 << v25;
            sub_1EBD4((uint64_t)v50, v32[6] + 40 * v25);
            sub_1EBC4(v47, (_OWORD *)(v32[7] + 32 * v25));
            uint64_t v33 = v32[2];
            BOOL v34 = __OFADD__(v33, 1);
            uint64_t v35 = v33 + 1;
            if (v34) {
              goto LABEL_59;
            }
            v32[2] = v35;
            goto LABEL_51;
          }
        }
        unint64_t v41 = (_OWORD *)(v32[7] + 32 * v25);
        sub_6BEC((uint64_t)v41);
        sub_1EBC4(v47, v41);
LABEL_51:
        *id v6 = (uint64_t)v32;
        swift_bridgeObjectRelease();
        sub_1EC30((uint64_t)v50);
        id v7 = v21;
        uint64_t v8 = v20;
        goto LABEL_7;
      }
      sub_1E944((uint64_t)&v48, &qword_127FF8);
      swift_bridgeObjectRetain();
      unint64_t v36 = sub_1C978((uint64_t)v50);
      char v38 = v37;
      swift_bridgeObjectRelease();
      if (v38)
      {
        char v39 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v40 = *v6;
        uint64_t v46 = *v6;
        *id v6 = 0x8000000000000000;
        if ((v39 & 1) == 0)
        {
          sub_4306C();
          uint64_t v40 = v46;
        }
        sub_1EC30(*(void *)(v40 + 48) + 40 * v36);
        sub_1EBC4((_OWORD *)(*(void *)(v40 + 56) + 32 * v36), v47);
        sub_42300(v36, v40);
        *id v6 = v40;
        swift_bridgeObjectRelease();
      }
      else
      {
        memset(v47, 0, sizeof(v47));
      }
      sub_1EC30((uint64_t)v50);
      sub_1E944((uint64_t)v47, &qword_127FF8);
    }
LABEL_7:
    swift_endAccess();
    sub_6BEC((uint64_t)v51);
    sub_1EC30((uint64_t)&v52);
  }
  unint64_t v13 = *(void *)&v43[8 * v14];
  if (v13)
  {
LABEL_17:
    int64_t v12 = v14;
LABEL_14:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v9 = v12;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v44)
    {
      int64_t v9 = v44 - 1;
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)&v43[8 * v12];
    ++v14;
    if (v13) {
      goto LABEL_14;
    }
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  Swift::Bool result = sub_F7BA0();
  __break(1u);
  return result;
}

unint64_t sub_EE1A0()
{
  unint64_t result = qword_12AEB8;
  if (!qword_12AEB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_12AEB8);
  }
  return result;
}

uint64_t IMDChatRCSGroupSnapshot.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t IMDChatRCSGroupSnapshot.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_EE248()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_EE298(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_EE2F0())()
{
  return j_j__swift_endAccess_0;
}

uint64_t sub_EE348()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_EE38C(Swift::OpaquePointer_optional a1)
{
  return 1;
}

void static IMDChatRCSGroupIdentity.encodeGroupID(_:)(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_EE454(a1, a2);
  unint64_t v6 = v5;
  id v7 = (void *)sub_F6E20();
  sub_2852C(v4, v6);
  id v8 = objc_msgSend(v7, "__imHexString");

  if (v8)
  {
    sub_F7220();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_EE454(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_551C(&qword_12AFA8);
  if (swift_dynamicCast())
  {
    sub_1E87C(v38, (uint64_t)&v41);
    sub_6BA8(&v41, v43);
    sub_F6D10();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    sub_6BEC((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_1E944((uint64_t)v38, &qword_12AFB0);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      id v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_F78E0();
      }
      if (v4) {
        unint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        unint64_t v6 = 0;
      }
      id v7 = (uint64_t *)v4;
    }
    id v8 = sub_F2448(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = sub_F72F0();
    goto LABEL_17;
  }
LABEL_69:
  id v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_F24AC(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_F1AE8((void *(*)(uint64_t *__return_ptr, char *, char *))sub_F254C);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_F6E00();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_F10CC(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_F7320();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_F78E0();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_F10CC(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_F7300();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_F6E10();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  id v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_F6E10();
    sub_F25B8(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_F25B8((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t static IMDChatRCSGroupIdentity.migrationEnabled.getter()
{
  return sub_EE9CC(&qword_1290C0, (uint64_t)qword_12A2B0);
}

uint64_t static IMDChatRCSGroupIdentity.legacyInteractionEnabled.getter()
{
  return sub_EE9CC(&qword_1290C8, (uint64_t)qword_12A2C8);
}

uint64_t sub_EE9CC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_551C(&qword_127C70);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_8B44(v4, a2);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_F6FF0();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return v10[15];
}

uint64_t sub_EEAFC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_6BA8(v0, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  if (!v3)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_10:
    sub_1E944((uint64_t)&v9, &qword_127FF8);
    return 0;
  }
  uint64_t v4 = v3;
  *(void *)&long long v9 = 0xD000000000000017;
  *((void *)&v9 + 1) = 0x8000000000104CF0;
  sub_F7860();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C978((uint64_t)v8), (v6 & 1) != 0))
  {
    sub_BAD8(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1EC30((uint64_t)v8);
  if (!*((void *)&v10 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast()) {
    return v8[0];
  }
  return 0;
}

uint64_t sub_EEC2C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_6BA8(v0, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  if (!v3)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_12:
    sub_1E944((uint64_t)&v9, &qword_127FF8);
    return 0;
  }
  uint64_t v4 = v3;
  *(void *)&long long v9 = 0x70756F7247534352;
  *((void *)&v9 + 1) = 0xEB00000000495255;
  sub_F7860();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C978((uint64_t)&v8), (v6 & 1) != 0))
  {
    sub_BAD8(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1EC30((uint64_t)&v8);
  if (!*((void *)&v10 + 1)) {
    goto LABEL_12;
  }
  if (swift_dynamicCast()) {
    return v8;
  }
  else {
    return 0;
  }
}

uint64_t sub_EED6C(uint64_t a1, uint64_t a2)
{
  sub_289D4(v2, (uint64_t)v11);
  uint64_t v5 = v11[4];
  sub_6BA8(v11, v11[3]);
  sub_551C(&qword_1284D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_F8F20;
  *(void *)&long long v9 = 0x70756F7247534352;
  *((void *)&v9 + 1) = 0xEB00000000495255;
  sub_F7860();
  if (a2)
  {
    long long v10 = &type metadata for String;
    *(void *)&long long v9 = a1;
    *((void *)&v9 + 1) = a2;
    sub_1EBC4(&v9, (_OWORD *)(inited + 72));
  }
  else
  {
    id v7 = objc_msgSend(objc_allocWithZone((Class)NSNull), "init", (void)v9, *((void *)&v9 + 1));
    *(void *)(inited + 96) = sub_EE1A0();
    *(void *)(inited + 72) = v7;
  }
  sub_4AFC4(inited);
  (*(void (**)(void))(v5 + 40))();
  swift_bridgeObjectRelease();
  return sub_6BEC((uint64_t)v11);
}

void sub_EEEB4(unint64_t a1, unint64_t a2)
{
  sub_289D4(v2, (uint64_t)v14);
  uint64_t v5 = v15;
  uint64_t v6 = v16;
  sub_6BA8(v14, v15);
  if (!a2)
  {
    uint64_t v13 = 0;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_EE454(a1, a2);
  unint64_t v9 = v8;
  long long v10 = (void *)sub_F6E20();
  sub_2852C(v7, v9);
  id v11 = objc_msgSend(v10, "__imHexString");

  if (v11)
  {
    a1 = sub_F7220();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();

LABEL_5:
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v13, v5, v6);
    sub_6BEC((uint64_t)v14);
    return;
  }
  __break(1u);
}

uint64_t IMDChatRCSGroupIdentity.isValid.getter()
{
  uint64_t v1 = sub_551C(&qword_127C70);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_EEAFC();
  if (v5 != 1)
  {
    if (!v5)
    {
      if (qword_1290C8 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_8B44(v1, (uint64_t)qword_12A2C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
      sub_F6FF0();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      if (v25[0] == 1)
      {
        IMDChatRCSGroupIdentity.uri.getter((uint64_t)v24);
        sub_1E74C((uint64_t)v24, (uint64_t)v25, &qword_127C58);
        if (v26)
        {
          sub_F2014((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
          return 1;
        }
      }
    }
    return 0;
  }
  IMDChatRCSGroupIdentity.uri.getter((uint64_t)v24);
  sub_F2014((uint64_t)v24, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
  sub_61854(v0, (uint64_t)v21);
  sub_1E74C((uint64_t)v24, (uint64_t)v25, &qword_127C58);
  if (!v26)
  {
    sub_6AA0((uint64_t)v21);
    return 0;
  }
  if (sub_EEAFC() == 1
    && (uint64_t v8 = v22, v9 = v23, sub_6BA8(v21, v22), (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9), v10))
  {
    id v11 = self;
    uint64_t v12 = (void *)sub_F71F0();
    unint64_t v7 = (unint64_t)objc_msgSend(v11, "__imDataWithHexString:", v12);

    if (v7)
    {
      uint64_t v13 = sub_F6E30();
      unint64_t v15 = v14;

      uint64_t v16 = sub_F7250();
      __chkstk_darwin(v16 - 8);
      sub_F7240();
      sub_F7230();
      uint64_t v18 = v17;
      sub_2852C(v13, v15);
      unint64_t v7 = v18 != 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = 0;
  }
  sub_6AA0((uint64_t)v21);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t IMDChatRCSGroupIdentity.uri.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_551C(&qword_127C70);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_EEAFC();
  long long v8 = 0uLL;
  if (result == 1)
  {
    uint64_t result = sub_EEC2C();
    unint64_t v22 = v23;
    if (!v23)
    {
LABEL_14:
      id v15 = 0;
LABEL_20:
      uint64_t v25 = 0;
      char v26 = 0;
      long long v24 = 0uLL;
      long long v8 = 0uLL;
      goto LABEL_21;
    }
    uint64_t v20 = result;
    goto LABEL_12;
  }
  if (!result)
  {
    if (qword_1290C8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_8B44(v3, (uint64_t)qword_12A2C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
    sub_F6FF0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (LOBYTE(v29[0]) != 1
      || (uint64_t v10 = v1[3],
          uint64_t v11 = v1[4],
          sub_6BA8(v1, v10),
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11),
          !v12))
    {
LABEL_18:
      id v15 = 0;
LABEL_19:
      unint64_t v22 = 0;
      goto LABEL_20;
    }
    uint64_t v13 = self;
    unint64_t v14 = (void *)sub_F71F0();
    id v15 = objc_msgSend(v13, "__imDataWithHexString:", v14);

    if (!v15)
    {
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v16 = sub_F6E30();
    unint64_t v18 = v17;

    uint64_t v19 = sub_F7250();
    __chkstk_darwin(v19 - 8);
    sub_F7240();
    uint64_t v20 = sub_F7230();
    unint64_t v22 = v21;
    sub_2852C(v16, v18);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v22) {
      goto LABEL_14;
    }
LABEL_12:
    sub_EAF1C(v20, v22, 0, 0, 0, v29);
    id v15 = (id)v29[0];
    unint64_t v22 = v29[1];
    uint64_t v25 = v29[2];
    long long v27 = v30;
    long long v28 = v31;
    char v26 = v32;
    uint64_t result = RCSHandle.couldBeGroupURI.getter();
    if (result)
    {
      long long v8 = v27;
      long long v24 = v28;
      goto LABEL_21;
    }
    uint64_t result = sub_6D20((uint64_t)v29);
    goto LABEL_18;
  }
  id v15 = 0;
  unint64_t v22 = 0;
  uint64_t v25 = 0;
  char v26 = 0;
  long long v24 = 0uLL;
LABEL_21:
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v22;
  *(void *)(a1 + 16) = v25;
  *(_OWORD *)(a1 + 24) = v8;
  *(_OWORD *)(a1 + 40) = v24;
  *(unsigned char *)(a1 + 56) = v26;
  return result;
}

id IMDChatRCSGroupIdentity.conversationID.getter()
{
  if (sub_EEAFC() != 1) {
    return 0;
  }
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_6BA8(v0, v1);
  id v3 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  if (v4)
  {
    uint64_t v5 = self;
    uint64_t v6 = (void *)sub_F71F0();
    id v3 = objc_msgSend(v5, "__imDataWithHexString:", v6);

    if (v3)
    {
      uint64_t v7 = sub_F6E30();
      unint64_t v9 = v8;

      uint64_t v10 = sub_F7250();
      __chkstk_darwin(v10 - 8);
      sub_F7240();
      id v3 = (id)sub_F7230();
      uint64_t v12 = v11;
      sub_2852C(v7, v9);
      swift_bridgeObjectRelease();
      if (!v12) {
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v3;
}

void IMDChatRCSGroupIdentity.uri.setter(uint64_t a1)
{
  uint64_t v2 = sub_551C(&qword_127C70);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E74C(a1, (uint64_t)v12, &qword_127C58);
  if (*((void *)&v12[0] + 1))
  {
    _OWORD v13[2] = v12[0];
    v13[3] = v12[1];
    v14[0] = v13[0];
    *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)v13 + 9);
    uint64_t v6 = RCSHandle.rawValue.getter();
    unint64_t v8 = v7;
    sub_F2014(a1, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0;
  }
  uint64_t v9 = sub_EEAFC();
  if (v9 == 1)
  {
    sub_EED6C(v6, v8);
  }
  else
  {
    if (v9) {
      goto LABEL_10;
    }
    if (qword_1290C8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_8B44(v2, (uint64_t)qword_12A2C8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
    sub_F6FF0();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    if (v11[15] != 1) {
LABEL_10:
    }
      swift_bridgeObjectRelease();
    else {
      sub_EEEB4(v6, v8);
    }
  }
}

void (*IMDChatRCSGroupIdentity.uri.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x108uLL);
  *a1 = v3;
  uint64_t v4 = (uint64_t)(v3 + 16);
  uint64_t v5 = (uint64_t)(v3 + 24);
  v3[32] = v1;
  IMDChatRCSGroupIdentity.uri.getter((uint64_t)(v3 + 16));
  sub_1E74C(v4, v5, &qword_127C58);
  return sub_EFA70;
}

void sub_EFA70(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)(*a1 + 24);
  if (a2)
  {
    sub_1E74C(v3, (uint64_t)v2, &qword_127C58);
    sub_F2014((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void))sub_36E1C);
    IMDChatRCSGroupIdentity.uri.setter((uint64_t)v2);
    sub_6DB0(v2[24], v2[25]);
  }
  else
  {
    sub_1E74C(v3, (uint64_t)(v2 + 8), &qword_127C58);
    IMDChatRCSGroupIdentity.uri.setter((uint64_t)(v2 + 8));
  }

  free(v2);
}

void IMDChatRCSGroupIdentity.conversationID.setter(unint64_t a1, unint64_t a2)
{
  if (sub_EEAFC() == 1)
  {
    sub_EEEB4(a1, a2);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void (*IMDChatRCSGroupIdentity.conversationID.modify(id *a1))(unint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = IMDChatRCSGroupIdentity.conversationID.getter();
  a1[1] = v3;
  return sub_EFBE0;
}

void sub_EFBE0(unint64_t *a1, char a2)
{
  unint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    if (sub_EEAFC() == 1) {
      sub_EEEB4(v3, v2);
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  else if (sub_EEAFC() == 1)
  {
    sub_EEEB4(v3, v2);
    return;
  }

  swift_bridgeObjectRelease();
}

uint64_t IMDChatRCSGroupIdentity.init(chat:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E87C(a1, a2);
}

uint64_t IMDChatRCSGroupIdentity.init(chat:conversationID:groupURI:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, CoreRCS::RCSHandle *a4@<X3>, uint64_t a5@<X8>)
{
  sub_289D4(a1, a5);
  if (a3)
  {
    v9._uint64_t countAndFlagsBits = a2;
    v9._object = a3;
    IMDChatRCSGroupIdentity.migrateToLatest(conversationID:groupURI:)(v9, a4);
    sub_6D20((uint64_t)a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    IMDChatRCSGroupIdentity.migrateToLegacy(groupURI:)(a4);
    sub_6D20((uint64_t)a4);
  }
  return sub_6BEC(a1);
}

Swift::Void __swiftcall IMDChatRCSGroupIdentity.migrateToLatest(conversationID:groupURI:)(Swift::String conversationID, CoreRCS::RCSHandle *groupURI)
{
  unint64_t v3 = v2;
  object = conversationID._object;
  unint64_t countAndFlagsBits = conversationID._countAndFlagsBits;
  uint64_t v7 = groupURI->scheme._countAndFlagsBits;
  uint64_t v6 = groupURI->scheme._object;
  uint64_t v78 = groupURI->id._countAndFlagsBits;
  uint64_t v79 = v6;
  long long v80 = *(_OWORD *)&groupURI->id._object;
  uint64_t v8 = groupURI->alternateHandle.value._countAndFlagsBits;
  uint64_t v76 = groupURI->alternateHandle.value._object;
  uint64_t v77 = v8;
  int botStatus = groupURI->botStatus;
  uint64_t v9 = sub_551C(&qword_127C70);
  uint64_t v82 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v81 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_EEAFC() != 1
    || sub_EEAFC() != 1
    || (uint64_t v11 = v2[3], v12 = v2[4],
                     sub_6BA8(v2, v11),
                     (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12),
                     !v13))
  {
LABEL_23:
    uint64_t v35 = v3[4];
    sub_6BA8(v3, v3[3]);
    sub_551C(&qword_1284D0);
    uint64_t inited = swift_initStackObject();
    long long v80 = xmmword_F8F20;
    *(_OWORD *)(inited + 16) = xmmword_F8F20;
    uint64_t v84 = 0xD000000000000017;
    unint64_t v85 = 0x8000000000104CF0;
    sub_F7860();
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 72) = 1;
    sub_4AFC4(inited);
    (*(void (**)(void))(v35 + 40))();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if (sub_EEAFC() == 1)
    {
      uint64_t v74 = v9;
      sub_289D4((uint64_t)v3, (uint64_t)&v84);
      uint64_t v38 = v87;
      uint64_t v37 = v88;
      uint64_t v79 = sub_6BA8(&v84, v87);
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_EE454(countAndFlagsBits, (unint64_t)object);
      unint64_t v41 = v40;
      uint64_t v42 = (void *)sub_F6E20();
      sub_2852C(v39, v41);
      id v43 = objc_msgSend(v42, "__imHexString");

      if (!v43)
      {
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v44 = sub_F7220();
      uint64_t v46 = v45;
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 16))(v44, v46, v38, v37);
      sub_6BEC((uint64_t)&v84);
      uint64_t v9 = v74;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_5560((uint64_t)groupURI);
    unint64_t v47 = RCSHandle.rawValue.getter();
    unint64_t v49 = v48;
    sub_6D20((uint64_t)groupURI);
    uint64_t v50 = sub_EEAFC();
    if (v50 == 1)
    {
      uint64_t v64 = v3[3];
      uint64_t v65 = v3[4];
      sub_6BA8(v3, v64);
      uint64_t v66 = swift_initStackObject();
      *(_OWORD *)(v66 + 16) = v80;
      uint64_t v84 = 0x70756F7247534352;
      unint64_t v85 = 0xEB00000000495255;
      sub_F7860();
      *(void *)(v66 + 96) = &type metadata for String;
      *(void *)(v66 + 72) = v47;
      *(void *)(v66 + 80) = v49;
      unint64_t v67 = sub_4AFC4(v66);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v65 + 40))(v67, v64, v65);
    }
    else if (!v50)
    {
      if (qword_1290C8 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_8B44(v9, (uint64_t)qword_12A2C8);
      long long v52 = v81;
      uint64_t v53 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v51, v9);
      sub_F6FF0();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v9);
      if (v84 == 1)
      {
        sub_289D4((uint64_t)v3, (uint64_t)&v84);
        uint64_t v54 = v87;
        uint64_t v55 = v88;
        sub_6BA8(&v84, v87);
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_EE454(v47, v49);
        unint64_t v58 = v57;
        uint64_t v59 = (void *)sub_F6E20();
        sub_2852C(v56, v58);
        id v60 = objc_msgSend(v59, "__imHexString");

        if (v60)
        {
          uint64_t v61 = sub_F7220();
          uint64_t v63 = v62;
          swift_bridgeObjectRelease();

          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 16))(v61, v63, v54, v55);
          sub_6BEC((uint64_t)&v84);
LABEL_37:
          uint64_t v68 = v3[3];
          uint64_t v69 = v3[4];
          sub_6BA8(v3, v68);
          (*(void (**)(uint64_t, uint64_t))(v69 + 48))(v68, v69);
          return;
        }
LABEL_39:
        __break(1u);
        return;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  unint64_t v14 = self;
  id v15 = (void *)sub_F71F0();
  id v16 = objc_msgSend(v14, "__imDataWithHexString:", v15);

  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v17 = sub_F6E30();
  uint64_t v72 = v7;
  uint64_t v18 = v17;
  uint64_t v74 = v9;
  unint64_t v20 = v19;

  uint64_t v21 = sub_F7250();
  BOOL v73 = &v70;
  __chkstk_darwin(v21 - 8);
  sub_F7240();
  uint64_t v22 = sub_F7230();
  long long v24 = v23;
  unint64_t v25 = v20;
  uint64_t v9 = v74;
  sub_2852C(v18, v25);
  swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_23;
  }
  if (v22 == countAndFlagsBits && v24 == object)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_F7B60();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      goto LABEL_23;
    }
  }
  IMDChatRCSGroupIdentity.uri.getter((uint64_t)v99);
  uint64_t v27 = v99[0];
  long long v28 = (void *)v99[1];
  uint64_t v29 = v99[2];
  long long v30 = (void *)v99[3];
  uint64_t v31 = v99[4];
  BOOL v73 = (uint64_t *)v99[5];
  uint64_t v71 = v99[6];
  char v32 = v100;
  sub_1E74C((uint64_t)v99, (uint64_t)v101, &qword_127C58);
  if (!v102)
  {
    uint64_t v84 = v27;
    unint64_t v85 = (unint64_t)v28;
    uint64_t v86 = v29;
    uint64_t v87 = (uint64_t)v30;
    uint64_t v88 = v31;
    unint64_t v89 = v73;
    uint64_t v90 = v71;
    char v91 = v32;
    uint64_t v92 = v72;
    long long v93 = v79;
    uint64_t v94 = v78;
    long long v95 = v80;
    uint64_t v96 = v77;
    uint64_t v97 = v76;
    char v98 = botStatus;
    sub_5560((uint64_t)groupURI);
    sub_F2058(&v84);
LABEL_22:
    uint64_t v9 = v74;
    goto LABEL_23;
  }
  if ((v27 != groupURI->scheme._countAndFlagsBits || v28 != groupURI->scheme._object) && (sub_F7B60() & 1) == 0
    || (v29 != groupURI->id._countAndFlagsBits || v30 != groupURI->id._object) && (sub_F7B60() & 1) == 0)
  {
    sub_F2014((uint64_t)v99, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
    goto LABEL_22;
  }
  rawValue = groupURI->attributes._rawValue;
  sub_5560((uint64_t)groupURI);
  char v34 = sub_E9D7C(v31, (uint64_t)rawValue);
  sub_6D20((uint64_t)groupURI);
  sub_F2014((uint64_t)v99, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
  uint64_t v9 = v74;
  if ((v34 & 1) == 0) {
    goto LABEL_23;
  }
}

Swift::Void __swiftcall IMDChatRCSGroupIdentity.migrateToLegacy(groupURI:)(CoreRCS::RCSHandle *groupURI)
{
  unint64_t v2 = v1;
  uint64_t countAndFlagsBits = groupURI->scheme._countAndFlagsBits;
  object = groupURI->scheme._object;
  uint64_t v6 = groupURI->id._countAndFlagsBits;
  long long v67 = *(_OWORD *)&groupURI->id._object;
  uint64_t v7 = groupURI->alternateHandle.value._countAndFlagsBits;
  uint64_t v8 = groupURI->alternateHandle.value._object;
  int botStatus = groupURI->botStatus;
  uint64_t v10 = sub_551C(&qword_127C70);
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_EEAFC())
  {
    int v62 = botStatus;
    uint64_t v63 = v8;
    uint64_t v64 = v7;
    uint64_t v65 = v6;
    uint64_t v66 = object;
    if (sub_EEAFC() == 1)
    {
      uint64_t v32 = v1[3];
      uint64_t v33 = v1[4];
      sub_6BA8(v1, v32);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
      if (v34)
      {
        uint64_t v35 = self;
        unint64_t v36 = (void *)sub_F71F0();
        id v37 = objc_msgSend(v35, "__imDataWithHexString:", v36);

        if (v37)
        {
          uint64_t v38 = sub_F6E30();
          unint64_t v40 = v39;

          uint64_t v41 = sub_F7250();
          __chkstk_darwin(v41 - 8);
          sub_F7240();
          sub_F7230();
          uint64_t v43 = v42;
          sub_2852C(v38, v40);
          swift_bridgeObjectRelease();
          if (v43)
          {
            swift_bridgeObjectRelease();
            goto LABEL_2;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    uint64_t v61 = countAndFlagsBits;
    IMDChatRCSGroupIdentity.uri.getter((uint64_t)v86);
    uint64_t v50 = v86[0];
    uint64_t v51 = (void *)v86[1];
    uint64_t v53 = v86[2];
    long long v52 = (void *)v86[3];
    uint64_t v54 = v86[4];
    uint64_t v60 = v86[5];
    uint64_t v55 = v86[6];
    char v56 = v87;
    sub_1E74C((uint64_t)v86, (uint64_t)v88, &qword_127C58);
    if (v89)
    {
      if (v50 == groupURI->scheme._countAndFlagsBits && v51 == groupURI->scheme._object || (sub_F7B60())
        && (v53 == groupURI->id._countAndFlagsBits && v52 == groupURI->id._object || (sub_F7B60() & 1) != 0))
      {
        rawValue = groupURI->attributes._rawValue;
        sub_5560((uint64_t)groupURI);
        char v58 = sub_E9D7C(v54, (uint64_t)rawValue);
        sub_6D20((uint64_t)groupURI);
        sub_F2014((uint64_t)v86, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
        if (v58) {
          return;
        }
      }
      else
      {
        sub_F2014((uint64_t)v86, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
      }
    }
    else
    {
      uint64_t v71 = v50;
      unint64_t v72 = (unint64_t)v51;
      uint64_t v73 = v53;
      uint64_t v74 = (uint64_t)v52;
      uint64_t v75 = v54;
      uint64_t v76 = v60;
      uint64_t v77 = v55;
      char v78 = v56;
      uint64_t v79 = v61;
      long long v80 = v66;
      uint64_t v81 = v65;
      long long v82 = v67;
      uint64_t v83 = v64;
      uint64_t v84 = v63;
      char v85 = v62;
      sub_5560((uint64_t)groupURI);
      sub_F2058(&v71);
    }
  }
LABEL_2:
  uint64_t v12 = v2[4];
  sub_6BA8(v2, v2[3]);
  sub_551C(&qword_1284D0);
  uint64_t inited = swift_initStackObject();
  long long v67 = xmmword_F8F20;
  *(_OWORD *)(inited + 16) = xmmword_F8F20;
  uint64_t v71 = 0xD000000000000017;
  unint64_t v72 = 0x8000000000104CF0;
  sub_F7860();
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 72) = 0;
  sub_4AFC4(inited);
  (*(void (**)(void))(v12 + 40))();
  swift_bridgeObjectRelease();
  sub_5560((uint64_t)groupURI);
  unint64_t v14 = RCSHandle.rawValue.getter();
  unint64_t v16 = v15;
  sub_6D20((uint64_t)groupURI);
  uint64_t v17 = sub_EEAFC();
  if (v17 == 1)
  {
    uint64_t v44 = v2[3];
    uint64_t v45 = v2[4];
    sub_6BA8(v2, v44);
    uint64_t v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = v67;
    uint64_t v71 = 0x70756F7247534352;
    unint64_t v72 = 0xEB00000000495255;
    sub_F7860();
    *(void *)(v46 + 96) = &type metadata for String;
    *(void *)(v46 + 72) = v14;
    *(void *)(v46 + 80) = v16;
    unint64_t v47 = sub_4AFC4(v46);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 40))(v47, v44, v45);
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v17) {
    goto LABEL_16;
  }
  if (qword_1290C8 != -1) {
    swift_once();
  }
  uint64_t v18 = v70;
  uint64_t v19 = sub_8B44(v70, (uint64_t)qword_12A2C8);
  unint64_t v20 = v68;
  uint64_t v21 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v19, v18);
  sub_F6FF0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v18);
  if (v71 != 1) {
    goto LABEL_16;
  }
  sub_289D4((uint64_t)v2, (uint64_t)&v71);
  uint64_t v22 = v74;
  uint64_t v23 = v75;
  sub_6BA8(&v71, v74);
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_EE454(v14, v16);
  unint64_t v26 = v25;
  uint64_t v27 = (void *)sub_F6E20();
  sub_2852C(v24, v26);
  id v28 = objc_msgSend(v27, "__imHexString");

  if (v28)
  {
    uint64_t v29 = sub_F7220();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16))(v29, v31, v22, v23);
    sub_6BEC((uint64_t)&v71);
LABEL_17:
    uint64_t v48 = v2[3];
    uint64_t v49 = v2[4];
    sub_6BA8(v2, v48);
    (*(void (**)(uint64_t, uint64_t))(v49 + 48))(v48, v49);
    return;
  }
  __break(1u);
}

uint64_t IMDChatRCSGroupIdentity.converge(identity:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_6BA8(a1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    sub_6BA8(a1, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v14, v8, v9);
    sub_1E74C((uint64_t)v14, (uint64_t)v18, &qword_127C58);
    if (*((void *)&v18[0] + 1))
    {
      groupURI.scheme = (Swift::String)v18[0];
      groupURI.id = (Swift::String)v18[1];
      *(_OWORD *)&groupURI.attributes._rawValue = v19[0];
      *(Swift::String_optional *)((char *)&groupURI.alternateHandle + 1) = *(Swift::String_optional *)((char *)v19 + 9);
      v10._uint64_t countAndFlagsBits = v6;
      v10._object = v7;
      IMDChatRCSGroupIdentity.migrateToLatest(conversationID:groupURI:)(v10, &groupURI);
      sub_F2014((uint64_t)v14, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_6BA8(a1, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v15, v12, v13);
  uint64_t result = sub_1E74C((uint64_t)v15, (uint64_t)v16, &qword_127C58);
  if (*((void *)&v16[0] + 1))
  {
    groupURI.scheme = (Swift::String)v16[0];
    groupURI.id = (Swift::String)v16[1];
    *(_OWORD *)&groupURI.attributes._rawValue = v17[0];
    *(Swift::String_optional *)((char *)&groupURI.alternateHandle + 1) = *(Swift::String_optional *)((char *)v17 + 9);
    IMDChatRCSGroupIdentity.migrateToLegacy(groupURI:)(&groupURI);
    return sub_F2014((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void))sub_6DB0);
  }
  return result;
}

Swift::Void __swiftcall IMDChatRCSGroupIdentity.reset()()
{
  uint64_t v1 = sub_551C(&qword_127C70);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_EEAFC() == 1)
  {
    uint64_t v5 = v0[3];
    uint64_t v6 = v0[4];
    sub_6BA8(v0, v5);
    (*(void (**)(void, void, uint64_t, uint64_t))(v6 + 16))(0, 0, v5, v6);
  }
  uint64_t v7 = sub_EEAFC();
  if (v7 == 1)
  {
    sub_EED6C(0, 0);
  }
  else if (!v7)
  {
    if (qword_1290C8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_8B44(v1, (uint64_t)qword_12A2C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
    sub_F6FF0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v17 == 1)
    {
      uint64_t v9 = v0[3];
      uint64_t v10 = v0[4];
      sub_6BA8(v0, v9);
      (*(void (**)(void, void, uint64_t, uint64_t))(v10 + 16))(0, 0, v9, v10);
    }
  }
  uint64_t v11 = v0[4];
  sub_6BA8(v0, v0[3]);
  sub_551C(&qword_1284D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_F8F20;
  unint64_t v17 = 0xD000000000000017;
  unint64_t v18 = 0x8000000000104CF0;
  sub_F7860();
  id v13 = [objc_allocWithZone((Class)NSNull) init];
  *(void *)(inited + 96) = sub_EE1A0();
  *(void *)(inited + 72) = v13;
  sub_4AFC4(inited);
  (*(void (**)(void))(v11 + 40))();
  swift_bridgeObjectRelease();
  uint64_t v14 = v0[3];
  uint64_t v15 = v0[4];
  sub_6BA8(v0, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
}

uint64_t sub_F1084@<X0>(uint64_t a1@<X8>)
{
  IMDChatRCSGroupIdentity.uri.getter((uint64_t)v3);
  return sub_1E74C((uint64_t)v3, a1, &qword_127C58);
}

uint64_t sub_F10CC(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_F7330();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_F7310();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_F1148(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_F7C20();
        swift_bridgeObjectRetain();
        sub_F72C0();
        Swift::Int v9 = sub_F7C50();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_F1324(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v31 = v4;
      uint64_t v32 = v2;
      unint64_t v30 = (result + 1) & v7;
      do
      {
        unint64_t v8 = v6 << 6;
        unint64_t v9 = *(void *)(v2 + 48) + (v6 << 6);
        uint64_t v10 = *(void *)(v9 + 32);
        uint64_t v11 = *(void *)(v9 + 48);
        Swift::UInt v12 = *(unsigned __int8 *)(v9 + 56);
        sub_F7C20();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_F72C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_F72C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_EAC58((uint64_t)v33, v10);
        swift_bridgeObjectRelease();
        if (v11)
        {
          sub_F7C40(1u);
          swift_bridgeObjectRetain();
          sub_F72C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_F7C40(0);
        }
        sub_F7C30(v12);
        Swift::Int v13 = sub_F7C50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v14 = v13 & v7;
        uint64_t v2 = v32;
        uint64_t v4 = v31;
        if (v3 >= (uint64_t)v30)
        {
          if (v14 < v30) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v30)
        {
          goto LABEL_14;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_14:
          uint64_t v15 = *(void *)(v32 + 48);
          uint64_t v16 = (long long *)(v15 + (v3 << 6));
          unint64_t v17 = (long long *)(v15 + v8);
          if (v3 << 6 != v8 || v16 >= v17 + 4)
          {
            long long v18 = *v17;
            long long v19 = v17[1];
            long long v20 = v17[3];
            _OWORD v16[2] = v17[2];
            v16[3] = v20;
            *uint64_t v16 = v18;
            v16[1] = v19;
          }
          uint64_t v21 = *(void *)(v32 + 56);
          uint64_t v22 = (_OWORD *)(v21 + 16 * v3);
          uint64_t v23 = (_OWORD *)(v21 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v22 >= v23 + 1))
          {
            *uint64_t v22 = *v23;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v31 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << result) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(v2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v29;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_F15FC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_F7C20();
        swift_bridgeObjectRetain();
        sub_F72C0();
        Swift::Int v10 = sub_F7C50();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    long long v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *long long v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_F17D4(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_F7820();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v30 = v4;
      uint64_t v31 = v2;
      unint64_t v29 = (result + 1) & v7;
      while (1)
      {
        int64_t v32 = v3;
        unint64_t v8 = v6 << 6;
        unint64_t v9 = *(void *)(v2 + 48) + (v6 << 6);
        uint64_t v10 = *(void *)(v9 + 32);
        uint64_t v11 = *(void *)(v9 + 48);
        Swift::UInt v12 = *(unsigned __int8 *)(v9 + 56);
        sub_F7C20();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_F72C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_F72C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_EAC58((uint64_t)v33, v10);
        swift_bridgeObjectRelease();
        if (v11)
        {
          sub_F7C40(1u);
          swift_bridgeObjectRetain();
          sub_F72C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_F7C40(0);
        }
        sub_F7C30(v12);
        Swift::Int v13 = sub_F7C50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = v30;
        unint64_t v14 = v13 & v7;
        uint64_t v2 = v31;
        if (v3 >= (uint64_t)v29) {
          break;
        }
        if (v14 < v29) {
          goto LABEL_14;
        }
LABEL_15:
        uint64_t v15 = *(void *)(v31 + 48);
        uint64_t v16 = (long long *)(v15 + (v3 << 6));
        unint64_t v17 = (long long *)(v15 + v8);
        if (v3 << 6 != v8 || v16 >= v17 + 4)
        {
          long long v18 = *v17;
          long long v19 = v17[1];
          long long v20 = v17[3];
          _OWORD v16[2] = v17[2];
          v16[3] = v20;
          *uint64_t v16 = v18;
          v16[1] = v19;
        }
        uint64_t v21 = *(void *)(v31 + 56);
        uint64_t v22 = *(void *)(*(void *)(type metadata accessor for TypingIndicator() - 8) + 72);
        uint64_t result = v21 + v22 * v3;
        if (v22 * v3 < (uint64_t)(v22 * v6) || result >= v21 + v22 * v6 + v22)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v22 * v32 == v22 * v6) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v30 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_22;
        }
      }
      if (v14 < v29) {
        goto LABEL_6;
      }
LABEL_14:
      if (v3 < (uint64_t)v14) {
        goto LABEL_6;
      }
      goto LABEL_15;
    }
LABEL_22:
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(v2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v28;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

char *sub_F1AE8(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_F8DC0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_F6C80() && __OFSUB__((int)v4, sub_F6CB0())) {
        goto LABEL_24;
      }
      sub_F6CC0();
      swift_allocObject();
      uint64_t v13 = sub_F6C60();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_F1ED4((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_F6DD0();
      uint64_t result = sub_F1ED4(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_F1DEC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_F2284(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_F2348((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_F23C4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_F1E64(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_F1ED4(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_F6C80();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_F6CB0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_F6CA0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_F1F88@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_F78B0();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_F2014(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t *sub_F2058(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  sub_6DB0(*a1, a1[1]);
  sub_6DB0(v2, v3);
  return a1;
}

uint64_t type metadata accessor for IMDChatRCSGroupSnapshot()
{
  return self;
}

uint64_t destroy for IMDChatRCSGroupIdentity(uint64_t a1)
{
  return sub_6BEC(a1);
}

uint64_t initializeWithCopy for IMDChatRCSGroupIdentity(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for IMDChatRCSGroupIdentity(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for IMDChatRCSGroupIdentity(uint64_t a1, uint64_t a2)
{
  sub_6BEC(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for IMDChatRCSGroupIdentity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMDChatRCSGroupIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IMDChatRCSGroupIdentity()
{
  return &type metadata for IMDChatRCSGroupIdentity;
}

uint64_t sub_F2284(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_F2348(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_F6CC0();
  swift_allocObject();
  uint64_t result = sub_F6C70();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_F6DF0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_F23C4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_F6CC0();
  swift_allocObject();
  uint64_t result = sub_F6C70();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_F2448(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_F2284(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_F2348((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_F23C4((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_F24AC(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_F6CC0();
      swift_allocObject();
      sub_F6C90();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_F6DF0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_F254C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  _OWORD v12[2] = v13;
  uint64_t result = sub_F1E64((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_F25CC, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_F25B8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2852C(a1, a2);
  }
  return a1;
}

uint64_t sub_F25CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_F1F88(a1, a2);
}

uint64_t RCSCompatibleMessageTransformer.delegate.getter()
{
  return swift_unknownObjectUnownedLoadStrong();
}

uint64_t RCSCompatibleMessageTransformer.init(delegate:)()
{
  swift_unknownObjectUnownedInit();

  return swift_unknownObjectRelease();
}

uint64_t RCSCompatibleMessageTransformer.transform(rcsMessage:message:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  void v3[6] = a1;
  sub_551C(&qword_129038);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  sub_551C((uint64_t *)&unk_128170);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for RCSMessage(0);
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return _swift_task_switch(sub_F27F0, 0, 0);
}

uint64_t sub_F27F0()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  sub_5F63C(*(void *)(v0 + 48), v1);
  uint64_t v4 = *(int *)(v3 + 28);
  *(_DWORD *)(v0 + 336) = v4;
  sub_2C4C0(v1 + v4, v2, (uint64_t *)&unk_128170);
  uint64_t v5 = type metadata accessor for RCSMessage.Content(0);
  *(void *)(v0 + 200) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v0 + 208) = v6;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5);
  uint64_t v8 = *(void *)(v0 + 128);
  if (v7 == 1)
  {
    sub_1E944(*(void *)(v0 + 128), (uint64_t *)&unk_128170);
LABEL_5:
    uint64_t v9 = *(void *)(v0 + 64);
    *(void *)(v0 + 280) = [objc_allocWithZone((Class)NSMutableString) init];
    *(void *)(v0 + 288) = [objc_allocWithZone((Class)NSMutableString) init];
    *(void *)(v0 + 296) = *(void *)(v9 + 16);
    uint64_t v10 = *(void *)(v9 + 24);
    *(void *)(v0 + 304) = v10;
    *(void *)(v0 + 312) = *(void *)(v10 + 8);
    *(void *)(v0 + 320) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0xA3D4000000000000;
    sub_F74E0();
    *(void *)(v0 + 328) = sub_F74D0();
    uint64_t v11 = sub_F7470();
    uint64_t v13 = v12;
    uint64_t v14 = sub_F2D70;
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_F36E4(v8, type metadata accessor for RCSMessage.Content);
    goto LABEL_5;
  }
  uint64_t v15 = *(void *)(v0 + 64);
  *(void *)(v0 + 216) = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 224) = *(void *)(v15 + 16);
  uint64_t v16 = *(void *)(v15 + 24);
  *(void *)(v0 + 232) = v16;
  *(void *)(v0 + 240) = *(void *)(v16 + 16);
  *(void *)(v0 + 248) = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0x1162000000000000;
  sub_F74E0();
  *(void *)(v0 + 256) = sub_F74D0();
  uint64_t v11 = sub_F7470();
  uint64_t v13 = v17;
  uint64_t v14 = sub_F2A24;
LABEL_7:
  return _swift_task_switch(v14, v11, v13);
}

uint64_t sub_F2A24()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[30];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[7];
  swift_release();
  v0[33] = v2(v4, v4, v3, v1);
  v0[34] = v5;
  return _swift_task_switch(sub_F2AC0, 0, 0);
}

uint64_t sub_F2AC0()
{
  id v1 = [*(id *)(v0 + 56) subject];
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v6 = *(int *)(v0 + 336);
  uint64_t v7 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 200);
  if (v1)
  {
    uint64_t v9 = v1;
    uint64_t v10 = *(uint64_t **)(v0 + 120);
    uint64_t v21 = v7 + v6;
    uint64_t v11 = sub_F7220();
    uint64_t v13 = v12;

    v23._uint64_t countAndFlagsBits = 10;
    v23._object = (void *)0xE100000000000000;
    sub_F72E0(v23);
    v24._uint64_t countAndFlagsBits = v3;
    v24._object = v2;
    sub_F72E0(v24);
    swift_bridgeObjectRelease();
    uint64_t *v10 = v11;
    v10[1] = v13;
    uint64_t v10[2] = v4;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v8);
    swift_retain();
    sub_9FF7C((uint64_t)v10, v21);
  }
  else
  {
    uint64_t v14 = (uint64_t *)(v7 + v6);
    sub_1E944(v7 + v6, (uint64_t *)&unk_128170);
    *uint64_t v14 = v3;
    v14[1] = (uint64_t)v2;
    _OWORD v14[2] = v4;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v8);
    swift_retain();
  }
  uint64_t v15 = *(void *)(v0 + 192);
  uint64_t v16 = *(void *)(v0 + 144);
  sub_551C(&qword_1284A0);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_F8F20;
  sub_5F63C(v15, v18 + v17);
  swift_release();
  sub_F36E4(*(void *)(v0 + 192), type metadata accessor for RCSMessage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v19(v18);
}

uint64_t sub_F2D70()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[39];
  uint64_t v4 = v0[36];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[35];
  uint64_t v6 = v0[7];
  swift_release();
  v2(v6, v6, v5, v4, v3, v1);
  return _swift_task_switch(sub_F2E1C, 0, 0);
}

id sub_F2E1C()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 144) + 56);
  v4(*(void *)(v0 + 96), 1, 1, v2);
  v4(v3, 1, 1, v2);
  if ((uint64_t)[v1 length] >= 1)
  {
    uint64_t v5 = *(void *)(v0 + 192);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 96);
    unint64_t v8 = *(void *)(v0 + 56);
    sub_1E944(v7, &qword_129038);
    sub_5F63C(v5, v7);
    v4(v7, 0, 1, v6);
    id result = [(id)v8 replicatedFallbackGUIDs];
    if (result)
    {
      uint64_t v10 = result;
      uint64_t v11 = (void *)sub_F7410();

      unint64_t v12 = v11[2];
      if (!v12)
      {
        __break(1u);
        goto LABEL_30;
      }
      uint64_t v81 = v4;
      uint64_t v13 = *(void *)(v0 + 136);
      uint64_t v14 = *(void *)(v0 + 144);
      uint64_t v15 = *(void *)(v0 + 96);
      uint64_t v17 = v11[4];
      uint64_t v16 = v11[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      char v85 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      id result = (id)v83(v15, 1, v13);
      if (result != 1)
      {
        uint64_t v18 = *(void **)(v0 + 280);
        uint64_t v19 = *(void *)(v0 + 208);
        uint64_t v79 = *(void *)(v0 + 200);
        uint64_t v80 = *(void *)(v0 + 136);
        long long v20 = *(uint64_t **)(v0 + 112);
        uint64_t v21 = *(void *)(v0 + 96);
        *(void *)(v21 + 128) = v17;
        *(void *)(v21 + 136) = v16;
        swift_bridgeObjectRelease();
        id v22 = v18;
        *(void *)(v0 + 32) = sub_F7260();
        *(void *)(v0 + 40) = v23;
        uint64_t v24 = sub_F6C10();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = swift_task_alloc();
        sub_F6C00();
        sub_8C60();
        uint64_t v27 = sub_F77D0();
        uint64_t v29 = v28;
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        *long long v20 = v27;
        v20[1] = v29;
        v20[2] = 0;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v79);
        id result = (id)v83(v21, 1, v80);
        if (result != 1)
        {
          sub_9FF7C(*(void *)(v0 + 112), *(void *)(v0 + 96) + *(int *)(*(void *)(v0 + 136) + 28));
          uint64_t v4 = v81;
          goto LABEL_7;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_7:
  if ((uint64_t)[*(id *)(v0 + 288) length] < 1) {
    goto LABEL_13;
  }
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v31 = *(void *)(v0 + 136);
  uint64_t v32 = *(void *)(v0 + 88);
  unint64_t v8 = *(void *)(v0 + 56);
  sub_1E944(v32, &qword_129038);
  sub_5F63C(v30, v32);
  v4(v32, 0, 1, v31);
  id result = [(id)v8 replicatedFallbackGUIDs];
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v10 = result;
  uint64_t v11 = (void *)sub_F7410();

  unint64_t v12 = v11[2];
  if (v12 < 2)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v33 = *(void *)(v0 + 136);
  uint64_t v34 = *(void *)(v0 + 144);
  uint64_t v35 = *(void *)(v0 + 88);
  uint64_t v37 = v11[6];
  uint64_t v36 = v11[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  id result = (id)v86(v35, 1, v33);
  if (result == 1)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v38 = *(void **)(v0 + 288);
  uint64_t v39 = *(void *)(v0 + 208);
  uint64_t v82 = *(void *)(v0 + 200);
  uint64_t v84 = *(void *)(v0 + 136);
  unint64_t v40 = *(uint64_t **)(v0 + 104);
  uint64_t v41 = *(void *)(v0 + 88);
  *(void *)(v41 + 128) = v37;
  *(void *)(v41 + 136) = v36;
  swift_bridgeObjectRelease();
  id v42 = v38;
  *(void *)(v0 + 16) = sub_F7260();
  *(void *)(v0 + 24) = v43;
  uint64_t v44 = sub_F6C10();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = swift_task_alloc();
  sub_F6C00();
  sub_8C60();
  uint64_t v47 = sub_F77D0();
  uint64_t v49 = v48;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v44);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t *v40 = v47;
  v40[1] = v49;
  uint64_t v40[2] = 0;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v82);
  id result = (id)v86(v41, 1, v84);
  if (result == 1)
  {
LABEL_37:
    __break(1u);
    return result;
  }
  sub_9FF7C(*(void *)(v0 + 104), *(void *)(v0 + 88) + *(int *)(*(void *)(v0 + 136) + 28));
LABEL_13:
  uint64_t v50 = *(void *)(v0 + 136);
  uint64_t v51 = *(void *)(v0 + 144);
  uint64_t v52 = *(void *)(v0 + 80);
  sub_2C4C0(*(void *)(v0 + 96), v52, &qword_129038);
  char v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v85(v52, 1, v50) != 1)
  {
    uint64_t v53 = *(void *)(v0 + 176);
    uint64_t v54 = *(void *)(v0 + 184);
    sub_5674(*(void *)(v0 + 80), v54);
    sub_5F63C(v54, v53);
    uint64_t v11 = (void *)sub_356A4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v8 = v11[2];
    unint64_t v12 = v11[3];
    uint64_t v10 = (void *)(v8 + 1);
    if (v8 < v12 >> 1)
    {
LABEL_16:
      uint64_t v55 = *(void *)(v0 + 176);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = *(void *)(v0 + 144);
      _OWORD v11[2] = v10;
      sub_5674(v55, (uint64_t)v11+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v8);
      sub_F36E4(v56, type metadata accessor for RCSMessage);
      goto LABEL_17;
    }
LABEL_31:
    uint64_t v11 = (void *)sub_356A4(v12 > 1, (int64_t)v10, 1, (unint64_t)v11);
    goto LABEL_16;
  }
  sub_1E944(*(void *)(v0 + 80), &qword_129038);
  uint64_t v11 = _swiftEmptyArrayStorage;
LABEL_17:
  sub_5F63C(*(void *)(v0 + 192), *(void *)(v0 + 168));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v11 = (void *)sub_356A4(0, v11[2] + 1, 1, (unint64_t)v11);
  }
  unint64_t v59 = v11[2];
  unint64_t v58 = v11[3];
  if (v59 >= v58 >> 1) {
    uint64_t v11 = (void *)sub_356A4(v58 > 1, v59 + 1, 1, (unint64_t)v11);
  }
  uint64_t v60 = *(void *)(v0 + 168);
  uint64_t v62 = *(void *)(v0 + 136);
  uint64_t v61 = *(void *)(v0 + 144);
  uint64_t v63 = *(void *)(v0 + 88);
  uint64_t v64 = *(void *)(v0 + 72);
  _OWORD v11[2] = v59 + 1;
  unint64_t v65 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v66 = *(void *)(v61 + 72);
  sub_5674(v60, (uint64_t)v11 + v65 + v66 * v59);
  sub_2C4C0(v63, v64, &qword_129038);
  if (v85(v64, 1, v62) == 1)
  {
    long long v67 = *(void **)(v0 + 288);
    uint64_t v68 = *(void *)(v0 + 72);

    sub_1E944(v68, &qword_129038);
  }
  else
  {
    uint64_t v70 = *(void *)(v0 + 152);
    uint64_t v69 = *(void *)(v0 + 160);
    sub_5674(*(void *)(v0 + 72), v69);
    sub_5F63C(v69, v70);
    unint64_t v72 = v11[2];
    unint64_t v71 = v11[3];
    if (v72 >= v71 >> 1) {
      uint64_t v11 = (void *)sub_356A4(v71 > 1, v72 + 1, 1, (unint64_t)v11);
    }
    uint64_t v74 = *(void **)(v0 + 280);
    uint64_t v73 = *(void **)(v0 + 288);
    uint64_t v75 = *(void *)(v0 + 152);
    uint64_t v76 = *(void *)(v0 + 160);
    _OWORD v11[2] = v72 + 1;
    sub_5674(v75, (uint64_t)v11 + v65 + v72 * v66);

    sub_F36E4(v76, type metadata accessor for RCSMessage);
  }
  uint64_t v77 = *(void *)(v0 + 96);
  sub_1E944(*(void *)(v0 + 88), &qword_129038);
  sub_1E944(v77, &qword_129038);
  sub_F36E4(*(void *)(v0 + 192), type metadata accessor for RCSMessage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v78 = *(uint64_t (**)(void *))(v0 + 8);
  return (id)v78(v11);
}

uint64_t sub_F36E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_F3758(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t sub_F379C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)id result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)id result = 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for RCSCompatibleMessageTransformer()
{
  return sub_8B108();
}

uint64_t sub_F37F0()
{
  uint64_t result = sub_F7220();
  static CTLazuliOperationError.errorDomain = result;
  *(void *)algn_1306E8 = v1;
  return result;
}

uint64_t *CTLazuliOperationError.errorDomain.unsafeMutableAddressor()
{
  if (qword_1290D0 != -1) {
    swift_once();
  }
  return &static CTLazuliOperationError.errorDomain;
}

uint64_t static CTLazuliOperationError.errorDomain.getter()
{
  if (qword_1290D0 != -1) {
    swift_once();
  }
  uint64_t v0 = static CTLazuliOperationError.errorDomain;
  swift_bridgeObjectRetain();
  return v0;
}

id NSError.init(operationError:)(void *a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  if (qword_1290D0 != -1) {
    swift_once();
  }
  int v3 = (void *)sub_F71F0();
  id v4 = [a1 value];
  sub_551C(&qword_128538);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_F8F20;
  *(void *)(inited + 32) = sub_F7220();
  *(void *)(inited + 40) = v6;
  [a1 value];
  type metadata accessor for CTLazuliErrorType(0);
  uint64_t v7 = sub_F7290();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v8;
  sub_4B338(inited);
  uint64_t v9 = (void *)sub_F71A0();
  swift_bridgeObjectRelease();
  id v10 = [v2 initWithDomain:v3 code:v4 userInfo:v9];

  return v10;
}

uint64_t *RCSActor.shared.unsafeMutableAddressor()
{
  if (qword_1290D8 != -1) {
    swift_once();
  }
  return &static RCSActor.shared;
}

uint64_t sub_F3A90()
{
  type metadata accessor for RCSActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  static RCSActor.shared = v0;
  return result;
}

uint64_t static RCSActor.shared.getter()
{
  if (qword_1290D8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t RCSActor.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t RCSActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

unint64_t sub_F3B7C()
{
  unint64_t result = qword_12B040;
  if (!qword_12B040)
  {
    type metadata accessor for RCSActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_12B040);
  }
  return result;
}

uint64_t type metadata accessor for RCSActor()
{
  return self;
}

uint64_t sub_F3BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RCSActor();

  return static GlobalActor.sharedUnownedExecutor.getter(v3, a2);
}

uint64_t sub_F3C2C(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_551C(&qword_12B108);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TypingIndicator();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1E944(a1, &qword_12B108);
    sub_9DE04((uint64_t)a2, (uint64_t)v8);
    sub_6D20((uint64_t)a2);
    return sub_1E944((uint64_t)v8, &qword_12B108);
  }
  else
  {
    sub_9F7BC(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_9E234((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;
    swift_bridgeObjectRelease();
    return sub_6D20((uint64_t)a2);
  }
}

void *RCSTypingTracker.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_F7520();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v6[17] = sub_E937C((uint64_t)_swiftEmptyArrayStorage);
  v6[15] = a2;
  swift_unknownObjectUnownedInit();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  sub_F74F0();
  type metadata accessor for AsyncPersistentTimer();
  swift_allocObject();
  swift_retain();
  uint64_t v8 = sub_DDA2C((uint64_t)v5, (uint64_t)&unk_12B0F0, v7, 15.0);
  swift_unknownObjectRelease();
  swift_release();
  v6[16] = v8;
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  return v6;
}

void *RCSTypingTracker.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_F7520();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v3[17] = sub_E937C((uint64_t)_swiftEmptyArrayStorage);
  v3[15] = a2;
  swift_unknownObjectUnownedInit();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  sub_F74F0();
  type metadata accessor for AsyncPersistentTimer();
  swift_allocObject();
  swift_retain();
  uint64_t v9 = sub_DDA2C((uint64_t)v7, (uint64_t)&unk_12B0F8, v8, 15.0);
  swift_unknownObjectRelease();
  swift_release();
  v3[16] = v9;
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  return v3;
}

uint64_t sub_F40B8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_F40F0(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_F4110, 0, 0);
}

uint64_t sub_F4110()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    id v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *id v2 = v0;
    v2[1] = sub_F41FC;
    return sub_44B0();
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_F41FC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_F430C()
{
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_F6BFC;
  v2[5] = v0;
  return _swift_task_switch(sub_F4110, 0, 0);
}

uint64_t sub_F43B4()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v21 = _swiftEmptyArrayStorage;
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_416C(v2, (unint64_t *)&v21);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 136) = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = v21;
  *(void *)(v0 + 136) = v21;
  uint64_t v5 = v4[2];
  *(void *)(v0 + 144) = v5;
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v7 = *(_OWORD **)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v9 = *(void *)(v0 + 112);
    int v10 = *(_DWORD *)(v6 + 80);
    *(_DWORD *)(v0 + 76) = v10;
    *(void *)(v0 + 152) = *(void *)(v6 + 72);
    *(void *)(v0 + 160) = 0;
    sub_E15E8((uint64_t)v4 + ((v10 + 32) & ~(unint64_t)v10), (uint64_t)v7);
    *(void *)(v0 + 168) = swift_unknownObjectUnownedLoadStrong();
    uint64_t v11 = *(void *)(v8 + 120);
    uint64_t ObjectType = swift_getObjectType();
    long long v13 = v7[1];
    long long v14 = v7[2];
    long long v15 = v7[3];
    *(_OWORD *)(v0 + 57) = *(_OWORD *)((char *)v7 + 57);
    *(_OWORD *)(v0 + 32) = v14;
    *(_OWORD *)(v0 + 48) = v15;
    *(_OWORD *)(v0 + 16) = v13;
    uint64_t v16 = *(void *)((char *)v7 + *(int *)(v9 + 32) + 24);
    uint64_t v20 = *(void *)(v11 + 8) + **(int **)(v11 + 8);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_F4620;
    uint64_t v25 = ObjectType;
    uint64_t v26 = v11;
    uint64_t v24 = v16;
    __asm { BRAA            X9, X16 }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_F4620()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_F474C, v1, 0);
}

uint64_t sub_F474C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 160) + 1;
  sub_F61E0(*(void *)(v0 + 128));
  if (v2 != v1)
  {
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v6 = *(void *)(v0 + 160) + 1;
    *(void *)(v0 + 160) = v6;
    uint64_t v7 = *(_OWORD **)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 104);
    sub_E15E8(*(void *)(v0 + 136)+ ((*(unsigned __int8 *)(v0 + 76) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 76))+ v5 * v6, (uint64_t)v7);
    *(void *)(v0 + 168) = swift_unknownObjectUnownedLoadStrong();
    uint64_t v9 = *(void *)(v8 + 120);
    swift_getObjectType();
    long long v10 = v7[1];
    long long v11 = v7[2];
    long long v12 = v7[3];
    *(_OWORD *)(v0 + 57) = *(_OWORD *)((char *)v7 + 57);
    *(_OWORD *)(v0 + 32) = v11;
    *(_OWORD *)(v0 + 48) = v12;
    *(_OWORD *)(v0 + 16) = v10;
    uint64_t v14 = *(void *)(v9 + 8) + **(int **)(v9 + 8);
    long long v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v13;
    *long long v13 = v0;
    v13[1] = sub_F4620;
    __asm { BRAA            X9, X16 }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t RCSTypingTracker.sender(_:finishedTypingInChat:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  sub_551C(&qword_12B108);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_F4A08, v3, 0);
}

int64_t sub_F4A08()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)(v0[8] + 136);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = (void *)*v3;
  uint64_t v31 = (void *)*v3;
  *uint64_t v3 = 0x8000000000000000;
  unint64_t v7 = sub_1C9BC(v2, v1);
  uint64_t v8 = v5[2];
  BOOL v9 = (v6 & 1) == 0;
  int64_t result = v8 + v9;
  if (__OFADD__(v8, v9))
  {
    __break(1u);
    goto LABEL_20;
  }
  char v11 = v6;
  if (v5[3] >= result)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_E1130();
      uint64_t v5 = v31;
    }
  }
  else
  {
    uint64_t v13 = v0[6];
    uint64_t v12 = v0[7];
    sub_DFC2C(result, isUniquelyReferenced_nonNull_native);
    uint64_t v5 = v31;
    unint64_t v14 = sub_1C9BC(v13, v12);
    if ((v11 & 1) != (v15 & 1))
    {
      return sub_F7BA0();
    }
    unint64_t v7 = v14;
  }
  *uint64_t v3 = v5;
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)*v3;
  swift_bridgeObjectRetain();
  if ((v11 & 1) == 0)
  {
    uint64_t v18 = v0[6];
    uint64_t v17 = v0[7];
    int64_t result = sub_E9498((uint64_t)_swiftEmptyArrayStorage);
    v16[(v7 >> 6) + 8] |= 1 << v7;
    uint64_t v19 = (void *)(v16[6] + 16 * v7);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(void *)(v16[7] + 8 * v7) = result;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_20:
    __break(1u);
    return result;
  }
LABEL_13:
  uint64_t v23 = v0[9];
  uint64_t v24 = v0[5];
  swift_bridgeObjectRelease();
  sub_9DE04(v24, v23);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v25 = type metadata accessor for TypingIndicator();
  int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v23, 1, v25);
  uint64_t v27 = v0[9];
  if (v26 == 1)
  {
    sub_1E944(v0[9], &qword_12B108);
    uint64_t v28 = 0;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v28 = *(void *)(v27 + 80);
    uint64_t v29 = *(void *)(v27 + 88);
    swift_bridgeObjectRetain();
    sub_F61E0(v27);
  }
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v30(v28, v29);
}

uint64_t sub_F4CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  void v4[14] = a2;
  sub_551C(&qword_12B108);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TypingIndicator();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_F4DA0, v3, 0);
}

int64_t sub_F4DA0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = (void *)(*(void *)(v0 + 128) + 136);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = (void *)*v3;
  uint64_t v37 = (void *)*v3;
  *uint64_t v3 = 0x8000000000000000;
  unint64_t v7 = sub_1C9BC(v2, v1);
  uint64_t v8 = v5[2];
  BOOL v9 = (v6 & 1) == 0;
  int64_t result = v8 + v9;
  if (__OFADD__(v8, v9))
  {
    __break(1u);
    goto LABEL_21;
  }
  char v11 = v6;
  if (v5[3] >= result)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_E1130();
      uint64_t v5 = v37;
    }
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 120);
    sub_DFC2C(result, isUniquelyReferenced_nonNull_native);
    uint64_t v5 = v37;
    unint64_t v14 = sub_1C9BC(v13, v12);
    if ((v11 & 1) != (v15 & 1))
    {
      return sub_F7BA0();
    }
    unint64_t v7 = v14;
  }
  *uint64_t v3 = v5;
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)*v3;
  swift_bridgeObjectRetain();
  if ((v11 & 1) == 0)
  {
    uint64_t v18 = *(void *)(v0 + 112);
    uint64_t v17 = *(void *)(v0 + 120);
    int64_t result = sub_E9498((uint64_t)_swiftEmptyArrayStorage);
    v16[(v7 >> 6) + 8] |= 1 << v7;
    uint64_t v19 = (void *)(v16[6] + 16 * v7);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(void *)(v16[7] + 8 * v7) = result;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_21:
    __break(1u);
    return result;
  }
LABEL_13:
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v24 = *(void *)(v0 + 152);
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v26 = *(void *)(v0 + 104);
  swift_bridgeObjectRelease();
  sub_9DE04(v26, v25);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) != 1)
  {
    uint64_t v28 = *(_OWORD **)(v0 + 160);
    uint64_t v29 = *(void *)(v0 + 128);
    sub_9F7BC(*(void *)(v0 + 136), (uint64_t)v28);
    *(void *)(v0 + 168) = swift_unknownObjectUnownedLoadStrong();
    uint64_t v30 = *(void *)(v29 + 120);
    swift_getObjectType();
    long long v31 = v28[1];
    long long v32 = v28[2];
    long long v33 = v28[3];
    *(_OWORD *)(v0 + 57) = *(_OWORD *)((char *)v28 + 57);
    *(_OWORD *)(v0 + 32) = v32;
    *(_OWORD *)(v0 + 48) = v33;
    *(_OWORD *)(v0 + 16) = v31;
    uint64_t v35 = *(void *)(v30 + 8) + **(int **)(v30 + 8);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v34;
    void *v34 = v0;
    v34[1] = sub_F5174;
    __asm { BRAA            X9, X16 }
  }
  sub_1E944(*(void *)(v0 + 136), &qword_12B108);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_F5174()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_F52A0, v1, 0);
}

uint64_t sub_F52A0()
{
  sub_F61E0(*(void *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RCSTypingTracker.sender(_:beganTypingInChat:subscription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  void v8[5] = a1;
  v8[6] = a2;
  sub_551C(&qword_12B108);
  v8[13] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for TypingIndicator();
  v8[14] = v12;
  v8[15] = *(void *)(v12 - 8);
  unsigned char v8[16] = swift_task_alloc();
  uint64_t v13 = (void *)swift_task_alloc();
  v8[17] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_F545C;
  return sub_F4CAC(a1, a2, a3);
}

uint64_t sub_F545C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  return _swift_task_switch(sub_F556C, v1, 0);
}

int64_t sub_F556C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[14];
  uint64_t v46 = v0[13];
  uint64_t v47 = v0[15];
  uint64_t v48 = v0[12];
  uint64_t v44 = v0[10];
  uint64_t v45 = v0[11];
  uint64_t v3 = v0[7];
  uint64_t v42 = v0[8];
  uint64_t v43 = v0[9];
  uint64_t v4 = (long long *)v0[5];
  uint64_t v41 = v0[6];
  uint64_t v5 = sub_F6F30();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = swift_task_alloc();
  swift_bridgeObjectRetain();
  sub_5560((uint64_t)v4);
  sub_F6F20();
  uint64_t v8 = sub_F6F00();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v5);
  sub_F6EB0();
  *(void *)uint64_t v1 = v41;
  *(void *)(v1 + 8) = v3;
  long long v11 = *v4;
  long long v12 = v4[1];
  long long v13 = v4[2];
  *(_OWORD *)(v1 + 57) = *(long long *)((char *)v4 + 41);
  *(_OWORD *)(v1 + 32) = v12;
  *(_OWORD *)(v1 + 48) = v13;
  *(_OWORD *)(v1 + 16) = v11;
  *(void *)(v1 + 80) = v8;
  *(void *)(v1 + 88) = v10;
  unint64_t v14 = (void *)(v1 + *(int *)(v2 + 32));
  *unint64_t v14 = v42;
  v14[1] = v43;
  _OWORD v14[2] = v44;
  void v14[3] = v45;
  swift_task_dealloc();
  sub_E15E8(v1, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v46, 0, 1, v2);
  uint64_t v15 = (void *)(v48 + 136);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_5560((uint64_t)v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *(void *)(v48 + 136);
  *(void *)(v48 + 136) = 0x8000000000000000;
  unint64_t v19 = sub_1C9BC(v41, v3);
  uint64_t v20 = *(void *)(v17 + 16);
  BOOL v21 = (v18 & 1) == 0;
  int64_t result = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v23 = v18;
  if (*(void *)(v17 + 24) >= result)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_E1130();
    }
  }
  else
  {
    uint64_t v25 = v0[6];
    uint64_t v24 = v0[7];
    sub_DFC2C(result, isUniquelyReferenced_nonNull_native);
    unint64_t v26 = sub_1C9BC(v25, v24);
    if ((v23 & 1) != (v27 & 1))
    {
      return sub_F7BA0();
    }
    unint64_t v19 = v26;
  }
  *uint64_t v15 = v17;
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)*v15;
  swift_bridgeObjectRetain();
  if ((v23 & 1) == 0)
  {
    uint64_t v30 = v0[6];
    uint64_t v29 = v0[7];
    int64_t result = sub_E9498((uint64_t)_swiftEmptyArrayStorage);
    v28[(v19 >> 6) + 8] |= 1 << v19;
    long long v31 = (void *)(v28[6] + 16 * v19);
    *long long v31 = v30;
    v31[1] = v29;
    *(void *)(v28[7] + 8 * v19) = result;
    uint64_t v32 = v28[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (!v33)
    {
      _OWORD v28[2] = v34;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_17:
    __break(1u);
    return result;
  }
LABEL_13:
  uint64_t v35 = v0[16];
  uint64_t v36 = v0[13];
  uint64_t v37 = (_OWORD *)v0[5];
  swift_bridgeObjectRelease();
  sub_F3C2C(v36, v37);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v1 + 80);
  uint64_t v38 = *(void *)(v1 + 88);
  swift_bridgeObjectRetain();
  sub_F61E0(v35);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v40 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v40(v39, v38);
}

uint64_t RCSTypingTracker.deinit()
{
  sub_F623C(v0 + 112);
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t RCSTypingTracker.__deallocating_deinit()
{
  sub_F623C(v0 + 112);
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_F59AC(uint64_t a1, unint64_t *a2)
{
  uint64_t v56 = a2;
  uint64_t v64 = type metadata accessor for TypingIndicator();
  uint64_t v68 = *(void *)(v64 - 8);
  uint64_t v3 = __chkstk_darwin(v64);
  uint64_t v60 = (uint64_t)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v59 = (uint64_t)v53 - v6;
  __chkstk_darwin(v5);
  uint64_t v55 = (uint64_t)v53 - v7;
  uint64_t v63 = sub_551C((uint64_t *)&unk_12B2B0);
  uint64_t v8 = __chkstk_darwin(v63 - 8);
  uint64_t v54 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v62 = (_OWORD *)((char *)v53 - v11);
  __chkstk_darwin(v10);
  uint64_t v61 = (char *)v53 - v12;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v58 = a1 + 64;
  unint64_t v72 = &_swiftEmptyDictionarySingleton;
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  if (-v14 < 64) {
    uint64_t v15 = ~(-1 << -(char)v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  v53[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v57 = (unint64_t)(63 - v14) >> 6;
  uint64_t v65 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v18 = v63;
  uint64_t v19 = (uint64_t)v61;
  if (v16) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v21 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v21 < v57)
    {
      unint64_t v22 = *(void *)(v58 + 8 * v21);
      int64_t v23 = i + 1;
      if (v22) {
        goto LABEL_23;
      }
      int64_t v23 = i + 2;
      if (i + 2 >= v57) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v58 + 8 * v23);
      if (v22) {
        goto LABEL_23;
      }
      int64_t v23 = i + 3;
      if (i + 3 >= v57) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v58 + 8 * v23);
      if (v22) {
        goto LABEL_23;
      }
      int64_t v23 = i + 4;
      if (i + 4 >= v57) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v58 + 8 * v23);
      if (v22)
      {
LABEL_23:
        uint64_t v69 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
        for (i = v23; ; unint64_t v20 = __clz(__rbit64(v16)) | (i << 6))
        {
          uint64_t v25 = *(void *)(v65 + 56);
          unint64_t v26 = *(void *)(v65 + 48) + (v20 << 6);
          uint64_t v27 = *(void *)v26;
          uint64_t v28 = *(void *)(v26 + 8);
          uint64_t v30 = *(void *)(v26 + 16);
          uint64_t v71 = *(void *)(v26 + 24);
          uint64_t v29 = v71;
          uint64_t v32 = *(void *)(v26 + 32);
          uint64_t v31 = *(void *)(v26 + 40);
          uint64_t v33 = *(void *)(v26 + 48);
          int v70 = *(unsigned __int8 *)(v26 + 56);
          uint64_t v67 = *(void *)(v68 + 72);
          sub_E15E8(v25 + v67 * v20, v19 + *(int *)(v18 + 48));
          *(void *)uint64_t v19 = v27;
          *(void *)(v19 + 8) = v28;
          *(void *)(v19 + 16) = v30;
          *(void *)(v19 + 24) = v29;
          *(void *)(v19 + 32) = v32;
          *(void *)(v19 + 40) = v31;
          *(void *)(v19 + 48) = v33;
          *(unsigned char *)(v19 + 56) = v70;
          uint64_t v34 = v62;
          sub_F6B94(v19, (uint64_t)v62);
          uint64_t v35 = (uint64_t)v34 + *(int *)(v18 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_F6E80();
          if (fabs(v36) <= 30.0)
          {
            uint64_t v44 = v55;
            sub_E15E8(v35, v55);
            uint64_t v45 = *(int *)(v18 + 48);
            uint64_t v46 = v54;
            uint64_t v47 = (uint64_t)&v54[v45];
            long long v49 = v34[1];
            v73[0] = *v34;
            long long v48 = v73[0];
            v73[1] = v49;
            v74[0] = v34[2];
            long long v50 = v74[0];
            *(_OWORD *)((char *)v74 + 9) = *(_OWORD *)((char *)v34 + 41);
            *(_OWORD *)(v54 + 41) = *(_OWORD *)((char *)v74 + 9);
            _OWORD *v46 = v48;
            v46[1] = v49;
            v46[2] = v50;
            sub_9F7BC(v35, (uint64_t)v46 + v45);
            sub_9F7BC(v44, v60);
            uint64_t v51 = v72;
            unint64_t v52 = v72[2];
            if (v72[3] <= v52)
            {
              sub_DFF44(v52 + 1, 1);
              uint64_t v51 = v72;
            }
            sub_E03D0((uint64_t)v73, v60, v51);
            uint64_t result = sub_F61E0(v47);
            unint64_t v16 = v69;
            if (!v69) {
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v37 = v67;
            sub_E15E8(v35, v59);
            uint64_t v38 = v56;
            unint64_t v39 = *v56;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t *v38 = v39;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unint64_t v39 = sub_CF27C(0, *(void *)(v39 + 16) + 1, 1, v39);
              *uint64_t v56 = v39;
            }
            uint64_t v41 = v37;
            unint64_t v43 = *(void *)(v39 + 16);
            unint64_t v42 = *(void *)(v39 + 24);
            if (v43 >= v42 >> 1)
            {
              unint64_t v39 = sub_CF27C(v42 > 1, v43 + 1, 1, v39);
              *uint64_t v56 = v39;
            }
            *(void *)(v39 + 16) = v43 + 1;
            sub_9F7BC(v59, v39+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ v43 * v41);
            uint64_t result = sub_1E944((uint64_t)v34, (uint64_t *)&unk_12B2B0);
            unint64_t v16 = v69;
            if (!v69) {
              goto LABEL_8;
            }
          }
LABEL_7:
          uint64_t v69 = (v16 - 1) & v16;
        }
      }
      int64_t v24 = i + 5;
      if (i + 5 < v57)
      {
        unint64_t v22 = *(void *)(v58 + 8 * v24);
        if (v22)
        {
          int64_t v23 = i + 5;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v23 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_35;
          }
          if (v23 >= v57) {
            break;
          }
          unint64_t v22 = *(void *)(v58 + 8 * v23);
          ++v24;
          if (v22) {
            goto LABEL_23;
          }
        }
      }
    }
LABEL_33:
    sub_44A8();
    return (uint64_t)v72;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_F5F98(unint64_t a1, _OWORD *a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = (_OWORD *)(a4[6] + (a1 << 6));
  long long v8 = a2[1];
  *uint64_t v7 = *a2;
  v7[1] = v8;
  _OWORD v7[2] = a2[2];
  *(_OWORD *)((char *)v7 + 41) = *(_OWORD *)((char *)a2 + 41);
  uint64_t v9 = a4[7];
  uint64_t v10 = type metadata accessor for TypingIndicator();
  uint64_t result = sub_9F7BC(a3, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_F6044()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_F60EC;
  v2[5] = v0;
  return _swift_task_switch(sub_F4110, 0, 0);
}

uint64_t sub_F60EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_F61E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TypingIndicator();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_F623C(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for RCSTypingTracker()
{
  return self;
}

void *sub_F6288(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v11 = a2[11];
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v22 = (uint64_t)a2 + v12;
    uint64_t v23 = a1 + v12;
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    uint64_t v13 = sub_F6EE0();
    int64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v23, v22, v13);
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = (void *)((char *)v4 + v14);
    unint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v16[3];
    v15[2] = v16[2];
    v15[3] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_F640C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_F64CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v19 = a2 + v10;
  uint64_t v20 = a1 + v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v11 = sub_F6EE0();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v20, v19, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v14[3];
  void v13[2] = v14[2];
  v13[3] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_F6608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v11[2] = *(void *)(v12 + 16);
  v11[3] = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_F6798(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[5] = a2[5];
  uint64_t v11 = sub_F6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_F6850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_F6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = v17[3];
  void v16[2] = v17[2];
  v16[3] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_F6968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F697C);
}

uint64_t sub_F697C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_F6EE0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_F6A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F6A40);
}

uint64_t sub_F6A40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_F6EE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_F6AE8()
{
  uint64_t result = sub_F6EE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_F6B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_551C((uint64_t *)&unk_12B2B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_F6C00()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t sub_F6C10()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_F6C20()
{
  return URLComponents.path.getter();
}

uint64_t sub_F6C30()
{
  return URLComponents.scheme.getter();
}

uint64_t sub_F6C40()
{
  return URLComponents.init(string:)();
}

uint64_t sub_F6C50()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_F6C60()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_F6C70()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_F6C80()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_F6C90()
{
  return __DataStorage.init(length:)();
}

uint64_t sub_F6CA0()
{
  return __DataStorage._length.getter();
}

uint64_t sub_F6CB0()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_F6CC0()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_F6CD0()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_F6CE0()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_F6CF0()
{
  return LocalizedError.errorDescription.getter();
}

uint64_t sub_F6D00()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_F6D10()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t sub_F6D20()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_F6D30()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_F6D40()
{
  return URL.isFileURL.getter();
}

uint64_t sub_F6D50()
{
  return URL.absoluteString.getter();
}

uint64_t sub_F6D60()
{
  return URL.lastPathComponent.getter();
}

uint64_t sub_F6D70()
{
  return URL._bridgeToObjectiveC()();
}

uint64_t sub_F6D80()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_F6D90()
{
  return URL.path(percentEncoded:)();
}

uint64_t sub_F6DA0()
{
  return URL.path.getter();
}

uint64_t sub_F6DB0()
{
  return URL.init(string:)();
}

uint64_t sub_F6DC0()
{
  return type metadata accessor for URL();
}

uint64_t sub_F6DD0()
{
  return Data.LargeSlice.ensureUniqueReference()();
}

uint64_t sub_F6DE0()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_F6DF0()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_F6E00()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t sub_F6E10()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t sub_F6E20()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_F6E30()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_F6E40()
{
  return Data.write(to:options:)();
}

uint64_t sub_F6E50()
{
  return static Date.distantFuture.getter();
}

uint64_t sub_F6E60()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_F6E70()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_F6E80()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_F6E90()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_F6EA0()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_F6EB0()
{
  return static Date.now.getter();
}

uint64_t sub_F6EC0()
{
  return Date.advanced(by:)();
}

uint64_t sub_F6ED0()
{
  return Date.init()();
}

uint64_t sub_F6EE0()
{
  return type metadata accessor for Date();
}

uint64_t sub_F6EF0()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_F6F00()
{
  return UUID.uuidString.getter();
}

uint64_t sub_F6F10()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_F6F20()
{
  return UUID.init()();
}

uint64_t sub_F6F30()
{
  return type metadata accessor for UUID();
}

uint64_t sub_F6F40()
{
  return dispatch thunk of AsyncMultiQueue.perform(key:_:)();
}

uint64_t sub_F6F50()
{
  return AsyncMultiQueue.__allocating_init(priority:bufferingPolicy:)();
}

uint64_t sub_F6F60()
{
  return type metadata accessor for AsyncMultiQueue();
}

uint64_t sub_F6F70()
{
  return static TapToRadarDraft.submitTapToRadar(title:problemDescription:deviceClasses:component:classification:reproducibility:)();
}

uint64_t sub_F6F80()
{
  return type metadata accessor for TapToRadarDraft.DeviceClass();
}

uint64_t sub_F6F90()
{
  return type metadata accessor for TapToRadarDraft.Classification();
}

uint64_t sub_F6FA0()
{
  return type metadata accessor for TapToRadarDraft.Reproducibility();
}

uint64_t sub_F6FC0()
{
  return static TapToRadarDraft.Component.messagesNewBugs.getter();
}

uint64_t sub_F6FD0()
{
  return type metadata accessor for TapToRadarDraft.Component();
}

uint64_t sub_F6FE0()
{
  return type metadata accessor for TapToRadarDraft();
}

uint64_t sub_F6FF0()
{
  return PrototypingSetting.wrappedValue.getter();
}

uint64_t sub_F7000()
{
  return PrototypingSetting.init<A>(_:domain:default:internalDefault:)();
}

uint64_t sub_F7010()
{
  return PrototypingSetting.init<A>(_:domain:default:internalDefault:)();
}

uint64_t sub_F7020()
{
  return PrototypingSetting.init<A>(_:domain:default:internalDefault:)();
}

uint64_t sub_F7030()
{
  return UTType.init(mimeType:conformingTo:)();
}

uint64_t sub_F7040()
{
  return UTType.identifier.getter();
}

uint64_t sub_F7050()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

uint64_t sub_F7060()
{
  return UTType.preferredFilenameExtension.getter();
}

uint64_t sub_F7070()
{
  return static UTType.data.getter();
}

uint64_t sub_F7080()
{
  return static UTType.image.getter();
}

uint64_t sub_F7090()
{
  return static UTType.movie.getter();
}

uint64_t sub_F70A0()
{
  return UTType.conforms(to:)();
}

uint64_t sub_F70B0()
{
  return type metadata accessor for UTType();
}

uint64_t sub_F70C0()
{
  return static Logger.messagesSubsystem.getter();
}

uint64_t sub_F70D0()
{
  return Logger.logObject.getter();
}

uint64_t sub_F70E0()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_F70F0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_F7100()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_F7110()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_F7120()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_F7130()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_F7140()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t sub_F7150()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_F7160()
{
  return static DispatchTime.now()();
}

uint64_t sub_F7170()
{
  return DispatchTime.advanced(by:)();
}

uint64_t sub_F7180()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_F7190()
{
  return + infix(_:_:)();
}

uint64_t sub_F71A0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_F71B0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_F71C0()
{
  return Dictionary.description.getter();
}

uint64_t sub_F71D0()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_F71E0()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_F71F0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_F7200()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_F7210()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_F7220()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_F7230()
{
  return String.init(data:encoding:)();
}

uint64_t sub_F7240()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_F7250()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_F7260()
{
  return String.init(_:)();
}

uint64_t sub_F7270()
{
  return String.init<A>(describing:)();
}

uint64_t sub_F7280()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_F7290()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_F72A0()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_F72B0()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_F72C0()
{
  return String.hash(into:)();
}

uint64_t sub_F72D0()
{
  return String.index(_:offsetBy:limitedBy:)();
}

void sub_F72E0(Swift::String a1)
{
}

Swift::Int sub_F72F0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_F7300()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_F7310()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_F7320()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_F7330()
{
  return String.UTF16View.index(_:offsetBy:)();
}

BOOL sub_F7340(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

BOOL sub_F7350(Swift::String a1)
{
  return String.hasSuffix(_:)(a1);
}

uint64_t sub_F7370()
{
  return Sequence<>.joined(separator:)();
}

uint64_t sub_F7380()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_F7390()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_F73D0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_F73E0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_F73F0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_F7400()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_F7410()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_F7420()
{
  return Array.description.getter();
}

uint64_t sub_F7430()
{
  return specialized Array._endMutation()();
}

uint64_t sub_F7440()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_F7450()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_F7460()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_F7470()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_F7480()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_F7490()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_F74A0()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t sub_F74B0()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t sub_F74D0()
{
  return static MainActor.shared.getter();
}

uint64_t sub_F74E0()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_F74F0()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_F7500()
{
  return static TaskPriority.high.getter();
}

uint64_t sub_F7510()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_F7520()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_F7530()
{
  return type metadata accessor for AsyncStream.Continuation.YieldResult();
}

uint64_t sub_F7540()
{
  return type metadata accessor for AsyncStream.Continuation.BufferingPolicy();
}

uint64_t sub_F7550()
{
  return AsyncStream.Continuation.yield(_:)();
}

uint64_t sub_F7560()
{
  return type metadata accessor for AsyncStream.Continuation();
}

uint64_t sub_F7570()
{
  return AsyncStream.makeAsyncIterator()();
}

uint64_t sub_F7590()
{
  return type metadata accessor for AsyncStream.Iterator();
}

uint64_t sub_F75A0()
{
  return type metadata accessor for AsyncStream();
}

uint64_t sub_F75B0()
{
  return AsyncStream.init(_:bufferingPolicy:_:)();
}

uint64_t sub_F75D0()
{
  return static Task<>.isCancelled.getter();
}

uint64_t sub_F75E0()
{
  return Double._bridgeToObjectiveC()();
}

uint64_t sub_F75F0()
{
  return Double.description.getter();
}

uint64_t sub_F7600()
{
  return Double.write<A>(to:)();
}

uint64_t sub_F7610()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_F7620()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_F7630()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_F7640()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_F7650()
{
  return type metadata accessor for IMRichCard();
}

uint64_t sub_F7660()
{
  return NSPredicate.init(format:_:)();
}

uint64_t sub_F7670()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_F7680()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_F7690()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_F76A0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_F76B0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_F76C0()
{
  return OS_dispatch_group.wait(timeout:)();
}

uint64_t sub_F76D0()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_F76E0()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_F76F0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_F7700()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_F7710()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_F7720()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_F7730()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_F7740()
{
  return type metadata accessor for IMPersistentMenuItem();
}

uint64_t sub_F7750()
{
  return type metadata accessor for IMChip();
}

uint64_t sub_F7760()
{
  return NSNumber.init(integerLiteral:)();
}

uint64_t sub_F7770()
{
  return type metadata accessor for Optional();
}

uint64_t sub_F7780()
{
  return Substring.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_F7790()
{
  return Substring.distance(from:to:)();
}

uint64_t sub_F77A0()
{
  return Substring.subscript.getter();
}

uint64_t sub_F77B0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_F77C0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_F77D0()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_F77E0()
{
  return StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t sub_F77F0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_F7810()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_F7820()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_F7830()
{
  return _HashTable.nextHole(atOrAfter:)();
}

Swift::Int sub_F7840(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_F7850()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_F7860()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_F7880()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_F7890()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void sub_F78A0(Swift::Int a1)
{
}

uint64_t sub_F78B0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_F78C0()
{
  return StaticString.description.getter();
}

uint64_t sub_F78D0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_F78E0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_F7900()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_F7910()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_F7920()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_F7930()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_F7940()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_F7950()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t sub_F7960()
{
  return ContinuousClock.init()();
}

uint64_t sub_F7970()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t sub_F7980()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t sub_F7990()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_F79A0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_F79B0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_F79C0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_F79D0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_F79E0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_F79F0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_F7A10(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_F7A20()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_F7A30()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_F7A40()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_F7A50()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_F7A60()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_F7A70()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_F7A80()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_F7A90()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_F7AA0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_F7AB0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_F7AC0()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_F7AD0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_F7AE0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_F7AF0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_F7B00()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_F7B10()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_F7B20()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_F7B40()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_F7B50()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_F7B60()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_F7B90()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_F7BA0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_F7BB0()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t sub_F7BD0()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_F7BE0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_F7BF0()
{
  return Error._code.getter();
}

uint64_t sub_F7C00()
{
  return Error._domain.getter();
}

uint64_t sub_F7C10()
{
  return Error._userInfo.getter();
}

uint64_t sub_F7C20()
{
  return Hasher.init(_seed:)();
}

void sub_F7C30(Swift::UInt a1)
{
}

void sub_F7C40(Swift::UInt8 a1)
{
}

Swift::Int sub_F7C50()
{
  return Hasher._finalize()();
}

uint64_t sub_F7C60()
{
  return type metadata accessor for Result();
}

uint64_t sub_F7C70()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_F7C80()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_F7C90()
{
  return static Duration.seconds(_:)();
}

uint64_t CMFBlockListIsItemBlocked()
{
  return _CMFBlockListIsItemBlocked();
}

uint64_t CMFItemCreateWithEmailAddress()
{
  return _CMFItemCreateWithEmailAddress();
}

uint64_t CMFItemCreateWithPhoneNumber()
{
  return _CMFItemCreateWithPhoneNumber();
}

uint64_t IMBagBoolValueWithDefault()
{
  return _IMBagBoolValueWithDefault();
}

uint64_t IMCopyGUIDForChat()
{
  return _IMCopyGUIDForChat();
}

uint64_t IMCountryCodeForIncomingTextMessage()
{
  return _IMCountryCodeForIncomingTextMessage();
}

uint64_t IMCountryCodeForNumber()
{
  return _IMCountryCodeForNumber();
}

uint64_t IMDCreateIMMessageItemFromIMDMessageRecordRef()
{
  return _IMDCreateIMMessageItemFromIMDMessageRecordRef();
}

uint64_t IMDMessageRecordRefFromIMDMessageRecord()
{
  return _IMDMessageRecordRefFromIMDMessageRecord();
}

uint64_t IMGetDomainValueForKey()
{
  return _IMGetDomainValueForKey();
}

uint64_t IMNormalizedPhoneNumberForCFPhoneNumberRef()
{
  return _IMNormalizedPhoneNumberForCFPhoneNumberRef();
}

uint64_t IMPhoneNumberRefCopyForPhoneNumber()
{
  return _IMPhoneNumberRefCopyForPhoneNumber();
}

uint64_t IMSharedHelperRetrieveSimDetailsFromTelephony()
{
  return _IMSharedHelperRetrieveSimDetailsFromTelephony();
}

uint64_t IMStringIsEmail()
{
  return _IMStringIsEmail();
}

uint64_t IMStringIsPhoneNumber()
{
  return _IMStringIsPhoneNumber();
}

uint64_t IMVCardDataFromLocation()
{
  return _IMVCardDataFromLocation();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void free(void *a1)
{
}

uint64_t im_primary_queue()
{
  return _im_primary_queue();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_variant_has_internal_ui()
{
  return _os_variant_has_internal_ui();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectUnownedCopyAssign()
{
  return _swift_unknownObjectUnownedCopyAssign();
}

uint64_t swift_unknownObjectUnownedCopyInit()
{
  return _swift_unknownObjectUnownedCopyInit();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectUnownedTakeAssign()
{
  return _swift_unknownObjectUnownedTakeAssign();
}

uint64_t swift_unknownObjectUnownedTakeInit()
{
  return _swift_unknownObjectUnownedTakeInit();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}