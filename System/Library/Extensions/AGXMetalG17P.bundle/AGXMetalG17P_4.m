uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, int8x16_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v10;
  unsigned int *v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64x2_t *v17;
  unint64_t v18;
  int8x16_t v19;
  int64x2_t *v20;
  int8x16_t *v21;
  uint64_t v22;
  int8x16_t v23;
  int8x16_t v24;
  uint32x4_t v26;
  int8x16_t v28;
  int8x16_t v33;
  int8x16_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int64x2_t v39;
  int64x2_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  char v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  uint64_t result;
  char v55;
  char v56;
  char v57;
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  long long v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  long long v96;
  long long v97;
  long long v98;
  uint64_t v99;

  v99 = *MEMORY[0x263EF8340];
  v97 = 0u;
  v98 = 0u;
  v95 = 0u;
  v96 = 0u;
  v93 = 0u;
  v94 = 0u;
  v91 = 0u;
  v92 = 0u;
  v89 = 0u;
  v90 = 0u;
  v87 = 0u;
  v88 = 0u;
  v85 = 0u;
  v86 = 0u;
  v83 = 0u;
  v84 = 0u;
  v81 = 0u;
  v82 = 0u;
  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  v75 = 0u;
  v76 = 0u;
  v73 = 0u;
  v74 = 0u;
  v71 = 0u;
  v72 = 0u;
  v69 = 0u;
  v70 = 0u;
  v10 = a6;
  v67 = 0u;
  v68 = 0u;
  if (a5 >= 4)
  {
    v16 = 0;
    v17 = (int64x2_t *)&v75;
    v18 = ((unint64_t)&v67 + ((a5 << 6) & 0x3F00)) | 8;
    v19.i64[0] = 0x300000003;
    v19.i64[1] = 0x300000003;
    do
    {
      v20 = v17;
      v21 = a3;
      v22 = a5 & 0xFC;
      do
      {
        v23 = *v21++;
        v24 = vandq_s8(v23, v19);
        _Q3 = vandq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v23, 0xAuLL), v19);
        v26 = vshrq_n_u32((uint32x4_t)v23, 0x14uLL);
        _Q1 = (int8x16_t)vshrq_n_u32((uint32x4_t)v23, 0x1EuLL);
        v28 = (int8x16_t)vshll_n_s32(*(int32x2_t *)_Q3.i8, 0x20uLL);
        __asm { SHLL2           V3.2D, V3.4S, #0x20 ; ' ' }
        v33.i64[0] = v24.u32[0];
        v33.i64[1] = v24.u32[1];
        v34 = v33;
        v33.i64[0] = v24.u32[2];
        v33.i64[1] = v24.u32[3];
        v35 = (int64x2_t)vorrq_s8(_Q3, v33);
        v36 = (int64x2_t)vorrq_s8(v28, v34);
        v37 = (int8x16_t)vshll_n_s32(*(int32x2_t *)_Q1.i8, 0x20uLL);
        __asm { SHLL2           V1.2D, V1.4S, #0x20 ; ' ' }
        v33.i64[0] = v26.i32[0] & 0xFFFFF3FF;
        v33.i64[1] = v26.i32[1] & 0xFFFFF3FF;
        v38 = v33;
        v33.i64[0] = v26.i32[2] & 0xFFFFF3FF;
        v33.i64[1] = v26.i32[3] & 0xFFFFF3FF;
        v39 = (int64x2_t)vorrq_s8(_Q1, v33);
        v40 = (int64x2_t)vorrq_s8(v37, v38);
        v20[-8] = vzip1q_s64(v36, v40);
        v20[-4] = vzip2q_s64(v36, v40);
        *v20 = vzip1q_s64(v35, v39);
        v20[4] = vzip2q_s64(v35, v39);
        v20 += 16;
        v22 -= 4;
      }
      while (v22);
      if ((a5 & 0xFC) != (unint64_t)a5)
      {
        v41 = (void *)v18;
        v42 = a5 & 0xFC;
        do
        {
          v43 = a3->u32[v42];
          *(v41 - 1) = v43 & 0x3FF | ((unint64_t)((v43 >> 10) & 0x3FF) << 32);
          *v41 = (4 * v43) & 0x300000000 | (v43 >> 20) & 0x3FF;
          ++v42;
          v41 += 8;
        }
        while (a5 != v42);
      }
      ++v16;
      a3 = (int8x16_t *)((char *)a3 + a4);
      ++v17;
      v18 += 16;
    }
    while (v16 != a6);
  }
  else
  {
    v11 = &a3->u32[2];
    v12 = (uint64_t *)&v71 + 1;
    do
    {
      v13 = *(v11 - 2);
      *(v12 - 9) = v13 & 0x3FF | ((unint64_t)((v13 >> 10) & 0x3FF) << 32);
      *(v12 - 8) = (4 * v13) & 0x300000000 | (v13 >> 20) & 0x3FF;
      if (a5 != 1)
      {
        v14 = *(v11 - 1);
        *(v12 - 1) = v14 & 0x3FF | ((unint64_t)((v14 >> 10) & 0x3FF) << 32);
        *v12 = (4 * v14) & 0x300000000 | (v14 >> 20) & 0x3FF;
        if (a5 != 2)
        {
          v15 = *v11;
          v12[7] = v15 & 0x3FF | ((unint64_t)((v15 >> 10) & 0x3FF) << 32);
          v12[8] = (4 * v15) & 0x300000000 | (v15 >> 20) & 0x3FF;
        }
      }
      v11 = (unsigned int *)((char *)v11 + a4);
      v12 += 2;
      --v10;
    }
    while (v10);
  }
  v59 = v67;
  v60 = v71;
  v61 = v68;
  v62 = v72;
  v63 = v75;
  v64 = v79;
  if (a5 >= 4) {
    v44 = 4;
  }
  else {
    v44 = a5;
  }
  if (a5 >= 4) {
    v45 = a5 - 4;
  }
  else {
    v45 = 0;
  }
  if (a6 >= 2) {
    v46 = 2;
  }
  else {
    v46 = a6;
  }
  v65 = v76;
  v66 = v80;
  if (a6 >= 2) {
    v47 = a6 - 2;
  }
  else {
    v47 = 0;
  }
  v49 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v59, a7, v44, v46);
  v59 = v69;
  v60 = v73;
  v61 = v70;
  v62 = v74;
  v63 = v77;
  v64 = v81;
  v65 = v78;
  v66 = v82;
  if (a6 >= 4) {
    v50 = 2;
  }
  else {
    v50 = v47;
  }
  v51 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 20, (uint64_t)&v59, a7, v44, v50);
  v59 = v83;
  v60 = v87;
  v61 = v84;
  v62 = v88;
  v63 = v91;
  v64 = v95;
  if (a5 >= 8) {
    v52 = 4;
  }
  else {
    v52 = v45;
  }
  v65 = v92;
  v66 = v96;
  v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 40, (uint64_t)&v59, a7, v52, v46);
  v59 = v85;
  v60 = v89;
  v61 = v86;
  v62 = v90;
  v63 = v93;
  v64 = v97;
  v65 = v94;
  v66 = v98;
  result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 60, (uint64_t)&v59, a7, v52, v50);
  if (v53) {
    v55 = 4;
  }
  else {
    v55 = 0;
  }
  if (v51) {
    v56 = 2;
  }
  else {
    v56 = 0;
  }
  if (result) {
    v57 = -8;
  }
  else {
    v57 = -16;
  }
  *a2 = v57 | v55 | v49 | v56;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v324 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v295 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v294 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v293 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v292 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v290 = v9;
  BOOL v291 = v14;
  v15 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::compBits;
  BOOL v16 = a4 < 2 || a5 == 0;
  do
  {
    uint64_t v17 = 0;
    unsigned int v19 = *v15++;
    unsigned int v18 = v19;
    *(unsigned int *)((char *)&v320 + v8 * 4) = v19;
    unsigned int v20 = v19 - 2;
    switch(v19)
    {
      case 2u:
        uint64_t v17 = 5;
        break;
      case 0xAu:
        uint64_t v17 = 1;
        break;
      case 0xCu:
        uint64_t v17 = 2;
        break;
      case 0x10u:
        uint64_t v17 = 3;
        break;
      case 0x20u:
        uint64_t v17 = 4;
        break;
      default:
        break;
    }
    v309[v8] = v17;
    unsigned int v21 = 1 << (v18 - 1);
    *(_DWORD *)((char *)&v308[2] + v8 * 4) = v21;
    v22 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      unsigned int v23 = *v22 ^ v21;
      v24 = &v311[v8];
      if (v23 == 1) {
        unsigned int v23 = 0;
      }
      unsigned int *v24 = v23;
      if ((v22[4] ^ v21) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v22[4] ^ v21;
      }
      v24[4] = v25;
      if ((v22[8] ^ v21) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v22[8] ^ v21;
      }
      v24[8] = v26;
      unsigned int v27 = v22[12] ^ v21;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v24[12] = v27;
      if ((v22[16] ^ v21) == 1) {
        unsigned int v28 = 0;
      }
      else {
        unsigned int v28 = v22[16] ^ v21;
      }
      v24[16] = v28;
      if ((v22[20] ^ v21) == 1) {
        unsigned int v29 = 0;
      }
      else {
        unsigned int v29 = v22[20] ^ v21;
      }
      v24[20] = v29;
      if ((v22[24] ^ v21) == 1) {
        unsigned int v30 = 0;
      }
      else {
        unsigned int v30 = v22[24] ^ v21;
      }
      v24[24] = v30;
      int v32 = v22[28] ^ v21;
      if (v32 == 1) {
        unsigned int v31 = 0;
      }
      else {
        unsigned int v31 = v32;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v23 = *v22 ^ v21;
      v24 = &v311[v8];
      unsigned int *v24 = v23;
      unsigned int v25 = v22[4] ^ v21;
      v24[4] = v25;
      unsigned int v26 = v22[8] ^ v21;
      v24[8] = v26;
      unsigned int v27 = v22[12] ^ v21;
      v24[12] = v27;
      unsigned int v28 = v22[16] ^ v21;
      v24[16] = v28;
      unsigned int v29 = v22[20] ^ v21;
      v24[20] = v29;
      unsigned int v30 = v22[24] ^ v21;
      v24[24] = v30;
      unsigned int v31 = v22[28] ^ v21;
    }
    else
    {
      unsigned int v23 = *v22;
      v24 = &v311[v8];
      unsigned int *v24 = *v22;
      unsigned int v25 = v22[4];
      v24[4] = v25;
      unsigned int v26 = v22[8];
      v24[8] = v26;
      unsigned int v27 = v22[12];
      v24[12] = v27;
      unsigned int v28 = v22[16];
      v24[16] = v28;
      unsigned int v29 = v22[20];
      v24[20] = v29;
      unsigned int v30 = v22[24];
      v24[24] = v30;
      unsigned int v31 = v22[28];
    }
    v24[28] = v31;
    v33 = &v316[v8 + 4];
    v316[v8 + 4] = v23;
    *(int *)((char *)&v317 + v8 * 4) = v23;
    v316[v8] = 0;
    unsigned int v34 = v23;
    if (v16)
    {
      if (v291) {
        goto LABEL_56;
      }
    }
    else
    {
      if (v25 < v23)
      {
        v316[v8] = 1;
        *(int *)((char *)&v317 + v8 * 4) = v25;
        unsigned int v34 = v25;
      }
      if (v23 >= v25) {
        v35 = &v316[v8 + 4];
      }
      else {
        v35 = &v311[v8 + 4];
      }
      unsigned int v23 = *v35;
      unsigned int *v33 = v23;
      if (v291)
      {
LABEL_56:
        if (v290) {
          goto LABEL_57;
        }
        goto LABEL_74;
      }
    }
    if (v26 < v34)
    {
      v316[v8] = 2;
      *(int *)((char *)&v317 + v8 * 4) = v26;
      unsigned int v34 = v26;
    }
    if (v23 >= v26) {
      v36 = &v316[v8 + 4];
    }
    else {
      v36 = &v311[v8 + 8];
    }
    unsigned int v23 = *v36;
    unsigned int *v33 = v23;
    if (v290)
    {
LABEL_57:
      if (v292) {
        goto LABEL_58;
      }
      goto LABEL_80;
    }
LABEL_74:
    if (v27 < v34)
    {
      v316[v8] = 3;
      *(int *)((char *)&v317 + v8 * 4) = v27;
      unsigned int v34 = v27;
    }
    if (v23 >= v27) {
      v37 = &v316[v8 + 4];
    }
    else {
      v37 = &v311[v8 + 12];
    }
    unsigned int v23 = *v37;
    unsigned int *v33 = v23;
    if (v292)
    {
LABEL_58:
      if (v294) {
        goto LABEL_59;
      }
      goto LABEL_86;
    }
LABEL_80:
    if (v28 < v34)
    {
      v316[v8] = 4;
      *(int *)((char *)&v317 + v8 * 4) = v28;
      unsigned int v34 = v28;
    }
    if (v23 >= v28) {
      v38 = &v316[v8 + 4];
    }
    else {
      v38 = &v311[v8 + 16];
    }
    unsigned int v23 = *v38;
    unsigned int *v33 = v23;
    if (v294)
    {
LABEL_59:
      if (v293) {
        goto LABEL_60;
      }
      goto LABEL_92;
    }
LABEL_86:
    if (v29 < v34)
    {
      v316[v8] = 5;
      *(int *)((char *)&v317 + v8 * 4) = v29;
      unsigned int v34 = v29;
    }
    if (v23 >= v29) {
      v39 = &v316[v8 + 4];
    }
    else {
      v39 = &v311[v8 + 20];
    }
    unsigned int v23 = *v39;
    unsigned int *v33 = v23;
    if (v293)
    {
LABEL_60:
      if (v295) {
        goto LABEL_104;
      }
LABEL_98:
      if (v31 < v34)
      {
        v316[v8] = 7;
        *(int *)((char *)&v317 + v8 * 4) = v31;
        unsigned int v34 = v31;
      }
      if (v23 >= v31) {
        v41 = &v316[v8 + 4];
      }
      else {
        v41 = &v311[v8 + 28];
      }
      unsigned int v23 = *v41;
      unsigned int *v33 = v23;
      goto LABEL_104;
    }
LABEL_92:
    if (v30 < v34)
    {
      v316[v8] = 6;
      *(int *)((char *)&v317 + v8 * 4) = v30;
      unsigned int v34 = v30;
    }
    if (v23 >= v30) {
      v40 = &v316[v8 + 4];
    }
    else {
      v40 = &v311[v8 + 24];
    }
    unsigned int v23 = *v40;
    unsigned int *v33 = v23;
    if (!v295) {
      goto LABEL_98;
    }
LABEL_104:
    unsigned int v42 = v23 - v34;
    unsigned int v43 = __clz(v23 - v34);
    unsigned int v44 = 32 - v43;
    int v45 = 1;
    switch(v20)
    {
      case 0u:
        BOOL v46 = v43 == 31;
        goto LABEL_116;
      case 6u:
        break;
      case 8u:
        if (v43 - 29 < 3) {
          unsigned int v44 = 3;
        }
        goto LABEL_120;
      case 0xAu:
        if ((v43 & 0x3C) == 0x1C) {
          unsigned int v44 = 4;
        }
        int v45 = -2;
        break;
      case 0xEu:
        BOOL v46 = v23 == 0xFFFF && v43 == 31;
LABEL_116:
        if (v46) {
          unsigned int v44 = 2;
        }
        goto LABEL_120;
      case 0x1Eu:
        unsigned int v44 = (v44 & 1) + (v44 >> 1);
LABEL_120:
        int v45 = -1;
        break;
      default:
        int v45 = 0;
        break;
    }
    unsigned int v47 = (v44 + v45) & ~((int)(v44 + v45) >> 31);
    if (v23 == v34 && v18 - 8 <= 4 && v47 <= 2)
    {
      if (v34) {
        unsigned int v47 = v34 != ~(-1 << v18) || v18 > 0xB;
      }
      else {
        unsigned int v47 = 0;
      }
    }
    *(unsigned int *)((char *)&v312 + v8 * 4) = v47;
    if ((a3 | 2) == 3)
    {
      BOOL v48 = 0;
      if (v23 >= v21 && v34 < v21) {
        BOOL v48 = kDQuadParamTable[160 * v17 + 8 + 10 * v47] == 0;
      }
    }
    else
    {
      BOOL v48 = 0;
    }
    if (v47 >= kDquadTransition[v17] || v48)
    {
      unsigned int v49 = kDQuadParamTable[160 * v17 + 4 + 10 * v47]
          - v48
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v17
            + 2);
      if (v48) {
        int v50 = 0;
      }
      else {
        int v50 = -2;
      }
      BOOL v56 = v18 >= v49;
      unsigned int v52 = v18 - v49;
      BOOL v51 = v52 != 0 && v56;
      int v53 = v34 & ~(-1 << v52);
      if (!v51) {
        int v53 = 0;
      }
      int v54 = v53 + v50;
      BOOL v51 = v54 < 1;
      unsigned int v55 = __clz(v54 + v42);
      BOOL v56 = v51 || v55 >= v43;
      if (v56)
      {
        if (v18 != 32) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned int *)((char *)&v312 + v8 * 4) = ++v47;
        if (v18 != 32) {
          goto LABEL_21;
        }
      }
      if (kDquadMaxMode[v17] < v47) {
        unsigned int v47 = kDquadMaxMode[v17];
      }
      *(unsigned int *)((char *)&v312 + v8 * 4) = v47;
    }
LABEL_21:
    ++v8;
  }
  while (v8 != 4);
  v308[0] = 0;
  v308[1] = 0;
  v307[0] = 0;
  v307[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v309, &v312, v308, v307);
  unint64_t v57 = 0;
  int v58 = 0;
  if (a4) {
    BOOL v59 = a5 == 0;
  }
  else {
    BOOL v59 = 1;
  }
  int v60 = v59;
  while (2)
  {
    uint64_t v62 = v309[v57 / 4];
    int v63 = *(unsigned int *)((char *)&v312 + v57);
    v64 = &kDQuadParamTable[160 * v62 + 10 * v63];
    int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
          + 4 * v62
          + 2);
    int v66 = v64[5];
    unsigned int v67 = v64[4] + v65;
    *(unsigned int *)((char *)&v303 + v57) = v67;
    int v68 = v66 + v65;
    *(unsigned int *)((char *)&v299 + v57) = v68;
    unint64_t v69 = *((void *)v64 + 1);
    int v70 = *(_DWORD *)((char *)v307 + v57) - *(_DWORD *)((char *)v308 + v57);
    if (v70 < 0)
    {
      if (kDQuadParamTable[160 * v62 + 7 + 10 * v63] < *(_DWORD *)((char *)v308 + v57)
                                                                    - *(_DWORD *)((char *)v307 + v57))
      {
        *(unsigned int *)((char *)&v299 + v57) = --v68;
        if (!kDQuadParamTable[160 * v62 + 8 + 10 * v63])
        {
          int v71 = -1;
LABEL_165:
          *(unsigned int *)((char *)&v303 + v57) = v71 + v67;
        }
      }
    }
    else if (v70)
    {
      v68 += v70;
      *(unsigned int *)((char *)&v299 + v57) = v68;
      int v71 = v70;
      goto LABEL_165;
    }
    if (v62 == 5)
    {
      int v72 = (v70 < 2) | v58;
      if (v63 == 1) {
        int v58 = v72;
      }
    }
    if (a3 == 4)
    {
      if (v62 == 3) {
        int v73 = 31744;
      }
      else {
        int v73 = 0;
      }
      if (v62 == 4) {
        int v74 = 2139095040;
      }
      else {
        int v74 = v73;
      }
      int v75 = 1 << (*(unsigned int *)((char *)&v320 + v57) - 1);
      if (v60)
      {
        if (v16) {
          goto LABEL_180;
        }
LABEL_194:
        unsigned int v79 = v311[v57 / 4 + 4];
        BOOL v81 = (v74 & ~v79) == 0 || v79 == v75;
        v58 |= v81;
        if (!v291) {
          goto LABEL_201;
        }
LABEL_181:
        if (v290) {
          goto LABEL_182;
        }
LABEL_208:
        unsigned int v85 = v311[v57 / 4 + 12];
        BOOL v87 = (v74 & ~v85) == 0 || v85 == v75;
        v58 |= v87;
        if (!v292) {
          goto LABEL_215;
        }
LABEL_183:
        if (v294) {
          goto LABEL_184;
        }
LABEL_222:
        unsigned int v91 = v311[v57 / 4 + 20];
        BOOL v93 = (v74 & ~v91) == 0 || v91 == v75;
        v58 |= v93;
        if (!v293) {
          goto LABEL_229;
        }
LABEL_185:
        if (!v295) {
          goto LABEL_236;
        }
      }
      else
      {
        unsigned int v76 = v311[v57 / 4];
        BOOL v78 = (v74 & ~v76) == 0 || v76 == v75;
        v58 |= v78;
        if (!v16) {
          goto LABEL_194;
        }
LABEL_180:
        if (v291) {
          goto LABEL_181;
        }
LABEL_201:
        unsigned int v82 = v311[v57 / 4 + 8];
        BOOL v84 = (v74 & ~v82) == 0 || v82 == v75;
        v58 |= v84;
        if (!v290) {
          goto LABEL_208;
        }
LABEL_182:
        if (v292) {
          goto LABEL_183;
        }
LABEL_215:
        unsigned int v88 = v311[v57 / 4 + 16];
        BOOL v90 = (v74 & ~v88) == 0 || v88 == v75;
        v58 |= v90;
        if (!v294) {
          goto LABEL_222;
        }
LABEL_184:
        if (v293) {
          goto LABEL_185;
        }
LABEL_229:
        unsigned int v94 = v311[v57 / 4 + 24];
        BOOL v96 = (v74 & ~v94) == 0 || v94 == v75;
        v58 |= v96;
        if (!v295)
        {
LABEL_236:
          unsigned int v97 = v311[v57 / 4 + 28];
          BOOL v99 = (v74 & ~v97) == 0 || v97 == v75;
          v58 |= v99;
        }
      }
    }
    if (v69 >> v68 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v57
                                       + 32))
      int v61 = 1;
    else {
      int v61 = v60;
    }
    v58 |= v61;
    v57 += 4;
    if (v57 != 16) {
      continue;
    }
    break;
  }
  uint64_t v100 = 0;
  uint64_t v297 = 0;
  uint64_t v298 = 0;
  memset(v296, 0, sizeof(v296));
  v101 = v311;
  v102 = v310;
  do
  {
    uint64_t v103 = 0;
    unsigned int v104 = 0;
    unsigned int v105 = *(&v320 + v100);
    if (v105 >= *(&v303 + v100)) {
      unsigned int v106 = *(&v303 + v100);
    }
    else {
      unsigned int v106 = *(&v320 + v100);
    }
    *(&v303 + v100) = v106;
    v107 = &kDQuadParamTable[160 * v309[v100] + 10 * *(&v312 + v100)];
    unsigned int v108 = *(&v299 + v100);
    if (v107[5]) {
      unsigned int v109 = v105;
    }
    else {
      unsigned int v109 = 0;
    }
    if (v109 < v108) {
      unsigned int v108 = v109;
    }
    int v110 = *(&v317 + v100) & (-1 << (v105 - v106));
    v111 = &v311[v100];
    int v112 = *v111 - v110;
    v113 = &v310[2 * v100];
    if (v60) {
      int v112 = 0;
    }
    int v114 = v111[4] - v110;
    if (v16) {
      int v114 = 0;
    }
    _DWORD *v113 = v112;
    v113[1] = v114;
    int v115 = v111[8] - v110;
    if (v291) {
      int v115 = 0;
    }
    int v116 = v111[12] - v110;
    if (v290) {
      int v116 = 0;
    }
    v113[2] = v115;
    v113[3] = v116;
    int v117 = v111[16] - v110;
    if (v292) {
      int v117 = 0;
    }
    int v118 = v111[20] - v110;
    if (v294) {
      int v118 = 0;
    }
    v113[4] = v117;
    v113[5] = v118;
    uint64_t v119 = -1 << v105;
    *(&v299 + v100) = v108;
    unint64_t v120 = *((void *)v107 + 1);
    *((_DWORD *)&v297 + v100) = v110;
    unint64_t v121 = v120 >> v108;
    int v122 = v111[24] - v110;
    if (v293) {
      int v122 = 0;
    }
    int v123 = v111[28] - v110;
    if (v295) {
      int v123 = 0;
    }
    v113[6] = v122;
    v113[7] = v123;
    if (v121 <= 1) {
      unint64_t v124 = 1;
    }
    else {
      unint64_t v124 = v121;
    }
    uint64_t v125 = 4 * v316[v100];
    v126 = &byte_242EA911D;
    do
    {
      if (v125 != v103)
      {
        if (v108) {
          unint64_t v127 = *(unsigned int *)((char *)v102 + v103) / v124;
        }
        else {
          LODWORD(v127) = 0;
        }
        v128 = (int *)v296 + 7 * v100 + v104;
        int *v128 = v127;
        if (v121 >= 2)
        {
          unint64_t v129 = *(unsigned int *)((char *)v102 + v103);
          if (v129)
          {
            if (v129 / v124 * v124 == v129 && ((v129 / v124) & 1) != 0)
            {
              if (v110 || v127 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v131 = v101[v103], v132 = *((unsigned int *)&v308[2] + v100), v131 != v132)
                  && ((a3 | 2) != 3 || v124 + v132 != v131))
                {
                  LODWORD(v127) = v127 - 1;
                  int *v128 = v127;
                }
              }
              else
              {
                LODWORD(v127) = 1;
              }
            }
          }
        }
        if ((unint64_t)v127 >> v108 || v101[v103] == ~v119) {
          int *v128 = ~(-1 << v108);
        }
        if (*v126 >= a5 || *(v126 - 1) >= a4) {
          int *v128 = 0;
        }
        ++v104;
      }
      v103 += 4;
      v126 += 2;
    }
    while (v103 != 32);
    ++v100;
    v102 += 2;
    ++v101;
  }
  while (v100 != 4);
  v133 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v134 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  if (v58)
  {
    uint64_t v135 = 0;
    uint64_t v136 = 0;
    unsigned int v137 = v320;
    unsigned int v138 = v321;
    uint64_t v139 = v320 - 4;
    uint64_t v140 = v321 - 4;
    unsigned int v141 = v322;
    unint64_t v142 = v323;
    uint64_t v143 = v322 - 4;
    uint64_t v144 = 8 * (a1 & 7);
    while (1)
    {
      v145 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v135;
      BOOL v146 = v145[1] >= a5 || *v145 >= a4;
      char v147 = v146;
      if (v146)
      {
        unint64_t v148 = 0;
        if (v139 > 0x100) {
          goto LABEL_321;
        }
      }
      else
      {
        unint64_t v148 = (unint64_t)v311[4 * v135] >> 4;
        if (v139 > 0x100) {
          goto LABEL_321;
        }
      }
      if (v137 != 4 && (unint64_t)(v144 - v134 + (v136 << 6) + v139) <= 0xA0)
      {
        uint64_t v149 = 0;
        unint64_t v150 = v137 - 4;
        do
        {
          unint64_t v151 = 64 - v144;
          if (64 - v144 >= v150) {
            unint64_t v151 = v150;
          }
          v133[v136] |= ((v148 >> v149) & ~(-1 << v151)) << v144;
          v149 += v151;
          unint64_t v152 = v151 + v144;
          v136 += v152 >> 6;
          uint64_t v144 = v152 & 0x3F;
          v150 -= v151;
        }
        while (v150);
      }
LABEL_321:
      if (v147)
      {
        unint64_t v153 = 0;
        if (v140 > 0x100) {
          goto LABEL_331;
        }
      }
      else
      {
        unint64_t v153 = (unint64_t)v311[4 * v135 + 1] >> 4;
        if (v140 > 0x100) {
          goto LABEL_331;
        }
      }
      if (v138 != 4 && (unint64_t)(v144 - v134 + (v136 << 6) + v140) <= 0xA0)
      {
        uint64_t v154 = 0;
        unint64_t v155 = v138 - 4;
        do
        {
          unint64_t v156 = 64 - v144;
          if (64 - v144 >= v155) {
            unint64_t v156 = v155;
          }
          v133[v136] |= ((v153 >> v154) & ~(-1 << v156)) << v144;
          v154 += v156;
          unint64_t v157 = v156 + v144;
          v136 += v157 >> 6;
          uint64_t v144 = v157 & 0x3F;
          v155 -= v156;
        }
        while (v155);
      }
LABEL_331:
      if (v147)
      {
        unint64_t v158 = 0;
        if (v143 > 0x100) {
          goto LABEL_341;
        }
      }
      else
      {
        unint64_t v158 = (unint64_t)v311[4 * v135 + 2] >> 4;
        if (v143 > 0x100) {
          goto LABEL_341;
        }
      }
      if (v141 != 4 && (unint64_t)(v144 - v134 + (v136 << 6) + v143) <= 0xA0)
      {
        uint64_t v159 = 0;
        unint64_t v160 = v141 - 4;
        do
        {
          unint64_t v161 = 64 - v144;
          if (64 - v144 >= v160) {
            unint64_t v161 = v160;
          }
          v133[v136] |= ((v158 >> v159) & ~(-1 << v161)) << v144;
          v159 += v161;
          unint64_t v162 = v161 + v144;
          v136 += v162 >> 6;
          uint64_t v144 = v162 & 0x3F;
          v160 -= v161;
        }
        while (v160);
      }
LABEL_341:
      if (v147)
      {
        unint64_t v163 = 0;
        if (v142 <= 0x100) {
          goto LABEL_345;
        }
      }
      else
      {
        unint64_t v163 = v311[4 * v135 + 3];
        if (v142 <= 0x100)
        {
LABEL_345:
          if (v142 && v144 - v134 + (v136 << 6) + v142 <= 0xA0)
          {
            uint64_t v164 = 0;
            unint64_t v165 = v142;
            do
            {
              unint64_t v166 = 64 - v144;
              if (64 - v144 >= v165) {
                unint64_t v166 = v165;
              }
              v133[v136] |= ((v163 >> v164) & ~(-1 << v166)) << v144;
              v164 += v166;
              unint64_t v167 = v166 + v144;
              v136 += v167 >> 6;
              uint64_t v144 = v167 & 0x3F;
              v165 -= v166;
            }
            while (v165);
          }
        }
      }
      if (++v135 == 8) {
        return v58 & 1;
      }
    }
  }
  unsigned int v168 = v312;
  char v169 = v317 | v312;
  if (v317 | v312)
  {
    char v169 = v312 - 2;
    if (v312 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v312 + 1;
      goto LABEL_356;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_356:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  *v133 |= (unint64_t)(v169 & 7) << v134;
  uint64_t v174 = v134 | 3;
  unsigned int v175 = v313;
  char v176 = v318 | v313;
  if (v318 | v313)
  {
    char v176 = v313 - 2;
    if (v313 <= 2)
    {
      char v176 = 0;
      char v177 = 0;
      unsigned int v178 = v313 + 1;
      goto LABEL_362;
    }
    unsigned int v180 = 0;
    unsigned int v178 = 0;
    int v179 = 0;
    char v177 = 1;
  }
  else
  {
    char v177 = 0;
    unsigned int v178 = 0;
LABEL_362:
    int v179 = 1;
    unsigned int v180 = 2;
  }
  if ((unint64_t)(v174 - v134 - 158) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    *v133 |= (unint64_t)(v176 & 7) << v174;
    uint64_t v174 = v134 | 6;
  }
  unsigned int v181 = v314;
  if (v319 | v314)
  {
    unsigned int v182 = v314 - 2;
    if (v314 <= 2)
    {
      unsigned int v182 = 0;
      char v183 = 0;
      unsigned int v184 = v314 + 1;
      goto LABEL_370;
    }
    unsigned int v186 = 0;
    unsigned int v184 = 0;
    int v185 = 0;
    char v183 = 1;
  }
  else
  {
    unsigned int v182 = 0;
    char v183 = 0;
    unsigned int v184 = 0;
LABEL_370:
    int v185 = 1;
    unsigned int v186 = 2;
  }
  if ((unint64_t)(v174 - v134 - 158) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    uint64_t v187 = 0;
    uint64_t v188 = 0;
    unint64_t v189 = 3;
    do
    {
      unint64_t v190 = 64 - v174;
      if (64 - v174 >= v189) {
        unint64_t v190 = v189;
      }
      v133[v187] |= (((unint64_t)v182 >> v188) & ~(-1 << v190)) << v174;
      v188 += v190;
      unint64_t v191 = v190 + v174;
      v187 += v191 >> 6;
      uint64_t v174 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  else
  {
    uint64_t v187 = 0;
  }
  int v192 = v315;
  if ((unint64_t)(v174 - v134 + (v187 << 6) - 160) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    v133[v187] |= (unint64_t)(v315 & 1) << v174;
    unint64_t v193 = v174 + 1;
    v187 += v193 >> 6;
    uint64_t v174 = v193 & 0x3F;
  }
  if (v172)
  {
    unint64_t v194 = v173;
    if (v174 - v134 + (v187 << 6) + (unint64_t)v173 > 0xA0) {
      char v170 = 1;
    }
    if ((v170 & 1) == 0)
    {
      uint64_t v195 = 0;
      do
      {
        unint64_t v196 = 64 - v174;
        if (64 - v174 >= v194) {
          unint64_t v196 = v194;
        }
        v133[v187] |= (((unint64_t)v171 >> v195) & ~(-1 << v196)) << v174;
        v195 += v196;
        unint64_t v197 = v196 + v174;
        v187 += v197 >> 6;
        uint64_t v174 = v197 & 0x3F;
        v194 -= v196;
      }
      while (v194);
    }
    int v198 = v173 + 10;
    if (!v179)
    {
LABEL_389:
      if (v185) {
        goto LABEL_390;
      }
LABEL_409:
      unsigned int v204 = v320;
      if (v168) {
        goto LABEL_410;
      }
LABEL_419:
      if (v204 == 2 || v204 >= 0x10) {
        goto LABEL_410;
      }
      unsigned int v215 = v321;
      if (v175) {
        goto LABEL_422;
      }
LABEL_523:
      if (v215 == 2 || v215 >= 0x10) {
        goto LABEL_422;
      }
      goto LABEL_430;
    }
  }
  else
  {
    int v198 = 10;
    if (!v179) {
      goto LABEL_389;
    }
  }
  unint64_t v205 = v180;
  if (v174 - v134 + (v187 << 6) + (unint64_t)v180 > 0xA0) {
    char v177 = 1;
  }
  if ((v177 & 1) == 0)
  {
    uint64_t v206 = 0;
    do
    {
      unint64_t v207 = 64 - v174;
      if (64 - v174 >= v205) {
        unint64_t v207 = v205;
      }
      v133[v187] |= (((unint64_t)v178 >> v206) & ~(-1 << v207)) << v174;
      v206 += v207;
      unint64_t v208 = v207 + v174;
      v187 += v208 >> 6;
      uint64_t v174 = v208 & 0x3F;
      v205 -= v207;
    }
    while (v205);
  }
  v198 += v180;
  if (!v185) {
    goto LABEL_409;
  }
LABEL_390:
  unint64_t v199 = v186;
  if (v174 - v134 + (v187 << 6) + (unint64_t)v186 > 0xA0) {
    char v200 = 1;
  }
  else {
    char v200 = v183;
  }
  if ((v200 & 1) == 0)
  {
    uint64_t v201 = 0;
    do
    {
      unint64_t v202 = 64 - v174;
      if (64 - v174 >= v199) {
        unint64_t v202 = v199;
      }
      v133[v187] |= (((unint64_t)v184 >> v201) & ~(-1 << v202)) << v174;
      v201 += v202;
      unint64_t v203 = v202 + v174;
      v187 += v203 >> 6;
      uint64_t v174 = v203 & 0x3F;
      v199 -= v202;
    }
    while (v199);
  }
  v198 += v186;
  unsigned int v204 = v320;
  if (!v168) {
    goto LABEL_419;
  }
LABEL_410:
  unsigned int v209 = v303;
  if (v303 <= 0x100 && v303 && v174 - v134 + (v187 << 6) + (unint64_t)v303 <= 0xA0)
  {
    uint64_t v210 = 0;
    unint64_t v211 = v297 >> (v204 - v303);
    unint64_t v212 = v303;
    do
    {
      unint64_t v213 = 64 - v174;
      if (64 - v174 >= v212) {
        unint64_t v213 = v212;
      }
      v133[v187] |= ((v211 >> v210) & ~(-1 << v213)) << v174;
      v210 += v213;
      unint64_t v214 = v213 + v174;
      v187 += v214 >> 6;
      uint64_t v174 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  v198 += v209;
  unsigned int v215 = v321;
  if (!v175) {
    goto LABEL_523;
  }
LABEL_422:
  unsigned int v216 = v304;
  if (v304 <= 0x100 && v304 && v174 - v134 + (v187 << 6) + (unint64_t)v304 <= 0xA0)
  {
    uint64_t v217 = 0;
    unint64_t v218 = (HIDWORD(v297) >> (v215 - v304));
    unint64_t v219 = v304;
    do
    {
      unint64_t v220 = 64 - v174;
      if (64 - v174 >= v219) {
        unint64_t v220 = v219;
      }
      v133[v187] |= ((v218 >> v217) & ~(-1 << v220)) << v174;
      v217 += v220;
      unint64_t v221 = v220 + v174;
      v187 += v221 >> 6;
      uint64_t v174 = v221 & 0x3F;
      v219 -= v220;
    }
    while (v219);
  }
  v198 += v216;
LABEL_430:
  if (v181 || v322 == 2 || v322 >= 0x10)
  {
    unsigned int v222 = v305;
    if (v305 <= 0x100 && v305 && v174 - v134 + (v187 << 6) + (unint64_t)v305 <= 0xA0)
    {
      uint64_t v223 = 0;
      unint64_t v224 = v298 >> (v322 - v305);
      unint64_t v225 = v305;
      do
      {
        unint64_t v226 = 64 - v174;
        if (64 - v174 >= v225) {
          unint64_t v226 = v225;
        }
        v133[v187] |= ((v224 >> v223) & ~(-1 << v226)) << v174;
        v223 += v226;
        unint64_t v227 = v226 + v174;
        v187 += v227 >> 6;
        uint64_t v174 = v227 & 0x3F;
        v225 -= v226;
      }
      while (v225);
    }
    v198 += v222;
  }
  if (v192 || v323 == 2 || v323 >= 0x10)
  {
    unsigned int v228 = v306;
    if (v306 <= 0x100 && v306 && v174 - v134 + (v187 << 6) + (unint64_t)v306 <= 0xA0)
    {
      uint64_t v229 = 0;
      unint64_t v230 = (HIDWORD(v298) >> (v323 - v306));
      unint64_t v231 = v306;
      do
      {
        unint64_t v232 = 64 - v174;
        if (64 - v174 >= v231) {
          unint64_t v232 = v231;
        }
        v133[v187] |= ((v230 >> v229) & ~(-1 << v232)) << v174;
        v229 += v232;
        unint64_t v233 = v232 + v174;
        v187 += v233 >> 6;
        uint64_t v174 = v233 & 0x3F;
        v231 -= v232;
      }
      while (v231);
    }
    v198 += v228;
  }
  unint64_t v234 = v299;
  if (v299)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xA0)
    {
      uint64_t v235 = 0;
      unint64_t v236 = v316[0];
      unint64_t v237 = 3;
      do
      {
        unint64_t v238 = 64 - v174;
        if (64 - v174 >= v237) {
          unint64_t v238 = v237;
        }
        v133[v187] |= ((v236 >> v235) & ~(-1 << v238)) << v174;
        v235 += v238;
        unint64_t v239 = v238 + v174;
        v187 += v239 >> 6;
        uint64_t v174 = v239 & 0x3F;
        v237 -= v238;
      }
      while (v237);
    }
    v198 += 3;
  }
  unint64_t v240 = v300;
  if (v300)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xA0)
    {
      uint64_t v241 = 0;
      unint64_t v242 = v316[1];
      unint64_t v243 = 3;
      do
      {
        unint64_t v244 = 64 - v174;
        if (64 - v174 >= v243) {
          unint64_t v244 = v243;
        }
        v133[v187] |= ((v242 >> v241) & ~(-1 << v244)) << v174;
        v241 += v244;
        unint64_t v245 = v244 + v174;
        v187 += v245 >> 6;
        uint64_t v174 = v245 & 0x3F;
        v243 -= v244;
      }
      while (v243);
    }
    v198 += 3;
  }
  unint64_t v246 = v301;
  if (v301)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xA0)
    {
      uint64_t v247 = 0;
      unint64_t v248 = v316[2];
      unint64_t v249 = 3;
      do
      {
        unint64_t v250 = 64 - v174;
        if (64 - v174 >= v249) {
          unint64_t v250 = v249;
        }
        v133[v187] |= ((v248 >> v247) & ~(-1 << v250)) << v174;
        v247 += v250;
        unint64_t v251 = v250 + v174;
        v187 += v251 >> 6;
        uint64_t v174 = v251 & 0x3F;
        v249 -= v250;
      }
      while (v249);
    }
    v198 += 3;
  }
  unint64_t v252 = v302;
  if (v302)
  {
    if ((unint64_t)(v174 - v134 + (v187 << 6) + 3) <= 0xA0)
    {
      uint64_t v253 = 0;
      unint64_t v254 = v316[3];
      unint64_t v255 = 3;
      do
      {
        unint64_t v256 = 64 - v174;
        if (64 - v174 >= v255) {
          unint64_t v256 = v255;
        }
        v133[v187] |= ((v254 >> v253) & ~(-1 << v256)) << v174;
        v253 += v256;
        unint64_t v257 = v256 + v174;
        v187 += v257 >> 6;
        uint64_t v174 = v257 & 0x3F;
        v255 -= v256;
      }
      while (v255);
    }
    v198 += 3;
  }
  unsigned int v258 = 160 - v198;
  unsigned int v259 = (160 - v198) / 7u;
  unint64_t v260 = v258 % 7;
  if ((v260 - 257) >= 0xFFFFFF00 && v174 - v134 + (v187 << 6) + v260 <= 0xA0)
  {
    do
    {
      unint64_t v261 = 64 - v174;
      if (64 - v174 >= v260) {
        unint64_t v261 = v260;
      }
      unint64_t v262 = v261 + v174;
      v187 += v262 >> 6;
      uint64_t v174 = v262 & 0x3F;
      v260 -= v261;
    }
    while (v260);
  }
  uint64_t v263 = 0;
  while (2)
  {
    if (v234 && v234 <= 0x100 && v174 - v134 + (v187 << 6) + v234 <= 0xA0)
    {
      uint64_t v264 = 0;
      unint64_t v265 = *((unsigned int *)v296 + v263);
      unint64_t v266 = v234;
      do
      {
        unint64_t v267 = 64 - v174;
        if (64 - v174 >= v266) {
          unint64_t v267 = v266;
        }
        v133[v187] |= ((v265 >> v264) & ~(-1 << v267)) << v174;
        v264 += v267;
        unint64_t v268 = v267 + v174;
        v187 += v268 >> 6;
        uint64_t v174 = v268 & 0x3F;
        v266 -= v267;
      }
      while (v266);
    }
    if (!v240)
    {
      int v274 = v234;
      if (!v246) {
        goto LABEL_507;
      }
      goto LABEL_500;
    }
    if (v240 <= 0x100 && v174 - v134 + (v187 << 6) + v240 <= 0xA0)
    {
      uint64_t v269 = 0;
      unint64_t v270 = *((unsigned int *)&v296[1] + v263 + 3);
      unint64_t v271 = v240;
      do
      {
        unint64_t v272 = 64 - v174;
        if (64 - v174 >= v271) {
          unint64_t v272 = v271;
        }
        v133[v187] |= ((v270 >> v269) & ~(-1 << v272)) << v174;
        v269 += v272;
        unint64_t v273 = v272 + v174;
        v187 += v273 >> 6;
        uint64_t v174 = v273 & 0x3F;
        v271 -= v272;
      }
      while (v271);
    }
    int v274 = v240 + v234;
    if (v246)
    {
LABEL_500:
      if (v246 <= 0x100 && v174 - v134 + (v187 << 6) + v246 <= 0xA0)
      {
        uint64_t v275 = 0;
        unint64_t v276 = *((unsigned int *)&v296[3] + v263 + 2);
        unint64_t v277 = v246;
        do
        {
          unint64_t v278 = 64 - v174;
          if (64 - v174 >= v277) {
            unint64_t v278 = v277;
          }
          v133[v187] |= ((v276 >> v275) & ~(-1 << v278)) << v174;
          v275 += v278;
          unint64_t v279 = v278 + v174;
          v187 += v279 >> 6;
          uint64_t v174 = v279 & 0x3F;
          v277 -= v278;
        }
        while (v277);
      }
      v274 += v246;
    }
LABEL_507:
    if (v252)
    {
      if (v252 <= 0x100 && v174 - v134 + (v187 << 6) + v252 <= 0xA0)
      {
        uint64_t v280 = 0;
        unint64_t v281 = *((unsigned int *)&v296[5] + v263 + 1);
        unint64_t v282 = v252;
        do
        {
          unint64_t v283 = 64 - v174;
          if (64 - v174 >= v282) {
            unint64_t v283 = v282;
          }
          v133[v187] |= ((v281 >> v280) & ~(-1 << v283)) << v174;
          v280 += v283;
          unint64_t v284 = v283 + v174;
          v187 += v284 >> 6;
          uint64_t v174 = v284 & 0x3F;
          v282 -= v283;
        }
        while (v282);
      }
      v274 += v252;
    }
    unint64_t v285 = v259 - v274;
    if (v285 && v285 <= 0x100 && v174 - v134 + (v187 << 6) + v285 <= 0xA0)
    {
      do
      {
        unint64_t v286 = 64 - v174;
        if (64 - v174 >= v285) {
          unint64_t v286 = v285;
        }
        unint64_t v287 = v286 + v174;
        v187 += v287 >> 6;
        uint64_t v174 = v287 & 0x3F;
        v285 -= v286;
      }
      while (v285);
    }
    if (++v263 != 7) {
      continue;
    }
    return v58 & 1;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = (a3 & 0xFFFFFFFD) == 1;
  int v9 = 2 * v8;
  int v10 = v8 << 9;
  uint64_t result = -1;
  uint64_t v12 = v6;
  do
  {
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 155) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 6;
      do
      {
        unint64_t v17 = 64 - v12;
        if (64 - v12 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v17)) << v15;
        v15 += v17;
        unint64_t v18 = v17 + v12;
        v4 += v18 >> 6;
        uint64_t v12 = v18 & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      char v14 = 0;
    }
    int v19 = 16 * (v14 & 0x3F);
    if (a3 != 4)
    {
      BOOL v21 = v19 == 512 && v7 == 1;
      if (!v21 && v19)
      {
        if (v19 == 1008) {
          int v19 = 1023;
        }
        else {
          v19 |= 8 - (v14 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 16 * v3) = v19 ^ v10;
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 155) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v20 = 0;
      uint64_t v22 = 0;
      unint64_t v23 = 6;
      do
      {
        unint64_t v24 = 64 - v12;
        if (64 - v12 >= v23) {
          unint64_t v24 = v23;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v24)) << v22;
        v22 += v24;
        unint64_t v25 = v24 + v12;
        v4 += v25 >> 6;
        uint64_t v12 = v25 & 0x3F;
        v23 -= v24;
      }
      while (v23);
    }
    else
    {
      char v20 = 0;
    }
    int v26 = 16 * (v20 & 0x3F);
    int v27 = (8 - (v20 & 1)) | v26;
    if (v26 == 1008) {
      int v27 = 1023;
    }
    if (v26 == 512 && v7 == 1 || v26 == 0) {
      int v27 = v26;
    }
    if (a3 == 4) {
      int v27 = v26;
    }
    int v30 = v27 ^ v10;
    uint64_t v31 = a2 + 16 * v3;
    *(_DWORD *)(v31 + 4) = v30;
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 155) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v32 = 0;
      uint64_t v33 = 0;
      unint64_t v34 = 6;
      do
      {
        unint64_t v35 = 64 - v12;
        if (64 - v12 >= v34) {
          unint64_t v35 = v34;
        }
        v32 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v35)) << v33;
        v33 += v35;
        unint64_t v36 = v35 + v12;
        v4 += v36 >> 6;
        uint64_t v12 = v36 & 0x3F;
        v34 -= v35;
      }
      while (v34);
    }
    else
    {
      char v32 = 0;
    }
    int v37 = 16 * (v32 & 0x3F);
    int v38 = (8 - (v32 & 1)) | v37;
    if (v37 == 1008) {
      int v38 = 1023;
    }
    if (v37 == 512 && v7 == 1 || v37 == 0) {
      int v38 = v37;
    }
    if (a3 == 4) {
      int v38 = v37;
    }
    *(_DWORD *)(v31 + 8) = v38 ^ v10;
    if ((unint64_t)(v12 - v6 + (v4 << 6) - 159) < 0xFFFFFFFFFFFFFF5FLL)
    {
      char v13 = 0;
    }
    else
    {
      char v13 = 0;
      uint64_t v41 = 0;
      unint64_t v42 = 2;
      do
      {
        unint64_t v43 = 64 - v12;
        if (64 - v12 >= v42) {
          unint64_t v43 = v42;
        }
        v13 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> v12) & ~(-1 << v43)) << v41;
        v41 += v43;
        unint64_t v44 = v43 + v12;
        v4 += v44 >> 6;
        uint64_t v12 = v44 & 0x3F;
        v42 -= v43;
      }
      while (v42);
    }
    *(_DWORD *)(a2 + 16 * v3++ + 12) = v13 & 3 ^ v9;
  }
  while (v3 != 8);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v259 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (v7 >> v6) & 7;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x9D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x9D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  uint64_t v12 = v10 - v6;
  if ((unint64_t)(v10 - v6 - 158) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    uint64_t v13 = 0;
    char v14 = 0;
    uint64_t v15 = 0;
    unint64_t v16 = 3;
    do
    {
      unint64_t v17 = 64 - v10;
      if (64 - v10 >= v16) {
        unint64_t v17 = v16;
      }
      v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
      v15 += v17;
      v13 += (v17 + v10) >> 6;
      uint64_t v10 = (v17 + v10) & 0x3F;
      v16 -= v17;
    }
    while (v16);
    uint64_t v12 = v10 - v6;
  }
  else
  {
    uint64_t v13 = 0;
    char v14 = 0;
  }
  if ((unint64_t)(v12 + (v13 << 6) - 160) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    unint64_t v18 = v10 + 1;
    uint64_t v19 = *(void *)(v5 + 8 * v13) >> v10;
    uint64_t v10 = (v10 + 1) & 0x3F;
    v13 += v18 >> 6;
    int v232 = v19 & 1;
  }
  else
  {
    int v232 = 0;
  }
  v248[0] = 10;
  uint64_t v231 = a2;
  if (v8)
  {
    char v20 = 0;
    int v21 = 10;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 159) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v20 = 0;
      uint64_t v22 = 0;
      unint64_t v23 = 2;
      do
      {
        unint64_t v24 = 64 - v10;
        if (64 - v10 >= v23) {
          unint64_t v24 = v23;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v24)) << v22;
        v22 += v24;
        v13 += (v24 + v10) >> 6;
        uint64_t v10 = (v24 + v10) & 0x3F;
        v23 -= v24;
      }
      while (v23);
    }
    else
    {
      char v20 = 0;
    }
    int v21 = 12;
  }
  int v233 = v21;
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)2>::getDquadModeData(0, v8, v20, &v249);
  unsigned int v252 = 1;
  v248[1] = 10;
  if (v11)
  {
    int v25 = 0;
    char v26 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 159) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v26 = 0;
      uint64_t v27 = 0;
      unint64_t v28 = 2;
      do
      {
        unint64_t v29 = 64 - v10;
        if (64 - v10 >= v28) {
          unint64_t v29 = v28;
        }
        v26 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v29)) << v27;
        v27 += v29;
        v13 += (v29 + v10) >> 6;
        uint64_t v10 = (v29 + v10) & 0x3F;
        v28 -= v29;
      }
      while (v28);
    }
    else
    {
      char v26 = 0;
    }
    int v25 = 2;
  }
  int v256 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)2>::getDquadModeData(1, v11, v26, &v250);
  unsigned int v253 = 1;
  v248[2] = 10;
  if (v14)
  {
    int v30 = 0;
    char v31 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 159) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 2;
      do
      {
        unint64_t v34 = 64 - v10;
        if (64 - v10 >= v33) {
          unint64_t v34 = v33;
        }
        v31 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v34)) << v32;
        v32 += v34;
        v13 += (v34 + v10) >> 6;
        uint64_t v10 = (v34 + v10) & 0x3F;
        v33 -= v34;
      }
      while (v33);
    }
    else
    {
      char v31 = 0;
    }
    int v30 = 2;
  }
  int v35 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)2>::getDquadModeData(2, v14, v31, v251);
  v248[3] = 2;
  v251[1] = 0;
  int v257 = v35;
  int v258 = v232;
  uint64_t v254 = 0x500000001;
  uint64_t v246 = 0;
  uint64_t v247 = 0;
  uint64_t v244 = 0;
  uint64_t v245 = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(&v252, &DquadModeData, &v246, &v244);
  int v36 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v252
        + 2);
  unsigned int v37 = DquadModeData;
  int v38 = &kDQuadParamTable[160 * v252 + 10 * DquadModeData];
  int v40 = v38[4];
  int v39 = v38[5];
  unsigned int v41 = v40 + v36;
  unsigned int v42 = v39 + v36;
  int v43 = v244 - v246;
  if ((int)v244 - (int)v246 >= 0)
  {
    if (!v43) {
      goto LABEL_50;
    }
    v42 += v43;
    goto LABEL_47;
  }
  if (kDQuadParamTable[160 * v252 + 7 + 10 * DquadModeData] < (int)v246 - (int)v244)
  {
    --v42;
    if (!kDQuadParamTable[160 * v252 + 8 + 10 * DquadModeData])
    {
      int v43 = -1;
LABEL_47:
      v41 += v43;
    }
  }
LABEL_50:
  if (v41 >= 0xA) {
    unsigned int v41 = 10;
  }
  LODWORD(v242) = v41;
  if (v39) {
    unsigned int v44 = 10;
  }
  else {
    unsigned int v44 = 0;
  }
  if (v44 < v42) {
    unsigned int v42 = v44;
  }
  LODWORD(v240) = v42;
  int v45 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v253
        + 2);
  int v46 = v256;
  unsigned int v47 = &kDQuadParamTable[160 * v253 + 10 * v256];
  int v49 = v47[4];
  int v48 = v47[5];
  unsigned int v50 = v49 + v45;
  unsigned int v51 = v48 + v45;
  int v52 = HIDWORD(v244) - HIDWORD(v246);
  if (HIDWORD(v244) - HIDWORD(v246) >= 0)
  {
    if (!v52) {
      goto LABEL_63;
    }
    v51 += v52;
    goto LABEL_60;
  }
  if (kDQuadParamTable[160 * v253 + 7 + 10 * v256] < HIDWORD(v246) - HIDWORD(v244))
  {
    --v51;
    if (!kDQuadParamTable[160 * v253 + 8 + 10 * v256])
    {
      int v52 = -1;
LABEL_60:
      v50 += v52;
    }
  }
LABEL_63:
  if (v50 >= 0xA) {
    unsigned int v50 = 10;
  }
  HIDWORD(v242) = v50;
  if (v48) {
    unsigned int v53 = 10;
  }
  else {
    unsigned int v53 = 0;
  }
  if (v53 < v51) {
    unsigned int v51 = v53;
  }
  HIDWORD(v240) = v51;
  int v54 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v254
        + 2);
  int v55 = v257;
  BOOL v56 = &kDQuadParamTable[160 * v254 + 10 * v257];
  int v57 = v56[5];
  unsigned int v58 = v56[4] + v54;
  unsigned int v59 = v57 + v54;
  int v60 = v245 - v247;
  if ((int)v245 - (int)v247 >= 0)
  {
    if (!v60) {
      goto LABEL_76;
    }
    v59 += v60;
    goto LABEL_73;
  }
  if (kDQuadParamTable[160 * v254 + 7 + 10 * v257] < (int)v247 - (int)v245)
  {
    --v59;
    if (!kDQuadParamTable[160 * v254 + 8 + 10 * v257])
    {
      int v60 = -1;
LABEL_73:
      v58 += v60;
    }
  }
LABEL_76:
  if (v58 >= 0xA) {
    unsigned int v58 = 10;
  }
  LODWORD(v243) = v58;
  if (v57) {
    unsigned int v61 = 10;
  }
  else {
    unsigned int v61 = 0;
  }
  if (v61 < v59) {
    unsigned int v59 = v61;
  }
  LODWORD(v241) = v59;
  int v62 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * HIDWORD(v254)
        + 2);
  int v63 = &kDQuadParamTable[160 * HIDWORD(v254) + 10 * v258];
  int v64 = v63[5];
  unsigned int v65 = v63[4] + v62;
  unsigned int v66 = v64 + v62;
  int v67 = HIDWORD(v245) - HIDWORD(v247);
  if (HIDWORD(v245) - HIDWORD(v247) >= 0)
  {
    if (HIDWORD(v245) == HIDWORD(v247)) {
      goto LABEL_89;
    }
    v66 += v67;
    int v68 = HIDWORD(v245) - HIDWORD(v247);
    goto LABEL_86;
  }
  if (kDQuadParamTable[160 * HIDWORD(v254) + 7 + 10 * v258] < HIDWORD(v247) - HIDWORD(v245))
  {
    --v66;
    if (!kDQuadParamTable[160 * HIDWORD(v254) + 8 + 10 * v258])
    {
      int v68 = -1;
LABEL_86:
      v65 += v68;
    }
  }
LABEL_89:
  int v69 = v233 + v25;
  if (v65 >= 2) {
    unsigned int v65 = 2;
  }
  HIDWORD(v243) = v65;
  unsigned int v70 = 2 * (v64 != 0);
  if (v70 < v66) {
    unsigned int v66 = v70;
  }
  HIDWORD(v241) = v66;
  if (v258 == 1 && v67 <= 1)
  {
    fprintf((FILE *)*MEMORY[0x263EF8348], "lossy decompress dquad warning: invalid 2-bit region (mode[3]=%d end_level[3]=%d start_level[3]=%d\n", 1, HIDWORD(v245), HIDWORD(v247));
    unsigned int v66 = 0;
    unsigned int v59 = 0;
    unsigned int v51 = 0;
    unsigned int v42 = 0;
    unsigned int v65 = 0;
    unsigned int v58 = 0;
    unsigned int v50 = 0;
    unsigned int v41 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
  }
  int v71 = v69 + v30;
  int v238 = 0;
  uint64_t v237 = 0;
  if (!v37)
  {
    LODWORD(v237) = v249;
    uint64_t v75 = v231;
    if (v46) {
      goto LABEL_110;
    }
LABEL_105:
    HIDWORD(v237) = v250;
    if (v55) {
      goto LABEL_117;
    }
    goto LABEL_106;
  }
  int v72 = 0;
  if (v41 && (unint64_t v73 = v41, v10 - v6 + (v13 << 6) + (unint64_t)v41 <= 0xA0))
  {
    int v72 = 0;
    uint64_t v74 = 0;
    uint64_t v75 = v231;
    do
    {
      unint64_t v76 = 64 - v10;
      if (64 - v10 >= v73) {
        unint64_t v76 = v73;
      }
      v72 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v76)) << v74;
      v74 += v76;
      v13 += (v76 + v10) >> 6;
      uint64_t v10 = (v76 + v10) & 0x3F;
      v73 -= v76;
    }
    while (v73);
  }
  else
  {
    uint64_t v75 = v231;
  }
  LODWORD(v237) = v72 << (10 - v41);
  v71 += v41;
  if (!v46) {
    goto LABEL_105;
  }
LABEL_110:
  int v78 = 0;
  if (v50)
  {
    unint64_t v79 = v50;
    if (v10 - v6 + (v13 << 6) + (unint64_t)v50 <= 0xA0)
    {
      int v78 = 0;
      uint64_t v80 = 0;
      do
      {
        unint64_t v81 = 64 - v10;
        if (64 - v10 >= v79) {
          unint64_t v81 = v79;
        }
        v78 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v81)) << v80;
        v80 += v81;
        v13 += (v81 + v10) >> 6;
        uint64_t v10 = (v81 + v10) & 0x3F;
        v79 -= v81;
      }
      while (v79);
    }
  }
  HIDWORD(v237) = v78 << (10 - v50);
  v71 += v50;
  if (v55)
  {
LABEL_117:
    int v82 = 0;
    if (v58)
    {
      unint64_t v83 = v58;
      if (v10 - v6 + (v13 << 6) + (unint64_t)v58 <= 0xA0)
      {
        int v82 = 0;
        uint64_t v84 = 0;
        do
        {
          unint64_t v85 = 64 - v10;
          if (64 - v10 >= v83) {
            unint64_t v85 = v83;
          }
          v82 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v85)) << v84;
          v84 += v85;
          v13 += (v85 + v10) >> 6;
          uint64_t v10 = (v85 + v10) & 0x3F;
          v83 -= v85;
        }
        while (v83);
      }
    }
    int v238 = v82 << (10 - v58);
    v71 += v58;
    int v77 = 0;
    if (!v65) {
      goto LABEL_129;
    }
    goto LABEL_124;
  }
LABEL_106:
  int v238 = v251[0];
  int v77 = 0;
  if (v65)
  {
LABEL_124:
    unint64_t v86 = v65;
    if (v10 - v6 + (v13 << 6) + (unint64_t)v65 <= 0xA0)
    {
      int v77 = 0;
      uint64_t v87 = 0;
      do
      {
        unint64_t v88 = 64 - v10;
        if (64 - v10 >= v86) {
          unint64_t v88 = v86;
        }
        v77 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v88)) << v87;
        v87 += v88;
        v13 += (v88 + v10) >> 6;
        uint64_t v10 = (v88 + v10) & 0x3F;
        v86 -= v88;
      }
      while (v86);
    }
  }
LABEL_129:
  int v239 = v77 << (2 - v65);
  unsigned int v89 = v65 + v71;
  uint64_t v235 = 0;
  uint64_t v236 = 0;
  if (v42)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xA0)
    {
      int v90 = 0;
      uint64_t v91 = 0;
      unint64_t v92 = 3;
      do
      {
        unint64_t v93 = 64 - v10;
        if (64 - v10 >= v92) {
          unint64_t v93 = v92;
        }
        v90 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v93)) << v91;
        v91 += v93;
        v13 += (v93 + v10) >> 6;
        uint64_t v10 = (v93 + v10) & 0x3F;
        v92 -= v93;
      }
      while (v92);
    }
    else
    {
      int v90 = 0;
    }
    LODWORD(v235) = v90;
    v89 += 3;
  }
  if (v51)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xA0)
    {
      int v94 = 0;
      uint64_t v95 = 0;
      unint64_t v96 = 3;
      do
      {
        unint64_t v97 = 64 - v10;
        if (64 - v10 >= v96) {
          unint64_t v97 = v96;
        }
        v94 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v97)) << v95;
        v95 += v97;
        v13 += (v97 + v10) >> 6;
        uint64_t v10 = (v97 + v10) & 0x3F;
        v96 -= v97;
      }
      while (v96);
    }
    else
    {
      int v94 = 0;
    }
    HIDWORD(v235) = v94;
    v89 += 3;
  }
  if (v59)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xA0)
    {
      int v98 = 0;
      uint64_t v99 = 0;
      unint64_t v100 = 3;
      do
      {
        unint64_t v101 = 64 - v10;
        if (64 - v10 >= v100) {
          unint64_t v101 = v100;
        }
        v98 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v101)) << v99;
        v99 += v101;
        v13 += (v101 + v10) >> 6;
        uint64_t v10 = (v101 + v10) & 0x3F;
        v100 -= v101;
      }
      while (v100);
    }
    else
    {
      int v98 = 0;
    }
    LODWORD(v236) = v98;
    v89 += 3;
  }
  if (v66)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xA0)
    {
      int v102 = 0;
      uint64_t v103 = 0;
      unint64_t v104 = 3;
      do
      {
        unint64_t v105 = 64 - v10;
        if (64 - v10 >= v104) {
          unint64_t v105 = v104;
        }
        v102 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v105)) << v103;
        v103 += v105;
        v13 += (v105 + v10) >> 6;
        uint64_t v10 = (v105 + v10) & 0x3F;
        v104 -= v105;
      }
      while (v104);
    }
    else
    {
      int v102 = 0;
    }
    HIDWORD(v236) = v102;
    v89 += 3;
  }
  uint64_t v106 = 0;
  unsigned int v107 = 160 - v89;
  unsigned int v108 = (160 - v89) / 7;
  unsigned int v109 = a3 & 0xFFFFFFFD;
  unint64_t v110 = (v10 | (v13 << 6)) + v107 % 7;
  memset(v234, 0, sizeof(v234));
  do
  {
    unint64_t v113 = v110 >> 6;
    unint64_t v114 = v110 & 0x3F;
    if (v42)
    {
      if (v114 - v6 + (v110 & 0xFFFFFFFFFFFFFFC0) + v42 <= 0xA0)
      {
        int v115 = 0;
        uint64_t v116 = 0;
        unint64_t v117 = v42;
        do
        {
          unint64_t v118 = 64 - v114;
          if (64 - v114 >= v117) {
            unint64_t v118 = v117;
          }
          v115 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v118)) << v116;
          v116 += v118;
          unint64_t v119 = v118 + v114;
          v113 += v119 >> 6;
          unint64_t v114 = v119 & 0x3F;
          v117 -= v118;
        }
        while (v117);
      }
      else
      {
        int v115 = 0;
      }
      *((_DWORD *)v234 + v106) = v115;
    }
    if (!v51)
    {
      unsigned int v112 = v42;
      if (!v59) {
        goto LABEL_190;
      }
LABEL_183:
      if (v114 - v6 + (v113 << 6) + v59 <= 0xA0)
      {
        int v125 = 0;
        uint64_t v126 = 0;
        unint64_t v127 = v59;
        do
        {
          unint64_t v128 = 64 - v114;
          if (64 - v114 >= v127) {
            unint64_t v128 = v127;
          }
          v125 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v128)) << v126;
          v126 += v128;
          unint64_t v129 = v128 + v114;
          v113 += v129 >> 6;
          unint64_t v114 = v129 & 0x3F;
          v127 -= v128;
        }
        while (v127);
      }
      else
      {
        int v125 = 0;
      }
      *((_DWORD *)&v234[3] + v106 + 2) = v125;
      v112 += v59;
      goto LABEL_190;
    }
    if (v114 - v6 + (v113 << 6) + v51 <= 0xA0)
    {
      int v120 = 0;
      uint64_t v121 = 0;
      unint64_t v122 = v51;
      do
      {
        unint64_t v123 = 64 - v114;
        if (64 - v114 >= v122) {
          unint64_t v123 = v122;
        }
        v120 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v123)) << v121;
        v121 += v123;
        unint64_t v124 = v123 + v114;
        v113 += v124 >> 6;
        unint64_t v114 = v124 & 0x3F;
        v122 -= v123;
      }
      while (v122);
    }
    else
    {
      int v120 = 0;
    }
    *((_DWORD *)&v234[1] + v106 + 3) = v120;
    unsigned int v112 = v51 + v42;
    if (v59) {
      goto LABEL_183;
    }
LABEL_190:
    if (v66)
    {
      if (v114 - v6 + (v113 << 6) + v66 > 0xA0)
      {
        int v111 = 0;
      }
      else
      {
        int v111 = 0;
        uint64_t v130 = 0;
        unint64_t v131 = v66;
        do
        {
          unint64_t v132 = 64 - v114;
          if (64 - v114 >= v131) {
            unint64_t v132 = v131;
          }
          v111 |= (unint64_t)((*(void *)(v5 + 8 * v113) >> v114) & ~(-1 << v132)) << v130;
          v130 += v132;
          unint64_t v133 = v132 + v114;
          v113 += v133 >> 6;
          unint64_t v114 = v133 & 0x3F;
          v131 -= v132;
        }
        while (v131);
      }
      *((_DWORD *)&v234[5] + v106 + 1) = v111;
      v112 += v66;
    }
    unint64_t v110 = (v114 | (v113 << 6)) + v108 - v112;
    ++v106;
  }
  while (v106 != 7);
  unint64_t v134 = 0;
  uint64_t v135 = 0;
  uint64_t v136 = v75 + 112;
  do
  {
    unint64_t v141 = *(void *)&kDQuadParamTable[160 * *(unsigned int *)((char *)&v252 + v134)
                                      + 2
                                      + 10 * *(unsigned int *)((char *)&DquadModeData + v134)];
    int v142 = *(_DWORD *)((char *)&v240 + v134);
    if (v141 >> v142 <= 1) {
      unint64_t v143 = 1;
    }
    else {
      unint64_t v143 = v141 >> v142;
    }
    int v144 = v248[v134 / 4];
    unint64_t result = v143 >> 1;
    unint64_t v145 = (unint64_t)(1 << (v144 - *(_DWORD *)((char *)&v242 + v134))) >> 1;
    if (v143 >> 1 < v145) {
      unint64_t v145 = v143 >> 1;
    }
    unint64_t v146 = (1 << (v144 - 1));
    unint64_t v147 = *(unsigned int *)((char *)&v237 + v134);
    unint64_t v148 = v146 - v147;
    unint64_t v149 = 1 << v144;
    int v150 = (1 << v144) - 1;
    if (v147) {
      unint64_t v151 = v145;
    }
    else {
      unint64_t v151 = 0;
    }
    BOOL v152 = v147 == v146;
    BOOL v153 = v144 == 16;
    if (v144 == 16) {
      unint64_t v154 = 31744;
    }
    else {
      unint64_t v154 = 2139095040;
    }
    if (v144 == 16) {
      unint64_t v155 = 64512;
    }
    else {
      unint64_t v155 = 4286578688;
    }
    unint64_t v156 = 2143289344;
    if (v153) {
      unint64_t v156 = 32256;
    }
    unint64_t v157 = 4290772992;
    if (v153) {
      unint64_t v157 = 65024;
    }
    unint64_t v158 = (v155 - 1);
    if (v142)
    {
      unint64_t v159 = v141 + v147;
      uint64_t v160 = ~(-1 << v142);
      int v161 = *(_DWORD *)((char *)&v235 + v134);
      unint64_t v162 = v148 / v143;
      if (!v161)
      {
        uint64_t v170 = 0;
        unint64_t v165 = v151;
        BOOL v164 = v147 == v146;
        goto LABEL_261;
      }
      uint64_t v163 = *(unsigned int *)((char *)v234 + v135);
      BOOL v164 = v162 == v163;
      if (v147 | v163)
      {
        if (v159 >= v149 && v163 == v160)
        {
          uint64_t v170 = 1;
          unint64_t v165 = v149 - 1;
          goto LABEL_261;
        }
        unint64_t v165 = result + v143 * v163;
      }
      else
      {
        unint64_t v165 = 0;
      }
      uint64_t v170 = 1;
LABEL_261:
      unint64_t v171 = v165 + v147;
      unint64_t v172 = v171;
      if (a3 == 4)
      {
        BOOL v173 = v171 < v154 || v171 >= v156;
        unint64_t v172 = (v154 - 1);
        if (v173)
        {
          BOOL v174 = v171 < v156 || v171 >= v146;
          unint64_t v172 = v146;
          if (v174)
          {
            if (v171 < v157 && v171 >= v155) {
              unint64_t v172 = (v155 - 1);
            }
            else {
              unint64_t v172 = v171;
            }
          }
        }
      }
      if (v172 >= v149) {
        int v176 = v150;
      }
      else {
        int v176 = v172;
      }
      if (v164) {
        int v177 = 0;
      }
      else {
        int v177 = v176 ^ v146;
      }
      if (v109 != 1) {
        int v177 = v176;
      }
      *(_DWORD *)(v136 + v134 - 112) = v177;
      if (v161 == 1)
      {
        unint64_t v178 = v151;
        BOOL v179 = v147 == v146;
      }
      else
      {
        uint64_t v180 = *(unsigned int *)(((unint64_t)v234 | (4 * v170)) + v135);
        BOOL v179 = v162 == v180;
        if (v147 | v180)
        {
          if (v159 < v149 || (unint64_t v178 = v149 - 1, v180 != v160)) {
            unint64_t v178 = result + v143 * v180;
          }
        }
        else
        {
          unint64_t v178 = 0;
        }
        ++v170;
      }
      unint64_t v181 = v178 + v147;
      unint64_t v182 = v181;
      if (a3 == 4)
      {
        BOOL v183 = v181 < v154 || v181 >= v156;
        unint64_t v182 = (v154 - 1);
        if (v183)
        {
          if (v181 < v156 || (unint64_t v182 = v146, v181 >= v146))
          {
            if (v181 < v157 && v181 >= v155) {
              unint64_t v182 = (v155 - 1);
            }
            else {
              unint64_t v182 = v181;
            }
          }
        }
      }
      if (v182 >= v149) {
        int v185 = v150;
      }
      else {
        int v185 = v182;
      }
      if (v179) {
        int v186 = 0;
      }
      else {
        int v186 = v185 ^ v146;
      }
      if (v109 != 1) {
        int v186 = v185;
      }
      *(_DWORD *)(v136 + v134 - 96) = v186;
      if (v161 == 2)
      {
        unint64_t v187 = v151;
        BOOL v188 = v147 == v146;
      }
      else
      {
        uint64_t v189 = *(unsigned int *)(((unint64_t)v234 | (4 * v170)) + v135);
        BOOL v188 = v162 == v189;
        if (v147 | v189)
        {
          if (v159 < v149 || (unint64_t v187 = v149 - 1, v189 != v160)) {
            unint64_t v187 = result + v143 * v189;
          }
        }
        else
        {
          unint64_t v187 = 0;
        }
        ++v170;
      }
      unint64_t v190 = v187 + v147;
      unint64_t v191 = v190;
      if (a3 == 4)
      {
        if (v190 < v154 || (unint64_t v191 = (v154 - 1), v190 >= v156))
        {
          if (v190 < v156 || (unint64_t v191 = v146, v190 >= v146))
          {
            if (v190 < v157 && v190 >= v155) {
              unint64_t v191 = (v155 - 1);
            }
            else {
              unint64_t v191 = v190;
            }
          }
        }
      }
      if (v191 >= v149) {
        int v193 = v150;
      }
      else {
        int v193 = v191;
      }
      if (v188) {
        int v194 = 0;
      }
      else {
        int v194 = v193 ^ v146;
      }
      if (v109 != 1) {
        int v194 = v193;
      }
      *(_DWORD *)(v136 + v134 - 80) = v194;
      if (v161 == 3)
      {
        unint64_t v195 = v151;
        BOOL v196 = v147 == v146;
      }
      else
      {
        uint64_t v197 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v196 = v162 == v197;
        if (v147 | v197)
        {
          if (v159 < v149 || (unint64_t v195 = v149 - 1, v197 != v160)) {
            unint64_t v195 = result + v143 * v197;
          }
        }
        else
        {
          unint64_t v195 = 0;
        }
        ++v170;
      }
      unint64_t v198 = v195 + v147;
      unint64_t v199 = v198;
      if (a3 == 4)
      {
        if (v198 < v154 || (unint64_t v199 = (v154 - 1), v198 >= v156))
        {
          if (v198 < v156 || (unint64_t v199 = v146, v198 >= v146))
          {
            if (v198 < v157 && v198 >= v155) {
              unint64_t v199 = (v155 - 1);
            }
            else {
              unint64_t v199 = v198;
            }
          }
        }
      }
      if (v199 >= v149) {
        int v201 = v150;
      }
      else {
        int v201 = v199;
      }
      if (v196) {
        int v202 = 0;
      }
      else {
        int v202 = v201 ^ v146;
      }
      if (v109 != 1) {
        int v202 = v201;
      }
      *(_DWORD *)(v136 + v134 - 64) = v202;
      if (v161 == 4)
      {
        unint64_t v203 = v151;
        BOOL v204 = v147 == v146;
      }
      else
      {
        uint64_t v205 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v204 = v162 == v205;
        if (v147 | v205)
        {
          if (v159 < v149 || (unint64_t v203 = v149 - 1, v205 != v160)) {
            unint64_t v203 = result + v143 * v205;
          }
        }
        else
        {
          unint64_t v203 = 0;
        }
        ++v170;
      }
      unint64_t v206 = v203 + v147;
      unint64_t v207 = v206;
      if (a3 == 4)
      {
        if (v206 < v154 || (unint64_t v207 = (v154 - 1), v206 >= v156))
        {
          if (v206 < v156 || (unint64_t v207 = v146, v206 >= v146))
          {
            if (v206 < v157 && v206 >= v155) {
              unint64_t v207 = (v155 - 1);
            }
            else {
              unint64_t v207 = v206;
            }
          }
        }
      }
      if (v207 >= v149) {
        int v209 = v150;
      }
      else {
        int v209 = v207;
      }
      if (v204) {
        int v210 = 0;
      }
      else {
        int v210 = v209 ^ v146;
      }
      if (v109 != 1) {
        int v210 = v209;
      }
      *(_DWORD *)(v136 + v134 - 48) = v210;
      if (v161 == 5)
      {
        unint64_t v211 = v151;
        BOOL v212 = v147 == v146;
      }
      else
      {
        uint64_t v213 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v212 = v162 == v213;
        if (v147 | v213)
        {
          if (v159 < v149 || (unint64_t v211 = v149 - 1, v213 != v160)) {
            unint64_t v211 = result + v143 * v213;
          }
        }
        else
        {
          unint64_t v211 = 0;
        }
        ++v170;
      }
      unint64_t v214 = v211 + v147;
      unint64_t v215 = v214;
      if (a3 == 4)
      {
        if (v214 < v154 || (unint64_t v215 = (v154 - 1), v214 >= v156))
        {
          if (v214 < v156 || (unint64_t v215 = v146, v214 >= v146))
          {
            if (v214 < v157 && v214 >= v155) {
              unint64_t v215 = (v155 - 1);
            }
            else {
              unint64_t v215 = v214;
            }
          }
        }
      }
      if (v215 >= v149) {
        int v217 = v150;
      }
      else {
        int v217 = v215;
      }
      if (v212) {
        int v218 = 0;
      }
      else {
        int v218 = v217 ^ v146;
      }
      if (v109 != 1) {
        int v218 = v217;
      }
      *(_DWORD *)(v136 + v134 - 32) = v218;
      if (v161 == 6)
      {
        unint64_t v219 = v151;
        BOOL v220 = v147 == v146;
      }
      else
      {
        uint64_t v221 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v220 = v162 == v221;
        if (v147 | v221)
        {
          if (v159 < v149 || (unint64_t v219 = v149 - 1, v221 != v160)) {
            unint64_t v219 = result + v143 * v221;
          }
        }
        else
        {
          unint64_t v219 = 0;
        }
        ++v170;
      }
      unint64_t v222 = v219 + v147;
      unint64_t v223 = v222;
      if (a3 == 4)
      {
        if (v222 < v154 || (unint64_t v223 = (v154 - 1), v222 >= v156))
        {
          if (v222 < v156 || (unint64_t v223 = v146, v222 >= v146))
          {
            if (v222 < v157 && v222 >= v155) {
              unint64_t v223 = (v155 - 1);
            }
            else {
              unint64_t v223 = v222;
            }
          }
        }
      }
      if (v223 >= v149) {
        int v225 = v150;
      }
      else {
        int v225 = v223;
      }
      if (v220) {
        int v226 = 0;
      }
      else {
        int v226 = v225 ^ v146;
      }
      if (v109 != 1) {
        int v226 = v225;
      }
      *(_DWORD *)(v136 + v134 - 16) = v226;
      if (v161 != 7)
      {
        uint64_t v227 = *(unsigned int *)((char *)v234 + 4 * v170 + v135);
        BOOL v152 = v162 == v227;
        if (v147 | v227)
        {
          if (v159 >= v149 && v227 == v160) {
            unint64_t v151 = v149 - 1;
          }
          else {
            unint64_t v151 = result + v143 * v227;
          }
        }
        else
        {
          unint64_t v151 = 0;
        }
      }
      unint64_t v228 = v151 + v147;
      unint64_t result = v151 + v147;
      if (a3 == 4)
      {
        if (v228 < v154 || (unint64_t result = (v154 - 1), v228 >= v156))
        {
          if (v228 < v156 || (unint64_t result = v146, v228 >= v146))
          {
            if (v228 < v157 && v228 >= v155) {
              unint64_t result = (v155 - 1);
            }
            else {
              unint64_t result = v151 + v147;
            }
          }
        }
      }
      if (result >= v149) {
        LODWORD(v139) = v150;
      }
      else {
        LODWORD(v139) = result;
      }
      int v140 = v139 ^ v146;
      if (v152) {
        int v140 = 0;
      }
      if (v109 == 1) {
        LODWORD(v139) = v140;
      }
      goto LABEL_211;
    }
    BOOL v167 = v156 <= v147 && v147 < v146;
    BOOL v169 = v147 >= v155 && v157 > v147;
    if (a3 == 4)
    {
      if (v147 < v154 || v156 <= v147)
      {
        if (v167)
        {
          if (v149 <= v146) {
            LODWORD(v139) = v150;
          }
          else {
            LODWORD(v139) = v146;
          }
        }
        else
        {
          if (v169) {
            unint64_t v139 = v158;
          }
          else {
            unint64_t v139 = *(unsigned int *)((char *)&v237 + v134);
          }
          if (v139 >= v149) {
            LODWORD(v139) = v150;
          }
        }
      }
      else if (v149 <= (v154 - 1))
      {
        LODWORD(v139) = v150;
      }
      else
      {
        LODWORD(v139) = v154 - 1;
      }
    }
    else if (v149 <= v147)
    {
      LODWORD(v139) = v150;
    }
    else
    {
      LODWORD(v139) = *(_DWORD *)((char *)&v237 + v134);
    }
    int v229 = v139 ^ v146;
    if (v143 > v148) {
      int v229 = 0;
    }
    if (v109 == 1) {
      LODWORD(v139) = v229;
    }
    uint64_t v230 = v136 + v134;
    *(_DWORD *)(v230 - 112) = v139;
    *(_DWORD *)(v230 - 96) = v139;
    *(_DWORD *)(v230 - 80) = v139;
    *(_DWORD *)(v230 - 64) = v139;
    *(_DWORD *)(v230 - 48) = v139;
    *(_DWORD *)(v230 - 32) = v139;
    *(_DWORD *)(v230 - 16) = v139;
LABEL_211:
    *(_DWORD *)(v136 + v134) = v139;
    v135 += 28;
    v134 += 4;
  }
  while (v135 != 112);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(float32x4_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  v468[0] = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v11 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    uint64_t v12 = (_OWORD *)((char *)a1->f32 + a2);
    *uint64_t v12 = 0u;
    v12[1] = 0u;
    uint64_t v13 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
LABEL_254:
    *char v14 = v11;
    v14[1] = v11;
    return result;
  }
  char v7 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v432, a5);
    }
    int16x8_t v440 = v432;
    int16x8_t v441 = v434;
    int8x16_t v444 = v433;
    int8x16_t v445 = v435;
    int16x8_t v448 = v436;
    int16x8_t v449 = v438;
    uint64_t v19 = a3 + 20;
    int16x8_t v452 = v437;
    int8x16_t v453 = (int8x16_t)v439;
    if ((v7 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v19, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v19, (uint64_t)&v432, a5);
    }
    int16x8_t v442 = v432;
    int16x8_t v443 = v434;
    int8x16_t v446 = v433;
    int8x16_t v447 = v435;
    int16x8_t v450 = v436;
    int16x8_t v451 = v438;
    uint64_t v20 = a3 + 40;
    int8x16_t v454 = (int8x16_t)v437;
    int8x16_t v455 = (int8x16_t)v439;
    if ((v7 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v432, a5);
    }
    int16x8_t v456 = v432;
    int8x16_t v457 = (int8x16_t)v434;
    int16x8_t v460 = (int16x8_t)v433;
    int16x8_t v461 = (int16x8_t)v435;
    int16x8_t v463 = v436;
    int8x16_t v464 = (int8x16_t)v438;
    uint64_t v21 = a3 + 60;
    *(int16x8_t *)v467 = v437;
    *(int16x8_t *)&v467[2] = v439;
    if ((v7 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v432, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v432, a5);
    }
    int16x8_t v458 = v432;
    int16x8_t v459 = v434;
    v462[0] = v433;
    v462[1] = v435;
    int16x8_t v465 = v436;
    int16x8_t v466 = v438;
    uint64_t v22 = (unsigned __int32 *)&a1[1];
    unint64_t v23 = -64;
    *(int16x8_t *)&v467[4] = v437;
    *(int16x8_t *)&v467[6] = v439;
    do
    {
      unsigned int v24 = v448.i32[v23 / 4] & 0x3FF | ((v448.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v448.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v448.i32[v23 / 4 + 3] << 30);
      *(v22 - 4) = v444.i32[v23 / 4] & 0x3FF | ((v444.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v444.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v444.i32[v23 / 4 + 3] << 30);
      *(v22 - 3) = v24;
      unsigned __int32 v25 = v456.i32[v23 / 4] & 0x3FF | ((v456.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v456.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v456.i32[v23 / 4 + 3] << 30);
      *(v22 - 2) = v452.i32[v23 / 4] & 0x3FF | ((v452.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v452.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v452.i32[v23 / 4 + 3] << 30);
      *(v22 - 1) = v25;
      unsigned int v26 = v463.i32[v23 / 4] & 0x3FF | ((v463.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v463.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v463.i32[v23 / 4 + 3] << 30);
      unsigned __int32 *v22 = v460.i32[v23 / 4] & 0x3FF | ((v460.i32[v23 / 4 + 1] & 0x3FF) << 10) & 0xC00FFFFF | ((v460.i32[v23 / 4 + 2] & 0x3FF) << 20) | (v460.i32[v23 / 4 + 3] << 30);
      v22[1] = v26;
      unsigned int v27 = v467[v23 / 8 + 8] & 0x3FF | ((HIDWORD(v467[v23 / 8 + 8]) & 0x3FF) << 10) & 0xC00FFFFF | ((v468[v23 / 8] & 0x3FF) << 20) | (HIDWORD(v468[v23 / 8]) << 30);
      v22[2] = v467[v23 / 8] & 0x3FF | ((HIDWORD(v467[v23 / 8]) & 0x3FF) << 10) & 0xC00FFFFF | ((v467[v23 / 8 + 1] & 0x3FF) << 20) | (HIDWORD(v467[v23 / 8 + 1]) << 30);
      v22[3] = v27;
      uint64_t v22 = (unsigned __int32 *)((char *)v22 + a2);
      v23 += 16;
    }
    while (v23);
    return 80;
  }
  if (a4 == 127)
  {
    int64x2_t v28 = *(int64x2_t *)a3;
    int64x2_t v29 = *(int64x2_t *)(a3 + 16);
    int64x2_t v30 = *(int64x2_t *)(a3 + 32);
    int64x2_t v31 = *(int64x2_t *)(a3 + 48);
    int64x2_t v32 = *(int64x2_t *)(a3 + 64);
    int64x2_t v33 = *(int64x2_t *)(a3 + 80);
    int64x2_t v34 = *(int64x2_t *)(a3 + 96);
    int64x2_t v35 = *(int64x2_t *)(a3 + 112);
    int v36 = (int64x2_t *)((char *)a1 + a2);
    *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v29);
    a1[1] = (float32x4_t)vzip1q_s64(v32, v33);
    unsigned int v37 = (int64x2_t *)((char *)a1 + 2 * a2);
    int64x2_t *v36 = vzip2q_s64(v28, v29);
    v36[1] = vzip2q_s64(v32, v33);
    int64x2_t *v37 = vzip1q_s64(v30, v31);
    v37[1] = vzip1q_s64(v34, v35);
    int v38 = (int64x2_t *)((char *)v37 + a2);
    int64x2_t *v38 = vzip2q_s64(v30, v31);
    v38[1] = vzip2q_s64(v34, v35);
    return 128;
  }
  if (a4 == 3)
  {
    float32x4_t v15 = vld1q_dup_f32((const float *)a3);
    *a1 = v15;
    a1[1] = v15;
    unint64_t v16 = (float32x4_t *)((char *)a1 + a2);
    *unint64_t v16 = v15;
    v16[1] = v15;
    unint64_t v17 = (float32x4_t *)((char *)a1 + 2 * a2);
    *unint64_t v17 = v15;
    v17[1] = v15;
    unint64_t v18 = (float32x4_t *)((char *)a1 + 2 * a2 + a2);
    *unint64_t v18 = v15;
    v18[1] = v15;
    return 4;
  }
  v433.i8[8] = 0;
  v432.i64[0] = 8 * (a3 & 7);
  v432.i64[1] = a3 & 0xFFFFFFFFFFFFFFF8;
  v433.i64[0] = v432.i64[0] | 0x280;
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)13,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v457, (uint64_t)v462, (uint64_t)&v456, (unint64_t *)&v432, a4);
  int8x16_t v40 = v457;
  v41.i64[0] = 0x3000300030003;
  v41.i64[1] = 0x3000300030003;
  int16x8_t v42 = (int16x8_t)vandq_s8(v457, v41);
  int8x16_t v43 = vbicq_s8(v462[0], (int8x16_t)vceqq_s16(v42, (int16x8_t)v41));
  v462[0] = v43;
  int16x8_t v458 = (int16x8_t)v43;
  int16x8_t v459 = (int16x8_t)v43;
  int16x8_t v460 = (int16x8_t)v43;
  int16x8_t v461 = (int16x8_t)v43;
  v44.i64[0] = 0x202020202020202;
  v44.i64[1] = 0x202020202020202;
  int8x16_t v45 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v457.i8, (int16x4_t)0x4000400040004)), v44);
  unint64_t v46 = v432.i64[0];
  if (vmaxvq_s8(v45) < 1)
  {
    v59.i64[0] = -1;
    v59.i64[1] = -1;
    v60.i64[0] = -1;
    v60.i64[1] = -1;
    v61.i64[0] = -1;
    v61.i64[1] = -1;
    v62.i64[0] = -1;
    v62.i64[1] = -1;
  }
  else
  {
    int8x16_t v47 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v45, v45));
    int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v47, (int16x8_t)v47));
    unint64_t v49 = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
    v50.i64[0] = v49;
    v50.i64[1] = HIDWORD(v49);
    int64x2_t v51 = v50;
    unint64_t v52 = vaddvq_s64(v50);
    unint64_t v53 = v52;
    unint64_t v54 = v432.i64[0] + v52;
    if (v433.i64[0]) {
      _CF = v433.i64[0] >= v54;
    }
    else {
      _CF = 1;
    }
    int v56 = !_CF;
    if (v52 <= 0x80 && v56 == 0)
    {
      v39.i64[0] = 63;
      int v63 = (int64x2_t *)(v432.i64[1] + 8 * ((unint64_t)v432.i64[0] >> 6));
      int64x2_t v64 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v432.u64[0], v39).i64[0], 0), vzip1q_s64((int64x2_t)0, v51));
      int8x16_t v58 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v63, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v64)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63->i64[0], 0), (uint64x2_t)vnegq_s64(v64)));
      if ((v432.i8[0] & 0x3F) + v53 >= 0x81) {
        int8x16_t v58 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v64)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v63[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v64))), v58);
      }
      v432.i64[0] = v54;
      unint64_t v46 = v54;
    }
    else
    {
      v433.i8[8] = 1;
      int8x16_t v58 = 0uLL;
    }
    int32x2_t v65 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
    v66.i64[0] = v65.u32[0];
    v66.i64[1] = v65.u32[1];
    int64x2_t v67 = (int64x2_t)vshlq_u64((uint64x2_t)v58, (uint64x2_t)vnegq_s64(v66));
    *(int32x2_t *)v58.i8 = vmovn_s64((int64x2_t)v58);
    *(int32x2_t *)v67.i8 = vmovn_s64(v67);
    int16x8_t v68 = (int16x8_t)vzip1q_s32((int32x4_t)v58, (int32x4_t)v67);
    int16x8_t v69 = (int16x8_t)vshlq_u32((uint32x4_t)v68, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v47.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    *(int16x4_t *)v68.i8 = vmovn_s32((int32x4_t)v68);
    *(int16x4_t *)v69.i8 = vmovn_s32((int32x4_t)v69);
    int8x16_t v70 = (int8x16_t)vzip1q_s16(v68, v69);
    int8x16_t v71 = (int8x16_t)vshlq_u16((uint16x8_t)v70, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v45.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL)))));
    *(int8x8_t *)v70.i8 = vmovn_s16((int16x8_t)v70);
    *(int8x8_t *)v71.i8 = vmovn_s16((int16x8_t)v71);
    int8x16_t v72 = vzip1q_s8(v70, v71);
    v71.i64[0] = 0x101010101010101;
    v71.i64[1] = 0x101010101010101;
    int8x16_t v73 = vshlq_s8(v71, v45);
    v71.i64[0] = -1;
    v71.i64[1] = -1;
    int32x4_t v74 = (int32x4_t)vqtbl1q_s8(vandq_s8(v72, vaddq_s8(v73, v71)), (int8x16_t)xmmword_242EA7560);
    *(int32x2_t *)v72.i8 = vdup_lane_s32(*(int32x2_t *)v74.i8, 0);
    *(int32x2_t *)v71.i8 = vdup_lane_s32(*(int32x2_t *)v74.i8, 1);
    int8x8_t v75 = (int8x8_t)vdupq_laneq_s32(v74, 2).u64[0];
    v74.i64[0] = vdupq_laneq_s32(v74, 3).u64[0];
    int16x8_t v458 = vsubw_s8(v458, *(int8x8_t *)v72.i8);
    int16x8_t v459 = vsubw_s8(v459, *(int8x8_t *)v71.i8);
    int16x8_t v460 = vsubw_s8(v460, v75);
    int16x8_t v461 = vsubw_s8(v461, *(int8x8_t *)v74.i8);
    int8x16_t v62 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v72.i8));
    int8x16_t v61 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v71.i8));
    int8x16_t v60 = (int8x16_t)vmovl_s8(vceqz_s8(v75));
    int8x16_t v59 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v74.i8));
  }
  v76.i64[0] = 0x8000800080008;
  v76.i64[1] = 0x8000800080008;
  int8x16_t v77 = 0uLL;
  int8x16_t v78 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v457, v76), (int8x16_t)0, 8uLL), v43);
  int8x16_t v79 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v78, (int16x8_t)v78));
  unint64_t v80 = vpaddq_s32((int32x4_t)v79, (int32x4_t)v79).u64[0];
  v81.i64[0] = v80;
  v81.i64[1] = HIDWORD(v80);
  int64x2_t v82 = v81;
  unint64_t v83 = vaddvq_s64(v81);
  if (v433.i64[0]) {
    BOOL v84 = v433.i64[0] >= v46 + v83;
  }
  else {
    BOOL v84 = 1;
  }
  int v85 = !v84;
  if (v83 <= 0x80 && v85 == 0)
  {
    int64x2_t v87 = vaddq_s64(vdupq_n_s64(v46 & 0x3F), vzip1q_s64((int64x2_t)0, v82));
    unint64_t v88 = (int64x2_t *)(v432.i64[1] + 8 * (v46 >> 6));
    int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v88, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v87)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v88->i64[0], 0), (uint64x2_t)vnegq_s64(v87)));
    if ((v46 & 0x3F) + v83 >= 0x81) {
      int8x16_t v77 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v88[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v87)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v88[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v87))), v77);
    }
    v46 += v83;
  }
  else
  {
    v433.i8[8] = 1;
  }
  int32x2_t v89 = vzip1_s32(*(int32x2_t *)v79.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL));
  v90.i64[0] = v89.u32[0];
  v90.i64[1] = v89.u32[1];
  int64x2_t v91 = (int64x2_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v90));
  *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
  *(int32x2_t *)v91.i8 = vmovn_s64(v91);
  int16x8_t v92 = (int16x8_t)vzip1q_s32((int32x4_t)v77, (int32x4_t)v91);
  int16x8_t v93 = (int16x8_t)vshlq_u32((uint32x4_t)v92, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v78.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int16x4_t *)v92.i8 = vmovn_s32((int32x4_t)v92);
  *(int16x4_t *)v93.i8 = vmovn_s32((int32x4_t)v93);
  int16x8_t v94 = vzip1q_s16(v92, v93);
  v93.i64[0] = 0xF000F000F000FLL;
  v93.i64[1] = 0xF000F000F000FLL;
  v95.i64[0] = 0x10001000100010;
  v95.i64[1] = 0x10001000100010;
  int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_s16(v94, vsubq_s16(v95, (int16x8_t)v78)), vaddq_s16((int16x8_t)v78, v93));
  int8x16_t v464 = v96;
  int v97 = v457.i8[0] & 3;
  if (v97 == 2)
  {
    unint64_t v98 = v46 + 8;
    if (v433.i64[0])
    {
      if (v433.i64[0] >= v98)
      {
        unint64_t v99 = v46 + 16;
        v46 += 8;
      }
      else
      {
        v433.i8[8] = 1;
        unint64_t v99 = v46 + 8;
      }
      if (v433.i64[0] < v99)
      {
        v433.i8[8] = 1;
        goto LABEL_63;
      }
      unint64_t v98 = v46;
    }
    unint64_t v46 = v98 + 8;
  }
LABEL_63:
  int8x16_t v100 = 0uLL;
  int8x16_t v101 = vextq_s8((int8x16_t)0, (int8x16_t)v458, 8uLL);
  int8x16_t v102 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v101, (int16x8_t)v101));
  unint64_t v103 = vpaddq_s32((int32x4_t)v102, (int32x4_t)v102).u64[0];
  v104.i64[0] = v103;
  v104.i64[1] = HIDWORD(v103);
  int64x2_t v105 = v104;
  unint64_t v106 = vaddvq_s64(v104);
  unint64_t v107 = v46 + v106;
  if (v433.i64[0]) {
    BOOL v108 = v433.i64[0] >= v107;
  }
  else {
    BOOL v108 = 1;
  }
  int v109 = !v108;
  if (v106 > 0x80 || v109)
  {
    int v114 = 1;
    uint64_t v112 = v432.i64[1];
  }
  else
  {
    unint64_t v110 = v46 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v105));
    uint64_t v112 = v432.i64[1];
    unint64_t v113 = (int64x2_t *)(v432.i64[1] + 8 * (v46 >> 6));
    int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v113, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v113->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v106 >= 0x81) {
      int8x16_t v100 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v113[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v113[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v100);
    }
    int v114 = v433.u8[8];
    unint64_t v46 = v107;
  }
  int32x2_t v115 = vzip1_s32(*(int32x2_t *)v102.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL));
  v116.i64[0] = v115.u32[0];
  v116.i64[1] = v115.u32[1];
  int64x2_t v117 = (int64x2_t)vshlq_u64((uint64x2_t)v100, (uint64x2_t)vnegq_s64(v116));
  *(int32x2_t *)v100.i8 = vmovn_s64((int64x2_t)v100);
  *(int32x2_t *)v117.i8 = vmovn_s64(v117);
  int16x8_t v118 = (int16x8_t)vzip1q_s32((int32x4_t)v100, (int32x4_t)v117);
  int16x8_t v119 = (int16x8_t)vshlq_u32((uint32x4_t)v118, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v101.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v101, v101, 8uLL)))));
  *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v118);
  *(int16x4_t *)v119.i8 = vmovn_s32((int32x4_t)v119);
  v120.i64[0] = 0xF000F000F000FLL;
  v120.i64[1] = 0xF000F000F000FLL;
  v121.i64[0] = 0x10001000100010;
  v121.i64[1] = 0x10001000100010;
  int16x8_t v122 = vshlq_s16(vshlq_s16(vzip1q_s16(v118, v119), vsubq_s16(v121, (int16x8_t)v101)), vaddq_s16((int16x8_t)v101, v120));
  int16x8_t v440 = v122;
  int8x16_t v123 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v458, v458));
  v118.i64[0] = vpaddq_s32((int32x4_t)v123, (int32x4_t)v123).u64[0];
  v116.i64[0] = v118.u32[0];
  v116.i64[1] = v118.u32[1];
  int64x2_t v124 = v116;
  unint64_t v125 = vaddvq_s64(v116);
  unint64_t v126 = v46 + v125;
  if (v433.i64[0]) {
    BOOL v127 = v433.i64[0] >= v126;
  }
  else {
    BOOL v127 = 1;
  }
  char v128 = !v127;
  int8x16_t v129 = 0uLL;
  if (v125 > 0x80 || (v128 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v126 = v46;
    int8x16_t v133 = 0uLL;
  }
  else
  {
    unint64_t v130 = v46 & 0x3F;
    int64x2_t v131 = vaddq_s64(vdupq_n_s64(v130), vzip1q_s64((int64x2_t)0, v124));
    unint64_t v132 = (int64x2_t *)(v112 + 8 * (v46 >> 6));
    int8x16_t v133 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
    if (v130 + v125 >= 0x81) {
      int8x16_t v133 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), v133);
    }
  }
  int32x2_t v134 = vzip1_s32(*(int32x2_t *)v123.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v123, v123, 8uLL));
  v135.i64[0] = v134.u32[0];
  v135.i64[1] = v134.u32[1];
  uint64x2_t v136 = (uint64x2_t)vnegq_s64(v135);
  int64x2_t v137 = (int64x2_t)vshlq_u64((uint64x2_t)v133, v136);
  *(int32x2_t *)v133.i8 = vmovn_s64((int64x2_t)v133);
  *(int32x2_t *)v137.i8 = vmovn_s64(v137);
  int16x8_t v138 = (int16x8_t)vzip1q_s32((int32x4_t)v133, (int32x4_t)v137);
  uint32x4_t v139 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v458.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v458, (int8x16_t)v458, 8uLL))));
  int16x8_t v140 = (int16x8_t)vshlq_u32((uint32x4_t)v138, v139);
  *(int16x4_t *)v138.i8 = vmovn_s32((int32x4_t)v138);
  *(int16x4_t *)v140.i8 = vmovn_s32((int32x4_t)v140);
  int16x8_t v141 = vaddq_s16(v458, v120);
  int16x8_t v142 = vsubq_s16(v121, v458);
  int16x8_t v143 = vshlq_s16(vshlq_s16(vzip1q_s16(v138, v140), v142), v141);
  int16x8_t v441 = v143;
  unint64_t v144 = v126 + v125;
  if (v433.i64[0]) {
    BOOL v145 = v433.i64[0] >= v144;
  }
  else {
    BOOL v145 = 1;
  }
  char v146 = !v145;
  if (v125 > 0x80 || (v146 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v144 = v126;
  }
  else
  {
    unint64_t v147 = v126 & 0x3F;
    int64x2_t v148 = vaddq_s64(vdupq_n_s64(v147), vzip1q_s64((int64x2_t)0, v124));
    unint64_t v149 = (int64x2_t *)(v112 + 8 * (v126 >> 6));
    int8x16_t v129 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
    if (v147 + v125 >= 0x81) {
      int8x16_t v129 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v129);
    }
  }
  int64x2_t v150 = (int64x2_t)vshlq_u64((uint64x2_t)v129, v136);
  *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
  *(int32x2_t *)v150.i8 = vmovn_s64(v150);
  int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v129, (int32x4_t)v150);
  int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v151, v139);
  *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v151);
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  int16x8_t v153 = vshlq_s16(vshlq_s16(vzip1q_s16(v151, v152), v142), v141);
  int16x8_t v442 = v153;
  unint64_t v154 = v144 + v125;
  if (v433.i64[0]) {
    BOOL v155 = v433.i64[0] >= v154;
  }
  else {
    BOOL v155 = 1;
  }
  char v156 = !v155;
  int8x16_t v157 = 0uLL;
  if (v125 > 0x80 || (v156 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v154 = v144;
    int8x16_t v161 = 0uLL;
  }
  else
  {
    unint64_t v158 = v144 & 0x3F;
    int64x2_t v159 = vaddq_s64(vdupq_n_s64(v158), vzip1q_s64((int64x2_t)0, v124));
    uint64_t v160 = (int64x2_t *)(v112 + 8 * (v144 >> 6));
    int8x16_t v161 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v160, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v159)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v160->i64[0], 0), (uint64x2_t)vnegq_s64(v159)));
    if (v158 + v125 >= 0x81) {
      int8x16_t v161 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v160[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v159)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v160[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v159))), v161);
    }
  }
  int64x2_t v162 = (int64x2_t)vshlq_u64((uint64x2_t)v161, v136);
  *(int32x2_t *)v161.i8 = vmovn_s64((int64x2_t)v161);
  *(int32x2_t *)v162.i8 = vmovn_s64(v162);
  int16x8_t v163 = (int16x8_t)vzip1q_s32((int32x4_t)v161, (int32x4_t)v162);
  int16x8_t v164 = (int16x8_t)vshlq_u32((uint32x4_t)v163, v139);
  *(int16x4_t *)v163.i8 = vmovn_s32((int32x4_t)v163);
  *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
  int16x8_t v165 = vshlq_s16(vshlq_s16(vzip1q_s16(v163, v164), v142), v141);
  int16x8_t v443 = v165;
  int8x16_t v166 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v459, v459));
  unint64_t v167 = vpaddq_s32((int32x4_t)v166, (int32x4_t)v166).u64[0];
  v168.i64[0] = v167;
  v168.i64[1] = HIDWORD(v167);
  int64x2_t v169 = v168;
  unint64_t v170 = vaddvq_s64(v168);
  unint64_t v171 = v170;
  unint64_t v172 = v154 + v170;
  if (v433.i64[0]) {
    BOOL v173 = v433.i64[0] >= v172;
  }
  else {
    BOOL v173 = 1;
  }
  char v174 = !v173;
  if (v170 > 0x80 || (v174 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v172 = v154;
  }
  else
  {
    unint64_t v175 = v154 & 0x3F;
    int64x2_t v176 = vaddq_s64(vdupq_n_s64(v175), vzip1q_s64((int64x2_t)0, v169));
    int v177 = (int64x2_t *)(v112 + 8 * (v154 >> 6));
    int8x16_t v157 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v177, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v176)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v177->i64[0], 0), (uint64x2_t)vnegq_s64(v176)));
    if (v175 + v171 >= 0x81) {
      int8x16_t v157 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v177[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v176)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v177[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v176))), v157);
    }
  }
  int32x4_t v178 = (int32x4_t)vextq_s8(v166, v166, 8uLL);
  int32x2_t v179 = vzip1_s32(*(int32x2_t *)v166.i8, *(int32x2_t *)v178.i8);
  v180.i64[0] = v179.u32[0];
  v180.i64[1] = v179.u32[1];
  uint64x2_t v181 = (uint64x2_t)vnegq_s64(v180);
  int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v157, v181);
  *(int32x2_t *)v178.i8 = vmovn_s64((int64x2_t)v157);
  *(int32x2_t *)v182.i8 = vmovn_s64(v182);
  int16x8_t v183 = (int16x8_t)vzip1q_s32(v178, (int32x4_t)v182);
  uint32x4_t v184 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v459.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v459, (int8x16_t)v459, 8uLL))));
  int16x8_t v185 = (int16x8_t)vshlq_u32((uint32x4_t)v183, v184);
  *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
  *(int16x4_t *)v185.i8 = vmovn_s32((int32x4_t)v185);
  int16x8_t v186 = vzip1q_s16(v183, v185);
  v185.i64[0] = 0xF000F000F000FLL;
  v185.i64[1] = 0xF000F000F000FLL;
  int16x8_t v187 = vaddq_s16(v459, v185);
  v185.i64[0] = 0x10001000100010;
  v185.i64[1] = 0x10001000100010;
  int16x8_t v188 = vsubq_s16(v185, v459);
  int16x8_t v189 = vshlq_s16(vshlq_s16(v186, v188), v187);
  int8x16_t v444 = (int8x16_t)v189;
  unint64_t v190 = v172 + v171;
  if (v433.i64[0]) {
    BOOL v191 = v433.i64[0] >= v190;
  }
  else {
    BOOL v191 = 1;
  }
  char v192 = !v191;
  int8x16_t v193 = 0uLL;
  if (v171 > 0x80 || (v192 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v190 = v172;
    int8x16_t v197 = 0uLL;
  }
  else
  {
    unint64_t v194 = v172 & 0x3F;
    int64x2_t v195 = vaddq_s64(vdupq_n_s64(v194), vzip1q_s64((int64x2_t)0, v169));
    BOOL v196 = (int64x2_t *)(v112 + 8 * (v172 >> 6));
    int8x16_t v197 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v196, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196->i64[0], 0), (uint64x2_t)vnegq_s64(v195)));
    if (v194 + v171 >= 0x81) {
      int8x16_t v197 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v196[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v195))), v197);
    }
  }
  int64x2_t v198 = (int64x2_t)vshlq_u64((uint64x2_t)v197, v181);
  *(int32x2_t *)v197.i8 = vmovn_s64((int64x2_t)v197);
  *(int32x2_t *)v198.i8 = vmovn_s64(v198);
  int16x8_t v199 = (int16x8_t)vzip1q_s32((int32x4_t)v197, (int32x4_t)v198);
  int16x8_t v200 = (int16x8_t)vshlq_u32((uint32x4_t)v199, v184);
  *(int16x4_t *)v199.i8 = vmovn_s32((int32x4_t)v199);
  *(int16x4_t *)v200.i8 = vmovn_s32((int32x4_t)v200);
  int16x8_t v201 = vshlq_s16(vshlq_s16(vzip1q_s16(v199, v200), v188), v187);
  int8x16_t v445 = (int8x16_t)v201;
  unint64_t v202 = v190 + v171;
  if (v433.i64[0]) {
    BOOL v203 = v433.i64[0] >= v202;
  }
  else {
    BOOL v203 = 1;
  }
  char v204 = !v203;
  if (v171 > 0x80 || (v204 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v202 = v190;
  }
  else
  {
    unint64_t v205 = v190 & 0x3F;
    int64x2_t v206 = vaddq_s64(vdupq_n_s64(v205), vzip1q_s64((int64x2_t)0, v169));
    unint64_t v207 = (int64x2_t *)(v112 + 8 * (v190 >> 6));
    int8x16_t v193 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v207, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v206)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v207->i64[0], 0), (uint64x2_t)vnegq_s64(v206)));
    if (v205 + v171 >= 0x81) {
      int8x16_t v193 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v207[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v206)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v207[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v206))), v193);
    }
  }
  int64x2_t v208 = (int64x2_t)vshlq_u64((uint64x2_t)v193, v181);
  *(int32x2_t *)v193.i8 = vmovn_s64((int64x2_t)v193);
  *(int32x2_t *)v208.i8 = vmovn_s64(v208);
  int16x8_t v209 = (int16x8_t)vzip1q_s32((int32x4_t)v193, (int32x4_t)v208);
  int16x8_t v210 = (int16x8_t)vshlq_u32((uint32x4_t)v209, v184);
  *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
  *(int16x4_t *)v210.i8 = vmovn_s32((int32x4_t)v210);
  int16x8_t v211 = vshlq_s16(vshlq_s16(vzip1q_s16(v209, v210), v188), v187);
  int8x16_t v446 = (int8x16_t)v211;
  unint64_t v212 = v202 + v171;
  if (v433.i64[0]) {
    BOOL v213 = v433.i64[0] >= v212;
  }
  else {
    BOOL v213 = 1;
  }
  char v214 = !v213;
  int8x16_t v215 = 0uLL;
  if (v171 > 0x80 || (v214 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v212 = v202;
    int8x16_t v219 = 0uLL;
  }
  else
  {
    unint64_t v216 = v202 & 0x3F;
    int64x2_t v217 = vaddq_s64(vdupq_n_s64(v216), vzip1q_s64((int64x2_t)0, v169));
    int v218 = (int64x2_t *)(v112 + 8 * (v202 >> 6));
    int8x16_t v219 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v218, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218->i64[0], 0), (uint64x2_t)vnegq_s64(v217)));
    if (v216 + v171 >= 0x81) {
      int8x16_t v219 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v218[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v217))), v219);
    }
  }
  int64x2_t v220 = (int64x2_t)vshlq_u64((uint64x2_t)v219, v181);
  *(int32x2_t *)v219.i8 = vmovn_s64((int64x2_t)v219);
  *(int32x2_t *)v220.i8 = vmovn_s64(v220);
  int16x8_t v221 = (int16x8_t)vzip1q_s32((int32x4_t)v219, (int32x4_t)v220);
  int16x8_t v222 = (int16x8_t)vshlq_u32((uint32x4_t)v221, v184);
  *(int16x4_t *)v221.i8 = vmovn_s32((int32x4_t)v221);
  *(int16x4_t *)v222.i8 = vmovn_s32((int32x4_t)v222);
  int16x8_t v223 = vshlq_s16(vshlq_s16(vzip1q_s16(v221, v222), v188), v187);
  int8x16_t v447 = (int8x16_t)v223;
  int8x16_t v224 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v460, v460));
  unint64_t v225 = vpaddq_s32((int32x4_t)v224, (int32x4_t)v224).u64[0];
  v226.i64[0] = v225;
  v226.i64[1] = HIDWORD(v225);
  int64x2_t v227 = v226;
  unint64_t v228 = vaddvq_s64(v226);
  unint64_t v229 = v228;
  unint64_t v230 = v212 + v228;
  if (v433.i64[0]) {
    BOOL v231 = v433.i64[0] >= v230;
  }
  else {
    BOOL v231 = 1;
  }
  char v232 = !v231;
  if (v228 > 0x80 || (v232 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v230 = v212;
  }
  else
  {
    unint64_t v233 = v212 & 0x3F;
    int64x2_t v234 = vaddq_s64(vdupq_n_s64(v233), vzip1q_s64((int64x2_t)0, v227));
    uint64_t v235 = (int64x2_t *)(v112 + 8 * (v212 >> 6));
    int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v235, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235->i64[0], 0), (uint64x2_t)vnegq_s64(v234)));
    if (v233 + v229 >= 0x81) {
      int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v235[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v234))), v215);
    }
  }
  int32x4_t v236 = (int32x4_t)vextq_s8(v224, v224, 8uLL);
  int32x2_t v237 = vzip1_s32(*(int32x2_t *)v224.i8, *(int32x2_t *)v236.i8);
  v238.i64[0] = v237.u32[0];
  v238.i64[1] = v237.u32[1];
  uint64x2_t v239 = (uint64x2_t)vnegq_s64(v238);
  int64x2_t v240 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v239);
  *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v215);
  *(int32x2_t *)v240.i8 = vmovn_s64(v240);
  int16x8_t v241 = (int16x8_t)vzip1q_s32(v236, (int32x4_t)v240);
  uint32x4_t v242 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v460.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v460, (int8x16_t)v460, 8uLL))));
  int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v241, v242);
  *(int16x4_t *)v241.i8 = vmovn_s32((int32x4_t)v241);
  *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
  int16x8_t v244 = vzip1q_s16(v241, v243);
  v243.i64[0] = 0xF000F000F000FLL;
  v243.i64[1] = 0xF000F000F000FLL;
  int16x8_t v245 = vaddq_s16(v460, v243);
  v243.i64[0] = 0x10001000100010;
  v243.i64[1] = 0x10001000100010;
  int16x8_t v246 = vsubq_s16(v243, v460);
  int16x8_t v247 = vshlq_s16(vshlq_s16(v244, v246), v245);
  int16x8_t v448 = v247;
  unint64_t v248 = v230 + v229;
  if (v433.i64[0]) {
    BOOL v249 = v433.i64[0] >= v248;
  }
  else {
    BOOL v249 = 1;
  }
  char v250 = !v249;
  int8x16_t v251 = 0uLL;
  if (v229 > 0x80 || (v250 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v248 = v230;
    int8x16_t v255 = 0uLL;
  }
  else
  {
    unint64_t v252 = v230 & 0x3F;
    int64x2_t v253 = vaddq_s64(vdupq_n_s64(v252), vzip1q_s64((int64x2_t)0, v227));
    uint64_t v254 = (int64x2_t *)(v112 + 8 * (v230 >> 6));
    int8x16_t v255 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v254, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v253)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v254->i64[0], 0), (uint64x2_t)vnegq_s64(v253)));
    if (v252 + v229 >= 0x81) {
      int8x16_t v255 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v254[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v253)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v254[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v253))), v255);
    }
  }
  int64x2_t v256 = (int64x2_t)vshlq_u64((uint64x2_t)v255, v239);
  *(int32x2_t *)v255.i8 = vmovn_s64((int64x2_t)v255);
  *(int32x2_t *)v256.i8 = vmovn_s64(v256);
  int16x8_t v257 = (int16x8_t)vzip1q_s32((int32x4_t)v255, (int32x4_t)v256);
  int16x8_t v258 = (int16x8_t)vshlq_u32((uint32x4_t)v257, v242);
  *(int16x4_t *)v257.i8 = vmovn_s32((int32x4_t)v257);
  *(int16x4_t *)v258.i8 = vmovn_s32((int32x4_t)v258);
  int16x8_t v259 = vshlq_s16(vshlq_s16(vzip1q_s16(v257, v258), v246), v245);
  int16x8_t v449 = v259;
  unint64_t v260 = v248 + v229;
  if (v433.i64[0]) {
    BOOL v261 = v433.i64[0] >= v260;
  }
  else {
    BOOL v261 = 1;
  }
  char v262 = !v261;
  if (v229 > 0x80 || (v262 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v260 = v248;
  }
  else
  {
    unint64_t v263 = v248 & 0x3F;
    int64x2_t v264 = vaddq_s64(vdupq_n_s64(v263), vzip1q_s64((int64x2_t)0, v227));
    unint64_t v265 = (int64x2_t *)(v112 + 8 * (v248 >> 6));
    int8x16_t v251 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v265, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v264)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v265->i64[0], 0), (uint64x2_t)vnegq_s64(v264)));
    if (v263 + v229 >= 0x81) {
      int8x16_t v251 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v265[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v264)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v265[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v264))), v251);
    }
  }
  int64x2_t v266 = (int64x2_t)vshlq_u64((uint64x2_t)v251, v239);
  *(int32x2_t *)v251.i8 = vmovn_s64((int64x2_t)v251);
  *(int32x2_t *)v266.i8 = vmovn_s64(v266);
  int16x8_t v267 = (int16x8_t)vzip1q_s32((int32x4_t)v251, (int32x4_t)v266);
  int16x8_t v268 = (int16x8_t)vshlq_u32((uint32x4_t)v267, v242);
  *(int16x4_t *)v267.i8 = vmovn_s32((int32x4_t)v267);
  *(int16x4_t *)v268.i8 = vmovn_s32((int32x4_t)v268);
  int16x8_t v269 = vshlq_s16(vshlq_s16(vzip1q_s16(v267, v268), v246), v245);
  int16x8_t v450 = v269;
  unint64_t v270 = v260 + v229;
  if (v433.i64[0]) {
    BOOL v271 = v433.i64[0] >= v270;
  }
  else {
    BOOL v271 = 1;
  }
  char v272 = !v271;
  int8x16_t v273 = 0uLL;
  if (v229 > 0x80 || (v272 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v270 = v260;
    int8x16_t v277 = 0uLL;
  }
  else
  {
    unint64_t v274 = v260 & 0x3F;
    int64x2_t v275 = vaddq_s64(vdupq_n_s64(v274), vzip1q_s64((int64x2_t)0, v227));
    unint64_t v276 = (int64x2_t *)(v112 + 8 * (v260 >> 6));
    int8x16_t v277 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v276, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v275)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v276->i64[0], 0), (uint64x2_t)vnegq_s64(v275)));
    if (v274 + v229 >= 0x81) {
      int8x16_t v277 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v276[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v275)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v276[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v275))), v277);
    }
  }
  int64x2_t v278 = (int64x2_t)vshlq_u64((uint64x2_t)v277, v239);
  *(int32x2_t *)v277.i8 = vmovn_s64((int64x2_t)v277);
  *(int32x2_t *)v278.i8 = vmovn_s64(v278);
  int16x8_t v279 = (int16x8_t)vzip1q_s32((int32x4_t)v277, (int32x4_t)v278);
  int16x8_t v280 = (int16x8_t)vshlq_u32((uint32x4_t)v279, v242);
  *(int16x4_t *)v279.i8 = vmovn_s32((int32x4_t)v279);
  *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
  int16x8_t v281 = vshlq_s16(vshlq_s16(vzip1q_s16(v279, v280), v246), v245);
  int16x8_t v451 = v281;
  int8x16_t v282 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v461, v461));
  unint64_t v283 = vpaddq_s32((int32x4_t)v282, (int32x4_t)v282).u64[0];
  v284.i64[0] = v283;
  v284.i64[1] = HIDWORD(v283);
  int64x2_t v285 = v284;
  unint64_t v286 = vaddvq_s64(v284);
  unint64_t v287 = v286;
  unint64_t v288 = v270 + v286;
  if (v433.i64[0]) {
    BOOL v289 = v433.i64[0] >= v288;
  }
  else {
    BOOL v289 = 1;
  }
  char v290 = !v289;
  if (v286 > 0x80 || (v290 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v288 = v270;
  }
  else
  {
    unint64_t v291 = v270 & 0x3F;
    int64x2_t v292 = vaddq_s64(vdupq_n_s64(v291), vzip1q_s64((int64x2_t)0, v285));
    BOOL v293 = (int64x2_t *)(v112 + 8 * (v270 >> 6));
    int8x16_t v273 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v293, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v292)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v293->i64[0], 0), (uint64x2_t)vnegq_s64(v292)));
    if (v291 + v287 >= 0x81) {
      int8x16_t v273 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v293[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v292)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v293[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v292))), v273);
    }
  }
  int32x2_t v294 = vzip1_s32(*(int32x2_t *)v282.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v282, v282, 8uLL));
  v295.i64[0] = v294.u32[0];
  v295.i64[1] = v294.u32[1];
  int32x4_t v296 = (int32x4_t)vnegq_s64(v295);
  int64x2_t v297 = (int64x2_t)vshlq_u64((uint64x2_t)v273, (uint64x2_t)v296);
  *(int32x2_t *)v273.i8 = vmovn_s64((int64x2_t)v273);
  *(int32x2_t *)v297.i8 = vmovn_s64(v297);
  int16x8_t v298 = (int16x8_t)vzip1q_s32((int32x4_t)v273, (int32x4_t)v297);
  uint32x4_t v299 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v461.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v461, (int8x16_t)v461, 8uLL))));
  int16x8_t v300 = (int16x8_t)vshlq_u32((uint32x4_t)v298, v299);
  *(int16x4_t *)v298.i8 = vmovn_s32((int32x4_t)v298);
  *(int16x4_t *)v300.i8 = vmovn_s32((int32x4_t)v300);
  int16x8_t v301 = vzip1q_s16(v298, v300);
  v298.i64[0] = 0xF000F000F000FLL;
  v298.i64[1] = 0xF000F000F000FLL;
  int16x8_t v302 = vaddq_s16(v461, v298);
  v300.i64[0] = 0x10001000100010;
  v300.i64[1] = 0x10001000100010;
  int16x8_t v303 = vsubq_s16(v300, v461);
  int16x8_t v304 = vshlq_s16(vshlq_s16(v301, v303), v302);
  int16x8_t v452 = v304;
  unint64_t v305 = v288 + v287;
  if (v433.i64[0]) {
    BOOL v306 = v433.i64[0] >= v305;
  }
  else {
    BOOL v306 = 1;
  }
  char v307 = !v306;
  int8x16_t v308 = 0uLL;
  if (v287 > 0x80 || (v307 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v305 = v288;
    int8x16_t v312 = 0uLL;
  }
  else
  {
    unint64_t v309 = v288 & 0x3F;
    int64x2_t v310 = vaddq_s64(vdupq_n_s64(v309), vzip1q_s64((int64x2_t)0, v285));
    v311 = (int64x2_t *)(v112 + 8 * (v288 >> 6));
    int8x16_t v312 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v311, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v310)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v311->i64[0], 0), (uint64x2_t)vnegq_s64(v310)));
    if (v309 + v287 >= 0x81) {
      int8x16_t v312 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v311[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v310)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v311[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v310))), v312);
    }
  }
  int64x2_t v313 = (int64x2_t)vshlq_u64((uint64x2_t)v312, (uint64x2_t)v296);
  *(int32x2_t *)v312.i8 = vmovn_s64((int64x2_t)v312);
  *(int32x2_t *)v313.i8 = vmovn_s64(v313);
  int16x8_t v314 = (int16x8_t)vzip1q_s32((int32x4_t)v312, (int32x4_t)v313);
  int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v314, v299);
  *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
  *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
  int16x8_t v316 = vshlq_s16(vshlq_s16(vzip1q_s16(v314, v315), v303), v302);
  int8x16_t v453 = (int8x16_t)v316;
  unint64_t v317 = v305 + v287;
  if (v433.i64[0]) {
    BOOL v318 = v433.i64[0] >= v317;
  }
  else {
    BOOL v318 = 1;
  }
  char v319 = !v318;
  if (v287 > 0x80 || (v319 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v317 = v305;
  }
  else
  {
    unint64_t v320 = v305 & 0x3F;
    int64x2_t v321 = vaddq_s64(vdupq_n_s64(v320), vzip1q_s64((int64x2_t)0, v285));
    unsigned int v322 = (int64x2_t *)(v112 + 8 * (v305 >> 6));
    int8x16_t v308 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v322, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v321)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v322->i64[0], 0), (uint64x2_t)vnegq_s64(v321)));
    if (v320 + v287 >= 0x81) {
      int8x16_t v308 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v322[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v321)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v322[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v321))), v308);
    }
  }
  int64x2_t v323 = (int64x2_t)vshlq_u64((uint64x2_t)v308, (uint64x2_t)v296);
  *(int32x2_t *)v308.i8 = vmovn_s64((int64x2_t)v308);
  *(int32x2_t *)v323.i8 = vmovn_s64(v323);
  int16x8_t v324 = (int16x8_t)vzip1q_s32((int32x4_t)v308, (int32x4_t)v323);
  int16x8_t v325 = (int16x8_t)vshlq_u32((uint32x4_t)v324, v299);
  *(int16x4_t *)v324.i8 = vmovn_s32((int32x4_t)v324);
  *(int16x4_t *)v325.i8 = vmovn_s32((int32x4_t)v325);
  int16x8_t v326 = vshlq_s16(vshlq_s16(vzip1q_s16(v324, v325), v303), v302);
  int8x16_t v454 = (int8x16_t)v326;
  unint64_t v327 = v317 + v287;
  if (v433.i64[0]) {
    BOOL v328 = v433.i64[0] >= v327;
  }
  else {
    BOOL v328 = 1;
  }
  char v329 = !v328;
  int8x16_t v330 = 0uLL;
  if (v287 > 0x80 || (v329 & 1) != 0)
  {
    int v114 = 1;
    unint64_t v327 = v317;
  }
  else
  {
    int64x2_t v331 = vaddq_s64(vdupq_n_s64(v317 & 0x3F), vzip1q_s64((int64x2_t)0, v285));
    v332 = (int64x2_t *)(v112 + 8 * (v317 >> 6));
    int8x16_t v330 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v332, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v331)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v332->i64[0], 0), (uint64x2_t)vnegq_s64(v331)));
    if ((v317 & 0x3F) + v287 >= 0x81) {
      int8x16_t v330 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v332[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v331)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v332[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v331))), v330);
    }
  }
  int64x2_t v333 = (int64x2_t)vshlq_u64((uint64x2_t)v330, (uint64x2_t)v296);
  *(int32x2_t *)v296.i8 = vmovn_s64((int64x2_t)v330);
  *(int32x2_t *)v333.i8 = vmovn_s64(v333);
  int16x8_t v334 = (int16x8_t)vzip1q_s32(v296, (int32x4_t)v333);
  int16x8_t v335 = (int16x8_t)vshlq_u32((uint32x4_t)v334, v299);
  *(int16x4_t *)v334.i8 = vmovn_s32((int32x4_t)v334);
  *(int16x4_t *)v335.i8 = vmovn_s32((int32x4_t)v335);
  int16x8_t v336 = vshlq_s16(vshlq_s16(vzip1q_s16(v334, v335), v303), v302);
  int8x16_t v455 = (int8x16_t)v336;
  if (v114 || v433.i64[0] + 8 * result - v327 - 640 >= 9 || v97 == 2)
  {
    uint64_t v337 = (8 * (&v431 + 4)) & 0x20;
    uint64_t v338 = v431 | (1023 << v337);
    HIDWORD(v431) = HIDWORD(v338);
    unint64_t v339 = (32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0xA;
    unint64_t v340 = v339 - v337 + 10;
    if (v339 - v337 > 0x16)
    {
      unint64_t v341 = v339 - v337;
    }
    else
    {
      unint64_t v340 = (((32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0x14) - v337) | 0xA;
      unint64_t v341 = ((32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0x14) - v337;
    }
    if (v339 - v337 <= 0x16) {
      unint64_t v342 = (32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0x14;
    }
    else {
      unint64_t v342 = (32 * ((((unint64_t)&v431 + 4) >> 2) & 1)) | 0xA;
    }
    if (v340 <= 0x20)
    {
      v338 |= 1023 << v342;
      HIDWORD(v431) = HIDWORD(v338);
      unint64_t v342 = ((_BYTE)v342 + 10) & 0x3E;
      unint64_t v341 = v342 - v337;
    }
    if (v341 - 31 >= 0xFFFFFFFFFFFFFFDFLL) {
      uint64_t v431 = v338 | (3 << v342);
    }
    uint64_t result = 0;
    v343 = (_OWORD *)((char *)a1->f32 + a2);
    long long v11 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    v344 = (_OWORD *)((char *)a1->f32 + 2 * a2);
    _OWORD *v343 = 0u;
    v343[1] = 0u;
    char v14 = (_OWORD *)((char *)a1->f32 + 2 * a2 + a2);
    _OWORD *v344 = 0u;
    v344[1] = 0u;
    goto LABEL_254;
  }
  int8x16_t v345 = (int8x16_t)vdupq_lane_s64(v96.i64[0], 0);
  int16x8_t v440 = vaddq_s16((int16x8_t)vandq_s8(v96, v62), v122);
  int16x8_t v346 = (int16x8_t)vandq_s8(v62, v345);
  int8x16_t v347 = (int8x16_t)vsubq_s16(v440, v346);
  int16x8_t v348 = vsubq_s16(v143, v346);
  int16x8_t v349 = vsubq_s16(v153, v346);
  int8x16_t v350 = (int8x16_t)vsubq_s16(v165, v346);
  int16x8_t v351 = (int16x8_t)vandq_s8(v61, v345);
  int16x8_t v352 = vsubq_s16(v189, v351);
  int16x8_t v353 = vsubq_s16(v201, v351);
  int16x8_t v354 = vsubq_s16(v211, v351);
  int16x8_t v355 = vsubq_s16(v223, v351);
  int16x8_t v356 = (int16x8_t)vandq_s8(v60, v345);
  int16x8_t v357 = vsubq_s16(v247, v356);
  int16x8_t v358 = vsubq_s16(v259, v356);
  int16x8_t v359 = vsubq_s16(v269, v356);
  int16x8_t v360 = vsubq_s16(v281, v356);
  int16x8_t v361 = (int16x8_t)vandq_s8(v59, v345);
  int16x8_t v362 = vsubq_s16(v304, v361);
  int16x8_t v363 = vsubq_s16(v316, v361);
  int16x8_t v452 = v362;
  int8x16_t v453 = (int8x16_t)v363;
  int16x8_t v364 = vsubq_s16(v326, v361);
  int16x8_t v365 = vsubq_s16(v336, v361);
  int8x16_t v454 = (int8x16_t)v364;
  int8x16_t v455 = (int8x16_t)v365;
  v366.i64[0] = 0x1000100010001;
  v366.i64[1] = 0x1000100010001;
  if (vaddvq_s16(vceqq_s16(v42, (int16x8_t)v366)))
  {
    int8x16_t v367 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v457, v366));
    v368.i64[1] = v347.i64[1];
    v368.i64[0] = v350.i64[1];
    v369.i64[0] = v350.i64[0];
    v369.i64[1] = v347.i64[0];
    int16x8_t v370 = (int16x8_t)vbslq_s8(v367, v368, v347);
    int16x8_t v371 = (int16x8_t)vbslq_s8(v367, v369, v350);
    v368.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v368.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int16x8_t v372 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v348 - 1), v368), v367);
    v470.val[0] = (int8x16_t)vaddq_s16(v370, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v348 - 1), (int8x16_t)xmmword_242EA7710), v367));
    v470.val[1] = (int8x16_t)vaddq_s16(v348, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v348 - 1), (int8x16_t)xmmword_242EA7720), v367));
    v470.val[2] = (int8x16_t)vaddq_s16(v349, v372);
    v470.val[3] = (int8x16_t)vaddq_s16(v371, v372);
    int16x8_t v373 = (int16x8_t)vandq_s8(vqtbl4q_s8(v470, v368), v367);
    int8x16_t v347 = (int8x16_t)vaddq_s16((int16x8_t)v470.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7730), v367));
    int16x8_t v348 = vaddq_s16((int16x8_t)v470.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7740), v367));
    int16x8_t v440 = (int16x8_t)v347;
    int16x8_t v441 = v348;
    int16x8_t v349 = vaddq_s16((int16x8_t)v470.val[2], v373);
    int8x16_t v350 = (int8x16_t)vaddq_s16((int16x8_t)v470.val[3], v373);
    int16x8_t v442 = v349;
    int16x8_t v443 = (int16x8_t)v350;
    v469.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, (int8x16_t)xmmword_242EA7710), v367), v352);
    v469.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, (int8x16_t)xmmword_242EA7750), v367), v353);
    v469.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, v368), v367), v354);
    v469.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v352.i8, (int8x16_t)xmmword_242EA7760), v367), v355);
    int16x8_t v374 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA7730), v367);
    int16x8_t v375 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, v368), v367);
    int16x8_t v352 = vaddq_s16(v374, (int16x8_t)v469.val[0]);
    int16x8_t v353 = vaddq_s16((int16x8_t)v469.val[1], v374);
    int16x8_t v354 = vaddq_s16((int16x8_t)v469.val[2], v375);
    int16x8_t v355 = vaddq_s16((int16x8_t)v469.val[3], v375);
    v469.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA74D0), v367), v357);
    v469.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA75A0), v367), v358);
    v469.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA7710), v367), v359);
    v469.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v357.i8, (int8x16_t)xmmword_242EA7720), v367), v360);
    int16x8_t v376 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, v368), v367);
    int16x8_t v357 = vaddq_s16((int16x8_t)v469.val[0], v376);
    int16x8_t v358 = vaddq_s16((int16x8_t)v469.val[1], v376);
    int16x8_t v359 = vaddq_s16((int16x8_t)v469.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA75D0), v367));
    int16x8_t v360 = vaddq_s16((int16x8_t)v469.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA7770), v367));
    int16x8_t v377 = v452;
    v470.val[0] = v453;
    v470.val[1] = v454;
    v470.val[2] = v455;
    v469.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA74D0), v367), v452);
    v469.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7780), v367), (int16x8_t)v453);
    v469.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7710), v367), (int16x8_t)v454);
    v469.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v470, (int8x16_t)xmmword_242EA7720), v367), (int16x8_t)v455);
    int16x8_t v378 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, v368), v367);
    int16x8_t v379 = (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA7790), v367);
    int16x8_t v362 = vaddq_s16((int16x8_t)v469.val[0], v378);
    int16x8_t v363 = vaddq_s16((int16x8_t)v469.val[1], v378);
    int16x8_t v364 = vaddq_s16((int16x8_t)v469.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v469, (int8x16_t)xmmword_242EA75D0), v367));
    int8x16_t v40 = v457;
    int16x8_t v365 = vaddq_s16((int16x8_t)v469.val[3], v379);
  }
  int8x16_t v380 = (int8x16_t)vaddq_s16(v456, (int16x8_t)v347);
  int8x16_t v381 = (int8x16_t)vaddq_s16(v348, v456);
  int8x16_t v382 = (int8x16_t)vaddq_s16(v349, v456);
  int8x16_t v383 = (int8x16_t)vaddq_s16((int16x8_t)v350, v456);
  int8x16_t v384 = (int8x16_t)vaddq_s16(v352, v456);
  int8x16_t v385 = (int8x16_t)vaddq_s16(v353, v456);
  int8x16_t v386 = (int8x16_t)vaddq_s16(v354, v456);
  int8x16_t v387 = (int8x16_t)vaddq_s16(v355, v456);
  int8x16_t v388 = (int8x16_t)vaddq_s16(v357, v456);
  int8x16_t v389 = (int8x16_t)vaddq_s16(v358, v456);
  int8x16_t v390 = (int8x16_t)vaddq_s16(v359, v456);
  int8x16_t v391 = (int8x16_t)vaddq_s16(v360, v456);
  int8x16_t v392 = (int8x16_t)vaddq_s16(v362, v456);
  int8x16_t v393 = (int8x16_t)vaddq_s16(v363, v456);
  int8x16_t v394 = (int8x16_t)vaddq_s16(v364, v456);
  int8x16_t v395 = (int8x16_t)vaddq_s16(v365, v456);
  v396.i64[0] = 0x10001000100010;
  v396.i64[1] = 0x10001000100010;
  int8x16_t v397 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v40, v396));
  int64x2_t v398 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v380, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v380);
  int64x2_t v399 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v381, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v381);
  int64x2_t v400 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v382, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v382);
  int64x2_t v401 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v383, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v383);
  int64x2_t v402 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v384, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v384);
  int64x2_t v403 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v385, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v385);
  int64x2_t v404 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v386, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v386);
  int64x2_t v405 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v387, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v387);
  int64x2_t v406 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v388, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v388);
  int64x2_t v407 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v389, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v389);
  int64x2_t v408 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v390, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v390);
  int64x2_t v409 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v391, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v391);
  int16x8_t v410 = (int16x8_t)vbicq_s8(vqtbl1q_s8(v395, (int8x16_t)xmmword_242EA7910), v397);
  int64x2_t v411 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v392, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v392);
  int64x2_t v412 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v393, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v393);
  int64x2_t v413 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v394, (int8x16_t)xmmword_242EA7910), v397), (int16x8_t)v394);
  int64x2_t v414 = (int64x2_t)vaddq_s16(v410, (int16x8_t)v395);
  __asm { FMOV            V6.4S, #1.875 }
  v393.i64[0] = 0xC0000000C0000000;
  v393.i64[1] = 0xC0000000C0000000;
  int64x2_t v418 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v398, 0x12uLL), v399, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v398, 0xCuLL), v399, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v398, 6uLL), v399, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v398, (int32x4_t)v399))));
  int64x2_t v419 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v400, 0x12uLL), v401, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v400, 0xCuLL), v401, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v400, 6uLL), v401, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v400, (int32x4_t)v401))));
  int64x2_t v420 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v402, 0x12uLL), v403, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v402, 0xCuLL), v403, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v402, 6uLL), v403, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v402, (int32x4_t)v403))));
  int64x2_t v421 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v404, 0x12uLL), v405, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v404, 0xCuLL), v405, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v404, 6uLL), v405, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v404, (int32x4_t)v405))));
  int64x2_t v422 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v406, 0x12uLL), v407, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v406, 0xCuLL), v407, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v406, 6uLL), v407, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v406, (int32x4_t)v407))));
  int64x2_t v423 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v408, 0x12uLL), v409, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v408, 0xCuLL), v409, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v408, 6uLL), v409, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v408, (int32x4_t)v409))));
  int64x2_t v424 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v411, 0x12uLL), v412, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v411, 0xCuLL), v412, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v411, 6uLL), v412, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v411, (int32x4_t)v412))));
  v425 = (int64x2_t *)((char *)a1 + a2);
  *(int64x2_t *)a1 = vzip1q_s64(v418, v419);
  a1[1] = (float32x4_t)vzip1q_s64(v422, v423);
  v426 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t *v425 = vzip2q_s64(v418, v419);
  v425[1] = vzip2q_s64(v422, v423);
  int64x2_t v427 = (int64x2_t)vbslq_s8(v393, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v413, 0x12uLL), v414, 0x12uLL), vbslq_s8(_Q6, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v413, 0xCuLL), v414, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7920, (int8x16_t)vshrn_high_n_s64(vshrn_n_s64(v413, 6uLL), v414, 6uLL), (int8x16_t)vuzp1q_s32((int32x4_t)v413, (int32x4_t)v414))));
  int64x2_t *v426 = vzip1q_s64(v420, v421);
  v426[1] = vzip1q_s64(v424, v427);
  v428 = (int64x2_t *)((char *)v426 + a2);
  int64x2_t *v428 = vzip2q_s64(v420, v421);
  v428[1] = vzip2q_s64(v424, v427);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  unint64_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *unint64_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    unsigned __int32 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    unsigned __int32 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned __int32 v25 = 0;
LABEL_35:
  unsigned int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    int64x2_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *unsigned int v26 = 0;
    int64x2_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int64x2_t v30 = 0;
LABEL_49:
  int64x2_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    int64x2_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *int64x2_t v31 = 0;
    int64x2_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressMacroblock(float32x4_t *a1, uint64_t a2, unsigned __int8 *a3, int a4)
{
  uint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1, 64, a2, *a3, a4);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 2, 64, v7, a3[1], a4);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 16, 64, v8, a3[2], a4);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 18, 64, v9, a3[3], a4);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 32, 64, v10, a3[4], a4);
  uint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 34, 64, v11, a3[5], a4);
  uint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 48, 64, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 50, 64, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  uint64_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  uint32x4_t v11 = (uint32x4_t)vzip1q_s64(*a3, v9);
  uint32x4_t v12 = (uint32x4_t)vzip2q_s64(*a3, v9);
  uint32x4_t v13 = (uint32x4_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  unsigned int v14 = (int64x2_t *)((char *)v7 + a4);
  uint32x4_t v17 = (uint32x4_t)vzip2q_s64(v8, v10);
  int64x2_t v18 = v14[1];
  uint32x4_t v19 = (uint32x4_t)vzip1q_s64(v15, *v14);
  uint32x4_t v20 = (uint32x4_t)vzip2q_s64(v15, *v14);
  uint32x4_t v21 = (uint32x4_t)vzip1q_s64(v16, v18);
  uint32x4_t v22 = (uint32x4_t)vzip2q_s64(v16, v18);
  v23.i64[0] = v11.u32[0];
  v23.i64[1] = v11.u32[1];
  int8x16_t v24 = v23;
  v23.i64[0] = v11.u32[2];
  v23.i64[1] = v11.u32[3];
  int8x16_t v25 = vbslq_s8((int8x16_t)xmmword_242EA7930, v24, (int8x16_t)0);
  int8x16_t v26 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v12.u32[0];
  v23.i64[1] = v12.u32[1];
  int8x16_t v27 = v23;
  v23.i64[0] = v12.u32[2];
  v23.i64[1] = v12.u32[3];
  int16x8_t v28 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v11.i8, 6uLL), v25)));
  int16x8_t v29 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v11, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v11, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v11, 6uLL), v26)));
  int16x8_t v30 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v12.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v27, (int8x16_t)0))));
  int16x8_t v31 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v12, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v12, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v12, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v19.u32[0];
  v23.i64[1] = v19.u32[1];
  int8x16_t v32 = v23;
  v23.i64[0] = v19.u32[2];
  v23.i64[1] = v19.u32[3];
  int8x16_t v33 = vbslq_s8((int8x16_t)xmmword_242EA7930, v32, (int8x16_t)0);
  int8x16_t v34 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v20.u32[0];
  v23.i64[1] = v20.u32[1];
  int8x16_t v35 = v23;
  v23.i64[0] = v20.u32[2];
  v23.i64[1] = v20.u32[3];
  int16x8_t v36 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v19.i8, 6uLL), v33)));
  int16x8_t v37 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v19, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v19, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v19, 6uLL), v34)));
  int16x8_t v38 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v20.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v35, (int8x16_t)0))));
  int16x8_t v39 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v20, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v20, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v20, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v13.u32[0];
  v23.i64[1] = v13.u32[1];
  int8x16_t v40 = v23;
  v23.i64[0] = v13.u32[2];
  v23.i64[1] = v13.u32[3];
  int8x16_t v41 = vbslq_s8((int8x16_t)xmmword_242EA7930, v40, (int8x16_t)0);
  int8x16_t v42 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v17.u32[0];
  v23.i64[1] = v17.u32[1];
  int8x16_t v43 = v23;
  v23.i64[0] = v17.u32[2];
  v23.i64[1] = v17.u32[3];
  int16x8_t v44 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v13.i8, 6uLL), v41)));
  int16x8_t v45 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v13, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v13, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v13, 6uLL), v42)));
  int16x8_t v46 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v17.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v43, (int8x16_t)0))));
  int16x8_t v47 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v17, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v17, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v17, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  v23.i64[0] = v21.u32[0];
  v23.i64[1] = v21.u32[1];
  int8x16_t v48 = v23;
  v23.i64[0] = v21.u32[2];
  v23.i64[1] = v21.u32[3];
  int8x16_t v49 = vbslq_s8((int8x16_t)xmmword_242EA7930, v48, (int8x16_t)0);
  int8x16_t v50 = vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0);
  v23.i64[0] = v22.u32[0];
  v23.i64[1] = v22.u32[1];
  int8x16_t v51 = v23;
  v23.i64[0] = v22.u32[2];
  v23.i64[1] = v22.u32[3];
  int16x8_t v52 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v21.i8, 6uLL), v49)));
  int16x8_t v53 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v21, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v21, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v21, 6uLL), v50)));
  int16x8_t v54 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_n_u32(*(uint32x2_t *)v22.i8, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v51, (int8x16_t)0))));
  int16x8_t v55 = (int16x8_t)vbslq_s8((int8x16_t)xmmword_242EA7960, (int8x16_t)vshll_high_n_u32(v22, 0x12uLL), vbslq_s8((int8x16_t)xmmword_242EA7950, (int8x16_t)vshll_high_n_u32(v22, 0xCuLL), vbslq_s8((int8x16_t)xmmword_242EA7940, (int8x16_t)vshll_high_n_u32(v22, 6uLL), vbslq_s8((int8x16_t)xmmword_242EA7930, v23, (int8x16_t)0))));
  int16x8_t v56 = (int16x8_t)vdupq_lane_s64(v28.i64[0], 0);
  int16x8_t v484 = v39;
  int16x8_t v57 = vsubq_s16(v39, v56);
  int8x16_t v486 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v28, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v487 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v29, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v488 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v30, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v489 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v31, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v490 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v36, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v491 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v37, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v58 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v486, (int16x8_t)v487), (int16x8_t)v488), (int16x8_t)v489), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v59 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v486, (int16x8_t)v487), (int16x8_t)v488), (int16x8_t)v489), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v60 = vpmaxq_s16(v58, v58);
  int16x8_t v61 = vpminq_s16(v59, v59);
  int16x8_t v62 = vzip1q_s16(v60, v61);
  v63.i64[0] = 0x10001000100010;
  v63.i64[1] = 0x10001000100010;
  int16x8_t v64 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int8x16_t v492 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v38, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v493 = (int8x16_t)vshlq_s16(vshlq_s16(v57, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  v65.i64[0] = 0x8000800080008000;
  v65.i64[1] = 0x8000800080008000;
  v57.i64[0] = 0x8000800080008000;
  v57.i64[1] = 0x8000800080008000;
  int16x8_t v66 = vminq_s16(v61, v57);
  int16x8_t v67 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v490, (int16x8_t)v491), (int16x8_t)v492), (int16x8_t)v493), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v68 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v490, (int16x8_t)v491), (int16x8_t)v492), (int16x8_t)v493), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int16x8_t v71 = vmaxq_s16(vmaxq_s16(v60, v65), v69);
  int16x8_t v72 = vminq_s16(v66, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  int8x16_t v494 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v44, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v495 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v45, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v75 = vshlq_s16(vshlq_s16(vsubq_s16(v46, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v76 = vminq_s16(vminq_s16((int16x8_t)v494, (int16x8_t)v495), v75);
  int8x16_t v496 = (int8x16_t)v75;
  int8x16_t v497 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v47, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v77 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v494, (int16x8_t)v495), v75), (int16x8_t)v497), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v78 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v76, (int16x8_t)v497), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v79 = vpmaxq_s16(v77, v77);
  int16x8_t v80 = vpminq_s16(v78, v78);
  int16x8_t v81 = vmaxq_s16(v71, v79);
  int16x8_t v82 = vminq_s16(v72, v80);
  int16x8_t v83 = vzip1q_s16(v79, v80);
  int16x8_t v84 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v83)), (int8x16_t)vceqzq_s16(v83));
  int8x16_t v498 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v52, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v499 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v53, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v502 = (int8x16_t)v56;
  int8x16_t v500 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v54, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int8x16_t v501 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v55, v56), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
  int16x8_t v85 = vpmaxq_s16(v64, v64);
  int16x8_t v86 = vpmaxq_s16(v74, v74);
  int8x16_t v87 = (int8x16_t)vpmaxq_s16(v84, v84);
  int16x8_t v88 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v498, (int16x8_t)v499), (int16x8_t)v500), (int16x8_t)v501), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v89 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v498, (int16x8_t)v499), (int16x8_t)v500), (int16x8_t)v501), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v90 = vpmaxq_s16(v88, v88);
  int16x8_t v91 = vpminq_s16(v89, v89);
  int16x8_t v92 = vmaxq_s16(v81, v90);
  int16x8_t v93 = vminq_s16(v82, v91);
  int16x8_t v94 = vzip1q_s16(v90, v91);
  int16x8_t v95 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v63, vclsq_s16(v94)), (int8x16_t)vceqzq_s16(v94));
  int16x8_t v96 = vpmaxq_s16(v95, v95);
  int8x16_t v97 = (int8x16_t)vmaxq_s16(vmaxq_s16(v85, v86), vmaxq_s16((int16x8_t)v87, v96));
  int16x8_t v98 = vclzq_s16(vsubq_s16(v92, v93));
  v99.i64[0] = 0xF000F000F000FLL;
  v99.i64[1] = 0xF000F000F000FLL;
  v100.i64[0] = -1;
  v100.i64[1] = -1;
  int8x16_t v509 = (int8x16_t)v93;
  int8x16_t v510 = (int8x16_t)v92;
  int8x16_t v101 = (int8x16_t)vsubq_s16(vshlq_s16(v100, vsubq_s16(v99, v98)), v93);
  int8x16_t v102 = (int8x16_t)vsubq_s16(v63, v98);
  int8x16_t v103 = (int8x16_t)vcgtq_s16((int16x8_t)v97, (int16x8_t)v102);
  int16x8_t v104 = (int16x8_t)vbslq_s8(v103, v102, v97);
  int8x16_t v511 = vandq_s8(v101, v103);
  v101.i64[0] = 0x8000800080008;
  v101.i64[1] = 0x8000800080008;
  int8x16_t v105 = vorrq_s8((int8x16_t)0, vandq_s8(v103, v101));
  v97.i64[0] = 0x3000300030003;
  v97.i64[1] = 0x3000300030003;
  int16x8_t v106 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v86), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v107 = vmaxq_s16(vminq_s16(vsubq_s16(v104, (int16x8_t)v87), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v505 = vsubq_s16(v104, v106);
  int16x8_t v506 = vsubq_s16(v104, v107);
  int16x8_t v108 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v96), (int16x8_t)v97), (int16x8_t)0);
  int16x8_t v507 = vsubq_s16(v104, v108);
  int8x16_t v508 = (int8x16_t)v104;
  int16x8_t v109 = vaddq_s16(v108, v107);
  int16x8_t v110 = vmaxq_s16(vminq_s16(vsubq_s16(v104, v85), (int16x8_t)v97), (int16x8_t)0);
  v87.i64[0] = 0x4000400040004;
  v87.i64[1] = 0x4000400040004;
  int8x16_t v111 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v104), v97), v105), vbicq_s8(v87, (int8x16_t)vceqq_s16(v109, vnegq_s16(vaddq_s16(v110, v106)))));
  int8x16_t v503 = v111;
  int16x8_t v504 = vsubq_s16(v104, v110);
  if (vmaxvq_s16(v104))
  {
    int16x8_t v450 = v55;
    int16x8_t v451 = v47;
    v472.val[0] = (int8x16_t)v28;
    v472.val[1] = (int8x16_t)v29;
    v472.val[2] = (int8x16_t)v30;
    v472.val[3] = (int8x16_t)v31;
    int8x16_t v479 = v105;
    int8x16_t v481 = v111;
    int16x8_t v112 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v490, (int16x8_t)vqtbl1q_s8(v490, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v113 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v491, (int16x8_t)vqtbl1q_s8(v491, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v114 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v492, (int16x8_t)vqtbl1q_s8(v492, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v115 = vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v493, (int16x8_t)vqtbl1q_s8(v493, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v457 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v486, (int16x8_t)vqtbl1q_s8(v486, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v458 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v487, (int16x8_t)vqtbl1q_s8(v487, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v459 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v489, (int16x8_t)vqtbl1q_s8(v489, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v460 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v488, (int16x8_t)vqtbl1q_s8(v488, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v116 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v457, (int16x8_t)v458), (int16x8_t)v460), (int16x8_t)v459), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v117 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v457, (int16x8_t)v458), (int16x8_t)v460), (int16x8_t)v459), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v118 = vpmaxq_s16(v116, v116);
    int16x8_t v119 = vpminq_s16(v117, v117);
    v120.i64[0] = 0x8000800080008000;
    v120.i64[1] = 0x8000800080008000;
    int16x8_t v121 = vmaxq_s16(v118, v120);
    v120.i64[0] = 0x8000800080008000;
    v120.i64[1] = 0x8000800080008000;
    int16x8_t v122 = vminq_s16(v119, v120);
    int16x8_t v123 = vzip1q_s16(v118, v119);
    v124.i64[0] = 0x10001000100010;
    v124.i64[1] = 0x10001000100010;
    int16x8_t v125 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v124, vclsq_s16(v123)), (int8x16_t)vceqzq_s16(v123));
    int16x8_t v126 = vpmaxq_s16(v125, v125);
    int8x16_t v127 = (int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v112, v113), v114), v115);
    int8x16_t v465 = (int8x16_t)v114;
    int8x16_t v466 = (int8x16_t)v112;
    int8x16_t v463 = (int8x16_t)v115;
    int8x16_t v464 = (int8x16_t)v113;
    int16x8_t v128 = vminq_s16(v112, v113);
    int8x16_t v129 = v481;
    int16x8_t v130 = (int16x8_t)vqtbl1q_s8(v127, (int8x16_t)xmmword_242EA77B0);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(v128, v114), v115), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v132 = vpmaxq_s16(v130, v130);
    int16x8_t v133 = vpminq_s16(v131, v131);
    int16x8_t v134 = vmaxq_s16(v121, v132);
    int16x8_t v135 = vminq_s16(v122, v133);
    int16x8_t v136 = vzip1q_s16(v132, v133);
    v112.i64[0] = 0x10001000100010;
    v112.i64[1] = 0x10001000100010;
    int16x8_t v137 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v112, vclsq_s16(v136)), (int8x16_t)vceqzq_s16(v136));
    int16x8_t v138 = vpmaxq_s16(v137, v137);
    int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v496, (int16x8_t)vqtbl1q_s8(v496, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v494, (int16x8_t)vqtbl1q_s8(v494, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v467 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v497, (int16x8_t)vqtbl1q_s8(v497, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v468 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v495, (int16x8_t)vqtbl1q_s8(v495, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v139 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v470, (int16x8_t)v468), (int16x8_t)v469), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v140 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v470, (int16x8_t)v468), (int16x8_t)v469), (int16x8_t)v467), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v141 = vpmaxq_s16(v139, v139);
    int16x8_t v142 = vpminq_s16(v140, v140);
    int16x8_t v143 = vmaxq_s16(v134, v141);
    int16x8_t v144 = vminq_s16(v135, v142);
    int16x8_t v145 = vzip1q_s16(v141, v142);
    int16x8_t v146 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v112, vclsq_s16(v145)), (int8x16_t)vceqzq_s16(v145));
    int16x8_t v147 = vpmaxq_s16(v146, v146);
    int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v500, (int16x8_t)vqtbl1q_s8(v500, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v477 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v498, (int16x8_t)vqtbl1q_s8(v498, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v499, (int16x8_t)vqtbl1q_s8(v499, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v501, (int16x8_t)vqtbl1q_s8(v501, (int8x16_t)xmmword_242EA7910)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
    int16x8_t v148 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v477, (int16x8_t)v473), (int16x8_t)v475), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v149 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v477, (int16x8_t)v473), (int16x8_t)v475), (int16x8_t)v471), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v150 = vpmaxq_s16(v148, v148);
    int8x16_t v151 = (int8x16_t)vpminq_s16(v149, v149);
    int16x8_t v152 = vmaxq_s16(v143, v150);
    int8x16_t v153 = (int8x16_t)vminq_s16(v144, (int16x8_t)v151);
    int16x8_t v154 = vzip1q_s16(v150, (int16x8_t)v151);
    v151.i64[0] = 0x10001000100010;
    v151.i64[1] = 0x10001000100010;
    int16x8_t v155 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v151, vclsq_s16(v154)), (int8x16_t)vceqzq_s16(v154));
    int16x8_t v156 = vpmaxq_s16(v155, v155);
    int8x16_t v157 = (int8x16_t)vmaxq_s16(vmaxq_s16(v126, v138), vmaxq_s16(v147, v156));
    int8x16_t v461 = v153;
    int8x16_t v462 = (int8x16_t)v152;
    int16x8_t v452 = vclzq_s16(vsubq_s16(v152, (int16x8_t)v153));
    int8x16_t v158 = (int8x16_t)vsubq_s16((int16x8_t)v151, v452);
    v153.i64[0] = 0x10001000100010;
    v153.i64[1] = 0x10001000100010;
    int8x16_t v159 = (int8x16_t)vcgtq_s16((int16x8_t)v157, (int16x8_t)v158);
    int8x16_t v160 = vbslq_s8(v159, v158, v157);
    v158.i64[0] = 0x3000300030003;
    v158.i64[1] = 0x3000300030003;
    int16x8_t v161 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v126), (int16x8_t)v158), (int16x8_t)0);
    int16x8_t v162 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v138), (int16x8_t)v158), (int16x8_t)0);
    int16x8_t v163 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v147), (int16x8_t)v158), (int16x8_t)0);
    v164.i64[0] = 0x3000300030003;
    v164.i64[1] = 0x3000300030003;
    int16x8_t v165 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v160, v156), (int16x8_t)v158), (int16x8_t)0);
    v151.i64[0] = 0x4000400040004;
    v151.i64[1] = 0x4000400040004;
    int8x16_t v166 = vbicq_s8(v151, (int8x16_t)vceqq_s16(vaddq_s16(v165, v163), vnegq_s16(vaddq_s16(v161, v162))));
    v151.i64[0] = 0x18001800180018;
    v151.i64[1] = 0x18001800180018;
    int8x16_t v167 = vbslq_s8(v159, v151, v153);
    int8x16_t v454 = (int8x16_t)vsubq_s16((int16x8_t)v160, v162);
    int8x16_t v455 = (int8x16_t)vsubq_s16((int16x8_t)v160, v163);
    int8x16_t v456 = (int8x16_t)vsubq_s16((int16x8_t)v160, v165);
    v163.i64[0] = 0x7000700070007;
    v163.i64[1] = 0x7000700070007;
    int8x16_t v453 = (int8x16_t)vsubq_s16((int16x8_t)v160, v161);
    v151.i64[0] = 0x8000800080008;
    v151.i64[1] = 0x8000800080008;
    int16x8_t v168 = (int16x8_t)vandq_s8(v479, v151);
    int16x8_t v169 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v151);
    v152.i64[0] = 0x2000200020002;
    v152.i64[1] = 0x2000200020002;
    int16x8_t v170 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v481, v164), v152), v153);
    int16x8_t v172 = v507;
    int8x16_t v171 = v508;
    int16x8_t v174 = v504;
    int16x8_t v173 = v505;
    int16x8_t v175 = v506;
    int8x16_t v176 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v508, (int8x16_t)vceqzq_s16(v168)), v169), v170), v504, v163), vshlq_n_s16(vaddq_s16(vaddq_s16(v506, v505), v507), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v160, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v167 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v166, (int16x8_t)v166)), (int16x8_t)v453, v163), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v455, (int16x8_t)v454), (int16x8_t)v456), 3uLL))).i64[0],
                        0);
    int v177 = (unsigned __int16)vaddvq_s16((int16x8_t)v176);
    BOOL v179 = a5 < 4 || a6 < 2;
    if (v177)
    {
      v180.i64[0] = 0x3000300030003;
      v180.i64[1] = 0x3000300030003;
      int8x16_t v181 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v160), v180), v167), v166);
      v182.i64[0] = 0xF000F000F000FLL;
      v182.i64[1] = 0xF000F000F000FLL;
      int8x16_t v486 = vbslq_s8(v176, v457, v486);
      int8x16_t v487 = vbslq_s8(v176, v458, v487);
      v180.i64[0] = -1;
      v180.i64[1] = -1;
      int8x16_t v488 = vbslq_s8(v176, v460, v488);
      int8x16_t v489 = vbslq_s8(v176, v459, v489);
      int8x16_t v490 = vbslq_s8(v176, v466, v490);
      int8x16_t v491 = vbslq_s8(v176, v464, v491);
      int8x16_t v492 = vbslq_s8(v176, v465, v492);
      int8x16_t v493 = vbslq_s8(v176, v463, v493);
      int8x16_t v494 = vbslq_s8(v176, v470, v494);
      int8x16_t v495 = vbslq_s8(v176, v468, v495);
      int8x16_t v496 = vbslq_s8(v176, v469, v496);
      int8x16_t v497 = vbslq_s8(v176, v467, v497);
      int8x16_t v498 = vbslq_s8(v176, v477, v498);
      int8x16_t v499 = vbslq_s8(v176, v473, v499);
      int8x16_t v500 = vbslq_s8(v176, v475, v500);
      int8x16_t v501 = vbslq_s8(v176, v471, v501);
      int16x8_t v174 = (int16x8_t)vbslq_s8(v176, v453, (int8x16_t)v504);
      int16x8_t v173 = (int16x8_t)vbslq_s8(v176, v454, (int8x16_t)v505);
      int16x8_t v504 = v174;
      int16x8_t v505 = v173;
      int16x8_t v175 = (int16x8_t)vbslq_s8(v176, v455, (int8x16_t)v506);
      int16x8_t v172 = (int16x8_t)vbslq_s8(v176, v456, (int8x16_t)v507);
      int16x8_t v506 = v175;
      int16x8_t v507 = v172;
      int8x16_t v510 = vbslq_s8(v176, v462, v510);
      int8x16_t v511 = vbslq_s8(v176, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v180, vsubq_s16(v182, v452)), (int16x8_t)v461), v159), v511);
      int8x16_t v171 = vbslq_s8(v176, v160, v508);
      int8x16_t v508 = v171;
      int8x16_t v509 = vbslq_s8(v176, v461, v509);
      int8x16_t v129 = vbslq_s8(v176, v181, v503);
      int8x16_t v502 = vbslq_s8(v176, (int8x16_t)vsubq_s16((int16x8_t)v502, (int16x8_t)vqtbl1q_s8(v502, (int8x16_t)xmmword_242EA7910)), v502);
      int8x16_t v503 = v129;
    }
    if (!v179)
    {
      int16x8_t v183 = (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v184 = vsubq_s16((int16x8_t)v472.val[0], (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA7710));
      int16x8_t v185 = vsubq_s16((int16x8_t)v472.val[2], v183);
      int16x8_t v186 = vsubq_s16((int16x8_t)v472.val[3], v183);
      uint64_t v187 = v484.i64[0];
      uint64_t v188 = v472.val[3].i64[1];
      int16x8_t v189 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7760);
      int16x8_t v190 = vsubq_s16(v36, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v191 = vsubq_s16(v37, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v192 = vsubq_s16(v38, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v36.i8, (int8x16_t)xmmword_242EA77C0));
      uint64_t v193 = v451.i64[0];
      uint64_t v194 = v472.val[3].i64[1];
      int16x8_t v195 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v196 = vsubq_s16(v44, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v197 = vsubq_s16(v45, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v198 = vsubq_s16(v46, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v44.i8, (int8x16_t)xmmword_242EA7710));
      uint64_t v199 = v450.i64[0];
      uint64_t v200 = v472.val[3].i64[1];
      int16x8_t v201 = vsubq_s16(v52, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v202 = vsubq_s16(v53, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7780));
      int16x8_t v203 = vsubq_s16(v54, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7710));
      v204.i64[1] = v184.i64[1];
      v204.i64[0] = v186.i64[1];
      int16x8_t v205 = vsubq_s16(v450, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v52.i8, (int8x16_t)xmmword_242EA7720));
      v186.i64[1] = v184.i64[0];
      int16x8_t v206 = vshlq_s16(v190, (int16x8_t)xmmword_242EA7970);
      int16x8_t v207 = vshlq_s16(v191, (int16x8_t)xmmword_242EA7970);
      int16x8_t v208 = vshlq_s16(v197, (int16x8_t)xmmword_242EA7970);
      int16x8_t v209 = vshlq_s16(vshlq_s16(v204, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v210 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16((int16x8_t)v472.val[1], (int16x8_t)vqtbl4q_s8(v472, (int8x16_t)xmmword_242EA7720)), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int16x8_t v211 = vshlq_s16(vshlq_s16(v185, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v212 = (int8x16_t)vshlq_s16(vshlq_s16(v186, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int16x8_t v213 = vshlq_s16(v206, (int16x8_t)xmmword_242EA7980);
      int8x16_t v214 = (int8x16_t)vshlq_s16(v207, (int16x8_t)xmmword_242EA7980);
      int8x16_t v215 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v484, v189), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v216 = (int8x16_t)vshlq_s16(vshlq_s16(v196, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v217 = (int8x16_t)vshlq_s16(v208, (int16x8_t)xmmword_242EA7980);
      int8x16_t v218 = (int8x16_t)vshlq_s16(vshlq_s16(v198, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v219 = (int8x16_t)vshlq_s16(vshlq_s16(vsubq_s16(v451, v195), (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v220 = (int8x16_t)vshlq_s16(vshlq_s16(v201, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v221 = (int8x16_t)vshlq_s16(vshlq_s16(v202, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v222 = (int8x16_t)vshlq_s16(vshlq_s16(v203, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v223 = (int8x16_t)vshlq_s16(vshlq_s16(v205, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v485 = (int8x16_t)v209;
      int8x16_t v482 = (int8x16_t)v211;
      int16x8_t v224 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v209, (int16x8_t)v210), v211), (int16x8_t)v212), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v225 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v209, (int16x8_t)v210), v211), (int16x8_t)v212), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v226 = vpmaxq_s16(v224, v224);
      int16x8_t v227 = vpminq_s16(v225, v225);
      v205.i64[0] = 0x8000800080008000;
      v205.i64[1] = 0x8000800080008000;
      int16x8_t v228 = vmaxq_s16(v226, v205);
      v211.i64[0] = 0x8000800080008000;
      v211.i64[1] = 0x8000800080008000;
      int16x8_t v229 = vminq_s16(v227, v211);
      int16x8_t v230 = vzip1q_s16(v226, v227);
      v231.i64[0] = 0x10001000100010;
      v231.i64[1] = 0x10001000100010;
      int16x8_t v232 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v230)), (int8x16_t)vceqzq_s16(v230));
      int16x8_t v233 = vpmaxq_s16(v232, v232);
      int8x16_t v478 = (int8x16_t)vshlq_s16(vshlq_s16(v192, (int16x8_t)xmmword_242EA7970), (int16x8_t)xmmword_242EA7980);
      int8x16_t v480 = (int8x16_t)v213;
      int16x8_t v234 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v213, (int16x8_t)v214), (int16x8_t)v478), (int16x8_t)v215), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v213, (int16x8_t)v214), (int16x8_t)v478), (int16x8_t)v215), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = vpmaxq_s16(v234, v234);
      int16x8_t v237 = vpminq_s16(v235, v235);
      int16x8_t v238 = vmaxq_s16(v228, v236);
      int16x8_t v239 = vminq_s16(v229, v237);
      int16x8_t v240 = vzip1q_s16(v236, v237);
      int16x8_t v241 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v240)), (int8x16_t)vceqzq_s16(v240));
      int16x8_t v242 = vpmaxq_s16(v241, v241);
      int16x8_t v243 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v216, (int16x8_t)v217), (int16x8_t)v218), (int16x8_t)v219), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v244 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v216, (int16x8_t)v217), (int16x8_t)v218), (int16x8_t)v219), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v245 = vpmaxq_s16(v243, v243);
      int16x8_t v246 = vpminq_s16(v244, v244);
      int16x8_t v247 = vmaxq_s16(v238, v245);
      int16x8_t v248 = vminq_s16(v239, v246);
      int16x8_t v249 = vzip1q_s16(v245, v246);
      int16x8_t v250 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v249)), (int8x16_t)vceqzq_s16(v249));
      int16x8_t v251 = vpmaxq_s16(v250, v250);
      int16x8_t v252 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v220, (int16x8_t)v221), (int16x8_t)v222), (int16x8_t)v223), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v253 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v220, (int16x8_t)v221), (int16x8_t)v222), (int16x8_t)v223), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v254 = vpmaxq_s16(v252, v252);
      int16x8_t v255 = vpminq_s16(v253, v253);
      int16x8_t v256 = vmaxq_s16(v247, v254);
      int8x16_t v257 = (int8x16_t)vminq_s16(v248, v255);
      int16x8_t v258 = vzip1q_s16(v254, v255);
      int16x8_t v259 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v231, vclsq_s16(v258)), (int8x16_t)vceqzq_s16(v258));
      int16x8_t v260 = vpmaxq_s16(v259, v259);
      int8x16_t v261 = (int8x16_t)vmaxq_s16(vmaxq_s16(v233, v242), vmaxq_s16(v251, v260));
      int8x16_t v483 = (int8x16_t)v256;
      int16x8_t v262 = vclzq_s16(vsubq_s16(v256, (int16x8_t)v257));
      int8x16_t v263 = (int8x16_t)vsubq_s16(v231, v262);
      int8x16_t v264 = (int8x16_t)vcgtq_s16((int16x8_t)v261, (int16x8_t)v263);
      int8x16_t v265 = vbslq_s8(v264, v263, v261);
      v261.i64[0] = 0x3000300030003;
      v261.i64[1] = 0x3000300030003;
      int16x8_t v266 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v233), (int16x8_t)v261), (int16x8_t)0);
      int8x16_t v267 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v242), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v268 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v251), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v269 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v260), (int16x8_t)v261), (int16x8_t)0);
      int8x16_t v270 = (int8x16_t)vsubq_s16((int16x8_t)v265, v266);
      int16x8_t v271 = vsubq_s16((int16x8_t)v265, (int16x8_t)v267);
      int8x16_t v272 = (int8x16_t)vsubq_s16((int16x8_t)v265, v268);
      int16x8_t v273 = vsubq_s16((int16x8_t)v265, v269);
      int8x16_t v274 = (int8x16_t)vceqq_s16(vaddq_s16(v269, v268), vnegq_s16(vaddq_s16(v266, (int16x8_t)v267)));
      v267.i64[0] = 0x4000400040004;
      v267.i64[1] = 0x4000400040004;
      int8x16_t v275 = vbicq_s8(v267, v274);
      v269.i64[0] = 0x7000700070007;
      v269.i64[1] = 0x7000700070007;
      int8x16_t v474 = (int8x16_t)v273;
      int8x16_t v476 = (int8x16_t)v271;
      int16x8_t v276 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v263, v264), vaddq_s16((int16x8_t)v275, (int16x8_t)v275)), (int16x8_t)v270, v269), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v272, v271), v273), 3uLL));
      int8x16_t v129 = v503;
      int8x16_t v277 = (int8x16_t)v504;
      v278.i64[0] = 0x2000200020002;
      v278.i64[1] = 0x2000200020002;
      int16x8_t v279 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v503, v261), (int16x8_t)v278), (int8x16_t)v231);
      v261.i64[0] = 0x8000800080008;
      v261.i64[1] = 0x8000800080008;
      int16x8_t v172 = v507;
      int8x16_t v171 = v508;
      int16x8_t v173 = v505;
      int16x8_t v175 = v506;
      int8x16_t v280 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v508, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v503, v261))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v261)), v279), v504, v269), vshlq_n_s16(vaddq_s16(vaddq_s16(v506, v505), v507), 3uLL)), v276).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v280))
      {
        v281.i64[0] = 0x9000900090009;
        v281.i64[1] = 0x9000900090009;
        int8x16_t v282 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v265), v278), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v264, v281), (int16x8_t)vmvnq_s8(v264)));
        v281.i64[0] = -1;
        v281.i64[1] = -1;
        v283.i64[0] = 0xF000F000F000FLL;
        v283.i64[1] = 0xF000F000F000FLL;
        int8x16_t v277 = vbslq_s8(v280, v270, (int8x16_t)v504);
        int16x8_t v173 = (int16x8_t)vbslq_s8(v280, v476, (int8x16_t)v505);
        int16x8_t v175 = (int16x8_t)vbslq_s8(v280, v272, (int8x16_t)v506);
        int16x8_t v172 = (int16x8_t)vbslq_s8(v280, v474, (int8x16_t)v507);
        int8x16_t v171 = vbslq_s8(v280, v265, v508);
        int8x16_t v129 = vbslq_s8(v280, vorrq_s8(v282, v275), v503);
        int8x16_t v501 = vbslq_s8(v280, v223, v501);
        int8x16_t v502 = vbslq_s8(v280, vextq_s8(v472.val[3], v472.val[3], 8uLL), v502);
        int8x16_t v486 = vbslq_s8(v280, v485, v486);
        int8x16_t v487 = vbslq_s8(v280, v210, v487);
        int8x16_t v488 = vbslq_s8(v280, v482, v488);
        int8x16_t v489 = vbslq_s8(v280, v212, v489);
        int8x16_t v490 = vbslq_s8(v280, v480, v490);
        int8x16_t v491 = vbslq_s8(v280, v214, v491);
        int8x16_t v492 = vbslq_s8(v280, v478, v492);
        int8x16_t v493 = vbslq_s8(v280, v215, v493);
        int8x16_t v494 = vbslq_s8(v280, v216, v494);
        int8x16_t v495 = vbslq_s8(v280, v217, v495);
        int8x16_t v496 = vbslq_s8(v280, v218, v496);
        int8x16_t v497 = vbslq_s8(v280, v219, v497);
        int8x16_t v498 = vbslq_s8(v280, v220, v498);
        int8x16_t v499 = vbslq_s8(v280, v221, v499);
        int8x16_t v500 = vbslq_s8(v280, v222, v500);
        int8x16_t v509 = vbslq_s8(v280, v257, v509);
        int8x16_t v510 = vbslq_s8(v280, v483, v510);
        int8x16_t v511 = vbslq_s8(v280, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v281, vsubq_s16(v283, v262)), (int16x8_t)v257), v264), v511);
        int16x8_t v504 = (int16x8_t)v277;
        int16x8_t v505 = v173;
        int16x8_t v506 = v175;
        int16x8_t v507 = v172;
        int8x16_t v508 = v171;
        int8x16_t v503 = v129;
      }
      int16x8_t v174 = (int16x8_t)v277;
    }
    int16x8_t v284 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v174));
    int8x16_t v486 = (int8x16_t)vaddq_s16(v284, (int16x8_t)v486);
    int8x16_t v487 = (int8x16_t)vaddq_s16((int16x8_t)v487, v284);
    int8x16_t v488 = (int8x16_t)vaddq_s16((int16x8_t)v488, v284);
    int8x16_t v489 = (int8x16_t)vaddq_s16((int16x8_t)v489, v284);
    int16x8_t v285 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v173));
    int8x16_t v490 = (int8x16_t)vaddq_s16((int16x8_t)v490, v285);
    int8x16_t v491 = (int8x16_t)vaddq_s16((int16x8_t)v491, v285);
    int8x16_t v492 = (int8x16_t)vaddq_s16((int16x8_t)v492, v285);
    int8x16_t v493 = (int8x16_t)vaddq_s16((int16x8_t)v493, v285);
    int16x8_t v286 = (int16x8_t)vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v175));
    int8x16_t v494 = (int8x16_t)vaddq_s16((int16x8_t)v494, v286);
    int8x16_t v495 = (int8x16_t)vaddq_s16((int16x8_t)v495, v286);
    int8x16_t v496 = (int8x16_t)vaddq_s16((int16x8_t)v496, v286);
    int8x16_t v497 = (int8x16_t)vaddq_s16((int16x8_t)v497, v286);
    int8x16_t v287 = vandq_s8(v511, (int8x16_t)vceqq_s16((int16x8_t)v171, v172));
    int8x16_t v498 = (int8x16_t)vaddq_s16((int16x8_t)v498, (int16x8_t)v287);
    int8x16_t v499 = (int8x16_t)vaddq_s16((int16x8_t)v499, (int16x8_t)v287);
    int8x16_t v500 = (int8x16_t)vaddq_s16((int16x8_t)v500, (int16x8_t)v287);
    int8x16_t v501 = (int8x16_t)vaddq_s16((int16x8_t)v501, (int16x8_t)v287);
    v287.i64[0] = 0x8000800080008;
    v287.i64[1] = 0x8000800080008;
    v288.i64[0] = 0x3000300030003;
    v288.i64[1] = 0x3000300030003;
    v289.i64[0] = 0x2000200020002;
    v289.i64[1] = 0x2000200020002;
    int8x16_t v290 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v129, v288), v289);
    v289.i64[0] = 0x10001000100010;
    v289.i64[1] = 0x10001000100010;
    int16x8_t v291 = (int16x8_t)vandq_s8(v290, (int8x16_t)v289);
    v289.i64[0] = 0x7000700070007;
    v289.i64[1] = 0x7000700070007;
    int16x8_t v292 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v171, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v129, v287))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v129, (int16x8_t)v129), v287)), v291), v174, v289), vshlq_n_s16(vaddq_s16(v175, vaddq_s16(v173, v172)), 3uLL));
    int16x8_t v293 = vpaddq_s16(v292, v292);
    if ((unint64_t)(vpaddq_s16(v293, v293).i16[0] - 449) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (int8x16_t *)a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      int32x2_t v294 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v295 = 8 * (a1 & 7);
      if (v295) {
        uint64_t v296 = *v294 & ~(-1 << v295);
      }
      else {
        uint64_t v296 = 0;
      }
      *a2 = 0;
      uint64_t v298 = v502.i64[0];
      unint64_t v299 = (unint64_t)((v171.i8[0] - 1) & 0xF) << 19;
      if (!v171.i16[0]) {
        unint64_t v299 = 0;
      }
      v300.i32[0] = v171.u16[3];
      v300.i32[1] = v171.u16[2];
      v301.i32[0] = v129.u16[1];
      v301.i32[1] = v129.u16[2];
      int8x8_t v302 = vand_s8((int8x8_t)vshl_u32(v301, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v303 = v302.i32[1];
      __int32 v304 = v302.i32[0] | v129.i8[0] & 0x1F;
      unint64_t v305 = (unint64_t)((v171.i8[2] - 1) & 0xF) << 23;
      if (!v171.i16[1]) {
        unint64_t v305 = 0;
      }
      int32x2_t v306 = vceqz_s32((int32x2_t)vand_s8((int8x8_t)v300, (int8x8_t)0xFFFF0000FFFFLL));
      v307.i64[0] = v306.i32[0];
      v307.i64[1] = v306.i32[1];
      int8x16_t v308 = (int8x16_t)v307;
      v307.i64[0] = vbic_s8((int8x8_t)0x100000001, (int8x8_t)v300).u32[0];
      v307.i64[1] = vand_s8((int8x8_t)vadd_s32(v300, (int32x2_t)0xF0000000FLL), (int8x8_t)0xF0000000FLL).u32[1];
      int8x16_t v309 = vbicq_s8((int8x16_t)vshlq_u64(v307, (uint64x2_t)xmmword_242EA7990), v308);
      unint64_t v310 = vorrq_s8(v309, (int8x16_t)vdupq_laneq_s64((int64x2_t)v309, 1)).u64[0] | v299 | v305 | v304 | v303 | ((unint64_t)(v129.i8[6] & 0xF) << 15);
      unint64_t v311 = (v310 << v295) | v296;
      if (v295 >= 0x20)
      {
        *int32x2_t v294 = v311;
        unint64_t v311 = v310 >> (-8 * (a1 & 7u));
      }
      unint64_t v312 = v298 & 0x3FF | ((unint64_t)(WORD1(v298) & 0x3FF) << 10);
      v313.i32[0] = WORD2(v298);
      v313.i32[1] = HIWORD(v298);
      int8x8_t v314 = vand_s8(v313, (int8x8_t)0x3000003FFLL);
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      uint64x2_t v316 = vshlq_u64(v315, (uint64x2_t)xmmword_242EA79A0);
      unint64_t v317 = v312 | v316.i64[0] | v316.i64[1];
      unint64_t v318 = (v295 + 32) & 0x38;
      unint64_t v319 = v311 | (v317 << v318);
      if (v318 >= 0x20)
      {
        *(void *)((char *)v294 + (((v295 + 32) >> 3) & 8)) = v319;
        unint64_t v319 = v317 >> -(char)v318;
      }
      int8x16_t v320 = (int8x16_t)vsubq_s16((int16x8_t)v508, v504);
      int8x16_t v321 = (int8x16_t)vsubq_s16((int16x8_t)v508, v505);
      int8x16_t v322 = (int8x16_t)vsubq_s16((int16x8_t)v508, v506);
      int8x16_t v323 = (int8x16_t)vsubq_s16((int16x8_t)v508, v507);
      *(uint8x8_t *)v320.i8 = vqmovn_u16((uint16x8_t)v320);
      *(uint8x8_t *)v321.i8 = vqmovn_u16((uint16x8_t)v321);
      *(uint8x8_t *)v322.i8 = vqmovn_u16((uint16x8_t)v322);
      *(uint8x8_t *)v323.i8 = vqmovn_u16((uint16x8_t)v323);
      int16x8_t v324 = (int16x8_t)vtrn1q_s8(v320, v321);
      int16x8_t v325 = (int16x8_t)vtrn2q_s8(v320, v321);
      int8x16_t v326 = vtrn1q_s8(v322, v323);
      int16x8_t v327 = (int16x8_t)vtrn2q_s8(v322, v323);
      int8x16_t v328 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v324, (int16x8_t)v326), (int32x4_t)vzip1q_s16(v325, v327)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v324, (int16x8_t)v326), (int32x4_t)vtrn2q_s16(v325, v327)));
      v326.i64[0] = 0x202020202020202;
      v326.i64[1] = 0x202020202020202;
      int8x16_t v329 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v503.i8, (int16x4_t)0x4000400040004)), v326);
      v326.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v326.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v322.i64[0] = -1;
      v322.i64[1] = -1;
      uint8x16_t v330 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v322, (uint8x16_t)vorrq_s8(v329, v326)), v328);
      int16x8_t v331 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v329.i8);
      int16x8_t v332 = (int16x8_t)vmovl_high_u8((uint8x16_t)v329);
      uint16x8_t v333 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v330.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v331)), (int16x8_t)vshlq_u16(vmovl_high_u8(v330), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v332)));
      uint16x8_t v334 = (uint16x8_t)vpaddq_s16(v331, v332);
      int32x4_t v335 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v334.i8);
      int32x4_t v336 = (int32x4_t)vmovl_high_u16(v334);
      int32x4_t v337 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v333.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v335)), (int32x4_t)vshlq_u32(vmovl_high_u16(v333), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v336)));
      int32x4_t v338 = vpaddq_s32(v335, v336);
      v339.i64[0] = v337.u32[0];
      v339.i64[1] = v337.u32[1];
      uint64x2_t v340 = (uint64x2_t)v339;
      v339.i64[0] = v337.u32[2];
      v339.i64[1] = v337.u32[3];
      uint64x2_t v341 = (uint64x2_t)v339;
      v339.i64[0] = v338.u32[0];
      v339.i64[1] = v338.u32[1];
      int64x2_t v342 = v339;
      v339.i64[0] = v338.u32[2];
      v339.i64[1] = v338.u32[3];
      int64x2_t v343 = vpaddq_s64((int64x2_t)vshlq_u64(v340, (uint64x2_t)vzip1q_s64((int64x2_t)0, v342)), (int64x2_t)vshlq_u64(v341, (uint64x2_t)vzip1q_s64((int64x2_t)0, v339)));
      int64x2_t v344 = vpaddq_s64(v342, v339);
      unint64_t v345 = (v343.i64[0] << v295) | v319;
      if (v344.i64[0] + v295 >= 0x40)
      {
        v294[1] = v345;
        unint64_t v345 = (unint64_t)v343.i64[0] >> (-8 * (a1 & 7u));
        if (!v295) {
          unint64_t v345 = 0;
        }
      }
      unint64_t v346 = v344.i64[0] + (v295 | 0x40);
      unint64_t v347 = v345 | (v343.i64[1] << v346);
      if ((v346 & 0x3F) + v344.i64[1] >= 0x40)
      {
        *(void *)((char *)v294 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v343.i64[1] >> -(v346 & 0x3F);
        if ((v346 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346 + v344.i64[1];
      v349.i64[0] = 0x8000800080008;
      v349.i64[1] = 0x8000800080008;
      v350.i64[0] = -1;
      v350.i64[1] = -1;
      int16x8_t v351 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v503, v349), (int8x16_t)0, 8uLL), v508);
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v353 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v350, (uint16x8_t)vaddq_s16(v351, v352)), v511);
      int32x4_t v354 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v355 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)), (int32x4_t)vmovl_high_u16(v353));
      int32x4_t v356 = vpaddq_s32(v354, (int32x4_t)vmovl_high_u16((uint16x8_t)v351));
      v357.i64[0] = v355.u32[0];
      v357.i64[1] = v355.u32[1];
      uint64x2_t v358 = (uint64x2_t)v357;
      v357.i64[0] = v355.u32[2];
      v357.i64[1] = v355.u32[3];
      uint64x2_t v359 = (uint64x2_t)v357;
      v357.i64[0] = v356.u32[0];
      v357.i64[1] = v356.u32[1];
      int64x2_t v360 = v357;
      v357.i64[0] = v356.u32[2];
      v357.i64[1] = v356.u32[3];
      int64x2_t v361 = vpaddq_s64((int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v360)), (int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v357)));
      int64x2_t v362 = vpaddq_s64(v360, v357);
      unint64_t v363 = (v361.i64[0] << v348) | v347;
      if (v362.i64[0] + (v348 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v294 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v363;
        unint64_t v363 = (unint64_t)v361.i64[0] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v363 = 0;
        }
      }
      unint64_t v364 = v362.i64[0] + v348;
      unint64_t v365 = v363 | (v361.i64[1] << v364);
      if ((v364 & 0x3F) + v362.i64[1] >= 0x40)
      {
        *(void *)((char *)v294 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v361.i64[1] >> -(v364 & 0x3F);
        if ((v364 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364 + v362.i64[1];
      int16x8_t v367 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v504, 8uLL);
      v368.i64[0] = 0xF000F000F000FLL;
      v368.i64[1] = 0xF000F000F000FLL;
      v369.i64[0] = -1;
      v369.i64[1] = -1;
      uint16x8_t v370 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v369, (uint16x8_t)vaddq_s16(v367, v368)), v486);
      int32x4_t v371 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v367.i8);
      int32x4_t v372 = (int32x4_t)vmovl_high_u16((uint16x8_t)v367);
      int32x4_t v373 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v370.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v370), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v372)));
      int32x4_t v374 = vpaddq_s32(v371, v372);
      v375.i64[0] = v373.u32[0];
      v375.i64[1] = v373.u32[1];
      uint64x2_t v376 = (uint64x2_t)v375;
      v375.i64[0] = v373.u32[2];
      v375.i64[1] = v373.u32[3];
      uint64x2_t v377 = (uint64x2_t)v375;
      v375.i64[0] = v374.u32[0];
      v375.i64[1] = v374.u32[1];
      int64x2_t v378 = v375;
      v375.i64[0] = v374.u32[2];
      v375.i64[1] = v374.u32[3];
      int64x2_t v379 = vpaddq_s64((int64x2_t)vshlq_u64(v376, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)), (int64x2_t)vshlq_u64(v377, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)));
      int64x2_t v380 = vpaddq_s64(v378, v375);
      unint64_t v381 = (v379.i64[0] << v366) | v365;
      if (v380.i64[0] + (v366 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v294 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v381;
        if ((v366 & 0x3F) != 0) {
          unint64_t v381 = (unint64_t)v379.i64[0] >> -(v366 & 0x3F);
        }
        else {
          unint64_t v381 = 0;
        }
      }
      unint64_t v382 = v380.i64[0] + v366;
      uint64_t v383 = (v380.i64[0] + v366) & 0x3F;
      unint64_t v384 = v381 | (v379.i64[1] << v382);
      if ((unint64_t)(v383 + v380.i64[1]) >= 0x40)
      {
        *(void *)((char *)v294 + ((v382 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
        unint64_t v384 = (unint64_t)v379.i64[1] >> -(char)v383;
        if (!v383) {
          unint64_t v384 = 0;
        }
      }
      unint64_t v385 = v382 + v380.i64[1];
      v386.i64[0] = 0xF000F000F000FLL;
      v386.i64[1] = 0xF000F000F000FLL;
      v387.i64[0] = -1;
      v387.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v387, (uint16x8_t)vaddq_s16(v504, v386)), *(int8x16_t *)((char *)&v486 + i));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v504.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v504);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v385) | v384;
        if (v399.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v385;
        unint64_t v384 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v401 + v399.i64[1];
      }
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v505, v403)), *(int8x16_t *)((char *)&v490 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v505.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v505);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v385) | v384;
        if (v415.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v385;
        unint64_t v384 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      uint64_t v418 = 0;
      v419.i64[0] = 0xF000F000F000FLL;
      v419.i64[1] = 0xF000F000F000FLL;
      v420.i64[0] = -1;
      v420.i64[1] = -1;
      do
      {
        uint16x8_t v421 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v420, (uint16x8_t)vaddq_s16(v506, v419)), *(int8x16_t *)((char *)&v494 + v418));
        int32x4_t v422 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v506.i8);
        int32x4_t v423 = (int32x4_t)vmovl_high_u16((uint16x8_t)v506);
        int32x4_t v424 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v421.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v422)), (int32x4_t)vshlq_u32(vmovl_high_u16(v421), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v423)));
        int32x4_t v425 = vpaddq_s32(v422, v423);
        v426.i64[0] = v424.u32[0];
        v426.i64[1] = v424.u32[1];
        uint64x2_t v427 = (uint64x2_t)v426;
        v426.i64[0] = v424.u32[2];
        v426.i64[1] = v424.u32[3];
        uint64x2_t v428 = (uint64x2_t)v426;
        v426.i64[0] = v425.u32[0];
        v426.i64[1] = v425.u32[1];
        int64x2_t v429 = v426;
        v426.i64[0] = v425.u32[2];
        v426.i64[1] = v425.u32[3];
        int64x2_t v430 = vpaddq_s64((int64x2_t)vshlq_u64(v427, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)), (int64x2_t)vshlq_u64(v428, (uint64x2_t)vzip1q_s64((int64x2_t)0, v426)));
        int64x2_t v431 = vpaddq_s64(v429, v426);
        unint64_t v432 = (v430.i64[0] << v385) | v384;
        if (v431.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v432;
          unint64_t v432 = (unint64_t)v430.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v432 = 0;
          }
        }
        unint64_t v433 = v431.i64[0] + v385;
        unint64_t v384 = v432 | (v430.i64[1] << v433);
        if ((v433 & 0x3F) + v431.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v433 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v430.i64[1] >> -(v433 & 0x3F);
          if ((v433 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v433 + v431.i64[1];
        v418 += 16;
      }
      while (v418 != 64);
      uint64_t v434 = 0;
      v435.i64[0] = 0xF000F000F000FLL;
      v435.i64[1] = 0xF000F000F000FLL;
      v436.i64[0] = -1;
      v436.i64[1] = -1;
      do
      {
        uint16x8_t v437 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v436, (uint16x8_t)vaddq_s16(v507, v435)), *(int8x16_t *)((char *)&v498 + v434));
        int32x4_t v438 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v507.i8);
        int32x4_t v439 = (int32x4_t)vmovl_high_u16((uint16x8_t)v507);
        int32x4_t v440 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v437.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v438)), (int32x4_t)vshlq_u32(vmovl_high_u16(v437), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v439)));
        int32x4_t v441 = vpaddq_s32(v438, v439);
        v442.i64[0] = v440.u32[0];
        v442.i64[1] = v440.u32[1];
        uint64x2_t v443 = (uint64x2_t)v442;
        v442.i64[0] = v440.u32[2];
        v442.i64[1] = v440.u32[3];
        uint64x2_t v444 = (uint64x2_t)v442;
        v442.i64[0] = v441.u32[0];
        v442.i64[1] = v441.u32[1];
        int64x2_t v445 = v442;
        v442.i64[0] = v441.u32[2];
        v442.i64[1] = v441.u32[3];
        int64x2_t v446 = vpaddq_s64((int64x2_t)vshlq_u64(v443, (uint64x2_t)vzip1q_s64((int64x2_t)0, v445)), (int64x2_t)vshlq_u64(v444, (uint64x2_t)vzip1q_s64((int64x2_t)0, v442)));
        int64x2_t v447 = vpaddq_s64(v445, v442);
        unint64_t v448 = (v446.i64[0] << v385) | v384;
        if (v447.i64[0] + (v385 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v448;
          unint64_t v448 = (unint64_t)v446.i64[0] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v448 = 0;
          }
        }
        unint64_t v449 = v447.i64[0] + v385;
        unint64_t v384 = v448 | (v446.i64[1] << v449);
        if ((v449 & 0x3F) + v447.i64[1] >= 0x40)
        {
          *(void *)((char *)v294 + ((v449 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v446.i64[1] >> -(v449 & 0x3F);
          if ((v449 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v449 + v447.i64[1];
        v434 += 16;
      }
      while (v434 != 64);
      if ((v385 & 0x3F) != 0) {
        *(void *)((char *)v294 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
      }
      unint64_t result = (v385 - v295 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = a3->i32[0];
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, int8x16_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v99 = *MEMORY[0x263EF8340];
  long long v97 = 0u;
  long long v98 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v93 = 0u;
  long long v94 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  long long v89 = 0u;
  long long v90 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  uint64_t v10 = a6;
  long long v67 = 0u;
  long long v68 = 0u;
  if (a5 >= 4)
  {
    uint64_t v16 = 0;
    uint32x4_t v17 = (int64x2_t *)&v75;
    unint64_t v18 = ((unint64_t)&v67 + ((a5 << 6) & 0x3F00)) | 8;
    v19.i64[0] = 0x300000003;
    v19.i64[1] = 0x300000003;
    do
    {
      uint32x4_t v20 = v17;
      uint32x4_t v21 = a3;
      uint64_t v22 = a5 & 0xFC;
      do
      {
        int8x16_t v23 = *v21++;
        int8x16_t v24 = vandq_s8(v23, v19);
        _Q3 = vandq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v23, 0xAuLL), v19);
        uint32x4_t v26 = vshrq_n_u32((uint32x4_t)v23, 0x14uLL);
        _Q1 = (int8x16_t)vshrq_n_u32((uint32x4_t)v23, 0x1EuLL);
        int8x16_t v28 = (int8x16_t)vshll_n_s32(*(int32x2_t *)_Q3.i8, 0x20uLL);
        __asm { SHLL2           V3.2D, V3.4S, #0x20 ; ' ' }
        v33.i64[0] = v24.u32[0];
        v33.i64[1] = v24.u32[1];
        int8x16_t v34 = v33;
        v33.i64[0] = v24.u32[2];
        v33.i64[1] = v24.u32[3];
        int64x2_t v35 = (int64x2_t)vorrq_s8(_Q3, v33);
        int64x2_t v36 = (int64x2_t)vorrq_s8(v28, v34);
        int8x16_t v37 = (int8x16_t)vshll_n_s32(*(int32x2_t *)_Q1.i8, 0x20uLL);
        __asm { SHLL2           V1.2D, V1.4S, #0x20 ; ' ' }
        v33.i64[0] = v26.i32[0] & 0xFFFFF3FF;
        v33.i64[1] = v26.i32[1] & 0xFFFFF3FF;
        int8x16_t v38 = v33;
        v33.i64[0] = v26.i32[2] & 0xFFFFF3FF;
        v33.i64[1] = v26.i32[3] & 0xFFFFF3FF;
        int64x2_t v39 = (int64x2_t)vorrq_s8(_Q1, v33);
        int64x2_t v40 = (int64x2_t)vorrq_s8(v37, v38);
        v20[-8] = vzip1q_s64(v36, v40);
        v20[-4] = vzip2q_s64(v36, v40);
        *uint32x4_t v20 = vzip1q_s64(v35, v39);
        v20[4] = vzip2q_s64(v35, v39);
        v20 += 16;
        v22 -= 4;
      }
      while (v22);
      if ((a5 & 0xFC) != (unint64_t)a5)
      {
        int8x16_t v41 = (void *)v18;
        uint64_t v42 = a5 & 0xFC;
        do
        {
          unint64_t v43 = a3->u32[v42];
          *(v41 - 1) = v43 & 0x3FF | ((unint64_t)((v43 >> 10) & 0x3FF) << 32);
          void *v41 = (4 * v43) & 0x300000000 | (v43 >> 20) & 0x3FF;
          ++v42;
          v41 += 8;
        }
        while (a5 != v42);
      }
      ++v16;
      a3 = (int8x16_t *)((char *)a3 + a4);
      ++v17;
      v18 += 16;
    }
    while (v16 != a6);
  }
  else
  {
    uint32x4_t v11 = &a3->u32[2];
    uint32x4_t v12 = (uint64_t *)&v71 + 1;
    do
    {
      unint64_t v13 = *(v11 - 2);
      *(v12 - 9) = v13 & 0x3FF | ((unint64_t)((v13 >> 10) & 0x3FF) << 32);
      *(v12 - 8) = (4 * v13) & 0x300000000 | (v13 >> 20) & 0x3FF;
      if (a5 != 1)
      {
        unint64_t v14 = *(v11 - 1);
        *(v12 - 1) = v14 & 0x3FF | ((unint64_t)((v14 >> 10) & 0x3FF) << 32);
        *uint32x4_t v12 = (4 * v14) & 0x300000000 | (v14 >> 20) & 0x3FF;
        if (a5 != 2)
        {
          unint64_t v15 = *v11;
          v12[7] = v15 & 0x3FF | ((unint64_t)((v15 >> 10) & 0x3FF) << 32);
          v12[8] = (4 * v15) & 0x300000000 | (v15 >> 20) & 0x3FF;
        }
      }
      uint32x4_t v11 = (unsigned int *)((char *)v11 + a4);
      v12 += 2;
      --v10;
    }
    while (v10);
  }
  long long v59 = v67;
  long long v60 = v71;
  long long v61 = v68;
  long long v62 = v72;
  long long v63 = v75;
  long long v64 = v79;
  if (a5 >= 4) {
    unsigned int v44 = 4;
  }
  else {
    unsigned int v44 = a5;
  }
  if (a5 >= 4) {
    unsigned int v45 = a5 - 4;
  }
  else {
    unsigned int v45 = 0;
  }
  if (a6 >= 2) {
    unsigned int v46 = 2;
  }
  else {
    unsigned int v46 = a6;
  }
  long long v65 = v76;
  long long v66 = v80;
  if (a6 >= 2) {
    unsigned int v47 = a6 - 2;
  }
  else {
    unsigned int v47 = 0;
  }
  char v49 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v59, a7, v44, v46);
  long long v59 = v69;
  long long v60 = v73;
  long long v61 = v70;
  long long v62 = v74;
  long long v63 = v77;
  long long v64 = v81;
  long long v65 = v78;
  long long v66 = v82;
  if (a6 >= 4) {
    unsigned int v50 = 2;
  }
  else {
    unsigned int v50 = v47;
  }
  int v51 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v59, a7, v44, v50);
  long long v59 = v83;
  long long v60 = v87;
  long long v61 = v84;
  long long v62 = v88;
  long long v63 = v91;
  long long v64 = v95;
  if (a5 >= 8) {
    unsigned int v52 = 4;
  }
  else {
    unsigned int v52 = v45;
  }
  long long v65 = v92;
  long long v66 = v96;
  int v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v59, a7, v52, v46);
  long long v59 = v85;
  long long v60 = v89;
  long long v61 = v86;
  long long v62 = v90;
  long long v63 = v93;
  long long v64 = v97;
  long long v65 = v94;
  long long v66 = v98;
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v59, a7, v52, v50);
  if (v53) {
    char v55 = 4;
  }
  else {
    char v55 = 0;
  }
  if (v51) {
    char v56 = 2;
  }
  else {
    char v56 = 0;
  }
  if (result) {
    char v57 = -8;
  }
  else {
    char v57 = -16;
  }
  *a2 = v57 | v55 | v49 | v56;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v6 = 0;
  uint64_t v326 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v293 = v9;
  BOOL v294 = v8;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v291 = v11;
  BOOL v292 = v10;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v289 = v7;
  BOOL v290 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v288 = v13;
  unint64_t v14 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::compBits;
  int v295 = a3;
  do
  {
    uint64_t v15 = 0;
    unsigned int v18 = *v14;
    uint64_t v16 = v14 + 1;
    unsigned int v17 = v18;
    *(unsigned int *)((char *)&v322 + v6) = v18;
    switch(v18)
    {
      case 2u:
        uint64_t v15 = 5;
        break;
      case 0xAu:
        uint64_t v15 = 1;
        break;
      case 0xCu:
        uint64_t v15 = 2;
        break;
      case 0x10u:
        uint64_t v15 = 3;
        break;
      case 0x20u:
        uint64_t v15 = 4;
        break;
      default:
        break;
    }
    v311[v6 / 4] = v15;
    unsigned int v19 = 1 << (v17 - 1);
    *(_DWORD *)((char *)&v310[2] + v6) = v19;
    if (a3 == 1)
    {
      int16x8_t v29 = (_DWORD *)(a2 + v6);
      uint32x4_t v21 = &v313[v6 / 4];
      if ((*(_DWORD *)(a2 + v6) ^ v19) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *(_DWORD *)(a2 + v6) ^ v19;
      }
      *uint32x4_t v21 = v20;
      if ((v29[4] ^ v19) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v29[4] ^ v19;
      }
      v21[4] = v22;
      if ((v29[8] ^ v19) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v29[8] ^ v19;
      }
      v21[8] = v23;
      if ((v29[12] ^ v19) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v29[12] ^ v19;
      }
      v21[12] = v24;
      if ((v29[16] ^ v19) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v29[16] ^ v19;
      }
      v21[16] = v25;
      if ((v29[20] ^ v19) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v29[20] ^ v19;
      }
      v21[20] = v26;
      unsigned int v27 = v29[24] ^ v19;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[24] = v27;
      unsigned int v28 = v29[28] ^ v19;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *(_DWORD *)(a2 + v6) ^ v19;
      uint32x4_t v21 = &v313[v6 / 4];
      *uint32x4_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v6 + 16) ^ v19;
      v21[4] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v6 + 32) ^ v19;
      v21[8] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v6 + 48) ^ v19;
      v21[12] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v6 + 64) ^ v19;
      v21[16] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v6 + 80) ^ v19;
      v21[20] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v6 + 96) ^ v19;
      v21[24] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v6 + 112) ^ v19;
    }
    else
    {
      unsigned int v20 = *(_DWORD *)(a2 + v6);
      uint32x4_t v21 = &v313[v6 / 4];
      *uint32x4_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v6 + 16);
      v21[4] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v6 + 32);
      v21[8] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v6 + 48);
      v21[12] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v6 + 64);
      v21[16] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v6 + 80);
      v21[20] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v6 + 96);
      v21[24] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v6 + 112);
    }
    v21[28] = v28;
    int16x8_t v30 = &v318[v6 / 4 + 4];
    v318[v6 / 4 + 4] = v20;
    *(int *)((char *)&v319 + v6) = v20;
    v318[v6 / 4] = 0;
    if (v288)
    {
      unsigned int v31 = v20;
      if (v290) {
        goto LABEL_71;
      }
LABEL_65:
      if (v23 < v31)
      {
        v318[v6 / 4] = 2;
        *(int *)((char *)&v319 + v6) = v23;
        unsigned int v31 = v23;
      }
      if (v20 >= v23) {
        int8x16_t v33 = &v318[v6 / 4 + 4];
      }
      else {
        int8x16_t v33 = &v313[v6 / 4 + 8];
      }
      unsigned int v20 = *v33;
      *int16x8_t v30 = *v33;
      goto LABEL_71;
    }
    unsigned int v31 = v20;
    if (v22 < v20)
    {
      v318[v6 / 4] = 1;
      *(int *)((char *)&v319 + v6) = v22;
      unsigned int v31 = v22;
    }
    if (v20 >= v22) {
      int8x16_t v32 = &v318[v6 / 4 + 4];
    }
    else {
      int8x16_t v32 = &v313[v6 / 4 + 4];
    }
    unsigned int v20 = *v32;
    *int16x8_t v30 = *v32;
    if (!v290) {
      goto LABEL_65;
    }
LABEL_71:
    if (v289)
    {
      if (v291) {
        goto LABEL_73;
      }
    }
    else
    {
      if (v24 < v31)
      {
        v318[v6 / 4] = 3;
        *(int *)((char *)&v319 + v6) = v24;
        unsigned int v31 = v24;
      }
      if (v20 >= v24) {
        int64x2_t v35 = &v318[v6 / 4 + 4];
      }
      else {
        int64x2_t v35 = &v313[v6 / 4 + 12];
      }
      unsigned int v20 = *v35;
      *int16x8_t v30 = *v35;
      if (v291)
      {
LABEL_73:
        if (v293) {
          goto LABEL_74;
        }
        goto LABEL_89;
      }
    }
    if (v25 < v31)
    {
      v318[v6 / 4] = 4;
      *(int *)((char *)&v319 + v6) = v25;
      unsigned int v31 = v25;
    }
    if (v20 >= v25) {
      int64x2_t v36 = &v318[v6 / 4 + 4];
    }
    else {
      int64x2_t v36 = &v313[v6 / 4 + 16];
    }
    unsigned int v20 = *v36;
    *int16x8_t v30 = *v36;
    if (v293)
    {
LABEL_74:
      if (v292) {
        goto LABEL_75;
      }
      goto LABEL_95;
    }
LABEL_89:
    if (v26 < v31)
    {
      v318[v6 / 4] = 5;
      *(int *)((char *)&v319 + v6) = v26;
      unsigned int v31 = v26;
    }
    if (v20 >= v26) {
      int8x16_t v37 = &v318[v6 / 4 + 4];
    }
    else {
      int8x16_t v37 = &v313[v6 / 4 + 20];
    }
    unsigned int v20 = *v37;
    *int16x8_t v30 = *v37;
    if (v292)
    {
LABEL_75:
      if (v294) {
        goto LABEL_76;
      }
      goto LABEL_101;
    }
LABEL_95:
    if (v27 < v31)
    {
      v318[v6 / 4] = 6;
      *(int *)((char *)&v319 + v6) = v27;
      unsigned int v31 = v27;
    }
    if (v20 >= v27) {
      int8x16_t v38 = &v318[v6 / 4 + 4];
    }
    else {
      int8x16_t v38 = &v313[v6 / 4 + 24];
    }
    unsigned int v20 = *v38;
    *int16x8_t v30 = *v38;
    if (v294)
    {
LABEL_76:
      int8x16_t v34 = v16;
      goto LABEL_107;
    }
LABEL_101:
    if (v28 < v31)
    {
      v318[v6 / 4] = 7;
      *(int *)((char *)&v319 + v6) = v28;
      unsigned int v31 = v28;
    }
    int8x16_t v34 = v16;
    if (v20 >= v28) {
      int64x2_t v39 = &v318[v6 / 4 + 4];
    }
    else {
      int64x2_t v39 = &v313[v6 / 4 + 28];
    }
    unsigned int v20 = *v39;
    *int16x8_t v30 = *v39;
LABEL_107:
    unsigned int v40 = __clz(v20 - v31);
    unsigned int v41 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::computeDquadMode(v17, 32 - v40, v31, v20);
    *(unsigned int *)((char *)&v314 + v6) = v41;
    a3 = v295;
    if ((v295 | 2) == 3)
    {
      BOOL v42 = 0;
      if (v20 >= v19 && v31 < v19) {
        BOOL v42 = kDQuadParamTable[160 * v15 + 8 + 10 * v41] == 0;
      }
    }
    else
    {
      BOOL v42 = 0;
    }
    if (v41 >= kDquadTransition[v15] || v42)
    {
      unsigned int v43 = kDQuadParamTable[160 * v15 + 4 + 10 * v41] - v42;
      if (v42) {
        int v44 = 0;
      }
      else {
        int v44 = -2;
      }
      BOOL v50 = v17 >= v43;
      unsigned int v46 = v17 - v43;
      BOOL v45 = v46 != 0 && v50;
      int v47 = v31 & ~(-1 << v46);
      if (!v45) {
        int v47 = 0;
      }
      int v48 = v47 + v44;
      BOOL v45 = v48 < 1;
      unsigned int v49 = __clz(v48 + v20 - v31);
      BOOL v50 = v45 || v49 >= v40;
      if (v50)
      {
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(unsigned int *)((char *)&v314 + v6) = ++v41;
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      unsigned int v51 = kDquadMaxMode[v15];
      if (v51 >= v41) {
        unsigned int v51 = v41;
      }
      *(unsigned int *)((char *)&v314 + v6) = v51;
    }
LABEL_22:
    v6 += 4;
    unint64_t v14 = v34;
  }
  while (v6 != 16);
  v310[0] = 0;
  v310[1] = 0;
  v309[0] = 0;
  v309[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v311, &v314, v310, v309);
  int v52 = v295;
  int v53 = 0;
  if (a4) {
    BOOL v54 = a5 == 0;
  }
  else {
    BOOL v54 = 1;
  }
  int v55 = v54;
  unint64_t v56 = 0x30u;
  while (2)
  {
    int v58 = *(_DWORD *)((char *)v309 + v56);
    unsigned int v59 = v313[v56 / 4 + 20];
    long long v60 = &kDQuadParamTable[160 * v58 + 10 * v59];
    unint64_t v61 = *((void *)v60 + 1);
    int v63 = v60[4];
    int v62 = v60[5];
    *(_DWORD *)((char *)&v298 + v56) = v63;
    long long v64 = (char *)&v301 + v56;
    *(_DWORD *)((char *)&v297 + v56) = v62;
    int v65 = *(_DWORD *)((char *)&v299 + v56) - *(unsigned int *)((char *)&v301 + v56);
    if (v65 < 0)
    {
      int v52 = v295;
      if (kDQuadParamTable[160 * v58 + 7 + 10 * v59] < (signed int)(*(unsigned int *)((char *)&v301 + v56)
                                                                   - *(_DWORD *)((char *)&v299 + v56)))
      {
        *((_DWORD *)v64 - 12) = --v62;
        if (!kDQuadParamTable[160 * v58 + 8 + 10 * v59])
        {
          int v66 = -1;
LABEL_144:
          *(_DWORD *)((char *)&v298 + v56) = v66 + v63;
        }
      }
    }
    else if (v65)
    {
      v62 += v65;
      *((_DWORD *)v64 - 12) = v62;
      int v66 = v65;
      goto LABEL_144;
    }
    if (v58 == 5)
    {
      int v67 = (v65 < 2) | v53;
      if (v59 == 1) {
        int v53 = v67;
      }
    }
    if (v52 == 4)
    {
      if (v58 == 3) {
        int v68 = 31744;
      }
      else {
        int v68 = 0;
      }
      if (v58 == 4) {
        int v69 = 2139095040;
      }
      else {
        int v69 = v68;
      }
      int v70 = 1 << (v318[v56 / 4] - 1);
      if (v55)
      {
        if (v288) {
          goto LABEL_159;
        }
LABEL_173:
        int v74 = *(_DWORD *)((char *)&v312[6] + v56);
        BOOL v76 = (v69 & ~v74) == 0 || v74 == v70;
        v53 |= v76;
        if (!v290) {
          goto LABEL_180;
        }
LABEL_160:
        if (v289) {
          goto LABEL_161;
        }
LABEL_187:
        unsigned int v80 = v313[v56 / 4];
        BOOL v82 = (v69 & ~v80) == 0 || v80 == v70;
        v53 |= v82;
        if (!v291) {
          goto LABEL_194;
        }
LABEL_162:
        if (v293) {
          goto LABEL_163;
        }
LABEL_201:
        unsigned int v86 = v313[v56 / 4 + 8];
        BOOL v88 = (v69 & ~v86) == 0 || v86 == v70;
        v53 |= v88;
        if (!v292) {
          goto LABEL_208;
        }
LABEL_164:
        if (!v294) {
          goto LABEL_215;
        }
      }
      else
      {
        int v71 = *(_DWORD *)((char *)&v312[5] + v56);
        BOOL v73 = (v69 & ~v71) == 0 || v71 == v70;
        v53 |= v73;
        if (!v288) {
          goto LABEL_173;
        }
LABEL_159:
        if (v290) {
          goto LABEL_160;
        }
LABEL_180:
        int v77 = *(_DWORD *)((char *)&v312[7] + v56);
        BOOL v79 = (v69 & ~v77) == 0 || v77 == v70;
        v53 |= v79;
        if (!v289) {
          goto LABEL_187;
        }
LABEL_161:
        if (v291) {
          goto LABEL_162;
        }
LABEL_194:
        unsigned int v83 = v313[v56 / 4 + 4];
        BOOL v85 = (v69 & ~v83) == 0 || v83 == v70;
        v53 |= v85;
        if (!v293) {
          goto LABEL_201;
        }
LABEL_163:
        if (v292) {
          goto LABEL_164;
        }
LABEL_208:
        unsigned int v89 = v313[v56 / 4 + 12];
        BOOL v91 = (v69 & ~v89) == 0 || v89 == v70;
        v53 |= v91;
        if (!v294)
        {
LABEL_215:
          unsigned int v92 = v313[v56 / 4 + 16];
          BOOL v94 = (v69 & ~v92) == 0 || v92 == v70;
          v53 |= v94;
        }
      }
    }
    if (v61 >> v62 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)13,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v56))
      int v57 = 1;
    else {
      int v57 = v55;
    }
    v53 |= v57;
    v56 += 4;
    if (v56 != 64) {
      continue;
    }
    break;
  }
  uint64_t v95 = 0;
  uint64_t v299 = 0;
  uint64_t v300 = 0;
  long long v297 = 0u;
  long long v298 = 0u;
  memset(v296, 0, sizeof(v296));
  long long v96 = v313;
  long long v97 = v312;
  do
  {
    uint64_t v98 = 0;
    unsigned int v99 = 0;
    unsigned int v100 = *(&v322 + v95);
    unsigned int v101 = *(&v305 + v95);
    if (v100 < v101) {
      unsigned int v101 = *(&v322 + v95);
    }
    *(&v305 + v95) = v101;
    int8x16_t v102 = &kDQuadParamTable[160 * v311[v95] + 10 * *(&v314 + v95)];
    if (v102[5]) {
      unsigned int v103 = v100;
    }
    else {
      unsigned int v103 = 0;
    }
    if (v103 >= *(&v301 + v95)) {
      int v104 = *(&v301 + v95);
    }
    else {
      int v104 = v103;
    }
    int v105 = *(&v319 + v95) & (-1 << (v100 - v101));
    int16x8_t v106 = &v313[v95];
    int v107 = *v106 - v105;
    int16x8_t v108 = &v312[2 * v95];
    if (v55) {
      int v107 = 0;
    }
    int v109 = v106[4] - v105;
    if (v288) {
      int v109 = 0;
    }
    *int16x8_t v108 = v107;
    v108[1] = v109;
    int v110 = v106[8] - v105;
    if (v290) {
      int v110 = 0;
    }
    int v111 = v106[12] - v105;
    if (v289) {
      int v111 = 0;
    }
    v108[2] = v110;
    v108[3] = v111;
    int v112 = v106[16] - v105;
    if (v291) {
      int v112 = 0;
    }
    int v113 = v106[20] - v105;
    if (v293) {
      int v113 = 0;
    }
    v108[4] = v112;
    v108[5] = v113;
    uint64_t v114 = -1 << v100;
    *(&v301 + v95) = v104;
    unint64_t v115 = *((void *)v102 + 1);
    *((_DWORD *)&v299 + v95) = v105;
    unint64_t v116 = v115 >> v104;
    int v117 = v106[24] - v105;
    if (v292) {
      int v117 = 0;
    }
    int v118 = v106[28] - v105;
    if (v294) {
      int v118 = 0;
    }
    v108[6] = v117;
    v108[7] = v118;
    int v119 = ~v114;
    if (v116 <= 1) {
      unint64_t v120 = 1;
    }
    else {
      unint64_t v120 = v116;
    }
    uint64_t v121 = 4 * v318[v95];
    int16x8_t v122 = &byte_242EA911D;
    do
    {
      if (v121 != v98)
      {
        if (v104) {
          unint64_t v123 = *(unsigned int *)((char *)v97 + v98) / v120;
        }
        else {
          LODWORD(v123) = 0;
        }
        int16x8_t v124 = (int *)v296 + 7 * v95 + v99;
        *int16x8_t v124 = v123;
        if (v116 >= 2)
        {
          unint64_t v125 = *(unsigned int *)((char *)v97 + v98);
          if (v125)
          {
            if (v125 / v120 * v120 == v125 && ((v125 / v120) & 1) != 0)
            {
              if (v105 || v123 != 1)
              {
                if ((v295 | 2) != 3
                  || (uint64_t v127 = v96[v98], v128 = *((unsigned int *)&v310[2] + v95), v127 != v128)
                  && ((v295 | 2) != 3 || v120 + v128 != v127))
                {
                  LODWORD(v123) = v123 - 1;
                  *int16x8_t v124 = v123;
                }
              }
              else
              {
                LODWORD(v123) = 1;
              }
            }
          }
        }
        if ((unint64_t)v123 >> v104 || v96[v98] == v119) {
          *int16x8_t v124 = ~(-1 << v104);
        }
        if (*v122 >= a5 || *(v122 - 1) >= a4) {
          *int16x8_t v124 = 0;
        }
        ++v99;
      }
      v98 += 4;
      v122 += 2;
    }
    while (v98 != 32);
    ++v95;
    v97 += 2;
    ++v96;
  }
  while (v95 != 4);
  int8x16_t v129 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v130 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (v53)
  {
    uint64_t v131 = 0;
    uint64_t v132 = 0;
    unsigned int v133 = v322;
    unsigned int v134 = v323;
    uint64_t v135 = v322 - 5;
    uint64_t v136 = v323 - 5;
    unsigned int v137 = v324;
    unint64_t v138 = v325;
    uint64_t v139 = v324 - 6;
    uint64_t v140 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v141 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v131;
      BOOL v142 = v141[1] >= a5 || *v141 >= a4;
      char v143 = v142;
      if (v142)
      {
        unint64_t v144 = 0;
        if (v135 > 0x100) {
          goto LABEL_300;
        }
      }
      else
      {
        unint64_t v144 = (unint64_t)v313[4 * v131] >> 5;
        if (v135 > 0x100) {
          goto LABEL_300;
        }
      }
      if (v133 != 5 && (unint64_t)(v140 - v130 + (v132 << 6) + v135) <= 0x80)
      {
        uint64_t v145 = 0;
        unint64_t v146 = v133 - 5;
        do
        {
          unint64_t v147 = 64 - v140;
          if (64 - v140 >= v146) {
            unint64_t v147 = v146;
          }
          v129[v132] |= ((v144 >> v145) & ~(-1 << v147)) << v140;
          v145 += v147;
          unint64_t v148 = v147 + v140;
          v132 += v148 >> 6;
          uint64_t v140 = v148 & 0x3F;
          v146 -= v147;
        }
        while (v146);
      }
LABEL_300:
      if (v143)
      {
        unint64_t v149 = 0;
        if (v136 > 0x100) {
          goto LABEL_310;
        }
      }
      else
      {
        unint64_t v149 = (unint64_t)v313[4 * v131 + 1] >> 5;
        if (v136 > 0x100) {
          goto LABEL_310;
        }
      }
      if (v134 != 5 && (unint64_t)(v140 - v130 + (v132 << 6) + v136) <= 0x80)
      {
        uint64_t v150 = 0;
        unint64_t v151 = v134 - 5;
        do
        {
          unint64_t v152 = 64 - v140;
          if (64 - v140 >= v151) {
            unint64_t v152 = v151;
          }
          v129[v132] |= ((v149 >> v150) & ~(-1 << v152)) << v140;
          v150 += v152;
          unint64_t v153 = v152 + v140;
          v132 += v153 >> 6;
          uint64_t v140 = v153 & 0x3F;
          v151 -= v152;
        }
        while (v151);
      }
LABEL_310:
      if (v143)
      {
        unint64_t v154 = 0;
        if (v139 > 0x100) {
          goto LABEL_320;
        }
      }
      else
      {
        unint64_t v154 = (unint64_t)v313[4 * v131 + 2] >> 6;
        if (v139 > 0x100) {
          goto LABEL_320;
        }
      }
      if (v137 != 6 && (unint64_t)(v140 - v130 + (v132 << 6) + v139) <= 0x80)
      {
        uint64_t v155 = 0;
        unint64_t v156 = v137 - 6;
        do
        {
          unint64_t v157 = 64 - v140;
          if (64 - v140 >= v156) {
            unint64_t v157 = v156;
          }
          v129[v132] |= ((v154 >> v155) & ~(-1 << v157)) << v140;
          v155 += v157;
          unint64_t v158 = v157 + v140;
          v132 += v158 >> 6;
          uint64_t v140 = v158 & 0x3F;
          v156 -= v157;
        }
        while (v156);
      }
LABEL_320:
      if (v143)
      {
        unint64_t v159 = 0;
        if (v138 <= 0x100) {
          goto LABEL_324;
        }
      }
      else
      {
        unint64_t v159 = v313[4 * v131 + 3];
        if (v138 <= 0x100)
        {
LABEL_324:
          if (v138 && v140 - v130 + (v132 << 6) + v138 <= 0x80)
          {
            uint64_t v160 = 0;
            unint64_t v161 = v138;
            do
            {
              unint64_t v162 = 64 - v140;
              if (64 - v140 >= v161) {
                unint64_t v162 = v161;
              }
              v129[v132] |= ((v159 >> v160) & ~(-1 << v162)) << v140;
              v160 += v162;
              unint64_t v163 = v162 + v140;
              v132 += v163 >> 6;
              uint64_t v140 = v163 & 0x3F;
              v161 -= v162;
            }
            while (v161);
          }
        }
      }
      if (++v131 == 8) {
        return v53 & 1;
      }
    }
  }
  unsigned int v164 = v314;
  char v165 = v319 | v314;
  if (v319 | v314)
  {
    char v165 = v314 - 2;
    if (v314 <= 2)
    {
      char v165 = 0;
      char v166 = 0;
      unsigned int v167 = v314 + 1;
      goto LABEL_335;
    }
    unsigned int v169 = 0;
    unsigned int v167 = 0;
    int v168 = 0;
    char v166 = 1;
  }
  else
  {
    char v166 = 0;
    unsigned int v167 = 0;
LABEL_335:
    int v168 = 1;
    unsigned int v169 = 2;
  }
  *v129 |= (unint64_t)(v165 & 7) << v130;
  uint64_t v170 = v130 | 3;
  unsigned int v171 = v315;
  char v172 = v320 | v315;
  if (v320 | v315)
  {
    char v172 = v315 - 2;
    if (v315 <= 2)
    {
      char v172 = 0;
      char v173 = 0;
      unsigned int v174 = v315 + 1;
      goto LABEL_341;
    }
    unsigned int v176 = 0;
    unsigned int v174 = 0;
    int v175 = 0;
    char v173 = 1;
  }
  else
  {
    char v173 = 0;
    unsigned int v174 = 0;
LABEL_341:
    int v175 = 1;
    unsigned int v176 = 2;
  }
  if ((unint64_t)(v170 - v130 - 126) >= 0xFFFFFFFFFFFFFF7FLL)
  {
    *v129 |= (unint64_t)(v172 & 7) << v170;
    uint64_t v170 = v130 | 6;
  }
  unsigned int v177 = v316;
  if (v321 | v316)
  {
    unsigned int v178 = v316 - 2;
    if (v316 <= 2)
    {
      unsigned int v178 = 0;
      char v179 = 0;
      unsigned int v180 = v316 + 1;
      goto LABEL_349;
    }
    unsigned int v182 = 0;
    unsigned int v180 = 0;
    int v181 = 0;
    char v179 = 1;
  }
  else
  {
    unsigned int v178 = 0;
    char v179 = 0;
    unsigned int v180 = 0;
LABEL_349:
    int v181 = 1;
    unsigned int v182 = 2;
  }
  if ((unint64_t)(v170 - v130 - 126) >= 0xFFFFFFFFFFFFFF7FLL)
  {
    uint64_t v183 = 0;
    uint64_t v184 = 0;
    unint64_t v185 = 3;
    do
    {
      unint64_t v186 = 64 - v170;
      if (64 - v170 >= v185) {
        unint64_t v186 = v185;
      }
      v129[v183] |= (((unint64_t)v178 >> v184) & ~(-1 << v186)) << v170;
      v184 += v186;
      unint64_t v187 = v186 + v170;
      v183 += v187 >> 6;
      uint64_t v170 = v187 & 0x3F;
      v185 -= v186;
    }
    while (v185);
  }
  else
  {
    uint64_t v183 = 0;
  }
  int v188 = v317;
  if ((unint64_t)(v170 - v130 + (v183 << 6) - 128) >= 0xFFFFFFFFFFFFFF7FLL)
  {
    v129[v183] |= (unint64_t)(v317 & 1) << v170;
    unint64_t v189 = v170 + 1;
    v183 += v189 >> 6;
    uint64_t v170 = v189 & 0x3F;
  }
  if (!v168)
  {
    int v194 = 10;
    if (!v175) {
      goto LABEL_378;
    }
    goto LABEL_370;
  }
  unint64_t v190 = v169;
  if (v170 - v130 + (v183 << 6) + (unint64_t)v169 > 0x80) {
    char v166 = 1;
  }
  if ((v166 & 1) == 0)
  {
    uint64_t v191 = 0;
    do
    {
      unint64_t v192 = 64 - v170;
      if (64 - v170 >= v190) {
        unint64_t v192 = v190;
      }
      v129[v183] |= (((unint64_t)v167 >> v191) & ~(-1 << v192)) << v170;
      v191 += v192;
      unint64_t v193 = v192 + v170;
      v183 += v193 >> 6;
      uint64_t v170 = v193 & 0x3F;
      v190 -= v192;
    }
    while (v190);
  }
  int v194 = v169 + 10;
  if (v175)
  {
LABEL_370:
    unint64_t v195 = v176;
    if (v170 - v130 + (v183 << 6) + (unint64_t)v176 > 0x80) {
      char v173 = 1;
    }
    if ((v173 & 1) == 0)
    {
      uint64_t v196 = 0;
      do
      {
        unint64_t v197 = 64 - v170;
        if (64 - v170 >= v195) {
          unint64_t v197 = v195;
        }
        v129[v183] |= (((unint64_t)v174 >> v196) & ~(-1 << v197)) << v170;
        v196 += v197;
        unint64_t v198 = v197 + v170;
        v183 += v198 >> 6;
        uint64_t v170 = v198 & 0x3F;
        v195 -= v197;
      }
      while (v195);
    }
    v194 += v176;
  }
LABEL_378:
  if (v181)
  {
    unint64_t v200 = v182;
    if (v170 - v130 + (v183 << 6) + (unint64_t)v182 > 0x80) {
      char v201 = 1;
    }
    else {
      char v201 = v179;
    }
    if ((v201 & 1) == 0)
    {
      uint64_t v202 = 0;
      do
      {
        unint64_t v203 = 64 - v170;
        if (64 - v170 >= v200) {
          unint64_t v203 = v200;
        }
        v129[v183] |= (((unint64_t)v180 >> v202) & ~(-1 << v203)) << v170;
        v202 += v203;
        unint64_t v204 = v203 + v170;
        v183 += v204 >> 6;
        uint64_t v170 = v204 & 0x3F;
        v200 -= v203;
      }
      while (v200);
    }
    v194 += v182;
    unsigned int v199 = v322;
    if (v164) {
      goto LABEL_394;
    }
LABEL_390:
    if (v199 == 2 || v199 >= 0x10) {
      goto LABEL_394;
    }
    unsigned int v205 = v323;
    if (!v171) {
      goto LABEL_503;
    }
LABEL_402:
    unsigned int v212 = v306;
    if (v306 <= 0x100 && v306 && v170 - v130 + (v183 << 6) + (unint64_t)v306 <= 0x80)
    {
      uint64_t v213 = 0;
      unint64_t v214 = (HIDWORD(v299) >> (v205 - v306));
      unint64_t v215 = v306;
      do
      {
        unint64_t v216 = 64 - v170;
        if (64 - v170 >= v215) {
          unint64_t v216 = v215;
        }
        v129[v183] |= ((v214 >> v213) & ~(-1 << v216)) << v170;
        v213 += v216;
        unint64_t v217 = v216 + v170;
        v183 += v217 >> 6;
        uint64_t v170 = v217 & 0x3F;
        v215 -= v216;
      }
      while (v215);
    }
    v194 += v212;
  }
  else
  {
    unsigned int v199 = v322;
    if (!v164) {
      goto LABEL_390;
    }
LABEL_394:
    unsigned int v206 = v305;
    if (v305 <= 0x100 && v305 && v170 - v130 + (v183 << 6) + (unint64_t)v305 <= 0x80)
    {
      uint64_t v207 = 0;
      unint64_t v208 = v299 >> (v199 - v305);
      unint64_t v209 = v305;
      do
      {
        unint64_t v210 = 64 - v170;
        if (64 - v170 >= v209) {
          unint64_t v210 = v209;
        }
        v129[v183] |= ((v208 >> v207) & ~(-1 << v210)) << v170;
        v207 += v210;
        unint64_t v211 = v210 + v170;
        v183 += v211 >> 6;
        uint64_t v170 = v211 & 0x3F;
        v209 -= v210;
      }
      while (v209);
    }
    v194 += v206;
    unsigned int v205 = v323;
    if (v171) {
      goto LABEL_402;
    }
LABEL_503:
    if (v205 == 2 || v205 >= 0x10) {
      goto LABEL_402;
    }
  }
  if (v177 || v324 == 2 || v324 >= 0x10)
  {
    unsigned int v218 = v307;
    if (v307 <= 0x100 && v307 && v170 - v130 + (v183 << 6) + (unint64_t)v307 <= 0x80)
    {
      uint64_t v219 = 0;
      unint64_t v220 = v300 >> (v324 - v307);
      unint64_t v221 = v307;
      do
      {
        unint64_t v222 = 64 - v170;
        if (64 - v170 >= v221) {
          unint64_t v222 = v221;
        }
        v129[v183] |= ((v220 >> v219) & ~(-1 << v222)) << v170;
        v219 += v222;
        unint64_t v223 = v222 + v170;
        v183 += v223 >> 6;
        uint64_t v170 = v223 & 0x3F;
        v221 -= v222;
      }
      while (v221);
    }
    v194 += v218;
  }
  if (v188 || v325 == 2 || v325 >= 0x10)
  {
    unsigned int v224 = v308;
    if (v308 <= 0x100 && v308 && v170 - v130 + (v183 << 6) + (unint64_t)v308 <= 0x80)
    {
      uint64_t v225 = 0;
      unint64_t v226 = (HIDWORD(v300) >> (v325 - v308));
      unint64_t v227 = v308;
      do
      {
        unint64_t v228 = 64 - v170;
        if (64 - v170 >= v227) {
          unint64_t v228 = v227;
        }
        v129[v183] |= ((v226 >> v225) & ~(-1 << v228)) << v170;
        v225 += v228;
        unint64_t v229 = v228 + v170;
        v183 += v229 >> 6;
        uint64_t v170 = v229 & 0x3F;
        v227 -= v228;
      }
      while (v227);
    }
    v194 += v224;
  }
  unint64_t v230 = v301;
  if (v301)
  {
    if ((unint64_t)(v170 - v130 + (v183 << 6) + 3) <= 0x80)
    {
      uint64_t v231 = 0;
      unint64_t v232 = v318[0];
      unint64_t v233 = 3;
      do
      {
        unint64_t v234 = 64 - v170;
        if (64 - v170 >= v233) {
          unint64_t v234 = v233;
        }
        v129[v183] |= ((v232 >> v231) & ~(-1 << v234)) << v170;
        v231 += v234;
        unint64_t v235 = v234 + v170;
        v183 += v235 >> 6;
        uint64_t v170 = v235 & 0x3F;
        v233 -= v234;
      }
      while (v233);
    }
    v194 += 3;
  }
  unint64_t v236 = v302;
  if (v302)
  {
    if ((unint64_t)(v170 - v130 + (v183 << 6) + 3) <= 0x80)
    {
      uint64_t v237 = 0;
      unint64_t v238 = v318[1];
      unint64_t v239 = 3;
      do
      {
        unint64_t v240 = 64 - v170;
        if (64 - v170 >= v239) {
          unint64_t v240 = v239;
        }
        v129[v183] |= ((v238 >> v237) & ~(-1 << v240)) << v170;
        v237 += v240;
        unint64_t v241 = v240 + v170;
        v183 += v241 >> 6;
        uint64_t v170 = v241 & 0x3F;
        v239 -= v240;
      }
      while (v239);
    }
    v194 += 3;
  }
  unint64_t v242 = v303;
  if (v303)
  {
    if ((unint64_t)(v170 - v130 + (v183 << 6) + 3) <= 0x80)
    {
      uint64_t v243 = 0;
      unint64_t v244 = v318[2];
      unint64_t v245 = 3;
      do
      {
        unint64_t v246 = 64 - v170;
        if (64 - v170 >= v245) {
          unint64_t v246 = v245;
        }
        v129[v183] |= ((v244 >> v243) & ~(-1 << v246)) << v170;
        v243 += v246;
        unint64_t v247 = v246 + v170;
        v183 += v247 >> 6;
        uint64_t v170 = v247 & 0x3F;
        v245 -= v246;
      }
      while (v245);
    }
    v194 += 3;
  }
  unint64_t v248 = v304;
  if (v304)
  {
    if ((unint64_t)(v170 - v130 + (v183 << 6) + 3) <= 0x80)
    {
      uint64_t v249 = 0;
      unint64_t v250 = v318[3];
      unint64_t v251 = 3;
      do
      {
        unint64_t v252 = 64 - v170;
        if (64 - v170 >= v251) {
          unint64_t v252 = v251;
        }
        v129[v183] |= ((v250 >> v249) & ~(-1 << v252)) << v170;
        v249 += v252;
        unint64_t v253 = v252 + v170;
        v183 += v253 >> 6;
        uint64_t v170 = v253 & 0x3F;
        v251 -= v252;
      }
      while (v251);
    }
    v194 += 3;
  }
  unsigned int v254 = 128 - v194;
  unsigned int v255 = (128 - v194) / 7u;
  unint64_t v256 = v254 % 7;
  if ((v256 - 257) >= 0xFFFFFF00 && v170 - v130 + (v183 << 6) + v256 <= 0x80)
  {
    do
    {
      unint64_t v257 = 64 - v170;
      if (64 - v170 >= v256) {
        unint64_t v257 = v256;
      }
      unint64_t v258 = v257 + v170;
      v183 += v258 >> 6;
      uint64_t v170 = v258 & 0x3F;
      v256 -= v257;
    }
    while (v256);
  }
  uint64_t v259 = 0;
  while (2)
  {
    if (v230 && v230 <= 0x100 && v170 - v130 + (v183 << 6) + v230 <= 0x80)
    {
      uint64_t v260 = 0;
      unint64_t v261 = *((unsigned int *)v296 + v259);
      unint64_t v262 = v230;
      do
      {
        unint64_t v263 = 64 - v170;
        if (64 - v170 >= v262) {
          unint64_t v263 = v262;
        }
        v129[v183] |= ((v261 >> v260) & ~(-1 << v263)) << v170;
        v260 += v263;
        unint64_t v264 = v263 + v170;
        v183 += v264 >> 6;
        uint64_t v170 = v264 & 0x3F;
        v262 -= v263;
      }
      while (v262);
    }
    if (!v236)
    {
      int v270 = v230;
      if (!v242) {
        goto LABEL_487;
      }
      goto LABEL_480;
    }
    if (v236 <= 0x100 && v170 - v130 + (v183 << 6) + v236 <= 0x80)
    {
      uint64_t v265 = 0;
      unint64_t v266 = *((unsigned int *)&v296[1] + v259 + 3);
      unint64_t v267 = v236;
      do
      {
        unint64_t v268 = 64 - v170;
        if (64 - v170 >= v267) {
          unint64_t v268 = v267;
        }
        v129[v183] |= ((v266 >> v265) & ~(-1 << v268)) << v170;
        v265 += v268;
        unint64_t v269 = v268 + v170;
        v183 += v269 >> 6;
        uint64_t v170 = v269 & 0x3F;
        v267 -= v268;
      }
      while (v267);
    }
    int v270 = v236 + v230;
    if (v242)
    {
LABEL_480:
      if (v242 <= 0x100 && v170 - v130 + (v183 << 6) + v242 <= 0x80)
      {
        uint64_t v271 = 0;
        unint64_t v272 = *((unsigned int *)&v296[3] + v259 + 2);
        unint64_t v273 = v242;
        do
        {
          unint64_t v274 = 64 - v170;
          if (64 - v170 >= v273) {
            unint64_t v274 = v273;
          }
          v129[v183] |= ((v272 >> v271) & ~(-1 << v274)) << v170;
          v271 += v274;
          unint64_t v275 = v274 + v170;
          v183 += v275 >> 6;
          uint64_t v170 = v275 & 0x3F;
          v273 -= v274;
        }
        while (v273);
      }
      v270 += v242;
    }
LABEL_487:
    if (v248)
    {
      if (v248 <= 0x100 && v170 - v130 + (v183 << 6) + v248 <= 0x80)
      {
        uint64_t v276 = 0;
        unint64_t v277 = *((unsigned int *)&v297 + v259 + 1);
        unint64_t v278 = v248;
        do
        {
          unint64_t v279 = 64 - v170;
          if (64 - v170 >= v278) {
            unint64_t v279 = v278;
          }
          v129[v183] |= ((v277 >> v276) & ~(-1 << v279)) << v170;
          v276 += v279;
          unint64_t v280 = v279 + v170;
          v183 += v280 >> 6;
          uint64_t v170 = v280 & 0x3F;
          v278 -= v279;
        }
        while (v278);
      }
      v270 += v248;
    }
    unint64_t v281 = v255 - v270;
    if (v281 && v281 <= 0x100 && v170 - v130 + (v183 << 6) + v281 <= 0x80)
    {
      do
      {
        unint64_t v282 = 64 - v170;
        if (64 - v170 >= v281) {
          unint64_t v282 = v281;
        }
        unint64_t v283 = v282 + v170;
        v183 += v283 >> 6;
        uint64_t v170 = v283 & 0x3F;
        v281 -= v282;
      }
      while (v281);
    }
    if (++v259 != 7) {
      continue;
    }
    return v53 & 1;
  }
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  BOOL v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *uint64_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint32x4_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    unsigned int v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint32x4_t v21 = 0;
    unsigned int v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unsigned int v25 = 0;
LABEL_35:
  unsigned int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *unsigned int v26 = 0;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v30 = 0;
LABEL_49:
  unsigned int v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    int64x2_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *unsigned int v31 = 0;
    int64x2_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressMacroblock(float32x4_t *a1, uint64_t a2, unsigned __int8 *a3, int a4)
{
  uint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1, 64, a2, *a3, a4);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1 + 2, 64, v7, a3[1], a4);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1 + 16, 64, v8, a3[2], a4);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1 + 18, 64, v9, a3[3], a4);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1 + 32, 64, v10, a3[4], a4);
  uint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1 + 34, 64, v11, a3[5], a4);
  uint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1 + 48, 64, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)13,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressSubblock(a1 + 50, 64, v13, v14, a4);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)0>::decompressSubblock(int32x4_t *a1, uint64_t a2, int32x4_t *a3, int a4, double a5, double a6, double a7, int8x8_t a8)
{
  if (a4 > 38)
  {
    if (a4 == 39)
    {
      v18.i64[0] = 0xA000A000A000ALL;
      v18.i64[1] = 0xA000A000A000ALL;
      int8x16_t v19 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v18, v18));
      unint64_t v20 = vpaddq_s32((int32x4_t)v19, (int32x4_t)v19).u64[0];
      v21.i64[0] = v20;
      v21.i64[1] = HIDWORD(v20);
      int8x16_t v22 = (int8x16_t)v21;
      unint64_t v23 = vaddvq_s64(v21);
      int8x16_t v24 = 0uLL;
      int8x16_t v25 = 0uLL;
      int8x16_t v26 = 0uLL;
      int8x16_t v27 = 0uLL;
      if (v23 <= 0x80)
      {
        unsigned int v28 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v29 = 8 * (a3 & 7);
        int64x2_t v30 = vzip1q_s64((int64x2_t)0, (int64x2_t)v22);
        unint64_t v31 = v23 + v29;
        int64x2_t v32 = vaddq_s64(v30, vdupq_n_s64(v29));
        int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v32)));
        if (v23 + v29 >= 0x81) {
          int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v28[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v28[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), v25);
        }
        unint64_t v33 = v31 & 0x3F;
        int v34 = (int64x2_t *)((char *)v28 + 8 * (v31 >> 6));
        int64x2_t v35 = vaddq_s64(v30, vdupq_n_s64(v33));
        unint64_t v36 = v23 + v31;
        int8x16_t v26 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v34, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v35)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v34->i64[0], 0), (uint64x2_t)vnegq_s64(v35)));
        if (v23 + v33 >= 0x81) {
          int8x16_t v26 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v34[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v35)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v34[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v35))), v26);
        }
        unint64_t v37 = v36 & 0x3F;
        int8x16_t v38 = (int64x2_t *)((char *)v28 + 8 * (v36 >> 6));
        int64x2_t v39 = vaddq_s64(v30, vdupq_n_s64(v37));
        unint64_t v40 = v23 + v36;
        int8x16_t v24 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v38, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v39)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v38->i64[0], 0), (uint64x2_t)vnegq_s64(v39)));
        if (v23 + v37 >= 0x81) {
          int8x16_t v24 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v38[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v39)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v38[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v39))), v24);
        }
        int8x16_t v22 = (int8x16_t)vaddq_s64(v30, vdupq_n_s64(v40 & 0x3F));
        unsigned int v41 = (int64x2_t *)((char *)v28 + 8 * (v40 >> 6));
        int8x16_t v27 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v41, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v22)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v22)));
        if (v23 + (v40 & 0x3F) >= 0x81)
        {
          int8x16_t v22 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v22)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v41[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v22)));
          int8x16_t v27 = vorrq_s8(v22, v27);
        }
      }
      *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v24);
      int32x2_t v42 = vzip1_s32(*(int32x2_t *)v19.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL));
      v43.i64[0] = v42.u32[0];
      v43.i64[1] = v42.u32[1];
      uint64x2_t v44 = (uint64x2_t)vnegq_s64(v43);
      int64x2_t v45 = (int64x2_t)vshlq_u64((uint64x2_t)v24, v44);
      *(int32x2_t *)v45.i8 = vmovn_s64(v45);
      int16x8_t v46 = (int16x8_t)vzip1q_s32((int32x4_t)v22, (int32x4_t)v45);
      *(int16x4_t *)v22.i8 = vmovn_s32((int32x4_t)v46);
      *(int16x4_t *)v46.i8 = vshrn_n_s32((int32x4_t)v46, 0xAuLL);
      int8x16_t v47 = (int8x16_t)vzip1q_s16((int16x8_t)v22, v46);
      v48.i64[0] = 0x1000100010001;
      v48.i64[1] = 0x1000100010001;
      v49.i64[0] = -1;
      v49.i64[1] = -1;
      int8x16_t v50 = (int8x16_t)vaddq_s16(vshlq_n_s16(v48, 0xAuLL), v49);
      *(int32x2_t *)v49.i8 = vmovn_s64((int64x2_t)v26);
      int64x2_t v51 = (int64x2_t)vshlq_u64((uint64x2_t)v26, v44);
      *(int32x2_t *)v51.i8 = vmovn_s64(v51);
      int16x8_t v52 = (int16x8_t)vzip1q_s32((int32x4_t)v49, (int32x4_t)v51);
      *(int16x4_t *)v49.i8 = vmovn_s32((int32x4_t)v52);
      *(int16x4_t *)v52.i8 = vshrn_n_s32((int32x4_t)v52, 0xAuLL);
      int16x8_t v53 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v49, v52), v50);
      *(int32x2_t *)v49.i8 = vmovn_s64((int64x2_t)v25);
      int64x2_t v54 = (int64x2_t)vshlq_u64((uint64x2_t)v25, v44);
      *(int32x2_t *)v54.i8 = vmovn_s64(v54);
      int16x8_t v55 = (int16x8_t)vzip1q_s32((int32x4_t)v49, (int32x4_t)v54);
      *(int16x4_t *)v49.i8 = vmovn_s32((int32x4_t)v55);
      *(int16x4_t *)v55.i8 = vshrn_n_s32((int32x4_t)v55, 0xAuLL);
      int64x2_t v56 = (int64x2_t)vshlq_u64((uint64x2_t)v27, v44);
      *(int32x2_t *)v27.i8 = vmovn_s64((int64x2_t)v27);
      *(int32x2_t *)v56.i8 = vmovn_s64(v56);
      int16x8_t v57 = (int16x8_t)vzip1q_s32((int32x4_t)v27, (int32x4_t)v56);
      *(int16x4_t *)v27.i8 = vmovn_s32((int32x4_t)v57);
      *(int16x4_t *)v57.i8 = vshrn_n_s32((int32x4_t)v57, 0xAuLL);
      int16x8_t v58 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v27, v57), v50);
      int32x4_t v59 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v49, v55), v50), 6uLL);
      int32x4_t v60 = (int32x4_t)vshlq_n_s16(v53, 6uLL);
      int32x4_t v61 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v47, v50), 6uLL);
      int32x4_t v62 = (int32x4_t)vshlq_n_s16(v58, 6uLL);
      *a1 = vuzp1q_s32(v59, v61);
      *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v59, v61);
      int v63 = (int32x4_t *)((char *)a1 + 2 * a2);
      *int v63 = vuzp1q_s32(v60, v62);
      *(int32x4_t *)((char *)v63 + a2) = vuzp2q_s32(v60, v62);
      return 40;
    }
    if (a4 == 63)
    {
      int32x4_t v10 = *a3;
      int32x4_t v11 = a3[1];
      int32x4_t v12 = a3[2];
      int32x4_t v13 = a3[3];
      *a1 = vuzp1q_s32(*a3, v12);
      *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v10, v12);
      unsigned int v14 = (int32x4_t *)((char *)a1 + 2 * a2);
      *unsigned int v14 = vuzp1q_s32(v11, v13);
      *(int32x4_t *)((char *)v14 + a2) = vuzp2q_s32(v11, v13);
      return 64;
    }
  }
  else
  {
    if (!a4)
    {
      uint64_t v9 = 0;
      a1->i64[0] = 0;
      a1->i64[1] = 0;
      unsigned int v15 = (uint64_t *)((char *)a1->i64 + a2);
      void *v15 = 0;
      v15[1] = 0;
      uint64_t v16 = (uint64_t *)((char *)a1->i64 + 2 * a2);
      *uint64_t v16 = 0;
      v16[1] = 0;
      int v17 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
LABEL_83:
      *int v17 = 0;
      v17[1] = 0;
      return v9;
    }
    if (a4 == 1)
    {
      int16x8_t v8 = vdupq_n_s16(a3->u16[0] << 6);
      *a1 = (int32x4_t)v8;
      *(int16x8_t *)((char *)a1 + a2) = v8;
      *(int16x8_t *)((char *)a1 + 2 * a2) = v8;
      *(int16x8_t *)((char *)a1 + 3 * a2) = v8;
      return 2;
    }
  }
  unint64_t v64 = 8 * (a3 & 7);
  unint64_t v65 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = v64 + 16;
  uint64_t v67 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v64;
  if (v64 >= 0x31) {
    v67 |= *(void *)(v65 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v68 = (8 * (a3 & 7)) | 0x140;
  int v69 = (a4 >> 6) | (4 * v67);
  uint16x8_t v70 = (uint16x8_t)vdupq_n_s16(v69 & 0xF);
  a8.i32[0] = v69 & 0xF;
  v71.i64[0] = 0x3000300030003;
  v71.i64[1] = 0x3000300030003;
  int8x16_t v72 = vbicq_s8((int8x16_t)vdupq_n_s16(((v67 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v71));
  int8x16_t v73 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v74.i64[0] = 0x202020202020202;
  v74.i64[1] = 0x202020202020202;
  int8x16_t v75 = vandq_s8(v73, v74);
  if (vmaxvq_s8(v75) < 1)
  {
    int v85 = 0;
    v86.i64[0] = -1;
    v86.i64[1] = -1;
    int8x16_t v87 = v72;
    int8x16_t v88 = v72;
    int8x16_t v89 = v72;
    v90.i64[0] = -1;
    v90.i64[1] = -1;
    int8x16_t v91 = v72;
    v92.i64[0] = -1;
    v92.i64[1] = -1;
    v93.i64[0] = -1;
    v93.i64[1] = -1;
  }
  else
  {
    int8x16_t v76 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v75, v75));
    int8x16_t v77 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v76, (int16x8_t)v76));
    unint64_t v78 = vpaddq_s32((int32x4_t)v77, (int32x4_t)v77).u64[0];
    v79.i64[0] = v78;
    v79.i64[1] = HIDWORD(v78);
    int64x2_t v80 = v79;
    unint64_t v81 = vaddvq_s64(v79);
    unint64_t v82 = v81 + v66;
    if (v81 <= 0x80 && v68 >= v82)
    {
      unint64_t v94 = v66 & 0x38;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v80), vdupq_n_s64(v94));
      long long v96 = (int64x2_t *)(v65 + ((v66 >> 3) & 8));
      int8x16_t v84 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v81 + v94 < 0x81)
      {
        int v85 = 0;
      }
      else
      {
        int v85 = 0;
        int8x16_t v84 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), v84);
      }
      unint64_t v66 = v82;
    }
    else
    {
      int8x16_t v84 = 0uLL;
      int v85 = 1;
    }
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v77.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = (int64x2_t)vshlq_u64((uint64x2_t)v84, (uint64x2_t)vnegq_s64(v98));
    *(int32x2_t *)v84.i8 = vmovn_s64((int64x2_t)v84);
    *(int32x2_t *)v99.i8 = vmovn_s64(v99);
    int8x16_t v100 = (int8x16_t)vzip1q_s32((int32x4_t)v84, (int32x4_t)v99);
    int16x8_t v101 = (int16x8_t)vshlq_u32((uint32x4_t)v100, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v76.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL)))));
    *(int16x4_t *)v100.i8 = vmovn_s32((int32x4_t)v100);
    *(int16x4_t *)v101.i8 = vmovn_s32((int32x4_t)v101);
    int8x16_t v102 = (int8x16_t)vzip1q_s16((int16x8_t)v100, v101);
    *(int8x8_t *)v102.i8 = vzip1_s8(vmovn_s16((int16x8_t)v102), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v102, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v75.i8, *(int8x8_t *)v70.i8))))));
    v100.i64[0] = 0x101010101010101;
    v100.i64[1] = 0x101010101010101;
    int8x16_t v103 = vshlq_s8(v100, v75);
    v100.i64[0] = -1;
    v100.i64[1] = -1;
    v103.i32[0] = vandq_s8(v102, vaddq_s8(v103, v100)).u32[0];
    int16x8_t v104 = vdupq_n_s16(v103.i8[0]);
    int16x8_t v105 = vdupq_n_s16(v103.i8[1]);
    int16x8_t v106 = vdupq_n_s16(v103.i8[2]);
    int16x8_t v107 = vdupq_n_s16(v103.i8[3]);
    int8x16_t v91 = (int8x16_t)vsubq_s16((int16x8_t)v72, v104);
    int8x16_t v89 = (int8x16_t)vsubq_s16((int16x8_t)v72, v105);
    int8x16_t v88 = (int8x16_t)vsubq_s16((int16x8_t)v72, v106);
    int8x16_t v87 = (int8x16_t)vsubq_s16((int16x8_t)v72, v107);
    int8x16_t v93 = (int8x16_t)vceqzq_s16(v104);
    int8x16_t v92 = (int8x16_t)vceqzq_s16(v105);
    int8x16_t v90 = (int8x16_t)vceqzq_s16(v106);
    int8x16_t v86 = (int8x16_t)vceqzq_s16(v107);
  }
  v108.i64[0] = 0x7000700070007;
  v108.i64[1] = 0x7000700070007;
  int8x16_t v109 = 0uLL;
  int8x16_t v110 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v70, v108), (int8x16_t)0, 0xEuLL), v72);
  int8x16_t v111 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v110, (int16x8_t)v110));
  unint64_t v112 = vpaddq_s32((int32x4_t)v111, (int32x4_t)v111).u64[0];
  v113.i64[0] = v112;
  v113.i64[1] = HIDWORD(v112);
  int64x2_t v114 = v113;
  unint64_t v115 = vaddvq_s64(v113);
  unint64_t v116 = v115 + v66;
  if (v115 <= 0x80 && v68 >= v116)
  {
    unint64_t v118 = v66 & 0x3F;
    int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v114), vdupq_n_s64(v118));
    unint64_t v120 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
    if (v115 + v118 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), v109);
    }
    unint64_t v66 = v116;
  }
  else
  {
    int v85 = 1;
  }
  int v121 = a4 >> 6;
  if (v121 == 2)
  {
    BOOL v122 = v68 >= v66 + 8;
    if (v68 >= v66 + 8) {
      v66 += 8;
    }
    unint64_t v123 = v66 + 8;
    if (!v122 || v68 < v123) {
      int v85 = 1;
    }
    if (v68 >= v123) {
      v66 += 8;
    }
  }
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v91, 0xEuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v126, (int16x8_t)v126));
  unint64_t v128 = vpaddq_s32((int32x4_t)v127, (int32x4_t)v127).u64[0];
  v129.i64[0] = v128;
  v129.i64[1] = HIDWORD(v128);
  int64x2_t v130 = v129;
  unint64_t v131 = vaddvq_s64(v129);
  unint64_t v132 = v131 + v66;
  if (v131 <= 0x80 && v68 >= v132)
  {
    unint64_t v135 = v66 & 0x3F;
    int64x2_t v136 = vaddq_s64(vzip1q_s64((int64x2_t)0, v130), vdupq_n_s64(v135));
    unsigned int v137 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v137, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v136)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v137->i64[0], 0), (uint64x2_t)vnegq_s64(v136)));
    if (v131 + v135 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v137[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v136)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v137[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v136))), v134);
    }
    unint64_t v66 = v132;
  }
  else
  {
    int v85 = 1;
    int8x16_t v134 = 0uLL;
  }
  int8x16_t v138 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v89, (int16x8_t)v89));
  unint64_t v139 = vpaddq_s32((int32x4_t)v138, (int32x4_t)v138).u64[0];
  v140.i64[0] = v139;
  v140.i64[1] = HIDWORD(v139);
  int64x2_t v141 = v140;
  unint64_t v142 = vaddvq_s64(v140);
  if (v142 < 0x81)
  {
    int32x2_t v143 = vzip1_s32(*(int32x2_t *)v138.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v138, v138, 8uLL));
    v144.i64[0] = v143.u32[0];
    v144.i64[1] = v143.u32[1];
    int64x2_t v145 = v144;
    int32x4_t v146 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v89.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL)));
    unint64_t v147 = v142 + v66;
    if (v68 >= v142 + v66)
    {
      unint64_t v148 = v66 & 0x3F;
      int64x2_t v149 = vaddq_s64(vzip1q_s64((int64x2_t)0, v141), vdupq_n_s64(v148));
      uint64_t v150 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
      int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v150, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v149)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v150->i64[0], 0), (uint64x2_t)vnegq_s64(v149)));
      if (v142 + v148 >= 0x81) {
        int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v150[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v149)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v150[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v149))), v125);
      }
      unint64_t v66 = v147;
    }
    else
    {
      int v85 = 1;
    }
    int64x2_t v151 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v145));
    *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
    *(int32x2_t *)v151.i8 = vmovn_s64(v151);
    int16x8_t v152 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v151);
    int16x8_t v153 = (int16x8_t)vshlq_u32((uint32x4_t)v152, (uint32x4_t)vnegq_s32(v146));
    *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
    *(int16x4_t *)v153.i8 = vmovn_s32((int32x4_t)v153);
    int8x16_t v125 = (int8x16_t)vzip1q_s16(v152, v153);
  }
  else
  {
    int v85 = 1;
  }
  int8x16_t v154 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v88, (int16x8_t)v88));
  unint64_t v155 = vpaddq_s32((int32x4_t)v154, (int32x4_t)v154).u64[0];
  v156.i64[0] = v155;
  v156.i64[1] = HIDWORD(v155);
  int64x2_t v157 = v156;
  unint64_t v158 = vaddvq_s64(v156);
  if (v158 <= 0x80)
  {
    int32x2_t v160 = vzip1_s32(*(int32x2_t *)v154.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v154, v154, 8uLL));
    v161.i64[0] = v160.u32[0];
    v161.i64[1] = v160.u32[1];
    int64x2_t v162 = v161;
    int32x4_t v163 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v88.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL)));
    unint64_t v164 = v158 + v66;
    if (v68 >= v158 + v66)
    {
      unint64_t v166 = v66 & 0x3F;
      int64x2_t v167 = vaddq_s64(vzip1q_s64((int64x2_t)0, v157), vdupq_n_s64(v166));
      int v168 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
      int8x16_t v165 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v168, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v167)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v168->i64[0], 0), (uint64x2_t)vnegq_s64(v167)));
      if (v158 + v166 >= 0x81) {
        int8x16_t v165 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v168[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v167)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v168[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v167))), v165);
      }
      unint64_t v66 = v164;
    }
    else
    {
      int8x16_t v165 = 0uLL;
      int v85 = 1;
    }
    int64x2_t v169 = (int64x2_t)vshlq_u64((uint64x2_t)v165, (uint64x2_t)vnegq_s64(v162));
    *(int32x2_t *)v165.i8 = vmovn_s64((int64x2_t)v165);
    *(int32x2_t *)v169.i8 = vmovn_s64(v169);
    int16x8_t v170 = (int16x8_t)vzip1q_s32((int32x4_t)v165, (int32x4_t)v169);
    int16x8_t v171 = (int16x8_t)vshlq_u32((uint32x4_t)v170, (uint32x4_t)vnegq_s32(v163));
    *(int16x4_t *)v170.i8 = vmovn_s32((int32x4_t)v170);
    *(int16x4_t *)v171.i8 = vmovn_s32((int32x4_t)v171);
    int16x8_t v159 = vzip1q_s16(v170, v171);
  }
  else
  {
    int v85 = 1;
    int16x8_t v159 = 0uLL;
  }
  int8x16_t v172 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v87, (int16x8_t)v87));
  unint64_t v173 = vpaddq_s32((int32x4_t)v172, (int32x4_t)v172).u64[0];
  v174.i64[0] = v173;
  v174.i64[1] = HIDWORD(v173);
  int64x2_t v175 = v174;
  unint64_t v176 = vaddvq_s64(v174);
  if (v176 > 0x80 || v68 < v176 + v66) {
    goto LABEL_81;
  }
  int64x2_t v177 = vaddq_s64(vzip1q_s64((int64x2_t)0, v175), vdupq_n_s64(v66 & 0x3F));
  unsigned int v178 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
  int8x16_t v179 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v178, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v177)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178->i64[0], 0), (uint64x2_t)vnegq_s64(v177)));
  if (v176 + (v66 & 0x3F) >= 0x81) {
    int8x16_t v179 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v177)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v178[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v177))), v179);
  }
  if (v85 || (uint64_t v9 = (a4 & 0x3Fu) + 1, 8 * ((a3 & 7) + v9) - (v176 + v66) >= 9))
  {
LABEL_81:
    uint64_t v9 = 0;
    unint64_t v180 = (unint64_t)&v235;
LABEL_82:
    *(void *)(v180 & 0xFFFFFFFFFFFFFFF8) |= 1023 << ((8 * v180) & 0x30);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int v181 = (uint64_t *)((char *)a1->i64 + a2);
    unsigned int v182 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *int v181 = 0;
    v181[1] = 0;
    int v17 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *unsigned int v182 = 0;
    v182[1] = 0;
    goto LABEL_83;
  }
  if (v121 == 2)
  {
    uint64_t v9 = 0;
    unint64_t v180 = (unint64_t)&v236;
    goto LABEL_82;
  }
  int32x2_t v184 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x2_t v185 = vzip1_s32(*(int32x2_t *)v127.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL));
  v186.i64[0] = v184.u32[0];
  v186.i64[1] = v184.u32[1];
  int64x2_t v187 = v186;
  v186.i64[0] = v185.u32[0];
  v186.i64[1] = v185.u32[1];
  int64x2_t v188 = (int64x2_t)vshlq_u64((uint64x2_t)v109, (uint64x2_t)vnegq_s64(v187));
  int64x2_t v189 = (int64x2_t)vshlq_u64((uint64x2_t)v134, (uint64x2_t)vnegq_s64(v186));
  *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
  *(int32x2_t *)v188.i8 = vmovn_s64(v188);
  *(int32x2_t *)v134.i8 = vmovn_s64((int64x2_t)v134);
  *(int32x2_t *)v189.i8 = vmovn_s64(v189);
  int16x8_t v190 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v188);
  int16x8_t v191 = (int16x8_t)vzip1q_s32((int32x4_t)v134, (int32x4_t)v189);
  int16x8_t v192 = (int16x8_t)vshlq_u32((uint32x4_t)v190, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v110.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  int16x8_t v193 = (int16x8_t)vshlq_u32((uint32x4_t)v191, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v126.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  *(int16x4_t *)v190.i8 = vmovn_s32((int32x4_t)v190);
  *(int16x4_t *)v192.i8 = vmovn_s32((int32x4_t)v192);
  *(int16x4_t *)v191.i8 = vmovn_s32((int32x4_t)v191);
  *(int16x4_t *)v193.i8 = vmovn_s32((int32x4_t)v193);
  v194.i64[0] = 0x10001000100010;
  v194.i64[1] = 0x10001000100010;
  v195.i64[0] = 0x10001000100010;
  v195.i64[1] = 0x10001000100010;
  int16x8_t v196 = vzip1q_s16(v190, v192);
  v192.i64[0] = 0xF000F000F000FLL;
  v192.i64[1] = 0xF000F000F000FLL;
  int16x8_t v197 = vsubq_s16(v194, (int16x8_t)v110);
  int16x8_t v198 = vzip1q_s16(v191, v193);
  v193.i64[0] = 0xF000F000F000FLL;
  v193.i64[1] = 0xF000F000F000FLL;
  int32x2_t v199 = vzip1_s32(*(int32x2_t *)v172.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL));
  v200.i64[0] = 0xF000F000F000FLL;
  v200.i64[1] = 0xF000F000F000FLL;
  v201.i64[0] = 0x10001000100010;
  v201.i64[1] = 0x10001000100010;
  int16x8_t v202 = vaddq_s16((int16x8_t)v110, v192);
  int16x8_t v203 = vaddq_s16((int16x8_t)v126, v193);
  int16x8_t v204 = vshlq_s16(v198, vsubq_s16(v195, (int16x8_t)v126));
  int16x8_t v205 = vshlq_s16((int16x8_t)v125, vsubq_s16(v195, (int16x8_t)v89));
  int16x8_t v206 = vshlq_s16(v159, vsubq_s16(v195, (int16x8_t)v88));
  v186.i64[0] = v199.u32[0];
  v186.i64[1] = v199.u32[1];
  int32x4_t v207 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v87.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL)));
  int16x8_t v208 = vaddq_s16((int16x8_t)v87, v200);
  int16x8_t v209 = vsubq_s16(v201, (int16x8_t)v87);
  int16x8_t v210 = vdupq_n_s16((unsigned __int16)v67 >> 6);
  int8x16_t v211 = (int8x16_t)vshlq_s16(vshlq_s16(v196, v197), v202);
  int16x8_t v212 = vshlq_s16(v204, v203);
  int64x2_t v213 = (int64x2_t)vshlq_u64((uint64x2_t)v179, (uint64x2_t)vnegq_s64(v186));
  *(int32x2_t *)v204.i8 = vmovn_s64((int64x2_t)v179);
  *(int32x2_t *)v213.i8 = vmovn_s64(v213);
  int16x8_t v214 = (int16x8_t)vzip1q_s32((int32x4_t)v204, (int32x4_t)v213);
  int16x8_t v215 = (int16x8_t)vshlq_u32((uint32x4_t)v214, (uint32x4_t)vnegq_s32(v207));
  *(int16x4_t *)v214.i8 = vmovn_s32((int32x4_t)v214);
  *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v215);
  int16x8_t v216 = vaddq_s16((int16x8_t)vandq_s8(v211, v93), v212);
  int8x16_t v217 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v211.i8, 0);
  int8x16_t v218 = (int8x16_t)vsubq_s16(v216, (int16x8_t)vandq_s8(v217, v93));
  int8x16_t v219 = (int8x16_t)vsubq_s16(vshlq_s16(v205, vaddq_s16((int16x8_t)v89, v193)), (int16x8_t)vandq_s8(v217, v92));
  int8x16_t v220 = (int8x16_t)vsubq_s16(vshlq_s16(v206, vaddq_s16((int16x8_t)v88, v193)), (int16x8_t)vandq_s8(v217, v90));
  int8x16_t v221 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v214, v215), v209), v208), (int16x8_t)vandq_s8(v217, v86));
  v222.i64[0] = 0x1000100010001;
  v222.i64[1] = 0x1000100010001;
  if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v222)))
  {
    int8x16_t v223 = v218;
    v223.i16[0] = v218.i16[7];
    v223.i16[7] = v218.i16[0];
    int8x16_t v224 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
    int8x16_t v225 = vbslq_s8(v224, v223, v218);
    int8x16_t v226 = (int8x16_t)vaddq_s16((int16x8_t)v225, (int16x8_t)vandq_s8(vqtbl1q_s8(v225, (int8x16_t)xmmword_242EA7480), v224));
    int8x16_t v218 = (int8x16_t)vaddq_s16((int16x8_t)v226, (int16x8_t)vandq_s8(vqtbl1q_s8(v226, (int8x16_t)xmmword_242EA7490), v224));
    int8x16_t v227 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v219, (int8x16_t)xmmword_242EA74A0), v224), (int16x8_t)v219);
    int8x16_t v219 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v227, (int8x16_t)xmmword_242EA74B0), v224), (int16x8_t)v227);
    int8x16_t v228 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v220, (int8x16_t)xmmword_242EA74C0), v224), (int16x8_t)v220);
    int8x16_t v220 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v228, (int8x16_t)xmmword_242EA74D0), v224), (int16x8_t)v228);
    int8x16_t v229 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v221, (int8x16_t)xmmword_242EA74E0), v224), (int16x8_t)v221);
    int8x16_t v221 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v229, (int8x16_t)xmmword_242EA74F0), v224), (int16x8_t)v229);
  }
  int32x4_t v230 = (int32x4_t)vshlq_n_s16(vaddq_s16(v210, (int16x8_t)v218), 6uLL);
  int32x4_t v231 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v219, v210), 6uLL);
  int32x4_t v232 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v220, v210), 6uLL);
  int32x4_t v233 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v221, v210), 6uLL);
  *a1 = vuzp1q_s32(v230, v232);
  *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v230, v232);
  unint64_t v234 = (int32x4_t *)((char *)a1 + 2 * a2);
  *unint64_t v234 = vuzp1q_s32(v231, v233);
  *(int32x4_t *)((char *)v234 + a2) = vuzp2q_s32(v231, v233);
  return v9;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)0>::compressSubblock(unint64_t a1, char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, int16x4_t a14)
{
  int32x4_t v15 = *(int32x4_t *)((char *)a3 + a4);
  uint64_t v16 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v17 = *(int32x4_t *)((char *)v16 + a4);
  int8x16_t v18 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v15), 6uLL);
  int8x16_t v19 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*v16, v17), 6uLL);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v15), 6uLL);
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v18.i8, 0);
  int8x16_t v22 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip2q_s32(*v16, v17), 6uLL);
  int16x8_t v23 = vshlq_n_s16(vsubq_s16((int16x8_t)v19, (int16x8_t)v21), 6uLL);
  int16x8_t v24 = vshlq_n_s16(vsubq_s16((int16x8_t)v22, (int16x8_t)v21), 6uLL);
  v25.i64[0] = 0x5000500050005;
  v25.i64[1] = 0x5000500050005;
  int8x16_t v26 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v18, (int16x8_t)v21), 6uLL), v25);
  int8x16_t v27 = (int8x16_t)vshlq_s16(v23, v25);
  int16x8_t v28 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, (int16x8_t)v21), 6uLL), v25);
  int16x8_t v29 = vshlq_s16(v24, v25);
  v23.i16[0] = vmaxvq_s16((int16x8_t)v26);
  v24.i16[0] = vminvq_s16((int16x8_t)v26);
  int16x8_t v30 = vdupq_lane_s16(*(int16x4_t *)v23.i8, 0);
  int16x8_t v31 = vdupq_lane_s16(*(int16x4_t *)v24.i8, 0);
  v25.i64[0] = 0x8000800080008000;
  v25.i64[1] = 0x8000800080008000;
  int16x8_t v32 = vmaxq_s16(v30, v25);
  v33.i64[0] = 0x8000800080008000;
  v33.i64[1] = 0x8000800080008000;
  int16x8_t v34 = vminq_s16(v31, v33);
  int16x8_t v35 = vzip1q_s16(v30, v31);
  int8x16_t v36 = (int8x16_t)vceqzq_s16(v35);
  v37.i64[0] = 0x10001000100010;
  v37.i64[1] = 0x10001000100010;
  int16x8_t v38 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v37, vclsq_s16(v35)), v36);
  v36.i16[0] = vmaxvq_s16((int16x8_t)v27);
  a14.i16[0] = vminvq_s16((int16x8_t)v27);
  int16x8_t v39 = vdupq_lane_s16(*(int16x4_t *)v36.i8, 0);
  int16x8_t v40 = vdupq_lane_s16(a14, 0);
  int16x8_t v41 = vpmaxq_s16(v38, v38);
  int16x8_t v42 = vmaxq_s16(v32, v39);
  int16x8_t v43 = vminq_s16(v34, v40);
  int16x8_t v44 = vzip1q_s16(v39, v40);
  int16x8_t v45 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v37, vclsq_s16(v44)), (int8x16_t)vceqzq_s16(v44));
  int16x8_t v46 = vpmaxq_s16(v45, v45);
  v45.i16[0] = vmaxvq_s16(v28);
  int16x8_t v47 = vdupq_lane_s16(*(int16x4_t *)v45.i8, 0);
  v40.i16[0] = vminvq_s16(v28);
  int16x8_t v48 = vdupq_lane_s16(*(int16x4_t *)v40.i8, 0);
  int16x8_t v49 = vmaxq_s16(v42, v47);
  int16x8_t v50 = vminq_s16(v43, v48);
  int16x8_t v51 = vzip1q_s16(v47, v48);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v37, vclsq_s16(v51)), (int8x16_t)vceqzq_s16(v51));
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  v52.i16[0] = vmaxvq_s16(v29);
  v14.i16[0] = vminvq_s16(v29);
  int16x8_t v54 = vdupq_lane_s16(*(int16x4_t *)v52.i8, 0);
  int16x8_t v55 = vdupq_lane_s16(v14, 0);
  int16x8_t v56 = vmaxq_s16(v49, v54);
  int16x8_t v57 = vminq_s16(v50, v55);
  int16x8_t v58 = vzip1q_s16(v54, v55);
  int16x8_t v59 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v37, vclsq_s16(v58)), (int8x16_t)vceqzq_s16(v58));
  int16x8_t v60 = vpmaxq_s16(v59, v59);
  int8x16_t v61 = (int8x16_t)vmaxq_s16(vmaxq_s16(v41, v46), vmaxq_s16(v53, v60));
  int16x8_t v62 = vclzq_s16(vsubq_s16(v56, v57));
  int8x16_t v63 = (int8x16_t)vsubq_s16(v37, v62);
  int8x16_t v64 = (int8x16_t)vcgtq_s16((int16x8_t)v61, (int16x8_t)v63);
  int8x16_t v65 = vbslq_s8(v64, v63, v61);
  if (vmaxvq_s16((int16x8_t)v65))
  {
    v66.i64[0] = -1;
    v66.i64[1] = -1;
    v67.i64[0] = 0xF000F000F000FLL;
    v67.i64[1] = 0xF000F000F000FLL;
    int8x16_t v68 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v66, vsubq_s16(v67, v62)), v57), v64);
    v69.i64[0] = 0x8000800080008;
    v69.i64[1] = 0x8000800080008;
    v67.i64[0] = 0x3000300030003;
    v67.i64[1] = 0x3000300030003;
    int8x16_t v70 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v65), (int8x16_t)v67);
    int16x8_t v71 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v65, v41), v67), (int16x8_t)0);
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v65, v46), v67), (int16x8_t)0);
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v65, v53), v67), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v65, v60), v67), (int16x8_t)0);
    int8x16_t v75 = (int8x16_t)vsubq_s16((int16x8_t)v65, v71);
    int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v65, v72);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v65, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v65, v74);
    v67.i64[0] = 0x4000400040004;
    v67.i64[1] = 0x4000400040004;
    int8x16_t v79 = vbicq_s8((int8x16_t)v67, (int8x16_t)vceqq_s16(vaddq_s16(v74, v73), vnegq_s16(vaddq_s16(v71, v72))));
    int8x16_t v80 = vorrq_s8(vorrq_s8(v70, vandq_s8(v64, v69)), v79);
    if (a5 < 4 || a6 < 2)
    {
      int16x8_t v141 = (int16x8_t)v78;
    }
    else
    {
      int8x16_t v333 = v68;
      int8x16_t v334 = (int8x16_t)v28;
      int8x16_t v335 = (int8x16_t)v29;
      int16x8_t v81 = vsubq_s16((int16x8_t)v18, (int16x8_t)vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7520));
      int8x16_t v82 = v19;
      v82.i16[7] = v18.i16[7];
      int8x16_t v83 = v20;
      v83.i16[7] = v18.i16[7];
      int8x16_t v84 = v22;
      v84.i16[7] = v18.i16[7];
      int16x8_t v85 = v81;
      v85.i16[0] = v81.i16[7];
      int8x16_t v332 = v22;
      v85.i16[7] = v81.i16[0];
      int16x8_t v86 = vshlq_n_s16(v85, 6uLL);
      v85.i64[0] = 0x5000500050005;
      v85.i64[1] = 0x5000500050005;
      int8x16_t v87 = (int8x16_t)vshlq_s16(v86, v85);
      int8x16_t v88 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v19, (int16x8_t)vqtbl1q_s8(v82, (int8x16_t)xmmword_242EA7530)), 6uLL), v85);
      int8x16_t v89 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_242EA7540)), 6uLL), v85);
      int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v22, (int16x8_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_242EA7550)), 6uLL), v85);
      v85.i16[0] = vmaxvq_s16((int16x8_t)v87);
      v29.i16[0] = vminvq_s16((int16x8_t)v87);
      int16x8_t v91 = vdupq_lane_s16(*(int16x4_t *)v85.i8, 0);
      int16x8_t v92 = vdupq_lane_s16(*(int16x4_t *)v29.i8, 0);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v94 = vmaxq_s16(v91, v93);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v95 = vminq_s16(v92, v93);
      int16x8_t v96 = vzip1q_s16(v91, v92);
      int8x16_t v97 = (int8x16_t)vceqzq_s16(v96);
      v98.i64[0] = 0x10001000100010;
      v98.i64[1] = 0x10001000100010;
      int16x8_t v99 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v98, vclsq_s16(v96)), v97);
      int16x8_t v100 = vpmaxq_s16(v99, v99);
      v99.i16[0] = vmaxvq_s16((int16x8_t)v88);
      v97.i16[0] = vminvq_s16((int16x8_t)v88);
      int16x8_t v101 = vdupq_lane_s16(*(int16x4_t *)v99.i8, 0);
      int16x8_t v102 = vdupq_lane_s16(*(int16x4_t *)v97.i8, 0);
      int16x8_t v103 = vmaxq_s16(v94, v101);
      int16x8_t v104 = vminq_s16(v95, v102);
      int16x8_t v105 = vzip1q_s16(v101, v102);
      int8x16_t v106 = (int8x16_t)vceqzq_s16(v105);
      int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v98, vclsq_s16(v105)), v106);
      int16x8_t v108 = vpmaxq_s16(v107, v107);
      v107.i16[0] = vmaxvq_s16((int16x8_t)v89);
      v106.i16[0] = vminvq_s16((int16x8_t)v89);
      int16x8_t v109 = vdupq_lane_s16(*(int16x4_t *)v107.i8, 0);
      int16x8_t v110 = vdupq_lane_s16(*(int16x4_t *)v106.i8, 0);
      int16x8_t v111 = vmaxq_s16(v103, v109);
      int16x8_t v112 = vminq_s16(v104, v110);
      int16x8_t v113 = vzip1q_s16(v109, v110);
      int8x16_t v114 = (int8x16_t)vceqzq_s16(v113);
      int16x8_t v115 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v98, vclsq_s16(v113)), v114);
      int16x8_t v116 = vpmaxq_s16(v115, v115);
      v115.i16[0] = vmaxvq_s16((int16x8_t)v90);
      v114.i16[0] = vminvq_s16((int16x8_t)v90);
      int16x8_t v117 = vdupq_lane_s16(*(int16x4_t *)v115.i8, 0);
      int16x8_t v118 = vdupq_lane_s16(*(int16x4_t *)v114.i8, 0);
      int16x8_t v119 = vmaxq_s16(v111, v117);
      int16x8_t v120 = vminq_s16(v112, v118);
      int16x8_t v121 = vzip1q_s16(v117, v118);
      int16x8_t v122 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v98, vclsq_s16(v121)), (int8x16_t)vceqzq_s16(v121));
      int16x8_t v123 = vpmaxq_s16(v122, v122);
      int8x16_t v124 = (int8x16_t)vmaxq_s16(vmaxq_s16(v100, v108), vmaxq_s16(v116, v123));
      int16x8_t v125 = vclzq_s16(vsubq_s16(v119, v120));
      int8x16_t v126 = (int8x16_t)vsubq_s16(v98, v125);
      int8x16_t v127 = (int8x16_t)vcgtq_s16((int16x8_t)v124, (int16x8_t)v126);
      int8x16_t v128 = vbslq_s8(v127, v126, v124);
      int16x8_t v129 = vsubq_s16((int16x8_t)v128, v100);
      v100.i64[0] = 0x3000300030003;
      v100.i64[1] = 0x3000300030003;
      int16x8_t v130 = vmaxq_s16(vminq_s16(v129, v100), (int16x8_t)0);
      int8x16_t v131 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v128, v108), v100), (int16x8_t)0);
      int16x8_t v132 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v128, v116), v100), (int16x8_t)0);
      int16x8_t v133 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v128, v123), v100), (int16x8_t)0);
      int8x16_t v134 = (int8x16_t)vsubq_s16((int16x8_t)v128, v130);
      int8x16_t v135 = (int8x16_t)vsubq_s16((int16x8_t)v128, (int16x8_t)v131);
      int8x16_t v136 = (int8x16_t)vsubq_s16((int16x8_t)v128, v132);
      int8x16_t v137 = (int8x16_t)vsubq_s16((int16x8_t)v128, v133);
      int8x16_t v138 = (int8x16_t)vceqq_s16(vaddq_s16(v133, v132), vnegq_s16(vaddq_s16(v130, (int16x8_t)v131)));
      v131.i64[0] = 0x4000400040004;
      v131.i64[1] = 0x4000400040004;
      int8x16_t v139 = vbicq_s8(v131, v138);
      v131.i64[0] = 0x7000700070007;
      v131.i64[1] = 0x7000700070007;
      int16x8_t v140 = (int16x8_t)vandq_s8(v63, v64);
      int16x8_t v141 = (int16x8_t)v78;
      int16x8_t v142 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(v140, vaddq_s16((int16x8_t)v79, (int16x8_t)v79)), (int16x8_t)v75, (int16x8_t)v131), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v77, (int16x8_t)v76), (int16x8_t)v78), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v126, v127), vaddq_s16((int16x8_t)v139, (int16x8_t)v139)), (int16x8_t)v134, (int16x8_t)v131), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v136, (int16x8_t)v135), (int16x8_t)v137), 3uLL))),
               0);
      if (vaddvq_s16(v142))
      {
        v143.i64[0] = 0x2000200020002;
        v143.i64[1] = 0x2000200020002;
        int8x16_t v144 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v128), v143);
        v143.i64[0] = 0x9000900090009;
        v143.i64[1] = 0x9000900090009;
        v145.i64[0] = -1;
        v145.i64[1] = -1;
        int8x16_t v146 = vorrq_s8(vorrq_s8(v144, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v127, v143), (int16x8_t)vmvnq_s8(v127))), v139);
        v143.i64[0] = 0xF000F000F000FLL;
        v143.i64[1] = 0xF000F000F000FLL;
        int8x16_t v147 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v145, vsubq_s16((int16x8_t)v143, v125)), v120), v127);
        int8x16_t v148 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v142, 0xFuLL));
        v21.i16[0] = vbslq_s8(v148, vextq_s8(v18, v18, 0xEuLL), v21).u16[0];
        int8x16_t v26 = vbslq_s8(v148, v87, v26);
        int8x16_t v27 = vbslq_s8(v148, v88, v27);
        int16x8_t v28 = (int16x8_t)vbslq_s8(v148, v89, v334);
        int16x8_t v29 = (int16x8_t)vbslq_s8(v148, v90, v335);
        int8x16_t v75 = vbslq_s8(v148, v134, v75);
        int8x16_t v76 = vbslq_s8(v148, v135, v76);
        int8x16_t v77 = vbslq_s8(v148, v136, v77);
        int16x8_t v141 = (int16x8_t)vbslq_s8(v148, v137, v78);
        int8x16_t v68 = vbslq_s8(v148, v147, v333);
        int8x16_t v65 = vbslq_s8(v148, v128, v65);
        int8x16_t v80 = vbslq_s8(v148, v146, v80);
      }
      else
      {
        int16x8_t v28 = (int16x8_t)v334;
        int16x8_t v29 = (int16x8_t)v335;
        int8x16_t v68 = v333;
      }
      int8x16_t v22 = v332;
    }
    v151.i64[0] = 0x8000800080008;
    v151.i64[1] = 0x8000800080008;
    int16x8_t v152 = (int16x8_t)vandq_s8(v80, v151);
    v153.i64[0] = 0x3000300030003;
    v153.i64[1] = 0x3000300030003;
    v154.i64[0] = 0x2000200020002;
    v154.i64[1] = 0x2000200020002;
    int8x16_t v155 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v80, v153), v154);
    v154.i64[0] = 0x10001000100010;
    v154.i64[1] = 0x10001000100010;
    int64x2_t v156 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v157 = 8 * (a1 & 7);
    if ((unint64_t)((__int16)(vbicq_s8(v65, (int8x16_t)vceqzq_s16(v152)).u16[0]
                                    + ((2 * v80.i16[0]) & 8)
                                    + vandq_s8(v155, (int8x16_t)v154).u16[0]
                                    - v75.i16[0]
                                    + 8 * v75.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v77, vaddq_s16((int16x8_t)v76, v141)).u16[0])
                          + 23) >= 0x140)
    {
      if (v157) {
        uint64_t v159 = *v156 & ~(-1 << v157);
      }
      else {
        uint64_t v159 = 0;
      }
      v286.i64[0] = 0x5000500050005;
      v286.i64[1] = 0x5000500050005;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      int8x16_t v288 = (int8x16_t)vshlq_u16(v287, v286);
      uint16x8_t v289 = (uint16x8_t)vandq_s8(v288, v18);
      int32x4_t v290 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v289.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v289), (uint32x4_t)xmmword_242EA7B80));
      v291.i64[0] = 0xA0000000ALL;
      v291.i64[1] = 0xA0000000ALL;
      int32x4_t v292 = vpaddq_s32(v291, v291);
      v293.i64[0] = v290.u32[0];
      v293.i64[1] = v290.u32[1];
      uint64x2_t v294 = (uint64x2_t)v293;
      v293.i64[0] = v290.u32[2];
      v293.i64[1] = v290.u32[3];
      uint64x2_t v295 = (uint64x2_t)v293;
      v293.i64[0] = v292.u32[0];
      v293.i64[1] = v292.u32[1];
      int64x2_t v296 = v293;
      v293.i64[0] = v292.u32[2];
      v293.i64[1] = v292.u32[3];
      uint64x2_t v297 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v296);
      uint64x2_t v298 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v293);
      int64x2_t v299 = vpaddq_s64((int64x2_t)vshlq_u64(v294, v297), (int64x2_t)vshlq_u64(v295, v298));
      int64x2_t v300 = vpaddq_s64(v296, v293);
      uint64_t v301 = v300.i64[1];
      uint64_t v302 = v300.i64[0];
      unint64_t v303 = v300.i64[0] + v157;
      unint64_t v304 = (v299.i64[0] << v157) | v159;
      if (v300.i64[0] + v157 >= 0x40)
      {
        *int64x2_t v156 = v304;
        unint64_t v304 = (unint64_t)v299.i64[0] >> (-8 * (a1 & 7u));
        if (!v157) {
          unint64_t v304 = 0;
        }
      }
      unint64_t v305 = v304 | (v299.i64[1] << v303);
      if ((v303 & 0x3F) + v300.i64[1] >= 0x40)
      {
        *(void *)((char *)v156 + ((v303 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v299.i64[1] >> -(v303 & 0x3F);
        if ((v303 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      unint64_t v306 = v303 + v300.i64[1];
      uint16x8_t v307 = (uint16x8_t)vandq_s8(v288, v19);
      int32x4_t v308 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v307.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v307), (uint32x4_t)xmmword_242EA7B80));
      v309.i64[0] = v308.u32[0];
      v309.i64[1] = v308.u32[1];
      uint64x2_t v310 = v309;
      v309.i64[0] = v308.u32[2];
      v309.i64[1] = v308.u32[3];
      int64x2_t v311 = vpaddq_s64((int64x2_t)vshlq_u64(v310, v297), (int64x2_t)vshlq_u64(v309, v298));
      unint64_t v312 = (v311.i64[0] << v306) | v305;
      if (v302 + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v156 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v312;
        unint64_t v312 = (unint64_t)v311.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v312 = 0;
        }
      }
      unint64_t v313 = v302 + v306;
      unint64_t v314 = v312 | (v311.i64[1] << v313);
      if ((v313 & 0x3F) + v301 >= 0x40)
      {
        *(void *)((char *)v156 + ((v313 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v314;
        if ((v313 & 0x3F) != 0) {
          unint64_t v314 = (unint64_t)v311.i64[1] >> -(v313 & 0x3F);
        }
        else {
          unint64_t v314 = 0;
        }
      }
      unint64_t v315 = v313 + v301;
      uint16x8_t v316 = (uint16x8_t)vandq_s8(v288, v20);
      int32x4_t v317 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)xmmword_242EA7B80));
      v318.i64[0] = v317.u32[0];
      v318.i64[1] = v317.u32[1];
      uint64x2_t v319 = v318;
      v318.i64[0] = v317.u32[2];
      v318.i64[1] = v317.u32[3];
      int64x2_t v320 = vpaddq_s64((int64x2_t)vshlq_u64(v319, v297), (int64x2_t)vshlq_u64(v318, v298));
      unint64_t v321 = (v320.i64[0] << v315) | v314;
      if (v302 + (v315 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v156 + ((v315 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v320.i64[0] >> -(v315 & 0x3F);
        if ((v315 & 0x3F) == 0) {
          unint64_t v321 = 0;
        }
      }
      unint64_t v322 = v302 + v315;
      unint64_t v323 = v321 | (v320.i64[1] << v322);
      if ((v322 & 0x3F) + v301 >= 0x40)
      {
        *(void *)((char *)v156 + ((v322 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        if ((v322 & 0x3F) != 0) {
          unint64_t v323 = (unint64_t)v320.i64[1] >> -(v322 & 0x3F);
        }
        else {
          unint64_t v323 = 0;
        }
      }
      unint64_t v324 = v322 + v301;
      uint16x8_t v325 = (uint16x8_t)vandq_s8(v288, v22);
      int32x4_t v326 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v325.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v325), (uint32x4_t)xmmword_242EA7B80));
      v327.i64[0] = v326.u32[0];
      v327.i64[1] = v326.u32[1];
      uint64x2_t v328 = v327;
      v327.i64[0] = v326.u32[2];
      v327.i64[1] = v326.u32[3];
      int64x2_t v329 = vpaddq_s64((int64x2_t)vshlq_u64(v328, v297), (int64x2_t)vshlq_u64(v327, v298));
      unint64_t v330 = (v329.i64[0] << v324) | v323;
      if (v302 + (v324 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v156 + ((v324 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330;
        unint64_t v330 = (unint64_t)v329.i64[0] >> -(v324 & 0x3F);
        if ((v324 & 0x3F) == 0) {
          unint64_t v330 = 0;
        }
      }
      unint64_t v331 = v302 + v324;
      if ((v331 & 0x3F) + v301 >= 0x40) {
        *(void *)((char *)v156 + ((v331 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330 | (v329.i64[1] << (v331 & 0x3F));
      }
      char v149 = 39;
      unint64_t result = 40;
    }
    else
    {
      if (v157) {
        uint64_t v158 = *v156 & ~(-1 << v157);
      }
      else {
        uint64_t v158 = 0;
      }
      if (v65.i16[0]) {
        uint64_t v160 = (16 * v65.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v160 = 0;
      }
      *a2 = v80.i8[0] << 6;
      unint64_t v161 = (v160 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v21.i16[0] & 0x3FF) << 8) | v80.i8[0] & 0xF) >> 2;
      unint64_t v162 = (v161 << v157) | v158;
      if (v157 >= 0x30)
      {
        *int64x2_t v156 = v162;
        unint64_t v162 = v161 >> (-8 * (a1 & 7u));
      }
      unint64_t v163 = v157 + 16;
      int8x16_t v164 = (int8x16_t)vsubq_s16((int16x8_t)v65, (int16x8_t)v75);
      int8x16_t v165 = (int8x16_t)vsubq_s16((int16x8_t)v65, (int16x8_t)v76);
      int8x16_t v166 = (int8x16_t)vsubq_s16((int16x8_t)v65, (int16x8_t)v77);
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v65, v141);
      *(uint8x8_t *)v164.i8 = vqmovn_u16((uint16x8_t)v164);
      *(uint8x8_t *)v165.i8 = vqmovn_u16((uint16x8_t)v165);
      *(uint8x8_t *)v166.i8 = vqmovn_u16((uint16x8_t)v166);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      v164.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v164, v165), (int16x8_t)vzip1q_s8(v166, v167)).u32[0];
      v166.i64[0] = 0x202020202020202;
      v166.i64[1] = 0x202020202020202;
      int8x16_t v168 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v80.i8, (int8x8_t)0x4000400040004)))), v166);
      v166.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v166.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v167.i64[0] = -1;
      v167.i64[1] = -1;
      uint8x16_t v169 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v167, (uint8x16_t)vorrq_s8(v168, v166)), (int8x16_t)v164.u32[0]);
      int16x8_t v170 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v168.i8);
      uint16x8_t v171 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v169.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v170)), (int16x8_t)vmovl_high_u8(v169));
      uint16x8_t v172 = (uint16x8_t)vpaddq_s16(v170, (int16x8_t)vmovl_high_u8((uint8x16_t)v168));
      int32x4_t v173 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v172.i8);
      int32x4_t v174 = (int32x4_t)vmovl_high_u16(v172);
      int32x4_t v175 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v171.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v173)), (int32x4_t)vshlq_u32(vmovl_high_u16(v171), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v174)));
      int32x4_t v176 = vpaddq_s32(v173, v174);
      v177.i64[0] = v175.u32[0];
      v177.i64[1] = v175.u32[1];
      uint64x2_t v178 = (uint64x2_t)v177;
      v177.i64[0] = v175.u32[2];
      v177.i64[1] = v175.u32[3];
      uint64x2_t v179 = (uint64x2_t)v177;
      v177.i64[0] = v176.u32[0];
      v177.i64[1] = v176.u32[1];
      int64x2_t v180 = v177;
      v177.i64[0] = v176.u32[2];
      v177.i64[1] = v176.u32[3];
      int64x2_t v181 = vpaddq_s64((int64x2_t)vshlq_u64(v178, (uint64x2_t)vzip1q_s64((int64x2_t)0, v180)), (int64x2_t)vshlq_u64(v179, (uint64x2_t)vzip1q_s64((int64x2_t)0, v177)));
      int64x2_t v182 = vpaddq_s64(v180, v177);
      uint64_t v183 = (v157 + 16) & 0x38;
      unint64_t v184 = (v181.i64[0] << v183) | v162;
      if ((unint64_t)(v182.i64[0] + v183) >= 0x40)
      {
        *(void *)((char *)v156 + ((v163 >> 3) & 8)) = v184;
        unint64_t v184 = (unint64_t)v181.i64[0] >> -(char)v183;
        if (!v183) {
          unint64_t v184 = 0;
        }
      }
      int8x16_t v185 = (int8x16_t)vceqq_s16((int16x8_t)v65, (int16x8_t)v75);
      unint64_t v186 = v182.i64[0] + v163;
      unint64_t v187 = v184 | (v181.i64[1] << v186);
      if ((v186 & 0x3F) + v182.i64[1] >= 0x40)
      {
        *(void *)((char *)v156 + ((v186 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v187;
        unint64_t v187 = (unint64_t)v181.i64[1] >> -(v186 & 0x3F);
        if ((v186 & 0x3F) == 0) {
          unint64_t v187 = 0;
        }
      }
      int16x8_t v188 = (int16x8_t)vandq_s8(v68, v185);
      unint64_t v189 = v186 + v182.i64[1];
      v190.i64[0] = -1;
      v190.i64[1] = -1;
      int16x8_t v191 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v152, v152), (int8x16_t)0, 0xEuLL), v65);
      v192.i64[0] = 0xF000F000F000FLL;
      v192.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v193 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v190, (uint16x8_t)vaddq_s16(v191, v192)), v68);
      int32x4_t v194 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v191.i8);
      int32x4_t v195 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v193.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v194)), (int32x4_t)vmovl_high_u16(v193));
      int32x4_t v196 = vpaddq_s32(v194, (int32x4_t)vmovl_high_u16((uint16x8_t)v191));
      v197.i64[0] = v195.u32[0];
      v197.i64[1] = v195.u32[1];
      uint64x2_t v198 = (uint64x2_t)v197;
      v197.i64[0] = v195.u32[2];
      v197.i64[1] = v195.u32[3];
      uint64x2_t v199 = (uint64x2_t)v197;
      v197.i64[0] = v196.u32[0];
      v197.i64[1] = v196.u32[1];
      int64x2_t v200 = v197;
      v197.i64[0] = v196.u32[2];
      v197.i64[1] = v196.u32[3];
      int64x2_t v201 = vpaddq_s64((int64x2_t)vshlq_u64(v198, (uint64x2_t)vzip1q_s64((int64x2_t)0, v200)), (int64x2_t)vshlq_u64(v199, (uint64x2_t)vzip1q_s64((int64x2_t)0, v197)));
      int64x2_t v202 = vpaddq_s64(v200, v197);
      unint64_t v203 = (v201.i64[0] << v189) | v187;
      if (v202.i64[0] + (v189 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v156 + ((v189 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v203;
        unint64_t v203 = (unint64_t)v201.i64[0] >> -(v189 & 0x3F);
        if ((v189 & 0x3F) == 0) {
          unint64_t v203 = 0;
        }
      }
      int8x16_t v204 = (int8x16_t)vceqq_s16((int16x8_t)v65, (int16x8_t)v76);
      int8x16_t v205 = (int8x16_t)vaddq_s16(v188, (int16x8_t)v26);
      unint64_t v206 = v202.i64[0] + v189;
      unint64_t v207 = v203 | (v201.i64[1] << v206);
      if ((v206 & 0x3F) + v202.i64[1] >= 0x40)
      {
        *(void *)((char *)v156 + ((v206 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v207;
        unint64_t v207 = (unint64_t)v201.i64[1] >> -(v206 & 0x3F);
        if ((v206 & 0x3F) == 0) {
          unint64_t v207 = 0;
        }
      }
      int16x8_t v208 = (int16x8_t)vandq_s8(v68, v204);
      unint64_t v209 = v206 + v202.i64[1];
      int16x8_t v210 = (int16x8_t)vextq_s8((int8x16_t)0, v75, 0xEuLL);
      v211.i64[0] = 0xF000F000F000FLL;
      v211.i64[1] = 0xF000F000F000FLL;
      v212.i64[0] = -1;
      v212.i64[1] = -1;
      uint16x8_t v213 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v212, (uint16x8_t)vaddq_s16(v210, v211)), v205);
      int32x4_t v214 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v210.i8);
      int32x4_t v215 = (int32x4_t)vmovl_high_u16((uint16x8_t)v210);
      int32x4_t v216 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v213.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v214)), (int32x4_t)vshlq_u32(vmovl_high_u16(v213), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v215)));
      int32x4_t v217 = vpaddq_s32(v214, v215);
      v218.i64[0] = v216.u32[0];
      v218.i64[1] = v216.u32[1];
      uint64x2_t v219 = (uint64x2_t)v218;
      v218.i64[0] = v216.u32[2];
      v218.i64[1] = v216.u32[3];
      uint64x2_t v220 = (uint64x2_t)v218;
      v218.i64[0] = v217.u32[0];
      v218.i64[1] = v217.u32[1];
      int64x2_t v221 = v218;
      v218.i64[0] = v217.u32[2];
      v218.i64[1] = v217.u32[3];
      int64x2_t v222 = vpaddq_s64((int64x2_t)vshlq_u64(v219, (uint64x2_t)vzip1q_s64((int64x2_t)0, v221)), (int64x2_t)vshlq_u64(v220, (uint64x2_t)vzip1q_s64((int64x2_t)0, v218)));
      int64x2_t v223 = vpaddq_s64(v221, v218);
      unint64_t v224 = (v222.i64[0] << v209) | v207;
      if (v223.i64[0] + (v209 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v156 + ((v209 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v224;
        unint64_t v224 = (unint64_t)v222.i64[0] >> -(v209 & 0x3F);
        if ((v209 & 0x3F) == 0) {
          unint64_t v224 = 0;
        }
      }
      int8x16_t v225 = (int8x16_t)vceqq_s16((int16x8_t)v65, (int16x8_t)v77);
      int8x16_t v226 = (int8x16_t)vaddq_s16((int16x8_t)v27, v208);
      unint64_t v227 = v223.i64[0] + v209;
      unint64_t v228 = v224 | (v222.i64[1] << v227);
      if ((v227 & 0x3F) + v223.i64[1] >= 0x40)
      {
        *(void *)((char *)v156 + ((v227 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v228;
        unint64_t v228 = (unint64_t)v222.i64[1] >> -(v227 & 0x3F);
        if ((v227 & 0x3F) == 0) {
          unint64_t v228 = 0;
        }
      }
      int16x8_t v229 = (int16x8_t)vandq_s8(v68, v225);
      unint64_t v230 = v227 + v223.i64[1];
      v231.i64[0] = 0xF000F000F000FLL;
      v231.i64[1] = 0xF000F000F000FLL;
      v232.i64[0] = -1;
      v232.i64[1] = -1;
      uint16x8_t v233 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v232, (uint16x8_t)vaddq_s16((int16x8_t)v76, v231)), v226);
      int32x4_t v234 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v76.i8);
      int32x4_t v235 = (int32x4_t)vmovl_high_u16((uint16x8_t)v76);
      int32x4_t v236 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v233.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v234)), (int32x4_t)vshlq_u32(vmovl_high_u16(v233), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v235)));
      int32x4_t v237 = vpaddq_s32(v234, v235);
      v238.i64[0] = v236.u32[0];
      v238.i64[1] = v236.u32[1];
      uint64x2_t v239 = (uint64x2_t)v238;
      v238.i64[0] = v236.u32[2];
      v238.i64[1] = v236.u32[3];
      uint64x2_t v240 = (uint64x2_t)v238;
      v238.i64[0] = v237.u32[0];
      v238.i64[1] = v237.u32[1];
      int64x2_t v241 = v238;
      v238.i64[0] = v237.u32[2];
      v238.i64[1] = v237.u32[3];
      int64x2_t v242 = vpaddq_s64((int64x2_t)vshlq_u64(v239, (uint64x2_t)vzip1q_s64((int64x2_t)0, v241)), (int64x2_t)vshlq_u64(v240, (uint64x2_t)vzip1q_s64((int64x2_t)0, v238)));
      int64x2_t v243 = vpaddq_s64(v241, v238);
      unint64_t v244 = (v242.i64[0] << v230) | v228;
      if (v243.i64[0] + (v230 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v156 + ((v230 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v244;
        unint64_t v244 = (unint64_t)v242.i64[0] >> -(v230 & 0x3F);
        if ((v230 & 0x3F) == 0) {
          unint64_t v244 = 0;
        }
      }
      int8x16_t v245 = (int8x16_t)vceqq_s16((int16x8_t)v65, v141);
      int8x16_t v246 = (int8x16_t)vaddq_s16(v28, v229);
      unint64_t v247 = v243.i64[0] + v230;
      unint64_t v248 = v244 | (v242.i64[1] << v247);
      if ((v247 & 0x3F) + v243.i64[1] >= 0x40)
      {
        *(void *)((char *)v156 + ((v247 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v248;
        unint64_t v248 = (unint64_t)v242.i64[1] >> -(v247 & 0x3F);
        if ((v247 & 0x3F) == 0) {
          unint64_t v248 = 0;
        }
      }
      int16x8_t v249 = (int16x8_t)vandq_s8(v68, v245);
      unint64_t v250 = v247 + v243.i64[1];
      v251.i64[0] = 0xF000F000F000FLL;
      v251.i64[1] = 0xF000F000F000FLL;
      v252.i64[0] = -1;
      v252.i64[1] = -1;
      uint16x8_t v253 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v252, (uint16x8_t)vaddq_s16((int16x8_t)v77, v251)), v246);
      int32x4_t v254 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v255 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v256 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v253.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v254)), (int32x4_t)vshlq_u32(vmovl_high_u16(v253), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v255)));
      int32x4_t v257 = vpaddq_s32(v254, v255);
      v258.i64[0] = v256.u32[0];
      v258.i64[1] = v256.u32[1];
      uint64x2_t v259 = (uint64x2_t)v258;
      v258.i64[0] = v256.u32[2];
      v258.i64[1] = v256.u32[3];
      uint64x2_t v260 = (uint64x2_t)v258;
      v258.i64[0] = v257.u32[0];
      v258.i64[1] = v257.u32[1];
      int64x2_t v261 = v258;
      v258.i64[0] = v257.u32[2];
      v258.i64[1] = v257.u32[3];
      int64x2_t v262 = vpaddq_s64((int64x2_t)vshlq_u64(v259, (uint64x2_t)vzip1q_s64((int64x2_t)0, v261)), (int64x2_t)vshlq_u64(v260, (uint64x2_t)vzip1q_s64((int64x2_t)0, v258)));
      int64x2_t v263 = vpaddq_s64(v261, v258);
      unint64_t v264 = (v262.i64[0] << v250) | v248;
      if (v263.i64[0] + (v250 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v156 + ((v250 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v264;
        unint64_t v264 = (unint64_t)v262.i64[0] >> -(v250 & 0x3F);
        if ((v250 & 0x3F) == 0) {
          unint64_t v264 = 0;
        }
      }
      int8x16_t v265 = (int8x16_t)vaddq_s16(v29, v249);
      unint64_t v266 = v263.i64[0] + v250;
      unint64_t v267 = v264 | (v262.i64[1] << v266);
      if ((v266 & 0x3F) + v263.i64[1] >= 0x40)
      {
        *(void *)((char *)v156 + ((v266 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v267;
        unint64_t v267 = (unint64_t)v262.i64[1] >> -(v266 & 0x3F);
        if ((v266 & 0x3F) == 0) {
          unint64_t v267 = 0;
        }
      }
      unint64_t v268 = v266 + v263.i64[1];
      v269.i64[0] = 0xF000F000F000FLL;
      v269.i64[1] = 0xF000F000F000FLL;
      v270.i64[0] = -1;
      v270.i64[1] = -1;
      uint16x8_t v271 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v270, (uint16x8_t)vaddq_s16(v141, v269)), v265);
      int32x4_t v272 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v141.i8);
      int32x4_t v273 = (int32x4_t)vmovl_high_u16((uint16x8_t)v141);
      int32x4_t v274 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v271.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v272)), (int32x4_t)vshlq_u32(vmovl_high_u16(v271), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v273)));
      int32x4_t v275 = vpaddq_s32(v272, v273);
      v276.i64[0] = v274.u32[0];
      v276.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)v276;
      v276.i64[0] = v274.u32[2];
      v276.i64[1] = v274.u32[3];
      uint64x2_t v278 = (uint64x2_t)v276;
      v276.i64[0] = v275.u32[0];
      v276.i64[1] = v275.u32[1];
      int64x2_t v279 = v276;
      v276.i64[0] = v275.u32[2];
      v276.i64[1] = v275.u32[3];
      int64x2_t v280 = vpaddq_s64((int64x2_t)vshlq_u64(v277, (uint64x2_t)vzip1q_s64((int64x2_t)0, v279)), (int64x2_t)vshlq_u64(v278, (uint64x2_t)vzip1q_s64((int64x2_t)0, v276)));
      int64x2_t v281 = vpaddq_s64(v279, v276);
      unint64_t v282 = (v280.i64[0] << v268) | v267;
      if (v281.i64[0] + (v268 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v156 + ((v268 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v282;
        if ((v268 & 0x3F) != 0) {
          unint64_t v282 = (unint64_t)v280.i64[0] >> -(v268 & 0x3F);
        }
        else {
          unint64_t v282 = 0;
        }
      }
      unint64_t v283 = v281.i64[0] + v268;
      unint64_t v284 = v282 | (v280.i64[1] << v283);
      if ((v283 & 0x3F) + v281.i64[1] >= 0x40)
      {
        *(void *)((char *)v156 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v284;
        unint64_t v284 = (unint64_t)v280.i64[1] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v284 = 0;
        }
      }
      unint64_t v285 = v283 + v281.i64[1];
      if ((v285 & 0x3F) != 0) {
        *(void *)((char *)v156 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v284;
      }
      unint64_t result = (v285 - v157 + 7) >> 3;
      char v149 = *a2 | (result - 1);
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 6;
    char v149 = 1;
    unint64_t result = 2;
  }
  *a2 = v149;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressSubblock(unint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, int16x4_t a15)
{
  int32x4_t v16 = *(int32x4_t *)((char *)a3 + a4);
  int32x4_t v17 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v18 = *(int32x4_t *)((char *)v17 + a4);
  int8x16_t v19 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v16), 6uLL);
  int16x8_t v20 = vshrq_n_s16((int16x8_t)vzip1q_s32(*v17, v18), 6uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v16), 6uLL);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v19.i8, 0);
  int16x8_t v23 = vshrq_n_s16((int16x8_t)vzip2q_s32(*v17, v18), 6uLL);
  int16x8_t v24 = vshlq_n_s16(vsubq_s16(v20, (int16x8_t)v22), 6uLL);
  int16x8_t v25 = vshlq_n_s16(vsubq_s16(v23, (int16x8_t)v22), 6uLL);
  v26.i64[0] = 0x5000500050005;
  v26.i64[1] = 0x5000500050005;
  int8x16_t v27 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v19, (int16x8_t)v22), 6uLL), v26);
  int8x16_t v28 = (int8x16_t)vshlq_s16(v24, v26);
  int8x16_t v29 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, (int16x8_t)v22), 6uLL), v26);
  int16x8_t v30 = vshlq_s16(v25, v26);
  v24.i16[0] = vmaxvq_s16((int16x8_t)v27);
  v25.i16[0] = vminvq_s16((int16x8_t)v27);
  int16x8_t v31 = vdupq_lane_s16(*(int16x4_t *)v24.i8, 0);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
  v26.i64[0] = 0x8000800080008000;
  v26.i64[1] = 0x8000800080008000;
  int16x8_t v33 = vmaxq_s16(v31, v26);
  v34.i64[0] = 0x8000800080008000;
  v34.i64[1] = 0x8000800080008000;
  int16x8_t v35 = vminq_s16(v32, v34);
  int16x8_t v36 = vzip1q_s16(v31, v32);
  int8x16_t v37 = (int8x16_t)vceqzq_s16(v36);
  v38.i64[0] = 0x10001000100010;
  v38.i64[1] = 0x10001000100010;
  int16x8_t v39 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v36)), v37);
  v37.i16[0] = vmaxvq_s16((int16x8_t)v28);
  a15.i16[0] = vminvq_s16((int16x8_t)v28);
  int16x8_t v40 = vdupq_lane_s16(*(int16x4_t *)v37.i8, 0);
  int16x8_t v41 = vdupq_lane_s16(a15, 0);
  int16x8_t v42 = vpmaxq_s16(v39, v39);
  int16x8_t v43 = vmaxq_s16(v33, v40);
  int16x8_t v44 = vminq_s16(v35, v41);
  int16x8_t v45 = vzip1q_s16(v40, v41);
  int16x8_t v46 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v45)), (int8x16_t)vceqzq_s16(v45));
  int16x8_t v47 = vpmaxq_s16(v46, v46);
  v46.i16[0] = vmaxvq_s16((int16x8_t)v29);
  int16x8_t v48 = vdupq_lane_s16(*(int16x4_t *)v46.i8, 0);
  v41.i16[0] = vminvq_s16((int16x8_t)v29);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v41.i8, 0);
  int16x8_t v50 = vmaxq_s16(v43, v48);
  int16x8_t v51 = vminq_s16(v44, v49);
  int16x8_t v52 = vzip1q_s16(v48, v49);
  int16x8_t v53 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v52)), (int8x16_t)vceqzq_s16(v52));
  int16x8_t v54 = vpmaxq_s16(v53, v53);
  v53.i16[0] = vmaxvq_s16(v30);
  v15.i16[0] = vminvq_s16(v30);
  int16x8_t v55 = vdupq_lane_s16(*(int16x4_t *)v53.i8, 0);
  int16x8_t v56 = vdupq_lane_s16(v15, 0);
  int16x8_t v57 = vmaxq_s16(v50, v55);
  int16x8_t v58 = vminq_s16(v51, v56);
  int16x8_t v59 = vzip1q_s16(v55, v56);
  int16x8_t v60 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v59)), (int8x16_t)vceqzq_s16(v59));
  int16x8_t v61 = vpmaxq_s16(v60, v60);
  int8x16_t v62 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v47), vmaxq_s16(v54, v61));
  int16x8_t v63 = vclzq_s16(vsubq_s16(v57, v58));
  int8x16_t v64 = (int8x16_t)vsubq_s16(v38, v63);
  int8x16_t v65 = (int8x16_t)vcgtq_s16((int16x8_t)v62, (int16x8_t)v64);
  int8x16_t v66 = vbslq_s8(v65, v64, v62);
  if (vmaxvq_s16((int16x8_t)v66))
  {
    v67.i64[0] = -1;
    v67.i64[1] = -1;
    v68.i64[0] = 0xF000F000F000FLL;
    v68.i64[1] = 0xF000F000F000FLL;
    int8x16_t v69 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v67, vsubq_s16(v68, v63)), v58), v65);
    v70.i64[0] = 0x8000800080008;
    v70.i64[1] = 0x8000800080008;
    v68.i64[0] = 0x3000300030003;
    v68.i64[1] = 0x3000300030003;
    int8x16_t v71 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v66), (int8x16_t)v68);
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v42), v68), (int16x8_t)0);
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v47), v68), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v54), v68), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v61), v68), (int16x8_t)0);
    int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v66, v72);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v66, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v66, v74);
    int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v66, v75);
    v68.i64[0] = 0x4000400040004;
    v68.i64[1] = 0x4000400040004;
    int8x16_t v80 = vbicq_s8((int8x16_t)v68, (int8x16_t)vceqq_s16(vaddq_s16(v75, v74), vnegq_s16(vaddq_s16(v72, v73))));
    int8x16_t v81 = vorrq_s8(vorrq_s8(v71, vandq_s8(v65, v70)), v80);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v291 = (int8x16_t)v30;
      int16x8_t v82 = vsubq_s16((int16x8_t)v19, (int16x8_t)vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7520));
      int8x16_t v83 = (int8x16_t)v20;
      v83.i16[7] = v19.i16[7];
      int16x8_t v84 = vsubq_s16(v20, (int16x8_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_242EA7530));
      int8x16_t v85 = (int8x16_t)v21;
      v85.i16[7] = v19.i16[7];
      int16x8_t v86 = vsubq_s16(v21, (int16x8_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7540));
      int8x16_t v87 = (int8x16_t)v23;
      v87.i16[7] = v19.i16[7];
      int16x8_t v88 = v82;
      v88.i16[0] = v82.i16[7];
      int16x8_t v89 = vsubq_s16(v23, (int16x8_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7550));
      v88.i16[7] = v82.i16[0];
      int16x8_t v90 = vshlq_n_s16(v88, 6uLL);
      int16x8_t v91 = vshlq_n_s16(v86, 6uLL);
      int16x8_t v92 = vshlq_n_s16(v89, 6uLL);
      v93.i64[0] = 0x5000500050005;
      v93.i64[1] = 0x5000500050005;
      int8x16_t v94 = (int8x16_t)vshlq_s16(v90, v93);
      int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(v84, 6uLL), v93);
      int8x16_t v96 = (int8x16_t)vshlq_s16(v91, v93);
      int8x16_t v97 = (int8x16_t)vshlq_s16(v92, v93);
      v91.i16[0] = vmaxvq_s16((int16x8_t)v94);
      v92.i16[0] = vminvq_s16((int16x8_t)v94);
      int16x8_t v98 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v99 = vdupq_lane_s16(*(int16x4_t *)v92.i8, 0);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v100 = vmaxq_s16(v98, v93);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v101 = vminq_s16(v99, v93);
      int16x8_t v102 = vzip1q_s16(v98, v99);
      int8x16_t v103 = (int8x16_t)vceqzq_s16(v102);
      v104.i64[0] = 0x10001000100010;
      v104.i64[1] = 0x10001000100010;
      int16x8_t v105 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v102)), v103);
      int16x8_t v106 = vpmaxq_s16(v105, v105);
      v105.i16[0] = vmaxvq_s16((int16x8_t)v95);
      v103.i16[0] = vminvq_s16((int16x8_t)v95);
      int16x8_t v107 = vdupq_lane_s16(*(int16x4_t *)v105.i8, 0);
      int16x8_t v108 = vdupq_lane_s16(*(int16x4_t *)v103.i8, 0);
      int16x8_t v109 = vmaxq_s16(v100, v107);
      int16x8_t v110 = vminq_s16(v101, v108);
      int16x8_t v111 = vzip1q_s16(v107, v108);
      int8x16_t v112 = (int8x16_t)vceqzq_s16(v111);
      int16x8_t v113 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v111)), v112);
      int16x8_t v114 = vpmaxq_s16(v113, v113);
      v113.i16[0] = vmaxvq_s16((int16x8_t)v96);
      v112.i16[0] = vminvq_s16((int16x8_t)v96);
      int16x8_t v115 = vdupq_lane_s16(*(int16x4_t *)v113.i8, 0);
      int16x8_t v116 = vdupq_lane_s16(*(int16x4_t *)v112.i8, 0);
      int16x8_t v117 = vmaxq_s16(v109, v115);
      int16x8_t v118 = vminq_s16(v110, v116);
      int16x8_t v119 = vzip1q_s16(v115, v116);
      int8x16_t v120 = (int8x16_t)vceqzq_s16(v119);
      int16x8_t v121 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v119)), v120);
      int16x8_t v122 = vpmaxq_s16(v121, v121);
      v121.i16[0] = vmaxvq_s16((int16x8_t)v97);
      v120.i16[0] = vminvq_s16((int16x8_t)v97);
      int16x8_t v123 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      int16x8_t v124 = vdupq_lane_s16(*(int16x4_t *)v120.i8, 0);
      int16x8_t v125 = vmaxq_s16(v117, v123);
      int16x8_t v126 = vminq_s16(v118, v124);
      int16x8_t v127 = vzip1q_s16(v123, v124);
      int16x8_t v128 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v127)), (int8x16_t)vceqzq_s16(v127));
      int16x8_t v129 = vpmaxq_s16(v128, v128);
      int8x16_t v130 = (int8x16_t)vmaxq_s16(vmaxq_s16(v106, v114), vmaxq_s16(v122, v129));
      int16x8_t v131 = vclzq_s16(vsubq_s16(v125, v126));
      int8x16_t v132 = (int8x16_t)vsubq_s16(v104, v131);
      int8x16_t v133 = (int8x16_t)vcgtq_s16((int16x8_t)v130, (int16x8_t)v132);
      int8x16_t v134 = vbslq_s8(v133, v132, v130);
      int16x8_t v135 = vsubq_s16((int16x8_t)v134, v106);
      v106.i64[0] = 0x3000300030003;
      v106.i64[1] = 0x3000300030003;
      int16x8_t v136 = vmaxq_s16(vminq_s16(v135, v106), (int16x8_t)0);
      int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v114), v106), (int16x8_t)0);
      int8x16_t v138 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v122), v106), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v129), v106), (int16x8_t)0);
      int8x16_t v140 = (int8x16_t)vsubq_s16((int16x8_t)v134, v136);
      int8x16_t v141 = (int8x16_t)vsubq_s16((int16x8_t)v134, v137);
      int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v134, (int16x8_t)v138);
      int8x16_t v143 = (int8x16_t)vsubq_s16((int16x8_t)v134, v139);
      int8x16_t v144 = (int8x16_t)vceqq_s16(vaddq_s16(v139, (int16x8_t)v138), vnegq_s16(vaddq_s16(v136, v137)));
      v138.i64[0] = 0x4000400040004;
      v138.i64[1] = 0x4000400040004;
      int8x16_t v145 = vbicq_s8(v138, v144);
      int16x8_t v146 = (int16x8_t)vandq_s8(v132, v133);
      v132.i64[0] = 0x7000700070007;
      v132.i64[1] = 0x7000700070007;
      int16x8_t v147 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v64, v65), vaddq_s16((int16x8_t)v80, (int16x8_t)v80)), (int16x8_t)v76, (int16x8_t)v132), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v78, (int16x8_t)v77), (int16x8_t)v79), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16(v146, vaddq_s16((int16x8_t)v145, (int16x8_t)v145)), (int16x8_t)v140, (int16x8_t)v132), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v142, (int16x8_t)v141), (int16x8_t)v143), 3uLL))),
               0);
      if (vaddvq_s16(v147))
      {
        v148.i64[0] = 0x2000200020002;
        v148.i64[1] = 0x2000200020002;
        int8x16_t v149 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v134), v148);
        v148.i64[0] = 0x9000900090009;
        v148.i64[1] = 0x9000900090009;
        v150.i64[0] = -1;
        v150.i64[1] = -1;
        int8x16_t v151 = vorrq_s8(vorrq_s8(v149, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v133, v148), (int16x8_t)vmvnq_s8(v133))), v145);
        v148.i64[0] = 0xF000F000F000FLL;
        v148.i64[1] = 0xF000F000F000FLL;
        int8x16_t v152 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v150, vsubq_s16((int16x8_t)v148, v131)), v126), v133);
        int8x16_t v153 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v147, 0xFuLL));
        v22.i16[0] = vbslq_s8(v153, vextq_s8(v19, v19, 0xEuLL), v22).u16[0];
        int8x16_t v27 = vbslq_s8(v153, v94, v27);
        int8x16_t v28 = vbslq_s8(v153, v95, v28);
        int8x16_t v29 = vbslq_s8(v153, v96, v29);
        int16x8_t v30 = (int16x8_t)vbslq_s8(v153, v97, v291);
        int8x16_t v76 = vbslq_s8(v153, v140, v76);
        int8x16_t v77 = vbslq_s8(v153, v141, v77);
        int8x16_t v78 = vbslq_s8(v153, v142, v78);
        int8x16_t v79 = vbslq_s8(v153, v143, v79);
        int8x16_t v69 = vbslq_s8(v153, v152, v69);
        int8x16_t v66 = vbslq_s8(v153, v134, v66);
        int8x16_t v81 = vbslq_s8(v153, v151, v81);
      }
      else
      {
        int16x8_t v30 = (int16x8_t)v291;
      }
    }
    v155.i64[0] = 0x8000800080008;
    v155.i64[1] = 0x8000800080008;
    int16x8_t v156 = (int16x8_t)vandq_s8(v81, v155);
    v157.i64[0] = 0x3000300030003;
    v157.i64[1] = 0x3000300030003;
    v158.i64[0] = 0x2000200020002;
    v158.i64[1] = 0x2000200020002;
    int8x16_t v159 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v81, v157), v158);
    v158.i64[0] = 0x10001000100010;
    v158.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(vbicq_s8(v66, (int8x16_t)vceqzq_s16(v156)).u16[0]
                                    + ((2 * v81.i16[0]) & 8)
                                    + vandq_s8(v159, (int8x16_t)v158).u16[0]
                                    - v76.i16[0]
                                    + 8 * v76.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v78, vaddq_s16((int16x8_t)v77, (int16x8_t)v79)).u16[0])
                          - 241) <= 0xFFFFFFFFFFFFFEF7)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint16x8_t *)a3, a4, a5, a6, a7);
      return 32;
    }
    else
    {
      uint64_t v160 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v161 = 8 * (a1 & 7);
      if (v161) {
        uint64_t v162 = *v160 & ~(-1 << v161);
      }
      else {
        uint64_t v162 = 0;
      }
      if (v66.i16[0]) {
        uint64_t v163 = (16 * v66.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v163 = 0;
      }
      *a2 = v81.i8[0] << 6;
      unint64_t v164 = (v163 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v22.i16[0] & 0x3FF) << 8) | v81.i8[0] & 0xF) >> 2;
      unint64_t v165 = (v164 << v161) | v162;
      if (v161 >= 0x30)
      {
        *uint64_t v160 = v165;
        unint64_t v165 = v164 >> (-8 * (a1 & 7u));
      }
      unint64_t v166 = v161 + 16;
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v76);
      int8x16_t v168 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v169 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v78);
      int8x16_t v170 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v79);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      *(uint8x8_t *)v168.i8 = vqmovn_u16((uint16x8_t)v168);
      *(uint8x8_t *)v169.i8 = vqmovn_u16((uint16x8_t)v169);
      *(uint8x8_t *)v170.i8 = vqmovn_u16((uint16x8_t)v170);
      v167.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v167, v168), (int16x8_t)vzip1q_s8(v169, v170)).u32[0];
      int8x16_t v171 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v81.i8, (int8x8_t)0x4000400040004))));
      v172.i64[0] = 0x202020202020202;
      v172.i64[1] = 0x202020202020202;
      int8x16_t v173 = vandq_s8(v171, v172);
      v172.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v172.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v169.i64[0] = -1;
      v169.i64[1] = -1;
      uint8x16_t v174 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v169, (uint8x16_t)vorrq_s8(v173, v172)), (int8x16_t)v167.u32[0]);
      int16x8_t v175 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v173.i8);
      uint16x8_t v176 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v174.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v175)), (int16x8_t)vmovl_high_u8(v174));
      uint16x8_t v177 = (uint16x8_t)vpaddq_s16(v175, (int16x8_t)vmovl_high_u8((uint8x16_t)v173));
      int32x4_t v178 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v177.i8);
      int32x4_t v179 = (int32x4_t)vmovl_high_u16(v177);
      int32x4_t v180 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v176.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v178)), (int32x4_t)vshlq_u32(vmovl_high_u16(v176), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v179)));
      int32x4_t v181 = vpaddq_s32(v178, v179);
      v182.i64[0] = v180.u32[0];
      v182.i64[1] = v180.u32[1];
      uint64x2_t v183 = (uint64x2_t)v182;
      v182.i64[0] = v180.u32[2];
      v182.i64[1] = v180.u32[3];
      uint64x2_t v184 = (uint64x2_t)v182;
      v182.i64[0] = v181.u32[0];
      v182.i64[1] = v181.u32[1];
      int64x2_t v185 = v182;
      v182.i64[0] = v181.u32[2];
      v182.i64[1] = v181.u32[3];
      int64x2_t v186 = vpaddq_s64((int64x2_t)vshlq_u64(v183, (uint64x2_t)vzip1q_s64((int64x2_t)0, v185)), (int64x2_t)vshlq_u64(v184, (uint64x2_t)vzip1q_s64((int64x2_t)0, v182)));
      int64x2_t v187 = vpaddq_s64(v185, v182);
      uint64_t v188 = (v161 + 16) & 0x38;
      unint64_t v189 = (v186.i64[0] << v188) | v165;
      if ((unint64_t)(v187.i64[0] + v188) >= 0x40)
      {
        *(void *)((char *)v160 + ((v166 >> 3) & 8)) = v189;
        unint64_t v189 = (unint64_t)v186.i64[0] >> -(char)v188;
        if (!v188) {
          unint64_t v189 = 0;
        }
      }
      int8x16_t v190 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v76);
      unint64_t v191 = v187.i64[0] + v166;
      unint64_t v192 = v189 | (v186.i64[1] << v191);
      if ((v191 & 0x3F) + v187.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v191 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v192;
        unint64_t v192 = (unint64_t)v186.i64[1] >> -(v191 & 0x3F);
        if ((v191 & 0x3F) == 0) {
          unint64_t v192 = 0;
        }
      }
      int16x8_t v193 = (int16x8_t)vandq_s8(v69, v190);
      unint64_t v194 = v191 + v187.i64[1];
      v195.i64[0] = -1;
      v195.i64[1] = -1;
      int16x8_t v196 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v156, v156), (int8x16_t)0, 0xEuLL), v66);
      v197.i64[0] = 0xF000F000F000FLL;
      v197.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v198 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v195, (uint16x8_t)vaddq_s16(v196, v197)), v69);
      int32x4_t v199 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v196.i8);
      int32x4_t v200 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v198.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v199)), (int32x4_t)vmovl_high_u16(v198));
      int32x4_t v201 = vpaddq_s32(v199, (int32x4_t)vmovl_high_u16((uint16x8_t)v196));
      v202.i64[0] = v200.u32[0];
      v202.i64[1] = v200.u32[1];
      uint64x2_t v203 = (uint64x2_t)v202;
      v202.i64[0] = v200.u32[2];
      v202.i64[1] = v200.u32[3];
      uint64x2_t v204 = (uint64x2_t)v202;
      v202.i64[0] = v201.u32[0];
      v202.i64[1] = v201.u32[1];
      int64x2_t v205 = v202;
      v202.i64[0] = v201.u32[2];
      v202.i64[1] = v201.u32[3];
      int64x2_t v206 = vpaddq_s64((int64x2_t)vshlq_u64(v203, (uint64x2_t)vzip1q_s64((int64x2_t)0, v205)), (int64x2_t)vshlq_u64(v204, (uint64x2_t)vzip1q_s64((int64x2_t)0, v202)));
      int64x2_t v207 = vpaddq_s64(v205, v202);
      unint64_t v208 = (v206.i64[0] << v194) | v192;
      if (v207.i64[0] + (v194 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v194 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v208;
        unint64_t v208 = (unint64_t)v206.i64[0] >> -(v194 & 0x3F);
        if ((v194 & 0x3F) == 0) {
          unint64_t v208 = 0;
        }
      }
      int8x16_t v209 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v210 = (int8x16_t)vaddq_s16(v193, (int16x8_t)v27);
      unint64_t v211 = v207.i64[0] + v194;
      unint64_t v212 = v208 | (v206.i64[1] << v211);
      if ((v211 & 0x3F) + v207.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v211 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v212;
        unint64_t v212 = (unint64_t)v206.i64[1] >> -(v211 & 0x3F);
        if ((v211 & 0x3F) == 0) {
          unint64_t v212 = 0;
        }
      }
      int16x8_t v213 = (int16x8_t)vandq_s8(v69, v209);
      unint64_t v214 = v211 + v207.i64[1];
      int16x8_t v215 = (int16x8_t)vextq_s8((int8x16_t)0, v76, 0xEuLL);
      v216.i64[0] = 0xF000F000F000FLL;
      v216.i64[1] = 0xF000F000F000FLL;
      v217.i64[0] = -1;
      v217.i64[1] = -1;
      uint16x8_t v218 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v217, (uint16x8_t)vaddq_s16(v215, v216)), v210);
      int32x4_t v219 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v215.i8);
      int32x4_t v220 = (int32x4_t)vmovl_high_u16((uint16x8_t)v215);
      int32x4_t v221 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v218.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v219)), (int32x4_t)vshlq_u32(vmovl_high_u16(v218), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v220)));
      int32x4_t v222 = vpaddq_s32(v219, v220);
      v223.i64[0] = v221.u32[0];
      v223.i64[1] = v221.u32[1];
      uint64x2_t v224 = (uint64x2_t)v223;
      v223.i64[0] = v221.u32[2];
      v223.i64[1] = v221.u32[3];
      uint64x2_t v225 = (uint64x2_t)v223;
      v223.i64[0] = v222.u32[0];
      v223.i64[1] = v222.u32[1];
      int64x2_t v226 = v223;
      v223.i64[0] = v222.u32[2];
      v223.i64[1] = v222.u32[3];
      int64x2_t v227 = vpaddq_s64((int64x2_t)vshlq_u64(v224, (uint64x2_t)vzip1q_s64((int64x2_t)0, v226)), (int64x2_t)vshlq_u64(v225, (uint64x2_t)vzip1q_s64((int64x2_t)0, v223)));
      int64x2_t v228 = vpaddq_s64(v226, v223);
      unint64_t v229 = (v227.i64[0] << v214) | v212;
      if (v228.i64[0] + (v214 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v214 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v229;
        unint64_t v229 = (unint64_t)v227.i64[0] >> -(v214 & 0x3F);
        if ((v214 & 0x3F) == 0) {
          unint64_t v229 = 0;
        }
      }
      int8x16_t v230 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v78);
      int8x16_t v231 = (int8x16_t)vaddq_s16((int16x8_t)v28, v213);
      unint64_t v232 = v228.i64[0] + v214;
      unint64_t v233 = v229 | (v227.i64[1] << v232);
      if ((v232 & 0x3F) + v228.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v232 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v233;
        unint64_t v233 = (unint64_t)v227.i64[1] >> -(v232 & 0x3F);
        if ((v232 & 0x3F) == 0) {
          unint64_t v233 = 0;
        }
      }
      int16x8_t v234 = (int16x8_t)vandq_s8(v69, v230);
      unint64_t v235 = v232 + v228.i64[1];
      v236.i64[0] = 0xF000F000F000FLL;
      v236.i64[1] = 0xF000F000F000FLL;
      v237.i64[0] = -1;
      v237.i64[1] = -1;
      uint16x8_t v238 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v237, (uint16x8_t)vaddq_s16((int16x8_t)v77, v236)), v231);
      int32x4_t v239 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v240 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v241 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v238.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v239)), (int32x4_t)vshlq_u32(vmovl_high_u16(v238), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v240)));
      int32x4_t v242 = vpaddq_s32(v239, v240);
      v243.i64[0] = v241.u32[0];
      v243.i64[1] = v241.u32[1];
      uint64x2_t v244 = (uint64x2_t)v243;
      v243.i64[0] = v241.u32[2];
      v243.i64[1] = v241.u32[3];
      uint64x2_t v245 = (uint64x2_t)v243;
      v243.i64[0] = v242.u32[0];
      v243.i64[1] = v242.u32[1];
      int64x2_t v246 = v243;
      v243.i64[0] = v242.u32[2];
      v243.i64[1] = v242.u32[3];
      int64x2_t v247 = vpaddq_s64((int64x2_t)vshlq_u64(v244, (uint64x2_t)vzip1q_s64((int64x2_t)0, v246)), (int64x2_t)vshlq_u64(v245, (uint64x2_t)vzip1q_s64((int64x2_t)0, v243)));
      int64x2_t v248 = vpaddq_s64(v246, v243);
      unint64_t v249 = (v247.i64[0] << v235) | v233;
      if (v248.i64[0] + (v235 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v235 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v249;
        unint64_t v249 = (unint64_t)v247.i64[0] >> -(v235 & 0x3F);
        if ((v235 & 0x3F) == 0) {
          unint64_t v249 = 0;
        }
      }
      int8x16_t v250 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v79);
      int8x16_t v251 = (int8x16_t)vaddq_s16((int16x8_t)v29, v234);
      unint64_t v252 = v248.i64[0] + v235;
      unint64_t v253 = v249 | (v247.i64[1] << v252);
      if ((v252 & 0x3F) + v248.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v252 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v253;
        unint64_t v253 = (unint64_t)v247.i64[1] >> -(v252 & 0x3F);
        if ((v252 & 0x3F) == 0) {
          unint64_t v253 = 0;
        }
      }
      int16x8_t v254 = (int16x8_t)vandq_s8(v69, v250);
      unint64_t v255 = v252 + v248.i64[1];
      v256.i64[0] = 0xF000F000F000FLL;
      v256.i64[1] = 0xF000F000F000FLL;
      v257.i64[0] = -1;
      v257.i64[1] = -1;
      uint16x8_t v258 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v257, (uint16x8_t)vaddq_s16((int16x8_t)v78, v256)), v251);
      int32x4_t v259 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v260 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v261 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v258.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v259)), (int32x4_t)vshlq_u32(vmovl_high_u16(v258), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v260)));
      int32x4_t v262 = vpaddq_s32(v259, v260);
      v263.i64[0] = v261.u32[0];
      v263.i64[1] = v261.u32[1];
      uint64x2_t v264 = (uint64x2_t)v263;
      v263.i64[0] = v261.u32[2];
      v263.i64[1] = v261.u32[3];
      uint64x2_t v265 = (uint64x2_t)v263;
      v263.i64[0] = v262.u32[0];
      v263.i64[1] = v262.u32[1];
      int64x2_t v266 = v263;
      v263.i64[0] = v262.u32[2];
      v263.i64[1] = v262.u32[3];
      int64x2_t v267 = vpaddq_s64((int64x2_t)vshlq_u64(v264, (uint64x2_t)vzip1q_s64((int64x2_t)0, v266)), (int64x2_t)vshlq_u64(v265, (uint64x2_t)vzip1q_s64((int64x2_t)0, v263)));
      int64x2_t v268 = vpaddq_s64(v266, v263);
      unint64_t v269 = (v267.i64[0] << v255) | v253;
      if (v268.i64[0] + (v255 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v255 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v269;
        unint64_t v269 = (unint64_t)v267.i64[0] >> -(v255 & 0x3F);
        if ((v255 & 0x3F) == 0) {
          unint64_t v269 = 0;
        }
      }
      int8x16_t v270 = (int8x16_t)vaddq_s16(v30, v254);
      unint64_t v271 = v268.i64[0] + v255;
      unint64_t v272 = v269 | (v267.i64[1] << v271);
      if ((v271 & 0x3F) + v268.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v271 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v272;
        unint64_t v272 = (unint64_t)v267.i64[1] >> -(v271 & 0x3F);
        if ((v271 & 0x3F) == 0) {
          unint64_t v272 = 0;
        }
      }
      unint64_t v273 = v271 + v268.i64[1];
      v274.i64[0] = 0xF000F000F000FLL;
      v274.i64[1] = 0xF000F000F000FLL;
      v275.i64[0] = -1;
      v275.i64[1] = -1;
      uint16x8_t v276 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v275, (uint16x8_t)vaddq_s16((int16x8_t)v79, v274)), v270);
      int32x4_t v277 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v278 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v279 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v276.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)), (int32x4_t)vshlq_u32(vmovl_high_u16(v276), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)));
      int32x4_t v280 = vpaddq_s32(v277, v278);
      v281.i64[0] = v279.u32[0];
      v281.i64[1] = v279.u32[1];
      uint64x2_t v282 = (uint64x2_t)v281;
      v281.i64[0] = v279.u32[2];
      v281.i64[1] = v279.u32[3];
      uint64x2_t v283 = (uint64x2_t)v281;
      v281.i64[0] = v280.u32[0];
      v281.i64[1] = v280.u32[1];
      int64x2_t v284 = v281;
      v281.i64[0] = v280.u32[2];
      v281.i64[1] = v280.u32[3];
      int64x2_t v285 = vpaddq_s64((int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)), (int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)));
      int64x2_t v286 = vpaddq_s64(v284, v281);
      unint64_t v287 = (v285.i64[0] << v273) | v272;
      if (v286.i64[0] + (v273 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v160 + ((v273 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
        if ((v273 & 0x3F) != 0) {
          unint64_t v287 = (unint64_t)v285.i64[0] >> -(v273 & 0x3F);
        }
        else {
          unint64_t v287 = 0;
        }
      }
      unint64_t v288 = v286.i64[0] + v273;
      unint64_t v289 = v287 | (v285.i64[1] << v288);
      if ((v288 & 0x3F) + v286.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v288 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v289;
        unint64_t v289 = (unint64_t)v285.i64[1] >> -(v288 & 0x3F);
        if ((v288 & 0x3F) == 0) {
          unint64_t v289 = 0;
        }
      }
      unint64_t v290 = v288 + v286.i64[1];
      if ((v290 & 0x3F) != 0) {
        *(void *)((char *)v160 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v289;
      }
      unint64_t result = (v290 - v161 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 6;
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v11 = a6;
  if (a5 >= 8)
  {
    uint64_t v14 = 0;
    int16x4_t v15 = &v45;
    int32x4_t v16 = (char *)&v43 + ((8 * a5) & 0x7C0);
    do
    {
      int32x4_t v17 = v15;
      int32x4_t v18 = a3;
      uint64_t v19 = a5 & 0xF8;
      do
      {
        uint16x8_t v20 = *v18++;
        uint16x8_t v21 = vshrq_n_u16(v20, 6uLL);
        *((_WORD *)v17 - 16) = v21.i16[0];
        *((_WORD *)v17 - 12) = v21.i16[1];
        *((_WORD *)v17 - 8) = v21.i16[2];
        *((_WORD *)v17 - 4) = v21.i16[3];
        *(_WORD *)int32x4_t v17 = v21.i16[4];
        *((_WORD *)v17 + 4) = v21.i16[5];
        *((_WORD *)v17 + 8) = v21.i16[6];
        *((_WORD *)v17 + 12) = v21.i16[7];
        v17 += 4;
        v19 -= 8;
      }
      while (v19);
      if ((a5 & 0xF8) != (unint64_t)a5)
      {
        int8x16_t v22 = v16;
        uint64_t v23 = a5 & 0xF8;
        do
        {
          _WORD *v22 = (unsigned __int16)a3->i16[v23] >> 6;
          v22 += 4;
          ++v23;
        }
        while (a5 != v23);
      }
      ++v14;
      a3 = (uint16x8_t *)((char *)a3 + a4);
      int16x4_t v15 = (long long *)((char *)v15 + 2);
      v16 += 2;
    }
    while (v14 != a6);
  }
  else
  {
    int32x4_t v12 = &a3->i16[3];
    int32x4_t v13 = (_WORD *)&v44 + 4;
    do
    {
      *(v13 - 12) = (unsigned __int16)*(v12 - 3) >> 6;
      if (a5 != 1)
      {
        *(v13 - 8) = (unsigned __int16)*(v12 - 2) >> 6;
        if (a5 != 2)
        {
          *(v13 - 4) = (unsigned __int16)*(v12 - 1) >> 6;
          if (a5 != 3)
          {
            *int32x4_t v13 = (unsigned __int16)*v12 >> 6;
            if (a5 != 4)
            {
              v13[4] = (unsigned __int16)v12[1] >> 6;
              if (a5 != 5)
              {
                v13[8] = (unsigned __int16)v12[2] >> 6;
                if (a5 != 6) {
                  v13[12] = (unsigned __int16)v12[3] >> 6;
                }
              }
            }
          }
        }
      }
      int32x4_t v12 = (__int16 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  v38.i32[0] = (unsigned __int16)v43;
  v38.i32[1] = WORD4(v43);
  v38.i32[2] = WORD1(v43);
  v38.i32[3] = WORD5(v43);
  int v39 = (unsigned __int16)v44;
  int v40 = WORD4(v44);
  if (a5 >= 4) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = a5;
  }
  if (a5 >= 4) {
    unsigned int v25 = a5 - 4;
  }
  else {
    unsigned int v25 = 0;
  }
  int v41 = WORD1(v44);
  int v42 = WORD5(v44);
  if (a6 >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = a6;
  }
  if (a6 >= 2) {
    unsigned int v27 = a6 - 2;
  }
  else {
    unsigned int v27 = 0;
  }
  char v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, &v38, a7, v24, v26);
  v38.i32[0] = WORD2(v43);
  v38.i32[1] = WORD6(v43);
  v38.i32[2] = WORD3(v43);
  v38.i32[3] = HIWORD(v43);
  int v39 = WORD2(v44);
  int v40 = WORD6(v44);
  int v41 = WORD3(v44);
  int v42 = HIWORD(v44);
  if (a6 >= 4) {
    unsigned int v29 = 2;
  }
  else {
    unsigned int v29 = v27;
  }
  int v30 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 8, &v38, a7, v24, v29);
  v38.i32[0] = (unsigned __int16)v45;
  v38.i32[1] = WORD4(v45);
  v38.i32[2] = WORD1(v45);
  v38.i32[3] = WORD5(v45);
  int v39 = (unsigned __int16)v46;
  int v40 = WORD4(v46);
  if (a5 >= 8) {
    unsigned int v31 = 4;
  }
  else {
    unsigned int v31 = v25;
  }
  int v41 = WORD1(v46);
  int v42 = WORD5(v46);
  int v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 16, &v38, a7, v31, v26);
  v38.i32[0] = WORD2(v45);
  v38.i32[1] = WORD6(v45);
  v38.i32[2] = WORD3(v45);
  v38.i32[3] = HIWORD(v45);
  int v39 = WORD2(v46);
  int v40 = WORD6(v46);
  int v41 = WORD3(v46);
  int v42 = HIWORD(v46);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 24, &v38, a7, v31, v29);
  if (v32) {
    char v34 = 4;
  }
  else {
    char v34 = 0;
  }
  if (v30) {
    char v35 = 2;
  }
  else {
    char v35 = 0;
  }
  if (result) {
    char v36 = -8;
  }
  else {
    char v36 = -16;
  }
  *a2 = v36 | v34 | v28 | v35;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(unint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v128 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v9.i64[0] = 0x20000000200;
    v9.i64[1] = 0x20000000200;
    int8x16_t v10 = veorq_s8(*a2, v9);
    v11.i64[0] = 0x100000001;
    v11.i64[1] = 0x100000001;
    int8x16_t v7 = vbicq_s8(v10, (int8x16_t)vceqq_s32((int32x4_t)v10, v11));
    int8x16_t v12 = veorq_s8(a2[1], v9);
    int8x16_t v8 = vbicq_s8(v12, (int8x16_t)vceqq_s32((int32x4_t)v12, v11));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v6.i64[0] = 0x20000000200;
    v6.i64[1] = 0x20000000200;
    int8x16_t v7 = veorq_s8(*a2, v6);
    int8x16_t v8 = veorq_s8(a2[1], v6);
LABEL_5:
    int8x16_t v126 = v7;
    int8x16_t v127 = v8;
    unsigned int v13 = v7.i32[0];
    goto LABEL_7;
  }
  int8x16_t v14 = a2[1];
  int8x16_t v126 = *a2;
  int8x16_t v127 = v14;
  unsigned int v13 = v126.i32[0];
LABEL_7:
  if (a5) {
    BOOL v15 = a4 >= 2;
  }
  else {
    BOOL v15 = 0;
  }
  int v16 = !v15;
  if (v15)
  {
    unsigned int v18 = v126.u32[1];
    unsigned int v17 = v126.i32[1] < v13;
    if (v126.i32[1] >= v13) {
      unsigned int v19 = v13;
    }
    else {
      unsigned int v19 = v126.u32[1];
    }
    if (v13 > v126.i32[1]) {
      unsigned int v18 = v13;
    }
  }
  else
  {
    unsigned int v17 = 0;
    unsigned int v18 = v13;
    unsigned int v19 = v13;
  }
  BOOL v20 = a5 < 2 || a4 == 0;
  int v21 = v20;
  if (!v20)
  {
    if (v126.i32[2] < v19)
    {
      unsigned int v17 = 2;
      unsigned int v19 = v126.u32[2];
    }
    if (v18 <= v126.i32[2]) {
      unsigned int v18 = v126.u32[2];
    }
  }
  BOOL v22 = a5 >= 2 && a4 >= 2;
  int v23 = !v22;
  if (v22)
  {
    if (v126.i32[3] < v19)
    {
      unsigned int v17 = 3;
      unsigned int v19 = v126.u32[3];
    }
    if (v18 <= v126.i32[3]) {
      unsigned int v18 = v126.u32[3];
    }
  }
  if (a5) {
    BOOL v24 = a4 >= 3;
  }
  else {
    BOOL v24 = 0;
  }
  int v25 = !v24;
  if (v24)
  {
    if (v127.i32[0] < v19)
    {
      unsigned int v17 = 4;
      unsigned int v19 = v127.i32[0];
    }
    if (v18 <= v127.i32[0]) {
      unsigned int v18 = v127.i32[0];
    }
  }
  if (a5) {
    BOOL v26 = a4 >= 4;
  }
  else {
    BOOL v26 = 0;
  }
  int v27 = !v26;
  if (v26)
  {
    if (v127.i32[1] < v19)
    {
      unsigned int v17 = 5;
      unsigned int v19 = v127.u32[1];
    }
    if (v18 <= v127.i32[1]) {
      unsigned int v18 = v127.u32[1];
    }
  }
  BOOL v28 = a5 >= 2 && a4 >= 3;
  int v29 = !v28;
  if (v28)
  {
    if (v127.i32[2] < v19)
    {
      unsigned int v17 = 6;
      unsigned int v19 = v127.u32[2];
    }
    if (v18 <= v127.i32[2]) {
      unsigned int v18 = v127.u32[2];
    }
  }
  BOOL v30 = a5 >= 2 && a4 >= 4;
  int v31 = !v30;
  if (v30)
  {
    if (v127.i32[3] < v19)
    {
      unsigned int v17 = 7;
      unsigned int v19 = v127.u32[3];
    }
    if (v18 <= v127.i32[3]) {
      unsigned int v18 = v127.u32[3];
    }
  }
  unsigned int v32 = v18 - v19;
  unsigned int v33 = __clz(v18 - v19);
  int v34 = 32 - v33;
  if ((int)(32 - v33) <= 1) {
    int v34 = 1;
  }
  unsigned int v35 = v34 - 1;
  if (v33 - 29 < 3) {
    unsigned int v35 = 2;
  }
  if (v18) {
    BOOL v36 = v18 == 1023;
  }
  else {
    BOOL v36 = 1;
  }
  int v37 = !v36;
  if (v35 < 3 && v18 == v19) {
    unsigned int v35 = v37;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v39 = 0;
    if (v19 <= 0x1FF && v18 >= 0x200) {
      BOOL v39 = kDQuadParamTable[10 * v35 + 168] == 0;
    }
  }
  else
  {
    BOOL v39 = 0;
  }
  if (v35 > 5 || v39)
  {
    int v41 = kDQuadParamTable[10 * v35 + 164];
    unsigned int v42 = v41 + 3;
    if (v39) {
      int v43 = 0;
    }
    else {
      int v43 = -2;
    }
    int v44 = v19 & ~(-1 << (7 - v41));
    if (v42 >= 0xA) {
      int v44 = 0;
    }
    int v45 = v44 + v43;
    if (v45 >= 1 && __clz(v45 + v32) < v33) {
      ++v35;
    }
  }
  unint64_t v49 = (unint64_t)&kDQuadParamTable[10 * v35];
  unint64_t v46 = *(void *)(v49 + 648);
  int v47 = *(_DWORD *)(v49 + 656);
  int v48 = *(_DWORD *)(v49 + 660);
  LODWORD(v49) = v48 + 3;
  if (a4) {
    BOOL v50 = a5 == 0;
  }
  else {
    BOOL v50 = 1;
  }
  int v51 = v50;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v52 = a4 == 0;
    }
    else {
      BOOL v52 = 1;
    }
    int v53 = !v52;
  }
  else
  {
    int v53 = 0;
  }
  unint64_t v54 = 0;
  unsigned int v55 = 0;
  if (v46 >> v49 > 4) {
    int v53 = 1;
  }
  unsigned int v56 = v47 + 3;
  memset(v123, 0, sizeof(v123));
  int v124 = 0;
  if (v48) {
    unsigned int v57 = 10;
  }
  else {
    unsigned int v57 = 0;
  }
  if (v56 >= 0xA) {
    uint64_t v58 = 10;
  }
  else {
    uint64_t v58 = v56;
  }
  if (v57 >= v49) {
    unint64_t v49 = v49;
  }
  else {
    unint64_t v49 = v57;
  }
  unsigned int v59 = v19 & (-1 << (10 - v58));
  unsigned int v60 = v13 - v59;
  if (v51) {
    unsigned int v60 = 0;
  }
  BOOL v20 = v16 == 0;
  unsigned __int32 v61 = v126.i32[1] - v59;
  if (!v20) {
    unsigned __int32 v61 = 0;
  }
  v125[0] = v60;
  v125[1] = v61;
  unint64_t v62 = v17;
  unint64_t v63 = v46 >> v49;
  if (v21) {
    unsigned __int32 v64 = 0;
  }
  else {
    unsigned __int32 v64 = v126.i32[2] - v59;
  }
  BOOL v20 = v23 == 0;
  unsigned __int32 v65 = v126.i32[3] - v59;
  if (!v20) {
    unsigned __int32 v65 = 0;
  }
  v125[2] = v64;
  v125[3] = v65;
  unsigned __int32 v66 = v127.i32[0] - v59;
  if (v25) {
    unsigned __int32 v66 = 0;
  }
  unsigned __int32 v67 = v127.i32[1] - v59;
  if (v27) {
    unsigned __int32 v67 = 0;
  }
  v125[4] = v66;
  v125[5] = v67;
  unsigned __int32 v68 = v127.i32[2] - v59;
  if (v29) {
    unsigned __int32 v68 = 0;
  }
  unsigned __int32 v69 = v127.i32[3] - v59;
  if (v31) {
    unsigned __int32 v69 = 0;
  }
  v125[6] = v68;
  v125[7] = v69;
  if (v63 <= 1) {
    unint64_t v70 = 1;
  }
  else {
    unint64_t v70 = v46 >> v49;
  }
  uint64_t v71 = 4 * v17;
  int16x8_t v72 = &byte_242EA911D;
  do
  {
    if (v71 != v54)
    {
      if (v49) {
        unint64_t v73 = v125[v54 / 4] / v70;
      }
      else {
        LODWORD(v73) = 0;
      }
      *((_DWORD *)v123 + v55) = v73;
      if (v63 >= 2)
      {
        unint64_t v74 = v125[v54 / 4];
        if (v74)
        {
          if (v74 / v70 * v70 == v74 && ((v74 / v70) & 1) != 0)
          {
            if (v59 || v73 != 1)
            {
              if ((a3 | 2) != 3 || (uint64_t v76 = v126.u32[v54 / 4], v76 != 512) && ((a3 | 2) != 3 || v70 + 512 != v76))
              {
                LODWORD(v73) = v73 - 1;
                *((_DWORD *)v123 + v55) = v73;
              }
            }
            else
            {
              LODWORD(v73) = 1;
            }
          }
        }
      }
      if (v73 >> v49 || v126.i32[v54 / 4] == 1023) {
        *((_DWORD *)v123 + v55) = ~(-1 << v49);
      }
      if (*v72 >= a5 || *(v72 - 1) >= a4) {
        *((_DWORD *)v123 + v55) = 0;
      }
      ++v55;
    }
    v54 += 4;
    v72 += 2;
  }
  while (v54 != 32);
  uint64_t result = v53 | v51;
  int8x16_t v78 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v79 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if (result == 1)
  {
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v82 = v79;
    do
    {
      int8x16_t v83 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v80;
      if (v83[1] >= a5 || *v83 >= a4) {
        unint64_t v85 = 0;
      }
      else {
        unint64_t v85 = (unint64_t)v126.u32[v80] >> 2;
      }
      if ((unint64_t)(v82 - v79 + (v81 << 6) - 57) >= 0xFFFFFFFFFFFFFFBFLL)
      {
        uint64_t v86 = 0;
        unint64_t v87 = 8;
        do
        {
          unint64_t v88 = 64 - v82;
          if (64 - v82 >= v87) {
            unint64_t v88 = v87;
          }
          v78[v81] |= ((v85 >> v86) & ~(-1 << v88)) << v82;
          v86 += v88;
          unint64_t v89 = v88 + v82;
          v81 += v89 >> 6;
          uint64_t v82 = v89 & 0x3F;
          v87 -= v88;
        }
        while (v87);
      }
      ++v80;
    }
    while (v80 != 8);
    return result;
  }
  if (v19 | v35)
  {
    uint64_t v90 = v79 | 3;
    LODWORD(v91) = (v35 + 6) & 7;
    if (v35 < 3) {
      unint64_t v92 = v35 + 1;
    }
    else {
      unint64_t v92 = 0;
    }
    if (v35 >= 3) {
      uint64_t v91 = v91;
    }
    else {
      uint64_t v91 = 0;
    }
    *v78 |= v91 << v79;
    if (v35 >= 3)
    {
      uint64_t v94 = 0;
      int v98 = 3;
      if (!v58) {
        goto LABEL_236;
      }
LABEL_231:
      if ((unint64_t)(v58 - v79 + v90 + (v94 << 6)) <= 0x40)
      {
        uint64_t v99 = 0;
        unint64_t v100 = v58;
        do
        {
          unint64_t v101 = 64 - v90;
          if (64 - v90 >= v100) {
            unint64_t v101 = v100;
          }
          v78[v94] |= (((unint64_t)(v59 >> (10 - v58)) >> v99) & ~(-1 << v101)) << v90;
          v99 += v101;
          unint64_t v102 = v101 + v90;
          v94 += v102 >> 6;
          uint64_t v90 = v102 & 0x3F;
          v100 -= v101;
        }
        while (v100);
      }
      goto LABEL_236;
    }
    unint64_t v93 = 2 * (v35 < 3);
  }
  else
  {
    unint64_t v92 = 0;
    uint64_t v90 = v79 | 3;
    unint64_t v93 = 2;
  }
  if (v93 - v79 + v90 <= 0x40)
  {
    uint64_t v94 = 0;
    uint64_t v95 = 0;
    do
    {
      unint64_t v96 = 64 - v90;
      if (64 - v90 >= v93) {
        unint64_t v96 = v93;
      }
      v78[v94] |= ((v92 >> v95) & ~(-1 << v96)) << v90;
      v95 += v96;
      unint64_t v97 = v96 + v90;
      v94 += v97 >> 6;
      uint64_t v90 = v97 & 0x3F;
      v93 -= v96;
    }
    while (v93);
  }
  else
  {
    uint64_t v94 = 0;
  }
  int v98 = 5;
  if (!v35) {
    goto LABEL_237;
  }
  if (v58) {
    goto LABEL_231;
  }
LABEL_236:
  v98 += v58;
LABEL_237:
  if (v49)
  {
    if ((unint64_t)(v90 - v79 + (v94 << 6) + 3) <= 0x40)
    {
      uint64_t v103 = 0;
      unint64_t v104 = 3;
      do
      {
        unint64_t v105 = 64 - v90;
        if (64 - v90 >= v104) {
          unint64_t v105 = v104;
        }
        v78[v94] |= ((v62 >> v103) & ~(-1 << v105)) << v90;
        v103 += v105;
        unint64_t v106 = v105 + v90;
        v94 += v106 >> 6;
        uint64_t v90 = v106 & 0x3F;
        v104 -= v105;
      }
      while (v104);
    }
    v98 += 3;
  }
  unsigned int v107 = (((37 * (64 - v98)) >> 8)
        + (((64 - v98 - ((unsigned __int16)(37 * (64 - v98)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v108 = -7 * v107 + 64 - v98;
  if ((v108 - 257) >= 0xFFFFFF00 && v90 - v79 + (v94 << 6) + v108 <= 0x40)
  {
    do
    {
      unint64_t v109 = 64 - v90;
      if (64 - v90 >= v108) {
        unint64_t v109 = v108;
      }
      unint64_t v110 = v109 + v90;
      v94 += v110 >> 6;
      uint64_t v90 = v110 & 0x3F;
      v108 -= v109;
    }
    while (v108);
  }
  uint64_t v111 = 0;
  unint64_t v112 = v107 - v49;
  if (v112) {
    BOOL v113 = v112 > 0x100;
  }
  else {
    BOOL v113 = 1;
  }
  char v114 = v113;
  do
  {
    if (v49 && v49 - v79 + v90 + (v94 << 6) <= 0x40)
    {
      uint64_t v115 = 0;
      unint64_t v116 = *((unsigned int *)v123 + v111);
      unint64_t v117 = v49;
      do
      {
        unint64_t v118 = 64 - v90;
        if (64 - v90 >= v117) {
          unint64_t v118 = v117;
        }
        v78[v94] |= ((v116 >> v115) & ~(-1 << v118)) << v90;
        v115 += v118;
        unint64_t v119 = v118 + v90;
        v94 += v119 >> 6;
        uint64_t v90 = v119 & 0x3F;
        v117 -= v118;
      }
      while (v117);
    }
    if ((v114 & 1) == 0 && v90 - v79 + (v94 << 6) + v112 <= 0x40)
    {
      unint64_t v120 = v112;
      do
      {
        unint64_t v121 = 64 - v90;
        if (64 - v90 >= v120) {
          unint64_t v121 = v120;
        }
        unint64_t v122 = v121 + v90;
        v94 += v122 >> 6;
        uint64_t v90 = v122 & 0x3F;
        v120 -= v121;
      }
      while (v120);
    }
    ++v111;
  }
  while (v111 != 7);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::decompressSubblock(uint64_t a1, uint64_t a2, int32x4_t *a3, unsigned int a4, int a5, double a6, double a7, double a8, int8x8_t a9)
{
  uint64_t v469 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v194 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    uint16x8_t v195 = (void *)(a1 + a2);
    *uint16x8_t v195 = 0;
    v195[1] = 0;
    int16x8_t v196 = (void *)(a1 + 2 * a2);
    *int16x8_t v196 = 0;
    v196[1] = 0;
    int16x8_t v197 = (void *)(a1 + a2 + 2 * a2);
LABEL_319:
    *int16x8_t v197 = 0;
    v197[1] = 0;
    return v194;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v9 = 0;
    unsigned int v10 = a5 & 0xFFFFFFFD;
    uint64x2_t v427 = a3;
    unsigned int v426 = a4;
    while (1)
    {
      unint64_t v28 = (unint64_t)a3 + 8 * v9;
      int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v30 = 8 * (v28 & 7);
      if ((a4 >> v9))
      {
        uint64_t v31 = 0;
        uint64_t v32 = 0;
        uint64_t v33 = v30;
        do
        {
          if ((unint64_t)(v33 - v30 + (v32 << 6) - 57) < 0xFFFFFFFFFFFFFFBFLL)
          {
            unsigned __int8 v34 = 0;
          }
          else
          {
            unsigned __int8 v34 = 0;
            uint64_t v38 = 0;
            unint64_t v39 = 8;
            do
            {
              if (64 - v33 >= v39) {
                unint64_t v40 = v39;
              }
              else {
                unint64_t v40 = 64 - v33;
              }
              v34 |= (unint64_t)((v29[v32] >> v33) & ~(-1 << v40)) << v38;
              v38 += v40;
              unint64_t v41 = v40 + v33;
              v32 += v41 >> 6;
              uint64_t v33 = v41 & 0x3F;
              v39 -= v40;
            }
            while (v39);
          }
          int v35 = 4 * v34;
          int v36 = v35 - (v34 & 1) + 2;
          if (v35 == 1020) {
            int v36 = 1023;
          }
          if (!v35) {
            int v36 = 0;
          }
          if (v35 == 512 && v10 == 1) {
            int v36 = v35;
          }
          if (a5 == 4) {
            int v36 = v35;
          }
          *(&v428 + v31++) = v36 ^ (((a5 & 0xFFFFFFFD) == 1) << 9);
        }
        while (v31 != 8);
        LOWORD(v12) = v428;
        LOWORD(v11) = v429;
        LOWORD(v13) = v430;
        LOWORD(v14) = v431;
        LOWORD(v15) = v432;
        LOWORD(v16) = v433;
        __int16 v18 = v434;
        __int16 v17 = v435;
        goto LABEL_5;
      }
      uint64_t v42 = v30 | 3;
      if (((*v29 >> v30) & 7) != 0)
      {
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        int v45 = 0;
        int v46 = ((*v29 >> v30) & 7) + 2;
        int v47 = 3;
        goto LABEL_41;
      }
      if ((unint64_t)(v42 - v30) > 0x3E) {
        break;
      }
      uint64_t v44 = 0;
      char v48 = 0;
      uint64_t v49 = 0;
      unint64_t v50 = 2;
      do
      {
        unint64_t v51 = 64 - v42;
        if (64 - v42 >= v50) {
          unint64_t v51 = v50;
        }
        v48 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v51)) << v49;
        v49 += v51;
        unint64_t v52 = v51 + v42;
        v44 += v52 >> 6;
        uint64_t v42 = v52 & 0x3F;
        v50 -= v51;
      }
      while (v50);
      int v45 = v48 & 3;
      switch(v45)
      {
        case 2:
          unsigned int v43 = 0;
          int v46 = 1;
          goto LABEL_40;
        case 1:
          int v46 = 0;
          int v45 = 2;
          int v47 = 5;
          unsigned int v43 = 1023;
          break;
        case 0:
          goto LABEL_39;
        default:
          unsigned int v43 = 0;
          int v45 = 2;
          int v47 = 5;
          int v46 = 2;
          break;
      }
LABEL_41:
      int v53 = &kDQuadParamTable[10 * v46];
      LODWORD(v54) = v53[164] + 3;
      int v55 = v53[165];
      unsigned int v56 = v55 + 3;
      if (v54 >= 0xA) {
        uint64_t v54 = 10;
      }
      else {
        uint64_t v54 = v54;
      }
      if (v55) {
        unsigned int v57 = 10;
      }
      else {
        unsigned int v57 = 0;
      }
      if (v57 >= v56) {
        unint64_t v58 = v56;
      }
      else {
        unint64_t v58 = v57;
      }
      char v59 = 10 - v54;
      if (v46)
      {
        if (v54)
        {
          if ((unint64_t)(v54 - v30 + v42 + (v44 << 6)) <= 0x40)
          {
            int v60 = 0;
            uint64_t v61 = 0;
            unint64_t v62 = v54;
            do
            {
              unint64_t v63 = 64 - v42;
              if (64 - v42 >= v62) {
                unint64_t v63 = v62;
              }
              v60 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v63)) << v61;
              v61 += v63;
              unint64_t v64 = v63 + v42;
              v44 += v64 >> 6;
              uint64_t v42 = v64 & 0x3F;
              v62 -= v63;
            }
            while (v62);
          }
          else
          {
            int v60 = 0;
          }
          int v47 = v54 + v45 + 3;
        }
        else
        {
          int v60 = 0;
        }
        unsigned int v43 = v60 << v59;
      }
      if (v58)
      {
        if ((unint64_t)(v42 - v30 + (v44 << 6) + 3) <= 0x40)
        {
          int v65 = 0;
          uint64_t v67 = 0;
          unint64_t v68 = 3;
          do
          {
            unint64_t v69 = 64 - v42;
            if (64 - v42 >= v68) {
              unint64_t v69 = v68;
            }
            v65 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v69)) << v67;
            v67 += v69;
            unint64_t v70 = v69 + v42;
            v44 += v70 >> 6;
            uint64_t v42 = v70 & 0x3F;
            v68 -= v69;
          }
          while (v68);
        }
        else
        {
          int v65 = 0;
        }
        uint64_t v465 = 0;
        uint64_t v466 = 0;
        int v468 = 0;
        uint64_t v467 = 0;
        unsigned int v71 = 61 - v47;
        unsigned int v72 = v71 / 7;
        unint64_t v73 = v58 - v30;
        unint64_t v74 = (v42 | (v44 << 6)) + v71 % 7;
        unint64_t v75 = v74 & 0x3F;
        if (v73 + v75 + (v74 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          uint64_t v66 = 0;
          uint64_t v76 = 0;
          unint64_t v77 = v74 >> 6;
          unint64_t v78 = v58;
          do
          {
            unint64_t v79 = 64 - v75;
            if (64 - v75 >= v78) {
              unint64_t v79 = v78;
            }
            v66 |= ((unint64_t)((v29[v77] >> v75) & ~(-1 << v79)) << v76);
            v76 += v79;
            unint64_t v80 = v79 + v75;
            v77 += v80 >> 6;
            unint64_t v75 = v80 & 0x3F;
            v78 -= v79;
          }
          while (v78);
          LODWORD(v465) = v66;
          unint64_t v74 = v75 | (v77 << 6);
        }
        else
        {
          uint64_t v66 = 0;
        }
        uint64_t v81 = v72 - v58;
        unint64_t v82 = v74 + v81;
        uint64_t v83 = (v74 + v81) & 0x3F;
        if (v73 + v83 + (v82 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v84 = 0;
          uint64_t v85 = 0;
          unint64_t v86 = v82 >> 6;
          unint64_t v87 = v58;
          do
          {
            unint64_t v88 = 64 - v83;
            if (64 - v83 >= v87) {
              unint64_t v88 = v87;
            }
            v84 |= (unint64_t)((v29[v86] >> v83) & ~(-1 << v88)) << v85;
            v85 += v88;
            unint64_t v89 = v88 + v83;
            v86 += v89 >> 6;
            uint64_t v83 = v89 & 0x3F;
            v87 -= v88;
          }
          while (v87);
          HIDWORD(v465) = v84;
          unint64_t v82 = v83 | (v86 << 6);
        }
        else
        {
          HIDWORD(v465) = 0;
        }
        unint64_t v90 = v82 + v81;
        uint64_t v91 = v90 & 0x3F;
        if (v73 + v91 + (v90 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v92 = 0;
          uint64_t v93 = 0;
          unint64_t v94 = v90 >> 6;
          unint64_t v95 = v58;
          do
          {
            unint64_t v96 = 64 - v91;
            if (64 - v91 >= v95) {
              unint64_t v96 = v95;
            }
            v92 |= (unint64_t)((v29[v94] >> v91) & ~(-1 << v96)) << v93;
            v93 += v96;
            unint64_t v97 = v96 + v91;
            v94 += v97 >> 6;
            uint64_t v91 = v97 & 0x3F;
            v95 -= v96;
          }
          while (v95);
          LODWORD(v466) = v92;
          unint64_t v90 = v91 | (v94 << 6);
        }
        else
        {
          LODWORD(v466) = 0;
        }
        unint64_t v98 = v90 + v81;
        uint64_t v99 = v98 & 0x3F;
        if (v73 + v99 + (v98 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v100 = 0;
          uint64_t v101 = 0;
          unint64_t v102 = v98 >> 6;
          unint64_t v103 = v58;
          do
          {
            unint64_t v104 = 64 - v99;
            if (64 - v99 >= v103) {
              unint64_t v104 = v103;
            }
            v100 |= (unint64_t)((v29[v102] >> v99) & ~(-1 << v104)) << v101;
            v101 += v104;
            unint64_t v105 = v104 + v99;
            v102 += v105 >> 6;
            uint64_t v99 = v105 & 0x3F;
            v103 -= v104;
          }
          while (v103);
          HIDWORD(v466) = v100;
          unint64_t v98 = v99 | (v102 << 6);
        }
        else
        {
          HIDWORD(v466) = 0;
        }
        unint64_t v106 = v98 + v81;
        uint64_t v107 = v106 & 0x3F;
        if (v73 + v107 + (v106 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v108 = 0;
          uint64_t v109 = 0;
          unint64_t v110 = v106 >> 6;
          unint64_t v111 = v58;
          do
          {
            unint64_t v112 = 64 - v107;
            if (64 - v107 >= v111) {
              unint64_t v112 = v111;
            }
            v108 |= (unint64_t)((v29[v110] >> v107) & ~(-1 << v112)) << v109;
            v109 += v112;
            unint64_t v113 = v112 + v107;
            v110 += v113 >> 6;
            uint64_t v107 = v113 & 0x3F;
            v111 -= v112;
          }
          while (v111);
          LODWORD(v467) = v108;
          unint64_t v106 = v107 | (v110 << 6);
        }
        else
        {
          LODWORD(v467) = 0;
        }
        unint64_t v114 = v106 + v81;
        unint64_t v115 = v114 >> 6;
        uint64_t v116 = v114 & 0x3F;
        if (v73 + v116 + (v114 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v117 = 0;
          uint64_t v118 = 0;
          unint64_t v119 = v58;
          do
          {
            unint64_t v120 = 64 - v116;
            if (64 - v116 >= v119) {
              unint64_t v120 = v119;
            }
            v117 |= (unint64_t)((v29[v115] >> v116) & ~(-1 << v120)) << v118;
            v118 += v120;
            unint64_t v121 = v120 + v116;
            v115 += v121 >> 6;
            uint64_t v116 = v121 & 0x3F;
            v119 -= v120;
          }
          while (v119);
        }
        else
        {
          int v117 = 0;
        }
        HIDWORD(v467) = v117;
        unint64_t v122 = (v116 | (v115 << 6)) + v81;
        uint64_t v123 = v122 & 0x3F;
        if (v73 + v123 + (v122 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v124 = 0;
          uint64_t v125 = 0;
          unint64_t v126 = v122 >> 6;
          unint64_t v127 = v58;
          do
          {
            unint64_t v128 = 64 - v123;
            if (64 - v123 >= v127) {
              unint64_t v128 = v127;
            }
            v124 |= (unint64_t)((v29[v126] >> v123) & ~(-1 << v128)) << v125;
            v125 += v128;
            unint64_t v129 = v128 + v123;
            v126 += v129 >> 6;
            uint64_t v123 = v129 & 0x3F;
            v127 -= v128;
          }
          while (v127);
        }
        else
        {
          int v124 = 0;
        }
        int v468 = v124;
      }
      else
      {
        int v65 = 0;
        uint64_t v66 = 0;
        uint64_t v465 = 0;
        uint64_t v466 = 0;
        int v468 = 0;
        uint64_t v467 = 0;
      }
      unint64_t v130 = *(void *)&kDQuadParamTable[10 * v46 + 162];
      if (v130 >> v58 <= 1) {
        unint64_t v131 = 1;
      }
      else {
        unint64_t v131 = v130 >> v58;
      }
      unint64_t v132 = v131 >> 1;
      unint64_t v133 = (unint64_t)(1 << v59) >> 1;
      if (v131 >> 1 < v133) {
        unint64_t v133 = v131 >> 1;
      }
      unint64_t v134 = 512 - v43;
      if (v43) {
        uint64_t v135 = v133;
      }
      else {
        uint64_t v135 = 0;
      }
      BOOL v136 = v43 == 512;
      if (v43 >= 0x3FF) {
        __int16 v137 = 1023;
      }
      else {
        __int16 v137 = v43;
      }
      __int16 v138 = v137 ^ 0x200;
      if (v131 <= v134)
      {
        __int16 v139 = 511;
      }
      else
      {
        __int16 v138 = 0;
        __int16 v139 = 0;
      }
      if (v10 == 1) {
        __int16 v140 = v138;
      }
      else {
        __int16 v140 = v137;
      }
      if (v10 == 1) {
        __int16 v17 = v139;
      }
      else {
        __int16 v17 = 1023;
      }
      if (!v58)
      {
        if (a5 == 4)
        {
          __int16 v18 = v17;
          LOWORD(v16) = v17;
          LOWORD(v15) = v17;
          LOWORD(v14) = v17;
          LOWORD(v13) = v17;
          LOWORD(v11) = v17;
          LOWORD(v12) = v17;
          a3 = v427;
          a4 = v426;
          if ((v43 & 0x7FC00000 | 0x80000000) != 0xFF800000)
          {
            __int16 v17 = v140;
            __int16 v18 = v140;
            LOWORD(v16) = v140;
            LOWORD(v15) = v140;
            LOWORD(v14) = v140;
            LOWORD(v13) = v140;
            LOWORD(v11) = v140;
            LOWORD(v12) = v140;
          }
          goto LABEL_5;
        }
        __int16 v17 = v140;
        __int16 v18 = v140;
        LOWORD(v16) = v140;
        LOWORD(v15) = v140;
        LOWORD(v14) = v140;
        LOWORD(v13) = v140;
        LOWORD(v11) = v140;
        LOWORD(v12) = v140;
        goto LABEL_314;
      }
      unint64_t v141 = v130 + v43;
      uint64_t v142 = ~(-1 << v58);
      unint64_t v143 = v134 / v131;
      if (!v65)
      {
        uint64_t v146 = 0;
        uint64_t v145 = v135;
        BOOL v144 = v43 == 512;
        goto LABEL_152;
      }
      BOOL v144 = v143 == v66;
      if (v43 || v66)
      {
        if (v141 >= 0x400 && v66 == v142)
        {
          uint64_t v146 = 1;
          uint64_t v145 = 1023;
          goto LABEL_152;
        }
        uint64_t v145 = v132 + v131 * v66;
      }
      else
      {
        uint64_t v145 = 0;
      }
      uint64_t v146 = 1;
LABEL_152:
      unint64_t v147 = v145 + v43;
      unint64_t v148 = v147;
      if (a5 == 4)
      {
        unint64_t v148 = 2139095039;
        if ((v147 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v148 = 4286578687;
          if ((v147 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v148 = v147;
          }
        }
      }
      if (v148 >= 0x3FF) {
        int v149 = 1023;
      }
      else {
        int v149 = v148;
      }
      if (v144) {
        int v150 = 0;
      }
      else {
        int v150 = v149 ^ 0x200;
      }
      if (v10 == 1) {
        int v12 = v150;
      }
      else {
        int v12 = v149;
      }
      int v428 = v12;
      if (v65 == 1)
      {
        uint64_t v151 = v135;
        BOOL v152 = v43 == 512;
      }
      else
      {
        uint64_t v153 = *(unsigned int *)((unint64_t)&v465 | (4 * v146));
        BOOL v152 = v143 == v153;
        if (v43 | v153)
        {
          if (v141 >= 0x400 && v153 == v142) {
            uint64_t v151 = 1023;
          }
          else {
            uint64_t v151 = v132 + v131 * v153;
          }
        }
        else
        {
          uint64_t v151 = 0;
        }
        ++v146;
      }
      unint64_t v154 = v151 + v43;
      unint64_t v155 = v154;
      if (a5 == 4)
      {
        unint64_t v155 = 2139095039;
        if ((v154 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v155 = 4286578687;
          if ((v154 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v155 = v154;
          }
        }
      }
      if (v155 >= 0x3FF) {
        int v156 = 1023;
      }
      else {
        int v156 = v155;
      }
      if (v152) {
        int v157 = 0;
      }
      else {
        int v157 = v156 ^ 0x200;
      }
      if (v10 == 1) {
        int v11 = v157;
      }
      else {
        int v11 = v156;
      }
      int v429 = v11;
      if (v65 == 2)
      {
        uint64_t v158 = v135;
        BOOL v159 = v43 == 512;
      }
      else
      {
        uint64_t v160 = *((unsigned int *)&v465 + v146);
        BOOL v159 = v143 == v160;
        if (v43 | v160)
        {
          if (v141 >= 0x400 && v160 == v142) {
            uint64_t v158 = 1023;
          }
          else {
            uint64_t v158 = v132 + v131 * v160;
          }
        }
        else
        {
          uint64_t v158 = 0;
        }
        ++v146;
      }
      unint64_t v161 = v158 + v43;
      unint64_t v162 = v161;
      if (a5 == 4)
      {
        unint64_t v162 = 2139095039;
        if ((v161 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v162 = 4286578687;
          if ((v161 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v162 = v161;
          }
        }
      }
      if (v162 >= 0x3FF) {
        int v163 = 1023;
      }
      else {
        int v163 = v162;
      }
      if (v159) {
        int v13 = 0;
      }
      else {
        int v13 = v163 ^ 0x200;
      }
      if (v10 != 1) {
        int v13 = v163;
      }
      int v430 = v13;
      if (v65 == 3)
      {
        uint64_t v164 = v135;
        BOOL v165 = v43 == 512;
      }
      else
      {
        uint64_t v166 = *((unsigned int *)&v465 + v146);
        BOOL v165 = v143 == v166;
        if (v43 | v166)
        {
          if (v141 >= 0x400 && v166 == v142) {
            uint64_t v164 = 1023;
          }
          else {
            uint64_t v164 = v132 + v131 * v166;
          }
        }
        else
        {
          uint64_t v164 = 0;
        }
        ++v146;
      }
      unint64_t v167 = v164 + v43;
      unint64_t v168 = v167;
      if (a5 == 4)
      {
        unint64_t v168 = 2139095039;
        if ((v167 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v167 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v168 = 4286578687;
          }
          else {
            unint64_t v168 = v167;
          }
        }
      }
      if (v168 >= 0x3FF) {
        int v169 = 1023;
      }
      else {
        int v169 = v168;
      }
      if (v165) {
        int v170 = 0;
      }
      else {
        int v170 = v169 ^ 0x200;
      }
      if (v10 == 1) {
        int v14 = v170;
      }
      else {
        int v14 = v169;
      }
      int v431 = v14;
      if (v65 == 4)
      {
        uint64_t v171 = v135;
        BOOL v172 = v43 == 512;
      }
      else
      {
        uint64_t v173 = *((unsigned int *)&v465 + v146);
        BOOL v172 = v143 == v173;
        if (v43 | v173)
        {
          if (v141 >= 0x400 && v173 == v142) {
            uint64_t v171 = 1023;
          }
          else {
            uint64_t v171 = v132 + v131 * v173;
          }
        }
        else
        {
          uint64_t v171 = 0;
        }
        ++v146;
      }
      unint64_t v174 = v171 + v43;
      unint64_t v175 = v174;
      if (a5 == 4)
      {
        unint64_t v175 = 2139095039;
        if ((v174 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v174 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v175 = 4286578687;
          }
          else {
            unint64_t v175 = v174;
          }
        }
      }
      if (v175 >= 0x3FF) {
        int v176 = 1023;
      }
      else {
        int v176 = v175;
      }
      if (v172) {
        int v177 = 0;
      }
      else {
        int v177 = v176 ^ 0x200;
      }
      if (v10 == 1) {
        int v15 = v177;
      }
      else {
        int v15 = v176;
      }
      int v432 = v15;
      unint64_t v425 = v141;
      if (v65 == 5)
      {
        uint64_t v178 = ~(-1 << v58);
        uint64_t v179 = v135;
        BOOL v180 = v43 == 512;
      }
      else
      {
        uint64_t v181 = *((unsigned int *)&v465 + v146);
        BOOL v180 = v143 == v181;
        if (v43 | v181)
        {
          if (v141 >= 0x400 && v181 == v142)
          {
            uint64_t v178 = ~(-1 << v58);
            uint64_t v179 = 1023;
          }
          else
          {
            uint64_t v178 = ~(-1 << v58);
            uint64_t v179 = v132 + v131 * v181;
          }
        }
        else
        {
          uint64_t v178 = ~(-1 << v58);
          uint64_t v179 = 0;
        }
        ++v146;
      }
      unint64_t v182 = v179 + v43;
      unint64_t v183 = v182;
      if (a5 == 4)
      {
        unint64_t v183 = 2139095039;
        if ((v182 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v182 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v183 = 4286578687;
          }
          else {
            unint64_t v183 = v182;
          }
        }
      }
      if (v183 >= 0x3FF) {
        int v184 = 1023;
      }
      else {
        int v184 = v183;
      }
      if (v180) {
        int v185 = 0;
      }
      else {
        int v185 = v184 ^ 0x200;
      }
      if (v10 == 1) {
        int v16 = v185;
      }
      else {
        int v16 = v184;
      }
      int v433 = v16;
      if (v65 == 6)
      {
        uint64_t v186 = v135;
        BOOL v187 = v43 == 512;
      }
      else
      {
        uint64_t v188 = *((unsigned int *)&v465 + v146);
        BOOL v187 = v143 == v188;
        if (v43 | v188)
        {
          if (v425 >= 0x400 && v188 == v178) {
            uint64_t v186 = 1023;
          }
          else {
            uint64_t v186 = v132 + v131 * v188;
          }
        }
        else
        {
          uint64_t v186 = 0;
        }
        ++v146;
      }
      unint64_t v189 = v186 + v43;
      unint64_t v190 = v189;
      if (a5 == 4)
      {
        unint64_t v190 = 2139095039;
        if ((v189 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v190 = 4286578687;
          if ((v189 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v190 = v189;
          }
        }
      }
      if (v190 >= 0x3FF) {
        LOWORD(v190) = 1023;
      }
      if (v187) {
        __int16 v18 = 0;
      }
      else {
        __int16 v18 = v190 ^ 0x200;
      }
      if (v10 != 1) {
        __int16 v18 = v190;
      }
      if (v65 != 7)
      {
        uint64_t v191 = *((unsigned int *)&v465 + v146);
        BOOL v136 = v143 == v191;
        if (v43 | v191)
        {
          if (v425 >= 0x400 && v191 == v178) {
            uint64_t v135 = 1023;
          }
          else {
            uint64_t v135 = v132 + v131 * v191;
          }
        }
        else
        {
          uint64_t v135 = 0;
        }
      }
      unint64_t v192 = v135 + v43;
      unint64_t v193 = v192;
      if (a5 == 4)
      {
        unint64_t v193 = 2139095039;
        if ((v192 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v193 = 4286578687;
          if ((v192 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v193 = v135 + v43;
          }
        }
      }
      if (v193 >= 0x3FF) {
        LOWORD(v193) = 1023;
      }
      __int16 v17 = v193 ^ 0x200;
      if (v136) {
        __int16 v17 = 0;
      }
      if (v10 != 1) {
        __int16 v17 = v193;
      }
LABEL_314:
      a3 = v427;
      a4 = v426;
LABEL_5:
      unsigned int v19 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v9;
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      BOOL v22 = &v436 + v20;
      uint64_t v23 = 2 * v21;
      *(_WORD *)((char *)v22 + v23) = v12;
      BOOL v24 = &v436 + (v20 + 1);
      *(_WORD *)((char *)v24 + v23) = v11;
      uint64_t v25 = 2 * (v21 + 1);
      *(_WORD *)((char *)v22 + v25) = v13;
      *(_WORD *)((char *)v24 + v25) = v14;
      BOOL v26 = &v436 + (v20 + 2);
      *(_WORD *)((char *)v26 + v23) = v15;
      int v27 = &v436 + (v20 + 3);
      *(_WORD *)((char *)v27 + v23) = v16;
      *(_WORD *)((char *)v26 + v25) = v18;
      *(_WORD *)((char *)v27 + v25) = v17;
      if (++v9 == 4)
      {
        *(_WORD *)a1 = (_WORD)v436 << 6;
        *(_WORD *)(a1 + 2) = v437 << 6;
        *(_WORD *)(a1 + 4) = v441 << 6;
        *(_WORD *)(a1 + 6) = v445 << 6;
        *(_WORD *)(a1 + 8) = v449 << 6;
        *(_WORD *)(a1 + 10) = v453 << 6;
        *(_WORD *)(a1 + 12) = v457 << 6;
        *(_WORD *)(a1 + 14) = v461 << 6;
        int32x4_t v199 = (_WORD *)(a1 + a2);
        *int32x4_t v199 = WORD1(v436) << 6;
        v199[1] = v438 << 6;
        v199[2] = v442 << 6;
        v199[3] = v446 << 6;
        v199[4] = v450 << 6;
        v199[5] = v454 << 6;
        v199[6] = v458 << 6;
        v199[7] = v462 << 6;
        int32x4_t v200 = (_WORD *)(a1 + a2 + a2);
        *int32x4_t v200 = WORD2(v436) << 6;
        v200[1] = v439 << 6;
        v200[2] = v443 << 6;
        v200[3] = v447 << 6;
        v200[4] = v451 << 6;
        v200[5] = v455 << 6;
        v200[6] = v459 << 6;
        v200[7] = v463 << 6;
        int32x4_t v201 = (_WORD *)((char *)v200 + a2);
        *int32x4_t v201 = HIWORD(v436) << 6;
        v201[1] = v440 << 6;
        v201[2] = v444 << 6;
        v201[3] = v448 << 6;
        v201[4] = v452 << 6;
        v201[5] = v456 << 6;
        v201[6] = v460 << 6;
        uint64_t v194 = 32;
        v201[7] = v464 << 6;
        return v194;
      }
    }
    uint64_t v44 = 0;
LABEL_39:
    unsigned int v43 = 0;
    int v46 = 0;
    int v45 = 2;
LABEL_40:
    int v47 = 5;
    goto LABEL_41;
  }
  switch(a4)
  {
    case 0x3Fu:
      int32x4_t v203 = *a3;
      int32x4_t v204 = a3[1];
      int32x4_t v205 = a3[2];
      int32x4_t v206 = a3[3];
      *(int32x4_t *)a1 = vuzp1q_s32(*a3, v205);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v203, v205);
      int64x2_t v207 = (int32x4_t *)(a1 + 2 * a2);
      *int64x2_t v207 = vuzp1q_s32(v204, v206);
      *(int32x4_t *)((char *)v207 + a2) = vuzp2q_s32(v204, v206);
      return 64;
    case 0x27u:
      v208.i64[0] = 0xA000A000A000ALL;
      v208.i64[1] = 0xA000A000A000ALL;
      int8x16_t v209 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v208, v208));
      unint64_t v210 = vpaddq_s32((int32x4_t)v209, (int32x4_t)v209).u64[0];
      v211.i64[0] = v210;
      v211.i64[1] = HIDWORD(v210);
      int8x16_t v212 = (int8x16_t)v211;
      unint64_t v213 = vaddvq_s64(v211);
      int8x16_t v214 = 0uLL;
      int8x16_t v215 = 0uLL;
      int8x16_t v216 = 0uLL;
      int8x16_t v217 = 0uLL;
      if (v213 <= 0x80)
      {
        uint16x8_t v218 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v219 = 8 * (a3 & 7);
        int64x2_t v220 = vzip1q_s64((int64x2_t)0, (int64x2_t)v212);
        unint64_t v221 = v213 + v219;
        int64x2_t v222 = vaddq_s64(v220, vdupq_n_s64(v219));
        int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v222)));
        if (v213 + v219 >= 0x81) {
          int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v218[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v222))), v215);
        }
        unint64_t v223 = v221 & 0x3F;
        uint64x2_t v224 = (int64x2_t *)((char *)v218 + 8 * (v221 >> 6));
        int64x2_t v225 = vaddq_s64(v220, vdupq_n_s64(v223));
        unint64_t v226 = v213 + v221;
        int8x16_t v216 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v224, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224->i64[0], 0), (uint64x2_t)vnegq_s64(v225)));
        if (v213 + v223 >= 0x81) {
          int8x16_t v216 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v224[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v225))), v216);
        }
        unint64_t v227 = v226 & 0x3F;
        int64x2_t v228 = (int64x2_t *)((char *)v218 + 8 * (v226 >> 6));
        int64x2_t v229 = vaddq_s64(v220, vdupq_n_s64(v227));
        unint64_t v230 = v213 + v226;
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v228, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228->i64[0], 0), (uint64x2_t)vnegq_s64(v229)));
        if (v213 + v227 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v228[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v229))), v214);
        }
        int8x16_t v212 = (int8x16_t)vaddq_s64(v220, vdupq_n_s64(v230 & 0x3F));
        int8x16_t v231 = (int64x2_t *)((char *)v218 + 8 * (v230 >> 6));
        int8x16_t v217 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v231, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v212)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v212)));
        if (v213 + (v230 & 0x3F) >= 0x81)
        {
          int8x16_t v212 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v212)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v231[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v212)));
          int8x16_t v217 = vorrq_s8(v212, v217);
        }
      }
      *(int32x2_t *)v212.i8 = vmovn_s64((int64x2_t)v214);
      int32x2_t v232 = vzip1_s32(*(int32x2_t *)v209.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v209, v209, 8uLL));
      v233.i64[0] = v232.u32[0];
      v233.i64[1] = v232.u32[1];
      uint64x2_t v234 = (uint64x2_t)vnegq_s64(v233);
      int64x2_t v235 = (int64x2_t)vshlq_u64((uint64x2_t)v214, v234);
      *(int32x2_t *)v235.i8 = vmovn_s64(v235);
      int16x8_t v236 = (int16x8_t)vzip1q_s32((int32x4_t)v212, (int32x4_t)v235);
      *(int16x4_t *)v212.i8 = vmovn_s32((int32x4_t)v236);
      *(int16x4_t *)v236.i8 = vshrn_n_s32((int32x4_t)v236, 0xAuLL);
      int8x16_t v237 = (int8x16_t)vzip1q_s16((int16x8_t)v212, v236);
      v238.i64[0] = 0x1000100010001;
      v238.i64[1] = 0x1000100010001;
      v239.i64[0] = -1;
      v239.i64[1] = -1;
      int8x16_t v240 = (int8x16_t)vaddq_s16(vshlq_n_s16(v238, 0xAuLL), v239);
      *(int32x2_t *)v239.i8 = vmovn_s64((int64x2_t)v216);
      int64x2_t v241 = (int64x2_t)vshlq_u64((uint64x2_t)v216, v234);
      *(int32x2_t *)v241.i8 = vmovn_s64(v241);
      int16x8_t v242 = (int16x8_t)vzip1q_s32((int32x4_t)v239, (int32x4_t)v241);
      *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v242);
      *(int16x4_t *)v242.i8 = vshrn_n_s32((int32x4_t)v242, 0xAuLL);
      int16x8_t v243 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v239, v242), v240);
      *(int32x2_t *)v239.i8 = vmovn_s64((int64x2_t)v215);
      int64x2_t v244 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v234);
      *(int32x2_t *)v244.i8 = vmovn_s64(v244);
      int16x8_t v245 = (int16x8_t)vzip1q_s32((int32x4_t)v239, (int32x4_t)v244);
      *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v245);
      *(int16x4_t *)v245.i8 = vshrn_n_s32((int32x4_t)v245, 0xAuLL);
      int64x2_t v246 = (int64x2_t)vshlq_u64((uint64x2_t)v217, v234);
      *(int32x2_t *)v217.i8 = vmovn_s64((int64x2_t)v217);
      *(int32x2_t *)v246.i8 = vmovn_s64(v246);
      int16x8_t v247 = (int16x8_t)vzip1q_s32((int32x4_t)v217, (int32x4_t)v246);
      *(int16x4_t *)v217.i8 = vmovn_s32((int32x4_t)v247);
      *(int16x4_t *)v247.i8 = vshrn_n_s32((int32x4_t)v247, 0xAuLL);
      int16x8_t v248 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v217, v247), v240);
      int32x4_t v249 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v239, v245), v240), 6uLL);
      int32x4_t v250 = (int32x4_t)vshlq_n_s16(v243, 6uLL);
      int32x4_t v251 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v237, v240), 6uLL);
      int32x4_t v252 = (int32x4_t)vshlq_n_s16(v248, 6uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v249, v251);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v249, v251);
      unint64_t v253 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v253 = vuzp1q_s32(v250, v252);
      *(int32x4_t *)((char *)v253 + a2) = vuzp2q_s32(v250, v252);
      return 40;
    case 1u:
      int16x8_t v198 = vdupq_n_s16(a3->u16[0] << 6);
      *(int16x8_t *)a1 = v198;
      *(int16x8_t *)(a1 + a2) = v198;
      *(int16x8_t *)(a1 + 2 * a2) = v198;
      *(int16x8_t *)(a1 + 3 * a2) = v198;
      return 2;
    default:
      unint64_t v254 = 8 * (a3 & 7);
      unint64_t v255 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v256 = v254 + 16;
      uint64_t v257 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v254;
      if (v254 >= 0x31) {
        v257 |= *(void *)(v255 + 8) << (-8 * (a3 & 7u));
      }
      unint64_t v258 = (8 * (a3 & 7)) | 0x100;
      int v259 = (a4 >> 6) | (4 * v257);
      uint16x8_t v260 = (uint16x8_t)vdupq_n_s16(v259 & 0xF);
      a9.i32[0] = v259 & 0xF;
      v261.i64[0] = 0x3000300030003;
      v261.i64[1] = 0x3000300030003;
      int8x16_t v262 = vbicq_s8((int8x16_t)vdupq_n_s16(((v257 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v261));
      int8x16_t v263 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a9, (int8x8_t)0x4000400040004), 0))));
      v264.i64[0] = 0x202020202020202;
      v264.i64[1] = 0x202020202020202;
      int8x16_t v265 = vandq_s8(v263, v264);
      if (vmaxvq_s8(v265) < 1)
      {
        int v275 = 0;
        v276.i64[0] = -1;
        v276.i64[1] = -1;
        int8x16_t v277 = v262;
        int8x16_t v278 = v262;
        int8x16_t v279 = v262;
        v280.i64[0] = -1;
        v280.i64[1] = -1;
        int8x16_t v281 = v262;
        v282.i64[0] = -1;
        v282.i64[1] = -1;
        v283.i64[0] = -1;
        v283.i64[1] = -1;
      }
      else
      {
        int8x16_t v266 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v265, v265));
        int8x16_t v267 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v266, (int16x8_t)v266));
        unint64_t v268 = vpaddq_s32((int32x4_t)v267, (int32x4_t)v267).u64[0];
        v269.i64[0] = v268;
        v269.i64[1] = HIDWORD(v268);
        int64x2_t v270 = v269;
        unint64_t v271 = vaddvq_s64(v269);
        unint64_t v272 = v271 + v256;
        if (v271 <= 0x80 && v258 >= v272)
        {
          unint64_t v284 = v256 & 0x38;
          int64x2_t v285 = vaddq_s64(vzip1q_s64((int64x2_t)0, v270), vdupq_n_s64(v284));
          int64x2_t v286 = (int64x2_t *)(v255 + ((v256 >> 3) & 8));
          int8x16_t v274 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v286, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v285)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v286->i64[0], 0), (uint64x2_t)vnegq_s64(v285)));
          if (v271 + v284 < 0x81)
          {
            int v275 = 0;
          }
          else
          {
            int v275 = 0;
            int8x16_t v274 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v286[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v285)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v286[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v285))), v274);
          }
          unint64_t v256 = v272;
        }
        else
        {
          int8x16_t v274 = 0uLL;
          int v275 = 1;
        }
        int32x2_t v287 = vzip1_s32(*(int32x2_t *)v267.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v267, v267, 8uLL));
        v288.i64[0] = v287.u32[0];
        v288.i64[1] = v287.u32[1];
        int64x2_t v289 = (int64x2_t)vshlq_u64((uint64x2_t)v274, (uint64x2_t)vnegq_s64(v288));
        *(int32x2_t *)v274.i8 = vmovn_s64((int64x2_t)v274);
        *(int32x2_t *)v289.i8 = vmovn_s64(v289);
        int8x16_t v290 = (int8x16_t)vzip1q_s32((int32x4_t)v274, (int32x4_t)v289);
        int16x8_t v291 = (int16x8_t)vshlq_u32((uint32x4_t)v290, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v266.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v266, v266, 8uLL)))));
        *(int16x4_t *)v290.i8 = vmovn_s32((int32x4_t)v290);
        *(int16x4_t *)v291.i8 = vmovn_s32((int32x4_t)v291);
        int8x16_t v292 = (int8x16_t)vzip1q_s16((int16x8_t)v290, v291);
        *(int8x8_t *)v292.i8 = vzip1_s8(vmovn_s16((int16x8_t)v292), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v292, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v265.i8, *(int8x8_t *)v260.i8))))));
        v290.i64[0] = 0x101010101010101;
        v290.i64[1] = 0x101010101010101;
        int8x16_t v293 = vshlq_s8(v290, v265);
        v290.i64[0] = -1;
        v290.i64[1] = -1;
        v293.i32[0] = vandq_s8(v292, vaddq_s8(v293, v290)).u32[0];
        int16x8_t v294 = vdupq_n_s16(v293.i8[0]);
        int16x8_t v295 = vdupq_n_s16(v293.i8[1]);
        int16x8_t v296 = vdupq_n_s16(v293.i8[2]);
        int16x8_t v297 = vdupq_n_s16(v293.i8[3]);
        int8x16_t v281 = (int8x16_t)vsubq_s16((int16x8_t)v262, v294);
        int8x16_t v279 = (int8x16_t)vsubq_s16((int16x8_t)v262, v295);
        int8x16_t v278 = (int8x16_t)vsubq_s16((int16x8_t)v262, v296);
        int8x16_t v277 = (int8x16_t)vsubq_s16((int16x8_t)v262, v297);
        int8x16_t v283 = (int8x16_t)vceqzq_s16(v294);
        int8x16_t v282 = (int8x16_t)vceqzq_s16(v295);
        int8x16_t v280 = (int8x16_t)vceqzq_s16(v296);
        int8x16_t v276 = (int8x16_t)vceqzq_s16(v297);
      }
      v298.i64[0] = 0x7000700070007;
      v298.i64[1] = 0x7000700070007;
      int8x16_t v299 = 0uLL;
      int8x16_t v300 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v260, v298), (int8x16_t)0, 0xEuLL), v262);
      int8x16_t v301 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v300, (int16x8_t)v300));
      unint64_t v302 = vpaddq_s32((int32x4_t)v301, (int32x4_t)v301).u64[0];
      v303.i64[0] = v302;
      v303.i64[1] = HIDWORD(v302);
      int64x2_t v304 = v303;
      unint64_t v305 = vaddvq_s64(v303);
      unint64_t v306 = v305 + v256;
      if (v305 <= 0x80 && v258 >= v306)
      {
        unint64_t v308 = v256 & 0x3F;
        int64x2_t v309 = vaddq_s64(vzip1q_s64((int64x2_t)0, v304), vdupq_n_s64(v308));
        uint64x2_t v310 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v299 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v310, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v309)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v310->i64[0], 0), (uint64x2_t)vnegq_s64(v309)));
        if (v305 + v308 >= 0x81) {
          int8x16_t v299 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v310[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v309)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v310[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v309))), v299);
        }
        unint64_t v256 = v306;
      }
      else
      {
        int v275 = 1;
      }
      int v311 = a4 >> 6;
      if (v311 == 2)
      {
        BOOL v312 = v258 >= v256 + 8;
        if (v258 >= v256 + 8) {
          v256 += 8;
        }
        unint64_t v313 = v256 + 8;
        if (!v312 || v258 < v313) {
          int v275 = 1;
        }
        if (v258 >= v313) {
          v256 += 8;
        }
      }
      int8x16_t v315 = 0uLL;
      int8x16_t v316 = vextq_s8((int8x16_t)0, v281, 0xEuLL);
      int8x16_t v317 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v316, (int16x8_t)v316));
      unint64_t v318 = vpaddq_s32((int32x4_t)v317, (int32x4_t)v317).u64[0];
      v319.i64[0] = v318;
      v319.i64[1] = HIDWORD(v318);
      int64x2_t v320 = v319;
      unint64_t v321 = vaddvq_s64(v319);
      unint64_t v322 = v321 + v256;
      if (v321 <= 0x80 && v258 >= v322)
      {
        unint64_t v325 = v256 & 0x3F;
        int64x2_t v326 = vaddq_s64(vzip1q_s64((int64x2_t)0, v320), vdupq_n_s64(v325));
        uint64x2_t v327 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v324 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v327, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327->i64[0], 0), (uint64x2_t)vnegq_s64(v326)));
        if (v321 + v325 >= 0x81) {
          int8x16_t v324 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v327[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v326))), v324);
        }
        unint64_t v256 = v322;
      }
      else
      {
        int v275 = 1;
        int8x16_t v324 = 0uLL;
      }
      int8x16_t v328 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v279, (int16x8_t)v279));
      unint64_t v329 = vpaddq_s32((int32x4_t)v328, (int32x4_t)v328).u64[0];
      v330.i64[0] = v329;
      v330.i64[1] = HIDWORD(v329);
      int64x2_t v331 = v330;
      unint64_t v332 = vaddvq_s64(v330);
      if (v332 < 0x81)
      {
        int32x2_t v333 = vzip1_s32(*(int32x2_t *)v328.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v328, v328, 8uLL));
        v334.i64[0] = v333.u32[0];
        v334.i64[1] = v333.u32[1];
        int64x2_t v335 = v334;
        int32x4_t v336 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v279.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v279, v279, 8uLL)));
        unint64_t v337 = v332 + v256;
        if (v258 >= v332 + v256)
        {
          unint64_t v338 = v256 & 0x3F;
          int64x2_t v339 = vaddq_s64(vzip1q_s64((int64x2_t)0, v331), vdupq_n_s64(v338));
          uint64x2_t v340 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
          int8x16_t v315 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v340, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v339)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v340->i64[0], 0), (uint64x2_t)vnegq_s64(v339)));
          if (v332 + v338 >= 0x81) {
            int8x16_t v315 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v340[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v339)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v340[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v339))), v315);
          }
          unint64_t v256 = v337;
        }
        else
        {
          int v275 = 1;
        }
        int64x2_t v341 = (int64x2_t)vshlq_u64((uint64x2_t)v315, (uint64x2_t)vnegq_s64(v335));
        *(int32x2_t *)v315.i8 = vmovn_s64((int64x2_t)v315);
        *(int32x2_t *)v341.i8 = vmovn_s64(v341);
        int16x8_t v342 = (int16x8_t)vzip1q_s32((int32x4_t)v315, (int32x4_t)v341);
        int16x8_t v343 = (int16x8_t)vshlq_u32((uint32x4_t)v342, (uint32x4_t)vnegq_s32(v336));
        *(int16x4_t *)v342.i8 = vmovn_s32((int32x4_t)v342);
        *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
        int8x16_t v315 = (int8x16_t)vzip1q_s16(v342, v343);
      }
      else
      {
        int v275 = 1;
      }
      int8x16_t v344 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v278, (int16x8_t)v278));
      unint64_t v345 = vpaddq_s32((int32x4_t)v344, (int32x4_t)v344).u64[0];
      v346.i64[0] = v345;
      v346.i64[1] = HIDWORD(v345);
      int64x2_t v347 = v346;
      unint64_t v348 = vaddvq_s64(v346);
      int8x16_t v349 = 0uLL;
      if (v348 <= 0x80)
      {
        int32x2_t v351 = vzip1_s32(*(int32x2_t *)v344.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v344, v344, 8uLL));
        v352.i64[0] = v351.u32[0];
        v352.i64[1] = v351.u32[1];
        int64x2_t v353 = v352;
        int32x4_t v354 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v278.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL)));
        unint64_t v355 = v348 + v256;
        if (v258 >= v348 + v256)
        {
          unint64_t v357 = v256 & 0x3F;
          int64x2_t v358 = vaddq_s64(vzip1q_s64((int64x2_t)0, v347), vdupq_n_s64(v357));
          uint64x2_t v359 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
          int8x16_t v356 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v359, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v358)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v359->i64[0], 0), (uint64x2_t)vnegq_s64(v358)));
          if (v348 + v357 >= 0x81) {
            int8x16_t v356 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v359[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v358)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v359[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v358))), v356);
          }
          unint64_t v256 = v355;
        }
        else
        {
          int8x16_t v356 = 0uLL;
          int v275 = 1;
        }
        int64x2_t v360 = (int64x2_t)vshlq_u64((uint64x2_t)v356, (uint64x2_t)vnegq_s64(v353));
        *(int32x2_t *)v356.i8 = vmovn_s64((int64x2_t)v356);
        *(int32x2_t *)v360.i8 = vmovn_s64(v360);
        int16x8_t v361 = (int16x8_t)vzip1q_s32((int32x4_t)v356, (int32x4_t)v360);
        int16x8_t v362 = (int16x8_t)vshlq_u32((uint32x4_t)v361, (uint32x4_t)vnegq_s32(v354));
        *(int16x4_t *)v361.i8 = vmovn_s32((int32x4_t)v361);
        *(int16x4_t *)v362.i8 = vmovn_s32((int32x4_t)v362);
        int16x8_t v350 = vzip1q_s16(v361, v362);
      }
      else
      {
        int v275 = 1;
        int16x8_t v350 = 0uLL;
      }
      int8x16_t v363 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v277, (int16x8_t)v277));
      unint64_t v364 = vpaddq_s32((int32x4_t)v363, (int32x4_t)v363).u64[0];
      v365.i64[0] = v364;
      v365.i64[1] = HIDWORD(v364);
      int64x2_t v366 = v365;
      unint64_t v367 = vaddvq_s64(v365);
      if (v367 > 0x80) {
        goto LABEL_402;
      }
      if (v258 >= v367 + v256)
      {
        int64x2_t v368 = vaddq_s64(vzip1q_s64((int64x2_t)0, v366), vdupq_n_s64(v256 & 0x3F));
        uint16x8_t v369 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v349 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v369, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v368)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v369->i64[0], 0), (uint64x2_t)vnegq_s64(v368)));
        if (v367 + (v256 & 0x3F) >= 0x81) {
          int8x16_t v349 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v369[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v368)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v369[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v368))), v349);
        }
        v256 += v367;
      }
      else
      {
        int v275 = 1;
      }
      if (v275 || (uint64_t v194 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v194) - v256 >= 9) || v311 == 2)
      {
LABEL_402:
        uint64_t v194 = 0;
        v436 |= 1023 << ((8 * &v436) & 0x30);
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        uint16x8_t v370 = (void *)(a1 + a2);
        int32x4_t v371 = (void *)(a1 + 2 * a2);
        *uint16x8_t v370 = 0;
        v370[1] = 0;
        int16x8_t v197 = (void *)(a1 + a2 + 2 * a2);
        *int32x4_t v371 = 0;
        v371[1] = 0;
        goto LABEL_319;
      }
      int32x2_t v372 = vzip1_s32(*(int32x2_t *)v301.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v301, v301, 8uLL));
      int32x2_t v373 = vzip1_s32(*(int32x2_t *)v317.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v317, v317, 8uLL));
      v374.i64[0] = v372.u32[0];
      v374.i64[1] = v372.u32[1];
      int64x2_t v375 = v374;
      v374.i64[0] = v373.u32[0];
      v374.i64[1] = v373.u32[1];
      int64x2_t v376 = (int64x2_t)vshlq_u64((uint64x2_t)v299, (uint64x2_t)vnegq_s64(v375));
      int64x2_t v377 = (int64x2_t)vshlq_u64((uint64x2_t)v324, (uint64x2_t)vnegq_s64(v374));
      *(int32x2_t *)v299.i8 = vmovn_s64((int64x2_t)v299);
      *(int32x2_t *)v376.i8 = vmovn_s64(v376);
      *(int32x2_t *)v324.i8 = vmovn_s64((int64x2_t)v324);
      *(int32x2_t *)v377.i8 = vmovn_s64(v377);
      int16x8_t v378 = (int16x8_t)vzip1q_s32((int32x4_t)v299, (int32x4_t)v376);
      int16x8_t v379 = (int16x8_t)vzip1q_s32((int32x4_t)v324, (int32x4_t)v377);
      int16x8_t v380 = (int16x8_t)vshlq_u32((uint32x4_t)v378, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v300.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v300, v300, 8uLL)))));
      int16x8_t v381 = (int16x8_t)vshlq_u32((uint32x4_t)v379, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v316.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v316, v316, 8uLL)))));
      *(int16x4_t *)v378.i8 = vmovn_s32((int32x4_t)v378);
      *(int16x4_t *)v380.i8 = vmovn_s32((int32x4_t)v380);
      *(int16x4_t *)v379.i8 = vmovn_s32((int32x4_t)v379);
      *(int16x4_t *)v381.i8 = vmovn_s32((int32x4_t)v381);
      v382.i64[0] = 0x10001000100010;
      v382.i64[1] = 0x10001000100010;
      v383.i64[0] = 0x10001000100010;
      v383.i64[1] = 0x10001000100010;
      int16x8_t v384 = vzip1q_s16(v378, v380);
      v380.i64[0] = 0xF000F000F000FLL;
      v380.i64[1] = 0xF000F000F000FLL;
      int16x8_t v385 = vsubq_s16(v382, (int16x8_t)v300);
      int16x8_t v386 = vzip1q_s16(v379, v381);
      v381.i64[0] = 0xF000F000F000FLL;
      v381.i64[1] = 0xF000F000F000FLL;
      int32x2_t v387 = vzip1_s32(*(int32x2_t *)v363.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v363, v363, 8uLL));
      v388.i64[0] = 0xF000F000F000FLL;
      v388.i64[1] = 0xF000F000F000FLL;
      v389.i64[0] = 0x10001000100010;
      v389.i64[1] = 0x10001000100010;
      int16x8_t v390 = vaddq_s16((int16x8_t)v300, v380);
      int16x8_t v391 = vaddq_s16((int16x8_t)v316, v381);
      int16x8_t v392 = vshlq_s16(v386, vsubq_s16(v383, (int16x8_t)v316));
      int16x8_t v393 = vshlq_s16((int16x8_t)v315, vsubq_s16(v383, (int16x8_t)v279));
      int16x8_t v394 = vshlq_s16(v350, vsubq_s16(v383, (int16x8_t)v278));
      v374.i64[0] = v387.u32[0];
      v374.i64[1] = v387.u32[1];
      int32x4_t v395 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v277.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v277, v277, 8uLL)));
      int16x8_t v396 = vaddq_s16((int16x8_t)v277, v388);
      int16x8_t v397 = vsubq_s16(v389, (int16x8_t)v277);
      int16x8_t v398 = vdupq_n_s16((unsigned __int16)v257 >> 6);
      int8x16_t v399 = (int8x16_t)vshlq_s16(vshlq_s16(v384, v385), v390);
      int16x8_t v400 = vshlq_s16(v392, v391);
      int64x2_t v401 = (int64x2_t)vshlq_u64((uint64x2_t)v349, (uint64x2_t)vnegq_s64(v374));
      *(int32x2_t *)v392.i8 = vmovn_s64((int64x2_t)v349);
      *(int32x2_t *)v401.i8 = vmovn_s64(v401);
      int16x8_t v402 = (int16x8_t)vzip1q_s32((int32x4_t)v392, (int32x4_t)v401);
      int16x8_t v403 = (int16x8_t)vshlq_u32((uint32x4_t)v402, (uint32x4_t)vnegq_s32(v395));
      *(int16x4_t *)v402.i8 = vmovn_s32((int32x4_t)v402);
      *(int16x4_t *)v403.i8 = vmovn_s32((int32x4_t)v403);
      int16x8_t v404 = vaddq_s16((int16x8_t)vandq_s8(v399, v283), v400);
      int8x16_t v405 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v399.i8, 0);
      int8x16_t v406 = (int8x16_t)vsubq_s16(v404, (int16x8_t)vandq_s8(v405, v283));
      int8x16_t v407 = (int8x16_t)vsubq_s16(vshlq_s16(v393, vaddq_s16((int16x8_t)v279, v381)), (int16x8_t)vandq_s8(v405, v282));
      int8x16_t v408 = (int8x16_t)vsubq_s16(vshlq_s16(v394, vaddq_s16((int16x8_t)v278, v381)), (int16x8_t)vandq_s8(v405, v280));
      int8x16_t v409 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v402, v403), v397), v396), (int16x8_t)vandq_s8(v405, v276));
      v410.i64[0] = 0x1000100010001;
      v410.i64[1] = 0x1000100010001;
      if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v410)))
      {
        int8x16_t v411 = v406;
        v411.i16[0] = v406.i16[7];
        v411.i16[7] = v406.i16[0];
        int8x16_t v412 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
        int8x16_t v413 = vbslq_s8(v412, v411, v406);
        int8x16_t v414 = (int8x16_t)vaddq_s16((int16x8_t)v413, (int16x8_t)vandq_s8(vqtbl1q_s8(v413, (int8x16_t)xmmword_242EA7480), v412));
        int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)v414, (int16x8_t)vandq_s8(vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA7490), v412));
        int8x16_t v415 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA74A0), v412), (int16x8_t)v407);
        int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v415, (int8x16_t)xmmword_242EA74B0), v412), (int16x8_t)v415);
        int8x16_t v416 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA74C0), v412), (int16x8_t)v408);
        int8x16_t v408 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v416, (int8x16_t)xmmword_242EA74D0), v412), (int16x8_t)v416);
        int8x16_t v417 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA74E0), v412), (int16x8_t)v409);
        int8x16_t v409 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v417, (int8x16_t)xmmword_242EA74F0), v412), (int16x8_t)v417);
      }
      int32x4_t v418 = (int32x4_t)vshlq_n_s16(vaddq_s16(v398, (int16x8_t)v406), 6uLL);
      int32x4_t v419 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v407, v398), 6uLL);
      int32x4_t v420 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v408, v398), 6uLL);
      int32x4_t v421 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v409, v398), 6uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v418, v420);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v418, v420);
      int32x4_t v422 = (int32x4_t *)(a1 + 2 * a2);
      *int32x4_t v422 = vuzp1q_s32(v419, v421);
      *(int32x4_t *)((char *)v422 + a2) = vuzp2q_s32(v419, v421);
      break;
  }
  return v194;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressSubblock(uint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, int16x4_t a15)
{
  int32x4_t v16 = *(int32x4_t *)((char *)a3 + a4);
  __int16 v17 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v18 = *(int32x4_t *)((char *)v17 + a4);
  int8x16_t v19 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v16), 6uLL);
  int16x8_t v20 = vshrq_n_s16((int16x8_t)vzip1q_s32(*v17, v18), 6uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v16), 6uLL);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v19.i8, 0);
  int16x8_t v23 = vshrq_n_s16((int16x8_t)vzip2q_s32(*v17, v18), 6uLL);
  int16x8_t v24 = vshlq_n_s16(vsubq_s16(v20, (int16x8_t)v22), 6uLL);
  int16x8_t v25 = vshlq_n_s16(vsubq_s16(v23, (int16x8_t)v22), 6uLL);
  v26.i64[0] = 0x5000500050005;
  v26.i64[1] = 0x5000500050005;
  int8x16_t v27 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v19, (int16x8_t)v22), 6uLL), v26);
  int8x16_t v28 = (int8x16_t)vshlq_s16(v24, v26);
  int8x16_t v29 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, (int16x8_t)v22), 6uLL), v26);
  int16x8_t v30 = vshlq_s16(v25, v26);
  v24.i16[0] = vmaxvq_s16((int16x8_t)v27);
  v25.i16[0] = vminvq_s16((int16x8_t)v27);
  int16x8_t v31 = vdupq_lane_s16(*(int16x4_t *)v24.i8, 0);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
  v26.i64[0] = 0x8000800080008000;
  v26.i64[1] = 0x8000800080008000;
  int16x8_t v33 = vmaxq_s16(v31, v26);
  v34.i64[0] = 0x8000800080008000;
  v34.i64[1] = 0x8000800080008000;
  int16x8_t v35 = vminq_s16(v32, v34);
  int16x8_t v36 = vzip1q_s16(v31, v32);
  int8x16_t v37 = (int8x16_t)vceqzq_s16(v36);
  v38.i64[0] = 0x10001000100010;
  v38.i64[1] = 0x10001000100010;
  int16x8_t v39 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v36)), v37);
  v37.i16[0] = vmaxvq_s16((int16x8_t)v28);
  a15.i16[0] = vminvq_s16((int16x8_t)v28);
  int16x8_t v40 = vdupq_lane_s16(*(int16x4_t *)v37.i8, 0);
  int16x8_t v41 = vdupq_lane_s16(a15, 0);
  int16x8_t v42 = vpmaxq_s16(v39, v39);
  int16x8_t v43 = vmaxq_s16(v33, v40);
  int16x8_t v44 = vminq_s16(v35, v41);
  int16x8_t v45 = vzip1q_s16(v40, v41);
  int16x8_t v46 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v45)), (int8x16_t)vceqzq_s16(v45));
  int16x8_t v47 = vpmaxq_s16(v46, v46);
  v46.i16[0] = vmaxvq_s16((int16x8_t)v29);
  int16x8_t v48 = vdupq_lane_s16(*(int16x4_t *)v46.i8, 0);
  v41.i16[0] = vminvq_s16((int16x8_t)v29);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v41.i8, 0);
  int16x8_t v50 = vmaxq_s16(v43, v48);
  int16x8_t v51 = vminq_s16(v44, v49);
  int16x8_t v52 = vzip1q_s16(v48, v49);
  int16x8_t v53 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v52)), (int8x16_t)vceqzq_s16(v52));
  int16x8_t v54 = vpmaxq_s16(v53, v53);
  v53.i16[0] = vmaxvq_s16(v30);
  v15.i16[0] = vminvq_s16(v30);
  int16x8_t v55 = vdupq_lane_s16(*(int16x4_t *)v53.i8, 0);
  int16x8_t v56 = vdupq_lane_s16(v15, 0);
  int16x8_t v57 = vmaxq_s16(v50, v55);
  int16x8_t v58 = vminq_s16(v51, v56);
  int16x8_t v59 = vzip1q_s16(v55, v56);
  int16x8_t v60 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v59)), (int8x16_t)vceqzq_s16(v59));
  int16x8_t v61 = vpmaxq_s16(v60, v60);
  int8x16_t v62 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v47), vmaxq_s16(v54, v61));
  int16x8_t v63 = vclzq_s16(vsubq_s16(v57, v58));
  int8x16_t v64 = (int8x16_t)vsubq_s16(v38, v63);
  int8x16_t v65 = (int8x16_t)vcgtq_s16((int16x8_t)v62, (int16x8_t)v64);
  int8x16_t v66 = vbslq_s8(v65, v64, v62);
  if (vmaxvq_s16((int16x8_t)v66))
  {
    v67.i64[0] = -1;
    v67.i64[1] = -1;
    v68.i64[0] = 0xF000F000F000FLL;
    v68.i64[1] = 0xF000F000F000FLL;
    int8x16_t v69 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v67, vsubq_s16(v68, v63)), v58), v65);
    v70.i64[0] = 0x8000800080008;
    v70.i64[1] = 0x8000800080008;
    v68.i64[0] = 0x3000300030003;
    v68.i64[1] = 0x3000300030003;
    int8x16_t v71 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v66), (int8x16_t)v68);
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v42), v68), (int16x8_t)0);
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v47), v68), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v54), v68), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v61), v68), (int16x8_t)0);
    int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v66, v72);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v66, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v66, v74);
    int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v66, v75);
    v68.i64[0] = 0x4000400040004;
    v68.i64[1] = 0x4000400040004;
    int8x16_t v80 = vbicq_s8((int8x16_t)v68, (int8x16_t)vceqq_s16(vaddq_s16(v75, v74), vnegq_s16(vaddq_s16(v72, v73))));
    int8x16_t v81 = vorrq_s8(vorrq_s8(v71, vandq_s8(v65, v70)), v80);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v291 = (int8x16_t)v30;
      int16x8_t v82 = vsubq_s16((int16x8_t)v19, (int16x8_t)vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7520));
      int8x16_t v83 = (int8x16_t)v20;
      v83.i16[7] = v19.i16[7];
      int16x8_t v84 = vsubq_s16(v20, (int16x8_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_242EA7530));
      int8x16_t v85 = (int8x16_t)v21;
      v85.i16[7] = v19.i16[7];
      int16x8_t v86 = vsubq_s16(v21, (int16x8_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7540));
      int8x16_t v87 = (int8x16_t)v23;
      v87.i16[7] = v19.i16[7];
      int16x8_t v88 = v82;
      v88.i16[0] = v82.i16[7];
      int16x8_t v89 = vsubq_s16(v23, (int16x8_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7550));
      v88.i16[7] = v82.i16[0];
      int16x8_t v90 = vshlq_n_s16(v88, 6uLL);
      int16x8_t v91 = vshlq_n_s16(v86, 6uLL);
      int16x8_t v92 = vshlq_n_s16(v89, 6uLL);
      v93.i64[0] = 0x5000500050005;
      v93.i64[1] = 0x5000500050005;
      int8x16_t v94 = (int8x16_t)vshlq_s16(v90, v93);
      int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(v84, 6uLL), v93);
      int8x16_t v96 = (int8x16_t)vshlq_s16(v91, v93);
      int8x16_t v97 = (int8x16_t)vshlq_s16(v92, v93);
      v91.i16[0] = vmaxvq_s16((int16x8_t)v94);
      v92.i16[0] = vminvq_s16((int16x8_t)v94);
      int16x8_t v98 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v99 = vdupq_lane_s16(*(int16x4_t *)v92.i8, 0);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v100 = vmaxq_s16(v98, v93);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v101 = vminq_s16(v99, v93);
      int16x8_t v102 = vzip1q_s16(v98, v99);
      int8x16_t v103 = (int8x16_t)vceqzq_s16(v102);
      v104.i64[0] = 0x10001000100010;
      v104.i64[1] = 0x10001000100010;
      int16x8_t v105 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v102)), v103);
      int16x8_t v106 = vpmaxq_s16(v105, v105);
      v105.i16[0] = vmaxvq_s16((int16x8_t)v95);
      v103.i16[0] = vminvq_s16((int16x8_t)v95);
      int16x8_t v107 = vdupq_lane_s16(*(int16x4_t *)v105.i8, 0);
      int16x8_t v108 = vdupq_lane_s16(*(int16x4_t *)v103.i8, 0);
      int16x8_t v109 = vmaxq_s16(v100, v107);
      int16x8_t v110 = vminq_s16(v101, v108);
      int16x8_t v111 = vzip1q_s16(v107, v108);
      int8x16_t v112 = (int8x16_t)vceqzq_s16(v111);
      int16x8_t v113 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v111)), v112);
      int16x8_t v114 = vpmaxq_s16(v113, v113);
      v113.i16[0] = vmaxvq_s16((int16x8_t)v96);
      v112.i16[0] = vminvq_s16((int16x8_t)v96);
      int16x8_t v115 = vdupq_lane_s16(*(int16x4_t *)v113.i8, 0);
      int16x8_t v116 = vdupq_lane_s16(*(int16x4_t *)v112.i8, 0);
      int16x8_t v117 = vmaxq_s16(v109, v115);
      int16x8_t v118 = vminq_s16(v110, v116);
      int16x8_t v119 = vzip1q_s16(v115, v116);
      int8x16_t v120 = (int8x16_t)vceqzq_s16(v119);
      int16x8_t v121 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v119)), v120);
      int16x8_t v122 = vpmaxq_s16(v121, v121);
      v121.i16[0] = vmaxvq_s16((int16x8_t)v97);
      v120.i16[0] = vminvq_s16((int16x8_t)v97);
      int16x8_t v123 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      int16x8_t v124 = vdupq_lane_s16(*(int16x4_t *)v120.i8, 0);
      int16x8_t v125 = vmaxq_s16(v117, v123);
      int16x8_t v126 = vminq_s16(v118, v124);
      int16x8_t v127 = vzip1q_s16(v123, v124);
      int16x8_t v128 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v127)), (int8x16_t)vceqzq_s16(v127));
      int16x8_t v129 = vpmaxq_s16(v128, v128);
      int8x16_t v130 = (int8x16_t)vmaxq_s16(vmaxq_s16(v106, v114), vmaxq_s16(v122, v129));
      int16x8_t v131 = vclzq_s16(vsubq_s16(v125, v126));
      int8x16_t v132 = (int8x16_t)vsubq_s16(v104, v131);
      int8x16_t v133 = (int8x16_t)vcgtq_s16((int16x8_t)v130, (int16x8_t)v132);
      int8x16_t v134 = vbslq_s8(v133, v132, v130);
      int16x8_t v135 = vsubq_s16((int16x8_t)v134, v106);
      v106.i64[0] = 0x3000300030003;
      v106.i64[1] = 0x3000300030003;
      int16x8_t v136 = vmaxq_s16(vminq_s16(v135, v106), (int16x8_t)0);
      int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v114), v106), (int16x8_t)0);
      int8x16_t v138 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v122), v106), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v129), v106), (int16x8_t)0);
      int8x16_t v140 = (int8x16_t)vsubq_s16((int16x8_t)v134, v136);
      int8x16_t v141 = (int8x16_t)vsubq_s16((int16x8_t)v134, v137);
      int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v134, (int16x8_t)v138);
      int8x16_t v143 = (int8x16_t)vsubq_s16((int16x8_t)v134, v139);
      int8x16_t v144 = (int8x16_t)vceqq_s16(vaddq_s16(v139, (int16x8_t)v138), vnegq_s16(vaddq_s16(v136, v137)));
      v138.i64[0] = 0x4000400040004;
      v138.i64[1] = 0x4000400040004;
      int8x16_t v145 = vbicq_s8(v138, v144);
      int16x8_t v146 = (int16x8_t)vandq_s8(v132, v133);
      v132.i64[0] = 0x7000700070007;
      v132.i64[1] = 0x7000700070007;
      int16x8_t v147 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v64, v65), vaddq_s16((int16x8_t)v80, (int16x8_t)v80)), (int16x8_t)v76, (int16x8_t)v132), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v78, (int16x8_t)v77), (int16x8_t)v79), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16(v146, vaddq_s16((int16x8_t)v145, (int16x8_t)v145)), (int16x8_t)v140, (int16x8_t)v132), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v142, (int16x8_t)v141), (int16x8_t)v143), 3uLL))),
               0);
      if (vaddvq_s16(v147))
      {
        v148.i64[0] = 0x2000200020002;
        v148.i64[1] = 0x2000200020002;
        int8x16_t v149 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v134), v148);
        v148.i64[0] = 0x9000900090009;
        v148.i64[1] = 0x9000900090009;
        v150.i64[0] = -1;
        v150.i64[1] = -1;
        int8x16_t v151 = vorrq_s8(vorrq_s8(v149, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v133, v148), (int16x8_t)vmvnq_s8(v133))), v145);
        v148.i64[0] = 0xF000F000F000FLL;
        v148.i64[1] = 0xF000F000F000FLL;
        int8x16_t v152 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v150, vsubq_s16((int16x8_t)v148, v131)), v126), v133);
        int8x16_t v153 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v147, 0xFuLL));
        v22.i16[0] = vbslq_s8(v153, vextq_s8(v19, v19, 0xEuLL), v22).u16[0];
        int8x16_t v27 = vbslq_s8(v153, v94, v27);
        int8x16_t v28 = vbslq_s8(v153, v95, v28);
        int8x16_t v29 = vbslq_s8(v153, v96, v29);
        int16x8_t v30 = (int16x8_t)vbslq_s8(v153, v97, v291);
        int8x16_t v76 = vbslq_s8(v153, v140, v76);
        int8x16_t v77 = vbslq_s8(v153, v141, v77);
        int8x16_t v78 = vbslq_s8(v153, v142, v78);
        int8x16_t v79 = vbslq_s8(v153, v143, v79);
        int8x16_t v69 = vbslq_s8(v153, v152, v69);
        int8x16_t v66 = vbslq_s8(v153, v134, v66);
        int8x16_t v81 = vbslq_s8(v153, v151, v81);
      }
      else
      {
        int16x8_t v30 = (int16x8_t)v291;
      }
    }
    v155.i64[0] = 0x8000800080008;
    v155.i64[1] = 0x8000800080008;
    int16x8_t v156 = (int16x8_t)vandq_s8(v81, v155);
    v157.i64[0] = 0x3000300030003;
    v157.i64[1] = 0x3000300030003;
    v158.i64[0] = 0x2000200020002;
    v158.i64[1] = 0x2000200020002;
    int8x16_t v159 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v81, v157), v158);
    v158.i64[0] = 0x10001000100010;
    v158.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(vbicq_s8(v66, (int8x16_t)vceqzq_s16(v156)).u16[0]
                                    + ((2 * v81.i16[0]) & 8)
                                    + vandq_s8(v159, (int8x16_t)v158).u16[0]
                                    - v76.i16[0]
                                    + 8 * v76.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v78, vaddq_s16((int16x8_t)v77, (int16x8_t)v79)).u16[0])
                          - 177) <= 0xFFFFFFFFFFFFFF37)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (uint16x8_t *)a3, a4, a5, a6, a7);
      return 24;
    }
    else
    {
      uint64_t v160 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v161 = 8 * (a1 & 7);
      if (v161) {
        uint64_t v162 = *v160 & ~(-1 << v161);
      }
      else {
        uint64_t v162 = 0;
      }
      if (v66.i16[0]) {
        uint64_t v163 = (16 * v66.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v163 = 0;
      }
      *a2 = v81.i8[0] << 6;
      unint64_t v164 = (v163 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v22.i16[0] & 0x3FF) << 8) | v81.i8[0] & 0xF) >> 2;
      unint64_t v165 = (v164 << v161) | v162;
      if (v161 >= 0x30)
      {
        *uint64_t v160 = v165;
        unint64_t v165 = v164 >> (-8 * (a1 & 7u));
      }
      unint64_t v166 = v161 + 16;
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v76);
      int8x16_t v168 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v169 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v78);
      int8x16_t v170 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v79);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      *(uint8x8_t *)v168.i8 = vqmovn_u16((uint16x8_t)v168);
      *(uint8x8_t *)v169.i8 = vqmovn_u16((uint16x8_t)v169);
      *(uint8x8_t *)v170.i8 = vqmovn_u16((uint16x8_t)v170);
      v167.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v167, v168), (int16x8_t)vzip1q_s8(v169, v170)).u32[0];
      int8x16_t v171 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v81.i8, (int8x8_t)0x4000400040004))));
      v172.i64[0] = 0x202020202020202;
      v172.i64[1] = 0x202020202020202;
      int8x16_t v173 = vandq_s8(v171, v172);
      v172.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v172.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v169.i64[0] = -1;
      v169.i64[1] = -1;
      uint8x16_t v174 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v169, (uint8x16_t)vorrq_s8(v173, v172)), (int8x16_t)v167.u32[0]);
      int16x8_t v175 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v173.i8);
      uint16x8_t v176 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v174.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v175)), (int16x8_t)vmovl_high_u8(v174));
      uint16x8_t v177 = (uint16x8_t)vpaddq_s16(v175, (int16x8_t)vmovl_high_u8((uint8x16_t)v173));
      int32x4_t v178 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v177.i8);
      int32x4_t v179 = (int32x4_t)vmovl_high_u16(v177);
      int32x4_t v180 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v176.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v178)), (int32x4_t)vshlq_u32(vmovl_high_u16(v176), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v179)));
      int32x4_t v181 = vpaddq_s32(v178, v179);
      v182.i64[0] = v180.u32[0];
      v182.i64[1] = v180.u32[1];
      uint64x2_t v183 = (uint64x2_t)v182;
      v182.i64[0] = v180.u32[2];
      v182.i64[1] = v180.u32[3];
      uint64x2_t v184 = (uint64x2_t)v182;
      v182.i64[0] = v181.u32[0];
      v182.i64[1] = v181.u32[1];
      int64x2_t v185 = v182;
      v182.i64[0] = v181.u32[2];
      v182.i64[1] = v181.u32[3];
      int64x2_t v186 = vpaddq_s64((int64x2_t)vshlq_u64(v183, (uint64x2_t)vzip1q_s64((int64x2_t)0, v185)), (int64x2_t)vshlq_u64(v184, (uint64x2_t)vzip1q_s64((int64x2_t)0, v182)));
      int64x2_t v187 = vpaddq_s64(v185, v182);
      uint64_t v188 = (v161 + 16) & 0x38;
      unint64_t v189 = (v186.i64[0] << v188) | v165;
      if ((unint64_t)(v187.i64[0] + v188) >= 0x40)
      {
        *(void *)((char *)v160 + ((v166 >> 3) & 8)) = v189;
        unint64_t v189 = (unint64_t)v186.i64[0] >> -(char)v188;
        if (!v188) {
          unint64_t v189 = 0;
        }
      }
      int8x16_t v190 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v76);
      unint64_t v191 = v187.i64[0] + v166;
      unint64_t v192 = v189 | (v186.i64[1] << v191);
      if ((v191 & 0x3F) + v187.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v191 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v192;
        unint64_t v192 = (unint64_t)v186.i64[1] >> -(v191 & 0x3F);
        if ((v191 & 0x3F) == 0) {
          unint64_t v192 = 0;
        }
      }
      int16x8_t v193 = (int16x8_t)vandq_s8(v69, v190);
      unint64_t v194 = v191 + v187.i64[1];
      v195.i64[0] = -1;
      v195.i64[1] = -1;
      int16x8_t v196 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v156, v156), (int8x16_t)0, 0xEuLL), v66);
      v197.i64[0] = 0xF000F000F000FLL;
      v197.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v198 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v195, (uint16x8_t)vaddq_s16(v196, v197)), v69);
      int32x4_t v199 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v196.i8);
      int32x4_t v200 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v198.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v199)), (int32x4_t)vmovl_high_u16(v198));
      int32x4_t v201 = vpaddq_s32(v199, (int32x4_t)vmovl_high_u16((uint16x8_t)v196));
      v202.i64[0] = v200.u32[0];
      v202.i64[1] = v200.u32[1];
      uint64x2_t v203 = (uint64x2_t)v202;
      v202.i64[0] = v200.u32[2];
      v202.i64[1] = v200.u32[3];
      uint64x2_t v204 = (uint64x2_t)v202;
      v202.i64[0] = v201.u32[0];
      v202.i64[1] = v201.u32[1];
      int64x2_t v205 = v202;
      v202.i64[0] = v201.u32[2];
      v202.i64[1] = v201.u32[3];
      int64x2_t v206 = vpaddq_s64((int64x2_t)vshlq_u64(v203, (uint64x2_t)vzip1q_s64((int64x2_t)0, v205)), (int64x2_t)vshlq_u64(v204, (uint64x2_t)vzip1q_s64((int64x2_t)0, v202)));
      int64x2_t v207 = vpaddq_s64(v205, v202);
      unint64_t v208 = (v206.i64[0] << v194) | v192;
      if (v207.i64[0] + (v194 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v194 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v208;
        unint64_t v208 = (unint64_t)v206.i64[0] >> -(v194 & 0x3F);
        if ((v194 & 0x3F) == 0) {
          unint64_t v208 = 0;
        }
      }
      int8x16_t v209 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v210 = (int8x16_t)vaddq_s16(v193, (int16x8_t)v27);
      unint64_t v211 = v207.i64[0] + v194;
      unint64_t v212 = v208 | (v206.i64[1] << v211);
      if ((v211 & 0x3F) + v207.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v211 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v212;
        unint64_t v212 = (unint64_t)v206.i64[1] >> -(v211 & 0x3F);
        if ((v211 & 0x3F) == 0) {
          unint64_t v212 = 0;
        }
      }
      int16x8_t v213 = (int16x8_t)vandq_s8(v69, v209);
      unint64_t v214 = v211 + v207.i64[1];
      int16x8_t v215 = (int16x8_t)vextq_s8((int8x16_t)0, v76, 0xEuLL);
      v216.i64[0] = 0xF000F000F000FLL;
      v216.i64[1] = 0xF000F000F000FLL;
      v217.i64[0] = -1;
      v217.i64[1] = -1;
      uint16x8_t v218 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v217, (uint16x8_t)vaddq_s16(v215, v216)), v210);
      int32x4_t v219 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v215.i8);
      int32x4_t v220 = (int32x4_t)vmovl_high_u16((uint16x8_t)v215);
      int32x4_t v221 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v218.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v219)), (int32x4_t)vshlq_u32(vmovl_high_u16(v218), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v220)));
      int32x4_t v222 = vpaddq_s32(v219, v220);
      v223.i64[0] = v221.u32[0];
      v223.i64[1] = v221.u32[1];
      uint64x2_t v224 = (uint64x2_t)v223;
      v223.i64[0] = v221.u32[2];
      v223.i64[1] = v221.u32[3];
      uint64x2_t v225 = (uint64x2_t)v223;
      v223.i64[0] = v222.u32[0];
      v223.i64[1] = v222.u32[1];
      int64x2_t v226 = v223;
      v223.i64[0] = v222.u32[2];
      v223.i64[1] = v222.u32[3];
      int64x2_t v227 = vpaddq_s64((int64x2_t)vshlq_u64(v224, (uint64x2_t)vzip1q_s64((int64x2_t)0, v226)), (int64x2_t)vshlq_u64(v225, (uint64x2_t)vzip1q_s64((int64x2_t)0, v223)));
      int64x2_t v228 = vpaddq_s64(v226, v223);
      unint64_t v229 = (v227.i64[0] << v214) | v212;
      if (v228.i64[0] + (v214 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v214 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v229;
        unint64_t v229 = (unint64_t)v227.i64[0] >> -(v214 & 0x3F);
        if ((v214 & 0x3F) == 0) {
          unint64_t v229 = 0;
        }
      }
      int8x16_t v230 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v78);
      int8x16_t v231 = (int8x16_t)vaddq_s16((int16x8_t)v28, v213);
      unint64_t v232 = v228.i64[0] + v214;
      unint64_t v233 = v229 | (v227.i64[1] << v232);
      if ((v232 & 0x3F) + v228.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v232 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v233;
        unint64_t v233 = (unint64_t)v227.i64[1] >> -(v232 & 0x3F);
        if ((v232 & 0x3F) == 0) {
          unint64_t v233 = 0;
        }
      }
      int16x8_t v234 = (int16x8_t)vandq_s8(v69, v230);
      unint64_t v235 = v232 + v228.i64[1];
      v236.i64[0] = 0xF000F000F000FLL;
      v236.i64[1] = 0xF000F000F000FLL;
      v237.i64[0] = -1;
      v237.i64[1] = -1;
      uint16x8_t v238 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v237, (uint16x8_t)vaddq_s16((int16x8_t)v77, v236)), v231);
      int32x4_t v239 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v240 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v241 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v238.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v239)), (int32x4_t)vshlq_u32(vmovl_high_u16(v238), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v240)));
      int32x4_t v242 = vpaddq_s32(v239, v240);
      v243.i64[0] = v241.u32[0];
      v243.i64[1] = v241.u32[1];
      uint64x2_t v244 = (uint64x2_t)v243;
      v243.i64[0] = v241.u32[2];
      v243.i64[1] = v241.u32[3];
      uint64x2_t v245 = (uint64x2_t)v243;
      v243.i64[0] = v242.u32[0];
      v243.i64[1] = v242.u32[1];
      int64x2_t v246 = v243;
      v243.i64[0] = v242.u32[2];
      v243.i64[1] = v242.u32[3];
      int64x2_t v247 = vpaddq_s64((int64x2_t)vshlq_u64(v244, (uint64x2_t)vzip1q_s64((int64x2_t)0, v246)), (int64x2_t)vshlq_u64(v245, (uint64x2_t)vzip1q_s64((int64x2_t)0, v243)));
      int64x2_t v248 = vpaddq_s64(v246, v243);
      unint64_t v249 = (v247.i64[0] << v235) | v233;
      if (v248.i64[0] + (v235 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v235 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v249;
        unint64_t v249 = (unint64_t)v247.i64[0] >> -(v235 & 0x3F);
        if ((v235 & 0x3F) == 0) {
          unint64_t v249 = 0;
        }
      }
      int8x16_t v250 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v79);
      int8x16_t v251 = (int8x16_t)vaddq_s16((int16x8_t)v29, v234);
      unint64_t v252 = v248.i64[0] + v235;
      unint64_t v253 = v249 | (v247.i64[1] << v252);
      if ((v252 & 0x3F) + v248.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v252 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v253;
        unint64_t v253 = (unint64_t)v247.i64[1] >> -(v252 & 0x3F);
        if ((v252 & 0x3F) == 0) {
          unint64_t v253 = 0;
        }
      }
      int16x8_t v254 = (int16x8_t)vandq_s8(v69, v250);
      unint64_t v255 = v252 + v248.i64[1];
      v256.i64[0] = 0xF000F000F000FLL;
      v256.i64[1] = 0xF000F000F000FLL;
      v257.i64[0] = -1;
      v257.i64[1] = -1;
      uint16x8_t v258 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v257, (uint16x8_t)vaddq_s16((int16x8_t)v78, v256)), v251);
      int32x4_t v259 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v260 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v261 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v258.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v259)), (int32x4_t)vshlq_u32(vmovl_high_u16(v258), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v260)));
      int32x4_t v262 = vpaddq_s32(v259, v260);
      v263.i64[0] = v261.u32[0];
      v263.i64[1] = v261.u32[1];
      uint64x2_t v264 = (uint64x2_t)v263;
      v263.i64[0] = v261.u32[2];
      v263.i64[1] = v261.u32[3];
      uint64x2_t v265 = (uint64x2_t)v263;
      v263.i64[0] = v262.u32[0];
      v263.i64[1] = v262.u32[1];
      int64x2_t v266 = v263;
      v263.i64[0] = v262.u32[2];
      v263.i64[1] = v262.u32[3];
      int64x2_t v267 = vpaddq_s64((int64x2_t)vshlq_u64(v264, (uint64x2_t)vzip1q_s64((int64x2_t)0, v266)), (int64x2_t)vshlq_u64(v265, (uint64x2_t)vzip1q_s64((int64x2_t)0, v263)));
      int64x2_t v268 = vpaddq_s64(v266, v263);
      unint64_t v269 = (v267.i64[0] << v255) | v253;
      if (v268.i64[0] + (v255 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v255 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v269;
        unint64_t v269 = (unint64_t)v267.i64[0] >> -(v255 & 0x3F);
        if ((v255 & 0x3F) == 0) {
          unint64_t v269 = 0;
        }
      }
      int8x16_t v270 = (int8x16_t)vaddq_s16(v30, v254);
      unint64_t v271 = v268.i64[0] + v255;
      unint64_t v272 = v269 | (v267.i64[1] << v271);
      if ((v271 & 0x3F) + v268.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v271 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v272;
        unint64_t v272 = (unint64_t)v267.i64[1] >> -(v271 & 0x3F);
        if ((v271 & 0x3F) == 0) {
          unint64_t v272 = 0;
        }
      }
      unint64_t v273 = v271 + v268.i64[1];
      v274.i64[0] = 0xF000F000F000FLL;
      v274.i64[1] = 0xF000F000F000FLL;
      v275.i64[0] = -1;
      v275.i64[1] = -1;
      uint16x8_t v276 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v275, (uint16x8_t)vaddq_s16((int16x8_t)v79, v274)), v270);
      int32x4_t v277 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v278 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v279 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v276.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)), (int32x4_t)vshlq_u32(vmovl_high_u16(v276), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)));
      int32x4_t v280 = vpaddq_s32(v277, v278);
      v281.i64[0] = v279.u32[0];
      v281.i64[1] = v279.u32[1];
      uint64x2_t v282 = (uint64x2_t)v281;
      v281.i64[0] = v279.u32[2];
      v281.i64[1] = v279.u32[3];
      uint64x2_t v283 = (uint64x2_t)v281;
      v281.i64[0] = v280.u32[0];
      v281.i64[1] = v280.u32[1];
      int64x2_t v284 = v281;
      v281.i64[0] = v280.u32[2];
      v281.i64[1] = v280.u32[3];
      int64x2_t v285 = vpaddq_s64((int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)), (int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)));
      int64x2_t v286 = vpaddq_s64(v284, v281);
      unint64_t v287 = (v285.i64[0] << v273) | v272;
      if (v286.i64[0] + (v273 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v160 + ((v273 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
        if ((v273 & 0x3F) != 0) {
          unint64_t v287 = (unint64_t)v285.i64[0] >> -(v273 & 0x3F);
        }
        else {
          unint64_t v287 = 0;
        }
      }
      unint64_t v288 = v286.i64[0] + v273;
      unint64_t v289 = v287 | (v285.i64[1] << v288);
      if ((v288 & 0x3F) + v286.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v288 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v289;
        unint64_t v289 = (unint64_t)v285.i64[1] >> -(v288 & 0x3F);
        if ((v288 & 0x3F) == 0) {
          unint64_t v289 = 0;
        }
      }
      unint64_t v290 = v288 + v286.i64[1];
      if ((v290 & 0x3F) != 0) {
        *(void *)((char *)v160 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v289;
      }
      unint64_t result = (v290 - v161 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 6;
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v11 = a6;
  if (a5 >= 8)
  {
    uint64_t v14 = 0;
    int16x4_t v15 = &v45;
    int32x4_t v16 = (char *)&v43 + ((8 * a5) & 0x7C0);
    do
    {
      __int16 v17 = v15;
      int32x4_t v18 = a3;
      uint64_t v19 = a5 & 0xF8;
      do
      {
        uint16x8_t v20 = *v18++;
        uint16x8_t v21 = vshrq_n_u16(v20, 6uLL);
        *((_WORD *)v17 - 16) = v21.i16[0];
        *((_WORD *)v17 - 12) = v21.i16[1];
        *((_WORD *)v17 - 8) = v21.i16[2];
        *((_WORD *)v17 - 4) = v21.i16[3];
        *(_WORD *)__int16 v17 = v21.i16[4];
        *((_WORD *)v17 + 4) = v21.i16[5];
        *((_WORD *)v17 + 8) = v21.i16[6];
        *((_WORD *)v17 + 12) = v21.i16[7];
        v17 += 4;
        v19 -= 8;
      }
      while (v19);
      if ((a5 & 0xF8) != (unint64_t)a5)
      {
        int8x16_t v22 = v16;
        uint64_t v23 = a5 & 0xF8;
        do
        {
          _WORD *v22 = (unsigned __int16)a3->i16[v23] >> 6;
          v22 += 4;
          ++v23;
        }
        while (a5 != v23);
      }
      ++v14;
      a3 = (uint16x8_t *)((char *)a3 + a4);
      int16x4_t v15 = (long long *)((char *)v15 + 2);
      v16 += 2;
    }
    while (v14 != a6);
  }
  else
  {
    int v12 = &a3->i16[3];
    int v13 = (_WORD *)&v44 + 4;
    do
    {
      *(v13 - 12) = (unsigned __int16)*(v12 - 3) >> 6;
      if (a5 != 1)
      {
        *(v13 - 8) = (unsigned __int16)*(v12 - 2) >> 6;
        if (a5 != 2)
        {
          *(v13 - 4) = (unsigned __int16)*(v12 - 1) >> 6;
          if (a5 != 3)
          {
            *int v13 = (unsigned __int16)*v12 >> 6;
            if (a5 != 4)
            {
              v13[4] = (unsigned __int16)v12[1] >> 6;
              if (a5 != 5)
              {
                v13[8] = (unsigned __int16)v12[2] >> 6;
                if (a5 != 6) {
                  v13[12] = (unsigned __int16)v12[3] >> 6;
                }
              }
            }
          }
        }
      }
      int v12 = (__int16 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  v38.i32[0] = (unsigned __int16)v43;
  v38.i32[1] = WORD4(v43);
  v38.i32[2] = WORD1(v43);
  v38.i32[3] = WORD5(v43);
  int v39 = (unsigned __int16)v44;
  int v40 = WORD4(v44);
  if (a5 >= 4) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = a5;
  }
  if (a5 >= 4) {
    unsigned int v25 = a5 - 4;
  }
  else {
    unsigned int v25 = 0;
  }
  int v41 = WORD1(v44);
  int v42 = WORD5(v44);
  if (a6 >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = a6;
  }
  if (a6 >= 2) {
    unsigned int v27 = a6 - 2;
  }
  else {
    unsigned int v27 = 0;
  }
  char v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, &v38, a7, v24, v26);
  v38.i32[0] = WORD2(v43);
  v38.i32[1] = WORD6(v43);
  v38.i32[2] = WORD3(v43);
  v38.i32[3] = HIWORD(v43);
  int v39 = WORD2(v44);
  int v40 = WORD6(v44);
  int v41 = WORD3(v44);
  int v42 = HIWORD(v44);
  if (a6 >= 4) {
    unsigned int v29 = 2;
  }
  else {
    unsigned int v29 = v27;
  }
  int v30 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 6, &v38, a7, v24, v29);
  v38.i32[0] = (unsigned __int16)v45;
  v38.i32[1] = WORD4(v45);
  v38.i32[2] = WORD1(v45);
  v38.i32[3] = WORD5(v45);
  int v39 = (unsigned __int16)v46;
  int v40 = WORD4(v46);
  if (a5 >= 8) {
    unsigned int v31 = 4;
  }
  else {
    unsigned int v31 = v25;
  }
  int v41 = WORD1(v46);
  int v42 = WORD5(v46);
  int v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 12, &v38, a7, v31, v26);
  v38.i32[0] = WORD2(v45);
  v38.i32[1] = WORD6(v45);
  v38.i32[2] = WORD3(v45);
  v38.i32[3] = HIWORD(v45);
  int v39 = WORD2(v46);
  int v40 = WORD6(v46);
  int v41 = WORD3(v46);
  int v42 = HIWORD(v46);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 18, &v38, a7, v31, v29);
  if (v32) {
    char v34 = 4;
  }
  else {
    char v34 = 0;
  }
  if (v30) {
    char v35 = 2;
  }
  else {
    char v35 = 0;
  }
  if (result) {
    char v36 = -8;
  }
  else {
    char v36 = -16;
  }
  *a2 = v36 | v34 | v28 | v35;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(uint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v127 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v9.i64[0] = 0x20000000200;
    v9.i64[1] = 0x20000000200;
    int8x16_t v10 = veorq_s8(*a2, v9);
    v11.i64[0] = 0x100000001;
    v11.i64[1] = 0x100000001;
    int8x16_t v7 = vbicq_s8(v10, (int8x16_t)vceqq_s32((int32x4_t)v10, v11));
    int8x16_t v12 = veorq_s8(a2[1], v9);
    int8x16_t v8 = vbicq_s8(v12, (int8x16_t)vceqq_s32((int32x4_t)v12, v11));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v6.i64[0] = 0x20000000200;
    v6.i64[1] = 0x20000000200;
    int8x16_t v7 = veorq_s8(*a2, v6);
    int8x16_t v8 = veorq_s8(a2[1], v6);
LABEL_5:
    int8x16_t v125 = v7;
    int8x16_t v126 = v8;
    unsigned int v13 = v7.i32[0];
    goto LABEL_7;
  }
  int8x16_t v14 = a2[1];
  int8x16_t v125 = *a2;
  int8x16_t v126 = v14;
  unsigned int v13 = v125.i32[0];
LABEL_7:
  if (a5) {
    BOOL v15 = a4 >= 2;
  }
  else {
    BOOL v15 = 0;
  }
  int v16 = !v15;
  if (v15)
  {
    unsigned int v18 = v125.u32[1];
    unsigned int v17 = v125.i32[1] < v13;
    if (v125.i32[1] >= v13) {
      unsigned int v19 = v13;
    }
    else {
      unsigned int v19 = v125.u32[1];
    }
    if (v13 > v125.i32[1]) {
      unsigned int v18 = v13;
    }
  }
  else
  {
    unsigned int v17 = 0;
    unsigned int v18 = v13;
    unsigned int v19 = v13;
  }
  BOOL v20 = a5 < 2 || a4 == 0;
  int v21 = v20;
  if (!v20)
  {
    if (v125.i32[2] < v19)
    {
      unsigned int v17 = 2;
      unsigned int v19 = v125.u32[2];
    }
    if (v18 <= v125.i32[2]) {
      unsigned int v18 = v125.u32[2];
    }
  }
  BOOL v22 = a5 >= 2 && a4 >= 2;
  int v23 = !v22;
  if (v22)
  {
    if (v125.i32[3] < v19)
    {
      unsigned int v17 = 3;
      unsigned int v19 = v125.u32[3];
    }
    if (v18 <= v125.i32[3]) {
      unsigned int v18 = v125.u32[3];
    }
  }
  if (a5) {
    BOOL v24 = a4 >= 3;
  }
  else {
    BOOL v24 = 0;
  }
  int v25 = !v24;
  if (v24)
  {
    if (v126.i32[0] < v19)
    {
      unsigned int v17 = 4;
      unsigned int v19 = v126.i32[0];
    }
    if (v18 <= v126.i32[0]) {
      unsigned int v18 = v126.i32[0];
    }
  }
  if (a5) {
    BOOL v26 = a4 >= 4;
  }
  else {
    BOOL v26 = 0;
  }
  int v27 = !v26;
  if (v26)
  {
    if (v126.i32[1] < v19)
    {
      unsigned int v17 = 5;
      unsigned int v19 = v126.u32[1];
    }
    if (v18 <= v126.i32[1]) {
      unsigned int v18 = v126.u32[1];
    }
  }
  BOOL v28 = a5 >= 2 && a4 >= 3;
  int v29 = !v28;
  if (v28)
  {
    if (v126.i32[2] < v19)
    {
      unsigned int v17 = 6;
      unsigned int v19 = v126.u32[2];
    }
    if (v18 <= v126.i32[2]) {
      unsigned int v18 = v126.u32[2];
    }
  }
  BOOL v30 = a5 >= 2 && a4 >= 4;
  int v31 = !v30;
  if (v30)
  {
    if (v126.i32[3] < v19)
    {
      unsigned int v17 = 7;
      unsigned int v19 = v126.u32[3];
    }
    if (v18 <= v126.i32[3]) {
      unsigned int v18 = v126.u32[3];
    }
  }
  unsigned int v32 = v18 - v19;
  unsigned int v33 = __clz(v18 - v19);
  int v34 = 32 - v33;
  if ((int)(32 - v33) <= 1) {
    int v34 = 1;
  }
  unsigned int v35 = v34 - 1;
  if (v33 - 29 < 3) {
    unsigned int v35 = 2;
  }
  if (v18) {
    BOOL v36 = v18 == 1023;
  }
  else {
    BOOL v36 = 1;
  }
  int v37 = !v36;
  if (v35 < 3 && v18 == v19) {
    unsigned int v35 = v37;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v39 = 0;
    if (v19 <= 0x1FF && v18 >= 0x200) {
      BOOL v39 = kDQuadParamTable[10 * v35 + 168] == 0;
    }
  }
  else
  {
    BOOL v39 = 0;
  }
  if (v35 > 5 || v39)
  {
    int v41 = kDQuadParamTable[10 * v35 + 164];
    unsigned int v42 = v41 + 1;
    if (v39) {
      int v43 = 0;
    }
    else {
      int v43 = -2;
    }
    int v44 = v19 & ~(-1 << (9 - v41));
    if (v42 >= 0xA) {
      int v44 = 0;
    }
    int v45 = v44 + v43;
    if (v45 >= 1 && __clz(v45 + v32) < v33) {
      ++v35;
    }
  }
  unint64_t v49 = (unint64_t)&kDQuadParamTable[10 * v35];
  unint64_t v46 = *(void *)(v49 + 648);
  int v47 = *(_DWORD *)(v49 + 656);
  int v48 = *(_DWORD *)(v49 + 660);
  LODWORD(v49) = v48 + 1;
  if (a4) {
    BOOL v50 = a5 == 0;
  }
  else {
    BOOL v50 = 1;
  }
  int v51 = v50;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v52 = a4 == 0;
    }
    else {
      BOOL v52 = 1;
    }
    int v53 = !v52;
  }
  else
  {
    int v53 = 0;
  }
  unint64_t v54 = 0;
  unsigned int v55 = 0;
  if (v46 >> v49 > 0x10) {
    int v53 = 1;
  }
  memset(v122, 0, sizeof(v122));
  int v123 = 0;
  if (v48) {
    unsigned int v56 = 10;
  }
  else {
    unsigned int v56 = 0;
  }
  if ((v47 + 1) < 0xA) {
    uint64_t v57 = (v47 + 1);
  }
  else {
    uint64_t v57 = 10;
  }
  if (v56 >= v49) {
    unint64_t v49 = v49;
  }
  else {
    unint64_t v49 = v56;
  }
  unsigned int v58 = v19 & (-1 << (10 - v57));
  unsigned int v59 = v13 - v58;
  if (v51) {
    unsigned int v59 = 0;
  }
  BOOL v20 = v16 == 0;
  unsigned __int32 v60 = v125.i32[1] - v58;
  if (!v20) {
    unsigned __int32 v60 = 0;
  }
  v124[0] = v59;
  v124[1] = v60;
  unint64_t v61 = v17;
  unint64_t v62 = v46 >> v49;
  if (v21) {
    unsigned __int32 v63 = 0;
  }
  else {
    unsigned __int32 v63 = v125.i32[2] - v58;
  }
  BOOL v20 = v23 == 0;
  unsigned __int32 v64 = v125.i32[3] - v58;
  if (!v20) {
    unsigned __int32 v64 = 0;
  }
  v124[2] = v63;
  v124[3] = v64;
  unsigned __int32 v65 = v126.i32[0] - v58;
  if (v25) {
    unsigned __int32 v65 = 0;
  }
  unsigned __int32 v66 = v126.i32[1] - v58;
  if (v27) {
    unsigned __int32 v66 = 0;
  }
  v124[4] = v65;
  v124[5] = v66;
  unsigned __int32 v67 = v126.i32[2] - v58;
  if (v29) {
    unsigned __int32 v67 = 0;
  }
  unsigned __int32 v68 = v126.i32[3] - v58;
  if (v31) {
    unsigned __int32 v68 = 0;
  }
  v124[6] = v67;
  v124[7] = v68;
  if (v62 <= 1) {
    unint64_t v69 = 1;
  }
  else {
    unint64_t v69 = v46 >> v49;
  }
  uint64_t v70 = 4 * v17;
  int8x16_t v71 = &byte_242EA911D;
  do
  {
    if (v70 != v54)
    {
      if (v49) {
        unint64_t v72 = v124[v54 / 4] / v69;
      }
      else {
        LODWORD(v72) = 0;
      }
      *((_DWORD *)v122 + v55) = v72;
      if (v62 >= 2)
      {
        unint64_t v73 = v124[v54 / 4];
        if (v73)
        {
          if (v73 / v69 * v69 == v73 && ((v73 / v69) & 1) != 0)
          {
            if (v58 || v72 != 1)
            {
              if ((a3 | 2) != 3 || (uint64_t v75 = v125.u32[v54 / 4], v75 != 512) && ((a3 | 2) != 3 || v69 + 512 != v75))
              {
                LODWORD(v72) = v72 - 1;
                *((_DWORD *)v122 + v55) = v72;
              }
            }
            else
            {
              LODWORD(v72) = 1;
            }
          }
        }
      }
      if (v72 >> v49 || v125.i32[v54 / 4] == 1023) {
        *((_DWORD *)v122 + v55) = ~(-1 << v49);
      }
      if (*v71 >= a5 || *(v71 - 1) >= a4) {
        *((_DWORD *)v122 + v55) = 0;
      }
      ++v55;
    }
    v54 += 4;
    v71 += 2;
  }
  while (v54 != 32);
  uint64_t result = v53 | v51;
  int8x16_t v77 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v78 = 8 * (a1 & 7);
  *(_WORD *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
  if (result == 1)
  {
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = v78;
    do
    {
      int16x8_t v82 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v79;
      if (v82[1] >= a5 || *v82 >= a4) {
        unint64_t v84 = 0;
      }
      else {
        unint64_t v84 = (unint64_t)v125.u32[v79] >> 4;
      }
      if ((unint64_t)(v81 - v78 + (v80 << 6) - 43) >= 0xFFFFFFFFFFFFFFCFLL)
      {
        uint64_t v85 = 0;
        unint64_t v86 = 6;
        do
        {
          unint64_t v87 = 64 - v81;
          if (64 - v81 >= v86) {
            unint64_t v87 = v86;
          }
          v77[v80] |= ((v84 >> v85) & ~(-1 << v87)) << v81;
          v85 += v87;
          unint64_t v88 = v87 + v81;
          v80 += v88 >> 6;
          uint64_t v81 = v88 & 0x3F;
          v86 -= v87;
        }
        while (v86);
      }
      ++v79;
    }
    while (v79 != 8);
    return result;
  }
  if (v19 | v35)
  {
    uint64_t v89 = v78 | 3;
    LODWORD(v90) = (v35 + 6) & 7;
    if (v35 < 3) {
      unint64_t v91 = v35 + 1;
    }
    else {
      unint64_t v91 = 0;
    }
    if (v35 >= 3) {
      uint64_t v90 = v90;
    }
    else {
      uint64_t v90 = 0;
    }
    *v77 |= v90 << v78;
    if (v35 >= 3)
    {
      uint64_t v93 = 0;
      int v97 = 3;
      if (!v57) {
        goto LABEL_236;
      }
LABEL_231:
      if ((unint64_t)(v57 - v78 + v89 + (v93 << 6)) <= 0x30)
      {
        uint64_t v98 = 0;
        unint64_t v99 = v57;
        do
        {
          unint64_t v100 = 64 - v89;
          if (64 - v89 >= v99) {
            unint64_t v100 = v99;
          }
          v77[v93] |= (((unint64_t)(v58 >> (10 - v57)) >> v98) & ~(-1 << v100)) << v89;
          v98 += v100;
          unint64_t v101 = v100 + v89;
          v93 += v101 >> 6;
          uint64_t v89 = v101 & 0x3F;
          v99 -= v100;
        }
        while (v99);
      }
      goto LABEL_236;
    }
    unint64_t v92 = 2 * (v35 < 3);
  }
  else
  {
    unint64_t v91 = 0;
    uint64_t v89 = v78 | 3;
    unint64_t v92 = 2;
  }
  if (v92 - v78 + v89 <= 0x30)
  {
    uint64_t v93 = 0;
    uint64_t v94 = 0;
    do
    {
      unint64_t v95 = 64 - v89;
      if (64 - v89 >= v92) {
        unint64_t v95 = v92;
      }
      v77[v93] |= ((v91 >> v94) & ~(-1 << v95)) << v89;
      v94 += v95;
      unint64_t v96 = v95 + v89;
      v93 += v96 >> 6;
      uint64_t v89 = v96 & 0x3F;
      v92 -= v95;
    }
    while (v92);
  }
  else
  {
    uint64_t v93 = 0;
  }
  int v97 = 5;
  if (!v35) {
    goto LABEL_237;
  }
  if (v57) {
    goto LABEL_231;
  }
LABEL_236:
  v97 += v57;
LABEL_237:
  if (v49)
  {
    if ((unint64_t)(v89 - v78 + (v93 << 6) + 3) <= 0x30)
    {
      uint64_t v102 = 0;
      unint64_t v103 = 3;
      do
      {
        unint64_t v104 = 64 - v89;
        if (64 - v89 >= v103) {
          unint64_t v104 = v103;
        }
        v77[v93] |= ((v61 >> v102) & ~(-1 << v104)) << v89;
        v102 += v104;
        unint64_t v105 = v104 + v89;
        v93 += v105 >> 6;
        uint64_t v89 = v105 & 0x3F;
        v103 -= v104;
      }
      while (v103);
    }
    v97 += 3;
  }
  unsigned int v106 = (((37 * (48 - v97)) >> 8)
        + (((48 - v97 - ((unsigned __int16)(37 * (48 - v97)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v107 = -7 * v106 + 48 - v97;
  if ((v107 - 257) >= 0xFFFFFF00 && v89 - v78 + (v93 << 6) + v107 <= 0x30)
  {
    do
    {
      unint64_t v108 = 64 - v89;
      if (64 - v89 >= v107) {
        unint64_t v108 = v107;
      }
      unint64_t v109 = v108 + v89;
      v93 += v109 >> 6;
      uint64_t v89 = v109 & 0x3F;
      v107 -= v108;
    }
    while (v107);
  }
  uint64_t v110 = 0;
  unint64_t v111 = v106 - v49;
  if (v111) {
    BOOL v112 = v111 > 0x100;
  }
  else {
    BOOL v112 = 1;
  }
  char v113 = v112;
  do
  {
    if (v49 && v49 - v78 + v89 + (v93 << 6) <= 0x30)
    {
      uint64_t v114 = 0;
      unint64_t v115 = *((unsigned int *)v122 + v110);
      unint64_t v116 = v49;
      do
      {
        unint64_t v117 = 64 - v89;
        if (64 - v89 >= v116) {
          unint64_t v117 = v116;
        }
        v77[v93] |= ((v115 >> v114) & ~(-1 << v117)) << v89;
        v114 += v117;
        unint64_t v118 = v117 + v89;
        v93 += v118 >> 6;
        uint64_t v89 = v118 & 0x3F;
        v116 -= v117;
      }
      while (v116);
    }
    if ((v113 & 1) == 0 && v89 - v78 + (v93 << 6) + v111 <= 0x30)
    {
      unint64_t v119 = v111;
      do
      {
        unint64_t v120 = 64 - v89;
        if (64 - v89 >= v119) {
          unint64_t v120 = v119;
        }
        unint64_t v121 = v120 + v89;
        v93 += v121 >> 6;
        uint64_t v89 = v121 & 0x3F;
        v119 -= v120;
      }
      while (v119);
    }
    ++v110;
  }
  while (v110 != 7);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::decompressSubblock(uint64_t a1, uint64_t a2, int32x4_t *a3, unsigned int a4, int a5, double a6, double a7, double a8, int8x8_t a9)
{
  uint64_t v468 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v193 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    unint64_t v194 = (void *)(a1 + a2);
    *unint64_t v194 = 0;
    v194[1] = 0;
    uint16x8_t v195 = (void *)(a1 + 2 * a2);
    *uint16x8_t v195 = 0;
    v195[1] = 0;
    int16x8_t v196 = (void *)(a1 + a2 + 2 * a2);
LABEL_315:
    *int16x8_t v196 = 0;
    v196[1] = 0;
    return v193;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v9 = 0;
    unsigned int v10 = a5 & 0xFFFFFFFD;
    unsigned int v426 = a3;
    unsigned int v425 = a4;
    while (1)
    {
      unint64_t v28 = (unint64_t)a3 + 6 * v9;
      int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v30 = 8 * (v28 & 7);
      if ((a4 >> v9))
      {
        uint64_t v31 = 0;
        uint64_t v32 = 0;
        uint64_t v33 = v30;
        do
        {
          if ((unint64_t)(v33 - v30 + (v32 << 6) - 43) < 0xFFFFFFFFFFFFFFCFLL)
          {
            char v34 = 0;
          }
          else
          {
            char v34 = 0;
            uint64_t v38 = 0;
            unint64_t v39 = 6;
            do
            {
              if (64 - v33 >= v39) {
                unint64_t v40 = v39;
              }
              else {
                unint64_t v40 = 64 - v33;
              }
              v34 |= (unint64_t)((v29[v32] >> v33) & ~(-1 << v40)) << v38;
              v38 += v40;
              unint64_t v41 = v40 + v33;
              v32 += v41 >> 6;
              uint64_t v33 = v41 & 0x3F;
              v39 -= v40;
            }
            while (v39);
          }
          int v35 = 16 * (v34 & 0x3F);
          int v36 = v35 - (v34 & 1) + 8;
          if (v35 == 1008) {
            int v36 = 1023;
          }
          if (!v35) {
            int v36 = 0;
          }
          if (v35 == 512 && v10 == 1) {
            int v36 = v35;
          }
          if (a5 == 4) {
            int v36 = v35;
          }
          *(&v427 + v31++) = v36 ^ (((a5 & 0xFFFFFFFD) == 1) << 9);
        }
        while (v31 != 8);
        LOWORD(v11) = v427;
        LOWORD(v12) = v428;
        LOWORD(v14) = v429;
        LOWORD(v13) = v430;
        LOWORD(v15) = v431;
        LOWORD(v16) = v432;
        __int16 v18 = v433;
        __int16 v17 = v434;
        goto LABEL_5;
      }
      uint64_t v42 = v30 | 3;
      if (((*v29 >> v30) & 7) != 0)
      {
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        int v45 = 0;
        int v46 = ((*v29 >> v30) & 7) + 2;
        int v47 = 3;
        goto LABEL_40;
      }
      uint64_t v44 = 0;
      if ((unint64_t)(v42 - v30) > 0x2E) {
        break;
      }
      char v48 = 0;
      uint64_t v49 = 0;
      unint64_t v50 = 2;
      do
      {
        unint64_t v51 = 64 - v42;
        if (64 - v42 >= v50) {
          unint64_t v51 = v50;
        }
        v48 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v51)) << v49;
        v49 += v51;
        unint64_t v52 = v51 + v42;
        v44 += v52 >> 6;
        uint64_t v42 = v52 & 0x3F;
        v50 -= v51;
      }
      while (v50);
      int v45 = v48 & 3;
      if (v45 == 2)
      {
        unsigned int v43 = 0;
        int v46 = 1;
        goto LABEL_39;
      }
      if (v45 == 1)
      {
        int v46 = 0;
        int v45 = 2;
        int v47 = 5;
        unsigned int v43 = 1023;
      }
      else
      {
        if ((v48 & 3) == 0) {
          break;
        }
        unsigned int v43 = 0;
        int v45 = 2;
        int v47 = 5;
        int v46 = 2;
      }
LABEL_40:
      int v53 = &kDQuadParamTable[10 * v46];
      int v54 = v53[164];
      int v55 = v53[165];
      if ((v54 + 1) < 0xA) {
        uint64_t v56 = (v54 + 1);
      }
      else {
        uint64_t v56 = 10;
      }
      if (v55) {
        unsigned int v57 = 10;
      }
      else {
        unsigned int v57 = 0;
      }
      if (v57 >= v55 + 1) {
        unint64_t v58 = (v55 + 1);
      }
      else {
        unint64_t v58 = v57;
      }
      char v59 = 10 - v56;
      if (v46)
      {
        if (v56)
        {
          if ((unint64_t)(v56 - v30 + v42 + (v44 << 6)) <= 0x30)
          {
            int v60 = 0;
            uint64_t v61 = 0;
            unint64_t v62 = v56;
            do
            {
              unint64_t v63 = 64 - v42;
              if (64 - v42 >= v62) {
                unint64_t v63 = v62;
              }
              v60 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v63)) << v61;
              v61 += v63;
              unint64_t v64 = v63 + v42;
              v44 += v64 >> 6;
              uint64_t v42 = v64 & 0x3F;
              v62 -= v63;
            }
            while (v62);
          }
          else
          {
            int v60 = 0;
          }
          int v47 = v56 + v45 + 3;
        }
        else
        {
          int v60 = 0;
        }
        unsigned int v43 = v60 << v59;
      }
      if (v58)
      {
        if ((unint64_t)(v42 - v30 + (v44 << 6) + 3) <= 0x30)
        {
          int v65 = 0;
          uint64_t v67 = 0;
          unint64_t v68 = 3;
          do
          {
            unint64_t v69 = 64 - v42;
            if (64 - v42 >= v68) {
              unint64_t v69 = v68;
            }
            v65 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v69)) << v67;
            v67 += v69;
            unint64_t v70 = v69 + v42;
            v44 += v70 >> 6;
            uint64_t v42 = v70 & 0x3F;
            v68 -= v69;
          }
          while (v68);
        }
        else
        {
          int v65 = 0;
        }
        uint64_t v464 = 0;
        uint64_t v465 = 0;
        int v467 = 0;
        uint64_t v466 = 0;
        unsigned int v71 = 45 - v47;
        unsigned int v72 = (45 - v47) / 7u;
        unint64_t v73 = v58 - v30;
        unint64_t v74 = (v42 | (v44 << 6)) + v71 % 7;
        unint64_t v75 = v74 & 0x3F;
        if (v73 + v75 + (v74 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          uint64_t v66 = 0;
          uint64_t v76 = 0;
          unint64_t v77 = v74 >> 6;
          unint64_t v78 = v58;
          do
          {
            unint64_t v79 = 64 - v75;
            if (64 - v75 >= v78) {
              unint64_t v79 = v78;
            }
            v66 |= ((unint64_t)((v29[v77] >> v75) & ~(-1 << v79)) << v76);
            v76 += v79;
            unint64_t v80 = v79 + v75;
            v77 += v80 >> 6;
            unint64_t v75 = v80 & 0x3F;
            v78 -= v79;
          }
          while (v78);
          LODWORD(v464) = v66;
          unint64_t v74 = v75 | (v77 << 6);
        }
        else
        {
          uint64_t v66 = 0;
        }
        uint64_t v81 = v72 - v58;
        unint64_t v82 = v74 + v81;
        uint64_t v83 = (v74 + v81) & 0x3F;
        if (v73 + v83 + ((v74 + v81) & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v84 = 0;
          uint64_t v85 = 0;
          unint64_t v86 = v82 >> 6;
          unint64_t v87 = v58;
          do
          {
            unint64_t v88 = 64 - v83;
            if (64 - v83 >= v87) {
              unint64_t v88 = v87;
            }
            v84 |= (unint64_t)((v29[v86] >> v83) & ~(-1 << v88)) << v85;
            v85 += v88;
            unint64_t v89 = v88 + v83;
            v86 += v89 >> 6;
            uint64_t v83 = v89 & 0x3F;
            v87 -= v88;
          }
          while (v87);
          HIDWORD(v464) = v84;
          unint64_t v82 = v83 | (v86 << 6);
        }
        else
        {
          HIDWORD(v464) = 0;
        }
        unint64_t v90 = v82 + v81;
        uint64_t v91 = v90 & 0x3F;
        if (v73 + v91 + (v90 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v92 = 0;
          uint64_t v93 = 0;
          unint64_t v94 = v90 >> 6;
          unint64_t v95 = v58;
          do
          {
            unint64_t v96 = 64 - v91;
            if (64 - v91 >= v95) {
              unint64_t v96 = v95;
            }
            v92 |= (unint64_t)((v29[v94] >> v91) & ~(-1 << v96)) << v93;
            v93 += v96;
            unint64_t v97 = v96 + v91;
            v94 += v97 >> 6;
            uint64_t v91 = v97 & 0x3F;
            v95 -= v96;
          }
          while (v95);
          LODWORD(v465) = v92;
          unint64_t v90 = v91 | (v94 << 6);
        }
        else
        {
          LODWORD(v465) = 0;
        }
        unint64_t v98 = v90 + v81;
        uint64_t v99 = v98 & 0x3F;
        if (v73 + v99 + (v98 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v100 = 0;
          uint64_t v101 = 0;
          unint64_t v102 = v98 >> 6;
          unint64_t v103 = v58;
          do
          {
            unint64_t v104 = 64 - v99;
            if (64 - v99 >= v103) {
              unint64_t v104 = v103;
            }
            v100 |= (unint64_t)((v29[v102] >> v99) & ~(-1 << v104)) << v101;
            v101 += v104;
            unint64_t v105 = v104 + v99;
            v102 += v105 >> 6;
            uint64_t v99 = v105 & 0x3F;
            v103 -= v104;
          }
          while (v103);
          HIDWORD(v465) = v100;
          unint64_t v98 = v99 | (v102 << 6);
        }
        else
        {
          HIDWORD(v465) = 0;
        }
        unint64_t v106 = v98 + v81;
        uint64_t v107 = v106 & 0x3F;
        if (v73 + v107 + (v106 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v108 = 0;
          uint64_t v109 = 0;
          unint64_t v110 = v106 >> 6;
          unint64_t v111 = v58;
          do
          {
            unint64_t v112 = 64 - v107;
            if (64 - v107 >= v111) {
              unint64_t v112 = v111;
            }
            v108 |= (unint64_t)((v29[v110] >> v107) & ~(-1 << v112)) << v109;
            v109 += v112;
            unint64_t v113 = v112 + v107;
            v110 += v113 >> 6;
            uint64_t v107 = v113 & 0x3F;
            v111 -= v112;
          }
          while (v111);
          LODWORD(v466) = v108;
          unint64_t v106 = v107 | (v110 << 6);
        }
        else
        {
          LODWORD(v466) = 0;
        }
        unint64_t v114 = v106 + v81;
        unint64_t v115 = v114 >> 6;
        uint64_t v116 = v114 & 0x3F;
        if (v73 + v116 + (v114 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v117 = 0;
          uint64_t v118 = 0;
          unint64_t v119 = v58;
          do
          {
            unint64_t v120 = 64 - v116;
            if (64 - v116 >= v119) {
              unint64_t v120 = v119;
            }
            v117 |= (unint64_t)((v29[v115] >> v116) & ~(-1 << v120)) << v118;
            v118 += v120;
            unint64_t v121 = v120 + v116;
            v115 += v121 >> 6;
            uint64_t v116 = v121 & 0x3F;
            v119 -= v120;
          }
          while (v119);
        }
        else
        {
          int v117 = 0;
        }
        HIDWORD(v466) = v117;
        unint64_t v122 = (v116 | (v115 << 6)) + v81;
        uint64_t v123 = v122 & 0x3F;
        if (v73 + v123 + (v122 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v124 = 0;
          uint64_t v125 = 0;
          unint64_t v126 = v122 >> 6;
          unint64_t v127 = v58;
          do
          {
            unint64_t v128 = 64 - v123;
            if (64 - v123 >= v127) {
              unint64_t v128 = v127;
            }
            v124 |= (unint64_t)((v29[v126] >> v123) & ~(-1 << v128)) << v125;
            v125 += v128;
            unint64_t v129 = v128 + v123;
            v126 += v129 >> 6;
            uint64_t v123 = v129 & 0x3F;
            v127 -= v128;
          }
          while (v127);
        }
        else
        {
          int v124 = 0;
        }
        int v467 = v124;
      }
      else
      {
        int v65 = 0;
        uint64_t v66 = 0;
        uint64_t v464 = 0;
        uint64_t v465 = 0;
        int v467 = 0;
        uint64_t v466 = 0;
      }
      unint64_t v130 = *(void *)&kDQuadParamTable[10 * v46 + 162];
      if (v130 >> v58 <= 1) {
        unint64_t v131 = 1;
      }
      else {
        unint64_t v131 = v130 >> v58;
      }
      unint64_t v132 = v131 >> 1;
      unint64_t v133 = (unint64_t)(1 << v59) >> 1;
      if (v131 >> 1 < v133) {
        unint64_t v133 = v131 >> 1;
      }
      unint64_t v134 = 512 - v43;
      if (v43) {
        uint64_t v135 = v133;
      }
      else {
        uint64_t v135 = 0;
      }
      BOOL v136 = v43 == 512;
      if (v43 >= 0x3FF) {
        __int16 v137 = 1023;
      }
      else {
        __int16 v137 = v43;
      }
      __int16 v138 = v137 ^ 0x200;
      if (v131 <= v134)
      {
        __int16 v139 = 511;
      }
      else
      {
        __int16 v138 = 0;
        __int16 v139 = 0;
      }
      if (v10 == 1) {
        __int16 v140 = v138;
      }
      else {
        __int16 v140 = v137;
      }
      if (v10 == 1) {
        __int16 v17 = v139;
      }
      else {
        __int16 v17 = 1023;
      }
      if (!v58)
      {
        if (a5 == 4)
        {
          __int16 v18 = v17;
          LOWORD(v16) = v17;
          LOWORD(v15) = v17;
          LOWORD(v13) = v17;
          LOWORD(v14) = v17;
          LOWORD(v12) = v17;
          LOWORD(v11) = v17;
          a3 = v426;
          a4 = v425;
          if ((v43 & 0x7FC00000 | 0x80000000) != 0xFF800000)
          {
            __int16 v17 = v140;
            __int16 v18 = v140;
            LOWORD(v16) = v140;
            LOWORD(v15) = v140;
            LOWORD(v13) = v140;
            LOWORD(v14) = v140;
            LOWORD(v12) = v140;
            LOWORD(v11) = v140;
          }
          goto LABEL_5;
        }
        __int16 v17 = v140;
        __int16 v18 = v140;
        LOWORD(v16) = v140;
        LOWORD(v15) = v140;
        LOWORD(v13) = v140;
        LOWORD(v14) = v140;
        LOWORD(v12) = v140;
        LOWORD(v11) = v140;
        goto LABEL_310;
      }
      unint64_t v141 = v130 + v43;
      uint64_t v142 = ~(-1 << v58);
      unint64_t v143 = v134 / v131;
      if (v65)
      {
        BOOL v144 = v143 == v66;
        if (v43 || v66)
        {
          if (v141 >= 0x400 && v66 == v142)
          {
            uint64_t v145 = 1;
            uint64_t v66 = 1023;
            goto LABEL_150;
          }
          uint64_t v66 = v132 + v131 * v66;
        }
        uint64_t v145 = 1;
      }
      else
      {
        uint64_t v145 = 0;
        uint64_t v66 = v135;
        BOOL v144 = v43 == 512;
      }
LABEL_150:
      unint64_t v146 = v66 + v43;
      unint64_t v147 = v146;
      if (a5 == 4)
      {
        unint64_t v147 = 2139095039;
        if ((v146 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v147 = 4286578687;
          if ((v146 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v147 = v146;
          }
        }
      }
      if (v147 >= 0x3FF) {
        int v148 = 1023;
      }
      else {
        int v148 = v147;
      }
      if (v144) {
        int v149 = 0;
      }
      else {
        int v149 = v148 ^ 0x200;
      }
      if (v10 == 1) {
        int v11 = v149;
      }
      else {
        int v11 = v148;
      }
      int v427 = v11;
      if (v65 == 1)
      {
        uint64_t v150 = v135;
        BOOL v151 = v43 == 512;
      }
      else
      {
        uint64_t v152 = *(unsigned int *)((unint64_t)&v464 | (4 * v145));
        BOOL v151 = v143 == v152;
        if (v43 | v152)
        {
          if (v141 >= 0x400 && v152 == v142) {
            uint64_t v150 = 1023;
          }
          else {
            uint64_t v150 = v132 + v131 * v152;
          }
        }
        else
        {
          uint64_t v150 = 0;
        }
        ++v145;
      }
      unint64_t v153 = v150 + v43;
      unint64_t v154 = v153;
      if (a5 == 4)
      {
        unint64_t v154 = 2139095039;
        if ((v153 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v154 = 4286578687;
          if ((v153 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v154 = v153;
          }
        }
      }
      if (v154 >= 0x3FF) {
        int v155 = 1023;
      }
      else {
        int v155 = v154;
      }
      if (v151) {
        int v156 = 0;
      }
      else {
        int v156 = v155 ^ 0x200;
      }
      if (v10 == 1) {
        int v12 = v156;
      }
      else {
        int v12 = v155;
      }
      int v428 = v12;
      if (v65 == 2)
      {
        uint64_t v157 = v135;
        BOOL v158 = v43 == 512;
      }
      else
      {
        uint64_t v159 = *((unsigned int *)&v464 + v145);
        BOOL v158 = v143 == v159;
        if (v43 | v159)
        {
          if (v141 >= 0x400 && v159 == v142) {
            uint64_t v157 = 1023;
          }
          else {
            uint64_t v157 = v132 + v131 * v159;
          }
        }
        else
        {
          uint64_t v157 = 0;
        }
        ++v145;
      }
      unint64_t v160 = v157 + v43;
      unint64_t v161 = v160;
      if (a5 == 4)
      {
        unint64_t v161 = 2139095039;
        if ((v160 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v161 = 4286578687;
          if ((v160 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v161 = v160;
          }
        }
      }
      if (v161 >= 0x3FF) {
        int v162 = 1023;
      }
      else {
        int v162 = v161;
      }
      if (v158) {
        int v163 = 0;
      }
      else {
        int v163 = v162 ^ 0x200;
      }
      if (v10 == 1) {
        int v14 = v163;
      }
      else {
        int v14 = v162;
      }
      int v429 = v14;
      if (v65 == 3)
      {
        uint64_t v164 = v135;
        BOOL v165 = v43 == 512;
      }
      else
      {
        uint64_t v166 = *((unsigned int *)&v464 + v145);
        BOOL v165 = v143 == v166;
        if (v43 | v166)
        {
          if (v141 >= 0x400 && v166 == v142) {
            uint64_t v164 = 1023;
          }
          else {
            uint64_t v164 = v132 + v131 * v166;
          }
        }
        else
        {
          uint64_t v164 = 0;
        }
        ++v145;
      }
      unint64_t v167 = v164 + v43;
      unint64_t v168 = v167;
      if (a5 == 4)
      {
        unint64_t v168 = 2139095039;
        if ((v167 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v168 = 4286578687;
          if ((v167 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v168 = v167;
          }
        }
      }
      if (v168 >= 0x3FF) {
        int v169 = 1023;
      }
      else {
        int v169 = v168;
      }
      if (v165) {
        int v170 = 0;
      }
      else {
        int v170 = v169 ^ 0x200;
      }
      if (v10 == 1) {
        int v13 = v170;
      }
      else {
        int v13 = v169;
      }
      int v430 = v13;
      if (v65 == 4)
      {
        uint64_t v171 = v135;
        BOOL v172 = v43 == 512;
      }
      else
      {
        uint64_t v173 = *((unsigned int *)&v464 + v145);
        BOOL v172 = v143 == v173;
        if (v43 | v173)
        {
          if (v141 >= 0x400 && v173 == v142) {
            uint64_t v171 = 1023;
          }
          else {
            uint64_t v171 = v132 + v131 * v173;
          }
        }
        else
        {
          uint64_t v171 = 0;
        }
        ++v145;
      }
      unint64_t v174 = v171 + v43;
      unint64_t v175 = v174;
      if (a5 == 4)
      {
        unint64_t v175 = 2139095039;
        if ((v174 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v175 = 4286578687;
          if ((v174 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v175 = v174;
          }
        }
      }
      if (v175 >= 0x3FF) {
        int v176 = 1023;
      }
      else {
        int v176 = v175;
      }
      if (v172) {
        int v15 = 0;
      }
      else {
        int v15 = v176 ^ 0x200;
      }
      if (v10 != 1) {
        int v15 = v176;
      }
      int v431 = v15;
      unint64_t v424 = v141;
      if (v65 == 5)
      {
        uint64_t v177 = v142;
        uint64_t v178 = v135;
        BOOL v179 = v43 == 512;
      }
      else
      {
        uint64_t v180 = *((unsigned int *)&v464 + v145);
        BOOL v179 = v143 == v180;
        if (v43 | v180)
        {
          if (v141 >= 0x400 && v180 == v142)
          {
            uint64_t v177 = v142;
            uint64_t v178 = 1023;
          }
          else
          {
            uint64_t v177 = v142;
            uint64_t v178 = v132 + v131 * v180;
          }
        }
        else
        {
          uint64_t v177 = v142;
          uint64_t v178 = 0;
        }
        ++v145;
      }
      unint64_t v181 = v178 + v43;
      unint64_t v182 = v181;
      if (a5 == 4)
      {
        unint64_t v182 = 2139095039;
        if ((v181 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v181 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v182 = 4286578687;
          }
          else {
            unint64_t v182 = v181;
          }
        }
      }
      if (v182 >= 0x3FF) {
        int v183 = 1023;
      }
      else {
        int v183 = v182;
      }
      if (v179) {
        int v184 = 0;
      }
      else {
        int v184 = v183 ^ 0x200;
      }
      if (v10 == 1) {
        int v16 = v184;
      }
      else {
        int v16 = v183;
      }
      int v432 = v16;
      if (v65 == 6)
      {
        uint64_t v185 = v135;
        BOOL v186 = v43 == 512;
      }
      else
      {
        uint64_t v187 = *((unsigned int *)&v464 + v145);
        BOOL v186 = v143 == v187;
        if (v43 | v187)
        {
          if (v424 >= 0x400 && v187 == v177) {
            uint64_t v185 = 1023;
          }
          else {
            uint64_t v185 = v132 + v131 * v187;
          }
        }
        else
        {
          uint64_t v185 = 0;
        }
        ++v145;
      }
      unint64_t v188 = v185 + v43;
      unint64_t v189 = v188;
      if (a5 == 4)
      {
        unint64_t v189 = 2139095039;
        if ((v188 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v189 = 4286578687;
          if ((v188 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v189 = v188;
          }
        }
      }
      if (v189 >= 0x3FF) {
        LOWORD(v189) = 1023;
      }
      if (v186) {
        __int16 v18 = 0;
      }
      else {
        __int16 v18 = v189 ^ 0x200;
      }
      if (v10 != 1) {
        __int16 v18 = v189;
      }
      if (v65 != 7)
      {
        uint64_t v190 = *((unsigned int *)&v464 + v145);
        BOOL v136 = v143 == v190;
        if (v43 | v190)
        {
          if (v424 >= 0x400 && v190 == v177) {
            uint64_t v135 = 1023;
          }
          else {
            uint64_t v135 = v132 + v131 * v190;
          }
        }
        else
        {
          uint64_t v135 = 0;
        }
      }
      unint64_t v191 = v135 + v43;
      unint64_t v192 = v191;
      if (a5 == 4)
      {
        unint64_t v192 = 2139095039;
        if ((v191 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v192 = 4286578687;
          if ((v191 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v192 = v135 + v43;
          }
        }
      }
      if (v192 >= 0x3FF) {
        LOWORD(v192) = 1023;
      }
      __int16 v17 = v192 ^ 0x200;
      if (v136) {
        __int16 v17 = 0;
      }
      if (v10 != 1) {
        __int16 v17 = v192;
      }
LABEL_310:
      a3 = v426;
      a4 = v425;
LABEL_5:
      unsigned int v19 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v9;
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      BOOL v22 = &v435 + v20;
      uint64_t v23 = 2 * v21;
      *(_WORD *)((char *)v22 + v23) = v11;
      BOOL v24 = &v435 + (v20 + 1);
      *(_WORD *)((char *)v24 + v23) = v12;
      uint64_t v25 = 2 * (v21 + 1);
      *(_WORD *)((char *)v22 + v25) = v14;
      *(_WORD *)((char *)v24 + v25) = v13;
      BOOL v26 = &v435 + (v20 + 2);
      *(_WORD *)((char *)v26 + v23) = v15;
      int v27 = &v435 + (v20 + 3);
      *(_WORD *)((char *)v27 + v23) = v16;
      *(_WORD *)((char *)v26 + v25) = v18;
      *(_WORD *)((char *)v27 + v25) = v17;
      if (++v9 == 4)
      {
        *(_WORD *)a1 = (_WORD)v435 << 6;
        *(_WORD *)(a1 + 2) = v436 << 6;
        *(_WORD *)(a1 + 4) = v440 << 6;
        *(_WORD *)(a1 + 6) = v444 << 6;
        *(_WORD *)(a1 + 8) = v448 << 6;
        *(_WORD *)(a1 + 10) = v452 << 6;
        *(_WORD *)(a1 + 12) = v456 << 6;
        *(_WORD *)(a1 + 14) = v460 << 6;
        uint16x8_t v198 = (_WORD *)(a1 + a2);
        *uint16x8_t v198 = WORD1(v435) << 6;
        v198[1] = v437 << 6;
        v198[2] = v441 << 6;
        v198[3] = v445 << 6;
        v198[4] = v449 << 6;
        v198[5] = v453 << 6;
        v198[6] = v457 << 6;
        v198[7] = v461 << 6;
        int32x4_t v199 = (_WORD *)(a1 + a2 + a2);
        *int32x4_t v199 = WORD2(v435) << 6;
        v199[1] = v438 << 6;
        v199[2] = v442 << 6;
        v199[3] = v446 << 6;
        v199[4] = v450 << 6;
        v199[5] = v454 << 6;
        v199[6] = v458 << 6;
        v199[7] = v462 << 6;
        int32x4_t v200 = (_WORD *)((char *)v199 + a2);
        *int32x4_t v200 = HIWORD(v435) << 6;
        v200[1] = v439 << 6;
        v200[2] = v443 << 6;
        v200[3] = v447 << 6;
        v200[4] = v451 << 6;
        v200[5] = v455 << 6;
        v200[6] = v459 << 6;
        uint64_t v193 = 24;
        v200[7] = v463 << 6;
        return v193;
      }
    }
    unsigned int v43 = 0;
    int v46 = 0;
    int v45 = 2;
LABEL_39:
    int v47 = 5;
    goto LABEL_40;
  }
  switch(a4)
  {
    case 0x3Fu:
      int32x4_t v202 = *a3;
      int32x4_t v203 = a3[1];
      int32x4_t v204 = a3[2];
      int32x4_t v205 = a3[3];
      *(int32x4_t *)a1 = vuzp1q_s32(*a3, v204);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v202, v204);
      int64x2_t v206 = (int32x4_t *)(a1 + 2 * a2);
      *int64x2_t v206 = vuzp1q_s32(v203, v205);
      *(int32x4_t *)((char *)v206 + a2) = vuzp2q_s32(v203, v205);
      return 64;
    case 0x27u:
      v207.i64[0] = 0xA000A000A000ALL;
      v207.i64[1] = 0xA000A000A000ALL;
      int8x16_t v208 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v207, v207));
      unint64_t v209 = vpaddq_s32((int32x4_t)v208, (int32x4_t)v208).u64[0];
      v210.i64[0] = v209;
      v210.i64[1] = HIDWORD(v209);
      int8x16_t v211 = (int8x16_t)v210;
      unint64_t v212 = vaddvq_s64(v210);
      int8x16_t v213 = 0uLL;
      int8x16_t v214 = 0uLL;
      int8x16_t v215 = 0uLL;
      int8x16_t v216 = 0uLL;
      if (v212 <= 0x80)
      {
        uint16x8_t v217 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v218 = 8 * (a3 & 7);
        int64x2_t v219 = vzip1q_s64((int64x2_t)0, (int64x2_t)v211);
        unint64_t v220 = v212 + v218;
        int64x2_t v221 = vaddq_s64(v219, vdupq_n_s64(v218));
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v221)));
        if (v212 + v218 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v217[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v221))), v214);
        }
        unint64_t v222 = v220 & 0x3F;
        int64x2_t v223 = (int64x2_t *)((char *)v217 + 8 * (v220 >> 6));
        int64x2_t v224 = vaddq_s64(v219, vdupq_n_s64(v222));
        unint64_t v225 = v212 + v220;
        int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v223, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v224)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v223->i64[0], 0), (uint64x2_t)vnegq_s64(v224)));
        if (v212 + v222 >= 0x81) {
          int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v223[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v224)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v223[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v224))), v215);
        }
        unint64_t v226 = v225 & 0x3F;
        int64x2_t v227 = (int64x2_t *)((char *)v217 + 8 * (v225 >> 6));
        int64x2_t v228 = vaddq_s64(v219, vdupq_n_s64(v226));
        unint64_t v229 = v212 + v225;
        int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v228)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v228)));
        if (v212 + v226 >= 0x81) {
          int8x16_t v213 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v228)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v228))), v213);
        }
        int8x16_t v211 = (int8x16_t)vaddq_s64(v219, vdupq_n_s64(v229 & 0x3F));
        int8x16_t v230 = (int64x2_t *)((char *)v217 + 8 * (v229 >> 6));
        int8x16_t v216 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v230, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v211)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v230->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v211)));
        if (v212 + (v229 & 0x3F) >= 0x81)
        {
          int8x16_t v211 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v230[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v211)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v230[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v211)));
          int8x16_t v216 = vorrq_s8(v211, v216);
        }
      }
      *(int32x2_t *)v211.i8 = vmovn_s64((int64x2_t)v213);
      int32x2_t v231 = vzip1_s32(*(int32x2_t *)v208.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v208, v208, 8uLL));
      v232.i64[0] = v231.u32[0];
      v232.i64[1] = v231.u32[1];
      uint64x2_t v233 = (uint64x2_t)vnegq_s64(v232);
      int64x2_t v234 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v233);
      *(int32x2_t *)v234.i8 = vmovn_s64(v234);
      int16x8_t v235 = (int16x8_t)vzip1q_s32((int32x4_t)v211, (int32x4_t)v234);
      *(int16x4_t *)v211.i8 = vmovn_s32((int32x4_t)v235);
      *(int16x4_t *)v235.i8 = vshrn_n_s32((int32x4_t)v235, 0xAuLL);
      int8x16_t v236 = (int8x16_t)vzip1q_s16((int16x8_t)v211, v235);
      v237.i64[0] = 0x1000100010001;
      v237.i64[1] = 0x1000100010001;
      v238.i64[0] = -1;
      v238.i64[1] = -1;
      int8x16_t v239 = (int8x16_t)vaddq_s16(vshlq_n_s16(v237, 0xAuLL), v238);
      *(int32x2_t *)v238.i8 = vmovn_s64((int64x2_t)v215);
      int64x2_t v240 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v233);
      *(int32x2_t *)v240.i8 = vmovn_s64(v240);
      int16x8_t v241 = (int16x8_t)vzip1q_s32((int32x4_t)v238, (int32x4_t)v240);
      *(int16x4_t *)v238.i8 = vmovn_s32((int32x4_t)v241);
      *(int16x4_t *)v241.i8 = vshrn_n_s32((int32x4_t)v241, 0xAuLL);
      int16x8_t v242 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v238, v241), v239);
      *(int32x2_t *)v238.i8 = vmovn_s64((int64x2_t)v214);
      int64x2_t v243 = (int64x2_t)vshlq_u64((uint64x2_t)v214, v233);
      *(int32x2_t *)v243.i8 = vmovn_s64(v243);
      int16x8_t v244 = (int16x8_t)vzip1q_s32((int32x4_t)v238, (int32x4_t)v243);
      *(int16x4_t *)v238.i8 = vmovn_s32((int32x4_t)v244);
      *(int16x4_t *)v244.i8 = vshrn_n_s32((int32x4_t)v244, 0xAuLL);
      int64x2_t v245 = (int64x2_t)vshlq_u64((uint64x2_t)v216, v233);
      *(int32x2_t *)v216.i8 = vmovn_s64((int64x2_t)v216);
      *(int32x2_t *)v245.i8 = vmovn_s64(v245);
      int16x8_t v246 = (int16x8_t)vzip1q_s32((int32x4_t)v216, (int32x4_t)v245);
      *(int16x4_t *)v216.i8 = vmovn_s32((int32x4_t)v246);
      *(int16x4_t *)v246.i8 = vshrn_n_s32((int32x4_t)v246, 0xAuLL);
      int16x8_t v247 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v216, v246), v239);
      int32x4_t v248 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v238, v244), v239), 6uLL);
      int32x4_t v249 = (int32x4_t)vshlq_n_s16(v242, 6uLL);
      int32x4_t v250 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v236, v239), 6uLL);
      int32x4_t v251 = (int32x4_t)vshlq_n_s16(v247, 6uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v248, v250);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v248, v250);
      unint64_t v252 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v252 = vuzp1q_s32(v249, v251);
      *(int32x4_t *)((char *)v252 + a2) = vuzp2q_s32(v249, v251);
      return 40;
    case 1u:
      int16x8_t v197 = vdupq_n_s16(a3->u16[0] << 6);
      *(int16x8_t *)a1 = v197;
      *(int16x8_t *)(a1 + a2) = v197;
      *(int16x8_t *)(a1 + 2 * a2) = v197;
      *(int16x8_t *)(a1 + 3 * a2) = v197;
      return 2;
    default:
      unint64_t v253 = 8 * (a3 & 7);
      unint64_t v254 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v255 = v253 + 16;
      uint64_t v256 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v253;
      if (v253 >= 0x31) {
        v256 |= *(void *)(v254 + 8) << (-8 * (a3 & 7u));
      }
      unint64_t v257 = (8 * (a3 & 7)) | 0xC0;
      int v258 = (a4 >> 6) | (4 * v256);
      uint16x8_t v259 = (uint16x8_t)vdupq_n_s16(v258 & 0xF);
      a9.i32[0] = v258 & 0xF;
      v260.i64[0] = 0x3000300030003;
      v260.i64[1] = 0x3000300030003;
      int8x16_t v261 = vbicq_s8((int8x16_t)vdupq_n_s16(((v256 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v259 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v260));
      int8x16_t v262 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a9, (int8x8_t)0x4000400040004), 0))));
      v263.i64[0] = 0x202020202020202;
      v263.i64[1] = 0x202020202020202;
      int8x16_t v264 = vandq_s8(v262, v263);
      if (vmaxvq_s8(v264) < 1)
      {
        int v274 = 0;
        v275.i64[0] = -1;
        v275.i64[1] = -1;
        int8x16_t v276 = v261;
        int8x16_t v277 = v261;
        int8x16_t v278 = v261;
        v279.i64[0] = -1;
        v279.i64[1] = -1;
        int8x16_t v280 = v261;
        v281.i64[0] = -1;
        v281.i64[1] = -1;
        v282.i64[0] = -1;
        v282.i64[1] = -1;
      }
      else
      {
        int8x16_t v265 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v264, v264));
        int8x16_t v266 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v265, (int16x8_t)v265));
        unint64_t v267 = vpaddq_s32((int32x4_t)v266, (int32x4_t)v266).u64[0];
        v268.i64[0] = v267;
        v268.i64[1] = HIDWORD(v267);
        int64x2_t v269 = v268;
        unint64_t v270 = vaddvq_s64(v268);
        unint64_t v271 = v270 + v255;
        if (v270 <= 0x80 && v257 >= v271)
        {
          unint64_t v283 = v255 & 0x38;
          int64x2_t v284 = vaddq_s64(vzip1q_s64((int64x2_t)0, v269), vdupq_n_s64(v283));
          int64x2_t v285 = (int64x2_t *)(v254 + ((v255 >> 3) & 8));
          int8x16_t v273 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v285, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v284)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v285->i64[0], 0), (uint64x2_t)vnegq_s64(v284)));
          if (v270 + v283 < 0x81)
          {
            int v274 = 0;
          }
          else
          {
            int v274 = 0;
            int8x16_t v273 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v285[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v284)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v285[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v284))), v273);
          }
          unint64_t v255 = v271;
        }
        else
        {
          int8x16_t v273 = 0uLL;
          int v274 = 1;
        }
        int32x2_t v286 = vzip1_s32(*(int32x2_t *)v266.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v266, v266, 8uLL));
        v287.i64[0] = v286.u32[0];
        v287.i64[1] = v286.u32[1];
        int64x2_t v288 = (int64x2_t)vshlq_u64((uint64x2_t)v273, (uint64x2_t)vnegq_s64(v287));
        *(int32x2_t *)v273.i8 = vmovn_s64((int64x2_t)v273);
        *(int32x2_t *)v288.i8 = vmovn_s64(v288);
        int8x16_t v289 = (int8x16_t)vzip1q_s32((int32x4_t)v273, (int32x4_t)v288);
        int16x8_t v290 = (int16x8_t)vshlq_u32((uint32x4_t)v289, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v265.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v265, v265, 8uLL)))));
        *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
        *(int16x4_t *)v290.i8 = vmovn_s32((int32x4_t)v290);
        int8x16_t v291 = (int8x16_t)vzip1q_s16((int16x8_t)v289, v290);
        *(int8x8_t *)v291.i8 = vzip1_s8(vmovn_s16((int16x8_t)v291), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v291, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v264.i8, *(int8x8_t *)v259.i8))))));
        v289.i64[0] = 0x101010101010101;
        v289.i64[1] = 0x101010101010101;
        int8x16_t v292 = vshlq_s8(v289, v264);
        v289.i64[0] = -1;
        v289.i64[1] = -1;
        v292.i32[0] = vandq_s8(v291, vaddq_s8(v292, v289)).u32[0];
        int16x8_t v293 = vdupq_n_s16(v292.i8[0]);
        int16x8_t v294 = vdupq_n_s16(v292.i8[1]);
        int16x8_t v295 = vdupq_n_s16(v292.i8[2]);
        int16x8_t v296 = vdupq_n_s16(v292.i8[3]);
        int8x16_t v280 = (int8x16_t)vsubq_s16((int16x8_t)v261, v293);
        int8x16_t v278 = (int8x16_t)vsubq_s16((int16x8_t)v261, v294);
        int8x16_t v277 = (int8x16_t)vsubq_s16((int16x8_t)v261, v295);
        int8x16_t v276 = (int8x16_t)vsubq_s16((int16x8_t)v261, v296);
        int8x16_t v282 = (int8x16_t)vceqzq_s16(v293);
        int8x16_t v281 = (int8x16_t)vceqzq_s16(v294);
        int8x16_t v279 = (int8x16_t)vceqzq_s16(v295);
        int8x16_t v275 = (int8x16_t)vceqzq_s16(v296);
      }
      v297.i64[0] = 0x7000700070007;
      v297.i64[1] = 0x7000700070007;
      int8x16_t v298 = 0uLL;
      int8x16_t v299 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v259, v297), (int8x16_t)0, 0xEuLL), v261);
      int8x16_t v300 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v299, (int16x8_t)v299));
      unint64_t v301 = vpaddq_s32((int32x4_t)v300, (int32x4_t)v300).u64[0];
      v302.i64[0] = v301;
      v302.i64[1] = HIDWORD(v301);
      int64x2_t v303 = v302;
      unint64_t v304 = vaddvq_s64(v302);
      unint64_t v305 = v304 + v255;
      if (v304 <= 0x80 && v257 >= v305)
      {
        unint64_t v307 = v255 & 0x3F;
        int64x2_t v308 = vaddq_s64(vzip1q_s64((int64x2_t)0, v303), vdupq_n_s64(v307));
        int64x2_t v309 = (int64x2_t *)(v254 + 8 * (v255 >> 6));
        int8x16_t v298 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v309, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v308)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v309->i64[0], 0), (uint64x2_t)vnegq_s64(v308)));
        if (v304 + v307 >= 0x81) {
          int8x16_t v298 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v309[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v308)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v309[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v308))), v298);
        }
        unint64_t v255 = v305;
      }
      else
      {
        int v274 = 1;
      }
      int v310 = a4 >> 6;
      if (v310 == 2)
      {
        BOOL v311 = v257 >= v255 + 8;
        if (v257 >= v255 + 8) {
          v255 += 8;
        }
        unint64_t v312 = v255 + 8;
        if (!v311 || v257 < v312) {
          int v274 = 1;
        }
        if (v257 >= v312) {
          v255 += 8;
        }
      }
      int8x16_t v314 = 0uLL;
      int8x16_t v315 = vextq_s8((int8x16_t)0, v280, 0xEuLL);
      int8x16_t v316 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v315, (int16x8_t)v315));
      unint64_t v317 = vpaddq_s32((int32x4_t)v316, (int32x4_t)v316).u64[0];
      v318.i64[0] = v317;
      v318.i64[1] = HIDWORD(v317);
      int64x2_t v319 = v318;
      unint64_t v320 = vaddvq_s64(v318);
      unint64_t v321 = v320 + v255;
      if (v320 <= 0x80 && v257 >= v321)
      {
        unint64_t v324 = v255 & 0x3F;
        int64x2_t v325 = vaddq_s64(vzip1q_s64((int64x2_t)0, v319), vdupq_n_s64(v324));
        int64x2_t v326 = (int64x2_t *)(v254 + 8 * (v255 >> 6));
        int8x16_t v323 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v326, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v325)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v326->i64[0], 0), (uint64x2_t)vnegq_s64(v325)));
        if (v320 + v324 >= 0x81) {
          int8x16_t v323 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v326[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v325)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v326[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v325))), v323);
        }
        unint64_t v255 = v321;
      }
      else
      {
        int v274 = 1;
        int8x16_t v323 = 0uLL;
      }
      int8x16_t v327 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v278, (int16x8_t)v278));
      unint64_t v328 = vpaddq_s32((int32x4_t)v327, (int32x4_t)v327).u64[0];
      v329.i64[0] = v328;
      v329.i64[1] = HIDWORD(v328);
      int64x2_t v330 = v329;
      unint64_t v331 = vaddvq_s64(v329);
      if (v331 < 0x81)
      {
        int32x2_t v332 = vzip1_s32(*(int32x2_t *)v327.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v327, v327, 8uLL));
        v333.i64[0] = v332.u32[0];
        v333.i64[1] = v332.u32[1];
        int64x2_t v334 = v333;
        int32x4_t v335 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v278.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL)));
        unint64_t v336 = v331 + v255;
        if (v257 >= v331 + v255)
        {
          unint64_t v337 = v255 & 0x3F;
          int64x2_t v338 = vaddq_s64(vzip1q_s64((int64x2_t)0, v330), vdupq_n_s64(v337));
          int64x2_t v339 = (int64x2_t *)(v254 + 8 * (v255 >> 6));
          int8x16_t v314 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v339, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v338)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v339->i64[0], 0), (uint64x2_t)vnegq_s64(v338)));
          if (v331 + v337 >= 0x81) {
            int8x16_t v314 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v339[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v338)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v339[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v338))), v314);
          }
          unint64_t v255 = v336;
        }
        else
        {
          int v274 = 1;
        }
        int64x2_t v340 = (int64x2_t)vshlq_u64((uint64x2_t)v314, (uint64x2_t)vnegq_s64(v334));
        *(int32x2_t *)v314.i8 = vmovn_s64((int64x2_t)v314);
        *(int32x2_t *)v340.i8 = vmovn_s64(v340);
        int16x8_t v341 = (int16x8_t)vzip1q_s32((int32x4_t)v314, (int32x4_t)v340);
        int16x8_t v342 = (int16x8_t)vshlq_u32((uint32x4_t)v341, (uint32x4_t)vnegq_s32(v335));
        *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
        *(int16x4_t *)v342.i8 = vmovn_s32((int32x4_t)v342);
        int8x16_t v314 = (int8x16_t)vzip1q_s16(v341, v342);
      }
      else
      {
        int v274 = 1;
      }
      int8x16_t v343 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v277, (int16x8_t)v277));
      unint64_t v344 = vpaddq_s32((int32x4_t)v343, (int32x4_t)v343).u64[0];
      v345.i64[0] = v344;
      v345.i64[1] = HIDWORD(v344);
      int64x2_t v346 = v345;
      unint64_t v347 = vaddvq_s64(v345);
      int8x16_t v348 = 0uLL;
      if (v347 <= 0x80)
      {
        int32x2_t v350 = vzip1_s32(*(int32x2_t *)v343.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v343, v343, 8uLL));
        v351.i64[0] = v350.u32[0];
        v351.i64[1] = v350.u32[1];
        int64x2_t v352 = v351;
        int32x4_t v353 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v277.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v277, v277, 8uLL)));
        unint64_t v354 = v347 + v255;
        if (v257 >= v347 + v255)
        {
          unint64_t v356 = v255 & 0x3F;
          int64x2_t v357 = vaddq_s64(vzip1q_s64((int64x2_t)0, v346), vdupq_n_s64(v356));
          int64x2_t v358 = (int64x2_t *)(v254 + 8 * (v255 >> 6));
          int8x16_t v355 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v358, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v357)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v358->i64[0], 0), (uint64x2_t)vnegq_s64(v357)));
          if (v347 + v356 >= 0x81) {
            int8x16_t v355 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v358[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v357)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v358[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v357))), v355);
          }
          unint64_t v255 = v354;
        }
        else
        {
          int8x16_t v355 = 0uLL;
          int v274 = 1;
        }
        int64x2_t v359 = (int64x2_t)vshlq_u64((uint64x2_t)v355, (uint64x2_t)vnegq_s64(v352));
        *(int32x2_t *)v355.i8 = vmovn_s64((int64x2_t)v355);
        *(int32x2_t *)v359.i8 = vmovn_s64(v359);
        int16x8_t v360 = (int16x8_t)vzip1q_s32((int32x4_t)v355, (int32x4_t)v359);
        int16x8_t v361 = (int16x8_t)vshlq_u32((uint32x4_t)v360, (uint32x4_t)vnegq_s32(v353));
        *(int16x4_t *)v360.i8 = vmovn_s32((int32x4_t)v360);
        *(int16x4_t *)v361.i8 = vmovn_s32((int32x4_t)v361);
        int16x8_t v349 = vzip1q_s16(v360, v361);
      }
      else
      {
        int v274 = 1;
        int16x8_t v349 = 0uLL;
      }
      int8x16_t v362 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v276, (int16x8_t)v276));
      unint64_t v363 = vpaddq_s32((int32x4_t)v362, (int32x4_t)v362).u64[0];
      v364.i64[0] = v363;
      v364.i64[1] = HIDWORD(v363);
      int64x2_t v365 = v364;
      unint64_t v366 = vaddvq_s64(v364);
      if (v366 > 0x80) {
        goto LABEL_398;
      }
      if (v257 >= v366 + v255)
      {
        int64x2_t v367 = vaddq_s64(vzip1q_s64((int64x2_t)0, v365), vdupq_n_s64(v255 & 0x3F));
        int64x2_t v368 = (int64x2_t *)(v254 + 8 * (v255 >> 6));
        int8x16_t v348 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v368, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v367)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v368->i64[0], 0), (uint64x2_t)vnegq_s64(v367)));
        if (v366 + (v255 & 0x3F) >= 0x81) {
          int8x16_t v348 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v368[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v367)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v368[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v367))), v348);
        }
        v255 += v366;
      }
      else
      {
        int v274 = 1;
      }
      if (v274 || (uint64_t v193 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v193) - v255 >= 9) || v310 == 2)
      {
LABEL_398:
        uint64_t v193 = 0;
        v435 |= 1023 << ((8 * &v435) & 0x30);
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        uint16x8_t v369 = (void *)(a1 + a2);
        uint16x8_t v370 = (void *)(a1 + 2 * a2);
        *uint16x8_t v369 = 0;
        v369[1] = 0;
        int16x8_t v196 = (void *)(a1 + a2 + 2 * a2);
        *uint16x8_t v370 = 0;
        v370[1] = 0;
        goto LABEL_315;
      }
      int32x2_t v371 = vzip1_s32(*(int32x2_t *)v300.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v300, v300, 8uLL));
      int32x2_t v372 = vzip1_s32(*(int32x2_t *)v316.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v316, v316, 8uLL));
      v373.i64[0] = v371.u32[0];
      v373.i64[1] = v371.u32[1];
      int64x2_t v374 = v373;
      v373.i64[0] = v372.u32[0];
      v373.i64[1] = v372.u32[1];
      int64x2_t v375 = (int64x2_t)vshlq_u64((uint64x2_t)v298, (uint64x2_t)vnegq_s64(v374));
      int64x2_t v376 = (int64x2_t)vshlq_u64((uint64x2_t)v323, (uint64x2_t)vnegq_s64(v373));
      *(int32x2_t *)v298.i8 = vmovn_s64((int64x2_t)v298);
      *(int32x2_t *)v375.i8 = vmovn_s64(v375);
      *(int32x2_t *)v323.i8 = vmovn_s64((int64x2_t)v323);
      *(int32x2_t *)v376.i8 = vmovn_s64(v376);
      int16x8_t v377 = (int16x8_t)vzip1q_s32((int32x4_t)v298, (int32x4_t)v375);
      int16x8_t v378 = (int16x8_t)vzip1q_s32((int32x4_t)v323, (int32x4_t)v376);
      int16x8_t v379 = (int16x8_t)vshlq_u32((uint32x4_t)v377, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v299.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v299, v299, 8uLL)))));
      int16x8_t v380 = (int16x8_t)vshlq_u32((uint32x4_t)v378, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v315.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v315, v315, 8uLL)))));
      *(int16x4_t *)v377.i8 = vmovn_s32((int32x4_t)v377);
      *(int16x4_t *)v379.i8 = vmovn_s32((int32x4_t)v379);
      *(int16x4_t *)v378.i8 = vmovn_s32((int32x4_t)v378);
      *(int16x4_t *)v380.i8 = vmovn_s32((int32x4_t)v380);
      v381.i64[0] = 0x10001000100010;
      v381.i64[1] = 0x10001000100010;
      v382.i64[0] = 0x10001000100010;
      v382.i64[1] = 0x10001000100010;
      int16x8_t v383 = vzip1q_s16(v377, v379);
      v379.i64[0] = 0xF000F000F000FLL;
      v379.i64[1] = 0xF000F000F000FLL;
      int16x8_t v384 = vsubq_s16(v381, (int16x8_t)v299);
      int16x8_t v385 = vzip1q_s16(v378, v380);
      v380.i64[0] = 0xF000F000F000FLL;
      v380.i64[1] = 0xF000F000F000FLL;
      int32x2_t v386 = vzip1_s32(*(int32x2_t *)v362.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v362, v362, 8uLL));
      v387.i64[0] = 0xF000F000F000FLL;
      v387.i64[1] = 0xF000F000F000FLL;
      v388.i64[0] = 0x10001000100010;
      v388.i64[1] = 0x10001000100010;
      int16x8_t v389 = vaddq_s16((int16x8_t)v299, v379);
      int16x8_t v390 = vaddq_s16((int16x8_t)v315, v380);
      int16x8_t v391 = vshlq_s16(v385, vsubq_s16(v382, (int16x8_t)v315));
      int16x8_t v392 = vshlq_s16((int16x8_t)v314, vsubq_s16(v382, (int16x8_t)v278));
      int16x8_t v393 = vshlq_s16(v349, vsubq_s16(v382, (int16x8_t)v277));
      v373.i64[0] = v386.u32[0];
      v373.i64[1] = v386.u32[1];
      int32x4_t v394 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v276.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v276, v276, 8uLL)));
      int16x8_t v395 = vaddq_s16((int16x8_t)v276, v387);
      int16x8_t v396 = vsubq_s16(v388, (int16x8_t)v276);
      int16x8_t v397 = vdupq_n_s16((unsigned __int16)v256 >> 6);
      int8x16_t v398 = (int8x16_t)vshlq_s16(vshlq_s16(v383, v384), v389);
      int16x8_t v399 = vshlq_s16(v391, v390);
      int64x2_t v400 = (int64x2_t)vshlq_u64((uint64x2_t)v348, (uint64x2_t)vnegq_s64(v373));
      *(int32x2_t *)v391.i8 = vmovn_s64((int64x2_t)v348);
      *(int32x2_t *)v400.i8 = vmovn_s64(v400);
      int16x8_t v401 = (int16x8_t)vzip1q_s32((int32x4_t)v391, (int32x4_t)v400);
      int16x8_t v402 = (int16x8_t)vshlq_u32((uint32x4_t)v401, (uint32x4_t)vnegq_s32(v394));
      *(int16x4_t *)v401.i8 = vmovn_s32((int32x4_t)v401);
      *(int16x4_t *)v402.i8 = vmovn_s32((int32x4_t)v402);
      int16x8_t v403 = vaddq_s16((int16x8_t)vandq_s8(v398, v282), v399);
      int8x16_t v404 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v398.i8, 0);
      int8x16_t v405 = (int8x16_t)vsubq_s16(v403, (int16x8_t)vandq_s8(v404, v282));
      int8x16_t v406 = (int8x16_t)vsubq_s16(vshlq_s16(v392, vaddq_s16((int16x8_t)v278, v380)), (int16x8_t)vandq_s8(v404, v281));
      int8x16_t v407 = (int8x16_t)vsubq_s16(vshlq_s16(v393, vaddq_s16((int16x8_t)v277, v380)), (int16x8_t)vandq_s8(v404, v279));
      int8x16_t v408 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v401, v402), v396), v395), (int16x8_t)vandq_s8(v404, v275));
      v409.i64[0] = 0x1000100010001;
      v409.i64[1] = 0x1000100010001;
      if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v259 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v409)))
      {
        int8x16_t v410 = v405;
        v410.i16[0] = v405.i16[7];
        v410.i16[7] = v405.i16[0];
        int8x16_t v411 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v259 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
        int8x16_t v412 = vbslq_s8(v411, v410, v405);
        int8x16_t v413 = (int8x16_t)vaddq_s16((int16x8_t)v412, (int16x8_t)vandq_s8(vqtbl1q_s8(v412, (int8x16_t)xmmword_242EA7480), v411));
        int8x16_t v405 = (int8x16_t)vaddq_s16((int16x8_t)v413, (int16x8_t)vandq_s8(vqtbl1q_s8(v413, (int8x16_t)xmmword_242EA7490), v411));
        int8x16_t v414 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v406, (int8x16_t)xmmword_242EA74A0), v411), (int16x8_t)v406);
        int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA74B0), v411), (int16x8_t)v414);
        int8x16_t v415 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA74C0), v411), (int16x8_t)v407);
        int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v415, (int8x16_t)xmmword_242EA74D0), v411), (int16x8_t)v415);
        int8x16_t v416 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA74E0), v411), (int16x8_t)v408);
        int8x16_t v408 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v416, (int8x16_t)xmmword_242EA74F0), v411), (int16x8_t)v416);
      }
      int32x4_t v417 = (int32x4_t)vshlq_n_s16(vaddq_s16(v397, (int16x8_t)v405), 6uLL);
      int32x4_t v418 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v406, v397), 6uLL);
      int32x4_t v419 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v407, v397), 6uLL);
      int32x4_t v420 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v408, v397), 6uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v417, v419);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v417, v419);
      int32x4_t v421 = (int32x4_t *)(a1 + 2 * a2);
      *int32x4_t v421 = vuzp1q_s32(v418, v420);
      *(int32x4_t *)((char *)v421 + a2) = vuzp2q_s32(v418, v420);
      break;
  }
  return v193;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressSubblock(uint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, int16x4_t a15)
{
  int32x4_t v16 = *(int32x4_t *)((char *)a3 + a4);
  __int16 v17 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v18 = *(int32x4_t *)((char *)v17 + a4);
  int8x16_t v19 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v16), 6uLL);
  int16x8_t v20 = vshrq_n_s16((int16x8_t)vzip1q_s32(*v17, v18), 6uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v16), 6uLL);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v19.i8, 0);
  int16x8_t v23 = vshrq_n_s16((int16x8_t)vzip2q_s32(*v17, v18), 6uLL);
  int16x8_t v24 = vshlq_n_s16(vsubq_s16(v20, (int16x8_t)v22), 6uLL);
  int16x8_t v25 = vshlq_n_s16(vsubq_s16(v23, (int16x8_t)v22), 6uLL);
  v26.i64[0] = 0x5000500050005;
  v26.i64[1] = 0x5000500050005;
  int8x16_t v27 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v19, (int16x8_t)v22), 6uLL), v26);
  int8x16_t v28 = (int8x16_t)vshlq_s16(v24, v26);
  int8x16_t v29 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, (int16x8_t)v22), 6uLL), v26);
  int16x8_t v30 = vshlq_s16(v25, v26);
  v24.i16[0] = vmaxvq_s16((int16x8_t)v27);
  v25.i16[0] = vminvq_s16((int16x8_t)v27);
  int16x8_t v31 = vdupq_lane_s16(*(int16x4_t *)v24.i8, 0);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
  v26.i64[0] = 0x8000800080008000;
  v26.i64[1] = 0x8000800080008000;
  int16x8_t v33 = vmaxq_s16(v31, v26);
  v34.i64[0] = 0x8000800080008000;
  v34.i64[1] = 0x8000800080008000;
  int16x8_t v35 = vminq_s16(v32, v34);
  int16x8_t v36 = vzip1q_s16(v31, v32);
  int8x16_t v37 = (int8x16_t)vceqzq_s16(v36);
  v38.i64[0] = 0x10001000100010;
  v38.i64[1] = 0x10001000100010;
  int16x8_t v39 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v36)), v37);
  v37.i16[0] = vmaxvq_s16((int16x8_t)v28);
  a15.i16[0] = vminvq_s16((int16x8_t)v28);
  int16x8_t v40 = vdupq_lane_s16(*(int16x4_t *)v37.i8, 0);
  int16x8_t v41 = vdupq_lane_s16(a15, 0);
  int16x8_t v42 = vpmaxq_s16(v39, v39);
  int16x8_t v43 = vmaxq_s16(v33, v40);
  int16x8_t v44 = vminq_s16(v35, v41);
  int16x8_t v45 = vzip1q_s16(v40, v41);
  int16x8_t v46 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v45)), (int8x16_t)vceqzq_s16(v45));
  int16x8_t v47 = vpmaxq_s16(v46, v46);
  v46.i16[0] = vmaxvq_s16((int16x8_t)v29);
  int16x8_t v48 = vdupq_lane_s16(*(int16x4_t *)v46.i8, 0);
  v41.i16[0] = vminvq_s16((int16x8_t)v29);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v41.i8, 0);
  int16x8_t v50 = vmaxq_s16(v43, v48);
  int16x8_t v51 = vminq_s16(v44, v49);
  int16x8_t v52 = vzip1q_s16(v48, v49);
  int16x8_t v53 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v52)), (int8x16_t)vceqzq_s16(v52));
  int16x8_t v54 = vpmaxq_s16(v53, v53);
  v53.i16[0] = vmaxvq_s16(v30);
  v15.i16[0] = vminvq_s16(v30);
  int16x8_t v55 = vdupq_lane_s16(*(int16x4_t *)v53.i8, 0);
  int16x8_t v56 = vdupq_lane_s16(v15, 0);
  int16x8_t v57 = vmaxq_s16(v50, v55);
  int16x8_t v58 = vminq_s16(v51, v56);
  int16x8_t v59 = vzip1q_s16(v55, v56);
  int16x8_t v60 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v59)), (int8x16_t)vceqzq_s16(v59));
  int16x8_t v61 = vpmaxq_s16(v60, v60);
  int8x16_t v62 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v47), vmaxq_s16(v54, v61));
  int16x8_t v63 = vclzq_s16(vsubq_s16(v57, v58));
  int8x16_t v64 = (int8x16_t)vsubq_s16(v38, v63);
  int8x16_t v65 = (int8x16_t)vcgtq_s16((int16x8_t)v62, (int16x8_t)v64);
  int8x16_t v66 = vbslq_s8(v65, v64, v62);
  if (vmaxvq_s16((int16x8_t)v66))
  {
    v67.i64[0] = -1;
    v67.i64[1] = -1;
    v68.i64[0] = 0xF000F000F000FLL;
    v68.i64[1] = 0xF000F000F000FLL;
    int8x16_t v69 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v67, vsubq_s16(v68, v63)), v58), v65);
    v70.i64[0] = 0x8000800080008;
    v70.i64[1] = 0x8000800080008;
    v68.i64[0] = 0x3000300030003;
    v68.i64[1] = 0x3000300030003;
    int8x16_t v71 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v66), (int8x16_t)v68);
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v42), v68), (int16x8_t)0);
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v47), v68), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v54), v68), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v61), v68), (int16x8_t)0);
    int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v66, v72);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v66, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v66, v74);
    int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v66, v75);
    v68.i64[0] = 0x4000400040004;
    v68.i64[1] = 0x4000400040004;
    int8x16_t v80 = vbicq_s8((int8x16_t)v68, (int8x16_t)vceqq_s16(vaddq_s16(v75, v74), vnegq_s16(vaddq_s16(v72, v73))));
    int8x16_t v81 = vorrq_s8(vorrq_s8(v71, vandq_s8(v65, v70)), v80);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v291 = (int8x16_t)v30;
      int16x8_t v82 = vsubq_s16((int16x8_t)v19, (int16x8_t)vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7520));
      int8x16_t v83 = (int8x16_t)v20;
      v83.i16[7] = v19.i16[7];
      int16x8_t v84 = vsubq_s16(v20, (int16x8_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_242EA7530));
      int8x16_t v85 = (int8x16_t)v21;
      v85.i16[7] = v19.i16[7];
      int16x8_t v86 = vsubq_s16(v21, (int16x8_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7540));
      int8x16_t v87 = (int8x16_t)v23;
      v87.i16[7] = v19.i16[7];
      int16x8_t v88 = v82;
      v88.i16[0] = v82.i16[7];
      int16x8_t v89 = vsubq_s16(v23, (int16x8_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7550));
      v88.i16[7] = v82.i16[0];
      int16x8_t v90 = vshlq_n_s16(v88, 6uLL);
      int16x8_t v91 = vshlq_n_s16(v86, 6uLL);
      int16x8_t v92 = vshlq_n_s16(v89, 6uLL);
      v93.i64[0] = 0x5000500050005;
      v93.i64[1] = 0x5000500050005;
      int8x16_t v94 = (int8x16_t)vshlq_s16(v90, v93);
      int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(v84, 6uLL), v93);
      int8x16_t v96 = (int8x16_t)vshlq_s16(v91, v93);
      int8x16_t v97 = (int8x16_t)vshlq_s16(v92, v93);
      v91.i16[0] = vmaxvq_s16((int16x8_t)v94);
      v92.i16[0] = vminvq_s16((int16x8_t)v94);
      int16x8_t v98 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v99 = vdupq_lane_s16(*(int16x4_t *)v92.i8, 0);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v100 = vmaxq_s16(v98, v93);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v101 = vminq_s16(v99, v93);
      int16x8_t v102 = vzip1q_s16(v98, v99);
      int8x16_t v103 = (int8x16_t)vceqzq_s16(v102);
      v104.i64[0] = 0x10001000100010;
      v104.i64[1] = 0x10001000100010;
      int16x8_t v105 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v102)), v103);
      int16x8_t v106 = vpmaxq_s16(v105, v105);
      v105.i16[0] = vmaxvq_s16((int16x8_t)v95);
      v103.i16[0] = vminvq_s16((int16x8_t)v95);
      int16x8_t v107 = vdupq_lane_s16(*(int16x4_t *)v105.i8, 0);
      int16x8_t v108 = vdupq_lane_s16(*(int16x4_t *)v103.i8, 0);
      int16x8_t v109 = vmaxq_s16(v100, v107);
      int16x8_t v110 = vminq_s16(v101, v108);
      int16x8_t v111 = vzip1q_s16(v107, v108);
      int8x16_t v112 = (int8x16_t)vceqzq_s16(v111);
      int16x8_t v113 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v111)), v112);
      int16x8_t v114 = vpmaxq_s16(v113, v113);
      v113.i16[0] = vmaxvq_s16((int16x8_t)v96);
      v112.i16[0] = vminvq_s16((int16x8_t)v96);
      int16x8_t v115 = vdupq_lane_s16(*(int16x4_t *)v113.i8, 0);
      int16x8_t v116 = vdupq_lane_s16(*(int16x4_t *)v112.i8, 0);
      int16x8_t v117 = vmaxq_s16(v109, v115);
      int16x8_t v118 = vminq_s16(v110, v116);
      int16x8_t v119 = vzip1q_s16(v115, v116);
      int8x16_t v120 = (int8x16_t)vceqzq_s16(v119);
      int16x8_t v121 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v119)), v120);
      int16x8_t v122 = vpmaxq_s16(v121, v121);
      v121.i16[0] = vmaxvq_s16((int16x8_t)v97);
      v120.i16[0] = vminvq_s16((int16x8_t)v97);
      int16x8_t v123 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      int16x8_t v124 = vdupq_lane_s16(*(int16x4_t *)v120.i8, 0);
      int16x8_t v125 = vmaxq_s16(v117, v123);
      int16x8_t v126 = vminq_s16(v118, v124);
      int16x8_t v127 = vzip1q_s16(v123, v124);
      int16x8_t v128 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v104, vclsq_s16(v127)), (int8x16_t)vceqzq_s16(v127));
      int16x8_t v129 = vpmaxq_s16(v128, v128);
      int8x16_t v130 = (int8x16_t)vmaxq_s16(vmaxq_s16(v106, v114), vmaxq_s16(v122, v129));
      int16x8_t v131 = vclzq_s16(vsubq_s16(v125, v126));
      int8x16_t v132 = (int8x16_t)vsubq_s16(v104, v131);
      int8x16_t v133 = (int8x16_t)vcgtq_s16((int16x8_t)v130, (int16x8_t)v132);
      int8x16_t v134 = vbslq_s8(v133, v132, v130);
      int16x8_t v135 = vsubq_s16((int16x8_t)v134, v106);
      v106.i64[0] = 0x3000300030003;
      v106.i64[1] = 0x3000300030003;
      int16x8_t v136 = vmaxq_s16(vminq_s16(v135, v106), (int16x8_t)0);
      int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v114), v106), (int16x8_t)0);
      int8x16_t v138 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v122), v106), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v134, v129), v106), (int16x8_t)0);
      int8x16_t v140 = (int8x16_t)vsubq_s16((int16x8_t)v134, v136);
      int8x16_t v141 = (int8x16_t)vsubq_s16((int16x8_t)v134, v137);
      int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v134, (int16x8_t)v138);
      int8x16_t v143 = (int8x16_t)vsubq_s16((int16x8_t)v134, v139);
      int8x16_t v144 = (int8x16_t)vceqq_s16(vaddq_s16(v139, (int16x8_t)v138), vnegq_s16(vaddq_s16(v136, v137)));
      v138.i64[0] = 0x4000400040004;
      v138.i64[1] = 0x4000400040004;
      int8x16_t v145 = vbicq_s8(v138, v144);
      int16x8_t v146 = (int16x8_t)vandq_s8(v132, v133);
      v132.i64[0] = 0x7000700070007;
      v132.i64[1] = 0x7000700070007;
      int16x8_t v147 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v64, v65), vaddq_s16((int16x8_t)v80, (int16x8_t)v80)), (int16x8_t)v76, (int16x8_t)v132), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v78, (int16x8_t)v77), (int16x8_t)v79), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16(v146, vaddq_s16((int16x8_t)v145, (int16x8_t)v145)), (int16x8_t)v140, (int16x8_t)v132), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v142, (int16x8_t)v141), (int16x8_t)v143), 3uLL))),
               0);
      if (vaddvq_s16(v147))
      {
        v148.i64[0] = 0x2000200020002;
        v148.i64[1] = 0x2000200020002;
        int8x16_t v149 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v134), v148);
        v148.i64[0] = 0x9000900090009;
        v148.i64[1] = 0x9000900090009;
        v150.i64[0] = -1;
        v150.i64[1] = -1;
        int8x16_t v151 = vorrq_s8(vorrq_s8(v149, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v133, v148), (int16x8_t)vmvnq_s8(v133))), v145);
        v148.i64[0] = 0xF000F000F000FLL;
        v148.i64[1] = 0xF000F000F000FLL;
        int8x16_t v152 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v150, vsubq_s16((int16x8_t)v148, v131)), v126), v133);
        int8x16_t v153 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v147, 0xFuLL));
        v22.i16[0] = vbslq_s8(v153, vextq_s8(v19, v19, 0xEuLL), v22).u16[0];
        int8x16_t v27 = vbslq_s8(v153, v94, v27);
        int8x16_t v28 = vbslq_s8(v153, v95, v28);
        int8x16_t v29 = vbslq_s8(v153, v96, v29);
        int16x8_t v30 = (int16x8_t)vbslq_s8(v153, v97, v291);
        int8x16_t v76 = vbslq_s8(v153, v140, v76);
        int8x16_t v77 = vbslq_s8(v153, v141, v77);
        int8x16_t v78 = vbslq_s8(v153, v142, v78);
        int8x16_t v79 = vbslq_s8(v153, v143, v79);
        int8x16_t v69 = vbslq_s8(v153, v152, v69);
        int8x16_t v66 = vbslq_s8(v153, v134, v66);
        int8x16_t v81 = vbslq_s8(v153, v151, v81);
      }
      else
      {
        int16x8_t v30 = (int16x8_t)v291;
      }
    }
    v155.i64[0] = 0x8000800080008;
    v155.i64[1] = 0x8000800080008;
    int16x8_t v156 = (int16x8_t)vandq_s8(v81, v155);
    v157.i64[0] = 0x3000300030003;
    v157.i64[1] = 0x3000300030003;
    v158.i64[0] = 0x2000200020002;
    v158.i64[1] = 0x2000200020002;
    int8x16_t v159 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v81, v157), v158);
    v158.i64[0] = 0x10001000100010;
    v158.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(vbicq_s8(v66, (int8x16_t)vceqzq_s16(v156)).u16[0]
                                    + ((2 * v81.i16[0]) & 8)
                                    + vandq_s8(v159, (int8x16_t)v158).u16[0]
                                    - v76.i16[0]
                                    + 8 * v76.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v78, vaddq_s16((int16x8_t)v77, (int16x8_t)v79)).u16[0])
                          - 145) <= 0xFFFFFFFFFFFFFF57)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint16x8_t *)a3, a4, a5, a6, a7);
      return 20;
    }
    else
    {
      unint64_t v160 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v161 = 8 * (a1 & 7);
      if (v161) {
        uint64_t v162 = *v160 & ~(-1 << v161);
      }
      else {
        uint64_t v162 = 0;
      }
      if (v66.i16[0]) {
        uint64_t v163 = (16 * v66.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v163 = 0;
      }
      *a2 = v81.i8[0] << 6;
      unint64_t v164 = (v163 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v22.i16[0] & 0x3FF) << 8) | v81.i8[0] & 0xF) >> 2;
      unint64_t v165 = (v164 << v161) | v162;
      if (v161 >= 0x30)
      {
        *unint64_t v160 = v165;
        unint64_t v165 = v164 >> (-8 * (a1 & 7u));
      }
      unint64_t v166 = v161 + 16;
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v76);
      int8x16_t v168 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v169 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v78);
      int8x16_t v170 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v79);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      *(uint8x8_t *)v168.i8 = vqmovn_u16((uint16x8_t)v168);
      *(uint8x8_t *)v169.i8 = vqmovn_u16((uint16x8_t)v169);
      *(uint8x8_t *)v170.i8 = vqmovn_u16((uint16x8_t)v170);
      v167.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v167, v168), (int16x8_t)vzip1q_s8(v169, v170)).u32[0];
      int8x16_t v171 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v81.i8, (int8x8_t)0x4000400040004))));
      v172.i64[0] = 0x202020202020202;
      v172.i64[1] = 0x202020202020202;
      int8x16_t v173 = vandq_s8(v171, v172);
      v172.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v172.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v169.i64[0] = -1;
      v169.i64[1] = -1;
      uint8x16_t v174 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v169, (uint8x16_t)vorrq_s8(v173, v172)), (int8x16_t)v167.u32[0]);
      int16x8_t v175 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v173.i8);
      uint16x8_t v176 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v174.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v175)), (int16x8_t)vmovl_high_u8(v174));
      uint16x8_t v177 = (uint16x8_t)vpaddq_s16(v175, (int16x8_t)vmovl_high_u8((uint8x16_t)v173));
      int32x4_t v178 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v177.i8);
      int32x4_t v179 = (int32x4_t)vmovl_high_u16(v177);
      int32x4_t v180 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v176.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v178)), (int32x4_t)vshlq_u32(vmovl_high_u16(v176), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v179)));
      int32x4_t v181 = vpaddq_s32(v178, v179);
      v182.i64[0] = v180.u32[0];
      v182.i64[1] = v180.u32[1];
      uint64x2_t v183 = (uint64x2_t)v182;
      v182.i64[0] = v180.u32[2];
      v182.i64[1] = v180.u32[3];
      uint64x2_t v184 = (uint64x2_t)v182;
      v182.i64[0] = v181.u32[0];
      v182.i64[1] = v181.u32[1];
      int64x2_t v185 = v182;
      v182.i64[0] = v181.u32[2];
      v182.i64[1] = v181.u32[3];
      int64x2_t v186 = vpaddq_s64((int64x2_t)vshlq_u64(v183, (uint64x2_t)vzip1q_s64((int64x2_t)0, v185)), (int64x2_t)vshlq_u64(v184, (uint64x2_t)vzip1q_s64((int64x2_t)0, v182)));
      int64x2_t v187 = vpaddq_s64(v185, v182);
      uint64_t v188 = (v161 + 16) & 0x38;
      unint64_t v189 = (v186.i64[0] << v188) | v165;
      if ((unint64_t)(v187.i64[0] + v188) >= 0x40)
      {
        *(void *)((char *)v160 + ((v166 >> 3) & 8)) = v189;
        unint64_t v189 = (unint64_t)v186.i64[0] >> -(char)v188;
        if (!v188) {
          unint64_t v189 = 0;
        }
      }
      int8x16_t v190 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v76);
      unint64_t v191 = v187.i64[0] + v166;
      unint64_t v192 = v189 | (v186.i64[1] << v191);
      if ((v191 & 0x3F) + v187.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v191 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v192;
        unint64_t v192 = (unint64_t)v186.i64[1] >> -(v191 & 0x3F);
        if ((v191 & 0x3F) == 0) {
          unint64_t v192 = 0;
        }
      }
      int16x8_t v193 = (int16x8_t)vandq_s8(v69, v190);
      unint64_t v194 = v191 + v187.i64[1];
      v195.i64[0] = -1;
      v195.i64[1] = -1;
      int16x8_t v196 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v156, v156), (int8x16_t)0, 0xEuLL), v66);
      v197.i64[0] = 0xF000F000F000FLL;
      v197.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v198 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v195, (uint16x8_t)vaddq_s16(v196, v197)), v69);
      int32x4_t v199 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v196.i8);
      int32x4_t v200 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v198.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v199)), (int32x4_t)vmovl_high_u16(v198));
      int32x4_t v201 = vpaddq_s32(v199, (int32x4_t)vmovl_high_u16((uint16x8_t)v196));
      v202.i64[0] = v200.u32[0];
      v202.i64[1] = v200.u32[1];
      uint64x2_t v203 = (uint64x2_t)v202;
      v202.i64[0] = v200.u32[2];
      v202.i64[1] = v200.u32[3];
      uint64x2_t v204 = (uint64x2_t)v202;
      v202.i64[0] = v201.u32[0];
      v202.i64[1] = v201.u32[1];
      int64x2_t v205 = v202;
      v202.i64[0] = v201.u32[2];
      v202.i64[1] = v201.u32[3];
      int64x2_t v206 = vpaddq_s64((int64x2_t)vshlq_u64(v203, (uint64x2_t)vzip1q_s64((int64x2_t)0, v205)), (int64x2_t)vshlq_u64(v204, (uint64x2_t)vzip1q_s64((int64x2_t)0, v202)));
      int64x2_t v207 = vpaddq_s64(v205, v202);
      unint64_t v208 = (v206.i64[0] << v194) | v192;
      if (v207.i64[0] + (v194 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v194 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v208;
        unint64_t v208 = (unint64_t)v206.i64[0] >> -(v194 & 0x3F);
        if ((v194 & 0x3F) == 0) {
          unint64_t v208 = 0;
        }
      }
      int8x16_t v209 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v210 = (int8x16_t)vaddq_s16(v193, (int16x8_t)v27);
      unint64_t v211 = v207.i64[0] + v194;
      unint64_t v212 = v208 | (v206.i64[1] << v211);
      if ((v211 & 0x3F) + v207.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v211 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v212;
        unint64_t v212 = (unint64_t)v206.i64[1] >> -(v211 & 0x3F);
        if ((v211 & 0x3F) == 0) {
          unint64_t v212 = 0;
        }
      }
      int16x8_t v213 = (int16x8_t)vandq_s8(v69, v209);
      unint64_t v214 = v211 + v207.i64[1];
      int16x8_t v215 = (int16x8_t)vextq_s8((int8x16_t)0, v76, 0xEuLL);
      v216.i64[0] = 0xF000F000F000FLL;
      v216.i64[1] = 0xF000F000F000FLL;
      v217.i64[0] = -1;
      v217.i64[1] = -1;
      uint16x8_t v218 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v217, (uint16x8_t)vaddq_s16(v215, v216)), v210);
      int32x4_t v219 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v215.i8);
      int32x4_t v220 = (int32x4_t)vmovl_high_u16((uint16x8_t)v215);
      int32x4_t v221 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v218.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v219)), (int32x4_t)vshlq_u32(vmovl_high_u16(v218), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v220)));
      int32x4_t v222 = vpaddq_s32(v219, v220);
      v223.i64[0] = v221.u32[0];
      v223.i64[1] = v221.u32[1];
      uint64x2_t v224 = (uint64x2_t)v223;
      v223.i64[0] = v221.u32[2];
      v223.i64[1] = v221.u32[3];
      uint64x2_t v225 = (uint64x2_t)v223;
      v223.i64[0] = v222.u32[0];
      v223.i64[1] = v222.u32[1];
      int64x2_t v226 = v223;
      v223.i64[0] = v222.u32[2];
      v223.i64[1] = v222.u32[3];
      int64x2_t v227 = vpaddq_s64((int64x2_t)vshlq_u64(v224, (uint64x2_t)vzip1q_s64((int64x2_t)0, v226)), (int64x2_t)vshlq_u64(v225, (uint64x2_t)vzip1q_s64((int64x2_t)0, v223)));
      int64x2_t v228 = vpaddq_s64(v226, v223);
      unint64_t v229 = (v227.i64[0] << v214) | v212;
      if (v228.i64[0] + (v214 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v214 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v229;
        unint64_t v229 = (unint64_t)v227.i64[0] >> -(v214 & 0x3F);
        if ((v214 & 0x3F) == 0) {
          unint64_t v229 = 0;
        }
      }
      int8x16_t v230 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v78);
      int8x16_t v231 = (int8x16_t)vaddq_s16((int16x8_t)v28, v213);
      unint64_t v232 = v228.i64[0] + v214;
      unint64_t v233 = v229 | (v227.i64[1] << v232);
      if ((v232 & 0x3F) + v228.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v232 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v233;
        unint64_t v233 = (unint64_t)v227.i64[1] >> -(v232 & 0x3F);
        if ((v232 & 0x3F) == 0) {
          unint64_t v233 = 0;
        }
      }
      int16x8_t v234 = (int16x8_t)vandq_s8(v69, v230);
      unint64_t v235 = v232 + v228.i64[1];
      v236.i64[0] = 0xF000F000F000FLL;
      v236.i64[1] = 0xF000F000F000FLL;
      v237.i64[0] = -1;
      v237.i64[1] = -1;
      uint16x8_t v238 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v237, (uint16x8_t)vaddq_s16((int16x8_t)v77, v236)), v231);
      int32x4_t v239 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v240 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v241 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v238.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v239)), (int32x4_t)vshlq_u32(vmovl_high_u16(v238), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v240)));
      int32x4_t v242 = vpaddq_s32(v239, v240);
      v243.i64[0] = v241.u32[0];
      v243.i64[1] = v241.u32[1];
      uint64x2_t v244 = (uint64x2_t)v243;
      v243.i64[0] = v241.u32[2];
      v243.i64[1] = v241.u32[3];
      uint64x2_t v245 = (uint64x2_t)v243;
      v243.i64[0] = v242.u32[0];
      v243.i64[1] = v242.u32[1];
      int64x2_t v246 = v243;
      v243.i64[0] = v242.u32[2];
      v243.i64[1] = v242.u32[3];
      int64x2_t v247 = vpaddq_s64((int64x2_t)vshlq_u64(v244, (uint64x2_t)vzip1q_s64((int64x2_t)0, v246)), (int64x2_t)vshlq_u64(v245, (uint64x2_t)vzip1q_s64((int64x2_t)0, v243)));
      int64x2_t v248 = vpaddq_s64(v246, v243);
      unint64_t v249 = (v247.i64[0] << v235) | v233;
      if (v248.i64[0] + (v235 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v235 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v249;
        unint64_t v249 = (unint64_t)v247.i64[0] >> -(v235 & 0x3F);
        if ((v235 & 0x3F) == 0) {
          unint64_t v249 = 0;
        }
      }
      int8x16_t v250 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v79);
      int8x16_t v251 = (int8x16_t)vaddq_s16((int16x8_t)v29, v234);
      unint64_t v252 = v248.i64[0] + v235;
      unint64_t v253 = v249 | (v247.i64[1] << v252);
      if ((v252 & 0x3F) + v248.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v252 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v253;
        unint64_t v253 = (unint64_t)v247.i64[1] >> -(v252 & 0x3F);
        if ((v252 & 0x3F) == 0) {
          unint64_t v253 = 0;
        }
      }
      int16x8_t v254 = (int16x8_t)vandq_s8(v69, v250);
      unint64_t v255 = v252 + v248.i64[1];
      v256.i64[0] = 0xF000F000F000FLL;
      v256.i64[1] = 0xF000F000F000FLL;
      v257.i64[0] = -1;
      v257.i64[1] = -1;
      uint16x8_t v258 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v257, (uint16x8_t)vaddq_s16((int16x8_t)v78, v256)), v251);
      int32x4_t v259 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v260 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v261 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v258.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v259)), (int32x4_t)vshlq_u32(vmovl_high_u16(v258), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v260)));
      int32x4_t v262 = vpaddq_s32(v259, v260);
      v263.i64[0] = v261.u32[0];
      v263.i64[1] = v261.u32[1];
      uint64x2_t v264 = (uint64x2_t)v263;
      v263.i64[0] = v261.u32[2];
      v263.i64[1] = v261.u32[3];
      uint64x2_t v265 = (uint64x2_t)v263;
      v263.i64[0] = v262.u32[0];
      v263.i64[1] = v262.u32[1];
      int64x2_t v266 = v263;
      v263.i64[0] = v262.u32[2];
      v263.i64[1] = v262.u32[3];
      int64x2_t v267 = vpaddq_s64((int64x2_t)vshlq_u64(v264, (uint64x2_t)vzip1q_s64((int64x2_t)0, v266)), (int64x2_t)vshlq_u64(v265, (uint64x2_t)vzip1q_s64((int64x2_t)0, v263)));
      int64x2_t v268 = vpaddq_s64(v266, v263);
      unint64_t v269 = (v267.i64[0] << v255) | v253;
      if (v268.i64[0] + (v255 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v160 + ((v255 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v269;
        unint64_t v269 = (unint64_t)v267.i64[0] >> -(v255 & 0x3F);
        if ((v255 & 0x3F) == 0) {
          unint64_t v269 = 0;
        }
      }
      int8x16_t v270 = (int8x16_t)vaddq_s16(v30, v254);
      unint64_t v271 = v268.i64[0] + v255;
      unint64_t v272 = v269 | (v267.i64[1] << v271);
      if ((v271 & 0x3F) + v268.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v271 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v272;
        unint64_t v272 = (unint64_t)v267.i64[1] >> -(v271 & 0x3F);
        if ((v271 & 0x3F) == 0) {
          unint64_t v272 = 0;
        }
      }
      unint64_t v273 = v271 + v268.i64[1];
      v274.i64[0] = 0xF000F000F000FLL;
      v274.i64[1] = 0xF000F000F000FLL;
      v275.i64[0] = -1;
      v275.i64[1] = -1;
      uint16x8_t v276 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v275, (uint16x8_t)vaddq_s16((int16x8_t)v79, v274)), v270);
      int32x4_t v277 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v278 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v279 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v276.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)), (int32x4_t)vshlq_u32(vmovl_high_u16(v276), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)));
      int32x4_t v280 = vpaddq_s32(v277, v278);
      v281.i64[0] = v279.u32[0];
      v281.i64[1] = v279.u32[1];
      uint64x2_t v282 = (uint64x2_t)v281;
      v281.i64[0] = v279.u32[2];
      v281.i64[1] = v279.u32[3];
      uint64x2_t v283 = (uint64x2_t)v281;
      v281.i64[0] = v280.u32[0];
      v281.i64[1] = v280.u32[1];
      int64x2_t v284 = v281;
      v281.i64[0] = v280.u32[2];
      v281.i64[1] = v280.u32[3];
      int64x2_t v285 = vpaddq_s64((int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)), (int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)));
      int64x2_t v286 = vpaddq_s64(v284, v281);
      unint64_t v287 = (v285.i64[0] << v273) | v272;
      if (v286.i64[0] + (v273 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v160 + ((v273 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
        if ((v273 & 0x3F) != 0) {
          unint64_t v287 = (unint64_t)v285.i64[0] >> -(v273 & 0x3F);
        }
        else {
          unint64_t v287 = 0;
        }
      }
      unint64_t v288 = v286.i64[0] + v273;
      unint64_t v289 = v287 | (v285.i64[1] << v288);
      if ((v288 & 0x3F) + v286.i64[1] >= 0x40)
      {
        *(void *)((char *)v160 + ((v288 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v289;
        unint64_t v289 = (unint64_t)v285.i64[1] >> -(v288 & 0x3F);
        if ((v288 & 0x3F) == 0) {
          unint64_t v289 = 0;
        }
      }
      unint64_t v290 = v288 + v286.i64[1];
      if ((v290 & 0x3F) != 0) {
        *(void *)((char *)v160 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v289;
      }
      unint64_t result = (v290 - v161 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 6;
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v11 = a6;
  if (a5 >= 8)
  {
    uint64_t v14 = 0;
    int16x4_t v15 = &v45;
    int32x4_t v16 = (char *)&v43 + ((8 * a5) & 0x7C0);
    do
    {
      __int16 v17 = v15;
      int32x4_t v18 = a3;
      uint64_t v19 = a5 & 0xF8;
      do
      {
        uint16x8_t v20 = *v18++;
        uint16x8_t v21 = vshrq_n_u16(v20, 6uLL);
        *((_WORD *)v17 - 16) = v21.i16[0];
        *((_WORD *)v17 - 12) = v21.i16[1];
        *((_WORD *)v17 - 8) = v21.i16[2];
        *((_WORD *)v17 - 4) = v21.i16[3];
        *(_WORD *)__int16 v17 = v21.i16[4];
        *((_WORD *)v17 + 4) = v21.i16[5];
        *((_WORD *)v17 + 8) = v21.i16[6];
        *((_WORD *)v17 + 12) = v21.i16[7];
        v17 += 4;
        v19 -= 8;
      }
      while (v19);
      if ((a5 & 0xF8) != (unint64_t)a5)
      {
        int8x16_t v22 = v16;
        uint64_t v23 = a5 & 0xF8;
        do
        {
          _WORD *v22 = (unsigned __int16)a3->i16[v23] >> 6;
          v22 += 4;
          ++v23;
        }
        while (a5 != v23);
      }
      ++v14;
      a3 = (uint16x8_t *)((char *)a3 + a4);
      int16x4_t v15 = (long long *)((char *)v15 + 2);
      v16 += 2;
    }
    while (v14 != a6);
  }
  else
  {
    int v12 = &a3->i16[3];
    int v13 = (_WORD *)&v44 + 4;
    do
    {
      *(v13 - 12) = (unsigned __int16)*(v12 - 3) >> 6;
      if (a5 != 1)
      {
        *(v13 - 8) = (unsigned __int16)*(v12 - 2) >> 6;
        if (a5 != 2)
        {
          *(v13 - 4) = (unsigned __int16)*(v12 - 1) >> 6;
          if (a5 != 3)
          {
            *int v13 = (unsigned __int16)*v12 >> 6;
            if (a5 != 4)
            {
              v13[4] = (unsigned __int16)v12[1] >> 6;
              if (a5 != 5)
              {
                v13[8] = (unsigned __int16)v12[2] >> 6;
                if (a5 != 6) {
                  v13[12] = (unsigned __int16)v12[3] >> 6;
                }
              }
            }
          }
        }
      }
      int v12 = (__int16 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  v38.i32[0] = (unsigned __int16)v43;
  v38.i32[1] = WORD4(v43);
  v38.i32[2] = WORD1(v43);
  v38.i32[3] = WORD5(v43);
  int v39 = (unsigned __int16)v44;
  int v40 = WORD4(v44);
  if (a5 >= 4) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = a5;
  }
  if (a5 >= 4) {
    unsigned int v25 = a5 - 4;
  }
  else {
    unsigned int v25 = 0;
  }
  int v41 = WORD1(v44);
  int v42 = WORD5(v44);
  if (a6 >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = a6;
  }
  if (a6 >= 2) {
    unsigned int v27 = a6 - 2;
  }
  else {
    unsigned int v27 = 0;
  }
  char v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v38, a7, v24, v26);
  v38.i32[0] = WORD2(v43);
  v38.i32[1] = WORD6(v43);
  v38.i32[2] = WORD3(v43);
  v38.i32[3] = HIWORD(v43);
  int v39 = WORD2(v44);
  int v40 = WORD6(v44);
  int v41 = WORD3(v44);
  int v42 = HIWORD(v44);
  if (a6 >= 4) {
    unsigned int v29 = 2;
  }
  else {
    unsigned int v29 = v27;
  }
  int v30 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 5, &v38, a7, v24, v29);
  v38.i32[0] = (unsigned __int16)v45;
  v38.i32[1] = WORD4(v45);
  v38.i32[2] = WORD1(v45);
  v38.i32[3] = WORD5(v45);
  int v39 = (unsigned __int16)v46;
  int v40 = WORD4(v46);
  if (a5 >= 8) {
    unsigned int v31 = 4;
  }
  else {
    unsigned int v31 = v25;
  }
  int v41 = WORD1(v46);
  int v42 = WORD5(v46);
  int v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 10, &v38, a7, v31, v26);
  v38.i32[0] = WORD2(v45);
  v38.i32[1] = WORD6(v45);
  v38.i32[2] = WORD3(v45);
  v38.i32[3] = HIWORD(v45);
  int v39 = WORD2(v46);
  int v40 = WORD6(v46);
  int v41 = WORD3(v46);
  int v42 = HIWORD(v46);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 15, &v38, a7, v31, v29);
  if (v32) {
    char v34 = 4;
  }
  else {
    char v34 = 0;
  }
  if (v30) {
    char v35 = 2;
  }
  else {
    char v35 = 0;
  }
  if (result) {
    char v36 = -8;
  }
  else {
    char v36 = -16;
  }
  *a2 = v36 | v34 | v28 | v35;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(uint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v124 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v9.i64[0] = 0x20000000200;
    v9.i64[1] = 0x20000000200;
    int8x16_t v10 = veorq_s8(*a2, v9);
    v11.i64[0] = 0x100000001;
    v11.i64[1] = 0x100000001;
    int8x16_t v7 = vbicq_s8(v10, (int8x16_t)vceqq_s32((int32x4_t)v10, v11));
    int8x16_t v12 = veorq_s8(a2[1], v9);
    int8x16_t v8 = vbicq_s8(v12, (int8x16_t)vceqq_s32((int32x4_t)v12, v11));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v6.i64[0] = 0x20000000200;
    v6.i64[1] = 0x20000000200;
    int8x16_t v7 = veorq_s8(*a2, v6);
    int8x16_t v8 = veorq_s8(a2[1], v6);
LABEL_5:
    int8x16_t v122 = v7;
    int8x16_t v123 = v8;
    unsigned int v13 = v7.i32[0];
    goto LABEL_7;
  }
  int8x16_t v14 = a2[1];
  int8x16_t v122 = *a2;
  int8x16_t v123 = v14;
  unsigned int v13 = v122.i32[0];
LABEL_7:
  if (a5) {
    BOOL v15 = a4 >= 2;
  }
  else {
    BOOL v15 = 0;
  }
  int v16 = !v15;
  if (v15)
  {
    unsigned int v18 = v122.u32[1];
    unsigned int v17 = v122.i32[1] < v13;
    if (v122.i32[1] >= v13) {
      unsigned int v19 = v13;
    }
    else {
      unsigned int v19 = v122.u32[1];
    }
    if (v13 > v122.i32[1]) {
      unsigned int v18 = v13;
    }
  }
  else
  {
    unsigned int v17 = 0;
    unsigned int v18 = v13;
    unsigned int v19 = v13;
  }
  BOOL v20 = a5 < 2 || a4 == 0;
  int v21 = v20;
  if (!v20)
  {
    if (v122.i32[2] < v19)
    {
      unsigned int v17 = 2;
      unsigned int v19 = v122.u32[2];
    }
    if (v18 <= v122.i32[2]) {
      unsigned int v18 = v122.u32[2];
    }
  }
  BOOL v22 = a5 >= 2 && a4 >= 2;
  int v23 = !v22;
  if (v22)
  {
    if (v122.i32[3] < v19)
    {
      unsigned int v17 = 3;
      unsigned int v19 = v122.u32[3];
    }
    if (v18 <= v122.i32[3]) {
      unsigned int v18 = v122.u32[3];
    }
  }
  if (a5) {
    BOOL v24 = a4 >= 3;
  }
  else {
    BOOL v24 = 0;
  }
  int v25 = !v24;
  if (v24)
  {
    if (v123.i32[0] < v19)
    {
      unsigned int v17 = 4;
      unsigned int v19 = v123.i32[0];
    }
    if (v18 <= v123.i32[0]) {
      unsigned int v18 = v123.i32[0];
    }
  }
  if (a5) {
    BOOL v26 = a4 >= 4;
  }
  else {
    BOOL v26 = 0;
  }
  int v27 = !v26;
  if (v26)
  {
    if (v123.i32[1] < v19)
    {
      unsigned int v17 = 5;
      unsigned int v19 = v123.u32[1];
    }
    if (v18 <= v123.i32[1]) {
      unsigned int v18 = v123.u32[1];
    }
  }
  BOOL v28 = a5 >= 2 && a4 >= 3;
  int v29 = !v28;
  if (v28)
  {
    if (v123.i32[2] < v19)
    {
      unsigned int v17 = 6;
      unsigned int v19 = v123.u32[2];
    }
    if (v18 <= v123.i32[2]) {
      unsigned int v18 = v123.u32[2];
    }
  }
  BOOL v30 = a5 >= 2 && a4 >= 4;
  int v31 = !v30;
  if (v30)
  {
    if (v123.i32[3] < v19)
    {
      unsigned int v17 = 7;
      unsigned int v19 = v123.u32[3];
    }
    if (v18 <= v123.i32[3]) {
      unsigned int v18 = v123.u32[3];
    }
  }
  unsigned int v32 = v18 - v19;
  unsigned int v33 = __clz(v18 - v19);
  int v34 = 32 - v33;
  if ((int)(32 - v33) <= 1) {
    int v34 = 1;
  }
  unsigned int v35 = v34 - 1;
  if (v33 - 29 < 3) {
    unsigned int v35 = 2;
  }
  if (v18) {
    BOOL v36 = v18 == 1023;
  }
  else {
    BOOL v36 = 1;
  }
  int v37 = !v36;
  if (v35 < 3 && v18 == v19) {
    unsigned int v35 = v37;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v39 = 0;
    if (v19 <= 0x1FF && v18 >= 0x200) {
      BOOL v39 = kDQuadParamTable[10 * v35 + 168] == 0;
    }
  }
  else
  {
    BOOL v39 = 0;
  }
  if (v35 > 5 || v39)
  {
    unsigned int v41 = kDQuadParamTable[10 * v35 + 164];
    int v42 = v39 ? 0 : -2;
    int v43 = v41 >= 0xA ? 0 : v19 & ~(-1 << (10 - v41));
    int v44 = v43 + v42;
    if (v44 >= 1 && __clz(v44 + v32) < v33) {
      ++v35;
    }
  }
  uint64_t v47 = (uint64_t)&kDQuadParamTable[10 * v35];
  unint64_t v45 = *(void *)(v47 + 648);
  LODWORD(v46) = *(_DWORD *)(v47 + 656);
  LODWORD(v47) = *(_DWORD *)(v47 + 660);
  if (a4) {
    BOOL v48 = a5 == 0;
  }
  else {
    BOOL v48 = 1;
  }
  int v49 = v48;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v50 = a4 == 0;
    }
    else {
      BOOL v50 = 1;
    }
    int v51 = !v50;
  }
  else
  {
    int v51 = 0;
  }
  unint64_t v52 = 0;
  unsigned int v53 = 0;
  if (v45 >> v47 > 0x20) {
    int v54 = 1;
  }
  else {
    int v54 = v51;
  }
  memset(v119, 0, sizeof(v119));
  int v120 = 0;
  if (v47 >= 0xA) {
    uint64_t v47 = 10;
  }
  else {
    uint64_t v47 = v47;
  }
  if (v46 >= 0xA) {
    uint64_t v46 = 10;
  }
  else {
    uint64_t v46 = v46;
  }
  unsigned int v55 = v19 & (-1 << (10 - v46));
  unsigned int v56 = v13 - v55;
  if (v49) {
    unsigned int v56 = 0;
  }
  BOOL v20 = v16 == 0;
  unsigned __int32 v57 = v122.i32[1] - v55;
  if (!v20) {
    unsigned __int32 v57 = 0;
  }
  v121[0] = v56;
  v121[1] = v57;
  unint64_t v58 = v17;
  unint64_t v59 = v45 >> v47;
  if (v21) {
    unsigned __int32 v60 = 0;
  }
  else {
    unsigned __int32 v60 = v122.i32[2] - v55;
  }
  BOOL v20 = v23 == 0;
  unsigned __int32 v61 = v122.i32[3] - v55;
  if (!v20) {
    unsigned __int32 v61 = 0;
  }
  v121[2] = v60;
  v121[3] = v61;
  unsigned __int32 v62 = v123.i32[0] - v55;
  if (v25) {
    unsigned __int32 v62 = 0;
  }
  unsigned __int32 v63 = v123.i32[1] - v55;
  if (v27) {
    unsigned __int32 v63 = 0;
  }
  v121[4] = v62;
  v121[5] = v63;
  unsigned __int32 v64 = v123.i32[2] - v55;
  if (v29) {
    unsigned __int32 v64 = 0;
  }
  unsigned __int32 v65 = v123.i32[3] - v55;
  if (v31) {
    unsigned __int32 v65 = 0;
  }
  v121[6] = v64;
  v121[7] = v65;
  if (v59 <= 1) {
    unint64_t v66 = 1;
  }
  else {
    unint64_t v66 = v45 >> v47;
  }
  uint64_t v67 = 4 * v17;
  int16x8_t v68 = &byte_242EA911D;
  do
  {
    if (v67 != v52)
    {
      if (v47) {
        unint64_t v69 = v121[v52 / 4] / v66;
      }
      else {
        LODWORD(v69) = 0;
      }
      *((_DWORD *)v119 + v53) = v69;
      if (v59 >= 2)
      {
        unint64_t v70 = v121[v52 / 4];
        if (v70)
        {
          if (v70 / v66 * v66 == v70 && ((v70 / v66) & 1) != 0)
          {
            if (v55 || v69 != 1)
            {
              if ((a3 | 2) != 3 || (uint64_t v72 = v122.u32[v52 / 4], v72 != 512) && ((a3 | 2) != 3 || v66 + 512 != v72))
              {
                LODWORD(v69) = v69 - 1;
                *((_DWORD *)v119 + v53) = v69;
              }
            }
            else
            {
              LODWORD(v69) = 1;
            }
          }
        }
      }
      if ((unint64_t)v69 >> v47 || v122.i32[v52 / 4] == 1023) {
        *((_DWORD *)v119 + v53) = ~(-1 << v47);
      }
      if (*v68 >= a5 || *(v68 - 1) >= a4) {
        *((_DWORD *)v119 + v53) = 0;
      }
      ++v53;
    }
    v52 += 4;
    v68 += 2;
  }
  while (v52 != 32);
  uint64_t result = v54 | v49;
  int16x8_t v74 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v75 = 8 * (a1 & 7);
  *(unsigned char *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
  if (result == 1)
  {
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = v75;
    do
    {
      int8x16_t v79 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v76;
      if (v79[1] >= a5 || *v79 >= a4) {
        unint64_t v81 = 0;
      }
      else {
        unint64_t v81 = (unint64_t)v122.u32[v76] >> 5;
      }
      if ((unint64_t)(v78 - v75 + (v77 << 6) - 36) >= 0xFFFFFFFFFFFFFFD7)
      {
        uint64_t v82 = 0;
        unint64_t v83 = 5;
        do
        {
          unint64_t v84 = 64 - v78;
          if (64 - v78 >= v83) {
            unint64_t v84 = v83;
          }
          v74[v77] |= ((v81 >> v82) & ~(-1 << v84)) << v78;
          v82 += v84;
          unint64_t v85 = v84 + v78;
          v77 += v85 >> 6;
          uint64_t v78 = v85 & 0x3F;
          v83 -= v84;
        }
        while (v83);
      }
      ++v76;
    }
    while (v76 != 8);
    return result;
  }
  if (v19 | v35)
  {
    uint64_t v86 = v75 | 3;
    LODWORD(v87) = (v35 + 6) & 7;
    if (v35 < 3) {
      unint64_t v88 = v35 + 1;
    }
    else {
      unint64_t v88 = 0;
    }
    if (v35 >= 3) {
      uint64_t v87 = v87;
    }
    else {
      uint64_t v87 = 0;
    }
    *v74 |= v87 << v75;
    if (v35 >= 3)
    {
      uint64_t v90 = 0;
      int v94 = 3;
      if (!v46) {
        goto LABEL_235;
      }
LABEL_230:
      if ((unint64_t)(v46 - v75 + v86 + (v90 << 6)) <= 0x28)
      {
        uint64_t v95 = 0;
        unint64_t v96 = v46;
        do
        {
          unint64_t v97 = 64 - v86;
          if (64 - v86 >= v96) {
            unint64_t v97 = v96;
          }
          v74[v90] |= (((unint64_t)(v55 >> (10 - v46)) >> v95) & ~(-1 << v97)) << v86;
          v95 += v97;
          unint64_t v98 = v97 + v86;
          v90 += v98 >> 6;
          uint64_t v86 = v98 & 0x3F;
          v96 -= v97;
        }
        while (v96);
      }
      goto LABEL_235;
    }
    unint64_t v89 = 2 * (v35 < 3);
  }
  else
  {
    unint64_t v88 = 0;
    uint64_t v86 = v75 | 3;
    unint64_t v89 = 2;
  }
  if (v89 - v75 + v86 <= 0x28)
  {
    uint64_t v90 = 0;
    uint64_t v91 = 0;
    do
    {
      unint64_t v92 = 64 - v86;
      if (64 - v86 >= v89) {
        unint64_t v92 = v89;
      }
      v74[v90] |= ((v88 >> v91) & ~(-1 << v92)) << v86;
      v91 += v92;
      unint64_t v93 = v92 + v86;
      v90 += v93 >> 6;
      uint64_t v86 = v93 & 0x3F;
      v89 -= v92;
    }
    while (v89);
  }
  else
  {
    uint64_t v90 = 0;
  }
  int v94 = 5;
  if (!v35) {
    goto LABEL_236;
  }
  if (v46) {
    goto LABEL_230;
  }
LABEL_235:
  v94 += v46;
LABEL_236:
  if (v47)
  {
    if ((unint64_t)(v86 - v75 + (v90 << 6) + 3) <= 0x28)
    {
      uint64_t v99 = 0;
      unint64_t v100 = 3;
      do
      {
        unint64_t v101 = 64 - v86;
        if (64 - v86 >= v100) {
          unint64_t v101 = v100;
        }
        v74[v90] |= ((v58 >> v99) & ~(-1 << v101)) << v86;
        v99 += v101;
        unint64_t v102 = v101 + v86;
        v90 += v102 >> 6;
        uint64_t v86 = v102 & 0x3F;
        v100 -= v101;
      }
      while (v100);
    }
    v94 += 3;
  }
  unsigned int v103 = (((37 * (40 - v94)) >> 8)
        + (((40 - v94 - ((unsigned __int16)(37 * (40 - v94)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v104 = -7 * v103 + 40 - v94;
  if ((v104 - 257) >= 0xFFFFFF00 && v86 - v75 + (v90 << 6) + v104 <= 0x28)
  {
    do
    {
      unint64_t v105 = 64 - v86;
      if (64 - v86 >= v104) {
        unint64_t v105 = v104;
      }
      unint64_t v106 = v105 + v86;
      v90 += v106 >> 6;
      uint64_t v86 = v106 & 0x3F;
      v104 -= v105;
    }
    while (v104);
  }
  uint64_t v107 = 0;
  unint64_t v108 = v103 - v47;
  if (v108) {
    BOOL v109 = v108 > 0x100;
  }
  else {
    BOOL v109 = 1;
  }
  char v110 = v109;
  do
  {
    if (v47 && (unint64_t)(v47 - v75 + v86 + (v90 << 6)) <= 0x28)
    {
      uint64_t v111 = 0;
      unint64_t v112 = *((unsigned int *)v119 + v107);
      unint64_t v113 = v47;
      do
      {
        unint64_t v114 = 64 - v86;
        if (64 - v86 >= v113) {
          unint64_t v114 = v113;
        }
        v74[v90] |= ((v112 >> v111) & ~(-1 << v114)) << v86;
        v111 += v114;
        unint64_t v115 = v114 + v86;
        v90 += v115 >> 6;
        uint64_t v86 = v115 & 0x3F;
        v113 -= v114;
      }
      while (v113);
    }
    if ((v110 & 1) == 0 && v86 - v75 + (v90 << 6) + v108 <= 0x28)
    {
      unint64_t v116 = v108;
      do
      {
        unint64_t v117 = 64 - v86;
        if (64 - v86 >= v116) {
          unint64_t v117 = v116;
        }
        unint64_t v118 = v117 + v86;
        v90 += v118 >> 6;
        uint64_t v86 = v118 & 0x3F;
        v116 -= v117;
      }
      while (v116);
    }
    ++v107;
  }
  while (v107 != 7);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)1,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::decompressSubblock(uint64_t a1, uint64_t a2, int32x4_t *a3, unsigned int a4, int a5, double a6, double a7, double a8, int8x8_t a9)
{
  uint64_t v467 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v192 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    int16x8_t v193 = (void *)(a1 + a2);
    *int16x8_t v193 = 0;
    v193[1] = 0;
    unint64_t v194 = (void *)(a1 + 2 * a2);
    *unint64_t v194 = 0;
    v194[1] = 0;
    uint16x8_t v195 = (void *)(a1 + a2 + 2 * a2);
LABEL_316:
    *uint16x8_t v195 = 0;
    v195[1] = 0;
    return v192;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v9 = 0;
    unsigned int v10 = a5 & 0xFFFFFFFD;
    unsigned int v425 = a3;
    unsigned int v424 = a4;
    while (1)
    {
      unint64_t v28 = (unint64_t)a3 + 5 * v9;
      int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v30 = 8 * (v28 & 7);
      if ((a4 >> v9))
      {
        uint64_t v31 = 0;
        uint64_t v32 = 0;
        uint64_t v33 = v30;
        do
        {
          if ((unint64_t)(v33 - v30 + (v32 << 6) - 36) < 0xFFFFFFFFFFFFFFD7)
          {
            char v34 = 0;
          }
          else
          {
            char v34 = 0;
            uint64_t v38 = 0;
            unint64_t v39 = 5;
            do
            {
              if (64 - v33 >= v39) {
                unint64_t v40 = v39;
              }
              else {
                unint64_t v40 = 64 - v33;
              }
              v34 |= (unint64_t)((v29[v32] >> v33) & ~(-1 << v40)) << v38;
              v38 += v40;
              unint64_t v41 = v40 + v33;
              v32 += v41 >> 6;
              uint64_t v33 = v41 & 0x3F;
              v39 -= v40;
            }
            while (v39);
          }
          int v35 = 32 * (v34 & 0x1F);
          int v36 = v35 - (v34 & 1) + 16;
          if (v35 == 992) {
            int v36 = 1023;
          }
          if (!v35) {
            int v36 = 0;
          }
          if (v35 == 512 && v10 == 1) {
            int v36 = v35;
          }
          if (a5 == 4) {
            int v36 = v35;
          }
          *(&v426 + v31++) = v36 ^ (((a5 & 0xFFFFFFFD) == 1) << 9);
        }
        while (v31 != 8);
        LOWORD(v12) = v426;
        LOWORD(v11) = v427;
        LOWORD(v13) = v428;
        LOWORD(v14) = v429;
        LOWORD(v15) = v430;
        LOWORD(v16) = v431;
        __int16 v18 = v432;
        __int16 v17 = v433;
        goto LABEL_5;
      }
      uint64_t v42 = v30 | 3;
      if (((*v29 >> v30) & 7) != 0)
      {
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        int v45 = 0;
        int v46 = ((*v29 >> v30) & 7) + 2;
        int v47 = 3;
        goto LABEL_41;
      }
      if ((unint64_t)(v42 - v30) > 0x26) {
        break;
      }
      uint64_t v44 = 0;
      char v48 = 0;
      uint64_t v49 = 0;
      unint64_t v50 = 2;
      do
      {
        unint64_t v51 = 64 - v42;
        if (64 - v42 >= v50) {
          unint64_t v51 = v50;
        }
        v48 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v51)) << v49;
        v49 += v51;
        unint64_t v52 = v51 + v42;
        v44 += v52 >> 6;
        uint64_t v42 = v52 & 0x3F;
        v50 -= v51;
      }
      while (v50);
      int v45 = v48 & 3;
      switch(v45)
      {
        case 2:
          unsigned int v43 = 0;
          int v46 = 1;
          goto LABEL_40;
        case 1:
          int v46 = 0;
          int v45 = 2;
          int v47 = 5;
          unsigned int v43 = 1023;
          break;
        case 0:
          goto LABEL_39;
        default:
          unsigned int v43 = 0;
          int v45 = 2;
          int v47 = 5;
          int v46 = 2;
          break;
      }
LABEL_41:
      unsigned int v53 = &kDQuadParamTable[10 * v46];
      LODWORD(v54) = v53[164];
      unsigned int v55 = v53[165];
      if (v54 >= 0xA) {
        uint64_t v54 = 10;
      }
      else {
        uint64_t v54 = v54;
      }
      if (v55 >= 0xA) {
        uint64_t v56 = 10;
      }
      else {
        uint64_t v56 = v55;
      }
      char v57 = 10 - v54;
      if (v46)
      {
        if (v54)
        {
          if ((unint64_t)(v54 - v30 + v42 + (v44 << 6)) <= 0x28)
          {
            int v58 = 0;
            uint64_t v59 = 0;
            unint64_t v60 = v54;
            do
            {
              unint64_t v61 = 64 - v42;
              if (64 - v42 >= v60) {
                unint64_t v61 = v60;
              }
              v58 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v61)) << v59;
              v59 += v61;
              unint64_t v62 = v61 + v42;
              v44 += v62 >> 6;
              uint64_t v42 = v62 & 0x3F;
              v60 -= v61;
            }
            while (v60);
          }
          else
          {
            int v58 = 0;
          }
          int v47 = v54 + v45 + 3;
        }
        else
        {
          int v58 = 0;
        }
        unsigned int v43 = v58 << v57;
      }
      if (v56)
      {
        if ((unint64_t)(v42 - v30 + (v44 << 6) + 3) <= 0x28)
        {
          int v63 = 0;
          uint64_t v65 = 0;
          unint64_t v66 = 3;
          do
          {
            unint64_t v67 = 64 - v42;
            if (64 - v42 >= v66) {
              unint64_t v67 = v66;
            }
            v63 |= (unint64_t)((v29[v44] >> v42) & ~(-1 << v67)) << v65;
            v65 += v67;
            unint64_t v68 = v67 + v42;
            v44 += v68 >> 6;
            uint64_t v42 = v68 & 0x3F;
            v66 -= v67;
          }
          while (v66);
        }
        else
        {
          int v63 = 0;
        }
        uint64_t v463 = 0;
        uint64_t v464 = 0;
        int v466 = 0;
        uint64_t v465 = 0;
        unsigned int v69 = 37 - v47;
        unsigned int v70 = v69 / 7;
        uint64_t v71 = v56 - v30;
        unint64_t v72 = (v42 | (v44 << 6)) + v69 % 7;
        unint64_t v73 = v72 & 0x3F;
        if (v71 + v73 + (v72 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          uint64_t v64 = 0;
          uint64_t v74 = 0;
          unint64_t v75 = v72 >> 6;
          unint64_t v76 = v56;
          do
          {
            unint64_t v77 = 64 - v73;
            if (64 - v73 >= v76) {
              unint64_t v77 = v76;
            }
            v64 |= ((unint64_t)((v29[v75] >> v73) & ~(-1 << v77)) << v74);
            v74 += v77;
            unint64_t v78 = v77 + v73;
            v75 += v78 >> 6;
            unint64_t v73 = v78 & 0x3F;
            v76 -= v77;
          }
          while (v76);
          LODWORD(v463) = v64;
          unint64_t v72 = v73 | (v75 << 6);
        }
        else
        {
          uint64_t v64 = 0;
        }
        uint64_t v79 = v70 - v56;
        unint64_t v80 = v72 + v79;
        uint64_t v81 = (v72 + v79) & 0x3F;
        if (v71 + v81 + (v80 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v82 = 0;
          uint64_t v83 = 0;
          unint64_t v84 = v80 >> 6;
          unint64_t v85 = v56;
          do
          {
            unint64_t v86 = 64 - v81;
            if (64 - v81 >= v85) {
              unint64_t v86 = v85;
            }
            v82 |= (unint64_t)((v29[v84] >> v81) & ~(-1 << v86)) << v83;
            v83 += v86;
            unint64_t v87 = v86 + v81;
            v84 += v87 >> 6;
            uint64_t v81 = v87 & 0x3F;
            v85 -= v86;
          }
          while (v85);
          HIDWORD(v463) = v82;
          unint64_t v80 = v81 | (v84 << 6);
        }
        else
        {
          HIDWORD(v463) = 0;
        }
        unint64_t v88 = v80 + v79;
        uint64_t v89 = v88 & 0x3F;
        if (v71 + v89 + (v88 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v90 = 0;
          uint64_t v91 = 0;
          unint64_t v92 = v88 >> 6;
          unint64_t v93 = v56;
          do
          {
            unint64_t v94 = 64 - v89;
            if (64 - v89 >= v93) {
              unint64_t v94 = v93;
            }
            v90 |= (unint64_t)((v29[v92] >> v89) & ~(-1 << v94)) << v91;
            v91 += v94;
            unint64_t v95 = v94 + v89;
            v92 += v95 >> 6;
            uint64_t v89 = v95 & 0x3F;
            v93 -= v94;
          }
          while (v93);
          LODWORD(v464) = v90;
          unint64_t v88 = v89 | (v92 << 6);
        }
        else
        {
          LODWORD(v464) = 0;
        }
        unint64_t v96 = v88 + v79;
        uint64_t v97 = v96 & 0x3F;
        if (v71 + v97 + (v96 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v98 = 0;
          uint64_t v99 = 0;
          unint64_t v100 = v96 >> 6;
          unint64_t v101 = v56;
          do
          {
            unint64_t v102 = 64 - v97;
            if (64 - v97 >= v101) {
              unint64_t v102 = v101;
            }
            v98 |= (unint64_t)((v29[v100] >> v97) & ~(-1 << v102)) << v99;
            v99 += v102;
            unint64_t v103 = v102 + v97;
            v100 += v103 >> 6;
            uint64_t v97 = v103 & 0x3F;
            v101 -= v102;
          }
          while (v101);
          HIDWORD(v464) = v98;
          unint64_t v96 = v97 | (v100 << 6);
        }
        else
        {
          HIDWORD(v464) = 0;
        }
        unint64_t v104 = v96 + v79;
        uint64_t v105 = v104 & 0x3F;
        if (v71 + v105 + (v104 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v106 = 0;
          uint64_t v107 = 0;
          unint64_t v108 = v104 >> 6;
          unint64_t v109 = v56;
          do
          {
            unint64_t v110 = 64 - v105;
            if (64 - v105 >= v109) {
              unint64_t v110 = v109;
            }
            v106 |= (unint64_t)((v29[v108] >> v105) & ~(-1 << v110)) << v107;
            v107 += v110;
            unint64_t v111 = v110 + v105;
            v108 += v111 >> 6;
            uint64_t v105 = v111 & 0x3F;
            v109 -= v110;
          }
          while (v109);
          LODWORD(v465) = v106;
          unint64_t v104 = v105 | (v108 << 6);
        }
        else
        {
          LODWORD(v465) = 0;
        }
        unint64_t v112 = v104 + v79;
        unint64_t v113 = v112 >> 6;
        uint64_t v114 = v112 & 0x3F;
        if (v71 + v114 + (v112 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v115 = 0;
          uint64_t v116 = 0;
          unint64_t v117 = v56;
          do
          {
            unint64_t v118 = 64 - v114;
            if (64 - v114 >= v117) {
              unint64_t v118 = v117;
            }
            v115 |= (unint64_t)((v29[v113] >> v114) & ~(-1 << v118)) << v116;
            v116 += v118;
            unint64_t v119 = v118 + v114;
            v113 += v119 >> 6;
            uint64_t v114 = v119 & 0x3F;
            v117 -= v118;
          }
          while (v117);
        }
        else
        {
          int v115 = 0;
        }
        HIDWORD(v465) = v115;
        unint64_t v120 = (v114 | (v113 << 6)) + v79;
        uint64_t v121 = v120 & 0x3F;
        if (v71 + v121 + (v120 & 0xFFFFFFFFFFFFFFC0) <= 0x28)
        {
          int v122 = 0;
          uint64_t v123 = 0;
          unint64_t v124 = v120 >> 6;
          unint64_t v125 = v56;
          do
          {
            unint64_t v126 = 64 - v121;
            if (64 - v121 >= v125) {
              unint64_t v126 = v125;
            }
            v122 |= (unint64_t)((v29[v124] >> v121) & ~(-1 << v126)) << v123;
            v123 += v126;
            unint64_t v127 = v126 + v121;
            v124 += v127 >> 6;
            uint64_t v121 = v127 & 0x3F;
            v125 -= v126;
          }
          while (v125);
        }
        else
        {
          int v122 = 0;
        }
        int v466 = v122;
      }
      else
      {
        int v63 = 0;
        uint64_t v64 = 0;
        uint64_t v463 = 0;
        uint64_t v464 = 0;
        int v466 = 0;
        uint64_t v465 = 0;
      }
      unint64_t v128 = *(void *)&kDQuadParamTable[10 * v46 + 162];
      if (v128 >> v56 <= 1) {
        unint64_t v129 = 1;
      }
      else {
        unint64_t v129 = v128 >> v56;
      }
      unint64_t v130 = v129 >> 1;
      unint64_t v131 = (unint64_t)(1 << v57) >> 1;
      if (v129 >> 1 < v131) {
        unint64_t v131 = v129 >> 1;
      }
      unint64_t v132 = 512 - v43;
      if (v43) {
        uint64_t v133 = v131;
      }
      else {
        uint64_t v133 = 0;
      }
      BOOL v134 = v43 == 512;
      if (v43 >= 0x3FF) {
        __int16 v135 = 1023;
      }
      else {
        __int16 v135 = v43;
      }
      __int16 v136 = v135 ^ 0x200;
      if (v129 <= v132)
      {
        __int16 v137 = 511;
      }
      else
      {
        __int16 v136 = 0;
        __int16 v137 = 0;
      }
      if (v10 == 1) {
        __int16 v138 = v136;
      }
      else {
        __int16 v138 = v135;
      }
      if (v10 == 1) {
        __int16 v17 = v137;
      }
      else {
        __int16 v17 = 1023;
      }
      if (!v56)
      {
        if (a5 == 4)
        {
          __int16 v18 = v17;
          LOWORD(v16) = v17;
          LOWORD(v15) = v17;
          LOWORD(v14) = v17;
          LOWORD(v13) = v17;
          LOWORD(v11) = v17;
          LOWORD(v12) = v17;
          a3 = v425;
          a4 = v424;
          if ((v43 & 0x7FC00000 | 0x80000000) != 0xFF800000)
          {
            __int16 v17 = v138;
            __int16 v18 = v138;
            LOWORD(v16) = v138;
            LOWORD(v15) = v138;
            LOWORD(v14) = v138;
            LOWORD(v13) = v138;
            LOWORD(v11) = v138;
            LOWORD(v12) = v138;
          }
          goto LABEL_5;
        }
        __int16 v17 = v138;
        __int16 v18 = v138;
        LOWORD(v16) = v138;
        LOWORD(v15) = v138;
        LOWORD(v14) = v138;
        LOWORD(v13) = v138;
        LOWORD(v11) = v138;
        LOWORD(v12) = v138;
        goto LABEL_311;
      }
      unint64_t v139 = v128 + v43;
      uint64_t v140 = ~(-1 << v56);
      unint64_t v141 = v132 / v129;
      if (!v63)
      {
        uint64_t v144 = 0;
        uint64_t v143 = v133;
        BOOL v142 = v43 == 512;
        goto LABEL_149;
      }
      BOOL v142 = v141 == v64;
      if (v43 || v64)
      {
        if (v139 >= 0x400 && v64 == v140)
        {
          uint64_t v144 = 1;
          uint64_t v143 = 1023;
          goto LABEL_149;
        }
        uint64_t v143 = v130 + v129 * v64;
      }
      else
      {
        uint64_t v143 = 0;
      }
      uint64_t v144 = 1;
LABEL_149:
      unint64_t v145 = v143 + v43;
      unint64_t v146 = v145;
      if (a5 == 4)
      {
        unint64_t v146 = 2139095039;
        if ((v145 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v146 = 4286578687;
          if ((v145 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v146 = v145;
          }
        }
      }
      if (v146 >= 0x3FF) {
        int v147 = 1023;
      }
      else {
        int v147 = v146;
      }
      if (v142) {
        int v148 = 0;
      }
      else {
        int v148 = v147 ^ 0x200;
      }
      if (v10 == 1) {
        int v12 = v148;
      }
      else {
        int v12 = v147;
      }
      int v426 = v12;
      if (v63 == 1)
      {
        uint64_t v149 = v133;
        BOOL v150 = v43 == 512;
      }
      else
      {
        uint64_t v151 = *(unsigned int *)((unint64_t)&v463 | (4 * v144));
        BOOL v150 = v141 == v151;
        if (v43 | v151)
        {
          if (v139 >= 0x400 && v151 == v140) {
            uint64_t v149 = 1023;
          }
          else {
            uint64_t v149 = v130 + v129 * v151;
          }
        }
        else
        {
          uint64_t v149 = 0;
        }
        ++v144;
      }
      unint64_t v152 = v149 + v43;
      unint64_t v153 = v152;
      if (a5 == 4)
      {
        unint64_t v153 = 2139095039;
        if ((v152 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v153 = 4286578687;
          if ((v152 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v153 = v152;
          }
        }
      }
      if (v153 >= 0x3FF) {
        int v154 = 1023;
      }
      else {
        int v154 = v153;
      }
      if (v150) {
        int v155 = 0;
      }
      else {
        int v155 = v154 ^ 0x200;
      }
      if (v10 == 1) {
        int v11 = v155;
      }
      else {
        int v11 = v154;
      }
      int v427 = v11;
      if (v63 == 2)
      {
        uint64_t v156 = v133;
        BOOL v157 = v43 == 512;
      }
      else
      {
        uint64_t v158 = *((unsigned int *)&v463 + v144);
        BOOL v157 = v141 == v158;
        if (v43 | v158)
        {
          if (v139 >= 0x400 && v158 == v140) {
            uint64_t v156 = 1023;
          }
          else {
            uint64_t v156 = v130 + v129 * v158;
          }
        }
        else
        {
          uint64_t v156 = 0;
        }
        ++v144;
      }
      unint64_t v159 = v156 + v43;
      unint64_t v160 = v159;
      if (a5 == 4)
      {
        unint64_t v160 = 2139095039;
        if ((v159 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v160 = 4286578687;
          if ((v159 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v160 = v159;
          }
        }
      }
      if (v160 >= 0x3FF) {
        int v161 = 1023;
      }
      else {
        int v161 = v160;
      }
      if (v157) {
        int v13 = 0;
      }
      else {
        int v13 = v161 ^ 0x200;
      }
      if (v10 != 1) {
        int v13 = v161;
      }
      int v428 = v13;
      if (v63 == 3)
      {
        uint64_t v162 = v133;
        BOOL v163 = v43 == 512;
      }
      else
      {
        uint64_t v164 = *((unsigned int *)&v463 + v144);
        BOOL v163 = v141 == v164;
        if (v43 | v164)
        {
          if (v139 >= 0x400 && v164 == v140) {
            uint64_t v162 = 1023;
          }
          else {
            uint64_t v162 = v130 + v129 * v164;
          }
        }
        else
        {
          uint64_t v162 = 0;
        }
        ++v144;
      }
      unint64_t v165 = v162 + v43;
      unint64_t v166 = v165;
      if (a5 == 4)
      {
        unint64_t v166 = 2139095039;
        if ((v165 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v165 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v166 = 4286578687;
          }
          else {
            unint64_t v166 = v165;
          }
        }
      }
      if (v166 >= 0x3FF) {
        int v167 = 1023;
      }
      else {
        int v167 = v166;
      }
      if (v163) {
        int v168 = 0;
      }
      else {
        int v168 = v167 ^ 0x200;
      }
      if (v10 == 1) {
        int v14 = v168;
      }
      else {
        int v14 = v167;
      }
      int v429 = v14;
      if (v63 == 4)
      {
        uint64_t v169 = v133;
        BOOL v170 = v43 == 512;
      }
      else
      {
        uint64_t v171 = *((unsigned int *)&v463 + v144);
        BOOL v170 = v141 == v171;
        if (v43 | v171)
        {
          if (v139 >= 0x400 && v171 == v140) {
            uint64_t v169 = 1023;
          }
          else {
            uint64_t v169 = v130 + v129 * v171;
          }
        }
        else
        {
          uint64_t v169 = 0;
        }
        ++v144;
      }
      unint64_t v172 = v169 + v43;
      unint64_t v173 = v172;
      if (a5 == 4)
      {
        unint64_t v173 = 2139095039;
        if ((v172 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v172 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v173 = 4286578687;
          }
          else {
            unint64_t v173 = v172;
          }
        }
      }
      if (v173 >= 0x3FF) {
        int v174 = 1023;
      }
      else {
        int v174 = v173;
      }
      if (v170) {
        int v175 = 0;
      }
      else {
        int v175 = v174 ^ 0x200;
      }
      if (v10 == 1) {
        int v15 = v175;
      }
      else {
        int v15 = v174;
      }
      int v430 = v15;
      unint64_t v423 = v139;
      if (v63 == 5)
      {
        uint64_t v176 = ~(-1 << v56);
        uint64_t v177 = v133;
        BOOL v178 = v43 == 512;
      }
      else
      {
        uint64_t v179 = *((unsigned int *)&v463 + v144);
        BOOL v178 = v141 == v179;
        if (v43 | v179)
        {
          if (v139 >= 0x400 && v179 == v140)
          {
            uint64_t v176 = ~(-1 << v56);
            uint64_t v177 = 1023;
          }
          else
          {
            uint64_t v176 = ~(-1 << v56);
            uint64_t v177 = v130 + v129 * v179;
          }
        }
        else
        {
          uint64_t v176 = ~(-1 << v56);
          uint64_t v177 = 0;
        }
        ++v144;
      }
      unint64_t v180 = v177 + v43;
      unint64_t v181 = v180;
      if (a5 == 4)
      {
        unint64_t v181 = 2139095039;
        if ((v180 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v180 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v181 = 4286578687;
          }
          else {
            unint64_t v181 = v180;
          }
        }
      }
      if (v181 >= 0x3FF) {
        int v182 = 1023;
      }
      else {
        int v182 = v181;
      }
      if (v178) {
        int v183 = 0;
      }
      else {
        int v183 = v182 ^ 0x200;
      }
      if (v10 == 1) {
        int v16 = v183;
      }
      else {
        int v16 = v182;
      }
      int v431 = v16;
      if (v63 == 6)
      {
        uint64_t v184 = v133;
        BOOL v185 = v43 == 512;
      }
      else
      {
        uint64_t v186 = *((unsigned int *)&v463 + v144);
        BOOL v185 = v141 == v186;
        if (v43 | v186)
        {
          if (v423 >= 0x400 && v186 == v176) {
            uint64_t v184 = 1023;
          }
          else {
            uint64_t v184 = v130 + v129 * v186;
          }
        }
        else
        {
          uint64_t v184 = 0;
        }
        ++v144;
      }
      unint64_t v187 = v184 + v43;
      unint64_t v188 = v187;
      if (a5 == 4)
      {
        unint64_t v188 = 2139095039;
        if ((v187 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v188 = 4286578687;
          if ((v187 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v188 = v187;
          }
        }
      }
      if (v188 >= 0x3FF) {
        LOWORD(v188) = 1023;
      }
      if (v185) {
        __int16 v18 = 0;
      }
      else {
        __int16 v18 = v188 ^ 0x200;
      }
      if (v10 != 1) {
        __int16 v18 = v188;
      }
      if (v63 != 7)
      {
        uint64_t v189 = *((unsigned int *)&v463 + v144);
        BOOL v134 = v141 == v189;
        if (v43 | v189)
        {
          if (v423 >= 0x400 && v189 == v176) {
            uint64_t v133 = 1023;
          }
          else {
            uint64_t v133 = v130 + v129 * v189;
          }
        }
        else
        {
          uint64_t v133 = 0;
        }
      }
      unint64_t v190 = v133 + v43;
      unint64_t v191 = v190;
      if (a5 == 4)
      {
        unint64_t v191 = 2139095039;
        if ((v190 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v191 = 4286578687;
          if ((v190 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v191 = v133 + v43;
          }
        }
      }
      if (v191 >= 0x3FF) {
        LOWORD(v191) = 1023;
      }
      __int16 v17 = v191 ^ 0x200;
      if (v134) {
        __int16 v17 = 0;
      }
      if (v10 != 1) {
        __int16 v17 = v191;
      }
LABEL_311:
      a3 = v425;
      a4 = v424;
LABEL_5:
      unsigned int v19 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v9;
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      BOOL v22 = &v434 + v20;
      uint64_t v23 = 2 * v21;
      *(_WORD *)((char *)v22 + v23) = v12;
      BOOL v24 = &v434 + (v20 + 1);
      *(_WORD *)((char *)v24 + v23) = v11;
      uint64_t v25 = 2 * (v21 + 1);
      *(_WORD *)((char *)v22 + v25) = v13;
      *(_WORD *)((char *)v24 + v25) = v14;
      BOOL v26 = &v434 + (v20 + 2);
      *(_WORD *)((char *)v26 + v23) = v15;
      int v27 = &v434 + (v20 + 3);
      *(_WORD *)((char *)v27 + v23) = v16;
      *(_WORD *)((char *)v26 + v25) = v18;
      *(_WORD *)((char *)v27 + v25) = v17;
      if (++v9 == 4)
      {
        *(_WORD *)a1 = (_WORD)v434 << 6;
        *(_WORD *)(a1 + 2) = v435 << 6;
        *(_WORD *)(a1 + 4) = v439 << 6;
        *(_WORD *)(a1 + 6) = v443 << 6;
        *(_WORD *)(a1 + 8) = v447 << 6;
        *(_WORD *)(a1 + 10) = v451 << 6;
        *(_WORD *)(a1 + 12) = v455 << 6;
        *(_WORD *)(a1 + 14) = v459 << 6;
        int16x8_t v197 = (_WORD *)(a1 + a2);
        *int16x8_t v197 = WORD1(v434) << 6;
        v197[1] = v436 << 6;
        v197[2] = v440 << 6;
        v197[3] = v444 << 6;
        v197[4] = v448 << 6;
        v197[5] = v452 << 6;
        v197[6] = v456 << 6;
        v197[7] = v460 << 6;
        uint16x8_t v198 = (_WORD *)(a1 + a2 + a2);
        *uint16x8_t v198 = WORD2(v434) << 6;
        v198[1] = v437 << 6;
        v198[2] = v441 << 6;
        v198[3] = v445 << 6;
        v198[4] = v449 << 6;
        v198[5] = v453 << 6;
        v198[6] = v457 << 6;
        v198[7] = v461 << 6;
        int32x4_t v199 = (_WORD *)((char *)v198 + a2);
        *int32x4_t v199 = HIWORD(v434) << 6;
        v199[1] = v438 << 6;
        v199[2] = v442 << 6;
        v199[3] = v446 << 6;
        v199[4] = v450 << 6;
        v199[5] = v454 << 6;
        v199[6] = v458 << 6;
        uint64_t v192 = 20;
        v199[7] = v462 << 6;
        return v192;
      }
    }
    uint64_t v44 = 0;
LABEL_39:
    unsigned int v43 = 0;
    int v46 = 0;
    int v45 = 2;
LABEL_40:
    int v47 = 5;
    goto LABEL_41;
  }
  switch(a4)
  {
    case 0x3Fu:
      int32x4_t v201 = *a3;
      int32x4_t v202 = a3[1];
      int32x4_t v203 = a3[2];
      int32x4_t v204 = a3[3];
      *(int32x4_t *)a1 = vuzp1q_s32(*a3, v203);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v201, v203);
      int64x2_t v205 = (int32x4_t *)(a1 + 2 * a2);
      *int64x2_t v205 = vuzp1q_s32(v202, v204);
      *(int32x4_t *)((char *)v205 + a2) = vuzp2q_s32(v202, v204);
      return 64;
    case 0x27u:
      v206.i64[0] = 0xA000A000A000ALL;
      v206.i64[1] = 0xA000A000A000ALL;
      int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v206, v206));
      unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
      v209.i64[0] = v208;
      v209.i64[1] = HIDWORD(v208);
      int8x16_t v210 = (int8x16_t)v209;
      unint64_t v211 = vaddvq_s64(v209);
      int8x16_t v212 = 0uLL;
      int8x16_t v213 = 0uLL;
      int8x16_t v214 = 0uLL;
      int8x16_t v215 = 0uLL;
      if (v211 <= 0x80)
      {
        int16x8_t v216 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v217 = 8 * (a3 & 7);
        int64x2_t v218 = vzip1q_s64((int64x2_t)0, (int64x2_t)v210);
        unint64_t v219 = v211 + v217;
        int64x2_t v220 = vaddq_s64(v218, vdupq_n_s64(v217));
        int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v220)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v220)));
        if (v211 + v217 >= 0x81) {
          int8x16_t v213 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v216[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v220)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v216[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v220))), v213);
        }
        unint64_t v221 = v219 & 0x3F;
        int32x4_t v222 = (int64x2_t *)((char *)v216 + 8 * (v219 >> 6));
        int64x2_t v223 = vaddq_s64(v218, vdupq_n_s64(v221));
        unint64_t v224 = v211 + v219;
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v222, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v223)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222->i64[0], 0), (uint64x2_t)vnegq_s64(v223)));
        if (v211 + v221 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v223)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v222[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v223))), v214);
        }
        unint64_t v225 = v224 & 0x3F;
        int64x2_t v226 = (int64x2_t *)((char *)v216 + 8 * (v224 >> 6));
        int64x2_t v227 = vaddq_s64(v218, vdupq_n_s64(v225));
        unint64_t v228 = v211 + v224;
        int8x16_t v212 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v226, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v227)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v226->i64[0], 0), (uint64x2_t)vnegq_s64(v227)));
        if (v211 + v225 >= 0x81) {
          int8x16_t v212 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v226[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v227)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v226[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v227))), v212);
        }
        int8x16_t v210 = (int8x16_t)vaddq_s64(v218, vdupq_n_s64(v228 & 0x3F));
        unint64_t v229 = (int64x2_t *)((char *)v216 + 8 * (v228 >> 6));
        int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v229, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v210)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v229->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v210)));
        if (v211 + (v228 & 0x3F) >= 0x81)
        {
          int8x16_t v210 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v229[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v210)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v229[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v210)));
          int8x16_t v215 = vorrq_s8(v210, v215);
        }
      }
      *(int32x2_t *)v210.i8 = vmovn_s64((int64x2_t)v212);
      int32x2_t v230 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
      v231.i64[0] = v230.u32[0];
      v231.i64[1] = v230.u32[1];
      uint64x2_t v232 = (uint64x2_t)vnegq_s64(v231);
      int64x2_t v233 = (int64x2_t)vshlq_u64((uint64x2_t)v212, v232);
      *(int32x2_t *)v233.i8 = vmovn_s64(v233);
      int16x8_t v234 = (int16x8_t)vzip1q_s32((int32x4_t)v210, (int32x4_t)v233);
      *(int16x4_t *)v210.i8 = vmovn_s32((int32x4_t)v234);
      *(int16x4_t *)v234.i8 = vshrn_n_s32((int32x4_t)v234, 0xAuLL);
      int8x16_t v235 = (int8x16_t)vzip1q_s16((int16x8_t)v210, v234);
      v236.i64[0] = 0x1000100010001;
      v236.i64[1] = 0x1000100010001;
      v237.i64[0] = -1;
      v237.i64[1] = -1;
      int8x16_t v238 = (int8x16_t)vaddq_s16(vshlq_n_s16(v236, 0xAuLL), v237);
      *(int32x2_t *)v237.i8 = vmovn_s64((int64x2_t)v214);
      int64x2_t v239 = (int64x2_t)vshlq_u64((uint64x2_t)v214, v232);
      *(int32x2_t *)v239.i8 = vmovn_s64(v239);
      int16x8_t v240 = (int16x8_t)vzip1q_s32((int32x4_t)v237, (int32x4_t)v239);
      *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v240);
      *(int16x4_t *)v240.i8 = vshrn_n_s32((int32x4_t)v240, 0xAuLL);
      int16x8_t v241 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v237, v240), v238);
      *(int32x2_t *)v237.i8 = vmovn_s64((int64x2_t)v213);
      int64x2_t v242 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v232);
      *(int32x2_t *)v242.i8 = vmovn_s64(v242);
      int16x8_t v243 = (int16x8_t)vzip1q_s32((int32x4_t)v237, (int32x4_t)v242);
      *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v243);
      *(int16x4_t *)v243.i8 = vshrn_n_s32((int32x4_t)v243, 0xAuLL);
      int64x2_t v244 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v232);
      *(int32x2_t *)v215.i8 = vmovn_s64((int64x2_t)v215);
      *(int32x2_t *)v244.i8 = vmovn_s64(v244);
      int16x8_t v245 = (int16x8_t)vzip1q_s32((int32x4_t)v215, (int32x4_t)v244);
      *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v245);
      *(int16x4_t *)v245.i8 = vshrn_n_s32((int32x4_t)v245, 0xAuLL);
      int16x8_t v246 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v215, v245), v238);
      int32x4_t v247 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v237, v243), v238), 6uLL);
      int32x4_t v248 = (int32x4_t)vshlq_n_s16(v241, 6uLL);
      int32x4_t v249 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v235, v238), 6uLL);
      int32x4_t v250 = (int32x4_t)vshlq_n_s16(v246, 6uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v247, v249);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v247, v249);
      int8x16_t v251 = (int32x4_t *)(a1 + 2 * a2);
      *int8x16_t v251 = vuzp1q_s32(v248, v250);
      *(int32x4_t *)((char *)v251 + a2) = vuzp2q_s32(v248, v250);
      return 40;
    case 1u:
      int16x8_t v196 = vdupq_n_s16(a3->u16[0] << 6);
      *(int16x8_t *)a1 = v196;
      *(int16x8_t *)(a1 + a2) = v196;
      *(int16x8_t *)(a1 + 2 * a2) = v196;
      *(int16x8_t *)(a1 + 3 * a2) = v196;
      return 2;
    default:
      unint64_t v252 = 8 * (a3 & 7);
      unint64_t v253 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v254 = v252 + 16;
      uint64_t v255 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v252;
      if (v252 >= 0x31) {
        v255 |= *(void *)(v253 + 8) << (-8 * (a3 & 7u));
      }
      unint64_t v256 = v252 + 160;
      int v257 = (a4 >> 6) | (4 * v255);
      uint16x8_t v258 = (uint16x8_t)vdupq_n_s16(v257 & 0xF);
      a9.i32[0] = v257 & 0xF;
      v259.i64[0] = 0x3000300030003;
      v259.i64[1] = 0x3000300030003;
      int8x16_t v260 = vbicq_s8((int8x16_t)vdupq_n_s16(((v255 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v258 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v259));
      int8x16_t v261 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a9, (int8x8_t)0x4000400040004), 0))));
      v262.i64[0] = 0x202020202020202;
      v262.i64[1] = 0x202020202020202;
      int8x16_t v263 = vandq_s8(v261, v262);
      if (vmaxvq_s8(v263) < 1)
      {
        int v273 = 0;
        v274.i64[0] = -1;
        v274.i64[1] = -1;
        int8x16_t v275 = v260;
        int8x16_t v276 = v260;
        int8x16_t v277 = v260;
        v278.i64[0] = -1;
        v278.i64[1] = -1;
        int8x16_t v279 = v260;
        v280.i64[0] = -1;
        v280.i64[1] = -1;
        v281.i64[0] = -1;
        v281.i64[1] = -1;
      }
      else
      {
        int8x16_t v264 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v263, v263));
        int8x16_t v265 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v264, (int16x8_t)v264));
        unint64_t v266 = vpaddq_s32((int32x4_t)v265, (int32x4_t)v265).u64[0];
        v267.i64[0] = v266;
        v267.i64[1] = HIDWORD(v266);
        int64x2_t v268 = v267;
        unint64_t v269 = vaddvq_s64(v267);
        unint64_t v270 = v269 + v254;
        if (v269 <= 0x80 && v256 >= v270)
        {
          unint64_t v282 = v254 & 0x38;
          int64x2_t v283 = vaddq_s64(vzip1q_s64((int64x2_t)0, v268), vdupq_n_s64(v282));
          int64x2_t v284 = (int64x2_t *)(v253 + ((v254 >> 3) & 8));
          int8x16_t v272 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v284, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v283)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v284->i64[0], 0), (uint64x2_t)vnegq_s64(v283)));
          if (v269 + v282 < 0x81)
          {
            int v273 = 0;
          }
          else
          {
            int v273 = 0;
            int8x16_t v272 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v284[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v283)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v284[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v283))), v272);
          }
          unint64_t v254 = v270;
        }
        else
        {
          int8x16_t v272 = 0uLL;
          int v273 = 1;
        }
        int32x2_t v285 = vzip1_s32(*(int32x2_t *)v265.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v265, v265, 8uLL));
        v286.i64[0] = v285.u32[0];
        v286.i64[1] = v285.u32[1];
        int64x2_t v287 = (int64x2_t)vshlq_u64((uint64x2_t)v272, (uint64x2_t)vnegq_s64(v286));
        *(int32x2_t *)v272.i8 = vmovn_s64((int64x2_t)v272);
        *(int32x2_t *)v287.i8 = vmovn_s64(v287);
        int8x16_t v288 = (int8x16_t)vzip1q_s32((int32x4_t)v272, (int32x4_t)v287);
        int16x8_t v289 = (int16x8_t)vshlq_u32((uint32x4_t)v288, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v264.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v264, v264, 8uLL)))));
        *(int16x4_t *)v288.i8 = vmovn_s32((int32x4_t)v288);
        *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
        int8x16_t v290 = (int8x16_t)vzip1q_s16((int16x8_t)v288, v289);
        *(int8x8_t *)v290.i8 = vzip1_s8(vmovn_s16((int16x8_t)v290), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v290, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v263.i8, *(int8x8_t *)v258.i8))))));
        v288.i64[0] = 0x101010101010101;
        v288.i64[1] = 0x101010101010101;
        int8x16_t v291 = vshlq_s8(v288, v263);
        v288.i64[0] = -1;
        v288.i64[1] = -1;
        v291.i32[0] = vandq_s8(v290, vaddq_s8(v291, v288)).u32[0];
        int16x8_t v292 = vdupq_n_s16(v291.i8[0]);
        int16x8_t v293 = vdupq_n_s16(v291.i8[1]);
        int16x8_t v294 = vdupq_n_s16(v291.i8[2]);
        int16x8_t v295 = vdupq_n_s16(v291.i8[3]);
        int8x16_t v279 = (int8x16_t)vsubq_s16((int16x8_t)v260, v292);
        int8x16_t v277 = (int8x16_t)vsubq_s16((int16x8_t)v260, v293);
        int8x16_t v276 = (int8x16_t)vsubq_s16((int16x8_t)v260, v294);
        int8x16_t v275 = (int8x16_t)vsubq_s16((int16x8_t)v260, v295);
        int8x16_t v281 = (int8x16_t)vceqzq_s16(v292);
        int8x16_t v280 = (int8x16_t)vceqzq_s16(v293);
        int8x16_t v278 = (int8x16_t)vceqzq_s16(v294);
        int8x16_t v274 = (int8x16_t)vceqzq_s16(v295);
      }
      v296.i64[0] = 0x7000700070007;
      v296.i64[1] = 0x7000700070007;
      int8x16_t v297 = 0uLL;
      int8x16_t v298 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v258, v296), (int8x16_t)0, 0xEuLL), v260);
      int8x16_t v299 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v298, (int16x8_t)v298));
      unint64_t v300 = vpaddq_s32((int32x4_t)v299, (int32x4_t)v299).u64[0];
      v301.i64[0] = v300;
      v301.i64[1] = HIDWORD(v300);
      int64x2_t v302 = v301;
      unint64_t v303 = vaddvq_s64(v301);
      unint64_t v304 = v303 + v254;
      if (v303 <= 0x80 && v256 >= v304)
      {
        unint64_t v306 = v254 & 0x3F;
        int64x2_t v307 = vaddq_s64(vzip1q_s64((int64x2_t)0, v302), vdupq_n_s64(v306));
        int64x2_t v308 = (int64x2_t *)(v253 + 8 * (v254 >> 6));
        int8x16_t v297 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v308, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v307)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v308->i64[0], 0), (uint64x2_t)vnegq_s64(v307)));
        if (v303 + v306 >= 0x81) {
          int8x16_t v297 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v308[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v307)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v308[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v307))), v297);
        }
        unint64_t v254 = v304;
      }
      else
      {
        int v273 = 1;
      }
      int v309 = a4 >> 6;
      if (v309 == 2)
      {
        BOOL v310 = v256 >= v254 + 8;
        if (v256 >= v254 + 8) {
          v254 += 8;
        }
        unint64_t v311 = v254 + 8;
        if (!v310 || v256 < v311) {
          int v273 = 1;
        }
        if (v256 >= v311) {
          v254 += 8;
        }
      }
      int8x16_t v313 = 0uLL;
      int8x16_t v314 = vextq_s8((int8x16_t)0, v279, 0xEuLL);
      int8x16_t v315 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v314, (int16x8_t)v314));
      unint64_t v316 = vpaddq_s32((int32x4_t)v315, (int32x4_t)v315).u64[0];
      v317.i64[0] = v316;
      v317.i64[1] = HIDWORD(v316);
      int64x2_t v318 = v317;
      unint64_t v319 = vaddvq_s64(v317);
      unint64_t v320 = v319 + v254;
      if (v319 <= 0x80 && v256 >= v320)
      {
        unint64_t v323 = v254 & 0x3F;
        int64x2_t v324 = vaddq_s64(vzip1q_s64((int64x2_t)0, v318), vdupq_n_s64(v323));
        int64x2_t v325 = (int64x2_t *)(v253 + 8 * (v254 >> 6));
        int8x16_t v322 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v325, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v324)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v325->i64[0], 0), (uint64x2_t)vnegq_s64(v324)));
        if (v319 + v323 >= 0x81) {
          int8x16_t v322 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v325[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v324)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v325[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v324))), v322);
        }
        unint64_t v254 = v320;
      }
      else
      {
        int v273 = 1;
        int8x16_t v322 = 0uLL;
      }
      int8x16_t v326 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v277, (int16x8_t)v277));
      unint64_t v327 = vpaddq_s32((int32x4_t)v326, (int32x4_t)v326).u64[0];
      v328.i64[0] = v327;
      v328.i64[1] = HIDWORD(v327);
      int64x2_t v329 = v328;
      unint64_t v330 = vaddvq_s64(v328);
      if (v330 < 0x81)
      {
        int32x2_t v331 = vzip1_s32(*(int32x2_t *)v326.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v326, v326, 8uLL));
        v332.i64[0] = v331.u32[0];
        v332.i64[1] = v331.u32[1];
        int64x2_t v333 = v332;
        int32x4_t v334 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v277.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v277, v277, 8uLL)));
        unint64_t v335 = v330 + v254;
        if (v256 >= v330 + v254)
        {
          unint64_t v336 = v254 & 0x3F;
          int64x2_t v337 = vaddq_s64(vzip1q_s64((int64x2_t)0, v329), vdupq_n_s64(v336));
          int64x2_t v338 = (int64x2_t *)(v253 + 8 * (v254 >> 6));
          int8x16_t v313 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v338, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v337)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v338->i64[0], 0), (uint64x2_t)vnegq_s64(v337)));
          if (v330 + v336 >= 0x81) {
            int8x16_t v313 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v338[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v337)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v338[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v337))), v313);
          }
          unint64_t v254 = v335;
        }
        else
        {
          int v273 = 1;
        }
        int64x2_t v339 = (int64x2_t)vshlq_u64((uint64x2_t)v313, (uint64x2_t)vnegq_s64(v333));
        *(int32x2_t *)v313.i8 = vmovn_s64((int64x2_t)v313);
        *(int32x2_t *)v339.i8 = vmovn_s64(v339);
        int16x8_t v340 = (int16x8_t)vzip1q_s32((int32x4_t)v313, (int32x4_t)v339);
        int16x8_t v341 = (int16x8_t)vshlq_u32((uint32x4_t)v340, (uint32x4_t)vnegq_s32(v334));
        *(int16x4_t *)v340.i8 = vmovn_s32((int32x4_t)v340);
        *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
        int8x16_t v313 = (int8x16_t)vzip1q_s16(v340, v341);
      }
      else
      {
        int v273 = 1;
      }
      int8x16_t v342 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v276, (int16x8_t)v276));
      unint64_t v343 = vpaddq_s32((int32x4_t)v342, (int32x4_t)v342).u64[0];
      v344.i64[0] = v343;
      v344.i64[1] = HIDWORD(v343);
      int64x2_t v345 = v344;
      unint64_t v346 = vaddvq_s64(v344);
      int8x16_t v347 = 0uLL;
      if (v346 <= 0x80)
      {
        int32x2_t v349 = vzip1_s32(*(int32x2_t *)v342.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v342, v342, 8uLL));
        v350.i64[0] = v349.u32[0];
        v350.i64[1] = v349.u32[1];
        int64x2_t v351 = v350;
        int32x4_t v352 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v276.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v276, v276, 8uLL)));
        unint64_t v353 = v346 + v254;
        if (v256 >= v346 + v254)
        {
          unint64_t v355 = v254 & 0x3F;
          int64x2_t v356 = vaddq_s64(vzip1q_s64((int64x2_t)0, v345), vdupq_n_s64(v355));
          int64x2_t v357 = (int64x2_t *)(v253 + 8 * (v254 >> 6));
          int8x16_t v354 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v357, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v356)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v357->i64[0], 0), (uint64x2_t)vnegq_s64(v356)));
          if (v346 + v355 >= 0x81) {
            int8x16_t v354 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v357[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v356)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v357[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v356))), v354);
          }
          unint64_t v254 = v353;
        }
        else
        {
          int8x16_t v354 = 0uLL;
          int v273 = 1;
        }
        int64x2_t v358 = (int64x2_t)vshlq_u64((uint64x2_t)v354, (uint64x2_t)vnegq_s64(v351));
        *(int32x2_t *)v354.i8 = vmovn_s64((int64x2_t)v354);
        *(int32x2_t *)v358.i8 = vmovn_s64(v358);
        int16x8_t v359 = (int16x8_t)vzip1q_s32((int32x4_t)v354, (int32x4_t)v358);
        int16x8_t v360 = (int16x8_t)vshlq_u32((uint32x4_t)v359, (uint32x4_t)vnegq_s32(v352));
        *(int16x4_t *)v359.i8 = vmovn_s32((int32x4_t)v359);
        *(int16x4_t *)v360.i8 = vmovn_s32((int32x4_t)v360);
        int16x8_t v348 = vzip1q_s16(v359, v360);
      }
      else
      {
        int v273 = 1;
        int16x8_t v348 = 0uLL;
      }
      int8x16_t v361 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v275, (int16x8_t)v275));
      unint64_t v362 = vpaddq_s32((int32x4_t)v361, (int32x4_t)v361).u64[0];
      v363.i64[0] = v362;
      v363.i64[1] = HIDWORD(v362);
      int64x2_t v364 = v363;
      unint64_t v365 = vaddvq_s64(v363);
      if (v365 > 0x80) {
        goto LABEL_399;
      }
      if (v256 >= v365 + v254)
      {
        int64x2_t v366 = vaddq_s64(vzip1q_s64((int64x2_t)0, v364), vdupq_n_s64(v254 & 0x3F));
        int64x2_t v367 = (int64x2_t *)(v253 + 8 * (v254 >> 6));
        int8x16_t v347 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v367, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v366)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v367->i64[0], 0), (uint64x2_t)vnegq_s64(v366)));
        if (v365 + (v254 & 0x3F) >= 0x81) {
          int8x16_t v347 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v367[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v366)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v367[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v366))), v347);
        }
        v254 += v365;
      }
      else
      {
        int v273 = 1;
      }
      if (v273 || (uint64_t v192 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v192) - v254 >= 9) || v309 == 2)
      {
LABEL_399:
        uint64_t v192 = 0;
        v434 |= 1023 << ((8 * &v434) & 0x30);
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        int64x2_t v368 = (void *)(a1 + a2);
        uint16x8_t v369 = (void *)(a1 + 2 * a2);
        *int64x2_t v368 = 0;
        v368[1] = 0;
        uint16x8_t v195 = (void *)(a1 + a2 + 2 * a2);
        *uint16x8_t v369 = 0;
        v369[1] = 0;
        goto LABEL_316;
      }
      int32x2_t v370 = vzip1_s32(*(int32x2_t *)v299.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v299, v299, 8uLL));
      int32x2_t v371 = vzip1_s32(*(int32x2_t *)v315.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v315, v315, 8uLL));
      v372.i64[0] = v370.u32[0];
      v372.i64[1] = v370.u32[1];
      int64x2_t v373 = v372;
      v372.i64[0] = v371.u32[0];
      v372.i64[1] = v371.u32[1];
      int64x2_t v374 = (int64x2_t)vshlq_u64((uint64x2_t)v297, (uint64x2_t)vnegq_s64(v373));
      int64x2_t v375 = (int64x2_t)vshlq_u64((uint64x2_t)v322, (uint64x2_t)vnegq_s64(v372));
      *(int32x2_t *)v297.i8 = vmovn_s64((int64x2_t)v297);
      *(int32x2_t *)v374.i8 = vmovn_s64(v374);
      *(int32x2_t *)v322.i8 = vmovn_s64((int64x2_t)v322);
      *(int32x2_t *)v375.i8 = vmovn_s64(v375);
      int16x8_t v376 = (int16x8_t)vzip1q_s32((int32x4_t)v297, (int32x4_t)v374);
      int16x8_t v377 = (int16x8_t)vzip1q_s32((int32x4_t)v322, (int32x4_t)v375);
      int16x8_t v378 = (int16x8_t)vshlq_u32((uint32x4_t)v376, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v298.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v298, v298, 8uLL)))));
      int16x8_t v379 = (int16x8_t)vshlq_u32((uint32x4_t)v377, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v314.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v314, v314, 8uLL)))));
      *(int16x4_t *)v376.i8 = vmovn_s32((int32x4_t)v376);
      *(int16x4_t *)v378.i8 = vmovn_s32((int32x4_t)v378);
      *(int16x4_t *)v377.i8 = vmovn_s32((int32x4_t)v377);
      *(int16x4_t *)v379.i8 = vmovn_s32((int32x4_t)v379);
      v380.i64[0] = 0x10001000100010;
      v380.i64[1] = 0x10001000100010;
      v381.i64[0] = 0x10001000100010;
      v381.i64[1] = 0x10001000100010;
      int16x8_t v382 = vzip1q_s16(v376, v378);
      v378.i64[0] = 0xF000F000F000FLL;
      v378.i64[1] = 0xF000F000F000FLL;
      int16x8_t v383 = vsubq_s16(v380, (int16x8_t)v298);
      int16x8_t v384 = vzip1q_s16(v377, v379);
      v379.i64[0] = 0xF000F000F000FLL;
      v379.i64[1] = 0xF000F000F000FLL;
      int32x2_t v385 = vzip1_s32(*(int32x2_t *)v361.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v361, v361, 8uLL));
      v386.i64[0] = 0xF000F000F000FLL;
      v386.i64[1] = 0xF000F000F000FLL;
      v387.i64[0] = 0x10001000100010;
      v387.i64[1] = 0x10001000100010;
      int16x8_t v388 = vaddq_s16((int16x8_t)v298, v378);
      int16x8_t v389 = vaddq_s16((int16x8_t)v314, v379);
      int16x8_t v390 = vshlq_s16(v384, vsubq_s16(v381, (int16x8_t)v314));
      int16x8_t v391 = vshlq_s16((int16x8_t)v313, vsubq_s16(v381, (int16x8_t)v277));
      int16x8_t v392 = vshlq_s16(v348, vsubq_s16(v381, (int16x8_t)v276));
      v372.i64[0] = v385.u32[0];
      v372.i64[1] = v385.u32[1];
      int32x4_t v393 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v275.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v275, v275, 8uLL)));
      int16x8_t v394 = vaddq_s16((int16x8_t)v275, v386);
      int16x8_t v395 = vsubq_s16(v387, (int16x8_t)v275);
      int16x8_t v396 = vdupq_n_s16((unsigned __int16)v255 >> 6);
      int8x16_t v397 = (int8x16_t)vshlq_s16(vshlq_s16(v382, v383), v388);
      int16x8_t v398 = vshlq_s16(v390, v389);
      int64x2_t v399 = (int64x2_t)vshlq_u64((uint64x2_t)v347, (uint64x2_t)vnegq_s64(v372));
      *(int32x2_t *)v390.i8 = vmovn_s64((int64x2_t)v347);
      *(int32x2_t *)v399.i8 = vmovn_s64(v399);
      int16x8_t v400 = (int16x8_t)vzip1q_s32((int32x4_t)v390, (int32x4_t)v399);
      int16x8_t v401 = (int16x8_t)vshlq_u32((uint32x4_t)v400, (uint32x4_t)vnegq_s32(v393));
      *(int16x4_t *)v400.i8 = vmovn_s32((int32x4_t)v400);
      *(int16x4_t *)v401.i8 = vmovn_s32((int32x4_t)v401);
      int16x8_t v402 = vaddq_s16((int16x8_t)vandq_s8(v397, v281), v398);
      int8x16_t v403 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v397.i8, 0);
      int8x16_t v404 = (int8x16_t)vsubq_s16(v402, (int16x8_t)vandq_s8(v403, v281));
      int8x16_t v405 = (int8x16_t)vsubq_s16(vshlq_s16(v391, vaddq_s16((int16x8_t)v277, v379)), (int16x8_t)vandq_s8(v403, v280));
      int8x16_t v406 = (int8x16_t)vsubq_s16(vshlq_s16(v392, vaddq_s16((int16x8_t)v276, v379)), (int16x8_t)vandq_s8(v403, v278));
      int8x16_t v407 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v400, v401), v395), v394), (int16x8_t)vandq_s8(v403, v274));
      v408.i64[0] = 0x1000100010001;
      v408.i64[1] = 0x1000100010001;
      if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v258 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v408)))
      {
        int8x16_t v409 = v404;
        v409.i16[0] = v404.i16[7];
        v409.i16[7] = v404.i16[0];
        int8x16_t v410 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v258 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
        int8x16_t v411 = vbslq_s8(v410, v409, v404);
        int8x16_t v412 = (int8x16_t)vaddq_s16((int16x8_t)v411, (int16x8_t)vandq_s8(vqtbl1q_s8(v411, (int8x16_t)xmmword_242EA7480), v410));
        int8x16_t v404 = (int8x16_t)vaddq_s16((int16x8_t)v412, (int16x8_t)vandq_s8(vqtbl1q_s8(v412, (int8x16_t)xmmword_242EA7490), v410));
        int8x16_t v413 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v405, (int8x16_t)xmmword_242EA74A0), v410), (int16x8_t)v405);
        int8x16_t v405 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v413, (int8x16_t)xmmword_242EA74B0), v410), (int16x8_t)v413);
        int8x16_t v414 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v406, (int8x16_t)xmmword_242EA74C0), v410), (int16x8_t)v406);
        int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA74D0), v410), (int16x8_t)v414);
        int8x16_t v415 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA74E0), v410), (int16x8_t)v407);
        int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v415, (int8x16_t)xmmword_242EA74F0), v410), (int16x8_t)v415);
      }
      int32x4_t v416 = (int32x4_t)vshlq_n_s16(vaddq_s16(v396, (int16x8_t)v404), 6uLL);
      int32x4_t v417 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v405, v396), 6uLL);
      int32x4_t v418 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v406, v396), 6uLL);
      int32x4_t v419 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v407, v396), 6uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v416, v418);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v416, v418);
      int32x4_t v420 = (int32x4_t *)(a1 + 2 * a2);
      *int32x4_t v420 = vuzp1q_s32(v417, v419);
      *(int32x4_t *)((char *)v420 + a2) = vuzp2q_s32(v417, v419);
      break;
  }
  return v192;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(int64x2_t *a1, uint64_t a2, int64x2_t *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  if (a4 > 78)
  {
    if (a4 == 79)
    {
      v26.i64[0] = 0xA000A000A000ALL;
      v26.i64[1] = 0xA000A000A000ALL;
      int8x16_t v27 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v26, v26));
      v26.i64[0] = vpaddq_s32((int32x4_t)v27, (int32x4_t)v27).u64[0];
      v28.i64[0] = v26.u32[0];
      v28.i64[1] = v26.u32[1];
      int64x2_t v29 = v28;
      unint64_t v30 = vaddvq_s64(v28);
      int64x2_t v31 = 0uLL;
      if (v30 <= 0x80)
      {
        uint64_t v64 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v65 = vzip1_s32(*(int32x2_t *)v27.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v27, v27, 8uLL));
        v66.i64[0] = v65.u32[0];
        v66.i64[1] = v65.u32[1];
        int64x2_t v67 = v66;
        int64x2_t v68 = vzip1q_s64((int64x2_t)0, v29);
        unint64_t v69 = 8 * (a3 & 7);
        unint64_t v70 = v30 + v69;
        int64x2_t v71 = vaddq_s64(v68, vdupq_n_s64(v69));
        int8x16_t v72 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v71)));
        if (v30 + v69 > 0x80) {
          int8x16_t v72 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v64[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v64[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), v72);
        }
        uint64x2_t v73 = (uint64x2_t)vnegq_s64(v67);
        int64x2_t v74 = (int64x2_t)vshlq_u64((uint64x2_t)v72, v73);
        *(int32x2_t *)v72.i8 = vmovn_s64((int64x2_t)v72);
        *(int32x2_t *)v74.i8 = vmovn_s64(v74);
        unint64_t v75 = v70 & 0x3F;
        unint64_t v76 = (int64x2_t *)((char *)v64 + 8 * (v70 >> 6));
        int8x16_t v77 = (int8x16_t)vaddq_s64(v68, vdupq_n_s64(v75));
        unint64_t v78 = v30 + v70;
        int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v76, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v76->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v77)));
        if (v30 + v75 >= 0x81)
        {
          int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v76[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v76[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v77)));
          int8x16_t v79 = vorrq_s8(v77, v79);
        }
        int64x2_t v80 = (int64x2_t)vshlq_u64((uint64x2_t)v79, v73);
        *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v79);
        *(int32x2_t *)v80.i8 = vmovn_s64(v80);
        unint64_t v81 = v78 & 0x3F;
        int v82 = (int64x2_t *)((char *)v64 + 8 * (v78 >> 6));
        int64x2_t v83 = vaddq_s64(v68, vdupq_n_s64(v81));
        unint64_t v84 = v30 + v78;
        int8x16_t v85 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v82, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v83)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v82->i64[0], 0), (uint64x2_t)vnegq_s64(v83)));
        if (v30 + v81 > 0x80) {
          int8x16_t v85 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v82[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v83)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v82[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v83))), v85);
        }
        int16x8_t v86 = (int16x8_t)vzip1q_s32((int32x4_t)v72, (int32x4_t)v74);
        int16x8_t v87 = (int16x8_t)vzip1q_s32((int32x4_t)v77, (int32x4_t)v80);
        int64x2_t v88 = (int64x2_t)vshlq_u64((uint64x2_t)v85, v73);
        *(int32x2_t *)v74.i8 = vmovn_s64((int64x2_t)v85);
        *(int32x2_t *)v88.i8 = vmovn_s64(v88);
        int16x8_t v89 = (int16x8_t)vzip1q_s32((int32x4_t)v74, (int32x4_t)v88);
        unint64_t v90 = v84 & 0x3F;
        uint64_t v91 = (int64x2_t *)((char *)v64 + 8 * (v84 >> 6));
        int64x2_t v92 = vaddq_s64(v68, vdupq_n_s64(v90));
        int8x16_t v93 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v92));
        unint64_t v94 = v30 + v84;
        int64x2_t v95 = vsubq_s64(vdupq_n_s64(0x40uLL), v92);
        int8x16_t v96 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)v95);
        int8x16_t v97 = vorrq_s8(v96, v93);
        if (v30 + v90 >= 0x81)
        {
          int64x2_t v98 = v91[1];
          uint64x2_t v99 = (uint64x2_t)vdupq_lane_s64(v98.i64[0], 0);
          int8x16_t v96 = (int8x16_t)vdupq_laneq_s64(v98, 1);
          int8x16_t v93 = (int8x16_t)vshlq_u64(v99, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92));
          int64x2_t v95 = vdupq_n_s64(0xC0uLL);
          int8x16_t v97 = vorrq_s8(vorrq_s8(v93, (int8x16_t)vshlq_u64((uint64x2_t)v96, (uint64x2_t)vsubq_s64(v95, v92))), v97);
        }
        v100.i64[0] = 0x1000100010001;
        v100.i64[1] = 0x1000100010001;
        *(int16x4_t *)v96.i8 = vmovn_s32((int32x4_t)v86);
        *(int16x4_t *)v86.i8 = vshrn_n_s32((int32x4_t)v86, 0xAuLL);
        *(int16x4_t *)v93.i8 = vmovn_s32((int32x4_t)v87);
        *(int16x4_t *)v87.i8 = vshrn_n_s32((int32x4_t)v87, 0xAuLL);
        *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v89);
        *(int16x4_t *)v89.i8 = vshrn_n_s32((int32x4_t)v89, 0xAuLL);
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v97, v73);
        *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        int16x8_t v102 = (int16x8_t)vzip1q_s32((int32x4_t)v97, (int32x4_t)v101);
        *(int16x4_t *)v97.i8 = vmovn_s32((int32x4_t)v102);
        *(int16x4_t *)v102.i8 = vshrn_n_s32((int32x4_t)v102, 0xAuLL);
        unint64_t v103 = v94 & 0x3F;
        unint64_t v104 = (int64x2_t *)((char *)v64 + 8 * (v94 >> 6));
        int64x2_t v105 = vaddq_s64(v68, vdupq_n_s64(v103));
        unint64_t v106 = v30 + v94;
        int8x16_t v107 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v104, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v104->i64[0], 0), (uint64x2_t)vnegq_s64(v105)));
        if (v30 + v103 > 0x80) {
          int8x16_t v107 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v104[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v104[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v105))), v107);
        }
        int16x8_t v108 = vshlq_n_s16(v100, 0xAuLL);
        v109.i64[0] = -1;
        v109.i64[1] = -1;
        int64x2_t v110 = (int64x2_t)vshlq_u64((uint64x2_t)v107, v73);
        *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
        *(int32x2_t *)v110.i8 = vmovn_s64(v110);
        int16x8_t v111 = (int16x8_t)vzip1q_s32((int32x4_t)v107, (int32x4_t)v110);
        *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v111);
        *(int16x4_t *)v111.i8 = vshrn_n_s32((int32x4_t)v111, 0xAuLL);
        unint64_t v112 = (int64x2_t *)((char *)v64 + 8 * (v106 >> 6));
        int64x2_t v113 = vaddq_s64(v68, vdupq_n_s64(v106 & 0x3F));
        unint64_t v114 = v30 + v106;
        int8x16_t v115 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v113)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113)));
        if (v30 + (v106 & 0x3F) >= 0x81) {
          int8x16_t v115 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v113))), v115);
        }
        int8x16_t v116 = (int8x16_t)vaddq_s16(v108, v109);
        int8x16_t v117 = (int8x16_t)vzip1q_s16((int16x8_t)v96, v86);
        int8x16_t v118 = (int8x16_t)vzip1q_s16((int16x8_t)v93, v87);
        int8x16_t v119 = (int8x16_t)vzip1q_s16((int16x8_t)v95, v89);
        int8x16_t v120 = (int8x16_t)vzip1q_s16((int16x8_t)v97, v102);
        int8x16_t v121 = (int8x16_t)vzip1q_s16((int16x8_t)v107, v111);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v115, v73);
        *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v115);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v97, (int32x4_t)v122);
        *(int16x4_t *)v97.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xAuLL);
        int8x16_t v124 = (int8x16_t)vzip1q_s16((int16x8_t)v97, v123);
        unint64_t v125 = v30 + v114;
        unint64_t v126 = v114 & 0x3F;
        int64x2_t v127 = vaddq_s64(v68, vdupq_n_s64(v126));
        unint64_t v128 = (int64x2_t *)((char *)v64 + 8 * (v114 >> 6));
        int8x16_t v129 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v128, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128->i64[0], 0), (uint64x2_t)vnegq_s64(v127)));
        if (v30 + v126 > 0x80) {
          int8x16_t v129 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v128[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v127))), v129);
        }
        int16x8_t v130 = (int16x8_t)vandq_s8(v117, v116);
        int16x8_t v131 = (int16x8_t)vandq_s8(v118, v116);
        int16x8_t v132 = (int16x8_t)vandq_s8(v119, v116);
        int16x8_t v133 = (int16x8_t)vandq_s8(v120, v116);
        int16x8_t v134 = (int16x8_t)vandq_s8(v121, v116);
        int16x8_t v135 = (int16x8_t)vandq_s8(v124, v116);
        int64x2_t v136 = (int64x2_t)vshlq_u64((uint64x2_t)v129, v73);
        *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
        *(int32x2_t *)v136.i8 = vmovn_s64(v136);
        int16x8_t v137 = (int16x8_t)vzip1q_s32((int32x4_t)v129, (int32x4_t)v136);
        *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v137);
        *(int16x4_t *)v137.i8 = vshrn_n_s32((int32x4_t)v137, 0xAuLL);
        __int16 v138 = (int64x2_t *)((char *)v64 + 8 * (v125 >> 6));
        int64x2_t v139 = vaddq_s64(v68, vdupq_n_s64(v125 & 0x3F));
        int16x8_t v140 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v129, v137), v116);
        int8x16_t v141 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v138, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
        if (v30 + (v125 & 0x3F) >= 0x81) {
          int8x16_t v141 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v138[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), v141);
        }
        int64x2_t v33 = (int64x2_t)vshlq_n_s16(v130, 6uLL);
        int64x2_t v34 = (int64x2_t)vshlq_n_s16(v131, 6uLL);
        int64x2_t v36 = (int64x2_t)vshlq_n_s16(v132, 6uLL);
        int64x2_t v35 = (int64x2_t)vshlq_n_s16(v133, 6uLL);
        int64x2_t v31 = (int64x2_t)vshlq_n_s16(v134, 6uLL);
        int64x2_t v32 = (int64x2_t)vshlq_n_s16(v135, 6uLL);
        int64x2_t v142 = (int64x2_t)vshlq_u64((uint64x2_t)v141, v73);
        *(int32x2_t *)v133.i8 = vmovn_s64((int64x2_t)v141);
        *(int32x2_t *)v142.i8 = vmovn_s64(v142);
        int16x8_t v143 = (int16x8_t)vzip1q_s32((int32x4_t)v133, (int32x4_t)v142);
        *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v143);
        *(int16x4_t *)v143.i8 = vshrn_n_s32((int32x4_t)v143, 0xAuLL);
        int16x8_t v144 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v133, v143), v116);
        int64x2_t v38 = (int64x2_t)vshlq_n_s16(v140, 6uLL);
        int64x2_t v37 = (int64x2_t)vshlq_n_s16(v144, 6uLL);
      }
      else
      {
        int64x2_t v32 = 0uLL;
        int64x2_t v33 = 0uLL;
        int64x2_t v34 = 0uLL;
        int64x2_t v35 = 0uLL;
        int64x2_t v36 = 0uLL;
        int64x2_t v37 = 0uLL;
        int64x2_t v38 = 0uLL;
      }
      unint64_t v145 = (int64x2_t *)((char *)a1 + a2);
      *a1 = vzip1q_s64(v33, v34);
      a1[1] = vzip1q_s64(v31, v32);
      unint64_t v146 = (int64x2_t *)((char *)a1 + 2 * a2);
      int64x2_t *v145 = vzip2q_s64(v33, v34);
      v145[1] = vzip2q_s64(v31, v32);
      *unint64_t v146 = vzip1q_s64(v36, v35);
      v146[1] = vzip1q_s64(v38, v37);
      int v147 = (int64x2_t *)((char *)v146 + a2);
      *int v147 = vzip2q_s64(v36, v35);
      v147[1] = vzip2q_s64(v38, v37);
      return 80;
    }
    if (a4 == 127)
    {
      int64x2_t v11 = *a3;
      int64x2_t v12 = a3[1];
      int64x2_t v13 = a3[2];
      int64x2_t v14 = a3[3];
      int64x2_t v15 = a3[4];
      int64x2_t v16 = a3[5];
      int64x2_t v17 = a3[6];
      int64x2_t v18 = a3[7];
      unsigned int v19 = (int64x2_t *)((char *)a1 + a2);
      *a1 = vzip1q_s64(*a3, v12);
      a1[1] = vzip1q_s64(v15, v16);
      uint64_t v20 = (int64x2_t *)((char *)a1 + 2 * a2);
      *unsigned int v19 = vzip2q_s64(v11, v12);
      v19[1] = vzip2q_s64(v15, v16);
      *uint64_t v20 = vzip1q_s64(v13, v14);
      v20[1] = vzip1q_s64(v17, v18);
      uint64_t v21 = (int64x2_t *)((char *)v20 + a2);
      *uint64_t v21 = vzip2q_s64(v13, v14);
      v21[1] = vzip2q_s64(v17, v18);
      return 128;
    }
  }
  else
  {
    if (!a4)
    {
      uint64_t v10 = 0;
      long long v22 = 0uLL;
      *a1 = 0u;
      a1[1] = 0u;
      uint64_t v23 = &a1->i8[a2];
      *(_OWORD *)uint64_t v23 = 0u;
      *((_OWORD *)v23 + 1) = 0u;
      BOOL v24 = &a1->i8[2 * a2];
      *(_OWORD *)BOOL v24 = 0u;
      *((_OWORD *)v24 + 1) = 0u;
      uint64_t v25 = &a1->i8[2 * a2 + a2];
LABEL_116:
      *(_OWORD *)uint64_t v25 = v22;
      *((_OWORD *)v25 + 1) = v22;
      return v10;
    }
    if (a4 == 2)
    {
      int32x4_t v6 = vdupq_n_s32((a3->i32[0] << 12) & 0xFFC00000 | ((a3->i32[0] & 0x3FF) << 6));
      *a1 = (int64x2_t)v6;
      a1[1] = (int64x2_t)v6;
      int8x16_t v7 = (int32x4_t *)&a1->i8[a2];
      *int8x16_t v7 = v6;
      v7[1] = v6;
      int8x16_t v8 = (int32x4_t *)((char *)a1 + 2 * a2);
      *int8x16_t v8 = v6;
      v8[1] = v6;
      uint64_t v9 = (int32x4_t *)((char *)a1 + 2 * a2 + a2);
      *uint64_t v9 = v6;
      v9[1] = v6;
      return 3;
    }
  }
  unint64_t v39 = 8 * (a3 & 7);
  unint64_t v40 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = v39 + 18;
  uint64_t v42 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v39;
  if (v39 >= 0x2F) {
    v42 |= *(void *)(v40 + 8) << (-8 * (a3 & 7u));
  }
  a5.i32[0] = v42;
  a5.i32[1] = (unsigned __int16)v42 >> 5;
  *(int8x8_t *)a5.i8 = vand_s8(*(int8x8_t *)a5.i8, (int8x8_t)0x1F0000001FLL);
  *(int16x4_t *)a5.i8 = vmovn_s32(a5);
  a6.i32[0] = (unsigned __int16)v42 >> 10;
  a6.i32[1] = v42 >> 14;
  *(int32x2_t *)a6.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
  *(int16x4_t *)a6.i8 = vmovn_s32(a6);
  unint64_t v43 = v39 + 38;
  unint64_t v44 = v41 >> 6;
  unint64_t v45 = v41 & 0x3A;
  uint64_t v46 = *(void *)(v40 + 8 * v44) >> v45;
  if (v45 >= 0x2D) {
    v46 |= *(void *)(v40 + 8 * v44 + 8) << -(char)v45;
  }
  int8x16_t v47 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a5.i8, 0);
  int8x16_t v48 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
  unint64_t v49 = (8 * (a3 & 7)) | 0x280;
  v50.i64[0] = 0x3000300030003;
  v50.i64[1] = 0x3000300030003;
  int16x8_t v51 = (int16x8_t)vandq_s8(v47, v50);
  int8x16_t v52 = vbicq_s8(v48, (int8x16_t)vceqq_s16(v51, (int16x8_t)v50));
  v50.i64[0] = 0x202020202020202;
  v50.i64[1] = 0x202020202020202;
  int8x16_t v53 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v47.i8, (int8x8_t)0x4000400040004)))), v50);
  if (vmaxvq_s8(v53) < 1)
  {
    int v63 = 0;
    v148.i64[0] = -1;
    v148.i64[1] = -1;
    int8x16_t v149 = v52;
    int8x16_t v150 = v52;
    int8x16_t v151 = v52;
    v152.i64[0] = -1;
    v152.i64[1] = -1;
    int8x16_t v153 = v52;
    v154.i64[0] = -1;
    v154.i64[1] = -1;
    v155.i64[0] = -1;
    v155.i64[1] = -1;
  }
  else
  {
    int8x16_t v54 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v53, v53));
    int8x16_t v55 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v54, (int16x8_t)v54));
    unint64_t v56 = vpaddq_s32((int32x4_t)v55, (int32x4_t)v55).u64[0];
    v57.i64[0] = v56;
    v57.i64[1] = HIDWORD(v56);
    int64x2_t v58 = v57;
    unint64_t v59 = vaddvq_s64(v57);
    unint64_t v60 = v43 + v59;
    if (v59 <= 0x80 && v49 >= v60)
    {
      unint64_t v156 = v43 & 0x3E;
      int64x2_t v157 = vaddq_s64(vdupq_n_s64(v156), vzip1q_s64((int64x2_t)0, v58));
      uint64_t v158 = (int64x2_t *)(v40 + ((v43 >> 3) & 8));
      int8x16_t v62 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v158, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v157)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v158->i64[0], 0), (uint64x2_t)vnegq_s64(v157)));
      if (v156 + v59 < 0x81)
      {
        int v63 = 0;
      }
      else
      {
        int v63 = 0;
        int8x16_t v62 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v158[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v157)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v158[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v157))), v62);
      }
      unint64_t v43 = v60;
    }
    else
    {
      int8x16_t v62 = 0uLL;
      int v63 = 1;
    }
    int32x2_t v159 = vzip1_s32(*(int32x2_t *)v55.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v55, v55, 8uLL));
    v160.i64[0] = v159.u32[0];
    v160.i64[1] = v159.u32[1];
    int64x2_t v161 = (int64x2_t)vshlq_u64((uint64x2_t)v62, (uint64x2_t)vnegq_s64(v160));
    *(int32x2_t *)v62.i8 = vmovn_s64((int64x2_t)v62);
    *(int32x2_t *)v161.i8 = vmovn_s64(v161);
    int8x16_t v162 = (int8x16_t)vzip1q_s32((int32x4_t)v62, (int32x4_t)v161);
    int16x8_t v163 = (int16x8_t)vshlq_u32((uint32x4_t)v162, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v54.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v54, v54, 8uLL)))));
    *(int16x4_t *)v162.i8 = vmovn_s32((int32x4_t)v162);
    *(int16x4_t *)v163.i8 = vmovn_s32((int32x4_t)v163);
    int16x8_t v164 = vzip1q_s16((int16x8_t)v162, v163);
    v162.i64[0] = 0x101010101010101;
    v162.i64[1] = 0x101010101010101;
    *(int8x8_t *)v165.i8 = vand_s8(vzip1_s8(vmovn_s16(v164), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v164, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v53.i8, *(int8x8_t *)v47.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v162, v53), (int8x8_t)-1));
    v165.i64[1] = v165.i64[0];
    *(int8x8_t *)v165.i8 = vqtbl1_s8(v165, (int8x8_t)0x703060205010400);
    *(int16x4_t *)v164.i8 = vdup_lane_s16(*(int16x4_t *)v165.i8, 0);
    *(int16x4_t *)v162.i8 = vdup_lane_s16(*(int16x4_t *)v165.i8, 1);
    int8x8_t v166 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v165.i8, 2);
    int8x8_t v167 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v165.i8, 3);
    int8x16_t v153 = (int8x16_t)vsubw_s8((int16x8_t)v52, *(int8x8_t *)v164.i8);
    int8x16_t v151 = (int8x16_t)vsubw_s8((int16x8_t)v52, *(int8x8_t *)v162.i8);
    int8x16_t v150 = (int8x16_t)vsubw_s8((int16x8_t)v52, v166);
    int8x16_t v149 = (int8x16_t)vsubw_s8((int16x8_t)v52, v167);
    int8x16_t v155 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v164.i8));
    int8x16_t v154 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v162.i8));
    int8x16_t v152 = (int8x16_t)vmovl_s8(vceqz_s8(v166));
    int8x16_t v148 = (int8x16_t)vmovl_s8(vceqz_s8(v167));
  }
  v168.i64[0] = 0x8000800080008;
  v168.i64[1] = 0x8000800080008;
  int8x16_t v169 = 0uLL;
  int8x16_t v170 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v47, v168), (int8x16_t)0, 0xCuLL), v52);
  int8x16_t v171 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
  v168.i64[0] = vpaddq_s32((int32x4_t)v171, (int32x4_t)v171).u64[0];
  v172.i64[0] = v168.u32[0];
  v172.i64[1] = v168.u32[1];
  int64x2_t v173 = v172;
  unint64_t v174 = vaddvq_s64(v172);
  unint64_t v175 = v43 + v174;
  if (v174 <= 0x80 && v49 >= v175)
  {
    unint64_t v177 = v43 & 0x3F;
    int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v173));
    uint64_t v179 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v169 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
    if (v177 + v174 >= 0x81) {
      int8x16_t v169 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v169);
    }
    unint64_t v43 = v175;
  }
  else
  {
    int v63 = 1;
  }
  int v180 = v47.i8[0] & 3;
  if (v180 == 2)
  {
    BOOL v181 = v49 < v43 + 8;
    unint64_t v182 = v43 + 16;
    if (v49 >= v43 + 8) {
      v43 += 8;
    }
    if (v182 > v49 || v181) {
      int v63 = 1;
    }
    else {
      v43 += 8;
    }
  }
  int8x16_t v184 = 0uLL;
  int8x16_t v185 = vextq_s8((int8x16_t)0, v153, 0xCuLL);
  int8x16_t v186 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v185, (int16x8_t)v185));
  unint64_t v187 = vpaddq_s32((int32x4_t)v186, (int32x4_t)v186).u64[0];
  v188.i64[0] = v187;
  v188.i64[1] = HIDWORD(v187);
  int64x2_t v189 = v188;
  unint64_t v190 = vaddvq_s64(v188);
  unint64_t v191 = v43 + v190;
  if (v190 <= 0x80 && v49 >= v191)
  {
    unint64_t v194 = v43 & 0x3F;
    int64x2_t v195 = vaddq_s64(vdupq_n_s64(v194), vzip1q_s64((int64x2_t)0, v189));
    int16x8_t v196 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v193 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v196, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196->i64[0], 0), (uint64x2_t)vnegq_s64(v195)));
    if (v194 + v190 >= 0x81) {
      int8x16_t v193 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v196[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v195))), v193);
    }
    unint64_t v43 = v191;
  }
  else
  {
    int v63 = 1;
    int8x16_t v193 = 0uLL;
  }
  int8x16_t v197 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v153, (int16x8_t)v153));
  unint64_t v198 = vpaddq_s32((int32x4_t)v197, (int32x4_t)v197).u64[0];
  v199.i64[0] = v198;
  v199.i64[1] = HIDWORD(v198);
  int64x2_t v200 = v199;
  unint64_t v201 = vaddvq_s64(v199);
  unint64_t v202 = v43 + v201;
  if (v201 <= 0x80 && v49 >= v202)
  {
    unint64_t v204 = v43 & 0x3F;
    int64x2_t v205 = vaddq_s64(vdupq_n_s64(v204), vzip1q_s64((int64x2_t)0, v200));
    int16x8_t v206 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v184 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v206, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v205)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v206->i64[0], 0), (uint64x2_t)vnegq_s64(v205)));
    if (v204 + v201 >= 0x81) {
      int8x16_t v184 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v206[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v205)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v206[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v205))), v184);
    }
    unint64_t v43 = v202;
  }
  else
  {
    int v63 = 1;
  }
  int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v151, (int16x8_t)v151));
  unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
  v209.i64[0] = v208;
  v209.i64[1] = HIDWORD(v208);
  int64x2_t v210 = v209;
  unint64_t v211 = vaddvq_s64(v209);
  unint64_t v212 = v43 + v211;
  int8x16_t v213 = 0uLL;
  if (v211 <= 0x80 && v49 >= v212)
  {
    unint64_t v216 = v43 & 0x3F;
    int64x2_t v217 = vaddq_s64(vdupq_n_s64(v216), vzip1q_s64((int64x2_t)0, v210));
    int64x2_t v218 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v218, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218->i64[0], 0), (uint64x2_t)vnegq_s64(v217)));
    if (v216 + v211 >= 0x81) {
      int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v218[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v217))), v215);
    }
    unint64_t v43 = v212;
    if (v211 > 0x80) {
      goto LABEL_90;
    }
  }
  else
  {
    int v63 = 1;
    int8x16_t v215 = 0uLL;
    if (v211 > 0x80) {
      goto LABEL_90;
    }
  }
  unint64_t v219 = v43 + v211;
  if (v49 >= v43 + v211)
  {
    unint64_t v220 = v43 & 0x3F;
    int64x2_t v221 = vaddq_s64(vdupq_n_s64(v220), vzip1q_s64((int64x2_t)0, v210));
    int32x4_t v222 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v222, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222->i64[0], 0), (uint64x2_t)vnegq_s64(v221)));
    if (v220 + v211 >= 0x81) {
      int8x16_t v213 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v222[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v221))), v213);
    }
    goto LABEL_91;
  }
LABEL_90:
  int v63 = 1;
  unint64_t v219 = v43;
LABEL_91:
  int8x16_t v223 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v150, (int16x8_t)v150));
  unint64_t v224 = vpaddq_s32((int32x4_t)v223, (int32x4_t)v223).u64[0];
  v225.i64[0] = v224;
  v225.i64[1] = HIDWORD(v224);
  int64x2_t v226 = v225;
  unint64_t v227 = vaddvq_s64(v225);
  int8x16_t v228 = 0uLL;
  if (v227 > 0x80 || (unint64_t v229 = v219 + v227, v49 < v219 + v227))
  {
    int v63 = 1;
    unint64_t v229 = v219;
    int8x16_t v232 = 0uLL;
  }
  else
  {
    int64x2_t v230 = vaddq_s64(vdupq_n_s64(v219 & 0x3F), vzip1q_s64((int64x2_t)0, v226));
    int64x2_t v231 = (int64x2_t *)(v40 + 8 * (v219 >> 6));
    int8x16_t v232 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v231, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v230)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231->i64[0], 0), (uint64x2_t)vnegq_s64(v230)));
    if ((v219 & 0x3F) + v227 >= 0x81) {
      int8x16_t v232 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v230)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v231[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v230))), v232);
    }
  }
  if (v227 > 0x80 || (unint64_t v233 = v229 + v227, v49 < v229 + v227))
  {
    int v63 = 1;
    unint64_t v233 = v229;
  }
  else
  {
    int64x2_t v234 = vaddq_s64(vdupq_n_s64(v229 & 0x3F), vzip1q_s64((int64x2_t)0, v226));
    int8x16_t v235 = (int64x2_t *)(v40 + 8 * (v229 >> 6));
    int8x16_t v228 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v235, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235->i64[0], 0), (uint64x2_t)vnegq_s64(v234)));
    if ((v229 & 0x3F) + v227 >= 0x81) {
      int8x16_t v228 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v235[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v234))), v228);
    }
  }
  int8x16_t v236 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v149, (int16x8_t)v149));
  unint64_t v237 = vpaddq_s32((int32x4_t)v236, (int32x4_t)v236).u64[0];
  v238.i64[0] = v237;
  v238.i64[1] = HIDWORD(v237);
  int64x2_t v239 = v238;
  unint64_t v240 = vaddvq_s64(v238);
  if (v240 > 0x80 || (unint64_t v241 = v233 + v240, v49 < v233 + v240))
  {
    int v63 = 1;
    unint64_t v241 = v233;
    int8x16_t v245 = 0uLL;
  }
  else
  {
    unint64_t v242 = v233 & 0x3F;
    int64x2_t v243 = vaddq_s64(vdupq_n_s64(v242), vzip1q_s64((int64x2_t)0, v239));
    int64x2_t v244 = (int64x2_t *)(v40 + 8 * (v233 >> 6));
    int8x16_t v245 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v244, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v243)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v244->i64[0], 0), (uint64x2_t)vnegq_s64(v243)));
    if (v242 + v240 >= 0x81) {
      int8x16_t v245 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v244[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v243)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v244[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v243))), v245);
    }
  }
  if (v240 > 0x80 || v49 < v241 + v240) {
    goto LABEL_114;
  }
  int64x2_t v246 = vaddq_s64(vdupq_n_s64(v241 & 0x3F), vzip1q_s64((int64x2_t)0, v239));
  int32x4_t v247 = (int64x2_t *)(v40 + 8 * (v241 >> 6));
  int8x16_t v248 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v247, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v246)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v247->i64[0], 0), (uint64x2_t)vnegq_s64(v246)));
  if ((v241 & 0x3F) + v240 >= 0x81) {
    int8x16_t v248 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v247[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v246)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v247[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v246))), v248);
  }
  if (v63 || (uint64_t v10 = a4 + 1, v49 + 8 * v10 - (v241 + v240) - 640 >= 9))
  {
LABEL_114:
    uint64_t v10 = 0;
    unint64_t v249 = (unint64_t)&v369;
LABEL_115:
    *(void *)(v249 & 0xFFFFFFFFFFFFFFF8) |= 1023 << ((8 * v249) & 0x20);
    long long v22 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    int32x4_t v250 = &a1->i8[a2];
    *(_OWORD *)int32x4_t v250 = 0u;
    *((_OWORD *)v250 + 1) = 0u;
    int8x16_t v251 = &a1->i8[2 * a2];
    uint64_t v25 = &a1->i8[2 * a2 + a2];
    *(_OWORD *)int8x16_t v251 = 0u;
    *((_OWORD *)v251 + 1) = 0u;
    goto LABEL_116;
  }
  if (v180 == 2)
  {
    uint64_t v10 = 0;
    unint64_t v249 = (unint64_t)&v370;
    goto LABEL_115;
  }
  int32x2_t v253 = vzip1_s32(*(int32x2_t *)v171.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL));
  int32x2_t v254 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
  v255.i64[0] = v253.u32[0];
  v255.i64[1] = v253.u32[1];
  int64x2_t v256 = v255;
  v255.i64[0] = v254.u32[0];
  v255.i64[1] = v254.u32[1];
  uint64x2_t v257 = (uint64x2_t)vnegq_s64(v256);
  uint64x2_t v258 = (uint64x2_t)vnegq_s64(v255);
  int64x2_t v259 = (int64x2_t)vshlq_u64((uint64x2_t)v169, v257);
  *(int32x2_t *)v169.i8 = vmovn_s64((int64x2_t)v169);
  *(int32x2_t *)v259.i8 = vmovn_s64(v259);
  int16x8_t v260 = (int16x8_t)vzip1q_s32((int32x4_t)v169, (int32x4_t)v259);
  int64x2_t v261 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v258);
  *(int32x2_t *)v215.i8 = vmovn_s64((int64x2_t)v215);
  *(int32x2_t *)v261.i8 = vmovn_s64(v261);
  int16x8_t v262 = (int16x8_t)vzip1q_s32((int32x4_t)v215, (int32x4_t)v261);
  int64x2_t v263 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v258);
  *(int32x2_t *)v213.i8 = vmovn_s64((int64x2_t)v213);
  *(int32x2_t *)v263.i8 = vmovn_s64(v263);
  int16x8_t v264 = (int16x8_t)vzip1q_s32((int32x4_t)v213, (int32x4_t)v263);
  uint32x4_t v265 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v151.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v151, v151, 8uLL))));
  int16x8_t v266 = (int16x8_t)vshlq_u32((uint32x4_t)v260, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL)))));
  *(int16x4_t *)v260.i8 = vmovn_s32((int32x4_t)v260);
  *(int16x4_t *)v266.i8 = vmovn_s32((int32x4_t)v266);
  int16x8_t v267 = vzip1q_s16(v260, v266);
  int16x8_t v268 = (int16x8_t)vshlq_u32((uint32x4_t)v262, v265);
  int16x8_t v269 = (int16x8_t)vshlq_u32((uint32x4_t)v264, v265);
  *(int16x4_t *)v262.i8 = vmovn_s32((int32x4_t)v262);
  *(int16x4_t *)v268.i8 = vmovn_s32((int32x4_t)v268);
  *(int16x4_t *)v264.i8 = vmovn_s32((int32x4_t)v264);
  *(int16x4_t *)v269.i8 = vmovn_s32((int32x4_t)v269);
  int16x8_t v270 = vzip1q_s16(v262, v268);
  v268.i64[0] = 0x10001000100010;
  v268.i64[1] = 0x10001000100010;
  int16x8_t v271 = vzip1q_s16(v264, v269);
  v269.i64[0] = 0xF000F000F000FLL;
  v269.i64[1] = 0xF000F000F000FLL;
  int16x8_t v272 = vsubq_s16(v268, (int16x8_t)v170);
  int16x8_t v273 = vaddq_s16((int16x8_t)v170, v269);
  v269.i64[0] = 0x10001000100010;
  v269.i64[1] = 0x10001000100010;
  int16x8_t v274 = vshlq_s16(v267, v272);
  v272.i64[0] = 0xF000F000F000FLL;
  v272.i64[1] = 0xF000F000F000FLL;
  int16x8_t v275 = vsubq_s16(v269, (int16x8_t)v151);
  int16x8_t v276 = vaddq_s16((int16x8_t)v151, v272);
  int8x16_t v277 = (int8x16_t)vshlq_s16(v274, v273);
  int16x8_t v278 = vshlq_s16(vshlq_s16(v270, v275), v276);
  int16x8_t v279 = vshlq_s16(vshlq_s16(v271, v275), v276);
  int8x16_t v280 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v277.i8, 0);
  int16x8_t v281 = (int16x8_t)vandq_s8(v154, v280);
  int16x8_t v282 = vsubq_s16(v278, v281);
  int16x8_t v283 = vsubq_s16(v279, v281);
  *(int32x2_t *)v278.i8 = vzip1_s32(*(int32x2_t *)v223.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v223, v223, 8uLL));
  *(int32x2_t *)v279.i8 = vzip1_s32(*(int32x2_t *)v236.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v236, v236, 8uLL));
  v255.i64[0] = v278.u32[0];
  v255.i64[1] = v278.u32[1];
  int64x2_t v284 = v255;
  v255.i64[0] = v279.u32[0];
  v255.i64[1] = v279.u32[1];
  uint64x2_t v285 = (uint64x2_t)vnegq_s64(v284);
  int64x2_t v286 = (int64x2_t)vshlq_u64((uint64x2_t)v232, v285);
  *(int32x2_t *)v281.i8 = vmovn_s64((int64x2_t)v232);
  *(int32x2_t *)v286.i8 = vmovn_s64(v286);
  int16x8_t v287 = (int16x8_t)vzip1q_s32((int32x4_t)v281, (int32x4_t)v286);
  uint64x2_t v288 = (uint64x2_t)vnegq_s64(v255);
  int64x2_t v289 = (int64x2_t)vshlq_u64((uint64x2_t)v228, v285);
  *(int32x2_t *)v228.i8 = vmovn_s64((int64x2_t)v228);
  *(int32x2_t *)v289.i8 = vmovn_s64(v289);
  int16x8_t v290 = (int16x8_t)vzip1q_s32((int32x4_t)v228, (int32x4_t)v289);
  int64x2_t v291 = (int64x2_t)vshlq_u64((uint64x2_t)v245, v288);
  *(int32x2_t *)v232.i8 = vmovn_s64((int64x2_t)v245);
  *(int32x2_t *)v291.i8 = vmovn_s64(v291);
  uint32x4_t v292 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v150.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v150, v150, 8uLL))));
  int16x8_t v293 = (int16x8_t)vzip1q_s32((int32x4_t)v232, (int32x4_t)v291);
  int16x8_t v294 = (int16x8_t)vshlq_u32((uint32x4_t)v287, v292);
  int16x8_t v295 = (int16x8_t)vshlq_u32((uint32x4_t)v290, v292);
  *(int16x4_t *)v287.i8 = vmovn_s32((int32x4_t)v287);
  *(int16x4_t *)v294.i8 = vmovn_s32((int32x4_t)v294);
  *(int16x4_t *)v290.i8 = vmovn_s32((int32x4_t)v290);
  *(int16x4_t *)v295.i8 = vmovn_s32((int32x4_t)v295);
  int16x8_t v296 = vzip1q_s16(v287, v294);
  v294.i64[0] = 0x10001000100010;
  v294.i64[1] = 0x10001000100010;
  int16x8_t v297 = vzip1q_s16(v290, v295);
  v295.i64[0] = 0xF000F000F000FLL;
  v295.i64[1] = 0xF000F000F000FLL;
  int16x8_t v298 = vsubq_s16(v294, (int16x8_t)v150);
  int16x8_t v299 = vaddq_s16((int16x8_t)v150, v295);
  uint32x4_t v300 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v149.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v149, v149, 8uLL))));
  int16x8_t v301 = vshlq_s16(vshlq_s16(v296, v298), v299);
  int16x8_t v302 = vshlq_s16(vshlq_s16(v297, v298), v299);
  int16x8_t v303 = (int16x8_t)vandq_s8(v152, v280);
  int16x8_t v304 = vsubq_s16(v301, v303);
  int16x8_t v305 = vsubq_s16(v302, v303);
  int16x8_t v306 = (int16x8_t)vshlq_u32((uint32x4_t)v293, v300);
  *(int16x4_t *)v301.i8 = vmovn_s32((int32x4_t)v293);
  *(int16x4_t *)v306.i8 = vmovn_s32((int32x4_t)v306);
  v293.i64[0] = 0x10001000100010;
  v293.i64[1] = 0x10001000100010;
  int16x8_t v307 = vzip1q_s16(v301, v306);
  v301.i64[0] = 0xF000F000F000FLL;
  v301.i64[1] = 0xF000F000F000FLL;
  int16x8_t v308 = vsubq_s16(v293, (int16x8_t)v149);
  int16x8_t v309 = vaddq_s16((int16x8_t)v149, v301);
  int64x2_t v310 = (int64x2_t)vshlq_u64((uint64x2_t)v248, v288);
  *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v248);
  *(int32x2_t *)v310.i8 = vmovn_s64(v310);
  int16x8_t v311 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v310);
  int16x8_t v312 = (int16x8_t)vshlq_u32((uint32x4_t)v311, v300);
  *(int16x4_t *)v311.i8 = vmovn_s32((int32x4_t)v311);
  *(int16x4_t *)v312.i8 = vmovn_s32((int32x4_t)v312);
  int16x8_t v313 = vshlq_s16(vshlq_s16(vzip1q_s16(v311, v312), v308), v309);
  int16x8_t v314 = (int16x8_t)vandq_s8(v148, v280);
  int16x8_t v315 = vsubq_s16(vshlq_s16(vshlq_s16(v307, v308), v309), v314);
  int16x8_t v316 = vsubq_s16(v313, v314);
  int32x2_t v317 = vzip1_s32(*(int32x2_t *)v186.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v186, v186, 8uLL));
  int32x2_t v318 = vzip1_s32(*(int32x2_t *)v197.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v197, v197, 8uLL));
  v255.i64[0] = v317.u32[0];
  v255.i64[1] = v317.u32[1];
  int64x2_t v319 = v255;
  v255.i64[0] = v318.u32[0];
  v255.i64[1] = v318.u32[1];
  int64x2_t v320 = (int64x2_t)vshlq_u64((uint64x2_t)v193, (uint64x2_t)vnegq_s64(v319));
  *(int32x2_t *)v193.i8 = vmovn_s64((int64x2_t)v193);
  *(int32x2_t *)v320.i8 = vmovn_s64(v320);
  int16x8_t v321 = (int16x8_t)vzip1q_s32((int32x4_t)v193, (int32x4_t)v320);
  int64x2_t v322 = (int64x2_t)vshlq_u64((uint64x2_t)v184, (uint64x2_t)vnegq_s64(v255));
  *(int32x2_t *)v184.i8 = vmovn_s64((int64x2_t)v184);
  *(int32x2_t *)v322.i8 = vmovn_s64(v322);
  int16x8_t v323 = (int16x8_t)vzip1q_s32((int32x4_t)v184, (int32x4_t)v322);
  int16x8_t v324 = (int16x8_t)vshlq_u32((uint32x4_t)v321, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v185.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v185, v185, 8uLL)))));
  int16x8_t v325 = (int16x8_t)vshlq_u32((uint32x4_t)v323, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v153.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v153, v153, 8uLL)))));
  *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v321);
  *(int16x4_t *)v324.i8 = vmovn_s32((int32x4_t)v324);
  *(int16x4_t *)v323.i8 = vmovn_s32((int32x4_t)v323);
  *(int16x4_t *)v325.i8 = vmovn_s32((int32x4_t)v325);
  int16x8_t v326 = vzip1q_s16(v321, v324);
  v324.i64[0] = 0x10001000100010;
  v324.i64[1] = 0x10001000100010;
  int16x8_t v327 = vzip1q_s16(v323, v325);
  v325.i64[0] = 0xF000F000F000FLL;
  v325.i64[1] = 0xF000F000F000FLL;
  int16x8_t v328 = vaddq_s16((int16x8_t)vandq_s8(v277, v155), vshlq_s16(vshlq_s16(v326, vsubq_s16(v324, (int16x8_t)v185)), vaddq_s16((int16x8_t)v185, v325)));
  int16x8_t v329 = (int16x8_t)vandq_s8(v155, v280);
  v330.i64[0] = 0x1000100010001;
  v330.i64[1] = 0x1000100010001;
  int16x8_t v331 = vceqq_s16(v51, (int16x8_t)v330);
  int v332 = (unsigned __int16)vaddvq_s16(v331);
  int8x16_t v333 = (int8x16_t)vsubq_s16(v328, v329);
  int8x16_t v334 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v327, vsubq_s16(v324, (int16x8_t)v153)), vaddq_s16((int16x8_t)v153, v325)), v329);
  v331.i16[0] = v46 & 0x3FF;
  v331.i16[1] = (v46 >> 10) & 0x3FF;
  int16x8_t v335 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v331.i8, 0);
  if (v332)
  {
    int8x16_t v336 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v47, v330));
    int8x16_t v337 = v334;
    v337.i32[3] = v333.i32[0];
    int8x16_t v338 = v333;
    v338.i32[0] = v334.i32[3];
    v371.val[0] = vbslq_s8(v336, v338, v333);
    v371.val[1] = vbslq_s8(v336, v337, v334);
    v339.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v339.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v372.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v371, (int8x16_t)xmmword_242EA7570), v336), (int16x8_t)v371.val[0]);
    v372.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v371.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v371, v339), v336));
    int8x16_t v333 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v372, (int8x16_t)xmmword_242EA7580), v336), (int16x8_t)v372.val[0]);
    int8x16_t v334 = (int8x16_t)vaddq_s16((int16x8_t)v372.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v372, v339), v336));
    v372.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v282.i8, (int8x16_t)xmmword_242EA7590), v336), v282);
    v372.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v282.i8, (int8x16_t)xmmword_242EA75A0), v336), v283);
    int16x8_t v282 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v372, (int8x16_t)xmmword_242EA75B0), v336), (int16x8_t)v372.val[0]);
    int16x8_t v283 = vaddq_s16((int16x8_t)v372.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v372, v339), v336));
    v372.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v304.i8, (int8x16_t)xmmword_242EA75C0), v336), v304);
    v372.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v304.i8, (int8x16_t)xmmword_242EA7570), v336), v305);
    int16x8_t v304 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v372, v339), v336), (int16x8_t)v372.val[0]);
    int16x8_t v305 = vaddq_s16((int16x8_t)v372.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v372, (int8x16_t)xmmword_242EA75D0), v336));
    v371.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v315.i8, (int8x16_t)xmmword_242EA75E0), v336), v315);
    v371.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v315.i8, (int8x16_t)xmmword_242EA7570), v336), v316);
    int16x8_t v315 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v371, v339), v336), (int16x8_t)v371.val[0]);
    int16x8_t v316 = vaddq_s16((int16x8_t)v371.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v371, (int8x16_t)xmmword_242EA75F0), v336));
  }
  int8x16_t v340 = (int8x16_t)vaddq_s16((int16x8_t)v333, v335);
  int8x16_t v341 = (int8x16_t)vaddq_s16((int16x8_t)v334, v335);
  int8x16_t v342 = (int8x16_t)vaddq_s16(v282, v335);
  int8x16_t v343 = (int8x16_t)vaddq_s16(v283, v335);
  int8x16_t v344 = (int8x16_t)vaddq_s16(v304, v335);
  int8x16_t v345 = (int8x16_t)vaddq_s16(v305, v335);
  int8x16_t v346 = (int8x16_t)vaddq_s16(v315, v335);
  int8x16_t v347 = (int8x16_t)vaddq_s16(v316, v335);
  v348.i64[0] = 0x10001000100010;
  v348.i64[1] = 0x10001000100010;
  int8x16_t v349 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v47, v348));
  int16x8_t v350 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v340, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v340);
  int16x8_t v351 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v341, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v341);
  int16x8_t v352 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v342, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v342);
  int16x8_t v353 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v343, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v343);
  int16x8_t v354 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v344, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v344);
  int16x8_t v355 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v345, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v345);
  int16x8_t v356 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v346, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v346);
  int16x8_t v357 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v347, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v347);
  int64x2_t v358 = (int64x2_t)vshlq_n_s16(v350, 6uLL);
  int64x2_t v359 = (int64x2_t)vshlq_n_s16(v351, 6uLL);
  int64x2_t v360 = (int64x2_t)vshlq_n_s16(v352, 6uLL);
  int64x2_t v361 = (int64x2_t)vshlq_n_s16(v354, 6uLL);
  int64x2_t v362 = (int64x2_t)vshlq_n_s16(v355, 6uLL);
  int64x2_t v363 = (int64x2_t *)((char *)a1 + a2);
  *a1 = vzip1q_s64(v358, v359);
  a1[1] = vzip1q_s64(v361, v362);
  int64x2_t v364 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t v365 = (int64x2_t)vshlq_n_s16(v353, 6uLL);
  int64x2_t v366 = (int64x2_t)vshlq_n_s16(v356, 6uLL);
  *int64x2_t v363 = vzip2q_s64(v358, v359);
  v363[1] = vzip2q_s64(v361, v362);
  int64x2_t v367 = (int64x2_t)vshlq_n_s16(v357, 6uLL);
  *int64x2_t v364 = vzip1q_s64(v360, v365);
  v364[1] = vzip1q_s64(v366, v367);
  int64x2_t v368 = (int64x2_t *)((char *)v364 + a2);
  *int64x2_t v368 = vzip2q_s64(v360, v365);
  v368[1] = vzip2q_s64(v366, v367);
  return v10;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressMacroblock(int64x2_t *a1, int64x2_t *a2, unsigned __int8 *a3, int32x4_t a4, int32x4_t a5)
{
  int8x16_t v7 = (int64x2_t *)((char *)a2
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1, 64, a2, *a3, a4, a5));
  uint64_t v10 = (int64x2_t *)((char *)v7
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 2, 64, v7, a3[1], v8, v9));
  int64x2_t v13 = (int64x2_t *)((char *)v10
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 16, 64, v10, a3[2], v11, v12));
  int64x2_t v16 = (int64x2_t *)((char *)v13
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 18, 64, v13, a3[3], v14, v15));
  unsigned int v19 = (int64x2_t *)((char *)v16
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 32, 64, v16, a3[4], v17, v18));
  long long v22 = (int64x2_t *)((char *)v19
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 34, 64, v19, a3[5], v20, v21));
  uint64_t v25 = (int64x2_t *)((char *)v22
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 48, 64, v22, a3[6], v23, v24));
  int v28 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 50, 64, v25, v28, v26, v27);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(uint64_t a1, char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  int64x2_t v7 = a3[1];
  int32x4_t v6 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v8 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v9 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v10 = (int16x8_t)vzip1q_s64(v7, v9);
  int64x2_t v12 = *v6;
  int64x2_t v13 = v6[1];
  int32x4_t v11 = (int64x2_t *)((char *)v6 + a4);
  int64x2_t v14 = v11[1];
  int16x8_t v15 = (int16x8_t)vzip2q_s64(v7, v9);
  int16x8_t v16 = (int16x8_t)vzip1q_s64(v13, v14);
  int16x8_t v17 = (int16x8_t)vzip2q_s64(v13, v14);
  int8x16_t v18 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s64(*a3, v8), 6uLL);
  int8x16_t v19 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip2q_s64(*a3, v8), 6uLL);
  int16x8_t v20 = vshrq_n_s16((int16x8_t)vzip1q_s64(v12, *v11), 6uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip2q_s64(v12, *v11), 6uLL);
  int16x8_t v22 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v23 = vshrq_n_s16(v16, 6uLL);
  int16x8_t v24 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v18.i8, 0);
  int8x16_t v499 = (int8x16_t)v21;
  int8x16_t v500 = (int8x16_t)vshrq_n_s16(v15, 6uLL);
  int8x16_t v501 = (int8x16_t)vshrq_n_s16(v17, 6uLL);
  v25.i64[0] = 0x5000500050005;
  v25.i64[1] = 0x5000500050005;
  int8x16_t v504 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v18, v24), 6uLL), v25);
  int8x16_t v506 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v19, v24), 6uLL), v25);
  int8x16_t v508 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v24), 6uLL), v25);
  int8x16_t v509 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v24), 6uLL), v25);
  int8x16_t v510 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v24), 6uLL), v25);
  int8x16_t v511 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v500, v24), 6uLL), v25);
  int8x16_t v512 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v24), 6uLL), v25);
  int8x16_t v513 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v501, v24), 6uLL), v25);
  int16x8_t v26 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v504, (int16x8_t)v506), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v27 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v504, (int16x8_t)v506), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v28 = vpmaxq_s16(v26, v26);
  int16x8_t v29 = vpminq_s16(v27, v27);
  int16x8_t v30 = vpmaxq_s16(v28, v28);
  int16x8_t v31 = vpminq_s16(v29, v29);
  v32.i64[0] = 0x8000800080008000;
  v32.i64[1] = 0x8000800080008000;
  int16x8_t v33 = vmaxq_s16(v30, v32);
  v34.i64[0] = 0x8000800080008000;
  v34.i64[1] = 0x8000800080008000;
  int16x8_t v35 = vminq_s16(v31, v34);
  int16x8_t v36 = vzip1q_s16(v30, v31);
  v37.i64[0] = 0x10001000100010;
  v37.i64[1] = 0x10001000100010;
  int16x8_t v38 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v36)), (int8x16_t)vceqzq_s16(v36));
  int16x8_t v39 = vpmaxq_s16(v38, v38);
  int16x8_t v40 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v508, (int16x8_t)v509), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v41 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v508, (int16x8_t)v509), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v42 = vpmaxq_s16(v40, v40);
  int16x8_t v43 = vpminq_s16(v41, v41);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vmaxq_s16(v33, v44);
  int16x8_t v47 = vminq_s16(v35, v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int16x8_t v49 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v48)), (int8x16_t)vceqzq_s16(v48));
  int16x8_t v50 = vpmaxq_s16(v49, v49);
  int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v510, (int16x8_t)v511), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v52 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v510, (int16x8_t)v511), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v53 = vpmaxq_s16(v51, v51);
  int16x8_t v54 = vpminq_s16(v52, v52);
  int16x8_t v55 = vpmaxq_s16(v53, v53);
  int16x8_t v56 = vpminq_s16(v54, v54);
  int16x8_t v57 = vmaxq_s16(v46, v55);
  int16x8_t v58 = vminq_s16(v47, v56);
  int16x8_t v59 = vzip1q_s16(v55, v56);
  int16x8_t v60 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v59)), (int8x16_t)vceqzq_s16(v59));
  int16x8_t v61 = vpmaxq_s16(v60, v60);
  int16x8_t v62 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v512, (int16x8_t)v513), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v63 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v512, (int16x8_t)v513), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v64 = vpmaxq_s16(v62, v62);
  int16x8_t v65 = vpminq_s16(v63, v63);
  int16x8_t v66 = vpmaxq_s16(v64, v64);
  int16x8_t v67 = vpminq_s16(v65, v65);
  int16x8_t v68 = vmaxq_s16(v57, v66);
  int16x8_t v69 = vminq_s16(v58, v67);
  int16x8_t v70 = vzip1q_s16(v66, v67);
  int16x8_t v71 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v70)), (int8x16_t)vceqzq_s16(v70));
  v67.i64[0] = -1;
  v67.i64[1] = -1;
  int16x8_t v72 = vpmaxq_s16(v71, v71);
  int8x16_t v73 = (int8x16_t)vmaxq_s16(vmaxq_s16(v39, v50), vmaxq_s16(v61, v72));
  int16x8_t v74 = vclzq_s16(vsubq_s16(v68, v69));
  v35.i64[0] = 0xF000F000F000FLL;
  v35.i64[1] = 0xF000F000F000FLL;
  int16x8_t v75 = vsubq_s16(v35, v74);
  int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v37, v74);
  int8x16_t v77 = (int8x16_t)vsubq_s16(vshlq_s16(v67, v75), v69);
  int8x16_t v78 = (int8x16_t)vcgtq_s16((int16x8_t)v73, (int16x8_t)v76);
  int8x16_t v520 = vbslq_s8(v78, v76, v73);
  int8x16_t v521 = (int8x16_t)v69;
  int8x16_t v522 = (int8x16_t)v68;
  int8x16_t v523 = vandq_s8(v77, v78);
  v79.i64[0] = 0x8000800080008;
  v79.i64[1] = 0x8000800080008;
  int8x16_t v80 = vandq_s8(v78, v79);
  v81.i64[0] = 0x3000300030003;
  v81.i64[1] = 0x3000300030003;
  int16x8_t v82 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v520, v39), (int16x8_t)v81), (int16x8_t)0);
  int16x8_t v83 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v520, v50), (int16x8_t)v81), (int16x8_t)0);
  int16x8_t v84 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v520, v61), (int16x8_t)v81), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v520, v72), (int16x8_t)v81), (int16x8_t)0);
  int16x8_t v516 = vsubq_s16((int16x8_t)v520, v82);
  int16x8_t v517 = vsubq_s16((int16x8_t)v520, v83);
  int16x8_t v518 = vsubq_s16((int16x8_t)v520, v84);
  int16x8_t v519 = vsubq_s16((int16x8_t)v520, v85);
  v86.i64[0] = 0x4000400040004;
  v86.i64[1] = 0x4000400040004;
  int8x16_t v87 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v520), v81), v80), vbicq_s8(v86, (int8x16_t)vceqq_s16(vaddq_s16(v85, v84), vnegq_s16(vaddq_s16(v82, v83)))));
  int8x16_t v514 = (int8x16_t)v24;
  int8x16_t v515 = v87;
  if (vmaxvq_s16((int16x8_t)v520))
  {
    int16x8_t v502 = v20;
    int16x8_t v503 = v22;
    int8x16_t v498 = (int8x16_t)v23;
    int8x16_t v88 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v504, (int16x8_t)vqtbl1q_s8(v504, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int8x16_t v89 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v506, (int16x8_t)vqtbl1q_s8(v506, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v508, (int16x8_t)vqtbl1q_s8(v508, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v509, (int16x8_t)vqtbl1q_s8(v509, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int8x16_t v92 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v510, (int16x8_t)vqtbl1q_s8(v510, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v511, (int16x8_t)vqtbl1q_s8(v511, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v512, (int16x8_t)vqtbl1q_s8(v512, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v513, (int16x8_t)vqtbl1q_s8(v513, (int8x16_t)xmmword_242EA76C0)), 6uLL), v25);
    int16x8_t v96 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v88, (int16x8_t)v89), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v97 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v88, (int16x8_t)v89), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v98 = vpmaxq_s16(v96, v96);
    int16x8_t v99 = vpminq_s16(v97, v97);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vmaxq_s16(v100, v32);
    int16x8_t v103 = vminq_s16(v101, v34);
    int16x8_t v104 = vzip1q_s16(v100, v101);
    int16x8_t v105 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v104)), (int8x16_t)vceqzq_s16(v104));
    int16x8_t v106 = vpmaxq_s16(v105, v105);
    int16x8_t v107 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v108 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v109 = vpmaxq_s16(v107, v107);
    int16x8_t v110 = vpminq_s16(v108, v108);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vmaxq_s16(v102, v111);
    int16x8_t v114 = vminq_s16(v103, v112);
    int16x8_t v115 = vzip1q_s16(v111, v112);
    int16x8_t v116 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v115)), (int8x16_t)vceqzq_s16(v115));
    int16x8_t v117 = vpmaxq_s16(v116, v116);
    int16x8_t v118 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v120 = vpmaxq_s16(v118, v118);
    int16x8_t v121 = vpminq_s16(v119, v119);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vmaxq_s16(v113, v122);
    int16x8_t v125 = vminq_s16(v114, v123);
    int16x8_t v126 = vzip1q_s16(v122, v123);
    int16x8_t v127 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v126)), (int8x16_t)vceqzq_s16(v126));
    int16x8_t v128 = vpmaxq_s16(v127, v127);
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v130 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v131 = vpmaxq_s16(v129, v129);
    int16x8_t v132 = vpminq_s16(v130, v130);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int8x16_t v135 = (int8x16_t)vmaxq_s16(v124, v133);
    int8x16_t v136 = (int8x16_t)vminq_s16(v125, v134);
    int16x8_t v137 = vzip1q_s16(v133, v134);
    int16x8_t v138 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v37, vclsq_s16(v137)), (int8x16_t)vceqzq_s16(v137));
    int16x8_t v139 = vpmaxq_s16(v138, v138);
    int8x16_t v140 = (int8x16_t)vmaxq_s16(vmaxq_s16(v106, v117), vmaxq_s16(v128, v139));
    int16x8_t v141 = vclzq_s16(vsubq_s16((int16x8_t)v135, (int16x8_t)v136));
    int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v37, v141);
    int8x16_t v143 = (int8x16_t)vcgtq_s16((int16x8_t)v140, (int16x8_t)v142);
    int8x16_t v144 = vbslq_s8(v143, v142, v140);
    v140.i64[0] = 0x18001800180018;
    v140.i64[1] = 0x18001800180018;
    int8x16_t v145 = vbslq_s8(v143, v140, v37);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v106), (int16x8_t)v81), (int16x8_t)0);
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v117), (int16x8_t)v81), (int16x8_t)0);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v128), (int16x8_t)v81), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v139), (int16x8_t)v81), (int16x8_t)0);
    int8x16_t v150 = (int8x16_t)vsubq_s16((int16x8_t)v144, v146);
    int8x16_t v151 = (int8x16_t)vsubq_s16((int16x8_t)v144, v147);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v144, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v144, v149);
    int8x16_t v154 = vbicq_s8(v86, (int8x16_t)vceqq_s16(vaddq_s16(v149, v148), vnegq_s16(vaddq_s16(v146, v147))));
    v155.i64[0] = 0x7000700070007;
    v155.i64[1] = 0x7000700070007;
    int8x16_t v156 = v520;
    int16x8_t v157 = (int16x8_t)vbicq_s8(v520, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v80, v79)));
    int16x8_t v158 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v87, (int16x8_t)v87), v79);
    int16x8_t v159 = (int16x8_t)vandq_s8(v87, v81);
    v160.i64[0] = 0x2000200020002;
    v160.i64[1] = 0x2000200020002;
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v159, v160), v37);
    int16x8_t v162 = v516;
    int16x8_t v163 = v517;
    int16x8_t v164 = vaddq_s16(vaddq_s16(v157, v158), v161);
    int16x8_t v166 = v518;
    int16x8_t v165 = v519;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v164, v516, v155), vshlq_n_s16(vaddq_s16(vaddq_s16(v518, v517), v519), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v144, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v145 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v154, (int16x8_t)v154)), (int16x8_t)v150, v155), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v152, (int16x8_t)v151), (int16x8_t)v153), 3uLL))), 0);
    int v168 = (unsigned __int16)vaddvq_s16((int16x8_t)v167);
    BOOL v170 = a5 < 4 || a6 < 2;
    if (v168)
    {
      v171.i64[0] = 0x3000300030003;
      v171.i64[1] = 0x3000300030003;
      int8x16_t v504 = vbslq_s8(v167, v88, v504);
      int8x16_t v506 = vbslq_s8(v167, v89, v506);
      int8x16_t v172 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v144), v171), v145), v154);
      v173.i64[0] = 0xF000F000F000FLL;
      v173.i64[1] = 0xF000F000F000FLL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int8x16_t v508 = vbslq_s8(v167, v90, v508);
      int8x16_t v509 = vbslq_s8(v167, v91, v509);
      int8x16_t v510 = vbslq_s8(v167, v92, v510);
      int8x16_t v511 = vbslq_s8(v167, v93, v511);
      int8x16_t v512 = vbslq_s8(v167, v94, v512);
      int8x16_t v513 = vbslq_s8(v167, v95, v513);
      int16x8_t v162 = (int16x8_t)vbslq_s8(v167, v150, (int8x16_t)v516);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v167, v151, (int8x16_t)v517);
      int16x8_t v516 = v162;
      int16x8_t v517 = v163;
      int16x8_t v166 = (int16x8_t)vbslq_s8(v167, v152, (int8x16_t)v518);
      int16x8_t v165 = (int16x8_t)vbslq_s8(v167, v153, (int8x16_t)v519);
      int16x8_t v518 = v166;
      int16x8_t v519 = v165;
      int8x16_t v522 = vbslq_s8(v167, v135, v522);
      int8x16_t v523 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v171, vsubq_s16(v173, v141)), (int16x8_t)v136), v143), v523);
      int8x16_t v156 = vbslq_s8(v167, v144, v520);
      int8x16_t v520 = v156;
      int8x16_t v521 = vbslq_s8(v167, v136, v521);
      int8x16_t v87 = vbslq_s8(v167, v172, v87);
      int8x16_t v514 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v514, (int16x8_t)vqtbl1q_s8(v514, (int8x16_t)xmmword_242EA76C0)), v514);
      int8x16_t v515 = v87;
    }
    int8x16_t v174 = (int8x16_t)v503;
    int8x16_t v175 = (int8x16_t)v502;
    if (!v170)
    {
      int16x8_t v176 = vsubq_s16((int16x8_t)v18, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v18.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v177 = v499;
      v177.i32[3] = v19.i32[3];
      int16x8_t v178 = vsubq_s16((int16x8_t)v19, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v18.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v179 = vsubq_s16(v502, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7590));
      int16x8_t v180 = vsubq_s16((int16x8_t)v499, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7630));
      int8x16_t v181 = v500;
      v181.i32[3] = v19.i32[3];
      v524.val[0] = v498;
      v524.val[1] = v501;
      v524.val[1].i32[3] = v19.i32[3];
      int16x8_t v182 = v178;
      v182.i32[3] = v176.i32[0];
      v176.i32[0] = v178.i32[3];
      int16x8_t v183 = vshlq_n_s16(v182, 6uLL);
      v182.i64[0] = 0x5000500050005;
      v182.i64[1] = 0x5000500050005;
      int8x16_t v184 = (int8x16_t)vshlq_s16(vshlq_n_s16(v176, 6uLL), v182);
      int8x16_t v185 = (int8x16_t)vshlq_s16(v183, v182);
      int8x16_t v186 = (int8x16_t)vshlq_s16(vshlq_n_s16(v179, 6uLL), v182);
      int8x16_t v187 = (int8x16_t)vshlq_s16(vshlq_n_s16(v180, 6uLL), v182);
      int8x16_t v188 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v503, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7640)), 6uLL), v182);
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v500, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7570)), 6uLL), v182);
      int8x16_t v190 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v498, (int16x8_t)vqtbl2q_s8(v524, (int8x16_t)xmmword_242EA7650)), 6uLL), v182);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v501, (int16x8_t)vqtbl2q_s8(v524, (int8x16_t)xmmword_242EA7570)), 6uLL), v182);
      int16x8_t v192 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v184, (int16x8_t)v185), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v193 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v184, (int16x8_t)v185), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v194 = vpmaxq_s16(v192, v192);
      int16x8_t v195 = vpminq_s16(v193, v193);
      int16x8_t v196 = vpmaxq_s16(v194, v194);
      int16x8_t v197 = vpminq_s16(v195, v195);
      v183.i64[0] = 0x8000800080008000;
      v183.i64[1] = 0x8000800080008000;
      int16x8_t v198 = vmaxq_s16(v196, v183);
      v179.i64[0] = 0x8000800080008000;
      v179.i64[1] = 0x8000800080008000;
      int16x8_t v199 = vzip1q_s16(v196, v197);
      v524.val[1].i64[0] = 0x10001000100010;
      v524.val[1].i64[1] = 0x10001000100010;
      int16x8_t v200 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v524.val[1], vclsq_s16(v199)), (int8x16_t)vceqzq_s16(v199));
      int16x8_t v201 = vpmaxq_s16(v200, v200);
      int16x8_t v202 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v186, (int16x8_t)v187), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v203 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v186, (int16x8_t)v187), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v204 = vpmaxq_s16(v202, v202);
      int16x8_t v205 = vpminq_s16(v203, v203);
      int16x8_t v206 = vpmaxq_s16(v204, v204);
      int16x8_t v207 = vpminq_s16(v205, v205);
      int16x8_t v208 = vmaxq_s16(v198, v206);
      int16x8_t v209 = vminq_s16(vminq_s16(v197, v179), v207);
      int16x8_t v210 = vzip1q_s16(v206, v207);
      int16x8_t v211 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v524.val[1], vclsq_s16(v210)), (int8x16_t)vceqzq_s16(v210));
      int16x8_t v212 = vpmaxq_s16(v211, v211);
      int16x8_t v213 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v188, (int16x8_t)v189), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v214 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v188, (int16x8_t)v189), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v215 = vpmaxq_s16(v213, v213);
      int16x8_t v216 = vpminq_s16(v214, v214);
      int16x8_t v217 = vpmaxq_s16(v215, v215);
      int16x8_t v218 = vpminq_s16(v216, v216);
      int16x8_t v219 = vmaxq_s16(v208, v217);
      int16x8_t v220 = vminq_s16(v209, v218);
      int16x8_t v221 = vzip1q_s16(v217, v218);
      int16x8_t v222 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v524.val[1], vclsq_s16(v221)), (int8x16_t)vceqzq_s16(v221));
      int16x8_t v223 = vpmaxq_s16(v222, v222);
      int16x8_t v224 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v190, (int16x8_t)v191), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v225 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v190, (int16x8_t)v191), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v226 = vpmaxq_s16(v224, v224);
      int16x8_t v227 = vpminq_s16(v225, v225);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int8x16_t v230 = (int8x16_t)vmaxq_s16(v219, v228);
      int8x16_t v231 = (int8x16_t)vminq_s16(v220, v229);
      int16x8_t v232 = vzip1q_s16(v228, v229);
      int16x8_t v233 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v524.val[1], vclsq_s16(v232)), (int8x16_t)vceqzq_s16(v232));
      int8x16_t v234 = (int8x16_t)vpmaxq_s16(v233, v233);
      int8x16_t v235 = (int8x16_t)vmaxq_s16(vmaxq_s16(v201, v212), vmaxq_s16(v223, (int16x8_t)v234));
      int16x8_t v236 = vclzq_s16(vsubq_s16((int16x8_t)v230, (int16x8_t)v231));
      int8x16_t v237 = (int8x16_t)vsubq_s16((int16x8_t)v524.val[1], v236);
      int8x16_t v238 = (int8x16_t)vcgtq_s16((int16x8_t)v235, (int16x8_t)v237);
      int8x16_t v239 = vbslq_s8(v238, v237, v235);
      v235.i64[0] = 0x3000300030003;
      v235.i64[1] = 0x3000300030003;
      int8x16_t v240 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v239, v201), (int16x8_t)v235), (int16x8_t)0);
      int16x8_t v241 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v239, v212), (int16x8_t)v235), (int16x8_t)0);
      int16x8_t v242 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v239, v223), (int16x8_t)v235), (int16x8_t)0);
      int16x8_t v243 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v239, (int16x8_t)v234), (int16x8_t)v235), (int16x8_t)0);
      int8x16_t v244 = (int8x16_t)vsubq_s16((int16x8_t)v239, (int16x8_t)v240);
      int8x16_t v245 = (int8x16_t)vsubq_s16((int16x8_t)v239, v241);
      int8x16_t v246 = (int8x16_t)vsubq_s16((int16x8_t)v239, v242);
      int8x16_t v247 = (int8x16_t)vsubq_s16((int16x8_t)v239, v243);
      v234.i64[0] = 0x4000400040004;
      v234.i64[1] = 0x4000400040004;
      int8x16_t v248 = vbicq_s8(v234, (int8x16_t)vceqq_s16(vaddq_s16(v243, v242), vnegq_s16(vaddq_s16((int16x8_t)v240, v241))));
      v241.i64[0] = 0x7000700070007;
      v241.i64[1] = 0x7000700070007;
      int16x8_t v249 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v237, v238), vaddq_s16((int16x8_t)v248, (int16x8_t)v248)), (int16x8_t)v244, v241), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v246, (int16x8_t)v245), (int16x8_t)v247), 3uLL));
      v240.i64[0] = 0x8000800080008;
      v240.i64[1] = 0x8000800080008;
      int8x16_t v87 = v515;
      int16x8_t v162 = v516;
      int8x16_t v250 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v515, v240));
      int16x8_t v251 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v87, (int16x8_t)v87), v240);
      v252.i64[0] = 0x2000200020002;
      v252.i64[1] = 0x2000200020002;
      int16x8_t v253 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v515, v235), (int16x8_t)v252), v524.val[1]);
      int16x8_t v165 = v519;
      int8x16_t v156 = v520;
      int16x8_t v163 = v517;
      int16x8_t v166 = v518;
      int8x16_t v254 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v520, v250), v251), v253), v516, v241), vshlq_n_s16(vaddq_s16(vaddq_s16(v518, v517), v519), 3uLL)), v249), 0);
      if (vaddvq_s16((int16x8_t)v254))
      {
        v255.i64[0] = 0x9000900090009;
        v255.i64[1] = 0x9000900090009;
        int8x16_t v504 = vbslq_s8(v254, v184, v504);
        int8x16_t v506 = vbslq_s8(v254, v185, v506);
        v256.i64[0] = -1;
        v256.i64[1] = -1;
        int8x16_t v257 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v239), v252), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v238, v255), (int16x8_t)vmvnq_s8(v238))), v248);
        int8x16_t v508 = vbslq_s8(v254, v186, v508);
        int8x16_t v509 = vbslq_s8(v254, v187, v509);
        v258.i64[0] = 0xF000F000F000FLL;
        v258.i64[1] = 0xF000F000F000FLL;
        int8x16_t v510 = vbslq_s8(v254, v188, v510);
        int8x16_t v511 = vbslq_s8(v254, v189, v511);
        int8x16_t v512 = vbslq_s8(v254, v190, v512);
        int8x16_t v513 = vbslq_s8(v254, v191, v513);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v254, v244, (int8x16_t)v516);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v254, v245, (int8x16_t)v517);
        int16x8_t v516 = v162;
        int16x8_t v517 = v163;
        int16x8_t v166 = (int16x8_t)vbslq_s8(v254, v246, (int8x16_t)v518);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v254, v247, (int8x16_t)v519);
        int16x8_t v518 = v166;
        int16x8_t v519 = v165;
        int8x16_t v522 = vbslq_s8(v254, v230, v522);
        int8x16_t v523 = vbslq_s8(v254, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v256, vsubq_s16(v258, v236)), (int16x8_t)v231), v238), v523);
        int8x16_t v156 = vbslq_s8(v254, v239, v520);
        int8x16_t v520 = v156;
        int8x16_t v521 = vbslq_s8(v254, v231, v521);
        int8x16_t v87 = vbslq_s8(v254, v257, v515);
        int8x16_t v514 = vbslq_s8(v254, vextq_s8(v19, v19, 0xCuLL), v514);
        int8x16_t v515 = v87;
      }
      int8x16_t v174 = (int8x16_t)v503;
      int8x16_t v175 = (int8x16_t)v502;
    }
    int16x8_t v259 = (int16x8_t)vandq_s8(v523, (int8x16_t)vceqq_s16((int16x8_t)v156, v162));
    int8x16_t v505 = (int8x16_t)vaddq_s16(v259, (int16x8_t)v504);
    int8x16_t v507 = (int8x16_t)vaddq_s16((int16x8_t)v506, v259);
    int16x8_t v260 = (int16x8_t)vandq_s8(v523, (int8x16_t)vceqq_s16((int16x8_t)v156, v163));
    int8x16_t v508 = (int8x16_t)vaddq_s16((int16x8_t)v508, v260);
    int8x16_t v509 = (int8x16_t)vaddq_s16((int16x8_t)v509, v260);
    int16x8_t v261 = (int16x8_t)vandq_s8(v523, (int8x16_t)vceqq_s16((int16x8_t)v156, v166));
    int8x16_t v510 = (int8x16_t)vaddq_s16((int16x8_t)v510, v261);
    int8x16_t v511 = (int8x16_t)vaddq_s16((int16x8_t)v511, v261);
    int16x8_t v262 = (int16x8_t)vandq_s8(v523, (int8x16_t)vceqq_s16((int16x8_t)v156, v165));
    v263.i64[0] = 0x8000800080008;
    v263.i64[1] = 0x8000800080008;
    v264.i64[0] = 0x3000300030003;
    v264.i64[1] = 0x3000300030003;
    v265.i64[0] = 0x2000200020002;
    v265.i64[1] = 0x2000200020002;
    int8x16_t v266 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v87, v264), v265);
    v265.i64[0] = 0x10001000100010;
    v265.i64[1] = 0x10001000100010;
    int16x8_t v267 = (int16x8_t)vandq_s8(v266, (int8x16_t)v265);
    v265.i64[0] = 0x7000700070007;
    v265.i64[1] = 0x7000700070007;
    int16x8_t v268 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v156, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v87, v263))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v87, (int16x8_t)v87), v263)), v267), v162, v265), vshlq_n_s16(vaddq_s16(v166, vaddq_s16(v163, v165)), 3uLL));
    int8x16_t v512 = (int8x16_t)vaddq_s16((int16x8_t)v512, v262);
    int8x16_t v513 = (int8x16_t)vaddq_s16((int16x8_t)v513, v262);
    int16x8_t v269 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v270 = 8 * (a1 & 7);
    if ((unint64_t)(vpaddq_s16(v268, v268).i16[0] + 45) > 0x27F)
    {
      if (v270) {
        uint64_t v275 = *v269 & ~(-1 << v270);
      }
      else {
        uint64_t v275 = 0;
      }
      v417.i64[0] = 0x5000500050005;
      v417.i64[1] = 0x5000500050005;
      v418.i64[0] = -1;
      v418.i64[1] = -1;
      int8x16_t v419 = (int8x16_t)vshlq_u16(v418, v417);
      v417.i64[0] = 0xA0000000ALL;
      v417.i64[1] = 0xA0000000ALL;
      int32x4_t v420 = vpaddq_s32((int32x4_t)v417, (int32x4_t)v417);
      v421.i64[0] = v420.u32[0];
      v421.i64[1] = v420.u32[1];
      int64x2_t v422 = v421;
      v421.i64[0] = v420.u32[2];
      v421.i64[1] = v420.u32[3];
      uint64x2_t v423 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v422);
      uint64x2_t v424 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v421);
      int64x2_t v425 = vpaddq_s64(v422, v421);
      uint64_t v426 = v425.i64[1];
      uint64_t v427 = v425.i64[0];
      uint16x8_t v428 = (uint16x8_t)vandq_s8(v419, v18);
      int32x4_t v429 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v428.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v428), (uint32x4_t)xmmword_242EA7B80));
      v421.i64[0] = v429.u32[0];
      v421.i64[1] = v429.u32[1];
      uint64x2_t v430 = (uint64x2_t)v421;
      v421.i64[0] = v429.u32[2];
      v421.i64[1] = v429.u32[3];
      int64x2_t v431 = vpaddq_s64((int64x2_t)vshlq_u64(v430, v423), (int64x2_t)vshlq_u64((uint64x2_t)v421, v424));
      unint64_t v432 = v427 + v270;
      unint64_t v433 = (v431.i64[0] << v270) | v275;
      if (v427 + v270 >= 0x40)
      {
        *int16x8_t v269 = v433;
        unint64_t v433 = (unint64_t)v431.i64[0] >> (-8 * (a1 & 7u));
        if (!v270) {
          unint64_t v433 = 0;
        }
      }
      unint64_t v434 = v433 | (v431.i64[1] << v432);
      if ((v432 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v269 + ((v432 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v434;
        if ((v432 & 0x3F) != 0) {
          unint64_t v434 = (unint64_t)v431.i64[1] >> -(v432 & 0x3F);
        }
        else {
          unint64_t v434 = 0;
        }
      }
      unint64_t v435 = v432 + v426;
      uint16x8_t v436 = (uint16x8_t)vandq_s8(v419, v19);
      int32x4_t v437 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v436.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v436), (uint32x4_t)xmmword_242EA7B80));
      v438.i64[0] = v437.u32[0];
      v438.i64[1] = v437.u32[1];
      uint64x2_t v439 = v438;
      v438.i64[0] = v437.u32[2];
      v438.i64[1] = v437.u32[3];
      int64x2_t v440 = vpaddq_s64((int64x2_t)vshlq_u64(v439, v423), (int64x2_t)vshlq_u64(v438, v424));
      uint64_t v441 = (v432 + v426) & 0x3F;
      unint64_t v442 = (v440.i64[0] << (v432 + v426)) | v434;
      if ((unint64_t)(v427 + v441) >= 0x40)
      {
        *(void *)((char *)v269 + ((v435 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v442;
        unint64_t v442 = (unint64_t)v440.i64[0] >> -(char)v441;
        if (!v441) {
          unint64_t v442 = 0;
        }
      }
      unint64_t v443 = v427 + v435;
      unint64_t v444 = v442 | (v440.i64[1] << v443);
      if ((v443 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v269 + ((v443 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v444;
        unint64_t v444 = (unint64_t)v440.i64[1] >> -(v443 & 0x3F);
        if ((v443 & 0x3F) == 0) {
          unint64_t v444 = 0;
        }
      }
      unint64_t v445 = v443 + v426;
      uint16x8_t v446 = (uint16x8_t)vandq_s8(v419, v175);
      int32x4_t v447 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v446.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v446), (uint32x4_t)xmmword_242EA7B80));
      v448.i64[0] = v447.u32[0];
      v448.i64[1] = v447.u32[1];
      uint64x2_t v449 = v448;
      v448.i64[0] = v447.u32[2];
      v448.i64[1] = v447.u32[3];
      int64x2_t v450 = vpaddq_s64((int64x2_t)vshlq_u64(v449, v423), (int64x2_t)vshlq_u64(v448, v424));
      unint64_t v451 = (v450.i64[0] << v445) | v444;
      if (v427 + (v445 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v445 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v451;
        unint64_t v451 = (unint64_t)v450.i64[0] >> -(v445 & 0x3F);
        if ((v445 & 0x3F) == 0) {
          unint64_t v451 = 0;
        }
      }
      unint64_t v452 = v427 + v445;
      unint64_t v453 = v451 | (v450.i64[1] << v452);
      if ((v452 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v269 + ((v452 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v453;
        unint64_t v453 = (unint64_t)v450.i64[1] >> -(v452 & 0x3F);
        if ((v452 & 0x3F) == 0) {
          unint64_t v453 = 0;
        }
      }
      unint64_t v454 = v452 + v426;
      uint16x8_t v455 = (uint16x8_t)vandq_s8(v419, v499);
      int32x4_t v456 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v455.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v455), (uint32x4_t)xmmword_242EA7B80));
      v457.i64[0] = v456.u32[0];
      v457.i64[1] = v456.u32[1];
      uint64x2_t v458 = v457;
      v457.i64[0] = v456.u32[2];
      v457.i64[1] = v456.u32[3];
      int64x2_t v459 = vpaddq_s64((int64x2_t)vshlq_u64(v458, v423), (int64x2_t)vshlq_u64(v457, v424));
      unint64_t v460 = (v459.i64[0] << v454) | v453;
      if (v427 + (v454 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v454 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v460;
        unint64_t v460 = (unint64_t)v459.i64[0] >> -(v454 & 0x3F);
        if ((v454 & 0x3F) == 0) {
          unint64_t v460 = 0;
        }
      }
      unint64_t v461 = v427 + v454;
      unint64_t v462 = v460 | (v459.i64[1] << v461);
      if ((v461 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v269 + ((v461 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v462;
        unint64_t v462 = (unint64_t)v459.i64[1] >> -(v461 & 0x3F);
        if ((v461 & 0x3F) == 0) {
          unint64_t v462 = 0;
        }
      }
      unint64_t v463 = v461 + v426;
      uint16x8_t v464 = (uint16x8_t)vandq_s8(v419, v174);
      int32x4_t v465 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v464.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v464), (uint32x4_t)xmmword_242EA7B80));
      v466.i64[0] = v465.u32[0];
      v466.i64[1] = v465.u32[1];
      uint64x2_t v467 = v466;
      v466.i64[0] = v465.u32[2];
      v466.i64[1] = v465.u32[3];
      int64x2_t v468 = vpaddq_s64((int64x2_t)vshlq_u64(v467, v423), (int64x2_t)vshlq_u64(v466, v424));
      unint64_t v469 = (v468.i64[0] << v463) | v462;
      if (v427 + (v463 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v463 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v469;
        unint64_t v469 = (unint64_t)v468.i64[0] >> -(v463 & 0x3F);
        if ((v463 & 0x3F) == 0) {
          unint64_t v469 = 0;
        }
      }
      unint64_t v470 = v427 + v463;
      unint64_t v471 = v469 | (v468.i64[1] << v470);
      if ((v470 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v269 + ((v470 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v471;
        unint64_t v471 = (unint64_t)v468.i64[1] >> -(v470 & 0x3F);
        if ((v470 & 0x3F) == 0) {
          unint64_t v471 = 0;
        }
      }
      unint64_t v472 = v470 + v426;
      uint16x8_t v473 = (uint16x8_t)vandq_s8(v419, v500);
      int32x4_t v474 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v473.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v473), (uint32x4_t)xmmword_242EA7B80));
      v475.i64[0] = v474.u32[0];
      v475.i64[1] = v474.u32[1];
      uint64x2_t v476 = v475;
      v475.i64[0] = v474.u32[2];
      v475.i64[1] = v474.u32[3];
      int64x2_t v477 = vpaddq_s64((int64x2_t)vshlq_u64(v476, v423), (int64x2_t)vshlq_u64(v475, v424));
      unint64_t v478 = (v477.i64[0] << v472) | v471;
      if (v427 + (v472 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v472 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v478;
        unint64_t v478 = (unint64_t)v477.i64[0] >> -(v472 & 0x3F);
        if ((v472 & 0x3F) == 0) {
          unint64_t v478 = 0;
        }
      }
      unint64_t v479 = v427 + v472;
      unint64_t v480 = v478 | (v477.i64[1] << v479);
      if ((v479 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v269 + ((v479 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v480;
        unint64_t v480 = (unint64_t)v477.i64[1] >> -(v479 & 0x3F);
        if ((v479 & 0x3F) == 0) {
          unint64_t v480 = 0;
        }
      }
      unint64_t v481 = v479 + v426;
      uint16x8_t v482 = (uint16x8_t)vandq_s8(v419, v498);
      int32x4_t v483 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v482.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v482), (uint32x4_t)xmmword_242EA7B80));
      v484.i64[0] = v483.u32[0];
      v484.i64[1] = v483.u32[1];
      uint64x2_t v485 = v484;
      v484.i64[0] = v483.u32[2];
      v484.i64[1] = v483.u32[3];
      int64x2_t v486 = vpaddq_s64((int64x2_t)vshlq_u64(v485, v423), (int64x2_t)vshlq_u64(v484, v424));
      unint64_t v487 = (v486.i64[0] << v481) | v480;
      if (v427 + (v481 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v481 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v487;
        unint64_t v487 = (unint64_t)v486.i64[0] >> -(v481 & 0x3F);
        if ((v481 & 0x3F) == 0) {
          unint64_t v487 = 0;
        }
      }
      unint64_t v488 = v427 + v481;
      unint64_t v489 = v487 | (v486.i64[1] << v488);
      if ((v488 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v269 + ((v488 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v489;
        unint64_t v489 = (unint64_t)v486.i64[1] >> -(v488 & 0x3F);
        if ((v488 & 0x3F) == 0) {
          unint64_t v489 = 0;
        }
      }
      unint64_t v490 = v488 + v426;
      uint16x8_t v491 = (uint16x8_t)vandq_s8(v419, v501);
      int32x4_t v492 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v491.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v491), (uint32x4_t)xmmword_242EA7B80));
      v493.i64[0] = v492.u32[0];
      v493.i64[1] = v492.u32[1];
      uint64x2_t v494 = v493;
      v493.i64[0] = v492.u32[2];
      v493.i64[1] = v492.u32[3];
      int64x2_t v495 = vpaddq_s64((int64x2_t)vshlq_u64(v494, v423), (int64x2_t)vshlq_u64(v493, v424));
      unint64_t v496 = (v495.i64[0] << v490) | v489;
      if (v427 + (v490 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v490 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v496;
        unint64_t v496 = (unint64_t)v495.i64[0] >> -(v490 & 0x3F);
        if ((v490 & 0x3F) == 0) {
          unint64_t v496 = 0;
        }
      }
      unint64_t v497 = v427 + v490;
      if ((v497 & 0x3F) + v426 >= 0x40) {
        *(void *)((char *)v269 + ((v497 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v496 | (v495.i64[1] << (v497 & 0x3F));
      }
      char v273 = 79;
      unint64_t result = 80;
    }
    else
    {
      if (v270) {
        uint64_t v271 = *v269 & ~(-1 << v270);
      }
      else {
        uint64_t v271 = 0;
      }
      *a2 = 0;
      uint64_t v276 = ((v156.i16[0] << 10) + 15360) & 0x3C00;
      if (!v156.i16[0]) {
        uint64_t v276 = 0;
      }
      if (v156.i16[1]) {
        uint64_t v277 = ((v156.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v277 = 0;
      }
      unint64_t v278 = v276 | v277 | v87.i8[0] & 0x1F | (32 * (v87.i8[2] & 0x1Fu));
      unint64_t v279 = v514.i16[0] & 0x3FF | ((unint64_t)(v514.i16[1] & 0x3FF) << 10);
      uint64_t v280 = (v278 << v270) | v271;
      if (v270 >= 0x2E)
      {
        *int16x8_t v269 = v280;
        uint64_t v280 = v278 >> (-8 * (a1 & 7u));
      }
      unint64_t v281 = (v270 + 18) & 0x3A;
      unint64_t v282 = v280 | (v279 << v281);
      if (v281 >= 0x2C)
      {
        *(void *)((char *)v269 + (((v270 + 18) >> 3) & 8)) = v282;
        unint64_t v282 = v279 >> -(char)v281;
      }
      unint64_t v283 = v270 + 38;
      int8x16_t v284 = (int8x16_t)vsubq_s16((int16x8_t)v520, v516);
      int8x16_t v285 = (int8x16_t)vsubq_s16((int16x8_t)v520, v517);
      int8x16_t v286 = (int8x16_t)vsubq_s16((int16x8_t)v520, v518);
      int8x16_t v287 = (int8x16_t)vsubq_s16((int16x8_t)v520, v519);
      *(uint8x8_t *)v284.i8 = vqmovn_u16((uint16x8_t)v284);
      *(uint8x8_t *)v285.i8 = vqmovn_u16((uint16x8_t)v285);
      *(uint8x8_t *)v286.i8 = vqmovn_u16((uint16x8_t)v286);
      *(uint8x8_t *)v287.i8 = vqmovn_u16((uint16x8_t)v287);
      v287.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v284, v285), (int16x8_t)vzip1q_s8(v286, v287)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v284, v285), (int16x8_t)vtrn2q_s8(v286, v287))).u64[0];
      v285.i64[0] = 0x202020202020202;
      v285.i64[1] = 0x202020202020202;
      int8x16_t v288 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v515.i8, (int8x8_t)0x4000400040004)))), v285);
      v285.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v286.i64[0] = -1;
      v286.i64[1] = -1;
      uint8x16_t v289 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v286, (uint8x16_t)vorrq_s8(v288, v285)), (int8x16_t)v287.u64[0]);
      int16x8_t v290 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v288.i8);
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v289.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v290)), (int16x8_t)vmovl_high_u8(v289));
      uint16x8_t v292 = (uint16x8_t)vpaddq_s16(v290, (int16x8_t)vmovl_high_u8((uint8x16_t)v288));
      int32x4_t v293 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v292.i8);
      int32x4_t v294 = (int32x4_t)vmovl_high_u16(v292);
      int32x4_t v295 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v291.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)), (int32x4_t)vshlq_u32(vmovl_high_u16(v291), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v294)));
      int32x4_t v296 = vpaddq_s32(v293, v294);
      v297.i64[0] = v295.u32[0];
      v297.i64[1] = v295.u32[1];
      uint64x2_t v298 = (uint64x2_t)v297;
      v297.i64[0] = v295.u32[2];
      v297.i64[1] = v295.u32[3];
      uint64x2_t v299 = (uint64x2_t)v297;
      v297.i64[0] = v296.u32[0];
      v297.i64[1] = v296.u32[1];
      int64x2_t v300 = v297;
      v297.i64[0] = v296.u32[2];
      v297.i64[1] = v296.u32[3];
      int64x2_t v301 = vpaddq_s64((int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v300)), (int64x2_t)vshlq_u64(v299, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)));
      int64x2_t v302 = vpaddq_s64(v300, v297);
      uint64_t v303 = (v270 + 38) & 0x3E;
      unint64_t v304 = (v301.i64[0] << v303) | v282;
      if ((unint64_t)(v302.i64[0] + v303) >= 0x40)
      {
        *(void *)((char *)v269 + ((v283 >> 3) & 8)) = v304;
        unint64_t v304 = (unint64_t)v301.i64[0] >> -(char)v303;
      }
      unint64_t v305 = v302.i64[0] + v283;
      unint64_t v306 = v304 | (v301.i64[1] << v305);
      if ((v305 & 0x3F) + v302.i64[1] >= 0x40)
      {
        *(void *)((char *)v269 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v306;
        unint64_t v306 = (unint64_t)v301.i64[1] >> -(v305 & 0x3F);
        if ((v305 & 0x3F) == 0) {
          unint64_t v306 = 0;
        }
      }
      unint64_t v307 = v305 + v302.i64[1];
      v308.i64[0] = 0x8000800080008;
      v308.i64[1] = 0x8000800080008;
      v309.i64[0] = -1;
      v309.i64[1] = -1;
      int16x8_t v310 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v515, v308), (int8x16_t)0, 0xCuLL), v520);
      v311.i64[0] = 0xF000F000F000FLL;
      v311.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v312 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v309, (uint16x8_t)vaddq_s16(v310, v311)), v523);
      int32x4_t v313 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v310.i8);
      int32x4_t v314 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v312.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v313)), (int32x4_t)vmovl_high_u16(v312));
      int32x4_t v315 = vpaddq_s32(v313, (int32x4_t)vmovl_high_u16((uint16x8_t)v310));
      v316.i64[0] = v314.u32[0];
      v316.i64[1] = v314.u32[1];
      uint64x2_t v317 = (uint64x2_t)v316;
      v316.i64[0] = v314.u32[2];
      v316.i64[1] = v314.u32[3];
      uint64x2_t v318 = (uint64x2_t)v316;
      v316.i64[0] = v315.u32[0];
      v316.i64[1] = v315.u32[1];
      int64x2_t v319 = v316;
      v316.i64[0] = v315.u32[2];
      v316.i64[1] = v315.u32[3];
      int64x2_t v320 = vpaddq_s64((int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v319)), (int64x2_t)vshlq_u64(v318, (uint64x2_t)vzip1q_s64((int64x2_t)0, v316)));
      int64x2_t v321 = vpaddq_s64(v319, v316);
      unint64_t v322 = (v320.i64[0] << v307) | v306;
      if (v321.i64[0] + (v307 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v307 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v322;
        unint64_t v322 = (unint64_t)v320.i64[0] >> -(v307 & 0x3F);
        if ((v307 & 0x3F) == 0) {
          unint64_t v322 = 0;
        }
      }
      unint64_t v323 = v321.i64[0] + v307;
      unint64_t v324 = v322 | (v320.i64[1] << v323);
      if ((v323 & 0x3F) + v321.i64[1] >= 0x40)
      {
        *(void *)((char *)v269 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v320.i64[1] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v324 = 0;
        }
      }
      unint64_t v325 = v323 + v321.i64[1];
      int16x8_t v326 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v516, 0xCuLL);
      v327.i64[0] = 0xF000F000F000FLL;
      v327.i64[1] = 0xF000F000F000FLL;
      v328.i64[0] = -1;
      v328.i64[1] = -1;
      uint16x8_t v329 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v328, (uint16x8_t)vaddq_s16(v326, v327)), v505);
      int32x4_t v330 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v326.i8);
      int32x4_t v331 = (int32x4_t)vmovl_high_u16((uint16x8_t)v326);
      int32x4_t v332 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v329.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)), (int32x4_t)vshlq_u32(vmovl_high_u16(v329), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)));
      int32x4_t v333 = vpaddq_s32(v330, v331);
      v334.i64[0] = v332.u32[0];
      v334.i64[1] = v332.u32[1];
      uint64x2_t v335 = (uint64x2_t)v334;
      v334.i64[0] = v332.u32[2];
      v334.i64[1] = v332.u32[3];
      uint64x2_t v336 = (uint64x2_t)v334;
      v334.i64[0] = v333.u32[0];
      v334.i64[1] = v333.u32[1];
      int64x2_t v337 = v334;
      v334.i64[0] = v333.u32[2];
      v334.i64[1] = v333.u32[3];
      int64x2_t v338 = vpaddq_s64((int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v337)), (int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)));
      int64x2_t v339 = vpaddq_s64(v337, v334);
      unint64_t v340 = (v338.i64[0] << v325) | v324;
      if (v339.i64[0] + (v325 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v325 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v340;
        unint64_t v340 = (unint64_t)v338.i64[0] >> -(v325 & 0x3F);
        if ((v325 & 0x3F) == 0) {
          unint64_t v340 = 0;
        }
      }
      unint64_t v341 = v339.i64[0] + v325;
      unint64_t v342 = v340 | (v338.i64[1] << v341);
      if ((v341 & 0x3F) + v339.i64[1] >= 0x40)
      {
        *(void *)((char *)v269 + ((v341 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
        unint64_t v342 = (unint64_t)v338.i64[1] >> -(v341 & 0x3F);
        if ((v341 & 0x3F) == 0) {
          unint64_t v342 = 0;
        }
      }
      unint64_t v343 = v341 + v339.i64[1];
      v344.i64[0] = 0xF000F000F000FLL;
      v344.i64[1] = 0xF000F000F000FLL;
      v345.i64[0] = -1;
      v345.i64[1] = -1;
      uint16x8_t v346 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v345, (uint16x8_t)vaddq_s16(v516, v344)), v507);
      int32x4_t v347 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v516.i8);
      int32x4_t v348 = (int32x4_t)vmovl_high_u16((uint16x8_t)v516);
      int32x4_t v349 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v346.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)), (int32x4_t)vshlq_u32(vmovl_high_u16(v346), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)));
      int32x4_t v350 = vpaddq_s32(v347, v348);
      v351.i64[0] = v349.u32[0];
      v351.i64[1] = v349.u32[1];
      uint64x2_t v352 = (uint64x2_t)v351;
      v351.i64[0] = v349.u32[2];
      v351.i64[1] = v349.u32[3];
      uint64x2_t v353 = (uint64x2_t)v351;
      v351.i64[0] = v350.u32[0];
      v351.i64[1] = v350.u32[1];
      int64x2_t v354 = v351;
      v351.i64[0] = v350.u32[2];
      v351.i64[1] = v350.u32[3];
      int64x2_t v355 = vpaddq_s64((int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v354)), (int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v351)));
      int64x2_t v356 = vpaddq_s64(v354, v351);
      unint64_t v357 = (v355.i64[0] << v343) | v342;
      if (v356.i64[0] + (v343 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v269 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
        if ((v343 & 0x3F) != 0) {
          unint64_t v357 = (unint64_t)v355.i64[0] >> -(v343 & 0x3F);
        }
        else {
          unint64_t v357 = 0;
        }
      }
      uint64_t v358 = v356.i64[1];
      unint64_t v359 = v356.i64[0] + v343;
      uint64_t v360 = (v356.i64[0] + v343) & 0x3F;
      unint64_t v361 = v357 | (v355.i64[1] << v359);
      if ((unint64_t)(v360 + v356.i64[1]) >= 0x40)
      {
        *(void *)((char *)v269 + ((v359 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
        unint64_t v361 = (unint64_t)v355.i64[1] >> -(char)v360;
        if (!v360) {
          unint64_t v361 = 0;
        }
      }
      uint64_t v362 = 0;
      v363.i64[0] = 0xF000F000F000FLL;
      v363.i64[1] = 0xF000F000F000FLL;
      v364.i64[0] = -1;
      v364.i64[1] = -1;
      unint64_t v365 = v359 + v358;
      char v366 = 1;
      do
      {
        char v367 = v366;
        uint16x8_t v368 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v364, (uint16x8_t)vaddq_s16(v517, v363)), *(&v508 + v362));
        int32x4_t v369 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v517.i8);
        int32x4_t v370 = (int32x4_t)vmovl_high_u16((uint16x8_t)v517);
        int32x4_t v371 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v368.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v369)), (int32x4_t)vshlq_u32(vmovl_high_u16(v368), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v370)));
        int32x4_t v372 = vpaddq_s32(v369, v370);
        v373.i64[0] = v371.u32[0];
        v373.i64[1] = v371.u32[1];
        uint64x2_t v374 = (uint64x2_t)v373;
        v373.i64[0] = v371.u32[2];
        v373.i64[1] = v371.u32[3];
        uint64x2_t v375 = (uint64x2_t)v373;
        v373.i64[0] = v372.u32[0];
        v373.i64[1] = v372.u32[1];
        int64x2_t v376 = v373;
        v373.i64[0] = v372.u32[2];
        v373.i64[1] = v372.u32[3];
        int64x2_t v377 = vpaddq_s64((int64x2_t)vshlq_u64(v374, (uint64x2_t)vzip1q_s64((int64x2_t)0, v376)), (int64x2_t)vshlq_u64(v375, (uint64x2_t)vzip1q_s64((int64x2_t)0, v373)));
        int64x2_t v378 = vpaddq_s64(v376, v373);
        unint64_t v379 = (v377.i64[0] << v365) | v361;
        if (v378.i64[0] + (v365 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v269 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v379;
          unint64_t v379 = (unint64_t)v377.i64[0] >> -(v365 & 0x3F);
          if ((v365 & 0x3F) == 0) {
            unint64_t v379 = 0;
          }
        }
        unint64_t v380 = v378.i64[0] + v365;
        unint64_t v361 = v379 | (v377.i64[1] << v380);
        if ((v380 & 0x3F) + v378.i64[1] >= 0x40)
        {
          *(void *)((char *)v269 + ((v380 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
          unint64_t v361 = (unint64_t)v377.i64[1] >> -(v380 & 0x3F);
          if ((v380 & 0x3F) == 0) {
            unint64_t v361 = 0;
          }
        }
        char v366 = 0;
        unint64_t v365 = v380 + v378.i64[1];
        uint64_t v362 = 1;
      }
      while ((v367 & 1) != 0);
      uint64_t v381 = 0;
      char v382 = 1;
      v383.i64[0] = 0xF000F000F000FLL;
      v383.i64[1] = 0xF000F000F000FLL;
      v384.i64[0] = -1;
      v384.i64[1] = -1;
      do
      {
        char v385 = v382;
        uint16x8_t v386 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v384, (uint16x8_t)vaddq_s16(v518, v383)), *(&v510 + v381));
        int32x4_t v387 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v518.i8);
        int32x4_t v388 = (int32x4_t)vmovl_high_u16((uint16x8_t)v518);
        int32x4_t v389 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v386.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)), (int32x4_t)vshlq_u32(vmovl_high_u16(v386), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v388)));
        int32x4_t v390 = vpaddq_s32(v387, v388);
        v391.i64[0] = v389.u32[0];
        v391.i64[1] = v389.u32[1];
        uint64x2_t v392 = (uint64x2_t)v391;
        v391.i64[0] = v389.u32[2];
        v391.i64[1] = v389.u32[3];
        uint64x2_t v393 = (uint64x2_t)v391;
        v391.i64[0] = v390.u32[0];
        v391.i64[1] = v390.u32[1];
        int64x2_t v394 = v391;
        v391.i64[0] = v390.u32[2];
        v391.i64[1] = v390.u32[3];
        int64x2_t v395 = vpaddq_s64((int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)), (int64x2_t)vshlq_u64(v393, (uint64x2_t)vzip1q_s64((int64x2_t)0, v391)));
        int64x2_t v396 = vpaddq_s64(v394, v391);
        unint64_t v397 = (v395.i64[0] << v365) | v361;
        if (v396.i64[0] + (v365 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v269 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v397;
          unint64_t v397 = (unint64_t)v395.i64[0] >> -(v365 & 0x3F);
          if ((v365 & 0x3F) == 0) {
            unint64_t v397 = 0;
          }
        }
        unint64_t v398 = v396.i64[0] + v365;
        unint64_t v361 = v397 | (v395.i64[1] << v398);
        if ((v398 & 0x3F) + v396.i64[1] >= 0x40)
        {
          *(void *)((char *)v269 + ((v398 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
          unint64_t v361 = (unint64_t)v395.i64[1] >> -(v398 & 0x3F);
          if ((v398 & 0x3F) == 0) {
            unint64_t v361 = 0;
          }
        }
        char v382 = 0;
        unint64_t v365 = v398 + v396.i64[1];
        uint64_t v381 = 1;
      }
      while ((v385 & 1) != 0);
      uint64_t v399 = 0;
      char v400 = 1;
      v401.i64[0] = 0xF000F000F000FLL;
      v401.i64[1] = 0xF000F000F000FLL;
      v402.i64[0] = -1;
      v402.i64[1] = -1;
      do
      {
        char v403 = v400;
        uint16x8_t v404 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v402, (uint16x8_t)vaddq_s16(v519, v401)), *(&v512 + v399));
        int32x4_t v405 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v519.i8);
        int32x4_t v406 = (int32x4_t)vmovl_high_u16((uint16x8_t)v519);
        int32x4_t v407 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v404.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v405)), (int32x4_t)vshlq_u32(vmovl_high_u16(v404), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)));
        int32x4_t v408 = vpaddq_s32(v405, v406);
        v409.i64[0] = v407.u32[0];
        v409.i64[1] = v407.u32[1];
        uint64x2_t v410 = (uint64x2_t)v409;
        v409.i64[0] = v407.u32[2];
        v409.i64[1] = v407.u32[3];
        uint64x2_t v411 = (uint64x2_t)v409;
        v409.i64[0] = v408.u32[0];
        v409.i64[1] = v408.u32[1];
        int64x2_t v412 = v409;
        v409.i64[0] = v408.u32[2];
        v409.i64[1] = v408.u32[3];
        int64x2_t v413 = vpaddq_s64((int64x2_t)vshlq_u64(v410, (uint64x2_t)vzip1q_s64((int64x2_t)0, v412)), (int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v409)));
        int64x2_t v414 = vpaddq_s64(v412, v409);
        unint64_t v415 = (v413.i64[0] << v365) | v361;
        if (v414.i64[0] + (v365 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v269 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v415;
          unint64_t v415 = (unint64_t)v413.i64[0] >> -(v365 & 0x3F);
          if ((v365 & 0x3F) == 0) {
            unint64_t v415 = 0;
          }
        }
        unint64_t v416 = v414.i64[0] + v365;
        unint64_t v361 = v415 | (v413.i64[1] << v416);
        if ((v416 & 0x3F) + v414.i64[1] >= 0x40)
        {
          *(void *)((char *)v269 + ((v416 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
          unint64_t v361 = (unint64_t)v413.i64[1] >> -(v416 & 0x3F);
          if ((v416 & 0x3F) == 0) {
            unint64_t v361 = 0;
          }
        }
        char v400 = 0;
        unint64_t v365 = v416 + v414.i64[1];
        uint64_t v399 = 1;
      }
      while ((v403 & 1) != 0);
      if ((v365 & 0x3F) != 0) {
        *(void *)((char *)v269 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
      }
      unint64_t result = (v365 - v270 + 7) >> 3;
      char v273 = *a2 | (result - 1);
    }
  }
  else
  {
    unsigned int v272 = ((unsigned __int32)a3->i32[0] >> 12) & 0xFFFFFC00 | ((unsigned __int16)a3->i32[0] >> 6);
    *(unsigned char *)(a1 + 2) = (unsigned __int32)a3->i32[0] >> 28;
    *(_WORD *)a1 = v272;
    char v273 = 2;
    unint64_t result = 3;
  }
  *a2 = v273;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, char *a4, int a5, int a6)
{
  uint64_t v9 = a3;
  int32x4_t v11 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v12, v13);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  int64x2_t v14 = a4 + 1;
  if (a5 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 8;
  if (v16 >= 8) {
    int v17 = 8;
  }
  else {
    int v17 = v16;
  }
  if (v17 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 2, a2, v17, v13);
    v9 += result;
  }
  else
  {
    *int64x2_t v14 = 0;
  }
  uint64_t v18 = 4 * a2;
  int8x16_t v19 = a4 + 2;
  if (a6 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v12 && v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v19, (int64x2_t *)((char *)v11 + v18), a2, v12, v22);
    v9 += result;
    int16x8_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  else
  {
    *int8x16_t v19 = 0;
    int16x8_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  if (v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int64x2_t *)((char *)v11 + v18 + 32), a2, v17, v22);
    v9 += result;
    goto LABEL_35;
  }
LABEL_34:
  *int16x8_t v23 = 0;
LABEL_35:
  int16x8_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int64x2_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    v9 += result;
    int16x8_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  else
  {
    char *v24 = 0;
    int16x8_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int64x2_t *)((char *)v11 + 8 * a2 + 32), a2, v17, v27);
    v9 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v28 = 0;
LABEL_49:
  int16x8_t v29 = a4 + 6;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v29, (int64x2_t *)((char *)v11 + 12 * a2), a2, v12, v32);
    v9 += result;
    int16x8_t v33 = a4 + 7;
    if (!v17) {
      goto LABEL_64;
    }
  }
  else
  {
    *int16x8_t v29 = 0;
    int16x8_t v33 = a4 + 7;
    if (!v17)
    {
LABEL_64:
      char *v33 = 0;
      return result;
    }
  }
  if (!v32) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int64x2_t *)((char *)v11 + 12 * a2 + 32), a2, v17, v32);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)1>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(unint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  int64x2_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v11 = (int16x8_t)vzip1q_s64(*a3, v9);
  int16x8_t v12 = (int16x8_t)vzip2q_s64(*a3, v9);
  int16x8_t v13 = (int16x8_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  int64x2_t v14 = (int64x2_t *)((char *)v7 + a4);
  int64x2_t v17 = v14[1];
  int16x8_t v18 = (int16x8_t)vzip2q_s64(v8, v10);
  int16x8_t v19 = vshrq_n_s16(v11, 6uLL);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16(v12, 6uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip1q_s64(v15, *v14), 6uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip2q_s64(v15, *v14), 6uLL);
  int16x8_t v23 = vshrq_n_s16(v13, 6uLL);
  int16x8_t v24 = vshrq_n_s16(v18, 6uLL);
  int16x8_t v25 = vshrq_n_s16((int16x8_t)vzip1q_s64(v16, v17), 6uLL);
  int16x8_t v26 = vshrq_n_s16((int16x8_t)vzip2q_s64(v16, v17), 6uLL);
  int16x8_t v27 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 0);
  v28.i64[0] = 0x5000500050005;
  v28.i64[1] = 0x5000500050005;
  int8x16_t v423 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v27), 6uLL), v28);
  int8x16_t v425 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, v27), 6uLL), v28);
  int8x16_t v427 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v27), 6uLL), v28);
  int8x16_t v428 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v27), 6uLL), v28);
  int8x16_t v429 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v27), 6uLL), v28);
  int8x16_t v430 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v27), 6uLL), v28);
  int8x16_t v431 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v27), 6uLL), v28);
  int8x16_t v432 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v27), 6uLL), v28);
  int16x8_t v29 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v423, (int16x8_t)v425), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v423, (int16x8_t)v425), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = vpmaxq_s16(v29, v29);
  int16x8_t v32 = vpminq_s16(v30, v30);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  int16x8_t v37 = vminq_s16(v34, v36);
  int16x8_t v38 = vzip1q_s16(v33, v34);
  v39.i64[0] = 0x10001000100010;
  v39.i64[1] = 0x10001000100010;
  int16x8_t v40 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v38)), (int8x16_t)vceqzq_s16(v38));
  int16x8_t v41 = vpmaxq_s16(v40, v40);
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v427, (int16x8_t)v428), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v427, (int16x8_t)v428), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vpmaxq_s16(v44, v44);
  int16x8_t v47 = vpminq_s16(v45, v45);
  int16x8_t v48 = vmaxq_s16(vmaxq_s16(v33, v35), v46);
  int16x8_t v49 = vminq_s16(v37, v47);
  int16x8_t v50 = vzip1q_s16(v46, v47);
  int16x8_t v51 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v50)), (int8x16_t)vceqzq_s16(v50));
  int16x8_t v52 = vpmaxq_s16(v51, v51);
  int16x8_t v53 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v429, (int16x8_t)v430), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v429, (int16x8_t)v430), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = vpmaxq_s16(v53, v53);
  int16x8_t v56 = vpminq_s16(v54, v54);
  int16x8_t v57 = vpmaxq_s16(v55, v55);
  int16x8_t v58 = vpminq_s16(v56, v56);
  int16x8_t v59 = vmaxq_s16(v48, v57);
  int16x8_t v60 = vminq_s16(v49, v58);
  int16x8_t v61 = vzip1q_s16(v57, v58);
  int16x8_t v62 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v61)), (int8x16_t)vceqzq_s16(v61));
  int16x8_t v63 = vpmaxq_s16(v62, v62);
  int16x8_t v64 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v431, (int16x8_t)v432), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v431, (int16x8_t)v432), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = vpmaxq_s16(v64, v64);
  int16x8_t v67 = vpminq_s16(v65, v65);
  int16x8_t v68 = vpmaxq_s16(v66, v66);
  int16x8_t v69 = vpminq_s16(v67, v67);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(v59, v68);
  int16x8_t v71 = vminq_s16(v60, v69);
  int16x8_t v72 = vzip1q_s16(v68, v69);
  int16x8_t v73 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v72)), (int8x16_t)vceqzq_s16(v72));
  v69.i64[0] = -1;
  v69.i64[1] = -1;
  int16x8_t v74 = vpmaxq_s16(v73, v73);
  int8x16_t v75 = (int8x16_t)vmaxq_s16(vmaxq_s16(v41, v52), vmaxq_s16(v63, v74));
  int16x8_t v76 = vclzq_s16(vsubq_s16((int16x8_t)v70, v71));
  v37.i64[0] = 0xF000F000F000FLL;
  v37.i64[1] = 0xF000F000F000FLL;
  int16x8_t v77 = vsubq_s16(v37, v76);
  int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v39, v76);
  int8x16_t v79 = (int8x16_t)vsubq_s16(vshlq_s16(v69, v77), v71);
  int8x16_t v80 = (int8x16_t)vcgtq_s16((int16x8_t)v75, (int16x8_t)v78);
  int8x16_t v439 = vbslq_s8(v80, v78, v75);
  int8x16_t v440 = (int8x16_t)v71;
  int8x16_t v441 = v70;
  int8x16_t v442 = vandq_s8(v79, v80);
  v70.i64[0] = 0x8000800080008;
  v70.i64[1] = 0x8000800080008;
  int8x16_t v81 = vandq_s8(v80, v70);
  v82.i64[0] = 0x3000300030003;
  v82.i64[1] = 0x3000300030003;
  int16x8_t v83 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v41), (int16x8_t)v82), (int16x8_t)0);
  int8x16_t v84 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v52), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v63), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v74), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v435 = vsubq_s16((int16x8_t)v439, v83);
  int16x8_t v436 = vsubq_s16((int16x8_t)v439, (int16x8_t)v84);
  int16x8_t v437 = vsubq_s16((int16x8_t)v439, v85);
  int16x8_t v438 = vsubq_s16((int16x8_t)v439, v86);
  int8x16_t v87 = (int8x16_t)vceqq_s16(vaddq_s16(v86, v85), vnegq_s16(vaddq_s16(v83, (int16x8_t)v84)));
  v84.i64[0] = 0x4000400040004;
  v84.i64[1] = 0x4000400040004;
  int8x16_t v88 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v439), v82), v81), vbicq_s8(v84, v87));
  int8x16_t v433 = (int8x16_t)v27;
  int8x16_t v434 = v88;
  if (vmaxvq_s16((int16x8_t)v439))
  {
    int16x8_t v417 = v21;
    int16x8_t v418 = v22;
    int16x8_t v419 = v23;
    int16x8_t v420 = v24;
    int16x8_t v421 = v25;
    int16x8_t v422 = v26;
    v89.i64[0] = 0x4000400040004;
    v89.i64[1] = 0x4000400040004;
    int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v423, (int16x8_t)vqtbl1q_s8(v423, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v425, (int16x8_t)vqtbl1q_s8(v425, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v92 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v427, (int16x8_t)vqtbl1q_s8(v427, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v428, (int16x8_t)vqtbl1q_s8(v428, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v429, (int16x8_t)vqtbl1q_s8(v429, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v430, (int16x8_t)vqtbl1q_s8(v430, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v431, (int16x8_t)vqtbl1q_s8(v431, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v432, (int16x8_t)vqtbl1q_s8(v432, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vpmaxq_s16(v100, v100);
    int16x8_t v103 = vpminq_s16(v101, v101);
    int16x8_t v104 = vmaxq_s16(v102, v35);
    int16x8_t v105 = vminq_s16(v103, v36);
    int16x8_t v106 = vzip1q_s16(v102, v103);
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v106)), (int8x16_t)vceqzq_s16(v106));
    int16x8_t v108 = vpmaxq_s16(v107, v107);
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v104, v113);
    int16x8_t v116 = vminq_s16(v105, v114);
    int16x8_t v117 = vzip1q_s16(v113, v114);
    int16x8_t v118 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v117)), (int8x16_t)vceqzq_s16(v117));
    int16x8_t v119 = vpmaxq_s16(v118, v118);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int16x8_t v127 = vminq_s16(v116, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v126, v135);
    int8x16_t v138 = (int8x16_t)vminq_s16(v127, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16(v108, v119), vmaxq_s16(v130, v141));
    int8x16_t v416 = (int8x16_t)v137;
    int16x8_t v143 = vclzq_s16(vsubq_s16(v137, (int16x8_t)v138));
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v39, v143);
    int8x16_t v145 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v142);
    v142.i64[0] = 0x18001800180018;
    v142.i64[1] = 0x18001800180018;
    int8x16_t v147 = vbslq_s8(v145, v142, v39);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v108), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v119), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v130), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v141), (int16x8_t)v82), (int16x8_t)0);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v146, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v146, v149);
    int8x16_t v154 = (int8x16_t)vsubq_s16((int16x8_t)v146, v150);
    int8x16_t v155 = (int8x16_t)vsubq_s16((int16x8_t)v146, v151);
    int8x16_t v156 = vbicq_s8(v89, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v89.i64[0] = 0x7000700070007;
    v89.i64[1] = 0x7000700070007;
    v157.i64[0] = 0x8000800080008;
    v157.i64[1] = 0x8000800080008;
    int8x16_t v158 = v439;
    int16x8_t v159 = (int16x8_t)vandq_s8(v88, v82);
    v160.i64[0] = 0x2000200020002;
    v160.i64[1] = 0x2000200020002;
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v159, v160), v39);
    int16x8_t v162 = v435;
    int16x8_t v163 = v436;
    int16x8_t v164 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v439, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v81, v157))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v157)), v161);
    int16x8_t v166 = v437;
    int16x8_t v165 = v438;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v164, v435, (int16x8_t)v89), vshlq_n_s16(vaddq_s16(vaddq_s16(v437, v436), v438), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v146, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v156, (int16x8_t)v156)), (int16x8_t)v152, (int16x8_t)v89), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v154, (int16x8_t)v153), (int16x8_t)v155), 3uLL))), 0);
    int v168 = (unsigned __int16)vaddvq_s16((int16x8_t)v167);
    BOOL v170 = a5 < 4 || a6 < 2;
    if (v168)
    {
      v171.i64[0] = 0x3000300030003;
      v171.i64[1] = 0x3000300030003;
      int8x16_t v423 = vbslq_s8(v167, v90, v423);
      int8x16_t v425 = vbslq_s8(v167, v91, v425);
      int8x16_t v172 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v146), v171), v147), v156);
      v173.i64[0] = 0xF000F000F000FLL;
      v173.i64[1] = 0xF000F000F000FLL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int8x16_t v427 = vbslq_s8(v167, v92, v427);
      int8x16_t v428 = vbslq_s8(v167, v93, v428);
      int8x16_t v429 = vbslq_s8(v167, v94, v429);
      int8x16_t v430 = vbslq_s8(v167, v95, v430);
      int8x16_t v431 = vbslq_s8(v167, v96, v431);
      int8x16_t v432 = vbslq_s8(v167, v97, v432);
      int16x8_t v162 = (int16x8_t)vbslq_s8(v167, v152, (int8x16_t)v435);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v167, v153, (int8x16_t)v436);
      int16x8_t v435 = v162;
      int16x8_t v436 = v163;
      int16x8_t v166 = (int16x8_t)vbslq_s8(v167, v154, (int8x16_t)v437);
      int16x8_t v165 = (int16x8_t)vbslq_s8(v167, v155, (int8x16_t)v438);
      int16x8_t v437 = v166;
      int16x8_t v438 = v165;
      int8x16_t v441 = vbslq_s8(v167, v416, v441);
      int8x16_t v442 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v171, vsubq_s16(v173, v143)), (int16x8_t)v138), v145), v442);
      int8x16_t v158 = vbslq_s8(v167, v146, v439);
      int8x16_t v439 = v158;
      int8x16_t v440 = vbslq_s8(v167, v138, v440);
      int8x16_t v88 = vbslq_s8(v167, v172, v88);
      int8x16_t v433 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v433, (int16x8_t)vqtbl1q_s8(v433, (int8x16_t)xmmword_242EA76C0)), v433);
      int8x16_t v434 = v88;
    }
    int16x8_t v174 = v421;
    int16x8_t v175 = v419;
    int16x8_t v176 = v417;
    if (!v170)
    {
      int16x8_t v177 = vsubq_s16(v19, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v178 = v418;
      v178.i32[3] = v20.i32[3];
      int16x8_t v179 = vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v180 = v420;
      v180.i32[3] = v20.i32[3];
      int16x8_t v181 = v422;
      v181.i32[3] = v20.i32[3];
      int16x8_t v182 = v179;
      v182.i32[3] = v177.i32[0];
      v177.i32[0] = v179.i32[3];
      int16x8_t v183 = vshlq_n_s16(v182, 6uLL);
      v184.i64[0] = 0x5000500050005;
      v184.i64[1] = 0x5000500050005;
      int8x16_t v185 = (int8x16_t)vshlq_s16(vshlq_n_s16(v177, 6uLL), v184);
      int8x16_t v186 = (int8x16_t)vshlq_s16(v183, v184);
      int8x16_t v187 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v417, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v176.i8, (int8x16_t)xmmword_242EA7590)), 6uLL), v184);
      int8x16_t v188 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v418, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v176.i8, (int8x16_t)xmmword_242EA7630)), 6uLL), v184);
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v419, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7640)), 6uLL), v184);
      int8x16_t v190 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v420, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7570)), 6uLL), v184);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v421, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7650)), 6uLL), v184);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v422, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7570)), 6uLL), v184);
      int16x8_t v193 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v185, (int16x8_t)v186), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v194 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v185, (int16x8_t)v186), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v195 = vpmaxq_s16(v193, v193);
      int16x8_t v196 = vpminq_s16(v194, v194);
      int16x8_t v197 = vpmaxq_s16(v195, v195);
      int16x8_t v198 = vpminq_s16(v196, v196);
      v199.i64[0] = 0x8000800080008000;
      v199.i64[1] = 0x8000800080008000;
      int16x8_t v200 = vmaxq_s16(v197, v199);
      v199.i64[0] = 0x8000800080008000;
      v199.i64[1] = 0x8000800080008000;
      int16x8_t v201 = vminq_s16(v198, v199);
      int16x8_t v202 = vzip1q_s16(v197, v198);
      v199.i64[0] = 0x10001000100010;
      v199.i64[1] = 0x10001000100010;
      int16x8_t v203 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v202)), (int8x16_t)vceqzq_s16(v202));
      int16x8_t v204 = vpmaxq_s16(v203, v203);
      int16x8_t v205 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v207 = vpmaxq_s16(v205, v205);
      int16x8_t v208 = vpminq_s16(v206, v206);
      int16x8_t v209 = vpmaxq_s16(v207, v207);
      int16x8_t v210 = vpminq_s16(v208, v208);
      int16x8_t v211 = vmaxq_s16(v200, v209);
      int16x8_t v212 = vminq_s16(v201, v210);
      int16x8_t v213 = vzip1q_s16(v209, v210);
      int16x8_t v214 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v213)), (int8x16_t)vceqzq_s16(v213));
      int16x8_t v215 = vpmaxq_s16(v214, v214);
      int16x8_t v216 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v218 = vpmaxq_s16(v216, v216);
      int16x8_t v219 = vpminq_s16(v217, v217);
      int16x8_t v220 = vpmaxq_s16(v218, v218);
      int16x8_t v221 = vpminq_s16(v219, v219);
      int16x8_t v222 = vmaxq_s16(v211, v220);
      int16x8_t v223 = vzip1q_s16(v220, v221);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int16x8_t v230 = vpmaxq_s16(v228, v228);
      int16x8_t v231 = vpminq_s16(v229, v229);
      int8x16_t v232 = (int8x16_t)vmaxq_s16(v222, v230);
      int8x16_t v233 = (int8x16_t)vminq_s16(vminq_s16(v212, v221), v231);
      int16x8_t v234 = vzip1q_s16(v230, v231);
      int16x8_t v235 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v234)), (int8x16_t)vceqzq_s16(v234));
      int8x16_t v236 = (int8x16_t)vpmaxq_s16(v235, v235);
      int8x16_t v237 = (int8x16_t)vmaxq_s16(vmaxq_s16(v204, v215), vmaxq_s16(v225, (int16x8_t)v236));
      int16x8_t v238 = vclzq_s16(vsubq_s16((int16x8_t)v232, (int16x8_t)v233));
      int8x16_t v239 = (int8x16_t)vsubq_s16(v199, v238);
      int8x16_t v240 = (int8x16_t)vcgtq_s16((int16x8_t)v237, (int16x8_t)v239);
      int8x16_t v241 = vbslq_s8(v240, v239, v237);
      v242.i64[0] = 0x3000300030003;
      v242.i64[1] = 0x3000300030003;
      int16x8_t v243 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v204), v242), (int16x8_t)0);
      int16x8_t v244 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v215), v242), (int16x8_t)0);
      int16x8_t v245 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v225), v242), (int16x8_t)0);
      int16x8_t v246 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, (int16x8_t)v236), v242), (int16x8_t)0);
      int8x16_t v247 = (int8x16_t)vsubq_s16((int16x8_t)v241, v243);
      int8x16_t v248 = (int8x16_t)vsubq_s16((int16x8_t)v241, v244);
      int8x16_t v249 = (int8x16_t)vsubq_s16((int16x8_t)v241, v245);
      int8x16_t v250 = (int8x16_t)vsubq_s16((int16x8_t)v241, v246);
      v236.i64[0] = 0x4000400040004;
      v236.i64[1] = 0x4000400040004;
      int8x16_t v251 = vbicq_s8(v236, (int8x16_t)vceqq_s16(vaddq_s16(v246, v245), vnegq_s16(vaddq_s16(v243, v244))));
      v252.i64[0] = 0x7000700070007;
      v252.i64[1] = 0x7000700070007;
      int16x8_t v253 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v239, v240), vaddq_s16((int16x8_t)v251, (int16x8_t)v251)), (int16x8_t)v247, v252), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v249, (int16x8_t)v248), (int16x8_t)v250), 3uLL));
      v239.i64[0] = 0x8000800080008;
      v239.i64[1] = 0x8000800080008;
      int8x16_t v88 = v434;
      int16x8_t v162 = v435;
      v254.i64[0] = 0x2000200020002;
      v254.i64[1] = 0x2000200020002;
      int16x8_t v255 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v434, (int8x16_t)v242), (int16x8_t)v254), (int8x16_t)v199);
      int16x8_t v165 = v438;
      int8x16_t v158 = v439;
      int16x8_t v256 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v439, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v434, v239))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v239)), v255);
      int16x8_t v163 = v436;
      int16x8_t v166 = v437;
      int8x16_t v257 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v256, v435, v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v437, v436), v438), 3uLL)), v253), 0);
      if (vaddvq_s16((int16x8_t)v257))
      {
        v258.i64[0] = 0x9000900090009;
        v258.i64[1] = 0x9000900090009;
        int8x16_t v423 = vbslq_s8(v257, v185, v423);
        int8x16_t v425 = vbslq_s8(v257, v186, v425);
        v259.i64[0] = -1;
        v259.i64[1] = -1;
        int8x16_t v427 = vbslq_s8(v257, v187, v427);
        int8x16_t v428 = vbslq_s8(v257, v188, v428);
        v260.i64[0] = 0xF000F000F000FLL;
        v260.i64[1] = 0xF000F000F000FLL;
        int8x16_t v429 = vbslq_s8(v257, v189, v429);
        int8x16_t v430 = vbslq_s8(v257, v190, v430);
        int8x16_t v431 = vbslq_s8(v257, v191, v431);
        int8x16_t v432 = vbslq_s8(v257, v192, v432);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v257, v247, (int8x16_t)v435);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v257, v248, (int8x16_t)v436);
        int16x8_t v435 = v162;
        int16x8_t v436 = v163;
        int16x8_t v166 = (int16x8_t)vbslq_s8(v257, v249, (int8x16_t)v437);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v257, v250, (int8x16_t)v438);
        int16x8_t v437 = v166;
        int16x8_t v438 = v165;
        int8x16_t v441 = vbslq_s8(v257, v232, v441);
        int8x16_t v442 = vbslq_s8(v257, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v259, vsubq_s16(v260, v238)), (int16x8_t)v233), v240), v442);
        int8x16_t v158 = vbslq_s8(v257, v241, v439);
        int8x16_t v439 = v158;
        int8x16_t v440 = vbslq_s8(v257, v233, v440);
        int8x16_t v88 = vbslq_s8(v257, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v241), v254), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v240, v258), (int16x8_t)vmvnq_s8(v240))), v251), v434);
        int8x16_t v433 = vbslq_s8(v257, vextq_s8(v20, v20, 0xCuLL), v433);
        int8x16_t v434 = v88;
      }
    }
    int16x8_t v261 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v162));
    int8x16_t v424 = (int8x16_t)vaddq_s16(v261, (int16x8_t)v423);
    int8x16_t v426 = (int8x16_t)vaddq_s16((int16x8_t)v425, v261);
    int16x8_t v262 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v163));
    int8x16_t v427 = (int8x16_t)vaddq_s16((int16x8_t)v427, v262);
    int8x16_t v428 = (int8x16_t)vaddq_s16((int16x8_t)v428, v262);
    int16x8_t v263 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v166));
    int8x16_t v429 = (int8x16_t)vaddq_s16((int16x8_t)v429, v263);
    int8x16_t v430 = (int8x16_t)vaddq_s16((int16x8_t)v430, v263);
    int8x16_t v264 = vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v165));
    int8x16_t v431 = (int8x16_t)vaddq_s16((int16x8_t)v431, (int16x8_t)v264);
    int8x16_t v432 = (int8x16_t)vaddq_s16((int16x8_t)v432, (int16x8_t)v264);
    v264.i64[0] = 0x8000800080008;
    v264.i64[1] = 0x8000800080008;
    v265.i64[0] = 0x3000300030003;
    v265.i64[1] = 0x3000300030003;
    v266.i64[0] = 0x2000200020002;
    v266.i64[1] = 0x2000200020002;
    int8x16_t v267 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v265), v266);
    v266.i64[0] = 0x10001000100010;
    v266.i64[1] = 0x10001000100010;
    int16x8_t v268 = (int16x8_t)vandq_s8(v267, (int8x16_t)v266);
    v266.i64[0] = 0x7000700070007;
    v266.i64[1] = 0x7000700070007;
    int16x8_t v269 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v158, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v88, v264))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v264)), v268), v162, v266), vshlq_n_s16(vaddq_s16(v166, vaddq_s16(v163, v165)), 3uLL));
    if ((unint64_t)(vpaddq_s16(v269, v269).i16[0] - 475) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint32x4_t *)a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      unint64_t v270 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v271 = 8 * (a1 & 7);
      if (v271) {
        uint64_t v272 = *v270 & ~(-1 << v271);
      }
      else {
        uint64_t v272 = 0;
      }
      *a2 = 0;
      uint64_t v275 = ((v158.i16[0] << 10) + 15360) & 0x3C00;
      if (!v158.i16[0]) {
        uint64_t v275 = 0;
      }
      if (v158.i16[1]) {
        uint64_t v276 = ((v158.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v276 = 0;
      }
      unint64_t v277 = v275 | v276 | v88.i8[0] & 0x1F | (32 * (v88.i8[2] & 0x1Fu));
      unint64_t v278 = v433.i16[0] & 0x3FF | ((unint64_t)(v433.i16[1] & 0x3FF) << 10);
      uint64_t v279 = (v277 << v271) | v272;
      if (v271 >= 0x2E)
      {
        *unint64_t v270 = v279;
        uint64_t v279 = v277 >> (-8 * (a1 & 7u));
      }
      unint64_t v280 = (v271 + 18) & 0x3A;
      unint64_t v281 = v279 | (v278 << v280);
      if (v280 >= 0x2C)
      {
        *(void *)((char *)v270 + (((v271 + 18) >> 3) & 8)) = v281;
        unint64_t v281 = v278 >> -(char)v280;
      }
      unint64_t v282 = v271 + 38;
      int8x16_t v283 = (int8x16_t)vsubq_s16((int16x8_t)v439, v435);
      int8x16_t v284 = (int8x16_t)vsubq_s16((int16x8_t)v439, v436);
      int8x16_t v285 = (int8x16_t)vsubq_s16((int16x8_t)v439, v437);
      int8x16_t v286 = (int8x16_t)vsubq_s16((int16x8_t)v439, v438);
      *(uint8x8_t *)v283.i8 = vqmovn_u16((uint16x8_t)v283);
      *(uint8x8_t *)v284.i8 = vqmovn_u16((uint16x8_t)v284);
      *(uint8x8_t *)v285.i8 = vqmovn_u16((uint16x8_t)v285);
      *(uint8x8_t *)v286.i8 = vqmovn_u16((uint16x8_t)v286);
      v286.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v283, v284), (int16x8_t)vzip1q_s8(v285, v286)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v283, v284), (int16x8_t)vtrn2q_s8(v285, v286))).u64[0];
      v284.i64[0] = 0x202020202020202;
      v284.i64[1] = 0x202020202020202;
      int8x16_t v287 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v434.i8, (int8x8_t)0x4000400040004)))), v284);
      v284.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v284.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v285, (uint8x16_t)vorrq_s8(v287, v284)), (int8x16_t)v286.u64[0]);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v287.i8);
      uint16x8_t v290 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vmovl_high_u8(v288));
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16(v289, (int16x8_t)vmovl_high_u8((uint8x16_t)v287));
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16(v291);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      uint64_t v302 = (v271 + 38) & 0x3E;
      unint64_t v303 = (v300.i64[0] << v302) | v281;
      if ((unint64_t)(v301.i64[0] + v302) >= 0x40)
      {
        *(void *)((char *)v270 + ((v282 >> 3) & 8)) = v303;
        unint64_t v303 = (unint64_t)v300.i64[0] >> -(char)v302;
      }
      unint64_t v304 = v301.i64[0] + v282;
      unint64_t v305 = v303 | (v300.i64[1] << v304);
      if ((v304 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v304 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v300.i64[1] >> -(v304 & 0x3F);
        if ((v304 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      unint64_t v306 = v304 + v301.i64[1];
      v307.i64[0] = 0x8000800080008;
      v307.i64[1] = 0x8000800080008;
      v308.i64[0] = -1;
      v308.i64[1] = -1;
      int16x8_t v309 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v434, v307), (int8x16_t)0, 0xCuLL), v439);
      v310.i64[0] = 0xF000F000F000FLL;
      v310.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v311 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v308, (uint16x8_t)vaddq_s16(v309, v310)), v442);
      int32x4_t v312 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v309.i8);
      int32x4_t v313 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v311.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v312)), (int32x4_t)vmovl_high_u16(v311));
      int32x4_t v314 = vpaddq_s32(v312, (int32x4_t)vmovl_high_u16((uint16x8_t)v309));
      v315.i64[0] = v313.u32[0];
      v315.i64[1] = v313.u32[1];
      uint64x2_t v316 = (uint64x2_t)v315;
      v315.i64[0] = v313.u32[2];
      v315.i64[1] = v313.u32[3];
      uint64x2_t v317 = (uint64x2_t)v315;
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      int64x2_t v318 = v315;
      v315.i64[0] = v314.u32[2];
      v315.i64[1] = v314.u32[3];
      int64x2_t v319 = vpaddq_s64((int64x2_t)vshlq_u64(v316, (uint64x2_t)vzip1q_s64((int64x2_t)0, v318)), (int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)));
      int64x2_t v320 = vpaddq_s64(v318, v315);
      unint64_t v321 = (v319.i64[0] << v306) | v305;
      if (v320.i64[0] + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v319.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v321 = 0;
        }
      }
      unint64_t v322 = v320.i64[0] + v306;
      unint64_t v323 = v321 | (v319.i64[1] << v322);
      if ((v322 & 0x3F) + v320.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v322 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        unint64_t v323 = (unint64_t)v319.i64[1] >> -(v322 & 0x3F);
        if ((v322 & 0x3F) == 0) {
          unint64_t v323 = 0;
        }
      }
      unint64_t v324 = v322 + v320.i64[1];
      int16x8_t v325 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v435, 0xCuLL);
      v326.i64[0] = 0xF000F000F000FLL;
      v326.i64[1] = 0xF000F000F000FLL;
      v327.i64[0] = -1;
      v327.i64[1] = -1;
      uint16x8_t v328 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v327, (uint16x8_t)vaddq_s16(v325, v326)), v424);
      int32x4_t v329 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v325.i8);
      int32x4_t v330 = (int32x4_t)vmovl_high_u16((uint16x8_t)v325);
      int32x4_t v331 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v328.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)), (int32x4_t)vshlq_u32(vmovl_high_u16(v328), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)));
      int32x4_t v332 = vpaddq_s32(v329, v330);
      v333.i64[0] = v331.u32[0];
      v333.i64[1] = v331.u32[1];
      uint64x2_t v334 = (uint64x2_t)v333;
      v333.i64[0] = v331.u32[2];
      v333.i64[1] = v331.u32[3];
      uint64x2_t v335 = (uint64x2_t)v333;
      v333.i64[0] = v332.u32[0];
      v333.i64[1] = v332.u32[1];
      int64x2_t v336 = v333;
      v333.i64[0] = v332.u32[2];
      v333.i64[1] = v332.u32[3];
      int64x2_t v337 = vpaddq_s64((int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v336)), (int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v333)));
      int64x2_t v338 = vpaddq_s64(v336, v333);
      unint64_t v339 = (v337.i64[0] << v324) | v323;
      if (v338.i64[0] + (v324 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v324 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
        unint64_t v339 = (unint64_t)v337.i64[0] >> -(v324 & 0x3F);
        if ((v324 & 0x3F) == 0) {
          unint64_t v339 = 0;
        }
      }
      unint64_t v340 = v338.i64[0] + v324;
      unint64_t v341 = v339 | (v337.i64[1] << v340);
      if ((v340 & 0x3F) + v338.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
        unint64_t v341 = (unint64_t)v337.i64[1] >> -(v340 & 0x3F);
        if ((v340 & 0x3F) == 0) {
          unint64_t v341 = 0;
        }
      }
      unint64_t v342 = v340 + v338.i64[1];
      v343.i64[0] = 0xF000F000F000FLL;
      v343.i64[1] = 0xF000F000F000FLL;
      v344.i64[0] = -1;
      v344.i64[1] = -1;
      uint16x8_t v345 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v344, (uint16x8_t)vaddq_s16(v435, v343)), v426);
      int32x4_t v346 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v435.i8);
      int32x4_t v347 = (int32x4_t)vmovl_high_u16((uint16x8_t)v435);
      int32x4_t v348 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v345.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)), (int32x4_t)vshlq_u32(vmovl_high_u16(v345), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)));
      int32x4_t v349 = vpaddq_s32(v346, v347);
      v350.i64[0] = v348.u32[0];
      v350.i64[1] = v348.u32[1];
      uint64x2_t v351 = (uint64x2_t)v350;
      v350.i64[0] = v348.u32[2];
      v350.i64[1] = v348.u32[3];
      uint64x2_t v352 = (uint64x2_t)v350;
      v350.i64[0] = v349.u32[0];
      v350.i64[1] = v349.u32[1];
      int64x2_t v353 = v350;
      v350.i64[0] = v349.u32[2];
      v350.i64[1] = v349.u32[3];
      int64x2_t v354 = vpaddq_s64((int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v353)), (int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v350)));
      int64x2_t v355 = vpaddq_s64(v353, v350);
      unint64_t v356 = (v354.i64[0] << v342) | v341;
      if (v355.i64[0] + (v342 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
        if ((v342 & 0x3F) != 0) {
          unint64_t v356 = (unint64_t)v354.i64[0] >> -(v342 & 0x3F);
        }
        else {
          unint64_t v356 = 0;
        }
      }
      uint64_t v357 = v355.i64[1];
      unint64_t v358 = v355.i64[0] + v342;
      uint64_t v359 = (v355.i64[0] + v342) & 0x3F;
      unint64_t v360 = v356 | (v354.i64[1] << v358);
      if ((unint64_t)(v359 + v355.i64[1]) >= 0x40)
      {
        *(void *)((char *)v270 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
        unint64_t v360 = (unint64_t)v354.i64[1] >> -(char)v359;
        if (!v359) {
          unint64_t v360 = 0;
        }
      }
      uint64_t v361 = 0;
      v362.i64[0] = 0xF000F000F000FLL;
      v362.i64[1] = 0xF000F000F000FLL;
      v363.i64[0] = -1;
      v363.i64[1] = -1;
      unint64_t v364 = v358 + v357;
      char v365 = 1;
      do
      {
        char v366 = v365;
        uint16x8_t v367 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v363, (uint16x8_t)vaddq_s16(v436, v362)), *(&v427 + v361));
        int32x4_t v368 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v436.i8);
        int32x4_t v369 = (int32x4_t)vmovl_high_u16((uint16x8_t)v436);
        int32x4_t v370 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v367.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v368)), (int32x4_t)vshlq_u32(vmovl_high_u16(v367), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v369)));
        int32x4_t v371 = vpaddq_s32(v368, v369);
        v372.i64[0] = v370.u32[0];
        v372.i64[1] = v370.u32[1];
        uint64x2_t v373 = (uint64x2_t)v372;
        v372.i64[0] = v370.u32[2];
        v372.i64[1] = v370.u32[3];
        uint64x2_t v374 = (uint64x2_t)v372;
        v372.i64[0] = v371.u32[0];
        v372.i64[1] = v371.u32[1];
        int64x2_t v375 = v372;
        v372.i64[0] = v371.u32[2];
        v372.i64[1] = v371.u32[3];
        int64x2_t v376 = vpaddq_s64((int64x2_t)vshlq_u64(v373, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)), (int64x2_t)vshlq_u64(v374, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)));
        int64x2_t v377 = vpaddq_s64(v375, v372);
        unint64_t v378 = (v376.i64[0] << v364) | v360;
        if (v377.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v378;
          unint64_t v378 = (unint64_t)v376.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v378 = 0;
          }
        }
        unint64_t v379 = v377.i64[0] + v364;
        unint64_t v360 = v378 | (v376.i64[1] << v379);
        if ((v379 & 0x3F) + v377.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v376.i64[1] >> -(v379 & 0x3F);
          if ((v379 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v365 = 0;
        unint64_t v364 = v379 + v377.i64[1];
        uint64_t v361 = 1;
      }
      while ((v366 & 1) != 0);
      uint64_t v380 = 0;
      char v381 = 1;
      v382.i64[0] = 0xF000F000F000FLL;
      v382.i64[1] = 0xF000F000F000FLL;
      v383.i64[0] = -1;
      v383.i64[1] = -1;
      do
      {
        char v384 = v381;
        uint16x8_t v385 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v383, (uint16x8_t)vaddq_s16(v437, v382)), *(&v429 + v380));
        int32x4_t v386 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v437.i8);
        int32x4_t v387 = (int32x4_t)vmovl_high_u16((uint16x8_t)v437);
        int32x4_t v388 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v385.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v386)), (int32x4_t)vshlq_u32(vmovl_high_u16(v385), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)));
        int32x4_t v389 = vpaddq_s32(v386, v387);
        v390.i64[0] = v388.u32[0];
        v390.i64[1] = v388.u32[1];
        uint64x2_t v391 = (uint64x2_t)v390;
        v390.i64[0] = v388.u32[2];
        v390.i64[1] = v388.u32[3];
        uint64x2_t v392 = (uint64x2_t)v390;
        v390.i64[0] = v389.u32[0];
        v390.i64[1] = v389.u32[1];
        int64x2_t v393 = v390;
        v390.i64[0] = v389.u32[2];
        v390.i64[1] = v389.u32[3];
        int64x2_t v394 = vpaddq_s64((int64x2_t)vshlq_u64(v391, (uint64x2_t)vzip1q_s64((int64x2_t)0, v393)), (int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)));
        int64x2_t v395 = vpaddq_s64(v393, v390);
        unint64_t v396 = (v394.i64[0] << v364) | v360;
        if (v395.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v396;
          unint64_t v396 = (unint64_t)v394.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v396 = 0;
          }
        }
        unint64_t v397 = v395.i64[0] + v364;
        unint64_t v360 = v396 | (v394.i64[1] << v397);
        if ((v397 & 0x3F) + v395.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v397 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v394.i64[1] >> -(v397 & 0x3F);
          if ((v397 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v381 = 0;
        unint64_t v364 = v397 + v395.i64[1];
        uint64_t v380 = 1;
      }
      while ((v384 & 1) != 0);
      uint64_t v398 = 0;
      char v399 = 1;
      v400.i64[0] = 0xF000F000F000FLL;
      v400.i64[1] = 0xF000F000F000FLL;
      v401.i64[0] = -1;
      v401.i64[1] = -1;
      do
      {
        char v402 = v399;
        uint16x8_t v403 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v401, (uint16x8_t)vaddq_s16(v438, v400)), *(&v431 + v398));
        int32x4_t v404 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v438.i8);
        int32x4_t v405 = (int32x4_t)vmovl_high_u16((uint16x8_t)v438);
        int32x4_t v406 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v403.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v404)), (int32x4_t)vshlq_u32(vmovl_high_u16(v403), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v405)));
        int32x4_t v407 = vpaddq_s32(v404, v405);
        v408.i64[0] = v406.u32[0];
        v408.i64[1] = v406.u32[1];
        uint64x2_t v409 = (uint64x2_t)v408;
        v408.i64[0] = v406.u32[2];
        v408.i64[1] = v406.u32[3];
        uint64x2_t v410 = (uint64x2_t)v408;
        v408.i64[0] = v407.u32[0];
        v408.i64[1] = v407.u32[1];
        int64x2_t v411 = v408;
        v408.i64[0] = v407.u32[2];
        v408.i64[1] = v407.u32[3];
        int64x2_t v412 = vpaddq_s64((int64x2_t)vshlq_u64(v409, (uint64x2_t)vzip1q_s64((int64x2_t)0, v411)), (int64x2_t)vshlq_u64(v410, (uint64x2_t)vzip1q_s64((int64x2_t)0, v408)));
        int64x2_t v413 = vpaddq_s64(v411, v408);
        unint64_t v414 = (v412.i64[0] << v364) | v360;
        if (v413.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v414;
          unint64_t v414 = (unint64_t)v412.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v414 = 0;
          }
        }
        unint64_t v415 = v413.i64[0] + v364;
        unint64_t v360 = v414 | (v412.i64[1] << v415);
        if ((v415 & 0x3F) + v413.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v415 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v412.i64[1] >> -(v415 & 0x3F);
          if ((v415 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v399 = 0;
        unint64_t v364 = v415 + v413.i64[1];
        uint64_t v398 = 1;
      }
      while ((v402 & 1) != 0);
      if ((v364 & 0x3F) != 0) {
        *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
      }
      unint64_t result = (v364 - v271 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    unsigned int v273 = ((unsigned __int32)a3->i32[0] >> 12) & 0xFFFFFC00 | ((unsigned __int16)a3->i32[0] >> 6);
    *(unsigned char *)(a1 + 2) = (unsigned __int32)a3->i32[0] >> 28;
    *(_WORD *)a1 = v273;
    *a2 = 2;
    return 3;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v11 = a6;
  if (a5 > 3)
  {
    uint64_t v14 = a5 & 0xFC;
    if (a5 == v14)
    {
      uint64_t v15 = 0;
      int64x2_t v16 = &v64;
      do
      {
        int64x2_t v17 = (unsigned __int32 *)v16;
        int16x8_t v18 = a3;
        uint64_t v19 = a5;
        do
        {
          uint32x4_t v20 = *v18++;
          uint32x4_t v21 = vshrq_n_u32(v20, 6uLL);
          *(v17 - 8) = v21.i32[0] & 0xFFFF03FF;
          *(v17 - 4) = v21.i32[1] & 0xFFFF03FF;
          *int64x2_t v17 = v21.i32[2] & 0xFFFF03FF;
          v17[4] = v21.i32[3] & 0xFFFF03FF;
          v17 += 16;
          v19 -= 4;
        }
        while (v19);
        ++v15;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int64x2_t v16 = (long long *)((char *)v16 + 4);
      }
      while (v15 != a6);
    }
    else
    {
      uint64_t v22 = 0;
      int16x8_t v23 = &v62;
      int16x8_t v24 = &v64;
      do
      {
        int16x8_t v25 = (unsigned __int32 *)v24;
        int16x8_t v26 = a3;
        uint64_t v27 = a5 & 0xFC;
        do
        {
          uint32x4_t v28 = *v26++;
          uint32x4_t v29 = vshrq_n_u32(v28, 6uLL);
          *(v25 - 8) = v29.i32[0] & 0xFFFF03FF;
          *(v25 - 4) = v29.i32[1] & 0xFFFF03FF;
          *int16x8_t v25 = v29.i32[2] & 0xFFFF03FF;
          v25[4] = v29.i32[3] & 0xFFFF03FF;
          v25 += 16;
          v27 -= 4;
        }
        while (v27);
        uint64_t v30 = v14;
        uint64_t v31 = a5 - v14;
        do
        {
          LODWORD(v23[v30]) = ((unsigned __int32)a3->i32[v30] >> 6) & 0x3FF03FF;
          ++v30;
          --v31;
        }
        while (v31);
        ++v22;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int16x8_t v24 = (long long *)((char *)v24 + 4);
        int16x8_t v23 = (long long *)((char *)v23 + 4);
      }
      while (v22 != a6);
    }
  }
  else
  {
    int16x8_t v12 = &a3->i32[2];
    int16x8_t v13 = (int *)&v63;
    do
    {
      *(v13 - 4) = (*(v12 - 2) >> 6) & 0x3FF03FF;
      if (a5 != 1)
      {
        *int16x8_t v13 = (*(v12 - 1) >> 6) & 0x3FF03FF;
        if (a5 != 2) {
          v13[4] = (*v12 >> 6) & 0x3FF03FF;
        }
      }
      int16x8_t v12 = (__int32 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  int v46 = (unsigned __int16)v62;
  int v47 = WORD1(v62);
  int v48 = (unsigned __int16)v63;
  int v49 = WORD1(v63);
  int v50 = WORD2(v62);
  int v51 = WORD3(v62);
  int v52 = WORD2(v63);
  int v53 = WORD3(v63);
  int v54 = (unsigned __int16)v64;
  int v55 = WORD1(v64);
  int v56 = (unsigned __int16)v65;
  int v57 = WORD1(v65);
  int v58 = WORD2(v64);
  int v59 = WORD3(v64);
  if (a5 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = a5;
  }
  if (a5 >= 4) {
    unsigned int v33 = a5 - 4;
  }
  else {
    unsigned int v33 = 0;
  }
  int v60 = WORD2(v65);
  int v61 = WORD3(v65);
  if (a6 >= 2) {
    unsigned int v34 = 2;
  }
  else {
    unsigned int v34 = a6;
  }
  if (a6 >= 2) {
    unsigned int v35 = a6 - 2;
  }
  else {
    unsigned int v35 = 0;
  }
  char v36 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v46, a7, v32, v34);
  int v46 = WORD4(v62);
  int v47 = WORD5(v62);
  int v48 = WORD4(v63);
  int v49 = WORD5(v63);
  int v50 = WORD6(v62);
  int v51 = HIWORD(v62);
  int v52 = WORD6(v63);
  int v53 = HIWORD(v63);
  int v54 = WORD4(v64);
  int v55 = WORD5(v64);
  int v56 = WORD4(v65);
  int v57 = WORD5(v65);
  int v58 = WORD6(v64);
  int v59 = HIWORD(v64);
  int v60 = WORD6(v65);
  int v61 = HIWORD(v65);
  if (a6 >= 4) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = v35;
  }
  int v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v46, a7, v32, v37);
  int v46 = (unsigned __int16)v66;
  int v47 = WORD1(v66);
  int v48 = (unsigned __int16)v67;
  int v49 = WORD1(v67);
  int v50 = WORD2(v66);
  int v51 = WORD3(v66);
  int v52 = WORD2(v67);
  int v53 = WORD3(v67);
  int v54 = (unsigned __int16)v68;
  int v55 = WORD1(v68);
  int v56 = (unsigned __int16)v69;
  int v57 = WORD1(v69);
  int v58 = WORD2(v68);
  int v59 = WORD3(v68);
  if (a5 >= 8) {
    unsigned int v39 = 4;
  }
  else {
    unsigned int v39 = v33;
  }
  int v60 = WORD2(v69);
  int v61 = WORD3(v69);
  int v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v46, a7, v39, v34);
  int v46 = WORD4(v66);
  int v47 = WORD5(v66);
  int v48 = WORD4(v67);
  int v49 = WORD5(v67);
  int v50 = WORD6(v66);
  int v51 = HIWORD(v66);
  int v52 = WORD6(v67);
  int v53 = HIWORD(v67);
  int v54 = WORD4(v68);
  int v55 = WORD5(v68);
  int v56 = WORD4(v69);
  int v57 = WORD5(v69);
  int v58 = WORD6(v68);
  int v59 = HIWORD(v68);
  int v60 = WORD6(v69);
  int v61 = HIWORD(v69);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v46, a7, v39, v37);
  if (v40) {
    char v42 = 4;
  }
  else {
    char v42 = 0;
  }
  if (v38) {
    char v43 = 2;
  }
  else {
    char v43 = 0;
  }
  if (result) {
    char v44 = -8;
  }
  else {
    char v44 = -16;
  }
  *a2 = v44 | v42 | v36 | v43;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v277 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v241 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v240 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v239 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v238 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v236 = v7;
  BOOL v237 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v235 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::compBits[v6];
    *(&v275 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(unsigned int *)((char *)&v252 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v251[v17 + 2] = v18;
    uint64_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint32x4_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint32x4_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint32x4_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint32x4_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint32x4_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint32x4_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint32x4_t v29 = &v273[v17 + 2];
    v273[v6 + 2] = v20;
    v274[v6] = v20;
    v273[v6] = 0;
    if (v235)
    {
      unsigned int v30 = v20;
      if (v237) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v273[v6] = 1;
        v274[v6] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        uint64_t v31 = &v273[v17 + 2];
      }
      else {
        uint64_t v31 = (unsigned int *)(&v257 + v6);
      }
      unsigned int v20 = *v31;
      *uint32x4_t v29 = *v31;
      if (v237)
      {
LABEL_58:
        if (v236) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v273[v6] = 2;
      v274[v6] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      unsigned int v32 = &v273[v17 + 2];
    }
    else {
      unsigned int v32 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v32;
    *uint32x4_t v29 = *v32;
    if (v236)
    {
LABEL_59:
      if (v238) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v273[v6] = 3;
      v274[v6] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      unsigned int v33 = &v273[v17 + 2];
    }
    else {
      unsigned int v33 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v33;
    *uint32x4_t v29 = *v33;
    if (v238)
    {
LABEL_60:
      if (v240) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v273[v6] = 4;
      v274[v6] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      unsigned int v34 = &v273[v17 + 2];
    }
    else {
      unsigned int v34 = (unsigned int *)(&v263 + v6);
    }
    unsigned int v20 = *v34;
    *uint32x4_t v29 = *v34;
    if (v240)
    {
LABEL_61:
      if (v239) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v273[v6] = 5;
      v274[v6] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      unsigned int v35 = &v273[v17 + 2];
    }
    else {
      unsigned int v35 = (unsigned int *)(&v265 + v6);
    }
    unsigned int v20 = *v35;
    *uint32x4_t v29 = *v35;
    if (v239)
    {
LABEL_62:
      if (v241) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v273[v6] = 7;
        v274[v6] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        unsigned int v37 = &v273[v17 + 2];
      }
      else {
        unsigned int v37 = (unsigned int *)(&v269 + v6);
      }
      unsigned int v20 = *v37;
      *uint32x4_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v273[v6] = 6;
      v274[v6] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      char v36 = &v273[v17 + 2];
    }
    else {
      char v36 = (unsigned int *)(&v267 + v6);
    }
    unsigned int v20 = *v36;
    *uint32x4_t v29 = *v36;
    if (!v241) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v271 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42]
          - v43
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v14
            + 1);
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v72 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v72) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v271 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v271 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  uint64_t v51 = v252;
  uint64_t v52 = v253;
  unsigned int v54 = v271;
  unsigned int v53 = v272;
  BOOL v56 = v272 >= v271;
  BOOL v57 = v272 < v271;
  int v58 = kDQuadParamTable[160 * v253 + 6 + 10 * v272];
  int v249 = kDQuadParamTable[160 * v252 + 6 + 10 * v271];
  int v55 = v249;
  int v250 = v58;
  v251[0] = v249;
  v251[1] = v58;
  if (*(&v271 + v56) == *(&v271 + v57))
  {
    int v59 = v249;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v251 | (4 * v57));
    int v59 = v249;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v249 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v249 | (4 * v56)) += v60;
      int v59 = v249;
    }
  }
  if (a4) {
    BOOL v61 = a5 == 0;
  }
  else {
    BOOL v61 = 1;
  }
  int v62 = v61;
  int v234 = v62;
  long long v63 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v64 = *((void *)v63 + 1);
  int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v51
        + 1);
  int v66 = v63[4];
  LODWORD(v63) = v63[5];
  unsigned int v67 = v66 + v65;
  unsigned int v247 = v67;
  unsigned int v68 = v63 + v65;
  unsigned int v245 = v68;
  int v69 = v59 - v55;
  if (v69 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v69)
    {
      unsigned int v245 = --v68;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v70 = -1;
LABEL_167:
        unsigned int v247 = v70 + v67;
      }
    }
  }
  else if (v69)
  {
    v68 += v69;
    unsigned int v245 = v68;
    int v70 = v69;
    goto LABEL_167;
  }
  BOOL v72 = v51 == 5 && v54 == 1 && v69 < 2;
  int v73 = v72;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v74 = 31744;
    }
    else {
      int v74 = 0;
    }
    if (v51 == 4) {
      int v75 = 2139095040;
    }
    else {
      int v75 = v74;
    }
    int v76 = 1 << (v275 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_188;
      }
LABEL_336:
      if ((v75 & ~v257) == 0 || v257 == v76) {
        int v73 = 1;
      }
      if (!v237) {
        goto LABEL_343;
      }
LABEL_189:
      if (v236) {
        goto LABEL_190;
      }
LABEL_350:
      if ((v75 & ~v261) == 0 || v261 == v76) {
        int v73 = 1;
      }
      if (!v238) {
        goto LABEL_357;
      }
LABEL_191:
      if (v240) {
        goto LABEL_192;
      }
LABEL_364:
      if ((v75 & ~v265) == 0 || v265 == v76) {
        int v73 = 1;
      }
      if (!v239) {
        goto LABEL_371;
      }
LABEL_193:
      if (!v241) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v75 & ~v255) == 0 || v255 == v76) {
        int v73 = 1;
      }
      if (!v235) {
        goto LABEL_336;
      }
LABEL_188:
      if (v237) {
        goto LABEL_189;
      }
LABEL_343:
      if ((v75 & ~v259) == 0 || v259 == v76) {
        int v73 = 1;
      }
      if (!v236) {
        goto LABEL_350;
      }
LABEL_190:
      if (v238) {
        goto LABEL_191;
      }
LABEL_357:
      if ((v75 & ~v263) == 0 || v263 == v76) {
        int v73 = 1;
      }
      if (!v240) {
        goto LABEL_364;
      }
LABEL_192:
      if (v239) {
        goto LABEL_193;
      }
LABEL_371:
      if ((v75 & ~v267) == 0 || v267 == v76) {
        int v73 = 1;
      }
      if (!v241)
      {
LABEL_194:
        if ((v75 & ~v269) == 0 || v269 == v76) {
          int v73 = 1;
        }
      }
    }
  }
  BOOL v72 = v64 >> v68 > 4;
  int v78 = v234;
  if (v72) {
    int v78 = 1;
  }
  int v79 = v78 | v73;
  int8x16_t v80 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v81 = *((void *)v80 + 1);
  int v82 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v52
        + 1);
  int v83 = v80[4];
  LODWORD(v80) = v80[5];
  unsigned int v84 = v83 + v82;
  unsigned int v248 = v84;
  unsigned int v85 = v80 + v82;
  unsigned int v246 = v85;
  int v86 = v250 - v58;
  if (v250 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v250)
    {
      unsigned int v246 = --v85;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v87 = -1;
LABEL_206:
        unsigned int v248 = v87 + v84;
      }
    }
  }
  else if (v250 != v58)
  {
    v85 += v86;
    unsigned int v246 = v85;
    int v87 = v250 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v86 < 2) {
    int v79 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v88 = 31744;
    }
    else {
      int v88 = 0;
    }
    if (v52 == 4) {
      int v88 = 2139095040;
    }
    int v89 = 1 << (v276 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_221;
      }
LABEL_386:
      if ((v88 & ~v258) == 0 || v258 == v89) {
        int v79 = 1;
      }
      if (!v237) {
        goto LABEL_393;
      }
LABEL_222:
      if (v236) {
        goto LABEL_223;
      }
LABEL_400:
      if ((v88 & ~v262) == 0 || v262 == v89) {
        int v79 = 1;
      }
      if (!v238) {
        goto LABEL_407;
      }
LABEL_224:
      if (v240) {
        goto LABEL_225;
      }
LABEL_414:
      if ((v88 & ~v266) == 0 || v266 == v89) {
        int v79 = 1;
      }
      if (!v239) {
        goto LABEL_421;
      }
LABEL_226:
      if (!v241) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v88 & ~v256) == 0 || v256 == v89) {
        int v79 = 1;
      }
      if (!v235) {
        goto LABEL_386;
      }
LABEL_221:
      if (v237) {
        goto LABEL_222;
      }
LABEL_393:
      if ((v88 & ~v260) == 0 || v260 == v89) {
        int v79 = 1;
      }
      if (!v236) {
        goto LABEL_400;
      }
LABEL_223:
      if (v238) {
        goto LABEL_224;
      }
LABEL_407:
      if ((v88 & ~v264) == 0 || v264 == v89) {
        int v79 = 1;
      }
      if (!v240) {
        goto LABEL_414;
      }
LABEL_225:
      if (v239) {
        goto LABEL_226;
      }
LABEL_421:
      if ((v88 & ~v268) == 0 || v268 == v89) {
        int v79 = 1;
      }
      if (!v241)
      {
LABEL_227:
        if ((v88 & ~v270) == 0 || v270 == v89) {
          int v79 = 1;
        }
      }
    }
  }
  char v91 = 0;
  uint64_t v92 = 0;
  BOOL v72 = v81 >> v85 > 4;
  int v93 = v234;
  if (v72) {
    int v93 = 1;
  }
  int v231 = v93;
  int v232 = v79;
  uint64_t v244 = 0;
  uint64_t v243 = 0;
  memset(v242, 0, sizeof(v242));
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v275 + v92);
    if (v96 >= *(&v247 + v92)) {
      unsigned int v97 = *(&v247 + v92);
    }
    else {
      unsigned int v97 = *(&v275 + v92);
    }
    *(&v247 + v92) = v97;
    int16x8_t v98 = &kDQuadParamTable[160 * *(&v252 + v92) + 10 * *(&v271 + v92)];
    if (v98[5]) {
      unsigned int v99 = v96;
    }
    else {
      unsigned int v99 = 0;
    }
    if (v99 >= *(&v245 + v92)) {
      unsigned int v99 = *(&v245 + v92);
    }
    int v100 = v274[v92] & (-1 << (v96 - v97));
    int16x8_t v101 = &v255 + v92;
    int v102 = *v101 - v100;
    uint64_t v103 = 32 * v92;
    int16x8_t v104 = &v254[32 * v92];
    if (v234) {
      int v102 = 0;
    }
    int v105 = v101[2] - v100;
    if (v235) {
      int v105 = 0;
    }
    *int16x8_t v104 = v102;
    v104[1] = v105;
    int v106 = v101[4] - v100;
    if (v237) {
      int v106 = 0;
    }
    int v107 = v101[6] - v100;
    if (v236) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v101[8] - v100;
    if (v238) {
      int v108 = 0;
    }
    int v109 = v101[10] - v100;
    if (v240) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    int v110 = v101[12] - v100;
    if (v239) {
      int v110 = 0;
    }
    int v111 = v101[14] - v100;
    if (v241) {
      int v111 = 0;
    }
    v104[6] = v110;
    v104[7] = v111;
    char v112 = v91;
    *(&v245 + v92) = v99;
    unint64_t v113 = *((void *)v98 + 1);
    *((_DWORD *)&v244 + v92) = v100;
    unint64_t v114 = v113 >> v99;
    int v115 = ~(-1 << v96);
    if (v114 <= 1) {
      unint64_t v116 = 1;
    }
    else {
      unint64_t v116 = v114;
    }
    uint64_t v117 = 2 * v273[v92];
    do
    {
      if (v117 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)&v254[v103] / v116;
        }
        else {
          LODWORD(v118) = 0;
        }
        int16x8_t v119 = (int *)v242 + 7 * v92 + v95;
        *int16x8_t v119 = v118;
        if (v114 >= 2)
        {
          unint64_t v120 = *(unsigned int *)&v254[v103];
          if (v120)
          {
            if (v120 / v116 * v116 == v120 && ((v120 / v116) & 1) != 0)
            {
              if (v100 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v101[v94], v123 = v251[v92 + 2], v122 != v123)
                  && ((a3 | 2) != 3 || v116 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  *int16x8_t v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v101[v94] == v115) {
          *int16x8_t v119 = ~(-1 << v99);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94) >= a4)
        {
          *int16x8_t v119 = 0;
        }
        ++v95;
      }
      v103 += 4;
      v94 += 2;
    }
    while (v94 != 16);
    char v91 = 1;
    uint64_t v92 = 1;
  }
  while ((v112 & 1) == 0);
  int16x8_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if ((v231 | v232) == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v275;
    unsigned int v130 = v276;
    uint64_t v131 = v275 - 2;
    uint64_t v132 = v276 - 2;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= a5 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v255 + 2 * v127) >> 2;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v129 != 2 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x80)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 2;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_315:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v255 + 2 * v127 + 1) >> 2;
        if (v132 <= 0x100)
        {
LABEL_319:
          if (v130 != 2 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x80)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 2;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return v231 | v232;
      }
    }
  }
  unsigned int v147 = v271;
  char v148 = LOBYTE(v274[0]) | v271;
  if (v274[0] | v271)
  {
    char v148 = v271 - 2;
    if (v271 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v271 + 1;
      goto LABEL_430;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_430:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v272;
  if (v274[1] | v272)
  {
    char v169 = v272 - 2;
    if (v272 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v272 + 1;
      goto LABEL_436;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_436:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 126) >= 0xFFFFFFFFFFFFFF7FLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_453;
    }
LABEL_446:
    unsigned int v177 = v275;
    if (!v147) {
      goto LABEL_461;
    }
    goto LABEL_465;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x80) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_446;
  }
LABEL_453:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x80) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v275;
  if (!v147)
  {
LABEL_461:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v276;
      if (!v168) {
        goto LABEL_526;
      }
LABEL_473:
      unsigned int v192 = v248;
      if (v248 <= 0x100 && v248 && v167 - v126 + (v175 << 6) + (unint64_t)v248 <= 0x80)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v244) >> (v185 - v248));
        unint64_t v195 = v248;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_481;
    }
  }
LABEL_465:
  unsigned int v186 = v247;
  if (v247 <= 0x100 && v247 && v167 - v126 + (v175 << 6) + (unint64_t)v247 <= 0x80)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v244 >> (v177 - v247);
    unint64_t v189 = v247;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v276;
  if (v168) {
    goto LABEL_473;
  }
LABEL_526:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_473;
  }
LABEL_481:
  unint64_t v198 = v245;
  if (v245)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x80)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v273[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v246;
  if (v246)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x80)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v273[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 128 - v176;
  unsigned int v211 = (128 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x80)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x80)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v242 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x80)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v242[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_519:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x80)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_519;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return v231 | v232;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = ((a3 & 0xFFFFFFFD) == 1) << 9;
  uint64_t result = v6;
  do
  {
    if ((unint64_t)(result - v6 + (v4 << 6) - 121) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      unsigned __int8 v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 8;
      do
      {
        unint64_t v18 = 64 - result;
        if (64 - result >= v17) {
          unint64_t v18 = v17;
        }
        v15 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v18)) << v16;
        v16 += v18;
        unint64_t v19 = v18 + result;
        v4 += v19 >> 6;
        uint64_t result = v19 & 0x3F;
        v17 -= v18;
      }
      while (v17);
    }
    else
    {
      unsigned __int8 v15 = 0;
    }
    int v20 = 4 * v15;
    if (a3 != 4)
    {
      BOOL v25 = v20 == 512 && v7 == 1;
      if (!v25 && v20)
      {
        if (v20 == 1020) {
          int v20 = 1023;
        }
        else {
          v20 |= 2 - (v15 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 8 * v3) = v20 ^ v8;
    if ((unint64_t)(result - v6 + (v4 << 6) - 121) < 0xFFFFFFFFFFFFFF7FLL)
    {
      unsigned __int8 v10 = 0;
    }
    else
    {
      unsigned __int8 v10 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 8;
      do
      {
        unint64_t v23 = 64 - result;
        if (64 - result >= v22) {
          unint64_t v23 = v22;
        }
        v10 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v23)) << v21;
        v21 += v23;
        unint64_t v24 = v23 + result;
        v4 += v24 >> 6;
        uint64_t result = v24 & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    int v11 = 4 * v10;
    int v12 = (2 - (v10 & 1)) | v11;
    if (v11 == 1020) {
      int v12 = 1023;
    }
    if (v11 == 512 && v7 == 1 || v11 == 0) {
      int v12 = v11;
    }
    if (a3 == 4) {
      int v12 = v11;
    }
    *(_DWORD *)(a2 + 8 * v3++ + 4) = v12 ^ v8;
  }
  while (v3 != 8);
  return result;
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v193 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x7D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x7D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v188[0] = 10;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v178 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 127) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v178 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)1>::getDquadModeData(0, v12, v14, &v189);
  v192[0] = DquadModeData;
  v191[0] = 1;
  v188[1] = 10;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 127) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)1>::getDquadModeData(1, v11, v20, &v190);
  v192[1] = v24;
  v191[1] = 1;
  BOOL v26 = v24 < DquadModeData;
  unsigned int v27 = v24;
  int v28 = dword_242EA9408[10 * v24 + 6];
  int v185 = dword_242EA9408[10 * DquadModeData + 6];
  int v25 = v185;
  int v186 = v28;
  v187[0] = v185;
  v187[1] = v28;
  if (v192[v24 >= DquadModeData] == v192[v26])
  {
    int v29 = v185;
  }
  else
  {
    int v30 = *(_DWORD *)((unint64_t)v187 | (4 * v26));
    int v29 = v185;
    if (v30 >= 1)
    {
      *(_DWORD *)((unint64_t)&v185 | (4 * v26)) = 0;
      *(_DWORD *)((unint64_t)&v185 | (4 * (v24 >= DquadModeData))) += v30;
      int v29 = v185;
    }
  }
  uint64_t v31 = kDQuadParamTable;
  unsigned int v32 = &kDQuadParamTable[10 * DquadModeData];
  LODWORD(v33) = v32[164] + 3;
  int v34 = v32[165];
  unsigned int v35 = v34 + 3;
  int v36 = v29 - v25;
  if (v36 < 0)
  {
    if (kDQuadParamTable[10 * DquadModeData + 167] >= -v36) {
      goto LABEL_35;
    }
    unsigned int v35 = v34 + 2;
    if (kDQuadParamTable[10 * DquadModeData + 168]) {
      goto LABEL_35;
    }
    int v36 = -1;
  }
  else
  {
    if (!v36) {
      goto LABEL_35;
    }
    v35 += v36;
  }
  LODWORD(v33) = v36 + v33;
LABEL_35:
  if (v33 >= 0xA) {
    uint64_t v33 = 10;
  }
  else {
    uint64_t v33 = v33;
  }
  v184[0] = v33;
  if (v34) {
    LODWORD(v37) = 10;
  }
  else {
    LODWORD(v37) = 0;
  }
  if (v37 >= v35) {
    unint64_t v37 = v35;
  }
  else {
    unint64_t v37 = v37;
  }
  v183[0] = v37;
  unsigned int v38 = &kDQuadParamTable[10 * v24];
  LODWORD(v39) = v38[164] + 3;
  int v40 = v38[165];
  unsigned int v41 = v40 + 3;
  int v42 = v186 - v28;
  if (v42 < 0)
  {
    if (kDQuadParamTable[10 * v24 + 167] >= -v42) {
      goto LABEL_50;
    }
    unsigned int v41 = v40 + 2;
    if (kDQuadParamTable[10 * v24 + 168]) {
      goto LABEL_50;
    }
    int v42 = -1;
  }
  else
  {
    if (!v42) {
      goto LABEL_50;
    }
    v41 += v42;
  }
  LODWORD(v39) = v42 + v39;
LABEL_50:
  int v43 = v178 + v19;
  if (v39 >= 0xA) {
    uint64_t v39 = 10;
  }
  else {
    uint64_t v39 = v39;
  }
  v184[1] = v39;
  if (v40) {
    LODWORD(v44) = 10;
  }
  else {
    LODWORD(v44) = 0;
  }
  if (v44 >= v41) {
    unint64_t v44 = v41;
  }
  else {
    unint64_t v44 = v44;
  }
  v183[1] = v44;
  uint64_t v182 = 0;
  if (DquadModeData)
  {
    int v45 = 0;
    if (v33 && (unint64_t)(v10 - v6 + (v13 << 6) + v33) <= 0x80)
    {
      int v45 = 0;
      uint64_t v46 = 0;
      unint64_t v47 = v33;
      do
      {
        unint64_t v48 = 64 - v10;
        if (64 - v10 >= v47) {
          unint64_t v48 = v47;
        }
        v45 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v48)) << v46;
        v46 += v48;
        v13 += (v48 + v10) >> 6;
        uint64_t v10 = (v48 + v10) & 0x3F;
        v47 -= v48;
      }
      while (v47);
    }
    LODWORD(v182) = v45 << (10 - v33);
    v43 += v33;
    if (v27)
    {
LABEL_67:
      int v49 = 0;
      if (v39 && (unint64_t)(v10 - v6 + (v13 << 6) + v39) <= 0x80)
      {
        int v49 = 0;
        uint64_t v50 = 0;
        unint64_t v51 = v39;
        do
        {
          unint64_t v52 = 64 - v10;
          if (64 - v10 >= v51) {
            unint64_t v52 = v51;
          }
          v49 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v52)) << v50;
          v50 += v52;
          v13 += (v52 + v10) >> 6;
          uint64_t v10 = (v52 + v10) & 0x3F;
          v51 -= v52;
        }
        while (v51);
      }
      HIDWORD(v182) = v49 << (10 - v39);
      v43 += v39;
      uint64_t v181 = 0;
      if (!v37) {
        goto LABEL_84;
      }
      goto LABEL_77;
    }
  }
  else
  {
    LODWORD(v182) = v189;
    if (v24) {
      goto LABEL_67;
    }
  }
  HIDWORD(v182) = v190;
  uint64_t v181 = 0;
  if (v37)
  {
LABEL_77:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x80)
    {
      int v53 = 0;
      uint64_t v54 = 0;
      unint64_t v55 = 3;
      do
      {
        unint64_t v56 = 64 - v10;
        if (64 - v10 >= v55) {
          unint64_t v56 = v55;
        }
        v53 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v56)) << v54;
        v54 += v56;
        v13 += (v56 + v10) >> 6;
        uint64_t v10 = (v56 + v10) & 0x3F;
        v55 -= v56;
      }
      while (v55);
    }
    else
    {
      int v53 = 0;
    }
    LODWORD(v181) = v53;
    v43 += 3;
  }
LABEL_84:
  if (v44)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x80)
    {
      int v57 = 0;
      uint64_t v58 = 0;
      unint64_t v59 = 3;
      do
      {
        unint64_t v60 = 64 - v10;
        if (64 - v10 >= v59) {
          unint64_t v60 = v59;
        }
        v57 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v60)) << v58;
        v58 += v60;
        v13 += (v60 + v10) >> 6;
        uint64_t v10 = (v60 + v10) & 0x3F;
        v59 -= v60;
      }
      while (v59);
    }
    else
    {
      int v57 = 0;
    }
    HIDWORD(v181) = v57;
    v43 += 3;
  }
  uint64_t v61 = 0;
  unsigned int v62 = a3 & 0xFFFFFFFD;
  unsigned int v63 = 128 - v43;
  unsigned int v64 = (128 - v43) / 7u;
  unint64_t v65 = (v10 | (v13 << 6)) + v63 % 7;
  uint64_t v180 = 0;
  memset(v179, 0, sizeof(v179));
  do
  {
    unint64_t v67 = v65 >> 6;
    int64_t result = v65 & 0x3F;
    if (v37)
    {
      if (result - v6 + (v65 & 0xFFFFFFFFFFFFFFC0) + v37 <= 0x80)
      {
        int v69 = 0;
        uint64_t v70 = 0;
        unint64_t v71 = v37;
        do
        {
          unint64_t v72 = 64 - result;
          if (64 - result >= v71) {
            unint64_t v72 = v71;
          }
          v69 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v72)) << v70;
          v70 += v72;
          unint64_t v73 = v72 + result;
          v67 += v73 >> 6;
          int64_t result = v73 & 0x3F;
          v71 -= v72;
        }
        while (v71);
      }
      else
      {
        int v69 = 0;
      }
      *((_DWORD *)v179 + v61) = v69;
    }
    if (v44)
    {
      if (result - v6 + (v67 << 6) + v44 <= 0x80)
      {
        int v74 = 0;
        uint64_t v75 = 0;
        unint64_t v76 = v44;
        do
        {
          unint64_t v77 = 64 - result;
          if (64 - result >= v76) {
            unint64_t v77 = v76;
          }
          v74 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v77)) << v75;
          v75 += v77;
          unint64_t v78 = v77 + result;
          v67 += v78 >> 6;
          int64_t result = v78 & 0x3F;
          v76 -= v77;
        }
        while (v76);
      }
      else
      {
        int v74 = 0;
      }
      *((_DWORD *)&v179[1] + v61 + 3) = v74;
      int v66 = v44 + v37;
    }
    else
    {
      int v66 = v37;
    }
    unint64_t v65 = (result | (v67 << 6)) + v64 - v66;
    ++v61;
  }
  while (v61 != 7);
  char v79 = 0;
  uint64_t v80 = 0;
  do
  {
    char v85 = v79;
    unint64_t v86 = *(void *)&v31[160 * v191[v80] + 2 + 10 * v192[v80]];
    int v87 = v183[v80];
    if (v86 >> v87 <= 1) {
      unint64_t v88 = 1;
    }
    else {
      unint64_t v88 = v86 >> v87;
    }
    int v89 = v188[v80];
    unint64_t v90 = v88 >> 1;
    if (v88 >> 1 >= (unint64_t)(1 << (v89 - v184[v80])) >> 1) {
      unint64_t v91 = (unint64_t)(1 << (v89 - v184[v80])) >> 1;
    }
    else {
      unint64_t v91 = v88 >> 1;
    }
    unint64_t v92 = (1 << (v89 - 1));
    unint64_t v93 = v183[v80 - 2];
    unint64_t v94 = v92 - v93;
    unint64_t v95 = 1 << v89;
    int v96 = (1 << v89) - 1;
    if (v93) {
      unint64_t v97 = v91;
    }
    else {
      unint64_t v97 = 0;
    }
    BOOL v98 = v93 == v92;
    BOOL v99 = v89 == 16;
    if (v89 == 16) {
      unint64_t v100 = 31744;
    }
    else {
      unint64_t v100 = 2139095040;
    }
    if (v89 == 16) {
      unint64_t v101 = 64512;
    }
    else {
      unint64_t v101 = 4286578688;
    }
    unint64_t v102 = 2143289344;
    if (v99) {
      unint64_t v102 = 32256;
    }
    unint64_t v103 = 4290772992;
    if (v99) {
      unint64_t v103 = 65024;
    }
    unint64_t v104 = (v101 - 1);
    if (v87)
    {
      int64_t result = (int64_t)v31;
      unint64_t v105 = v86 + v93;
      uint64_t v106 = ~(-1 << v87);
      int v107 = *((_DWORD *)&v181 + v80);
      unint64_t v108 = v94 / v88;
      if (!v107)
      {
        uint64_t v116 = 0;
        unint64_t v111 = v97;
        BOOL v110 = v93 == v92;
        goto LABEL_177;
      }
      uint64_t v109 = *((unsigned int *)v179 + 7 * v80);
      BOOL v110 = v108 == v109;
      if (v93 | v109)
      {
        if (v105 >= v95 && v109 == v106)
        {
          uint64_t v116 = 1;
          unint64_t v111 = v95 - 1;
          goto LABEL_177;
        }
        unint64_t v111 = v90 + v88 * v109;
      }
      else
      {
        unint64_t v111 = 0;
      }
      uint64_t v116 = 1;
LABEL_177:
      unint64_t v117 = v111 + v93;
      unint64_t v118 = v117;
      if (a3 == 4)
      {
        BOOL v119 = v117 < v100 || v117 >= v102;
        unint64_t v118 = (v100 - 1);
        if (v119)
        {
          BOOL v120 = v117 < v102 || v117 >= v92;
          unint64_t v118 = v92;
          if (v120)
          {
            if (v117 < v103 && v117 >= v101) {
              unint64_t v118 = (v101 - 1);
            }
            else {
              unint64_t v118 = v117;
            }
          }
        }
      }
      if (v118 >= v95) {
        int v122 = v96;
      }
      else {
        int v122 = v118;
      }
      if (v110) {
        int v123 = 0;
      }
      else {
        int v123 = v122 ^ v92;
      }
      if (v62 != 1) {
        int v123 = v122;
      }
      *(_DWORD *)(a2 + 4 * v80) = v123;
      if (v107 == 1)
      {
        unint64_t v124 = v97;
        BOOL v125 = v93 == v92;
      }
      else
      {
        uint64_t v126 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v125 = v108 == v126;
        if (v93 | v126)
        {
          if (v105 < v95 || (unint64_t v124 = v95 - 1, v126 != v106)) {
            unint64_t v124 = v90 + v88 * v126;
          }
        }
        else
        {
          unint64_t v124 = 0;
        }
        ++v116;
      }
      unint64_t v127 = v124 + v93;
      unint64_t v128 = v127;
      if (a3 == 4)
      {
        BOOL v129 = v127 < v100 || v127 >= v102;
        unint64_t v128 = (v100 - 1);
        if (v129)
        {
          BOOL v130 = v127 < v102 || v127 >= v92;
          unint64_t v128 = v92;
          if (v130)
          {
            if (v127 < v103 && v127 >= v101) {
              unint64_t v128 = (v101 - 1);
            }
            else {
              unint64_t v128 = v127;
            }
          }
        }
      }
      if (v128 >= v95) {
        int v132 = v96;
      }
      else {
        int v132 = v128;
      }
      if (v125) {
        int v133 = 0;
      }
      else {
        int v133 = v132 ^ v92;
      }
      if (v62 != 1) {
        int v133 = v132;
      }
      *(_DWORD *)(a2 + 4 * v80 + 8) = v133;
      if (v107 == 2)
      {
        unint64_t v134 = v97;
        BOOL v135 = v93 == v92;
      }
      else
      {
        uint64_t v136 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v135 = v108 == v136;
        if (v93 | v136)
        {
          if (v105 < v95 || (unint64_t v134 = v95 - 1, v136 != v106)) {
            unint64_t v134 = v90 + v88 * v136;
          }
        }
        else
        {
          unint64_t v134 = 0;
        }
        ++v116;
      }
      unint64_t v137 = v134 + v93;
      unint64_t v138 = v137;
      if (a3 == 4)
      {
        if (v137 < v100 || (unint64_t v138 = (v100 - 1), v137 >= v102))
        {
          if (v137 < v102 || (unint64_t v138 = v92, v137 >= v92))
          {
            if (v137 < v103 && v137 >= v101) {
              unint64_t v138 = (v101 - 1);
            }
            else {
              unint64_t v138 = v137;
            }
          }
        }
      }
      if (v138 >= v95) {
        int v140 = v96;
      }
      else {
        int v140 = v138;
      }
      if (v135) {
        int v141 = 0;
      }
      else {
        int v141 = v140 ^ v92;
      }
      if (v62 != 1) {
        int v141 = v140;
      }
      *(_DWORD *)(a2 + 4 * v80 + 16) = v141;
      if (v107 == 3)
      {
        unint64_t v142 = v97;
        BOOL v143 = v93 == v92;
      }
      else
      {
        uint64_t v144 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v143 = v108 == v144;
        if (v93 | v144)
        {
          if (v105 < v95 || (unint64_t v142 = v95 - 1, v144 != v106)) {
            unint64_t v142 = v90 + v88 * v144;
          }
        }
        else
        {
          unint64_t v142 = 0;
        }
        ++v116;
      }
      unint64_t v145 = v142 + v93;
      unint64_t v146 = v145;
      if (a3 == 4)
      {
        if (v145 < v100 || (unint64_t v146 = (v100 - 1), v145 >= v102))
        {
          if (v145 < v102 || (unint64_t v146 = v92, v145 >= v92))
          {
            if (v145 < v103 && v145 >= v101) {
              unint64_t v146 = (v101 - 1);
            }
            else {
              unint64_t v146 = v145;
            }
          }
        }
      }
      if (v146 >= v95) {
        int v148 = v96;
      }
      else {
        int v148 = v146;
      }
      if (v143) {
        int v149 = 0;
      }
      else {
        int v149 = v148 ^ v92;
      }
      if (v62 != 1) {
        int v149 = v148;
      }
      *(_DWORD *)(a2 + 4 * v80 + 24) = v149;
      if (v107 == 4)
      {
        unint64_t v150 = v97;
        BOOL v151 = v93 == v92;
      }
      else
      {
        uint64_t v152 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v151 = v108 == v152;
        if (v93 | v152)
        {
          if (v105 < v95 || (unint64_t v150 = v95 - 1, v152 != v106)) {
            unint64_t v150 = v90 + v88 * v152;
          }
        }
        else
        {
          unint64_t v150 = 0;
        }
        ++v116;
      }
      unint64_t v153 = v150 + v93;
      unint64_t v154 = v153;
      if (a3 == 4)
      {
        if (v153 < v100 || (unint64_t v154 = (v100 - 1), v153 >= v102))
        {
          if (v153 < v102 || (unint64_t v154 = v92, v153 >= v92))
          {
            if (v153 < v103 && v153 >= v101) {
              unint64_t v154 = (v101 - 1);
            }
            else {
              unint64_t v154 = v153;
            }
          }
        }
      }
      if (v154 >= v95) {
        int v156 = v96;
      }
      else {
        int v156 = v154;
      }
      if (v151) {
        int v157 = 0;
      }
      else {
        int v157 = v156 ^ v92;
      }
      if (v62 != 1) {
        int v157 = v156;
      }
      *(_DWORD *)(a2 + 4 * v80 + 32) = v157;
      if (v107 == 5)
      {
        unint64_t v158 = v97;
        BOOL v159 = v93 == v92;
      }
      else
      {
        uint64_t v160 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v159 = v108 == v160;
        if (v93 | v160)
        {
          if (v105 < v95 || (unint64_t v158 = v95 - 1, v160 != v106)) {
            unint64_t v158 = v90 + v88 * v160;
          }
        }
        else
        {
          unint64_t v158 = 0;
        }
        ++v116;
      }
      unint64_t v161 = v158 + v93;
      unint64_t v162 = v161;
      if (a3 == 4)
      {
        if (v161 < v100 || (unint64_t v162 = (v100 - 1), v161 >= v102))
        {
          if (v161 < v102 || (unint64_t v162 = v92, v161 >= v92))
          {
            if (v161 < v103 && v161 >= v101) {
              unint64_t v162 = (v101 - 1);
            }
            else {
              unint64_t v162 = v161;
            }
          }
        }
      }
      if (v162 >= v95) {
        int v164 = v96;
      }
      else {
        int v164 = v162;
      }
      if (v159) {
        int v165 = 0;
      }
      else {
        int v165 = v164 ^ v92;
      }
      if (v62 != 1) {
        int v165 = v164;
      }
      *(_DWORD *)(a2 + 4 * v80 + 40) = v165;
      if (v107 == 6)
      {
        unint64_t v166 = v97;
        BOOL v167 = v93 == v92;
      }
      else
      {
        uint64_t v168 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v167 = v108 == v168;
        if (v93 | v168)
        {
          if (v105 < v95 || (unint64_t v166 = v95 - 1, v168 != v106)) {
            unint64_t v166 = v90 + v88 * v168;
          }
        }
        else
        {
          unint64_t v166 = 0;
        }
        ++v116;
      }
      unint64_t v169 = v166 + v93;
      unint64_t v170 = v169;
      if (a3 == 4)
      {
        if (v169 < v100 || (unint64_t v170 = (v100 - 1), v169 >= v102))
        {
          if (v169 < v102 || (unint64_t v170 = v92, v169 >= v92))
          {
            if (v169 < v103 && v169 >= v101) {
              unint64_t v170 = (v101 - 1);
            }
            else {
              unint64_t v170 = v169;
            }
          }
        }
      }
      if (v170 >= v95) {
        int v172 = v96;
      }
      else {
        int v172 = v170;
      }
      if (v167) {
        int v173 = 0;
      }
      else {
        int v173 = v172 ^ v92;
      }
      if (v62 != 1) {
        int v173 = v172;
      }
      *(_DWORD *)(a2 + 4 * v80 + 48) = v173;
      if (v107 != 7)
      {
        uint64_t v174 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v98 = v108 == v174;
        if (v93 | v174)
        {
          if (v105 >= v95 && v174 == v106) {
            unint64_t v97 = v95 - 1;
          }
          else {
            unint64_t v97 = v90 + v88 * v174;
          }
        }
        else
        {
          unint64_t v97 = 0;
        }
      }
      unint64_t v175 = v97 + v93;
      unint64_t v82 = v175;
      if (a3 == 4)
      {
        if (v175 < v100 || (unint64_t v82 = (v100 - 1), v175 >= v102))
        {
          if (v175 < v102 || (unint64_t v82 = v92, v175 >= v92))
          {
            if (v175 < v103 && v175 >= v101) {
              unint64_t v82 = (v101 - 1);
            }
            else {
              unint64_t v82 = v175;
            }
          }
        }
      }
      if (v82 >= v95) {
        int v83 = v96;
      }
      else {
        int v83 = v82;
      }
      int v84 = v83 ^ v92;
      if (v98) {
        int v84 = 0;
      }
      if (v62 == 1) {
        int v83 = v84;
      }
      uint64_t v31 = (_DWORD *)result;
      goto LABEL_126;
    }
    BOOL v113 = v102 <= v93 && v93 < v92;
    BOOL v115 = v93 >= v101 && v103 > v93;
    if (a3 == 4)
    {
      if (v93 < v100 || v102 <= v93)
      {
        if (v113)
        {
          if (v95 <= v92) {
            int v83 = v96;
          }
          else {
            int v83 = v92;
          }
        }
        else
        {
          if (v115) {
            unint64_t v93 = v104;
          }
          if (v93 >= v95) {
            int v83 = v96;
          }
          else {
            int v83 = v93;
          }
        }
      }
      else if (v95 <= (v100 - 1))
      {
        int v83 = v96;
      }
      else
      {
        int v83 = v100 - 1;
      }
    }
    else if (v95 <= v93)
    {
      int v83 = v96;
    }
    else
    {
      int v83 = v183[v80 - 2];
    }
    int v176 = v83 ^ v92;
    if (v88 > v94) {
      int v176 = 0;
    }
    if (v62 == 1) {
      int v83 = v176;
    }
    unsigned int v177 = (_DWORD *)(a2 + 4 * v80);
    *unsigned int v177 = v83;
    v177[2] = v83;
    v177[4] = v83;
    v177[6] = v83;
    v177[8] = v83;
    v177[10] = v83;
    v177[12] = v83;
LABEL_126:
    *(_DWORD *)(a2 + 4 * v80 + 56) = v83;
    char v79 = 1;
    uint64_t v80 = 1;
  }
  while ((v85 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int32x4_t a6, int32x4_t a7)
{
  uint64_t v446 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v12 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    uint64_t v13 = (_OWORD *)(a1 + a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)(a1 + 2 * a2);
    *char v14 = 0u;
    v14[1] = 0u;
    uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
LABEL_6:
    _OWORD *v15 = v12;
    v15[1] = v12;
    return result;
  }
  char v9 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v431, a5);
    }
    int v401 = HIDWORD(v431);
    __int16 v402 = v431;
    int v403 = v433;
    __int16 v404 = v432;
    int v417 = v435;
    __int16 v418 = v434;
    int v419 = v437;
    __int16 v420 = v436;
    int v397 = v439;
    __int16 v398 = v438;
    int v399 = v441;
    __int16 v400 = v440;
    int v415 = v443;
    __int16 v416 = v442;
    uint64_t v20 = a3 + 16;
    __int16 v413 = v444;
    int v414 = v445;
    if ((v9 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v431, a5);
    }
    int v409 = HIDWORD(v431);
    __int16 v410 = v431;
    int v411 = v433;
    __int16 v412 = v432;
    int v425 = v435;
    __int16 v426 = v434;
    int v427 = v437;
    __int16 v428 = v436;
    int v405 = v439;
    __int16 v406 = v438;
    int v407 = v441;
    __int16 v408 = v440;
    int v423 = v443;
    __int16 v424 = v442;
    uint64_t v21 = a3 + 32;
    __int16 v421 = v444;
    int v422 = v445;
    if ((v9 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v431, a5);
    }
    __int16 v23 = v431;
    int v22 = HIDWORD(v431);
    __int16 v24 = v432;
    int v393 = v435;
    __int16 v394 = v434;
    __int16 v25 = v438;
    int v395 = v437;
    __int16 v396 = v436;
    int v26 = v439;
    __int16 v27 = v440;
    int v28 = v441;
    int v391 = v443;
    __int16 v392 = v442;
    uint64_t v29 = a3 + 48;
    __int16 v30 = v444;
    int v389 = v433;
    int v390 = v445;
    if ((v9 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v431, a5);
    }
    *(_DWORD *)a1 = ((v402 & 0x3FF) << 6) | (v401 << 22);
    *(_DWORD *)(a1 + 4) = ((v404 & 0x3FF) << 6) | (v403 << 22);
    *(_DWORD *)(a1 + 8) = ((v398 & 0x3FF) << 6) | (v397 << 22);
    *(_DWORD *)(a1 + 12) = ((v400 & 0x3FF) << 6) | (v399 << 22);
    *(_DWORD *)(a1 + 16) = ((v23 & 0x3FF) << 6) | (v22 << 22);
    *(_DWORD *)(a1 + 20) = ((v24 & 0x3FF) << 6) | (v389 << 22);
    *(_DWORD *)(a1 + 24) = ((v25 & 0x3FF) << 6) | (v26 << 22);
    *(_DWORD *)(a1 + 28) = ((v27 & 0x3FF) << 6) | (v28 << 22);
    uint64_t v31 = (int *)(a1 + a2);
    *uint64_t v31 = ((v418 & 0x3FF) << 6) | (v417 << 22);
    v31[1] = ((v420 & 0x3FF) << 6) | (v419 << 22);
    v31[2] = ((v416 & 0x3FF) << 6) | (v415 << 22);
    v31[3] = ((v413 & 0x3FF) << 6) | (v414 << 22);
    v31[4] = ((v394 & 0x3FF) << 6) | (v393 << 22);
    v31[5] = ((v396 & 0x3FF) << 6) | (v395 << 22);
    v31[6] = ((v392 & 0x3FF) << 6) | (v391 << 22);
    v31[7] = ((v30 & 0x3FF) << 6) | (v390 << 22);
    unsigned int v32 = (int *)(a1 + a2 + a2);
    *unsigned int v32 = ((v410 & 0x3FF) << 6) | (v409 << 22);
    v32[1] = ((v412 & 0x3FF) << 6) | (v411 << 22);
    v32[2] = ((v406 & 0x3FF) << 6) | (v405 << 22);
    v32[3] = ((v408 & 0x3FF) << 6) | (v407 << 22);
    int v33 = ((v432 & 0x3FF) << 6) | (v433 << 22);
    v32[4] = ((v431 & 0x3FF) << 6) | (HIDWORD(v431) << 22);
    v32[5] = v33;
    int v34 = ((v440 & 0x3FF) << 6) | (v441 << 22);
    v32[6] = ((v438 & 0x3FF) << 6) | (v439 << 22);
    v32[7] = v34;
    unsigned int v35 = (int *)((char *)v32 + a2);
    int *v35 = ((v426 & 0x3FF) << 6) | (v425 << 22);
    v35[1] = ((v428 & 0x3FF) << 6) | (v427 << 22);
    v35[2] = ((v424 & 0x3FF) << 6) | (v423 << 22);
    v35[3] = ((v421 & 0x3FF) << 6) | (v422 << 22);
    LODWORD(v32) = ((v436 & 0x3FF) << 6) | (v437 << 22);
    v35[4] = ((v434 & 0x3FF) << 6) | (v435 << 22);
    v35[5] = (int)v32;
    LODWORD(v32) = ((v444 & 0x3FF) << 6) | (v445 << 22);
    v35[6] = ((v442 & 0x3FF) << 6) | (v443 << 22);
    v35[7] = (int)v32;
    return 64;
  }
  switch(a4)
  {
    case 0x7Fu:
      int64x2_t v36 = *(int64x2_t *)a3;
      int64x2_t v37 = *(int64x2_t *)(a3 + 16);
      int64x2_t v38 = *(int64x2_t *)(a3 + 32);
      int64x2_t v39 = *(int64x2_t *)(a3 + 48);
      int64x2_t v40 = *(int64x2_t *)(a3 + 64);
      int64x2_t v41 = *(int64x2_t *)(a3 + 80);
      int64x2_t v42 = *(int64x2_t *)(a3 + 96);
      int64x2_t v43 = *(int64x2_t *)(a3 + 112);
      unint64_t v44 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v37);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v40, v41);
      int v45 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v44 = vzip2q_s64(v36, v37);
      v44[1] = vzip2q_s64(v40, v41);
      *int v45 = vzip1q_s64(v38, v39);
      v45[1] = vzip1q_s64(v42, v43);
      uint64_t v46 = (int64x2_t *)((char *)v45 + a2);
      *uint64_t v46 = vzip2q_s64(v38, v39);
      v46[1] = vzip2q_s64(v42, v43);
      return 128;
    case 0x4Fu:
      v47.i64[0] = 0xA000A000A000ALL;
      v47.i64[1] = 0xA000A000A000ALL;
      int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v47, v47));
      v47.i64[0] = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
      v49.i64[0] = v47.u32[0];
      v49.i64[1] = v47.u32[1];
      int64x2_t v50 = v49;
      unint64_t v51 = vaddvq_s64(v49);
      int64x2_t v52 = 0uLL;
      if (v51 <= 0x80)
      {
        char v85 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v86 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
        v87.i64[0] = v86.u32[0];
        v87.i64[1] = v86.u32[1];
        int64x2_t v88 = v87;
        int64x2_t v89 = vzip1q_s64((int64x2_t)0, v50);
        unint64_t v90 = 8 * (a3 & 7);
        unint64_t v91 = v51 + v90;
        int64x2_t v92 = vaddq_s64(v89, vdupq_n_s64(v90));
        int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v92)));
        if (v51 + v90 > 0x80) {
          int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v92))), v93);
        }
        uint64x2_t v94 = (uint64x2_t)vnegq_s64(v88);
        int64x2_t v95 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v94);
        *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
        *(int32x2_t *)v95.i8 = vmovn_s64(v95);
        unint64_t v96 = v91 & 0x3F;
        unint64_t v97 = (int64x2_t *)((char *)v85 + 8 * (v91 >> 6));
        int8x16_t v98 = (int8x16_t)vaddq_s64(v89, vdupq_n_s64(v96));
        unint64_t v99 = v51 + v91;
        int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v97, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v98)));
        if (v51 + v96 >= 0x81)
        {
          int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v97[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v98)));
          int8x16_t v100 = vorrq_s8(v98, v100);
        }
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v100, v94);
        *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v100);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        unint64_t v102 = v99 & 0x3F;
        unint64_t v103 = (int64x2_t *)((char *)v85 + 8 * (v99 >> 6));
        int64x2_t v104 = vaddq_s64(v89, vdupq_n_s64(v102));
        unint64_t v105 = v51 + v99;
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v103, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
        if (v51 + v102 > 0x80) {
          int8x16_t v106 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v103[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v106);
        }
        int16x8_t v107 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v95);
        int16x8_t v108 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v101);
        int64x2_t v109 = (int64x2_t)vshlq_u64((uint64x2_t)v106, v94);
        *(int32x2_t *)v95.i8 = vmovn_s64((int64x2_t)v106);
        *(int32x2_t *)v109.i8 = vmovn_s64(v109);
        int16x8_t v110 = (int16x8_t)vzip1q_s32((int32x4_t)v95, (int32x4_t)v109);
        unint64_t v111 = v105 & 0x3F;
        char v112 = (int64x2_t *)((char *)v85 + 8 * (v105 >> 6));
        int64x2_t v113 = vaddq_s64(v89, vdupq_n_s64(v111));
        int8x16_t v114 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113));
        unint64_t v115 = v51 + v105;
        int64x2_t v116 = vsubq_s64(vdupq_n_s64(0x40uLL), v113);
        int8x16_t v117 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)v116);
        int8x16_t v118 = vorrq_s8(v117, v114);
        if (v51 + v111 >= 0x81)
        {
          int64x2_t v119 = v112[1];
          uint64x2_t v120 = (uint64x2_t)vdupq_lane_s64(v119.i64[0], 0);
          int8x16_t v117 = (int8x16_t)vdupq_laneq_s64(v119, 1);
          int8x16_t v114 = (int8x16_t)vshlq_u64(v120, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113));
          int64x2_t v116 = vdupq_n_s64(0xC0uLL);
          int8x16_t v118 = vorrq_s8(vorrq_s8(v114, (int8x16_t)vshlq_u64((uint64x2_t)v117, (uint64x2_t)vsubq_s64(v116, v113))), v118);
        }
        v121.i64[0] = 0x1000100010001;
        v121.i64[1] = 0x1000100010001;
        *(int16x4_t *)v117.i8 = vmovn_s32((int32x4_t)v107);
        *(int16x4_t *)v107.i8 = vshrn_n_s32((int32x4_t)v107, 0xAuLL);
        *(int16x4_t *)v114.i8 = vmovn_s32((int32x4_t)v108);
        *(int16x4_t *)v108.i8 = vshrn_n_s32((int32x4_t)v108, 0xAuLL);
        *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v110);
        *(int16x4_t *)v110.i8 = vshrn_n_s32((int32x4_t)v110, 0xAuLL);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v118, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v118);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v122);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xAuLL);
        unint64_t v124 = v115 & 0x3F;
        BOOL v125 = (int64x2_t *)((char *)v85 + 8 * (v115 >> 6));
        int64x2_t v126 = vaddq_s64(v89, vdupq_n_s64(v124));
        unint64_t v127 = v51 + v115;
        int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v125, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
        if (v51 + v124 > 0x80) {
          int8x16_t v128 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v125[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), v128);
        }
        int16x8_t v129 = vshlq_n_s16(v121, 0xAuLL);
        v130.i64[0] = -1;
        v130.i64[1] = -1;
        int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v128, v94);
        *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
        *(int32x2_t *)v131.i8 = vmovn_s64(v131);
        int16x8_t v132 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v131);
        *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v132);
        *(int16x4_t *)v132.i8 = vshrn_n_s32((int32x4_t)v132, 0xAuLL);
        int v133 = (int64x2_t *)((char *)v85 + 8 * (v127 >> 6));
        int64x2_t v134 = vaddq_s64(v89, vdupq_n_s64(v127 & 0x3F));
        unint64_t v135 = v51 + v127;
        int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
        if (v51 + (v127 & 0x3F) >= 0x81) {
          int8x16_t v136 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v134))), v136);
        }
        int8x16_t v137 = (int8x16_t)vaddq_s16(v129, v130);
        int8x16_t v138 = (int8x16_t)vzip1q_s16((int16x8_t)v117, v107);
        int8x16_t v139 = (int8x16_t)vzip1q_s16((int16x8_t)v114, v108);
        int8x16_t v140 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v110);
        int8x16_t v141 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v123);
        int8x16_t v142 = (int8x16_t)vzip1q_s16((int16x8_t)v128, v132);
        int64x2_t v143 = (int64x2_t)vshlq_u64((uint64x2_t)v136, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v136);
        *(int32x2_t *)v143.i8 = vmovn_s64(v143);
        int16x8_t v144 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v143);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v144);
        *(int16x4_t *)v144.i8 = vshrn_n_s32((int32x4_t)v144, 0xAuLL);
        int8x16_t v145 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v144);
        unint64_t v146 = v51 + v135;
        unint64_t v147 = v135 & 0x3F;
        int64x2_t v148 = vaddq_s64(v89, vdupq_n_s64(v147));
        int v149 = (int64x2_t *)((char *)v85 + 8 * (v135 >> 6));
        int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
        if (v51 + v147 > 0x80) {
          int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v150);
        }
        int16x8_t v151 = (int16x8_t)vandq_s8(v138, v137);
        int16x8_t v152 = (int16x8_t)vandq_s8(v139, v137);
        int16x8_t v153 = (int16x8_t)vandq_s8(v140, v137);
        int16x8_t v154 = (int16x8_t)vandq_s8(v141, v137);
        int16x8_t v155 = (int16x8_t)vandq_s8(v142, v137);
        int16x8_t v156 = (int16x8_t)vandq_s8(v145, v137);
        int64x2_t v157 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v94);
        *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
        *(int32x2_t *)v157.i8 = vmovn_s64(v157);
        int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v150, (int32x4_t)v157);
        *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v158);
        *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xAuLL);
        BOOL v159 = (int64x2_t *)((char *)v85 + 8 * (v146 >> 6));
        int64x2_t v160 = vaddq_s64(v89, vdupq_n_s64(v146 & 0x3F));
        int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v150, v158), v137);
        int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v160)));
        if (v51 + (v146 & 0x3F) >= 0x81) {
          int8x16_t v162 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v159[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v160))), v162);
        }
        int64x2_t v54 = (int64x2_t)vshlq_n_s16(v151, 6uLL);
        int64x2_t v55 = (int64x2_t)vshlq_n_s16(v152, 6uLL);
        int64x2_t v57 = (int64x2_t)vshlq_n_s16(v153, 6uLL);
        int64x2_t v56 = (int64x2_t)vshlq_n_s16(v154, 6uLL);
        int64x2_t v52 = (int64x2_t)vshlq_n_s16(v155, 6uLL);
        int64x2_t v53 = (int64x2_t)vshlq_n_s16(v156, 6uLL);
        int64x2_t v163 = (int64x2_t)vshlq_u64((uint64x2_t)v162, v94);
        *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v162);
        *(int32x2_t *)v163.i8 = vmovn_s64(v163);
        int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v154, (int32x4_t)v163);
        *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v164);
        *(int16x4_t *)v164.i8 = vshrn_n_s32((int32x4_t)v164, 0xAuLL);
        int16x8_t v165 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v154, v164), v137);
        int64x2_t v59 = (int64x2_t)vshlq_n_s16(v161, 6uLL);
        int64x2_t v58 = (int64x2_t)vshlq_n_s16(v165, 6uLL);
      }
      else
      {
        int64x2_t v53 = 0uLL;
        int64x2_t v54 = 0uLL;
        int64x2_t v55 = 0uLL;
        int64x2_t v56 = 0uLL;
        int64x2_t v57 = 0uLL;
        int64x2_t v58 = 0uLL;
        int64x2_t v59 = 0uLL;
      }
      unint64_t v166 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v54, v55);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v52, v53);
      BOOL v167 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v166 = vzip2q_s64(v54, v55);
      v166[1] = vzip2q_s64(v52, v53);
      *BOOL v167 = vzip1q_s64(v57, v56);
      v167[1] = vzip1q_s64(v59, v58);
      uint64_t v168 = (int64x2_t *)((char *)v167 + a2);
      *uint64_t v168 = vzip2q_s64(v57, v56);
      v168[1] = vzip2q_s64(v59, v58);
      return 80;
    case 2u:
      int32x4_t v16 = vdupq_n_s32((*(_DWORD *)a3 << 12) & 0xFFC00000 | ((*(_DWORD *)a3 & 0x3FF) << 6));
      *(int32x4_t *)a1 = v16;
      *(int32x4_t *)(a1 + 16) = v16;
      unint64_t v17 = (int32x4_t *)(a1 + a2);
      *unint64_t v17 = v16;
      v17[1] = v16;
      unint64_t v18 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v18 = v16;
      v18[1] = v16;
      int v19 = (int32x4_t *)(a1 + a2 + 2 * a2);
      *int v19 = v16;
      v19[1] = v16;
      return 3;
    default:
      unint64_t v60 = 8 * (a3 & 7);
      unint64_t v61 = a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = v60 + 18;
      uint64_t v63 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v60;
      if (v60 >= 0x2F) {
        v63 |= *(void *)(v61 + 8) << (-8 * (a3 & 7u));
      }
      a6.i32[0] = v63;
      a6.i32[1] = (unsigned __int16)v63 >> 5;
      *(int8x8_t *)a6.i8 = vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0x1F0000001FLL);
      *(int16x4_t *)a6.i8 = vmovn_s32(a6);
      a7.i32[0] = (unsigned __int16)v63 >> 10;
      a7.i32[1] = v63 >> 14;
      *(int32x2_t *)a7.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a7.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
      *(int16x4_t *)a7.i8 = vmovn_s32(a7);
      unint64_t v64 = v60 + 38;
      unint64_t v65 = v62 >> 6;
      unint64_t v66 = v62 & 0x3A;
      uint64_t v67 = *(void *)(v61 + 8 * v65) >> v66;
      if (v66 >= 0x2D) {
        v67 |= *(void *)(v61 + 8 * v65 + 8) << -(char)v66;
      }
      int8x16_t v68 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
      int8x16_t v69 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a7.i8, 0);
      unint64_t v70 = (8 * (a3 & 7)) | 0x200;
      v71.i64[0] = 0x3000300030003;
      v71.i64[1] = 0x3000300030003;
      int16x8_t v72 = (int16x8_t)vandq_s8(v68, v71);
      int8x16_t v73 = vbicq_s8(v69, (int8x16_t)vceqq_s16(v72, (int16x8_t)v71));
      v71.i64[0] = 0x202020202020202;
      v71.i64[1] = 0x202020202020202;
      int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v68.i8, (int8x8_t)0x4000400040004)))), v71);
      if (vmaxvq_s8(v74) < 1)
      {
        int v84 = 0;
        v169.i64[0] = -1;
        v169.i64[1] = -1;
        int8x16_t v170 = v73;
        int8x16_t v171 = v73;
        int8x16_t v172 = v73;
        v173.i64[0] = -1;
        v173.i64[1] = -1;
        int8x16_t v174 = v73;
        v175.i64[0] = -1;
        v175.i64[1] = -1;
        v176.i64[0] = -1;
        v176.i64[1] = -1;
      }
      else
      {
        int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
        int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
        unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
        v78.i64[0] = v77;
        v78.i64[1] = HIDWORD(v77);
        int64x2_t v79 = v78;
        unint64_t v80 = vaddvq_s64(v78);
        unint64_t v81 = v64 + v80;
        if (v80 <= 0x80 && v70 >= v81)
        {
          unint64_t v177 = v64 & 0x3E;
          int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v79));
          unint64_t v179 = (int64x2_t *)(v61 + ((v64 >> 3) & 8));
          int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
          if (v177 + v80 < 0x81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = 0;
            int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v83);
          }
          unint64_t v64 = v81;
        }
        else
        {
          int8x16_t v83 = 0uLL;
          int v84 = 1;
        }
        int32x2_t v180 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
        v181.i64[0] = v180.u32[0];
        v181.i64[1] = v180.u32[1];
        int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v181));
        *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
        *(int32x2_t *)v182.i8 = vmovn_s64(v182);
        int8x16_t v183 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v182);
        int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v183, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
        *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
        *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
        int16x8_t v185 = vzip1q_s16((int16x8_t)v183, v184);
        v183.i64[0] = 0x101010101010101;
        v183.i64[1] = 0x101010101010101;
        *(int8x8_t *)v186.i8 = vand_s8(vzip1_s8(vmovn_s16(v185), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v185, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v68.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v183, v74), (int8x8_t)-1));
        v186.i64[1] = v186.i64[0];
        *(int8x8_t *)v186.i8 = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
        *(int16x4_t *)v185.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 0);
        *(int16x4_t *)v183.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 1);
        int8x8_t v187 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 2);
        int8x8_t v188 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 3);
        int8x16_t v174 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v185.i8);
        int8x16_t v172 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v183.i8);
        int8x16_t v171 = (int8x16_t)vsubw_s8((int16x8_t)v73, v187);
        int8x16_t v170 = (int8x16_t)vsubw_s8((int16x8_t)v73, v188);
        int8x16_t v176 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v185.i8));
        int8x16_t v175 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v183.i8));
        int8x16_t v173 = (int8x16_t)vmovl_s8(vceqz_s8(v187));
        int8x16_t v169 = (int8x16_t)vmovl_s8(vceqz_s8(v188));
      }
      v189.i64[0] = 0x8000800080008;
      v189.i64[1] = 0x8000800080008;
      int8x16_t v190 = 0uLL;
      int8x16_t v191 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v68, v189), (int8x16_t)0, 0xCuLL), v73);
      int8x16_t v192 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v191, (int16x8_t)v191));
      v189.i64[0] = vpaddq_s32((int32x4_t)v192, (int32x4_t)v192).u64[0];
      v193.i64[0] = v189.u32[0];
      v193.i64[1] = v189.u32[1];
      int64x2_t v194 = v193;
      unint64_t v195 = vaddvq_s64(v193);
      unint64_t v196 = v64 + v195;
      if (v195 <= 0x80 && v70 >= v196)
      {
        unint64_t v198 = v64 & 0x3F;
        int64x2_t v199 = vaddq_s64(vdupq_n_s64(v198), vzip1q_s64((int64x2_t)0, v194));
        unint64_t v200 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v190 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v200, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200->i64[0], 0), (uint64x2_t)vnegq_s64(v199)));
        if (v198 + v195 >= 0x81) {
          int8x16_t v190 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v200[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v199))), v190);
        }
        unint64_t v64 = v196;
      }
      else
      {
        int v84 = 1;
      }
      int v201 = v68.i8[0] & 3;
      if (v201 == 2)
      {
        BOOL v202 = v70 < v64 + 8;
        unint64_t v203 = v64 + 16;
        if (v70 >= v64 + 8) {
          v64 += 8;
        }
        if (v203 > v70 || v202) {
          int v84 = 1;
        }
        else {
          v64 += 8;
        }
      }
      int8x16_t v205 = 0uLL;
      int8x16_t v206 = vextq_s8((int8x16_t)0, v174, 0xCuLL);
      int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v206, (int16x8_t)v206));
      unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
      v209.i64[0] = v208;
      v209.i64[1] = HIDWORD(v208);
      int64x2_t v210 = v209;
      unint64_t v211 = vaddvq_s64(v209);
      unint64_t v212 = v64 + v211;
      if (v211 <= 0x80 && v70 >= v212)
      {
        unint64_t v215 = v64 & 0x3F;
        int64x2_t v216 = vaddq_s64(vdupq_n_s64(v215), vzip1q_s64((int64x2_t)0, v210));
        uint64_t v217 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v217, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217->i64[0], 0), (uint64x2_t)vnegq_s64(v216)));
        if (v215 + v211 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v217[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v216))), v214);
        }
        unint64_t v64 = v212;
      }
      else
      {
        int v84 = 1;
        int8x16_t v214 = 0uLL;
      }
      int8x16_t v218 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v174, (int16x8_t)v174));
      unint64_t v219 = vpaddq_s32((int32x4_t)v218, (int32x4_t)v218).u64[0];
      v220.i64[0] = v219;
      v220.i64[1] = HIDWORD(v219);
      int64x2_t v221 = v220;
      unint64_t v222 = vaddvq_s64(v220);
      unint64_t v223 = v64 + v222;
      if (v222 <= 0x80 && v70 >= v223)
      {
        unint64_t v225 = v64 & 0x3F;
        int64x2_t v226 = vaddq_s64(vdupq_n_s64(v225), vzip1q_s64((int64x2_t)0, v221));
        unint64_t v227 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v226)));
        if (v225 + v222 >= 0x81) {
          int8x16_t v205 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v226))), v205);
        }
        unint64_t v64 = v223;
      }
      else
      {
        int v84 = 1;
      }
      int8x16_t v228 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v172, (int16x8_t)v172));
      unint64_t v229 = vpaddq_s32((int32x4_t)v228, (int32x4_t)v228).u64[0];
      v230.i64[0] = v229;
      v230.i64[1] = HIDWORD(v229);
      int64x2_t v231 = v230;
      unint64_t v232 = vaddvq_s64(v230);
      unint64_t v233 = v64 + v232;
      int8x16_t v234 = 0uLL;
      if (v232 <= 0x80 && v70 >= v233)
      {
        unint64_t v237 = v64 & 0x3F;
        int64x2_t v238 = vaddq_s64(vdupq_n_s64(v237), vzip1q_s64((int64x2_t)0, v231));
        BOOL v239 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v236 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v239, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239->i64[0], 0), (uint64x2_t)vnegq_s64(v238)));
        if (v237 + v232 >= 0x81) {
          int8x16_t v236 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v239[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v238))), v236);
        }
        unint64_t v64 = v233;
      }
      else
      {
        int v84 = 1;
        int8x16_t v236 = 0uLL;
      }
      if (v232 > 0x80 || (unint64_t v240 = v64 + v232, v70 < v64 + v232))
      {
        int v84 = 1;
        unint64_t v240 = v64;
      }
      else
      {
        unint64_t v241 = v64 & 0x3F;
        int64x2_t v242 = vaddq_s64(vdupq_n_s64(v241), vzip1q_s64((int64x2_t)0, v231));
        uint64_t v243 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v234 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v243, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243->i64[0], 0), (uint64x2_t)vnegq_s64(v242)));
        if (v241 + v232 >= 0x81) {
          int8x16_t v234 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v243[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v242))), v234);
        }
      }
      int8x16_t v244 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v171, (int16x8_t)v171));
      unint64_t v245 = vpaddq_s32((int32x4_t)v244, (int32x4_t)v244).u64[0];
      v246.i64[0] = v245;
      v246.i64[1] = HIDWORD(v245);
      int64x2_t v247 = v246;
      unint64_t v248 = vaddvq_s64(v246);
      int8x16_t v249 = 0uLL;
      if (v248 > 0x80 || (unint64_t v250 = v240 + v248, v70 < v240 + v248))
      {
        int v84 = 1;
        unint64_t v250 = v240;
        int8x16_t v253 = 0uLL;
      }
      else
      {
        int64x2_t v251 = vaddq_s64(vdupq_n_s64(v240 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        unsigned int v252 = (int64x2_t *)(v61 + 8 * (v240 >> 6));
        int8x16_t v253 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v252, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252->i64[0], 0), (uint64x2_t)vnegq_s64(v251)));
        if ((v240 & 0x3F) + v248 >= 0x81) {
          int8x16_t v253 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v252[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v251))), v253);
        }
      }
      if (v248 > 0x80 || (unint64_t v254 = v250 + v248, v70 < v250 + v248))
      {
        int v84 = 1;
        unint64_t v254 = v250;
      }
      else
      {
        int64x2_t v255 = vaddq_s64(vdupq_n_s64(v250 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v256 = (int64x2_t *)(v61 + 8 * (v250 >> 6));
        int8x16_t v249 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v256, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256->i64[0], 0), (uint64x2_t)vnegq_s64(v255)));
        if ((v250 & 0x3F) + v248 >= 0x81) {
          int8x16_t v249 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v256[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v255))), v249);
        }
      }
      int8x16_t v257 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
      unint64_t v258 = vpaddq_s32((int32x4_t)v257, (int32x4_t)v257).u64[0];
      v259.i64[0] = v258;
      v259.i64[1] = HIDWORD(v258);
      int64x2_t v260 = v259;
      unint64_t v261 = vaddvq_s64(v259);
      int8x16_t v262 = 0uLL;
      if (v261 > 0x80 || (unint64_t v263 = v254 + v261, v70 < v254 + v261))
      {
        int v84 = 1;
        unint64_t v263 = v254;
        int8x16_t v267 = 0uLL;
      }
      else
      {
        unint64_t v264 = v254 & 0x3F;
        int64x2_t v265 = vaddq_s64(vdupq_n_s64(v264), vzip1q_s64((int64x2_t)0, v260));
        int v266 = (int64x2_t *)(v61 + 8 * (v254 >> 6));
        int8x16_t v267 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v266, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266->i64[0], 0), (uint64x2_t)vnegq_s64(v265)));
        if (v264 + v261 >= 0x81) {
          int8x16_t v267 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v266[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v265))), v267);
        }
      }
      if (v261 > 0x80 || (unint64_t v268 = v263 + v261, v70 < v263 + v261))
      {
        int v84 = 1;
        unint64_t v268 = v263;
      }
      else
      {
        int64x2_t v269 = vaddq_s64(vdupq_n_s64(v263 & 0x3F), vzip1q_s64((int64x2_t)0, v260));
        int v270 = (int64x2_t *)(v61 + 8 * (v263 >> 6));
        int8x16_t v262 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v270, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270->i64[0], 0), (uint64x2_t)vnegq_s64(v269)));
        if ((v263 & 0x3F) + v261 >= 0x81) {
          int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v270[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v269))), v262);
        }
      }
      if (v84 || (uint64_t result = a4 + 1, v70 + 8 * result - v268 - 512 >= 9) || v201 == 2)
      {
        uint64_t result = 0;
        v431 |= 1023 << ((8 * &v431) & 0x20);
        long long v12 = 0uLL;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        unsigned int v271 = (_OWORD *)(a1 + a2);
        *unsigned int v271 = 0u;
        v271[1] = 0u;
        unsigned int v272 = (_OWORD *)(a1 + 2 * a2);
        uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
        *unsigned int v272 = 0u;
        v272[1] = 0u;
        goto LABEL_6;
      }
      int32x2_t v273 = vzip1_s32(*(int32x2_t *)v192.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v192, v192, 8uLL));
      int32x2_t v274 = vzip1_s32(*(int32x2_t *)v228.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v228, v228, 8uLL));
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      int64x2_t v276 = v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)vnegq_s64(v276);
      uint64x2_t v278 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v279 = (int64x2_t)vshlq_u64((uint64x2_t)v190, v277);
      *(int32x2_t *)v190.i8 = vmovn_s64((int64x2_t)v190);
      *(int32x2_t *)v279.i8 = vmovn_s64(v279);
      int16x8_t v280 = (int16x8_t)vzip1q_s32((int32x4_t)v190, (int32x4_t)v279);
      int64x2_t v281 = (int64x2_t)vshlq_u64((uint64x2_t)v236, v278);
      *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v236);
      *(int32x2_t *)v281.i8 = vmovn_s64(v281);
      int16x8_t v282 = (int16x8_t)vzip1q_s32((int32x4_t)v236, (int32x4_t)v281);
      int64x2_t v283 = (int64x2_t)vshlq_u64((uint64x2_t)v234, v278);
      *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v234);
      *(int32x2_t *)v283.i8 = vmovn_s64(v283);
      int16x8_t v284 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v283);
      uint32x4_t v285 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v172.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL))));
      int16x8_t v286 = (int16x8_t)vshlq_u32((uint32x4_t)v280, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v191.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v191, v191, 8uLL)))));
      *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
      *(int16x4_t *)v286.i8 = vmovn_s32((int32x4_t)v286);
      int16x8_t v287 = vzip1q_s16(v280, v286);
      int16x8_t v288 = (int16x8_t)vshlq_u32((uint32x4_t)v282, v285);
      int16x8_t v289 = (int16x8_t)vshlq_u32((uint32x4_t)v284, v285);
      *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
      *(int16x4_t *)v288.i8 = vmovn_s32((int32x4_t)v288);
      *(int16x4_t *)v284.i8 = vmovn_s32((int32x4_t)v284);
      *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
      int16x8_t v290 = vzip1q_s16(v282, v288);
      v288.i64[0] = 0x10001000100010;
      v288.i64[1] = 0x10001000100010;
      int16x8_t v291 = vzip1q_s16(v284, v289);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      int16x8_t v292 = vsubq_s16(v288, (int16x8_t)v191);
      int16x8_t v293 = vaddq_s16((int16x8_t)v191, v289);
      v289.i64[0] = 0x10001000100010;
      v289.i64[1] = 0x10001000100010;
      int16x8_t v294 = vshlq_s16(v287, v292);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      int16x8_t v295 = vsubq_s16(v289, (int16x8_t)v172);
      int16x8_t v296 = vaddq_s16((int16x8_t)v172, v292);
      int8x16_t v297 = (int8x16_t)vshlq_s16(v294, v293);
      int16x8_t v298 = vshlq_s16(vshlq_s16(v290, v295), v296);
      int16x8_t v299 = vshlq_s16(vshlq_s16(v291, v295), v296);
      int8x16_t v300 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v297.i8, 0);
      int16x8_t v301 = (int16x8_t)vandq_s8(v175, v300);
      int16x8_t v302 = vsubq_s16(v298, v301);
      int16x8_t v303 = vsubq_s16(v299, v301);
      *(int32x2_t *)v298.i8 = vzip1_s32(*(int32x2_t *)v244.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL));
      *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v257.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v257, v257, 8uLL));
      v275.i64[0] = v298.u32[0];
      v275.i64[1] = v298.u32[1];
      int64x2_t v304 = v275;
      v275.i64[0] = v299.u32[0];
      v275.i64[1] = v299.u32[1];
      uint64x2_t v305 = (uint64x2_t)vnegq_s64(v304);
      int64x2_t v306 = (int64x2_t)vshlq_u64((uint64x2_t)v253, v305);
      *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v253);
      *(int32x2_t *)v306.i8 = vmovn_s64(v306);
      int16x8_t v307 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v306);
      uint64x2_t v308 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v249, v305);
      *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v249);
      *(int32x2_t *)v309.i8 = vmovn_s64(v309);
      int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v309);
      int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v267, v308);
      *(int32x2_t *)v253.i8 = vmovn_s64((int64x2_t)v267);
      *(int32x2_t *)v311.i8 = vmovn_s64(v311);
      uint32x4_t v312 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v171.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL))));
      int16x8_t v313 = (int16x8_t)vzip1q_s32((int32x4_t)v253, (int32x4_t)v311);
      int16x8_t v314 = (int16x8_t)vshlq_u32((uint32x4_t)v307, v312);
      int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v312);
      *(int16x4_t *)v307.i8 = vmovn_s32((int32x4_t)v307);
      *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
      *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
      *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
      int16x8_t v316 = vzip1q_s16(v307, v314);
      v314.i64[0] = 0x10001000100010;
      v314.i64[1] = 0x10001000100010;
      int16x8_t v317 = vzip1q_s16(v310, v315);
      v315.i64[0] = 0xF000F000F000FLL;
      v315.i64[1] = 0xF000F000F000FLL;
      int16x8_t v318 = vsubq_s16(v314, (int16x8_t)v171);
      int16x8_t v319 = vaddq_s16((int16x8_t)v171, v315);
      uint32x4_t v320 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL))));
      int16x8_t v321 = vshlq_s16(vshlq_s16(v316, v318), v319);
      int16x8_t v322 = vshlq_s16(vshlq_s16(v317, v318), v319);
      int16x8_t v323 = (int16x8_t)vandq_s8(v173, v300);
      int16x8_t v324 = vsubq_s16(v321, v323);
      int16x8_t v325 = vsubq_s16(v322, v323);
      int16x8_t v326 = (int16x8_t)vshlq_u32((uint32x4_t)v313, v320);
      *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v313);
      *(int16x4_t *)v326.i8 = vmovn_s32((int32x4_t)v326);
      v313.i64[0] = 0x10001000100010;
      v313.i64[1] = 0x10001000100010;
      int16x8_t v327 = vzip1q_s16(v321, v326);
      v321.i64[0] = 0xF000F000F000FLL;
      v321.i64[1] = 0xF000F000F000FLL;
      int16x8_t v328 = vsubq_s16(v313, (int16x8_t)v170);
      int16x8_t v329 = vaddq_s16((int16x8_t)v170, v321);
      int64x2_t v330 = (int64x2_t)vshlq_u64((uint64x2_t)v262, v308);
      *(int32x2_t *)v321.i8 = vmovn_s64((int64x2_t)v262);
      *(int32x2_t *)v330.i8 = vmovn_s64(v330);
      int16x8_t v331 = (int16x8_t)vzip1q_s32((int32x4_t)v321, (int32x4_t)v330);
      int16x8_t v332 = (int16x8_t)vshlq_u32((uint32x4_t)v331, v320);
      *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
      *(int16x4_t *)v332.i8 = vmovn_s32((int32x4_t)v332);
      int16x8_t v333 = vshlq_s16(vshlq_s16(vzip1q_s16(v331, v332), v328), v329);
      int16x8_t v334 = (int16x8_t)vandq_s8(v169, v300);
      int16x8_t v335 = vsubq_s16(vshlq_s16(vshlq_s16(v327, v328), v329), v334);
      int16x8_t v336 = vsubq_s16(v333, v334);
      int32x2_t v337 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
      int32x2_t v338 = vzip1_s32(*(int32x2_t *)v218.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v218, v218, 8uLL));
      v275.i64[0] = v337.u32[0];
      v275.i64[1] = v337.u32[1];
      int64x2_t v339 = v275;
      v275.i64[0] = v338.u32[0];
      v275.i64[1] = v338.u32[1];
      int64x2_t v340 = (int64x2_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)vnegq_s64(v339));
      *(int32x2_t *)v214.i8 = vmovn_s64((int64x2_t)v214);
      *(int32x2_t *)v340.i8 = vmovn_s64(v340);
      int16x8_t v341 = (int16x8_t)vzip1q_s32((int32x4_t)v214, (int32x4_t)v340);
      int64x2_t v342 = (int64x2_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)vnegq_s64(v275));
      *(int32x2_t *)v205.i8 = vmovn_s64((int64x2_t)v205);
      *(int32x2_t *)v342.i8 = vmovn_s64(v342);
      int16x8_t v343 = (int16x8_t)vzip1q_s32((int32x4_t)v205, (int32x4_t)v342);
      int16x8_t v344 = (int16x8_t)vshlq_u32((uint32x4_t)v341, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v206.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v206, v206, 8uLL)))));
      int16x8_t v345 = (int16x8_t)vshlq_u32((uint32x4_t)v343, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v174.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v174, v174, 8uLL)))));
      *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
      *(int16x4_t *)v344.i8 = vmovn_s32((int32x4_t)v344);
      *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
      *(int16x4_t *)v345.i8 = vmovn_s32((int32x4_t)v345);
      int16x8_t v346 = vzip1q_s16(v341, v344);
      v344.i64[0] = 0x10001000100010;
      v344.i64[1] = 0x10001000100010;
      int16x8_t v347 = vzip1q_s16(v343, v345);
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      int16x8_t v348 = vaddq_s16((int16x8_t)vandq_s8(v297, v176), vshlq_s16(vshlq_s16(v346, vsubq_s16(v344, (int16x8_t)v206)), vaddq_s16((int16x8_t)v206, v345)));
      int16x8_t v349 = (int16x8_t)vandq_s8(v176, v300);
      v350.i64[0] = 0x1000100010001;
      v350.i64[1] = 0x1000100010001;
      int16x8_t v351 = vceqq_s16(v72, (int16x8_t)v350);
      int v352 = (unsigned __int16)vaddvq_s16(v351);
      int8x16_t v353 = (int8x16_t)vsubq_s16(v348, v349);
      int8x16_t v354 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v347, vsubq_s16(v344, (int16x8_t)v174)), vaddq_s16((int16x8_t)v174, v345)), v349);
      v351.i16[0] = v67 & 0x3FF;
      v351.i16[1] = (v67 >> 10) & 0x3FF;
      int16x8_t v355 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v351.i8, 0);
      if (v352)
      {
        int8x16_t v356 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v68, v350));
        int8x16_t v357 = v354;
        v357.i32[3] = v353.i32[0];
        int8x16_t v358 = v353;
        v358.i32[0] = v354.i32[3];
        v447.val[0] = vbslq_s8(v356, v358, v353);
        v447.val[1] = vbslq_s8(v356, v357, v354);
        v359.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
        v359.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7570), v356), (int16x8_t)v447.val[0]);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356));
        int8x16_t v353 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA7580), v356), (int16x8_t)v448.val[0]);
        int8x16_t v354 = (int8x16_t)vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA7590), v356), v302);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA75A0), v356), v303);
        int16x8_t v302 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75B0), v356), (int16x8_t)v448.val[0]);
        int16x8_t v303 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA75C0), v356), v324);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA7570), v356), v325);
        int16x8_t v324 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356), (int16x8_t)v448.val[0]);
        int16x8_t v325 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75D0), v356));
        v447.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA75E0), v356), v335);
        v447.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA7570), v356), v336);
        int16x8_t v335 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356), (int16x8_t)v447.val[0]);
        int16x8_t v336 = vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA75F0), v356));
      }
      int8x16_t v360 = (int8x16_t)vaddq_s16((int16x8_t)v353, v355);
      int8x16_t v361 = (int8x16_t)vaddq_s16((int16x8_t)v354, v355);
      int8x16_t v362 = (int8x16_t)vaddq_s16(v302, v355);
      int8x16_t v363 = (int8x16_t)vaddq_s16(v303, v355);
      int8x16_t v364 = (int8x16_t)vaddq_s16(v324, v355);
      int8x16_t v365 = (int8x16_t)vaddq_s16(v325, v355);
      int8x16_t v366 = (int8x16_t)vaddq_s16(v335, v355);
      int8x16_t v367 = (int8x16_t)vaddq_s16(v336, v355);
      v368.i64[0] = 0x10001000100010;
      v368.i64[1] = 0x10001000100010;
      int8x16_t v369 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v68, v368));
      int16x8_t v370 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v360, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v360);
      int16x8_t v371 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v361, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v361);
      int16x8_t v372 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v362, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v362);
      int16x8_t v373 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v363, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v363);
      int16x8_t v374 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v364, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v364);
      int16x8_t v375 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v365, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v365);
      int16x8_t v376 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v366, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v366);
      int16x8_t v377 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v367, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v367);
      int64x2_t v378 = (int64x2_t)vshlq_n_s16(v370, 6uLL);
      int64x2_t v379 = (int64x2_t)vshlq_n_s16(v371, 6uLL);
      int64x2_t v380 = (int64x2_t)vshlq_n_s16(v372, 6uLL);
      int64x2_t v381 = (int64x2_t)vshlq_n_s16(v374, 6uLL);
      int64x2_t v382 = (int64x2_t)vshlq_n_s16(v375, 6uLL);
      uint16x8_t v383 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v378, v379);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v381, v382);
      char v384 = (int64x2_t *)(a1 + 2 * a2);
      int64x2_t v385 = (int64x2_t)vshlq_n_s16(v373, 6uLL);
      int64x2_t v386 = (int64x2_t)vshlq_n_s16(v376, 6uLL);
      *uint16x8_t v383 = vzip2q_s64(v378, v379);
      v383[1] = vzip2q_s64(v381, v382);
      int64x2_t v387 = (int64x2_t)vshlq_n_s16(v377, 6uLL);
      *char v384 = vzip1q_s64(v380, v385);
      v384[1] = vzip1q_s64(v386, v387);
      int32x4_t v388 = (int64x2_t *)((char *)v384 + a2);
      *int32x4_t v388 = vzip2q_s64(v380, v385);
      v388[1] = vzip2q_s64(v386, v387);
      break;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int32x4_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int32x4_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *__int16 v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  uint64_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    unsigned int v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *uint64_t v31 = 0;
    unsigned int v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  uint64_t v9 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1, 64, a2, *a3, a4, a5, a6);
  uint64_t v12 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 32, 64, v9, a3[1], a4, v10, v11);
  uint64_t v15 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 256, 64, v12, a3[2], a4, v13, v14);
  uint64_t v18 = v15
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 288, 64, v15, a3[3], a4, v16, v17);
  uint64_t v21 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 512, 64, v18, a3[4], a4, v19, v20);
  uint64_t v24 = v21
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 544, 64, v21, a3[5], a4, v22, v23);
  uint64_t v27 = v24
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 768, 64, v24, a3[6], a4, v25, v26);
  unsigned int v30 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 800, 64, v27, v30, a4, v28, v29);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)2>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(uint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  unint64_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v11 = (int16x8_t)vzip1q_s64(*a3, v9);
  int16x8_t v12 = (int16x8_t)vzip2q_s64(*a3, v9);
  int16x8_t v13 = (int16x8_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  int32x4_t v14 = (int64x2_t *)((char *)v7 + a4);
  int64x2_t v17 = v14[1];
  int16x8_t v18 = (int16x8_t)vzip2q_s64(v8, v10);
  int16x8_t v19 = vshrq_n_s16(v11, 6uLL);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16(v12, 6uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip1q_s64(v15, *v14), 6uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip2q_s64(v15, *v14), 6uLL);
  int16x8_t v23 = vshrq_n_s16(v13, 6uLL);
  int16x8_t v24 = vshrq_n_s16(v18, 6uLL);
  int16x8_t v25 = vshrq_n_s16((int16x8_t)vzip1q_s64(v16, v17), 6uLL);
  int16x8_t v26 = vshrq_n_s16((int16x8_t)vzip2q_s64(v16, v17), 6uLL);
  int16x8_t v27 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 0);
  v28.i64[0] = 0x5000500050005;
  v28.i64[1] = 0x5000500050005;
  int8x16_t v423 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v27), 6uLL), v28);
  int8x16_t v425 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, v27), 6uLL), v28);
  int8x16_t v427 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v27), 6uLL), v28);
  int8x16_t v428 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v27), 6uLL), v28);
  int8x16_t v429 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v27), 6uLL), v28);
  int8x16_t v430 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v27), 6uLL), v28);
  int8x16_t v431 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v27), 6uLL), v28);
  int8x16_t v432 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v27), 6uLL), v28);
  int16x8_t v29 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v423, (int16x8_t)v425), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v423, (int16x8_t)v425), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = vpmaxq_s16(v29, v29);
  int16x8_t v32 = vpminq_s16(v30, v30);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  int16x8_t v37 = vminq_s16(v34, v36);
  int16x8_t v38 = vzip1q_s16(v33, v34);
  v39.i64[0] = 0x10001000100010;
  v39.i64[1] = 0x10001000100010;
  int16x8_t v40 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v38)), (int8x16_t)vceqzq_s16(v38));
  int16x8_t v41 = vpmaxq_s16(v40, v40);
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v427, (int16x8_t)v428), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v427, (int16x8_t)v428), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vpmaxq_s16(v44, v44);
  int16x8_t v47 = vpminq_s16(v45, v45);
  int16x8_t v48 = vmaxq_s16(vmaxq_s16(v33, v35), v46);
  int16x8_t v49 = vminq_s16(v37, v47);
  int16x8_t v50 = vzip1q_s16(v46, v47);
  int16x8_t v51 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v50)), (int8x16_t)vceqzq_s16(v50));
  int16x8_t v52 = vpmaxq_s16(v51, v51);
  int16x8_t v53 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v429, (int16x8_t)v430), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v429, (int16x8_t)v430), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = vpmaxq_s16(v53, v53);
  int16x8_t v56 = vpminq_s16(v54, v54);
  int16x8_t v57 = vpmaxq_s16(v55, v55);
  int16x8_t v58 = vpminq_s16(v56, v56);
  int16x8_t v59 = vmaxq_s16(v48, v57);
  int16x8_t v60 = vminq_s16(v49, v58);
  int16x8_t v61 = vzip1q_s16(v57, v58);
  int16x8_t v62 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v61)), (int8x16_t)vceqzq_s16(v61));
  int16x8_t v63 = vpmaxq_s16(v62, v62);
  int16x8_t v64 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v431, (int16x8_t)v432), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v431, (int16x8_t)v432), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = vpmaxq_s16(v64, v64);
  int16x8_t v67 = vpminq_s16(v65, v65);
  int16x8_t v68 = vpmaxq_s16(v66, v66);
  int16x8_t v69 = vpminq_s16(v67, v67);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(v59, v68);
  int16x8_t v71 = vminq_s16(v60, v69);
  int16x8_t v72 = vzip1q_s16(v68, v69);
  int16x8_t v73 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v72)), (int8x16_t)vceqzq_s16(v72));
  v69.i64[0] = -1;
  v69.i64[1] = -1;
  int16x8_t v74 = vpmaxq_s16(v73, v73);
  int8x16_t v75 = (int8x16_t)vmaxq_s16(vmaxq_s16(v41, v52), vmaxq_s16(v63, v74));
  int16x8_t v76 = vclzq_s16(vsubq_s16((int16x8_t)v70, v71));
  v37.i64[0] = 0xF000F000F000FLL;
  v37.i64[1] = 0xF000F000F000FLL;
  int16x8_t v77 = vsubq_s16(v37, v76);
  int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v39, v76);
  int8x16_t v79 = (int8x16_t)vsubq_s16(vshlq_s16(v69, v77), v71);
  int8x16_t v80 = (int8x16_t)vcgtq_s16((int16x8_t)v75, (int16x8_t)v78);
  int8x16_t v439 = vbslq_s8(v80, v78, v75);
  int8x16_t v440 = (int8x16_t)v71;
  int8x16_t v441 = v70;
  int8x16_t v442 = vandq_s8(v79, v80);
  v70.i64[0] = 0x8000800080008;
  v70.i64[1] = 0x8000800080008;
  int8x16_t v81 = vandq_s8(v80, v70);
  v82.i64[0] = 0x3000300030003;
  v82.i64[1] = 0x3000300030003;
  int16x8_t v83 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v41), (int16x8_t)v82), (int16x8_t)0);
  int8x16_t v84 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v52), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v63), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v74), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v435 = vsubq_s16((int16x8_t)v439, v83);
  int16x8_t v436 = vsubq_s16((int16x8_t)v439, (int16x8_t)v84);
  int16x8_t v437 = vsubq_s16((int16x8_t)v439, v85);
  int16x8_t v438 = vsubq_s16((int16x8_t)v439, v86);
  int8x16_t v87 = (int8x16_t)vceqq_s16(vaddq_s16(v86, v85), vnegq_s16(vaddq_s16(v83, (int16x8_t)v84)));
  v84.i64[0] = 0x4000400040004;
  v84.i64[1] = 0x4000400040004;
  int8x16_t v88 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v439), v82), v81), vbicq_s8(v84, v87));
  int8x16_t v433 = (int8x16_t)v27;
  int8x16_t v434 = v88;
  if (vmaxvq_s16((int16x8_t)v439))
  {
    int16x8_t v417 = v21;
    int16x8_t v418 = v22;
    int16x8_t v419 = v23;
    int16x8_t v420 = v24;
    int16x8_t v421 = v25;
    int16x8_t v422 = v26;
    v89.i64[0] = 0x4000400040004;
    v89.i64[1] = 0x4000400040004;
    int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v423, (int16x8_t)vqtbl1q_s8(v423, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v425, (int16x8_t)vqtbl1q_s8(v425, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v92 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v427, (int16x8_t)vqtbl1q_s8(v427, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v428, (int16x8_t)vqtbl1q_s8(v428, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v429, (int16x8_t)vqtbl1q_s8(v429, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v430, (int16x8_t)vqtbl1q_s8(v430, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v431, (int16x8_t)vqtbl1q_s8(v431, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v432, (int16x8_t)vqtbl1q_s8(v432, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vpmaxq_s16(v100, v100);
    int16x8_t v103 = vpminq_s16(v101, v101);
    int16x8_t v104 = vmaxq_s16(v102, v35);
    int16x8_t v105 = vminq_s16(v103, v36);
    int16x8_t v106 = vzip1q_s16(v102, v103);
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v106)), (int8x16_t)vceqzq_s16(v106));
    int16x8_t v108 = vpmaxq_s16(v107, v107);
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v104, v113);
    int16x8_t v116 = vminq_s16(v105, v114);
    int16x8_t v117 = vzip1q_s16(v113, v114);
    int16x8_t v118 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v117)), (int8x16_t)vceqzq_s16(v117));
    int16x8_t v119 = vpmaxq_s16(v118, v118);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int16x8_t v127 = vminq_s16(v116, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v126, v135);
    int8x16_t v138 = (int8x16_t)vminq_s16(v127, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16(v108, v119), vmaxq_s16(v130, v141));
    int8x16_t v416 = (int8x16_t)v137;
    int16x8_t v143 = vclzq_s16(vsubq_s16(v137, (int16x8_t)v138));
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v39, v143);
    int8x16_t v145 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v142);
    v142.i64[0] = 0x18001800180018;
    v142.i64[1] = 0x18001800180018;
    int8x16_t v147 = vbslq_s8(v145, v142, v39);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v108), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v119), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v130), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v141), (int16x8_t)v82), (int16x8_t)0);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v146, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v146, v149);
    int8x16_t v154 = (int8x16_t)vsubq_s16((int16x8_t)v146, v150);
    int8x16_t v155 = (int8x16_t)vsubq_s16((int16x8_t)v146, v151);
    int8x16_t v156 = vbicq_s8(v89, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v89.i64[0] = 0x7000700070007;
    v89.i64[1] = 0x7000700070007;
    v157.i64[0] = 0x8000800080008;
    v157.i64[1] = 0x8000800080008;
    int8x16_t v158 = v439;
    int16x8_t v159 = (int16x8_t)vandq_s8(v88, v82);
    v160.i64[0] = 0x2000200020002;
    v160.i64[1] = 0x2000200020002;
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v159, v160), v39);
    int16x8_t v162 = v435;
    int16x8_t v163 = v436;
    int16x8_t v164 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v439, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v81, v157))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v157)), v161);
    int16x8_t v166 = v437;
    int16x8_t v165 = v438;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v164, v435, (int16x8_t)v89), vshlq_n_s16(vaddq_s16(vaddq_s16(v437, v436), v438), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v146, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v156, (int16x8_t)v156)), (int16x8_t)v152, (int16x8_t)v89), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v154, (int16x8_t)v153), (int16x8_t)v155), 3uLL))), 0);
    int v168 = (unsigned __int16)vaddvq_s16((int16x8_t)v167);
    BOOL v170 = a5 < 4 || a6 < 2;
    if (v168)
    {
      v171.i64[0] = 0x3000300030003;
      v171.i64[1] = 0x3000300030003;
      int8x16_t v423 = vbslq_s8(v167, v90, v423);
      int8x16_t v425 = vbslq_s8(v167, v91, v425);
      int8x16_t v172 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v146), v171), v147), v156);
      v173.i64[0] = 0xF000F000F000FLL;
      v173.i64[1] = 0xF000F000F000FLL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int8x16_t v427 = vbslq_s8(v167, v92, v427);
      int8x16_t v428 = vbslq_s8(v167, v93, v428);
      int8x16_t v429 = vbslq_s8(v167, v94, v429);
      int8x16_t v430 = vbslq_s8(v167, v95, v430);
      int8x16_t v431 = vbslq_s8(v167, v96, v431);
      int8x16_t v432 = vbslq_s8(v167, v97, v432);
      int16x8_t v162 = (int16x8_t)vbslq_s8(v167, v152, (int8x16_t)v435);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v167, v153, (int8x16_t)v436);
      int16x8_t v435 = v162;
      int16x8_t v436 = v163;
      int16x8_t v166 = (int16x8_t)vbslq_s8(v167, v154, (int8x16_t)v437);
      int16x8_t v165 = (int16x8_t)vbslq_s8(v167, v155, (int8x16_t)v438);
      int16x8_t v437 = v166;
      int16x8_t v438 = v165;
      int8x16_t v441 = vbslq_s8(v167, v416, v441);
      int8x16_t v442 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v171, vsubq_s16(v173, v143)), (int16x8_t)v138), v145), v442);
      int8x16_t v158 = vbslq_s8(v167, v146, v439);
      int8x16_t v439 = v158;
      int8x16_t v440 = vbslq_s8(v167, v138, v440);
      int8x16_t v88 = vbslq_s8(v167, v172, v88);
      int8x16_t v433 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v433, (int16x8_t)vqtbl1q_s8(v433, (int8x16_t)xmmword_242EA76C0)), v433);
      int8x16_t v434 = v88;
    }
    int16x8_t v174 = v421;
    int16x8_t v175 = v419;
    int16x8_t v176 = v417;
    if (!v170)
    {
      int16x8_t v177 = vsubq_s16(v19, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v178 = v418;
      v178.i32[3] = v20.i32[3];
      int16x8_t v179 = vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v180 = v420;
      v180.i32[3] = v20.i32[3];
      int16x8_t v181 = v422;
      v181.i32[3] = v20.i32[3];
      int16x8_t v182 = v179;
      v182.i32[3] = v177.i32[0];
      v177.i32[0] = v179.i32[3];
      int16x8_t v183 = vshlq_n_s16(v182, 6uLL);
      v184.i64[0] = 0x5000500050005;
      v184.i64[1] = 0x5000500050005;
      int8x16_t v185 = (int8x16_t)vshlq_s16(vshlq_n_s16(v177, 6uLL), v184);
      int8x16_t v186 = (int8x16_t)vshlq_s16(v183, v184);
      int8x16_t v187 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v417, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v176.i8, (int8x16_t)xmmword_242EA7590)), 6uLL), v184);
      int8x16_t v188 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v418, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v176.i8, (int8x16_t)xmmword_242EA7630)), 6uLL), v184);
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v419, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7640)), 6uLL), v184);
      int8x16_t v190 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v420, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7570)), 6uLL), v184);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v421, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7650)), 6uLL), v184);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v422, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7570)), 6uLL), v184);
      int16x8_t v193 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v185, (int16x8_t)v186), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v194 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v185, (int16x8_t)v186), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v195 = vpmaxq_s16(v193, v193);
      int16x8_t v196 = vpminq_s16(v194, v194);
      int16x8_t v197 = vpmaxq_s16(v195, v195);
      int16x8_t v198 = vpminq_s16(v196, v196);
      v199.i64[0] = 0x8000800080008000;
      v199.i64[1] = 0x8000800080008000;
      int16x8_t v200 = vmaxq_s16(v197, v199);
      v199.i64[0] = 0x8000800080008000;
      v199.i64[1] = 0x8000800080008000;
      int16x8_t v201 = vminq_s16(v198, v199);
      int16x8_t v202 = vzip1q_s16(v197, v198);
      v199.i64[0] = 0x10001000100010;
      v199.i64[1] = 0x10001000100010;
      int16x8_t v203 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v202)), (int8x16_t)vceqzq_s16(v202));
      int16x8_t v204 = vpmaxq_s16(v203, v203);
      int16x8_t v205 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v207 = vpmaxq_s16(v205, v205);
      int16x8_t v208 = vpminq_s16(v206, v206);
      int16x8_t v209 = vpmaxq_s16(v207, v207);
      int16x8_t v210 = vpminq_s16(v208, v208);
      int16x8_t v211 = vmaxq_s16(v200, v209);
      int16x8_t v212 = vminq_s16(v201, v210);
      int16x8_t v213 = vzip1q_s16(v209, v210);
      int16x8_t v214 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v213)), (int8x16_t)vceqzq_s16(v213));
      int16x8_t v215 = vpmaxq_s16(v214, v214);
      int16x8_t v216 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v218 = vpmaxq_s16(v216, v216);
      int16x8_t v219 = vpminq_s16(v217, v217);
      int16x8_t v220 = vpmaxq_s16(v218, v218);
      int16x8_t v221 = vpminq_s16(v219, v219);
      int16x8_t v222 = vmaxq_s16(v211, v220);
      int16x8_t v223 = vzip1q_s16(v220, v221);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int16x8_t v230 = vpmaxq_s16(v228, v228);
      int16x8_t v231 = vpminq_s16(v229, v229);
      int8x16_t v232 = (int8x16_t)vmaxq_s16(v222, v230);
      int8x16_t v233 = (int8x16_t)vminq_s16(vminq_s16(v212, v221), v231);
      int16x8_t v234 = vzip1q_s16(v230, v231);
      int16x8_t v235 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v234)), (int8x16_t)vceqzq_s16(v234));
      int8x16_t v236 = (int8x16_t)vpmaxq_s16(v235, v235);
      int8x16_t v237 = (int8x16_t)vmaxq_s16(vmaxq_s16(v204, v215), vmaxq_s16(v225, (int16x8_t)v236));
      int16x8_t v238 = vclzq_s16(vsubq_s16((int16x8_t)v232, (int16x8_t)v233));
      int8x16_t v239 = (int8x16_t)vsubq_s16(v199, v238);
      int8x16_t v240 = (int8x16_t)vcgtq_s16((int16x8_t)v237, (int16x8_t)v239);
      int8x16_t v241 = vbslq_s8(v240, v239, v237);
      v242.i64[0] = 0x3000300030003;
      v242.i64[1] = 0x3000300030003;
      int16x8_t v243 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v204), v242), (int16x8_t)0);
      int16x8_t v244 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v215), v242), (int16x8_t)0);
      int16x8_t v245 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v225), v242), (int16x8_t)0);
      int16x8_t v246 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, (int16x8_t)v236), v242), (int16x8_t)0);
      int8x16_t v247 = (int8x16_t)vsubq_s16((int16x8_t)v241, v243);
      int8x16_t v248 = (int8x16_t)vsubq_s16((int16x8_t)v241, v244);
      int8x16_t v249 = (int8x16_t)vsubq_s16((int16x8_t)v241, v245);
      int8x16_t v250 = (int8x16_t)vsubq_s16((int16x8_t)v241, v246);
      v236.i64[0] = 0x4000400040004;
      v236.i64[1] = 0x4000400040004;
      int8x16_t v251 = vbicq_s8(v236, (int8x16_t)vceqq_s16(vaddq_s16(v246, v245), vnegq_s16(vaddq_s16(v243, v244))));
      v252.i64[0] = 0x7000700070007;
      v252.i64[1] = 0x7000700070007;
      int16x8_t v253 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v239, v240), vaddq_s16((int16x8_t)v251, (int16x8_t)v251)), (int16x8_t)v247, v252), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v249, (int16x8_t)v248), (int16x8_t)v250), 3uLL));
      v239.i64[0] = 0x8000800080008;
      v239.i64[1] = 0x8000800080008;
      int8x16_t v88 = v434;
      int16x8_t v162 = v435;
      v254.i64[0] = 0x2000200020002;
      v254.i64[1] = 0x2000200020002;
      int16x8_t v255 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v434, (int8x16_t)v242), (int16x8_t)v254), (int8x16_t)v199);
      int16x8_t v165 = v438;
      int8x16_t v158 = v439;
      int16x8_t v256 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v439, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v434, v239))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v239)), v255);
      int16x8_t v163 = v436;
      int16x8_t v166 = v437;
      int8x16_t v257 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v256, v435, v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v437, v436), v438), 3uLL)), v253), 0);
      if (vaddvq_s16((int16x8_t)v257))
      {
        v258.i64[0] = 0x9000900090009;
        v258.i64[1] = 0x9000900090009;
        int8x16_t v423 = vbslq_s8(v257, v185, v423);
        int8x16_t v425 = vbslq_s8(v257, v186, v425);
        v259.i64[0] = -1;
        v259.i64[1] = -1;
        int8x16_t v427 = vbslq_s8(v257, v187, v427);
        int8x16_t v428 = vbslq_s8(v257, v188, v428);
        v260.i64[0] = 0xF000F000F000FLL;
        v260.i64[1] = 0xF000F000F000FLL;
        int8x16_t v429 = vbslq_s8(v257, v189, v429);
        int8x16_t v430 = vbslq_s8(v257, v190, v430);
        int8x16_t v431 = vbslq_s8(v257, v191, v431);
        int8x16_t v432 = vbslq_s8(v257, v192, v432);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v257, v247, (int8x16_t)v435);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v257, v248, (int8x16_t)v436);
        int16x8_t v435 = v162;
        int16x8_t v436 = v163;
        int16x8_t v166 = (int16x8_t)vbslq_s8(v257, v249, (int8x16_t)v437);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v257, v250, (int8x16_t)v438);
        int16x8_t v437 = v166;
        int16x8_t v438 = v165;
        int8x16_t v441 = vbslq_s8(v257, v232, v441);
        int8x16_t v442 = vbslq_s8(v257, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v259, vsubq_s16(v260, v238)), (int16x8_t)v233), v240), v442);
        int8x16_t v158 = vbslq_s8(v257, v241, v439);
        int8x16_t v439 = v158;
        int8x16_t v440 = vbslq_s8(v257, v233, v440);
        int8x16_t v88 = vbslq_s8(v257, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v241), v254), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v240, v258), (int16x8_t)vmvnq_s8(v240))), v251), v434);
        int8x16_t v433 = vbslq_s8(v257, vextq_s8(v20, v20, 0xCuLL), v433);
        int8x16_t v434 = v88;
      }
    }
    int16x8_t v261 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v162));
    int8x16_t v424 = (int8x16_t)vaddq_s16(v261, (int16x8_t)v423);
    int8x16_t v426 = (int8x16_t)vaddq_s16((int16x8_t)v425, v261);
    int16x8_t v262 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v163));
    int8x16_t v427 = (int8x16_t)vaddq_s16((int16x8_t)v427, v262);
    int8x16_t v428 = (int8x16_t)vaddq_s16((int16x8_t)v428, v262);
    int16x8_t v263 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v166));
    int8x16_t v429 = (int8x16_t)vaddq_s16((int16x8_t)v429, v263);
    int8x16_t v430 = (int8x16_t)vaddq_s16((int16x8_t)v430, v263);
    int8x16_t v264 = vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v165));
    int8x16_t v431 = (int8x16_t)vaddq_s16((int16x8_t)v431, (int16x8_t)v264);
    int8x16_t v432 = (int8x16_t)vaddq_s16((int16x8_t)v432, (int16x8_t)v264);
    v264.i64[0] = 0x8000800080008;
    v264.i64[1] = 0x8000800080008;
    v265.i64[0] = 0x3000300030003;
    v265.i64[1] = 0x3000300030003;
    v266.i64[0] = 0x2000200020002;
    v266.i64[1] = 0x2000200020002;
    int8x16_t v267 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v265), v266);
    v266.i64[0] = 0x10001000100010;
    v266.i64[1] = 0x10001000100010;
    int16x8_t v268 = (int16x8_t)vandq_s8(v267, (int8x16_t)v266);
    v266.i64[0] = 0x7000700070007;
    v266.i64[1] = 0x7000700070007;
    int16x8_t v269 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v158, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v88, v264))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v264)), v268), v162, v266), vshlq_n_s16(vaddq_s16(v166, vaddq_s16(v163, v165)), 3uLL));
    if ((unint64_t)(vpaddq_s16(v269, v269).i16[0] - 347) < 0xFFFFFFFFFFFFFE78)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (uint32x4_t *)a3, a4, a5, a6, a7);
      return 48;
    }
    else
    {
      int v270 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v271 = 8 * (a1 & 7);
      if (v271) {
        uint64_t v272 = *v270 & ~(-1 << v271);
      }
      else {
        uint64_t v272 = 0;
      }
      *a2 = 0;
      uint64_t v275 = ((v158.i16[0] << 10) + 15360) & 0x3C00;
      if (!v158.i16[0]) {
        uint64_t v275 = 0;
      }
      if (v158.i16[1]) {
        uint64_t v276 = ((v158.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v276 = 0;
      }
      unint64_t v277 = v275 | v276 | v88.i8[0] & 0x1F | (32 * (v88.i8[2] & 0x1Fu));
      unint64_t v278 = v433.i16[0] & 0x3FF | ((unint64_t)(v433.i16[1] & 0x3FF) << 10);
      uint64_t v279 = (v277 << v271) | v272;
      if (v271 >= 0x2E)
      {
        *int v270 = v279;
        uint64_t v279 = v277 >> (-8 * (a1 & 7u));
      }
      unint64_t v280 = (v271 + 18) & 0x3A;
      unint64_t v281 = v279 | (v278 << v280);
      if (v280 >= 0x2C)
      {
        *(void *)((char *)v270 + (((v271 + 18) >> 3) & 8)) = v281;
        unint64_t v281 = v278 >> -(char)v280;
      }
      unint64_t v282 = v271 + 38;
      int8x16_t v283 = (int8x16_t)vsubq_s16((int16x8_t)v439, v435);
      int8x16_t v284 = (int8x16_t)vsubq_s16((int16x8_t)v439, v436);
      int8x16_t v285 = (int8x16_t)vsubq_s16((int16x8_t)v439, v437);
      int8x16_t v286 = (int8x16_t)vsubq_s16((int16x8_t)v439, v438);
      *(uint8x8_t *)v283.i8 = vqmovn_u16((uint16x8_t)v283);
      *(uint8x8_t *)v284.i8 = vqmovn_u16((uint16x8_t)v284);
      *(uint8x8_t *)v285.i8 = vqmovn_u16((uint16x8_t)v285);
      *(uint8x8_t *)v286.i8 = vqmovn_u16((uint16x8_t)v286);
      v286.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v283, v284), (int16x8_t)vzip1q_s8(v285, v286)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v283, v284), (int16x8_t)vtrn2q_s8(v285, v286))).u64[0];
      v284.i64[0] = 0x202020202020202;
      v284.i64[1] = 0x202020202020202;
      int8x16_t v287 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v434.i8, (int8x8_t)0x4000400040004)))), v284);
      v284.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v284.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v285, (uint8x16_t)vorrq_s8(v287, v284)), (int8x16_t)v286.u64[0]);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v287.i8);
      uint16x8_t v290 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vmovl_high_u8(v288));
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16(v289, (int16x8_t)vmovl_high_u8((uint8x16_t)v287));
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16(v291);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      uint64_t v302 = (v271 + 38) & 0x3E;
      unint64_t v303 = (v300.i64[0] << v302) | v281;
      if ((unint64_t)(v301.i64[0] + v302) >= 0x40)
      {
        *(void *)((char *)v270 + ((v282 >> 3) & 8)) = v303;
        unint64_t v303 = (unint64_t)v300.i64[0] >> -(char)v302;
      }
      unint64_t v304 = v301.i64[0] + v282;
      unint64_t v305 = v303 | (v300.i64[1] << v304);
      if ((v304 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v304 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v300.i64[1] >> -(v304 & 0x3F);
        if ((v304 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      unint64_t v306 = v304 + v301.i64[1];
      v307.i64[0] = 0x8000800080008;
      v307.i64[1] = 0x8000800080008;
      v308.i64[0] = -1;
      v308.i64[1] = -1;
      int16x8_t v309 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v434, v307), (int8x16_t)0, 0xCuLL), v439);
      v310.i64[0] = 0xF000F000F000FLL;
      v310.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v311 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v308, (uint16x8_t)vaddq_s16(v309, v310)), v442);
      int32x4_t v312 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v309.i8);
      int32x4_t v313 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v311.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v312)), (int32x4_t)vmovl_high_u16(v311));
      int32x4_t v314 = vpaddq_s32(v312, (int32x4_t)vmovl_high_u16((uint16x8_t)v309));
      v315.i64[0] = v313.u32[0];
      v315.i64[1] = v313.u32[1];
      uint64x2_t v316 = (uint64x2_t)v315;
      v315.i64[0] = v313.u32[2];
      v315.i64[1] = v313.u32[3];
      uint64x2_t v317 = (uint64x2_t)v315;
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      int64x2_t v318 = v315;
      v315.i64[0] = v314.u32[2];
      v315.i64[1] = v314.u32[3];
      int64x2_t v319 = vpaddq_s64((int64x2_t)vshlq_u64(v316, (uint64x2_t)vzip1q_s64((int64x2_t)0, v318)), (int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)));
      int64x2_t v320 = vpaddq_s64(v318, v315);
      unint64_t v321 = (v319.i64[0] << v306) | v305;
      if (v320.i64[0] + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v319.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v321 = 0;
        }
      }
      unint64_t v322 = v320.i64[0] + v306;
      unint64_t v323 = v321 | (v319.i64[1] << v322);
      if ((v322 & 0x3F) + v320.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v322 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        unint64_t v323 = (unint64_t)v319.i64[1] >> -(v322 & 0x3F);
        if ((v322 & 0x3F) == 0) {
          unint64_t v323 = 0;
        }
      }
      unint64_t v324 = v322 + v320.i64[1];
      int16x8_t v325 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v435, 0xCuLL);
      v326.i64[0] = 0xF000F000F000FLL;
      v326.i64[1] = 0xF000F000F000FLL;
      v327.i64[0] = -1;
      v327.i64[1] = -1;
      uint16x8_t v328 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v327, (uint16x8_t)vaddq_s16(v325, v326)), v424);
      int32x4_t v329 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v325.i8);
      int32x4_t v330 = (int32x4_t)vmovl_high_u16((uint16x8_t)v325);
      int32x4_t v331 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v328.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)), (int32x4_t)vshlq_u32(vmovl_high_u16(v328), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)));
      int32x4_t v332 = vpaddq_s32(v329, v330);
      v333.i64[0] = v331.u32[0];
      v333.i64[1] = v331.u32[1];
      uint64x2_t v334 = (uint64x2_t)v333;
      v333.i64[0] = v331.u32[2];
      v333.i64[1] = v331.u32[3];
      uint64x2_t v335 = (uint64x2_t)v333;
      v333.i64[0] = v332.u32[0];
      v333.i64[1] = v332.u32[1];
      int64x2_t v336 = v333;
      v333.i64[0] = v332.u32[2];
      v333.i64[1] = v332.u32[3];
      int64x2_t v337 = vpaddq_s64((int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v336)), (int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v333)));
      int64x2_t v338 = vpaddq_s64(v336, v333);
      unint64_t v339 = (v337.i64[0] << v324) | v323;
      if (v338.i64[0] + (v324 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v324 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
        unint64_t v339 = (unint64_t)v337.i64[0] >> -(v324 & 0x3F);
        if ((v324 & 0x3F) == 0) {
          unint64_t v339 = 0;
        }
      }
      unint64_t v340 = v338.i64[0] + v324;
      unint64_t v341 = v339 | (v337.i64[1] << v340);
      if ((v340 & 0x3F) + v338.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
        unint64_t v341 = (unint64_t)v337.i64[1] >> -(v340 & 0x3F);
        if ((v340 & 0x3F) == 0) {
          unint64_t v341 = 0;
        }
      }
      unint64_t v342 = v340 + v338.i64[1];
      v343.i64[0] = 0xF000F000F000FLL;
      v343.i64[1] = 0xF000F000F000FLL;
      v344.i64[0] = -1;
      v344.i64[1] = -1;
      uint16x8_t v345 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v344, (uint16x8_t)vaddq_s16(v435, v343)), v426);
      int32x4_t v346 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v435.i8);
      int32x4_t v347 = (int32x4_t)vmovl_high_u16((uint16x8_t)v435);
      int32x4_t v348 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v345.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)), (int32x4_t)vshlq_u32(vmovl_high_u16(v345), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)));
      int32x4_t v349 = vpaddq_s32(v346, v347);
      v350.i64[0] = v348.u32[0];
      v350.i64[1] = v348.u32[1];
      uint64x2_t v351 = (uint64x2_t)v350;
      v350.i64[0] = v348.u32[2];
      v350.i64[1] = v348.u32[3];
      uint64x2_t v352 = (uint64x2_t)v350;
      v350.i64[0] = v349.u32[0];
      v350.i64[1] = v349.u32[1];
      int64x2_t v353 = v350;
      v350.i64[0] = v349.u32[2];
      v350.i64[1] = v349.u32[3];
      int64x2_t v354 = vpaddq_s64((int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v353)), (int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v350)));
      int64x2_t v355 = vpaddq_s64(v353, v350);
      unint64_t v356 = (v354.i64[0] << v342) | v341;
      if (v355.i64[0] + (v342 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
        if ((v342 & 0x3F) != 0) {
          unint64_t v356 = (unint64_t)v354.i64[0] >> -(v342 & 0x3F);
        }
        else {
          unint64_t v356 = 0;
        }
      }
      uint64_t v357 = v355.i64[1];
      unint64_t v358 = v355.i64[0] + v342;
      uint64_t v359 = (v355.i64[0] + v342) & 0x3F;
      unint64_t v360 = v356 | (v354.i64[1] << v358);
      if ((unint64_t)(v359 + v355.i64[1]) >= 0x40)
      {
        *(void *)((char *)v270 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
        unint64_t v360 = (unint64_t)v354.i64[1] >> -(char)v359;
        if (!v359) {
          unint64_t v360 = 0;
        }
      }
      uint64_t v361 = 0;
      v362.i64[0] = 0xF000F000F000FLL;
      v362.i64[1] = 0xF000F000F000FLL;
      v363.i64[0] = -1;
      v363.i64[1] = -1;
      unint64_t v364 = v358 + v357;
      char v365 = 1;
      do
      {
        char v366 = v365;
        uint16x8_t v367 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v363, (uint16x8_t)vaddq_s16(v436, v362)), *(&v427 + v361));
        int32x4_t v368 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v436.i8);
        int32x4_t v369 = (int32x4_t)vmovl_high_u16((uint16x8_t)v436);
        int32x4_t v370 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v367.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v368)), (int32x4_t)vshlq_u32(vmovl_high_u16(v367), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v369)));
        int32x4_t v371 = vpaddq_s32(v368, v369);
        v372.i64[0] = v370.u32[0];
        v372.i64[1] = v370.u32[1];
        uint64x2_t v373 = (uint64x2_t)v372;
        v372.i64[0] = v370.u32[2];
        v372.i64[1] = v370.u32[3];
        uint64x2_t v374 = (uint64x2_t)v372;
        v372.i64[0] = v371.u32[0];
        v372.i64[1] = v371.u32[1];
        int64x2_t v375 = v372;
        v372.i64[0] = v371.u32[2];
        v372.i64[1] = v371.u32[3];
        int64x2_t v376 = vpaddq_s64((int64x2_t)vshlq_u64(v373, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)), (int64x2_t)vshlq_u64(v374, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)));
        int64x2_t v377 = vpaddq_s64(v375, v372);
        unint64_t v378 = (v376.i64[0] << v364) | v360;
        if (v377.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v378;
          unint64_t v378 = (unint64_t)v376.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v378 = 0;
          }
        }
        unint64_t v379 = v377.i64[0] + v364;
        unint64_t v360 = v378 | (v376.i64[1] << v379);
        if ((v379 & 0x3F) + v377.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v376.i64[1] >> -(v379 & 0x3F);
          if ((v379 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v365 = 0;
        unint64_t v364 = v379 + v377.i64[1];
        uint64_t v361 = 1;
      }
      while ((v366 & 1) != 0);
      uint64_t v380 = 0;
      char v381 = 1;
      v382.i64[0] = 0xF000F000F000FLL;
      v382.i64[1] = 0xF000F000F000FLL;
      v383.i64[0] = -1;
      v383.i64[1] = -1;
      do
      {
        char v384 = v381;
        uint16x8_t v385 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v383, (uint16x8_t)vaddq_s16(v437, v382)), *(&v429 + v380));
        int32x4_t v386 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v437.i8);
        int32x4_t v387 = (int32x4_t)vmovl_high_u16((uint16x8_t)v437);
        int32x4_t v388 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v385.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v386)), (int32x4_t)vshlq_u32(vmovl_high_u16(v385), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)));
        int32x4_t v389 = vpaddq_s32(v386, v387);
        v390.i64[0] = v388.u32[0];
        v390.i64[1] = v388.u32[1];
        uint64x2_t v391 = (uint64x2_t)v390;
        v390.i64[0] = v388.u32[2];
        v390.i64[1] = v388.u32[3];
        uint64x2_t v392 = (uint64x2_t)v390;
        v390.i64[0] = v389.u32[0];
        v390.i64[1] = v389.u32[1];
        int64x2_t v393 = v390;
        v390.i64[0] = v389.u32[2];
        v390.i64[1] = v389.u32[3];
        int64x2_t v394 = vpaddq_s64((int64x2_t)vshlq_u64(v391, (uint64x2_t)vzip1q_s64((int64x2_t)0, v393)), (int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)));
        int64x2_t v395 = vpaddq_s64(v393, v390);
        unint64_t v396 = (v394.i64[0] << v364) | v360;
        if (v395.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v396;
          unint64_t v396 = (unint64_t)v394.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v396 = 0;
          }
        }
        unint64_t v397 = v395.i64[0] + v364;
        unint64_t v360 = v396 | (v394.i64[1] << v397);
        if ((v397 & 0x3F) + v395.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v397 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v394.i64[1] >> -(v397 & 0x3F);
          if ((v397 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v381 = 0;
        unint64_t v364 = v397 + v395.i64[1];
        uint64_t v380 = 1;
      }
      while ((v384 & 1) != 0);
      uint64_t v398 = 0;
      char v399 = 1;
      v400.i64[0] = 0xF000F000F000FLL;
      v400.i64[1] = 0xF000F000F000FLL;
      v401.i64[0] = -1;
      v401.i64[1] = -1;
      do
      {
        char v402 = v399;
        uint16x8_t v403 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v401, (uint16x8_t)vaddq_s16(v438, v400)), *(&v431 + v398));
        int32x4_t v404 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v438.i8);
        int32x4_t v405 = (int32x4_t)vmovl_high_u16((uint16x8_t)v438);
        int32x4_t v406 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v403.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v404)), (int32x4_t)vshlq_u32(vmovl_high_u16(v403), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v405)));
        int32x4_t v407 = vpaddq_s32(v404, v405);
        v408.i64[0] = v406.u32[0];
        v408.i64[1] = v406.u32[1];
        uint64x2_t v409 = (uint64x2_t)v408;
        v408.i64[0] = v406.u32[2];
        v408.i64[1] = v406.u32[3];
        uint64x2_t v410 = (uint64x2_t)v408;
        v408.i64[0] = v407.u32[0];
        v408.i64[1] = v407.u32[1];
        int64x2_t v411 = v408;
        v408.i64[0] = v407.u32[2];
        v408.i64[1] = v407.u32[3];
        int64x2_t v412 = vpaddq_s64((int64x2_t)vshlq_u64(v409, (uint64x2_t)vzip1q_s64((int64x2_t)0, v411)), (int64x2_t)vshlq_u64(v410, (uint64x2_t)vzip1q_s64((int64x2_t)0, v408)));
        int64x2_t v413 = vpaddq_s64(v411, v408);
        unint64_t v414 = (v412.i64[0] << v364) | v360;
        if (v413.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v414;
          unint64_t v414 = (unint64_t)v412.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v414 = 0;
          }
        }
        unint64_t v415 = v413.i64[0] + v364;
        unint64_t v360 = v414 | (v412.i64[1] << v415);
        if ((v415 & 0x3F) + v413.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v415 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v412.i64[1] >> -(v415 & 0x3F);
          if ((v415 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v399 = 0;
        unint64_t v364 = v415 + v413.i64[1];
        uint64_t v398 = 1;
      }
      while ((v402 & 1) != 0);
      if ((v364 & 0x3F) != 0) {
        *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
      }
      unint64_t result = (v364 - v271 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    unsigned int v273 = ((unsigned __int32)a3->i32[0] >> 12) & 0xFFFFFC00 | ((unsigned __int16)a3->i32[0] >> 6);
    *(unsigned char *)(a1 + 2) = (unsigned __int32)a3->i32[0] >> 28;
    *(_WORD *)a1 = v273;
    *a2 = 2;
    return 3;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v11 = a6;
  if (a5 > 3)
  {
    uint64_t v14 = a5 & 0xFC;
    if (a5 == v14)
    {
      uint64_t v15 = 0;
      int64x2_t v16 = &v64;
      do
      {
        int64x2_t v17 = (unsigned __int32 *)v16;
        int16x8_t v18 = a3;
        uint64_t v19 = a5;
        do
        {
          uint32x4_t v20 = *v18++;
          uint32x4_t v21 = vshrq_n_u32(v20, 6uLL);
          *(v17 - 8) = v21.i32[0] & 0xFFFF03FF;
          *(v17 - 4) = v21.i32[1] & 0xFFFF03FF;
          *int64x2_t v17 = v21.i32[2] & 0xFFFF03FF;
          v17[4] = v21.i32[3] & 0xFFFF03FF;
          v17 += 16;
          v19 -= 4;
        }
        while (v19);
        ++v15;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int64x2_t v16 = (long long *)((char *)v16 + 4);
      }
      while (v15 != a6);
    }
    else
    {
      uint64_t v22 = 0;
      int16x8_t v23 = &v62;
      int16x8_t v24 = &v64;
      do
      {
        int16x8_t v25 = (unsigned __int32 *)v24;
        int16x8_t v26 = a3;
        uint64_t v27 = a5 & 0xFC;
        do
        {
          uint32x4_t v28 = *v26++;
          uint32x4_t v29 = vshrq_n_u32(v28, 6uLL);
          *(v25 - 8) = v29.i32[0] & 0xFFFF03FF;
          *(v25 - 4) = v29.i32[1] & 0xFFFF03FF;
          *int16x8_t v25 = v29.i32[2] & 0xFFFF03FF;
          v25[4] = v29.i32[3] & 0xFFFF03FF;
          v25 += 16;
          v27 -= 4;
        }
        while (v27);
        uint64_t v30 = v14;
        uint64_t v31 = a5 - v14;
        do
        {
          LODWORD(v23[v30]) = ((unsigned __int32)a3->i32[v30] >> 6) & 0x3FF03FF;
          ++v30;
          --v31;
        }
        while (v31);
        ++v22;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int16x8_t v24 = (long long *)((char *)v24 + 4);
        int16x8_t v23 = (long long *)((char *)v23 + 4);
      }
      while (v22 != a6);
    }
  }
  else
  {
    int16x8_t v12 = &a3->i32[2];
    int16x8_t v13 = (int *)&v63;
    do
    {
      *(v13 - 4) = (*(v12 - 2) >> 6) & 0x3FF03FF;
      if (a5 != 1)
      {
        *int16x8_t v13 = (*(v12 - 1) >> 6) & 0x3FF03FF;
        if (a5 != 2) {
          v13[4] = (*v12 >> 6) & 0x3FF03FF;
        }
      }
      int16x8_t v12 = (__int32 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  int v46 = (unsigned __int16)v62;
  int v47 = WORD1(v62);
  int v48 = (unsigned __int16)v63;
  int v49 = WORD1(v63);
  int v50 = WORD2(v62);
  int v51 = WORD3(v62);
  int v52 = WORD2(v63);
  int v53 = WORD3(v63);
  int v54 = (unsigned __int16)v64;
  int v55 = WORD1(v64);
  int v56 = (unsigned __int16)v65;
  int v57 = WORD1(v65);
  int v58 = WORD2(v64);
  int v59 = WORD3(v64);
  if (a5 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = a5;
  }
  if (a5 >= 4) {
    unsigned int v33 = a5 - 4;
  }
  else {
    unsigned int v33 = 0;
  }
  int v60 = WORD2(v65);
  int v61 = WORD3(v65);
  if (a6 >= 2) {
    unsigned int v34 = 2;
  }
  else {
    unsigned int v34 = a6;
  }
  if (a6 >= 2) {
    unsigned int v35 = a6 - 2;
  }
  else {
    unsigned int v35 = 0;
  }
  char v36 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v46, a7, v32, v34);
  int v46 = WORD4(v62);
  int v47 = WORD5(v62);
  int v48 = WORD4(v63);
  int v49 = WORD5(v63);
  int v50 = WORD6(v62);
  int v51 = HIWORD(v62);
  int v52 = WORD6(v63);
  int v53 = HIWORD(v63);
  int v54 = WORD4(v64);
  int v55 = WORD5(v64);
  int v56 = WORD4(v65);
  int v57 = WORD5(v65);
  int v58 = WORD6(v64);
  int v59 = HIWORD(v64);
  int v60 = WORD6(v65);
  int v61 = HIWORD(v65);
  if (a6 >= 4) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = v35;
  }
  int v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 12, (uint64_t)&v46, a7, v32, v37);
  int v46 = (unsigned __int16)v66;
  int v47 = WORD1(v66);
  int v48 = (unsigned __int16)v67;
  int v49 = WORD1(v67);
  int v50 = WORD2(v66);
  int v51 = WORD3(v66);
  int v52 = WORD2(v67);
  int v53 = WORD3(v67);
  int v54 = (unsigned __int16)v68;
  int v55 = WORD1(v68);
  int v56 = (unsigned __int16)v69;
  int v57 = WORD1(v69);
  int v58 = WORD2(v68);
  int v59 = WORD3(v68);
  if (a5 >= 8) {
    unsigned int v39 = 4;
  }
  else {
    unsigned int v39 = v33;
  }
  int v60 = WORD2(v69);
  int v61 = WORD3(v69);
  int v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v46, a7, v39, v34);
  int v46 = WORD4(v66);
  int v47 = WORD5(v66);
  int v48 = WORD4(v67);
  int v49 = WORD5(v67);
  int v50 = WORD6(v66);
  int v51 = HIWORD(v66);
  int v52 = WORD6(v67);
  int v53 = HIWORD(v67);
  int v54 = WORD4(v68);
  int v55 = WORD5(v68);
  int v56 = WORD4(v69);
  int v57 = WORD5(v69);
  int v58 = WORD6(v68);
  int v59 = HIWORD(v68);
  int v60 = WORD6(v69);
  int v61 = HIWORD(v69);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 36, (uint64_t)&v46, a7, v39, v37);
  if (v40) {
    char v42 = 4;
  }
  else {
    char v42 = 0;
  }
  if (v38) {
    char v43 = 2;
  }
  else {
    char v43 = 0;
  }
  if (result) {
    char v44 = -8;
  }
  else {
    char v44 = -16;
  }
  *a2 = v44 | v42 | v36 | v43;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v277 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v241 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v240 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v239 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v238 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v236 = v7;
  BOOL v237 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v235 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::compBits[v6];
    *(&v275 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(unsigned int *)((char *)&v252 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v251[v17 + 2] = v18;
    uint64_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint32x4_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint32x4_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint32x4_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint32x4_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint32x4_t v21 = (unsigned int *)((char *)&v255 + v17 * 4);
      *uint32x4_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint32x4_t v29 = &v273[v17 + 2];
    v273[v6 + 2] = v20;
    v274[v6] = v20;
    v273[v6] = 0;
    if (v235)
    {
      unsigned int v30 = v20;
      if (v237) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v273[v6] = 1;
        v274[v6] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        uint64_t v31 = &v273[v17 + 2];
      }
      else {
        uint64_t v31 = (unsigned int *)(&v257 + v6);
      }
      unsigned int v20 = *v31;
      *uint32x4_t v29 = *v31;
      if (v237)
      {
LABEL_58:
        if (v236) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v273[v6] = 2;
      v274[v6] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      unsigned int v32 = &v273[v17 + 2];
    }
    else {
      unsigned int v32 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v32;
    *uint32x4_t v29 = *v32;
    if (v236)
    {
LABEL_59:
      if (v238) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v273[v6] = 3;
      v274[v6] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      unsigned int v33 = &v273[v17 + 2];
    }
    else {
      unsigned int v33 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v33;
    *uint32x4_t v29 = *v33;
    if (v238)
    {
LABEL_60:
      if (v240) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v273[v6] = 4;
      v274[v6] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      unsigned int v34 = &v273[v17 + 2];
    }
    else {
      unsigned int v34 = (unsigned int *)(&v263 + v6);
    }
    unsigned int v20 = *v34;
    *uint32x4_t v29 = *v34;
    if (v240)
    {
LABEL_61:
      if (v239) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v273[v6] = 5;
      v274[v6] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      unsigned int v35 = &v273[v17 + 2];
    }
    else {
      unsigned int v35 = (unsigned int *)(&v265 + v6);
    }
    unsigned int v20 = *v35;
    *uint32x4_t v29 = *v35;
    if (v239)
    {
LABEL_62:
      if (v241) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v273[v6] = 7;
        v274[v6] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        unsigned int v37 = &v273[v17 + 2];
      }
      else {
        unsigned int v37 = (unsigned int *)(&v269 + v6);
      }
      unsigned int v20 = *v37;
      *uint32x4_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v273[v6] = 6;
      v274[v6] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      char v36 = &v273[v17 + 2];
    }
    else {
      char v36 = (unsigned int *)(&v267 + v6);
    }
    unsigned int v20 = *v36;
    *uint32x4_t v29 = *v36;
    if (!v241) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v271 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42]
          - v43
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v14
            + 2);
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v72 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v72) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v271 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v271 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  uint64_t v51 = v252;
  uint64_t v52 = v253;
  unsigned int v54 = v271;
  unsigned int v53 = v272;
  BOOL v56 = v272 >= v271;
  BOOL v57 = v272 < v271;
  int v58 = kDQuadParamTable[160 * v253 + 6 + 10 * v272];
  int v249 = kDQuadParamTable[160 * v252 + 6 + 10 * v271];
  int v55 = v249;
  int v250 = v58;
  v251[0] = v249;
  v251[1] = v58;
  if (*(&v271 + v56) == *(&v271 + v57))
  {
    int v59 = v249;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v251 | (4 * v57));
    int v59 = v249;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v249 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v249 | (4 * v56)) += v60;
      int v59 = v249;
    }
  }
  if (a4) {
    BOOL v61 = a5 == 0;
  }
  else {
    BOOL v61 = 1;
  }
  int v62 = v61;
  int v234 = v62;
  long long v63 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v64 = *((void *)v63 + 1);
  int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v51
        + 2);
  int v66 = v63[4];
  LODWORD(v63) = v63[5];
  unsigned int v67 = v66 + v65;
  unsigned int v247 = v67;
  unsigned int v68 = v63 + v65;
  unsigned int v245 = v68;
  int v69 = v59 - v55;
  if (v69 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v69)
    {
      unsigned int v245 = --v68;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v70 = -1;
LABEL_167:
        unsigned int v247 = v70 + v67;
      }
    }
  }
  else if (v69)
  {
    v68 += v69;
    unsigned int v245 = v68;
    int v70 = v69;
    goto LABEL_167;
  }
  BOOL v72 = v51 == 5 && v54 == 1 && v69 < 2;
  int v73 = v72;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v74 = 31744;
    }
    else {
      int v74 = 0;
    }
    if (v51 == 4) {
      int v75 = 2139095040;
    }
    else {
      int v75 = v74;
    }
    int v76 = 1 << (v275 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_188;
      }
LABEL_336:
      if ((v75 & ~v257) == 0 || v257 == v76) {
        int v73 = 1;
      }
      if (!v237) {
        goto LABEL_343;
      }
LABEL_189:
      if (v236) {
        goto LABEL_190;
      }
LABEL_350:
      if ((v75 & ~v261) == 0 || v261 == v76) {
        int v73 = 1;
      }
      if (!v238) {
        goto LABEL_357;
      }
LABEL_191:
      if (v240) {
        goto LABEL_192;
      }
LABEL_364:
      if ((v75 & ~v265) == 0 || v265 == v76) {
        int v73 = 1;
      }
      if (!v239) {
        goto LABEL_371;
      }
LABEL_193:
      if (!v241) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v75 & ~v255) == 0 || v255 == v76) {
        int v73 = 1;
      }
      if (!v235) {
        goto LABEL_336;
      }
LABEL_188:
      if (v237) {
        goto LABEL_189;
      }
LABEL_343:
      if ((v75 & ~v259) == 0 || v259 == v76) {
        int v73 = 1;
      }
      if (!v236) {
        goto LABEL_350;
      }
LABEL_190:
      if (v238) {
        goto LABEL_191;
      }
LABEL_357:
      if ((v75 & ~v263) == 0 || v263 == v76) {
        int v73 = 1;
      }
      if (!v240) {
        goto LABEL_364;
      }
LABEL_192:
      if (v239) {
        goto LABEL_193;
      }
LABEL_371:
      if ((v75 & ~v267) == 0 || v267 == v76) {
        int v73 = 1;
      }
      if (!v241)
      {
LABEL_194:
        if ((v75 & ~v269) == 0 || v269 == v76) {
          int v73 = 1;
        }
      }
    }
  }
  BOOL v72 = v64 >> v68 > 0x10;
  int v78 = v234;
  if (v72) {
    int v78 = 1;
  }
  int v79 = v78 | v73;
  int8x16_t v80 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v81 = *((void *)v80 + 1);
  int v82 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v52
        + 2);
  int v83 = v80[4];
  LODWORD(v80) = v80[5];
  unsigned int v84 = v83 + v82;
  unsigned int v248 = v84;
  unsigned int v85 = v80 + v82;
  unsigned int v246 = v85;
  int v86 = v250 - v58;
  if (v250 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v250)
    {
      unsigned int v246 = --v85;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v87 = -1;
LABEL_206:
        unsigned int v248 = v87 + v84;
      }
    }
  }
  else if (v250 != v58)
  {
    v85 += v86;
    unsigned int v246 = v85;
    int v87 = v250 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v86 < 2) {
    int v79 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v88 = 31744;
    }
    else {
      int v88 = 0;
    }
    if (v52 == 4) {
      int v88 = 2139095040;
    }
    int v89 = 1 << (v276 - 1);
    if (v234)
    {
      if (v235) {
        goto LABEL_221;
      }
LABEL_386:
      if ((v88 & ~v258) == 0 || v258 == v89) {
        int v79 = 1;
      }
      if (!v237) {
        goto LABEL_393;
      }
LABEL_222:
      if (v236) {
        goto LABEL_223;
      }
LABEL_400:
      if ((v88 & ~v262) == 0 || v262 == v89) {
        int v79 = 1;
      }
      if (!v238) {
        goto LABEL_407;
      }
LABEL_224:
      if (v240) {
        goto LABEL_225;
      }
LABEL_414:
      if ((v88 & ~v266) == 0 || v266 == v89) {
        int v79 = 1;
      }
      if (!v239) {
        goto LABEL_421;
      }
LABEL_226:
      if (!v241) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v88 & ~v256) == 0 || v256 == v89) {
        int v79 = 1;
      }
      if (!v235) {
        goto LABEL_386;
      }
LABEL_221:
      if (v237) {
        goto LABEL_222;
      }
LABEL_393:
      if ((v88 & ~v260) == 0 || v260 == v89) {
        int v79 = 1;
      }
      if (!v236) {
        goto LABEL_400;
      }
LABEL_223:
      if (v238) {
        goto LABEL_224;
      }
LABEL_407:
      if ((v88 & ~v264) == 0 || v264 == v89) {
        int v79 = 1;
      }
      if (!v240) {
        goto LABEL_414;
      }
LABEL_225:
      if (v239) {
        goto LABEL_226;
      }
LABEL_421:
      if ((v88 & ~v268) == 0 || v268 == v89) {
        int v79 = 1;
      }
      if (!v241)
      {
LABEL_227:
        if ((v88 & ~v270) == 0 || v270 == v89) {
          int v79 = 1;
        }
      }
    }
  }
  char v91 = 0;
  uint64_t v92 = 0;
  BOOL v72 = v81 >> v85 > 0x10;
  int v93 = v234;
  if (v72) {
    int v93 = 1;
  }
  int v231 = v93;
  int v232 = v79;
  uint64_t v244 = 0;
  uint64_t v243 = 0;
  memset(v242, 0, sizeof(v242));
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v275 + v92);
    if (v96 >= *(&v247 + v92)) {
      unsigned int v97 = *(&v247 + v92);
    }
    else {
      unsigned int v97 = *(&v275 + v92);
    }
    *(&v247 + v92) = v97;
    int16x8_t v98 = &kDQuadParamTable[160 * *(&v252 + v92) + 10 * *(&v271 + v92)];
    if (v98[5]) {
      unsigned int v99 = v96;
    }
    else {
      unsigned int v99 = 0;
    }
    if (v99 >= *(&v245 + v92)) {
      unsigned int v99 = *(&v245 + v92);
    }
    int v100 = v274[v92] & (-1 << (v96 - v97));
    int16x8_t v101 = &v255 + v92;
    int v102 = *v101 - v100;
    uint64_t v103 = 32 * v92;
    int16x8_t v104 = &v254[32 * v92];
    if (v234) {
      int v102 = 0;
    }
    int v105 = v101[2] - v100;
    if (v235) {
      int v105 = 0;
    }
    *int16x8_t v104 = v102;
    v104[1] = v105;
    int v106 = v101[4] - v100;
    if (v237) {
      int v106 = 0;
    }
    int v107 = v101[6] - v100;
    if (v236) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v101[8] - v100;
    if (v238) {
      int v108 = 0;
    }
    int v109 = v101[10] - v100;
    if (v240) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    int v110 = v101[12] - v100;
    if (v239) {
      int v110 = 0;
    }
    int v111 = v101[14] - v100;
    if (v241) {
      int v111 = 0;
    }
    v104[6] = v110;
    v104[7] = v111;
    char v112 = v91;
    *(&v245 + v92) = v99;
    unint64_t v113 = *((void *)v98 + 1);
    *((_DWORD *)&v244 + v92) = v100;
    unint64_t v114 = v113 >> v99;
    int v115 = ~(-1 << v96);
    if (v114 <= 1) {
      unint64_t v116 = 1;
    }
    else {
      unint64_t v116 = v114;
    }
    uint64_t v117 = 2 * v273[v92];
    do
    {
      if (v117 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)&v254[v103] / v116;
        }
        else {
          LODWORD(v118) = 0;
        }
        int16x8_t v119 = (int *)v242 + 7 * v92 + v95;
        *int16x8_t v119 = v118;
        if (v114 >= 2)
        {
          unint64_t v120 = *(unsigned int *)&v254[v103];
          if (v120)
          {
            if (v120 / v116 * v116 == v120 && ((v120 / v116) & 1) != 0)
            {
              if (v100 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v101[v94], v123 = v251[v92 + 2], v122 != v123)
                  && ((a3 | 2) != 3 || v116 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  *int16x8_t v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v101[v94] == v115) {
          *int16x8_t v119 = ~(-1 << v99);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94) >= a4)
        {
          *int16x8_t v119 = 0;
        }
        ++v95;
      }
      v103 += 4;
      v94 += 2;
    }
    while (v94 != 16);
    char v91 = 1;
    uint64_t v92 = 1;
  }
  while ((v112 & 1) == 0);
  int16x8_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)a1 = 0;
  if ((v231 | v232) == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v275;
    unsigned int v130 = v276;
    uint64_t v131 = v275 - 4;
    uint64_t v132 = v276 - 4;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= a5 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v255 + 2 * v127) >> 4;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v129 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x60)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 4;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_315:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v255 + 2 * v127 + 1) >> 4;
        if (v132 <= 0x100)
        {
LABEL_319:
          if (v130 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x60)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 4;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return v231 | v232;
      }
    }
  }
  unsigned int v147 = v271;
  char v148 = LOBYTE(v274[0]) | v271;
  if (v274[0] | v271)
  {
    char v148 = v271 - 2;
    if (v271 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v271 + 1;
      goto LABEL_430;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_430:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v272;
  if (v274[1] | v272)
  {
    char v169 = v272 - 2;
    if (v272 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v272 + 1;
      goto LABEL_436;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_436:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 94) >= 0xFFFFFFFFFFFFFF9FLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_453;
    }
LABEL_446:
    unsigned int v177 = v275;
    if (!v147) {
      goto LABEL_461;
    }
    goto LABEL_465;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x60) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_446;
  }
LABEL_453:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x60) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v275;
  if (!v147)
  {
LABEL_461:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v276;
      if (!v168) {
        goto LABEL_526;
      }
LABEL_473:
      unsigned int v192 = v248;
      if (v248 <= 0x100 && v248 && v167 - v126 + (v175 << 6) + (unint64_t)v248 <= 0x60)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v244) >> (v185 - v248));
        unint64_t v195 = v248;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_481;
    }
  }
LABEL_465:
  unsigned int v186 = v247;
  if (v247 <= 0x100 && v247 && v167 - v126 + (v175 << 6) + (unint64_t)v247 <= 0x60)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v244 >> (v177 - v247);
    unint64_t v189 = v247;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v276;
  if (v168) {
    goto LABEL_473;
  }
LABEL_526:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_473;
  }
LABEL_481:
  unint64_t v198 = v245;
  if (v245)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x60)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v273[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v246;
  if (v246)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x60)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v273[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 96 - v176;
  unsigned int v211 = (96 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x60)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x60)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v242 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x60)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v242[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_519:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x60)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_519;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return v231 | v232;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = ((a3 & 0xFFFFFFFD) == 1) << 9;
  uint64_t result = v6;
  do
  {
    if ((unint64_t)(result - v6 + (v4 << 6) - 91) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      char v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 6;
      do
      {
        unint64_t v18 = 64 - result;
        if (64 - result >= v17) {
          unint64_t v18 = v17;
        }
        v15 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v18)) << v16;
        v16 += v18;
        unint64_t v19 = v18 + result;
        v4 += v19 >> 6;
        uint64_t result = v19 & 0x3F;
        v17 -= v18;
      }
      while (v17);
    }
    else
    {
      char v15 = 0;
    }
    int v20 = 16 * (v15 & 0x3F);
    if (a3 != 4)
    {
      BOOL v25 = v20 == 512 && v7 == 1;
      if (!v25 && v20)
      {
        if (v20 == 1008) {
          int v20 = 1023;
        }
        else {
          v20 |= 8 - (v15 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 8 * v3) = v20 ^ v8;
    if ((unint64_t)(result - v6 + (v4 << 6) - 91) < 0xFFFFFFFFFFFFFF9FLL)
    {
      char v10 = 0;
    }
    else
    {
      char v10 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 6;
      do
      {
        unint64_t v23 = 64 - result;
        if (64 - result >= v22) {
          unint64_t v23 = v22;
        }
        v10 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v23)) << v21;
        v21 += v23;
        unint64_t v24 = v23 + result;
        v4 += v24 >> 6;
        uint64_t result = v24 & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    int v11 = 16 * (v10 & 0x3F);
    int v12 = (8 - (v10 & 1)) | v11;
    if (v11 == 1008) {
      int v12 = 1023;
    }
    if (v11 == 512 && v7 == 1 || v11 == 0) {
      int v12 = v11;
    }
    if (a3 == 4) {
      int v12 = v11;
    }
    *(_DWORD *)(a2 + 8 * v3++ + 4) = v12 ^ v8;
  }
  while (v3 != 8);
  return result;
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v194 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v189[0] = 10;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v179 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v179 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)2>::getDquadModeData(0, v12, v14, &v190);
  v193[0] = DquadModeData;
  v192[0] = 1;
  v189[1] = 10;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)2>::getDquadModeData(1, v11, v20, &v191);
  v193[1] = v24;
  v192[1] = 1;
  BOOL v26 = v24 < DquadModeData;
  unsigned int v27 = v24;
  int v28 = dword_242EA9408[10 * v24 + 6];
  int v186 = dword_242EA9408[10 * DquadModeData + 6];
  int v25 = v186;
  int v187 = v28;
  v188[0] = v186;
  v188[1] = v28;
  if (v193[v24 >= DquadModeData] == v193[v26])
  {
    int v29 = v186;
  }
  else
  {
    int v30 = *(_DWORD *)((unint64_t)v188 | (4 * v26));
    int v29 = v186;
    if (v30 >= 1)
    {
      *(_DWORD *)((unint64_t)&v186 | (4 * v26)) = 0;
      *(_DWORD *)((unint64_t)&v186 | (4 * (v24 >= DquadModeData))) += v30;
      int v29 = v186;
    }
  }
  uint64_t v31 = kDQuadParamTable;
  unsigned int v32 = &kDQuadParamTable[10 * DquadModeData];
  unsigned int v33 = v32[164] + 1;
  unsigned int v34 = v32[165];
  unsigned int v35 = v34 + 1;
  int v36 = v29 - v25;
  if (v36 >= 0)
  {
    if (!v36) {
      goto LABEL_36;
    }
    v35 += v36;
    goto LABEL_32;
  }
  if (kDQuadParamTable[10 * DquadModeData + 167] < -v36)
  {
    if (!kDQuadParamTable[10 * DquadModeData + 168])
    {
      int v36 = -1;
      unsigned int v35 = v34;
LABEL_32:
      v33 += v36;
      goto LABEL_36;
    }
    unsigned int v35 = v34;
  }
LABEL_36:
  if (v33 >= 0xA) {
    uint64_t v37 = 10;
  }
  else {
    uint64_t v37 = v33;
  }
  v185[0] = v37;
  if (v34) {
    LODWORD(v38) = 10;
  }
  else {
    LODWORD(v38) = 0;
  }
  if (v38 >= v35) {
    unint64_t v38 = v35;
  }
  else {
    unint64_t v38 = v38;
  }
  v184[0] = v38;
  unsigned int v39 = &kDQuadParamTable[10 * v24];
  LODWORD(v40) = v39[164] + 1;
  int v41 = v39[165];
  unsigned int v42 = v41 + 1;
  int v43 = v187 - v28;
  if (v43 >= 0)
  {
    if (!v43) {
      goto LABEL_52;
    }
    v42 += v43;
    goto LABEL_48;
  }
  if (kDQuadParamTable[10 * v24 + 167] < -v43)
  {
    if (!kDQuadParamTable[10 * v24 + 168])
    {
      int v43 = -1;
      unsigned int v42 = v39[165];
LABEL_48:
      LODWORD(v40) = v43 + v40;
      goto LABEL_52;
    }
    unsigned int v42 = v39[165];
  }
LABEL_52:
  int v44 = v179 + v19;
  if (v40 >= 0xA) {
    uint64_t v40 = 10;
  }
  else {
    uint64_t v40 = v40;
  }
  v185[1] = v40;
  if (v41) {
    LODWORD(v45) = 10;
  }
  else {
    LODWORD(v45) = 0;
  }
  if (v45 >= v42) {
    unint64_t v45 = v42;
  }
  else {
    unint64_t v45 = v45;
  }
  v184[1] = v45;
  uint64_t v183 = 0;
  if (DquadModeData)
  {
    int v46 = 0;
    if (v37 && (unint64_t)(v10 - v6 + (v13 << 6) + v37) <= 0x60)
    {
      int v46 = 0;
      uint64_t v47 = 0;
      unint64_t v48 = v37;
      do
      {
        unint64_t v49 = 64 - v10;
        if (64 - v10 >= v48) {
          unint64_t v49 = v48;
        }
        v46 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v49)) << v47;
        v47 += v49;
        v13 += (v49 + v10) >> 6;
        uint64_t v10 = (v49 + v10) & 0x3F;
        v48 -= v49;
      }
      while (v48);
    }
    LODWORD(v183) = v46 << (10 - v37);
    v44 += v37;
    if (v27)
    {
LABEL_69:
      int v50 = 0;
      if (v40 && (unint64_t)(v10 - v6 + (v13 << 6) + v40) <= 0x60)
      {
        int v50 = 0;
        uint64_t v51 = 0;
        unint64_t v52 = v40;
        do
        {
          unint64_t v53 = 64 - v10;
          if (64 - v10 >= v52) {
            unint64_t v53 = v52;
          }
          v50 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v53)) << v51;
          v51 += v53;
          v13 += (v53 + v10) >> 6;
          uint64_t v10 = (v53 + v10) & 0x3F;
          v52 -= v53;
        }
        while (v52);
      }
      HIDWORD(v183) = v50 << (10 - v40);
      v44 += v40;
      uint64_t v182 = 0;
      if (!v38) {
        goto LABEL_86;
      }
      goto LABEL_79;
    }
  }
  else
  {
    LODWORD(v183) = v190;
    if (v24) {
      goto LABEL_69;
    }
  }
  HIDWORD(v183) = v191;
  uint64_t v182 = 0;
  if (v38)
  {
LABEL_79:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v54 = 0;
      uint64_t v55 = 0;
      unint64_t v56 = 3;
      do
      {
        unint64_t v57 = 64 - v10;
        if (64 - v10 >= v56) {
          unint64_t v57 = v56;
        }
        v54 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v57)) << v55;
        v55 += v57;
        v13 += (v57 + v10) >> 6;
        uint64_t v10 = (v57 + v10) & 0x3F;
        v56 -= v57;
      }
      while (v56);
    }
    else
    {
      int v54 = 0;
    }
    LODWORD(v182) = v54;
    v44 += 3;
  }
LABEL_86:
  if (v45)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v58 = 0;
      uint64_t v59 = 0;
      unint64_t v60 = 3;
      do
      {
        unint64_t v61 = 64 - v10;
        if (64 - v10 >= v60) {
          unint64_t v61 = v60;
        }
        v58 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v61)) << v59;
        v59 += v61;
        v13 += (v61 + v10) >> 6;
        uint64_t v10 = (v61 + v10) & 0x3F;
        v60 -= v61;
      }
      while (v60);
    }
    else
    {
      int v58 = 0;
    }
    HIDWORD(v182) = v58;
    v44 += 3;
  }
  uint64_t v62 = 0;
  unsigned int v63 = a3 & 0xFFFFFFFD;
  unsigned int v64 = 96 - v44;
  unsigned int v65 = (96 - v44) / 7u;
  unint64_t v66 = (v10 | (v13 << 6)) + v64 % 7;
  uint64_t v181 = 0;
  memset(v180, 0, sizeof(v180));
  do
  {
    unint64_t v68 = v66 >> 6;
    int64_t result = v66 & 0x3F;
    if (v38)
    {
      if (result - v6 + (v66 & 0xFFFFFFFFFFFFFFC0) + v38 <= 0x60)
      {
        int v70 = 0;
        uint64_t v71 = 0;
        unint64_t v72 = v38;
        do
        {
          unint64_t v73 = 64 - result;
          if (64 - result >= v72) {
            unint64_t v73 = v72;
          }
          v70 |= (unint64_t)((*(void *)(v5 + 8 * v68) >> result) & ~(-1 << v73)) << v71;
          v71 += v73;
          unint64_t v74 = v73 + result;
          v68 += v74 >> 6;
          int64_t result = v74 & 0x3F;
          v72 -= v73;
        }
        while (v72);
      }
      else
      {
        int v70 = 0;
      }
      *((_DWORD *)v180 + v62) = v70;
    }
    if (v45)
    {
      if (result - v6 + (v68 << 6) + v45 <= 0x60)
      {
        int v75 = 0;
        uint64_t v76 = 0;
        unint64_t v77 = v45;
        do
        {
          unint64_t v78 = 64 - result;
          if (64 - result >= v77) {
            unint64_t v78 = v77;
          }
          v75 |= (unint64_t)((*(void *)(v5 + 8 * v68) >> result) & ~(-1 << v78)) << v76;
          v76 += v78;
          unint64_t v79 = v78 + result;
          v68 += v79 >> 6;
          int64_t result = v79 & 0x3F;
          v77 -= v78;
        }
        while (v77);
      }
      else
      {
        int v75 = 0;
      }
      *((_DWORD *)&v180[1] + v62 + 3) = v75;
      int v67 = v45 + v38;
    }
    else
    {
      int v67 = v38;
    }
    unint64_t v66 = (result | (v68 << 6)) + v65 - v67;
    ++v62;
  }
  while (v62 != 7);
  char v80 = 0;
  uint64_t v81 = 0;
  do
  {
    char v86 = v80;
    unint64_t v87 = *(void *)&v31[160 * v192[v81] + 2 + 10 * v193[v81]];
    int v88 = v184[v81];
    if (v87 >> v88 <= 1) {
      unint64_t v89 = 1;
    }
    else {
      unint64_t v89 = v87 >> v88;
    }
    int v90 = v189[v81];
    unint64_t v91 = v89 >> 1;
    if (v89 >> 1 >= (unint64_t)(1 << (v90 - v185[v81])) >> 1) {
      unint64_t v92 = (unint64_t)(1 << (v90 - v185[v81])) >> 1;
    }
    else {
      unint64_t v92 = v89 >> 1;
    }
    unint64_t v93 = (1 << (v90 - 1));
    unint64_t v94 = v184[v81 - 2];
    unint64_t v95 = v93 - v94;
    unint64_t v96 = 1 << v90;
    int v97 = (1 << v90) - 1;
    if (v94) {
      unint64_t v98 = v92;
    }
    else {
      unint64_t v98 = 0;
    }
    BOOL v99 = v94 == v93;
    BOOL v100 = v90 == 16;
    if (v90 == 16) {
      unint64_t v101 = 31744;
    }
    else {
      unint64_t v101 = 2139095040;
    }
    if (v90 == 16) {
      unint64_t v102 = 64512;
    }
    else {
      unint64_t v102 = 4286578688;
    }
    unint64_t v103 = 2143289344;
    if (v100) {
      unint64_t v103 = 32256;
    }
    unint64_t v104 = 4290772992;
    if (v100) {
      unint64_t v104 = 65024;
    }
    unint64_t v105 = (v102 - 1);
    if (v88)
    {
      int64_t result = (int64_t)v31;
      unint64_t v106 = v87 + v94;
      uint64_t v107 = ~(-1 << v88);
      int v108 = *((_DWORD *)&v182 + v81);
      unint64_t v109 = v95 / v89;
      if (!v108)
      {
        uint64_t v117 = 0;
        unint64_t v112 = v98;
        BOOL v111 = v94 == v93;
        goto LABEL_179;
      }
      uint64_t v110 = *((unsigned int *)v180 + 7 * v81);
      BOOL v111 = v109 == v110;
      if (v94 | v110)
      {
        if (v106 >= v96 && v110 == v107)
        {
          uint64_t v117 = 1;
          unint64_t v112 = v96 - 1;
          goto LABEL_179;
        }
        unint64_t v112 = v91 + v89 * v110;
      }
      else
      {
        unint64_t v112 = 0;
      }
      uint64_t v117 = 1;
LABEL_179:
      unint64_t v118 = v112 + v94;
      unint64_t v119 = v118;
      if (a3 == 4)
      {
        BOOL v120 = v118 < v101 || v118 >= v103;
        unint64_t v119 = (v101 - 1);
        if (v120)
        {
          BOOL v121 = v118 < v103 || v118 >= v93;
          unint64_t v119 = v93;
          if (v121)
          {
            if (v118 < v104 && v118 >= v102) {
              unint64_t v119 = (v102 - 1);
            }
            else {
              unint64_t v119 = v118;
            }
          }
        }
      }
      if (v119 >= v96) {
        int v123 = v97;
      }
      else {
        int v123 = v119;
      }
      if (v111) {
        int v124 = 0;
      }
      else {
        int v124 = v123 ^ v93;
      }
      if (v63 != 1) {
        int v124 = v123;
      }
      *(_DWORD *)(a2 + 4 * v81) = v124;
      if (v108 == 1)
      {
        unint64_t v125 = v98;
        BOOL v126 = v94 == v93;
      }
      else
      {
        uint64_t v127 = *((unsigned int *)v180 + 7 * v81 + v117);
        BOOL v126 = v109 == v127;
        if (v94 | v127)
        {
          if (v106 < v96 || (unint64_t v125 = v96 - 1, v127 != v107)) {
            unint64_t v125 = v91 + v89 * v127;
          }
        }
        else
        {
          unint64_t v125 = 0;
        }
        ++v117;
      }
      unint64_t v128 = v125 + v94;
      unint64_t v129 = v128;
      if (a3 == 4)
      {
        BOOL v130 = v128 < v101 || v128 >= v103;
        unint64_t v129 = (v101 - 1);
        if (v130)
        {
          BOOL v131 = v128 < v103 || v128 >= v93;
          unint64_t v129 = v93;
          if (v131)
          {
            if (v128 < v104 && v128 >= v102) {
              unint64_t v129 = (v102 - 1);
            }
            else {
              unint64_t v129 = v128;
            }
          }
        }
      }
      if (v129 >= v96) {
        int v133 = v97;
      }
      else {
        int v133 = v129;
      }
      if (v126) {
        int v134 = 0;
      }
      else {
        int v134 = v133 ^ v93;
      }
      if (v63 != 1) {
        int v134 = v133;
      }
      *(_DWORD *)(a2 + 4 * v81 + 8) = v134;
      if (v108 == 2)
      {
        unint64_t v135 = v98;
        BOOL v136 = v94 == v93;
      }
      else
      {
        uint64_t v137 = *((unsigned int *)v180 + 7 * v81 + v117);
        BOOL v136 = v109 == v137;
        if (v94 | v137)
        {
          if (v106 < v96 || (unint64_t v135 = v96 - 1, v137 != v107)) {
            unint64_t v135 = v91 + v89 * v137;
          }
        }
        else
        {
          unint64_t v135 = 0;
        }
        ++v117;
      }
      unint64_t v138 = v135 + v94;
      unint64_t v139 = v138;
      if (a3 == 4)
      {
        if (v138 < v101 || (unint64_t v139 = (v101 - 1), v138 >= v103))
        {
          if (v138 < v103 || (unint64_t v139 = v93, v138 >= v93))
          {
            if (v138 < v104 && v138 >= v102) {
              unint64_t v139 = (v102 - 1);
            }
            else {
              unint64_t v139 = v138;
            }
          }
        }
      }
      if (v139 >= v96) {
        int v141 = v97;
      }
      else {
        int v141 = v139;
      }
      if (v136) {
        int v142 = 0;
      }
      else {
        int v142 = v141 ^ v93;
      }
      if (v63 != 1) {
        int v142 = v141;
      }
      *(_DWORD *)(a2 + 4 * v81 + 16) = v142;
      if (v108 == 3)
      {
        unint64_t v143 = v98;
        BOOL v144 = v94 == v93;
      }
      else
      {
        uint64_t v145 = *((unsigned int *)v180 + 7 * v81 + v117);
        BOOL v144 = v109 == v145;
        if (v94 | v145)
        {
          if (v106 < v96 || (unint64_t v143 = v96 - 1, v145 != v107)) {
            unint64_t v143 = v91 + v89 * v145;
          }
        }
        else
        {
          unint64_t v143 = 0;
        }
        ++v117;
      }
      unint64_t v146 = v143 + v94;
      unint64_t v147 = v146;
      if (a3 == 4)
      {
        if (v146 < v101 || (unint64_t v147 = (v101 - 1), v146 >= v103))
        {
          if (v146 < v103 || (unint64_t v147 = v93, v146 >= v93))
          {
            if (v146 < v104 && v146 >= v102) {
              unint64_t v147 = (v102 - 1);
            }
            else {
              unint64_t v147 = v146;
            }
          }
        }
      }
      if (v147 >= v96) {
        int v149 = v97;
      }
      else {
        int v149 = v147;
      }
      if (v144) {
        int v150 = 0;
      }
      else {
        int v150 = v149 ^ v93;
      }
      if (v63 != 1) {
        int v150 = v149;
      }
      *(_DWORD *)(a2 + 4 * v81 + 24) = v150;
      if (v108 == 4)
      {
        unint64_t v151 = v98;
        BOOL v152 = v94 == v93;
      }
      else
      {
        uint64_t v153 = *((unsigned int *)v180 + 7 * v81 + v117);
        BOOL v152 = v109 == v153;
        if (v94 | v153)
        {
          if (v106 < v96 || (unint64_t v151 = v96 - 1, v153 != v107)) {
            unint64_t v151 = v91 + v89 * v153;
          }
        }
        else
        {
          unint64_t v151 = 0;
        }
        ++v117;
      }
      unint64_t v154 = v151 + v94;
      unint64_t v155 = v154;
      if (a3 == 4)
      {
        if (v154 < v101 || (unint64_t v155 = (v101 - 1), v154 >= v103))
        {
          if (v154 < v103 || (unint64_t v155 = v93, v154 >= v93))
          {
            if (v154 < v104 && v154 >= v102) {
              unint64_t v155 = (v102 - 1);
            }
            else {
              unint64_t v155 = v154;
            }
          }
        }
      }
      if (v155 >= v96) {
        int v157 = v97;
      }
      else {
        int v157 = v155;
      }
      if (v152) {
        int v158 = 0;
      }
      else {
        int v158 = v157 ^ v93;
      }
      if (v63 != 1) {
        int v158 = v157;
      }
      *(_DWORD *)(a2 + 4 * v81 + 32) = v158;
      if (v108 == 5)
      {
        unint64_t v159 = v98;
        BOOL v160 = v94 == v93;
      }
      else
      {
        uint64_t v161 = *((unsigned int *)v180 + 7 * v81 + v117);
        BOOL v160 = v109 == v161;
        if (v94 | v161)
        {
          if (v106 < v96 || (unint64_t v159 = v96 - 1, v161 != v107)) {
            unint64_t v159 = v91 + v89 * v161;
          }
        }
        else
        {
          unint64_t v159 = 0;
        }
        ++v117;
      }
      unint64_t v162 = v159 + v94;
      unint64_t v163 = v162;
      if (a3 == 4)
      {
        if (v162 < v101 || (unint64_t v163 = (v101 - 1), v162 >= v103))
        {
          if (v162 < v103 || (unint64_t v163 = v93, v162 >= v93))
          {
            if (v162 < v104 && v162 >= v102) {
              unint64_t v163 = (v102 - 1);
            }
            else {
              unint64_t v163 = v162;
            }
          }
        }
      }
      if (v163 >= v96) {
        int v165 = v97;
      }
      else {
        int v165 = v163;
      }
      if (v160) {
        int v166 = 0;
      }
      else {
        int v166 = v165 ^ v93;
      }
      if (v63 != 1) {
        int v166 = v165;
      }
      *(_DWORD *)(a2 + 4 * v81 + 40) = v166;
      if (v108 == 6)
      {
        unint64_t v167 = v98;
        BOOL v168 = v94 == v93;
      }
      else
      {
        uint64_t v169 = *((unsigned int *)v180 + 7 * v81 + v117);
        BOOL v168 = v109 == v169;
        if (v94 | v169)
        {
          if (v106 < v96 || (unint64_t v167 = v96 - 1, v169 != v107)) {
            unint64_t v167 = v91 + v89 * v169;
          }
        }
        else
        {
          unint64_t v167 = 0;
        }
        ++v117;
      }
      unint64_t v170 = v167 + v94;
      unint64_t v171 = v170;
      if (a3 == 4)
      {
        if (v170 < v101 || (unint64_t v171 = (v101 - 1), v170 >= v103))
        {
          if (v170 < v103 || (unint64_t v171 = v93, v170 >= v93))
          {
            if (v170 < v104 && v170 >= v102) {
              unint64_t v171 = (v102 - 1);
            }
            else {
              unint64_t v171 = v170;
            }
          }
        }
      }
      if (v171 >= v96) {
        int v173 = v97;
      }
      else {
        int v173 = v171;
      }
      if (v168) {
        int v174 = 0;
      }
      else {
        int v174 = v173 ^ v93;
      }
      if (v63 != 1) {
        int v174 = v173;
      }
      *(_DWORD *)(a2 + 4 * v81 + 48) = v174;
      if (v108 != 7)
      {
        uint64_t v175 = *((unsigned int *)v180 + 7 * v81 + v117);
        BOOL v99 = v109 == v175;
        if (v94 | v175)
        {
          if (v106 >= v96 && v175 == v107) {
            unint64_t v98 = v96 - 1;
          }
          else {
            unint64_t v98 = v91 + v89 * v175;
          }
        }
        else
        {
          unint64_t v98 = 0;
        }
      }
      unint64_t v176 = v98 + v94;
      unint64_t v83 = v176;
      if (a3 == 4)
      {
        if (v176 < v101 || (unint64_t v83 = (v101 - 1), v176 >= v103))
        {
          if (v176 < v103 || (unint64_t v83 = v93, v176 >= v93))
          {
            if (v176 < v104 && v176 >= v102) {
              unint64_t v83 = (v102 - 1);
            }
            else {
              unint64_t v83 = v176;
            }
          }
        }
      }
      if (v83 >= v96) {
        int v84 = v97;
      }
      else {
        int v84 = v83;
      }
      int v85 = v84 ^ v93;
      if (v99) {
        int v85 = 0;
      }
      if (v63 == 1) {
        int v84 = v85;
      }
      uint64_t v31 = (_DWORD *)result;
      goto LABEL_128;
    }
    BOOL v114 = v103 <= v94 && v94 < v93;
    BOOL v116 = v94 >= v102 && v104 > v94;
    if (a3 == 4)
    {
      if (v94 < v101 || v103 <= v94)
      {
        if (v114)
        {
          if (v96 <= v93) {
            int v84 = v97;
          }
          else {
            int v84 = v93;
          }
        }
        else
        {
          if (v116) {
            unint64_t v94 = v105;
          }
          if (v94 >= v96) {
            int v84 = v97;
          }
          else {
            int v84 = v94;
          }
        }
      }
      else if (v96 <= (v101 - 1))
      {
        int v84 = v97;
      }
      else
      {
        int v84 = v101 - 1;
      }
    }
    else if (v96 <= v94)
    {
      int v84 = v97;
    }
    else
    {
      int v84 = v184[v81 - 2];
    }
    int v177 = v84 ^ v93;
    if (v89 > v95) {
      int v177 = 0;
    }
    if (v63 == 1) {
      int v84 = v177;
    }
    uint64_t v178 = (_DWORD *)(a2 + 4 * v81);
    *uint64_t v178 = v84;
    v178[2] = v84;
    v178[4] = v84;
    v178[6] = v84;
    v178[8] = v84;
    v178[10] = v84;
    v178[12] = v84;
LABEL_128:
    *(_DWORD *)(a2 + 4 * v81 + 56) = v84;
    char v80 = 1;
    uint64_t v81 = 1;
  }
  while ((v86 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int32x4_t a6, int32x4_t a7)
{
  uint64_t v446 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v12 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    uint64_t v13 = (_OWORD *)(a1 + a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)(a1 + 2 * a2);
    *char v14 = 0u;
    v14[1] = 0u;
    uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
LABEL_6:
    _OWORD *v15 = v12;
    v15[1] = v12;
    return result;
  }
  char v9 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v431, a5);
    }
    int v401 = HIDWORD(v431);
    __int16 v402 = v431;
    int v403 = v433;
    __int16 v404 = v432;
    int v417 = v435;
    __int16 v418 = v434;
    int v419 = v437;
    __int16 v420 = v436;
    int v397 = v439;
    __int16 v398 = v438;
    int v399 = v441;
    __int16 v400 = v440;
    int v415 = v443;
    __int16 v416 = v442;
    uint64_t v20 = a3 + 12;
    __int16 v413 = v444;
    int v414 = v445;
    if ((v9 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v431, a5);
    }
    int v409 = HIDWORD(v431);
    __int16 v410 = v431;
    int v411 = v433;
    __int16 v412 = v432;
    int v425 = v435;
    __int16 v426 = v434;
    int v427 = v437;
    __int16 v428 = v436;
    int v405 = v439;
    __int16 v406 = v438;
    int v407 = v441;
    __int16 v408 = v440;
    int v423 = v443;
    __int16 v424 = v442;
    uint64_t v21 = a3 + 24;
    __int16 v421 = v444;
    int v422 = v445;
    if ((v9 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v431, a5);
    }
    __int16 v23 = v431;
    int v22 = HIDWORD(v431);
    __int16 v24 = v432;
    int v393 = v435;
    __int16 v394 = v434;
    __int16 v25 = v438;
    int v395 = v437;
    __int16 v396 = v436;
    int v26 = v439;
    __int16 v27 = v440;
    int v28 = v441;
    int v391 = v443;
    __int16 v392 = v442;
    uint64_t v29 = a3 + 36;
    __int16 v30 = v444;
    int v389 = v433;
    int v390 = v445;
    if ((v9 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v431, a5);
    }
    *(_DWORD *)a1 = ((v402 & 0x3FF) << 6) | (v401 << 22);
    *(_DWORD *)(a1 + 4) = ((v404 & 0x3FF) << 6) | (v403 << 22);
    *(_DWORD *)(a1 + 8) = ((v398 & 0x3FF) << 6) | (v397 << 22);
    *(_DWORD *)(a1 + 12) = ((v400 & 0x3FF) << 6) | (v399 << 22);
    *(_DWORD *)(a1 + 16) = ((v23 & 0x3FF) << 6) | (v22 << 22);
    *(_DWORD *)(a1 + 20) = ((v24 & 0x3FF) << 6) | (v389 << 22);
    *(_DWORD *)(a1 + 24) = ((v25 & 0x3FF) << 6) | (v26 << 22);
    *(_DWORD *)(a1 + 28) = ((v27 & 0x3FF) << 6) | (v28 << 22);
    uint64_t v31 = (int *)(a1 + a2);
    *uint64_t v31 = ((v418 & 0x3FF) << 6) | (v417 << 22);
    v31[1] = ((v420 & 0x3FF) << 6) | (v419 << 22);
    v31[2] = ((v416 & 0x3FF) << 6) | (v415 << 22);
    v31[3] = ((v413 & 0x3FF) << 6) | (v414 << 22);
    v31[4] = ((v394 & 0x3FF) << 6) | (v393 << 22);
    v31[5] = ((v396 & 0x3FF) << 6) | (v395 << 22);
    v31[6] = ((v392 & 0x3FF) << 6) | (v391 << 22);
    v31[7] = ((v30 & 0x3FF) << 6) | (v390 << 22);
    unsigned int v32 = (int *)(a1 + a2 + a2);
    *unsigned int v32 = ((v410 & 0x3FF) << 6) | (v409 << 22);
    v32[1] = ((v412 & 0x3FF) << 6) | (v411 << 22);
    v32[2] = ((v406 & 0x3FF) << 6) | (v405 << 22);
    v32[3] = ((v408 & 0x3FF) << 6) | (v407 << 22);
    int v33 = ((v432 & 0x3FF) << 6) | (v433 << 22);
    v32[4] = ((v431 & 0x3FF) << 6) | (HIDWORD(v431) << 22);
    v32[5] = v33;
    int v34 = ((v440 & 0x3FF) << 6) | (v441 << 22);
    v32[6] = ((v438 & 0x3FF) << 6) | (v439 << 22);
    v32[7] = v34;
    unsigned int v35 = (int *)((char *)v32 + a2);
    int *v35 = ((v426 & 0x3FF) << 6) | (v425 << 22);
    v35[1] = ((v428 & 0x3FF) << 6) | (v427 << 22);
    v35[2] = ((v424 & 0x3FF) << 6) | (v423 << 22);
    v35[3] = ((v421 & 0x3FF) << 6) | (v422 << 22);
    LODWORD(v32) = ((v436 & 0x3FF) << 6) | (v437 << 22);
    v35[4] = ((v434 & 0x3FF) << 6) | (v435 << 22);
    v35[5] = (int)v32;
    LODWORD(v32) = ((v444 & 0x3FF) << 6) | (v445 << 22);
    v35[6] = ((v442 & 0x3FF) << 6) | (v443 << 22);
    v35[7] = (int)v32;
    return 48;
  }
  switch(a4)
  {
    case 0x7Fu:
      int64x2_t v36 = *(int64x2_t *)a3;
      int64x2_t v37 = *(int64x2_t *)(a3 + 16);
      int64x2_t v38 = *(int64x2_t *)(a3 + 32);
      int64x2_t v39 = *(int64x2_t *)(a3 + 48);
      int64x2_t v40 = *(int64x2_t *)(a3 + 64);
      int64x2_t v41 = *(int64x2_t *)(a3 + 80);
      int64x2_t v42 = *(int64x2_t *)(a3 + 96);
      int64x2_t v43 = *(int64x2_t *)(a3 + 112);
      int v44 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v37);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v40, v41);
      unint64_t v45 = (int64x2_t *)(a1 + 2 * a2);
      *int v44 = vzip2q_s64(v36, v37);
      v44[1] = vzip2q_s64(v40, v41);
      *unint64_t v45 = vzip1q_s64(v38, v39);
      v45[1] = vzip1q_s64(v42, v43);
      int v46 = (int64x2_t *)((char *)v45 + a2);
      *int v46 = vzip2q_s64(v38, v39);
      v46[1] = vzip2q_s64(v42, v43);
      return 128;
    case 0x4Fu:
      v47.i64[0] = 0xA000A000A000ALL;
      v47.i64[1] = 0xA000A000A000ALL;
      int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v47, v47));
      v47.i64[0] = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
      v49.i64[0] = v47.u32[0];
      v49.i64[1] = v47.u32[1];
      int64x2_t v50 = v49;
      unint64_t v51 = vaddvq_s64(v49);
      int64x2_t v52 = 0uLL;
      if (v51 <= 0x80)
      {
        int v85 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v86 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
        v87.i64[0] = v86.u32[0];
        v87.i64[1] = v86.u32[1];
        int64x2_t v88 = v87;
        int64x2_t v89 = vzip1q_s64((int64x2_t)0, v50);
        unint64_t v90 = 8 * (a3 & 7);
        unint64_t v91 = v51 + v90;
        int64x2_t v92 = vaddq_s64(v89, vdupq_n_s64(v90));
        int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v92)));
        if (v51 + v90 > 0x80) {
          int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v92))), v93);
        }
        uint64x2_t v94 = (uint64x2_t)vnegq_s64(v88);
        int64x2_t v95 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v94);
        *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
        *(int32x2_t *)v95.i8 = vmovn_s64(v95);
        unint64_t v96 = v91 & 0x3F;
        int v97 = (int64x2_t *)((char *)v85 + 8 * (v91 >> 6));
        int8x16_t v98 = (int8x16_t)vaddq_s64(v89, vdupq_n_s64(v96));
        unint64_t v99 = v51 + v91;
        int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v97, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v98)));
        if (v51 + v96 >= 0x81)
        {
          int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v97[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v98)));
          int8x16_t v100 = vorrq_s8(v98, v100);
        }
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v100, v94);
        *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v100);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        unint64_t v102 = v99 & 0x3F;
        unint64_t v103 = (int64x2_t *)((char *)v85 + 8 * (v99 >> 6));
        int64x2_t v104 = vaddq_s64(v89, vdupq_n_s64(v102));
        unint64_t v105 = v51 + v99;
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v103, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
        if (v51 + v102 > 0x80) {
          int8x16_t v106 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v103[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v106);
        }
        int16x8_t v107 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v95);
        int16x8_t v108 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v101);
        int64x2_t v109 = (int64x2_t)vshlq_u64((uint64x2_t)v106, v94);
        *(int32x2_t *)v95.i8 = vmovn_s64((int64x2_t)v106);
        *(int32x2_t *)v109.i8 = vmovn_s64(v109);
        int16x8_t v110 = (int16x8_t)vzip1q_s32((int32x4_t)v95, (int32x4_t)v109);
        unint64_t v111 = v105 & 0x3F;
        unint64_t v112 = (int64x2_t *)((char *)v85 + 8 * (v105 >> 6));
        int64x2_t v113 = vaddq_s64(v89, vdupq_n_s64(v111));
        int8x16_t v114 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113));
        unint64_t v115 = v51 + v105;
        int64x2_t v116 = vsubq_s64(vdupq_n_s64(0x40uLL), v113);
        int8x16_t v117 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)v116);
        int8x16_t v118 = vorrq_s8(v117, v114);
        if (v51 + v111 >= 0x81)
        {
          int64x2_t v119 = v112[1];
          uint64x2_t v120 = (uint64x2_t)vdupq_lane_s64(v119.i64[0], 0);
          int8x16_t v117 = (int8x16_t)vdupq_laneq_s64(v119, 1);
          int8x16_t v114 = (int8x16_t)vshlq_u64(v120, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113));
          int64x2_t v116 = vdupq_n_s64(0xC0uLL);
          int8x16_t v118 = vorrq_s8(vorrq_s8(v114, (int8x16_t)vshlq_u64((uint64x2_t)v117, (uint64x2_t)vsubq_s64(v116, v113))), v118);
        }
        v121.i64[0] = 0x1000100010001;
        v121.i64[1] = 0x1000100010001;
        *(int16x4_t *)v117.i8 = vmovn_s32((int32x4_t)v107);
        *(int16x4_t *)v107.i8 = vshrn_n_s32((int32x4_t)v107, 0xAuLL);
        *(int16x4_t *)v114.i8 = vmovn_s32((int32x4_t)v108);
        *(int16x4_t *)v108.i8 = vshrn_n_s32((int32x4_t)v108, 0xAuLL);
        *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v110);
        *(int16x4_t *)v110.i8 = vshrn_n_s32((int32x4_t)v110, 0xAuLL);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v118, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v118);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v122);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xAuLL);
        unint64_t v124 = v115 & 0x3F;
        unint64_t v125 = (int64x2_t *)((char *)v85 + 8 * (v115 >> 6));
        int64x2_t v126 = vaddq_s64(v89, vdupq_n_s64(v124));
        unint64_t v127 = v51 + v115;
        int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v125, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
        if (v51 + v124 > 0x80) {
          int8x16_t v128 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v125[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), v128);
        }
        int16x8_t v129 = vshlq_n_s16(v121, 0xAuLL);
        v130.i64[0] = -1;
        v130.i64[1] = -1;
        int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v128, v94);
        *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
        *(int32x2_t *)v131.i8 = vmovn_s64(v131);
        int16x8_t v132 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v131);
        *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v132);
        *(int16x4_t *)v132.i8 = vshrn_n_s32((int32x4_t)v132, 0xAuLL);
        int v133 = (int64x2_t *)((char *)v85 + 8 * (v127 >> 6));
        int64x2_t v134 = vaddq_s64(v89, vdupq_n_s64(v127 & 0x3F));
        unint64_t v135 = v51 + v127;
        int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
        if (v51 + (v127 & 0x3F) >= 0x81) {
          int8x16_t v136 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v134))), v136);
        }
        int8x16_t v137 = (int8x16_t)vaddq_s16(v129, v130);
        int8x16_t v138 = (int8x16_t)vzip1q_s16((int16x8_t)v117, v107);
        int8x16_t v139 = (int8x16_t)vzip1q_s16((int16x8_t)v114, v108);
        int8x16_t v140 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v110);
        int8x16_t v141 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v123);
        int8x16_t v142 = (int8x16_t)vzip1q_s16((int16x8_t)v128, v132);
        int64x2_t v143 = (int64x2_t)vshlq_u64((uint64x2_t)v136, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v136);
        *(int32x2_t *)v143.i8 = vmovn_s64(v143);
        int16x8_t v144 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v143);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v144);
        *(int16x4_t *)v144.i8 = vshrn_n_s32((int32x4_t)v144, 0xAuLL);
        int8x16_t v145 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v144);
        unint64_t v146 = v51 + v135;
        unint64_t v147 = v135 & 0x3F;
        int64x2_t v148 = vaddq_s64(v89, vdupq_n_s64(v147));
        int v149 = (int64x2_t *)((char *)v85 + 8 * (v135 >> 6));
        int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
        if (v51 + v147 > 0x80) {
          int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v150);
        }
        int16x8_t v151 = (int16x8_t)vandq_s8(v138, v137);
        int16x8_t v152 = (int16x8_t)vandq_s8(v139, v137);
        int16x8_t v153 = (int16x8_t)vandq_s8(v140, v137);
        int16x8_t v154 = (int16x8_t)vandq_s8(v141, v137);
        int16x8_t v155 = (int16x8_t)vandq_s8(v142, v137);
        int16x8_t v156 = (int16x8_t)vandq_s8(v145, v137);
        int64x2_t v157 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v94);
        *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
        *(int32x2_t *)v157.i8 = vmovn_s64(v157);
        int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v150, (int32x4_t)v157);
        *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v158);
        *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xAuLL);
        unint64_t v159 = (int64x2_t *)((char *)v85 + 8 * (v146 >> 6));
        int64x2_t v160 = vaddq_s64(v89, vdupq_n_s64(v146 & 0x3F));
        int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v150, v158), v137);
        int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v160)));
        if (v51 + (v146 & 0x3F) >= 0x81) {
          int8x16_t v162 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v159[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v160))), v162);
        }
        int64x2_t v54 = (int64x2_t)vshlq_n_s16(v151, 6uLL);
        int64x2_t v55 = (int64x2_t)vshlq_n_s16(v152, 6uLL);
        int64x2_t v57 = (int64x2_t)vshlq_n_s16(v153, 6uLL);
        int64x2_t v56 = (int64x2_t)vshlq_n_s16(v154, 6uLL);
        int64x2_t v52 = (int64x2_t)vshlq_n_s16(v155, 6uLL);
        int64x2_t v53 = (int64x2_t)vshlq_n_s16(v156, 6uLL);
        int64x2_t v163 = (int64x2_t)vshlq_u64((uint64x2_t)v162, v94);
        *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v162);
        *(int32x2_t *)v163.i8 = vmovn_s64(v163);
        int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v154, (int32x4_t)v163);
        *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v164);
        *(int16x4_t *)v164.i8 = vshrn_n_s32((int32x4_t)v164, 0xAuLL);
        int16x8_t v165 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v154, v164), v137);
        int64x2_t v59 = (int64x2_t)vshlq_n_s16(v161, 6uLL);
        int64x2_t v58 = (int64x2_t)vshlq_n_s16(v165, 6uLL);
      }
      else
      {
        int64x2_t v53 = 0uLL;
        int64x2_t v54 = 0uLL;
        int64x2_t v55 = 0uLL;
        int64x2_t v56 = 0uLL;
        int64x2_t v57 = 0uLL;
        int64x2_t v58 = 0uLL;
        int64x2_t v59 = 0uLL;
      }
      int v166 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v54, v55);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v52, v53);
      unint64_t v167 = (int64x2_t *)(a1 + 2 * a2);
      *int v166 = vzip2q_s64(v54, v55);
      v166[1] = vzip2q_s64(v52, v53);
      *unint64_t v167 = vzip1q_s64(v57, v56);
      v167[1] = vzip1q_s64(v59, v58);
      BOOL v168 = (int64x2_t *)((char *)v167 + a2);
      *BOOL v168 = vzip2q_s64(v57, v56);
      v168[1] = vzip2q_s64(v59, v58);
      return 80;
    case 2u:
      int32x4_t v16 = vdupq_n_s32((*(_DWORD *)a3 << 12) & 0xFFC00000 | ((*(_DWORD *)a3 & 0x3FF) << 6));
      *(int32x4_t *)a1 = v16;
      *(int32x4_t *)(a1 + 16) = v16;
      unint64_t v17 = (int32x4_t *)(a1 + a2);
      *unint64_t v17 = v16;
      v17[1] = v16;
      unint64_t v18 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v18 = v16;
      v18[1] = v16;
      int v19 = (int32x4_t *)(a1 + a2 + 2 * a2);
      *int v19 = v16;
      v19[1] = v16;
      return 3;
    default:
      unint64_t v60 = 8 * (a3 & 7);
      unint64_t v61 = a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = v60 + 18;
      uint64_t v63 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v60;
      if (v60 >= 0x2F) {
        v63 |= *(void *)(v61 + 8) << (-8 * (a3 & 7u));
      }
      a6.i32[0] = v63;
      a6.i32[1] = (unsigned __int16)v63 >> 5;
      *(int8x8_t *)a6.i8 = vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0x1F0000001FLL);
      *(int16x4_t *)a6.i8 = vmovn_s32(a6);
      a7.i32[0] = (unsigned __int16)v63 >> 10;
      a7.i32[1] = v63 >> 14;
      *(int32x2_t *)a7.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a7.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
      *(int16x4_t *)a7.i8 = vmovn_s32(a7);
      unint64_t v64 = v60 + 38;
      unint64_t v65 = v62 >> 6;
      unint64_t v66 = v62 & 0x3A;
      uint64_t v67 = *(void *)(v61 + 8 * v65) >> v66;
      if (v66 >= 0x2D) {
        v67 |= *(void *)(v61 + 8 * v65 + 8) << -(char)v66;
      }
      int8x16_t v68 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
      int8x16_t v69 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a7.i8, 0);
      unint64_t v70 = (8 * (a3 & 7)) | 0x180;
      v71.i64[0] = 0x3000300030003;
      v71.i64[1] = 0x3000300030003;
      int16x8_t v72 = (int16x8_t)vandq_s8(v68, v71);
      int8x16_t v73 = vbicq_s8(v69, (int8x16_t)vceqq_s16(v72, (int16x8_t)v71));
      v71.i64[0] = 0x202020202020202;
      v71.i64[1] = 0x202020202020202;
      int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v68.i8, (int8x8_t)0x4000400040004)))), v71);
      if (vmaxvq_s8(v74) < 1)
      {
        int v84 = 0;
        v169.i64[0] = -1;
        v169.i64[1] = -1;
        int8x16_t v170 = v73;
        int8x16_t v171 = v73;
        int8x16_t v172 = v73;
        v173.i64[0] = -1;
        v173.i64[1] = -1;
        int8x16_t v174 = v73;
        v175.i64[0] = -1;
        v175.i64[1] = -1;
        v176.i64[0] = -1;
        v176.i64[1] = -1;
      }
      else
      {
        int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
        int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
        unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
        v78.i64[0] = v77;
        v78.i64[1] = HIDWORD(v77);
        int64x2_t v79 = v78;
        unint64_t v80 = vaddvq_s64(v78);
        unint64_t v81 = v64 + v80;
        if (v80 <= 0x80 && v70 >= v81)
        {
          unint64_t v177 = v64 & 0x3E;
          int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v79));
          int v179 = (int64x2_t *)(v61 + ((v64 >> 3) & 8));
          int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
          if (v177 + v80 < 0x81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = 0;
            int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v83);
          }
          unint64_t v64 = v81;
        }
        else
        {
          int8x16_t v83 = 0uLL;
          int v84 = 1;
        }
        int32x2_t v180 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
        v181.i64[0] = v180.u32[0];
        v181.i64[1] = v180.u32[1];
        int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v181));
        *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
        *(int32x2_t *)v182.i8 = vmovn_s64(v182);
        int8x16_t v183 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v182);
        int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v183, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
        *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
        *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
        int16x8_t v185 = vzip1q_s16((int16x8_t)v183, v184);
        v183.i64[0] = 0x101010101010101;
        v183.i64[1] = 0x101010101010101;
        *(int8x8_t *)v186.i8 = vand_s8(vzip1_s8(vmovn_s16(v185), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v185, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v68.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v183, v74), (int8x8_t)-1));
        v186.i64[1] = v186.i64[0];
        *(int8x8_t *)v186.i8 = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
        *(int16x4_t *)v185.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 0);
        *(int16x4_t *)v183.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 1);
        int8x8_t v187 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 2);
        int8x8_t v188 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 3);
        int8x16_t v174 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v185.i8);
        int8x16_t v172 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v183.i8);
        int8x16_t v171 = (int8x16_t)vsubw_s8((int16x8_t)v73, v187);
        int8x16_t v170 = (int8x16_t)vsubw_s8((int16x8_t)v73, v188);
        int8x16_t v176 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v185.i8));
        int8x16_t v175 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v183.i8));
        int8x16_t v173 = (int8x16_t)vmovl_s8(vceqz_s8(v187));
        int8x16_t v169 = (int8x16_t)vmovl_s8(vceqz_s8(v188));
      }
      v189.i64[0] = 0x8000800080008;
      v189.i64[1] = 0x8000800080008;
      int8x16_t v190 = 0uLL;
      int8x16_t v191 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v68, v189), (int8x16_t)0, 0xCuLL), v73);
      int8x16_t v192 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v191, (int16x8_t)v191));
      v189.i64[0] = vpaddq_s32((int32x4_t)v192, (int32x4_t)v192).u64[0];
      v193.i64[0] = v189.u32[0];
      v193.i64[1] = v189.u32[1];
      int64x2_t v194 = v193;
      unint64_t v195 = vaddvq_s64(v193);
      unint64_t v196 = v64 + v195;
      if (v195 <= 0x80 && v70 >= v196)
      {
        unint64_t v198 = v64 & 0x3F;
        int64x2_t v199 = vaddq_s64(vdupq_n_s64(v198), vzip1q_s64((int64x2_t)0, v194));
        unint64_t v200 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v190 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v200, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200->i64[0], 0), (uint64x2_t)vnegq_s64(v199)));
        if (v198 + v195 >= 0x81) {
          int8x16_t v190 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v200[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v199))), v190);
        }
        unint64_t v64 = v196;
      }
      else
      {
        int v84 = 1;
      }
      int v201 = v68.i8[0] & 3;
      if (v201 == 2)
      {
        BOOL v202 = v70 < v64 + 8;
        unint64_t v203 = v64 + 16;
        if (v70 >= v64 + 8) {
          v64 += 8;
        }
        if (v203 > v70 || v202) {
          int v84 = 1;
        }
        else {
          v64 += 8;
        }
      }
      int8x16_t v205 = 0uLL;
      int8x16_t v206 = vextq_s8((int8x16_t)0, v174, 0xCuLL);
      int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v206, (int16x8_t)v206));
      unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
      v209.i64[0] = v208;
      v209.i64[1] = HIDWORD(v208);
      int64x2_t v210 = v209;
      unint64_t v211 = vaddvq_s64(v209);
      unint64_t v212 = v64 + v211;
      if (v211 <= 0x80 && v70 >= v212)
      {
        unint64_t v215 = v64 & 0x3F;
        int64x2_t v216 = vaddq_s64(vdupq_n_s64(v215), vzip1q_s64((int64x2_t)0, v210));
        uint64_t v217 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v217, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217->i64[0], 0), (uint64x2_t)vnegq_s64(v216)));
        if (v215 + v211 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v217[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v216))), v214);
        }
        unint64_t v64 = v212;
      }
      else
      {
        int v84 = 1;
        int8x16_t v214 = 0uLL;
      }
      int8x16_t v218 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v174, (int16x8_t)v174));
      unint64_t v219 = vpaddq_s32((int32x4_t)v218, (int32x4_t)v218).u64[0];
      v220.i64[0] = v219;
      v220.i64[1] = HIDWORD(v219);
      int64x2_t v221 = v220;
      unint64_t v222 = vaddvq_s64(v220);
      unint64_t v223 = v64 + v222;
      if (v222 <= 0x80 && v70 >= v223)
      {
        unint64_t v225 = v64 & 0x3F;
        int64x2_t v226 = vaddq_s64(vdupq_n_s64(v225), vzip1q_s64((int64x2_t)0, v221));
        unint64_t v227 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v226)));
        if (v225 + v222 >= 0x81) {
          int8x16_t v205 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v226))), v205);
        }
        unint64_t v64 = v223;
      }
      else
      {
        int v84 = 1;
      }
      int8x16_t v228 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v172, (int16x8_t)v172));
      unint64_t v229 = vpaddq_s32((int32x4_t)v228, (int32x4_t)v228).u64[0];
      v230.i64[0] = v229;
      v230.i64[1] = HIDWORD(v229);
      int64x2_t v231 = v230;
      unint64_t v232 = vaddvq_s64(v230);
      unint64_t v233 = v64 + v232;
      int8x16_t v234 = 0uLL;
      if (v232 <= 0x80 && v70 >= v233)
      {
        unint64_t v237 = v64 & 0x3F;
        int64x2_t v238 = vaddq_s64(vdupq_n_s64(v237), vzip1q_s64((int64x2_t)0, v231));
        BOOL v239 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v236 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v239, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239->i64[0], 0), (uint64x2_t)vnegq_s64(v238)));
        if (v237 + v232 >= 0x81) {
          int8x16_t v236 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v239[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v238))), v236);
        }
        unint64_t v64 = v233;
      }
      else
      {
        int v84 = 1;
        int8x16_t v236 = 0uLL;
      }
      if (v232 > 0x80 || (unint64_t v240 = v64 + v232, v70 < v64 + v232))
      {
        int v84 = 1;
        unint64_t v240 = v64;
      }
      else
      {
        unint64_t v241 = v64 & 0x3F;
        int64x2_t v242 = vaddq_s64(vdupq_n_s64(v241), vzip1q_s64((int64x2_t)0, v231));
        uint64_t v243 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v234 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v243, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243->i64[0], 0), (uint64x2_t)vnegq_s64(v242)));
        if (v241 + v232 >= 0x81) {
          int8x16_t v234 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v243[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v242))), v234);
        }
      }
      int8x16_t v244 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v171, (int16x8_t)v171));
      unint64_t v245 = vpaddq_s32((int32x4_t)v244, (int32x4_t)v244).u64[0];
      v246.i64[0] = v245;
      v246.i64[1] = HIDWORD(v245);
      int64x2_t v247 = v246;
      unint64_t v248 = vaddvq_s64(v246);
      int8x16_t v249 = 0uLL;
      if (v248 > 0x80 || (unint64_t v250 = v240 + v248, v70 < v240 + v248))
      {
        int v84 = 1;
        unint64_t v250 = v240;
        int8x16_t v253 = 0uLL;
      }
      else
      {
        int64x2_t v251 = vaddq_s64(vdupq_n_s64(v240 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        unsigned int v252 = (int64x2_t *)(v61 + 8 * (v240 >> 6));
        int8x16_t v253 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v252, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252->i64[0], 0), (uint64x2_t)vnegq_s64(v251)));
        if ((v240 & 0x3F) + v248 >= 0x81) {
          int8x16_t v253 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v252[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v251))), v253);
        }
      }
      if (v248 > 0x80 || (unint64_t v254 = v250 + v248, v70 < v250 + v248))
      {
        int v84 = 1;
        unint64_t v254 = v250;
      }
      else
      {
        int64x2_t v255 = vaddq_s64(vdupq_n_s64(v250 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v256 = (int64x2_t *)(v61 + 8 * (v250 >> 6));
        int8x16_t v249 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v256, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256->i64[0], 0), (uint64x2_t)vnegq_s64(v255)));
        if ((v250 & 0x3F) + v248 >= 0x81) {
          int8x16_t v249 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v256[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v255))), v249);
        }
      }
      int8x16_t v257 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
      unint64_t v258 = vpaddq_s32((int32x4_t)v257, (int32x4_t)v257).u64[0];
      v259.i64[0] = v258;
      v259.i64[1] = HIDWORD(v258);
      int64x2_t v260 = v259;
      unint64_t v261 = vaddvq_s64(v259);
      int8x16_t v262 = 0uLL;
      if (v261 > 0x80 || (unint64_t v263 = v254 + v261, v70 < v254 + v261))
      {
        int v84 = 1;
        unint64_t v263 = v254;
        int8x16_t v267 = 0uLL;
      }
      else
      {
        unint64_t v264 = v254 & 0x3F;
        int64x2_t v265 = vaddq_s64(vdupq_n_s64(v264), vzip1q_s64((int64x2_t)0, v260));
        int v266 = (int64x2_t *)(v61 + 8 * (v254 >> 6));
        int8x16_t v267 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v266, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266->i64[0], 0), (uint64x2_t)vnegq_s64(v265)));
        if (v264 + v261 >= 0x81) {
          int8x16_t v267 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v266[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v265))), v267);
        }
      }
      if (v261 > 0x80 || (unint64_t v268 = v263 + v261, v70 < v263 + v261))
      {
        int v84 = 1;
        unint64_t v268 = v263;
      }
      else
      {
        int64x2_t v269 = vaddq_s64(vdupq_n_s64(v263 & 0x3F), vzip1q_s64((int64x2_t)0, v260));
        int v270 = (int64x2_t *)(v61 + 8 * (v263 >> 6));
        int8x16_t v262 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v270, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270->i64[0], 0), (uint64x2_t)vnegq_s64(v269)));
        if ((v263 & 0x3F) + v261 >= 0x81) {
          int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v270[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v269))), v262);
        }
      }
      if (v84 || (uint64_t result = a4 + 1, v70 + 8 * result - v268 - 384 >= 9) || v201 == 2)
      {
        uint64_t result = 0;
        v431 |= 1023 << ((8 * &v431) & 0x20);
        long long v12 = 0uLL;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        unsigned int v271 = (_OWORD *)(a1 + a2);
        *unsigned int v271 = 0u;
        v271[1] = 0u;
        unsigned int v272 = (_OWORD *)(a1 + 2 * a2);
        uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
        *unsigned int v272 = 0u;
        v272[1] = 0u;
        goto LABEL_6;
      }
      int32x2_t v273 = vzip1_s32(*(int32x2_t *)v192.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v192, v192, 8uLL));
      int32x2_t v274 = vzip1_s32(*(int32x2_t *)v228.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v228, v228, 8uLL));
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      int64x2_t v276 = v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)vnegq_s64(v276);
      uint64x2_t v278 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v279 = (int64x2_t)vshlq_u64((uint64x2_t)v190, v277);
      *(int32x2_t *)v190.i8 = vmovn_s64((int64x2_t)v190);
      *(int32x2_t *)v279.i8 = vmovn_s64(v279);
      int16x8_t v280 = (int16x8_t)vzip1q_s32((int32x4_t)v190, (int32x4_t)v279);
      int64x2_t v281 = (int64x2_t)vshlq_u64((uint64x2_t)v236, v278);
      *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v236);
      *(int32x2_t *)v281.i8 = vmovn_s64(v281);
      int16x8_t v282 = (int16x8_t)vzip1q_s32((int32x4_t)v236, (int32x4_t)v281);
      int64x2_t v283 = (int64x2_t)vshlq_u64((uint64x2_t)v234, v278);
      *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v234);
      *(int32x2_t *)v283.i8 = vmovn_s64(v283);
      int16x8_t v284 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v283);
      uint32x4_t v285 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v172.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL))));
      int16x8_t v286 = (int16x8_t)vshlq_u32((uint32x4_t)v280, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v191.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v191, v191, 8uLL)))));
      *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
      *(int16x4_t *)v286.i8 = vmovn_s32((int32x4_t)v286);
      int16x8_t v287 = vzip1q_s16(v280, v286);
      int16x8_t v288 = (int16x8_t)vshlq_u32((uint32x4_t)v282, v285);
      int16x8_t v289 = (int16x8_t)vshlq_u32((uint32x4_t)v284, v285);
      *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
      *(int16x4_t *)v288.i8 = vmovn_s32((int32x4_t)v288);
      *(int16x4_t *)v284.i8 = vmovn_s32((int32x4_t)v284);
      *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
      int16x8_t v290 = vzip1q_s16(v282, v288);
      v288.i64[0] = 0x10001000100010;
      v288.i64[1] = 0x10001000100010;
      int16x8_t v291 = vzip1q_s16(v284, v289);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      int16x8_t v292 = vsubq_s16(v288, (int16x8_t)v191);
      int16x8_t v293 = vaddq_s16((int16x8_t)v191, v289);
      v289.i64[0] = 0x10001000100010;
      v289.i64[1] = 0x10001000100010;
      int16x8_t v294 = vshlq_s16(v287, v292);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      int16x8_t v295 = vsubq_s16(v289, (int16x8_t)v172);
      int16x8_t v296 = vaddq_s16((int16x8_t)v172, v292);
      int8x16_t v297 = (int8x16_t)vshlq_s16(v294, v293);
      int16x8_t v298 = vshlq_s16(vshlq_s16(v290, v295), v296);
      int16x8_t v299 = vshlq_s16(vshlq_s16(v291, v295), v296);
      int8x16_t v300 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v297.i8, 0);
      int16x8_t v301 = (int16x8_t)vandq_s8(v175, v300);
      int16x8_t v302 = vsubq_s16(v298, v301);
      int16x8_t v303 = vsubq_s16(v299, v301);
      *(int32x2_t *)v298.i8 = vzip1_s32(*(int32x2_t *)v244.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL));
      *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v257.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v257, v257, 8uLL));
      v275.i64[0] = v298.u32[0];
      v275.i64[1] = v298.u32[1];
      int64x2_t v304 = v275;
      v275.i64[0] = v299.u32[0];
      v275.i64[1] = v299.u32[1];
      uint64x2_t v305 = (uint64x2_t)vnegq_s64(v304);
      int64x2_t v306 = (int64x2_t)vshlq_u64((uint64x2_t)v253, v305);
      *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v253);
      *(int32x2_t *)v306.i8 = vmovn_s64(v306);
      int16x8_t v307 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v306);
      uint64x2_t v308 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v249, v305);
      *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v249);
      *(int32x2_t *)v309.i8 = vmovn_s64(v309);
      int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v309);
      int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v267, v308);
      *(int32x2_t *)v253.i8 = vmovn_s64((int64x2_t)v267);
      *(int32x2_t *)v311.i8 = vmovn_s64(v311);
      uint32x4_t v312 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v171.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL))));
      int16x8_t v313 = (int16x8_t)vzip1q_s32((int32x4_t)v253, (int32x4_t)v311);
      int16x8_t v314 = (int16x8_t)vshlq_u32((uint32x4_t)v307, v312);
      int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v312);
      *(int16x4_t *)v307.i8 = vmovn_s32((int32x4_t)v307);
      *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
      *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
      *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
      int16x8_t v316 = vzip1q_s16(v307, v314);
      v314.i64[0] = 0x10001000100010;
      v314.i64[1] = 0x10001000100010;
      int16x8_t v317 = vzip1q_s16(v310, v315);
      v315.i64[0] = 0xF000F000F000FLL;
      v315.i64[1] = 0xF000F000F000FLL;
      int16x8_t v318 = vsubq_s16(v314, (int16x8_t)v171);
      int16x8_t v319 = vaddq_s16((int16x8_t)v171, v315);
      uint32x4_t v320 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL))));
      int16x8_t v321 = vshlq_s16(vshlq_s16(v316, v318), v319);
      int16x8_t v322 = vshlq_s16(vshlq_s16(v317, v318), v319);
      int16x8_t v323 = (int16x8_t)vandq_s8(v173, v300);
      int16x8_t v324 = vsubq_s16(v321, v323);
      int16x8_t v325 = vsubq_s16(v322, v323);
      int16x8_t v326 = (int16x8_t)vshlq_u32((uint32x4_t)v313, v320);
      *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v313);
      *(int16x4_t *)v326.i8 = vmovn_s32((int32x4_t)v326);
      v313.i64[0] = 0x10001000100010;
      v313.i64[1] = 0x10001000100010;
      int16x8_t v327 = vzip1q_s16(v321, v326);
      v321.i64[0] = 0xF000F000F000FLL;
      v321.i64[1] = 0xF000F000F000FLL;
      int16x8_t v328 = vsubq_s16(v313, (int16x8_t)v170);
      int16x8_t v329 = vaddq_s16((int16x8_t)v170, v321);
      int64x2_t v330 = (int64x2_t)vshlq_u64((uint64x2_t)v262, v308);
      *(int32x2_t *)v321.i8 = vmovn_s64((int64x2_t)v262);
      *(int32x2_t *)v330.i8 = vmovn_s64(v330);
      int16x8_t v331 = (int16x8_t)vzip1q_s32((int32x4_t)v321, (int32x4_t)v330);
      int16x8_t v332 = (int16x8_t)vshlq_u32((uint32x4_t)v331, v320);
      *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
      *(int16x4_t *)v332.i8 = vmovn_s32((int32x4_t)v332);
      int16x8_t v333 = vshlq_s16(vshlq_s16(vzip1q_s16(v331, v332), v328), v329);
      int16x8_t v334 = (int16x8_t)vandq_s8(v169, v300);
      int16x8_t v335 = vsubq_s16(vshlq_s16(vshlq_s16(v327, v328), v329), v334);
      int16x8_t v336 = vsubq_s16(v333, v334);
      int32x2_t v337 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
      int32x2_t v338 = vzip1_s32(*(int32x2_t *)v218.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v218, v218, 8uLL));
      v275.i64[0] = v337.u32[0];
      v275.i64[1] = v337.u32[1];
      int64x2_t v339 = v275;
      v275.i64[0] = v338.u32[0];
      v275.i64[1] = v338.u32[1];
      int64x2_t v340 = (int64x2_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)vnegq_s64(v339));
      *(int32x2_t *)v214.i8 = vmovn_s64((int64x2_t)v214);
      *(int32x2_t *)v340.i8 = vmovn_s64(v340);
      int16x8_t v341 = (int16x8_t)vzip1q_s32((int32x4_t)v214, (int32x4_t)v340);
      int64x2_t v342 = (int64x2_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)vnegq_s64(v275));
      *(int32x2_t *)v205.i8 = vmovn_s64((int64x2_t)v205);
      *(int32x2_t *)v342.i8 = vmovn_s64(v342);
      int16x8_t v343 = (int16x8_t)vzip1q_s32((int32x4_t)v205, (int32x4_t)v342);
      int16x8_t v344 = (int16x8_t)vshlq_u32((uint32x4_t)v341, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v206.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v206, v206, 8uLL)))));
      int16x8_t v345 = (int16x8_t)vshlq_u32((uint32x4_t)v343, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v174.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v174, v174, 8uLL)))));
      *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
      *(int16x4_t *)v344.i8 = vmovn_s32((int32x4_t)v344);
      *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
      *(int16x4_t *)v345.i8 = vmovn_s32((int32x4_t)v345);
      int16x8_t v346 = vzip1q_s16(v341, v344);
      v344.i64[0] = 0x10001000100010;
      v344.i64[1] = 0x10001000100010;
      int16x8_t v347 = vzip1q_s16(v343, v345);
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      int16x8_t v348 = vaddq_s16((int16x8_t)vandq_s8(v297, v176), vshlq_s16(vshlq_s16(v346, vsubq_s16(v344, (int16x8_t)v206)), vaddq_s16((int16x8_t)v206, v345)));
      int16x8_t v349 = (int16x8_t)vandq_s8(v176, v300);
      v350.i64[0] = 0x1000100010001;
      v350.i64[1] = 0x1000100010001;
      int16x8_t v351 = vceqq_s16(v72, (int16x8_t)v350);
      int v352 = (unsigned __int16)vaddvq_s16(v351);
      int8x16_t v353 = (int8x16_t)vsubq_s16(v348, v349);
      int8x16_t v354 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v347, vsubq_s16(v344, (int16x8_t)v174)), vaddq_s16((int16x8_t)v174, v345)), v349);
      v351.i16[0] = v67 & 0x3FF;
      v351.i16[1] = (v67 >> 10) & 0x3FF;
      int16x8_t v355 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v351.i8, 0);
      if (v352)
      {
        int8x16_t v356 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v68, v350));
        int8x16_t v357 = v354;
        v357.i32[3] = v353.i32[0];
        int8x16_t v358 = v353;
        v358.i32[0] = v354.i32[3];
        v447.val[0] = vbslq_s8(v356, v358, v353);
        v447.val[1] = vbslq_s8(v356, v357, v354);
        v359.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
        v359.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7570), v356), (int16x8_t)v447.val[0]);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356));
        int8x16_t v353 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA7580), v356), (int16x8_t)v448.val[0]);
        int8x16_t v354 = (int8x16_t)vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA7590), v356), v302);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA75A0), v356), v303);
        int16x8_t v302 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75B0), v356), (int16x8_t)v448.val[0]);
        int16x8_t v303 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA75C0), v356), v324);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA7570), v356), v325);
        int16x8_t v324 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356), (int16x8_t)v448.val[0]);
        int16x8_t v325 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75D0), v356));
        v447.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA75E0), v356), v335);
        v447.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA7570), v356), v336);
        int16x8_t v335 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356), (int16x8_t)v447.val[0]);
        int16x8_t v336 = vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA75F0), v356));
      }
      int8x16_t v360 = (int8x16_t)vaddq_s16((int16x8_t)v353, v355);
      int8x16_t v361 = (int8x16_t)vaddq_s16((int16x8_t)v354, v355);
      int8x16_t v362 = (int8x16_t)vaddq_s16(v302, v355);
      int8x16_t v363 = (int8x16_t)vaddq_s16(v303, v355);
      int8x16_t v364 = (int8x16_t)vaddq_s16(v324, v355);
      int8x16_t v365 = (int8x16_t)vaddq_s16(v325, v355);
      int8x16_t v366 = (int8x16_t)vaddq_s16(v335, v355);
      int8x16_t v367 = (int8x16_t)vaddq_s16(v336, v355);
      v368.i64[0] = 0x10001000100010;
      v368.i64[1] = 0x10001000100010;
      int8x16_t v369 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v68, v368));
      int16x8_t v370 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v360, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v360);
      int16x8_t v371 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v361, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v361);
      int16x8_t v372 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v362, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v362);
      int16x8_t v373 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v363, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v363);
      int16x8_t v374 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v364, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v364);
      int16x8_t v375 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v365, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v365);
      int16x8_t v376 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v366, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v366);
      int16x8_t v377 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v367, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v367);
      int64x2_t v378 = (int64x2_t)vshlq_n_s16(v370, 6uLL);
      int64x2_t v379 = (int64x2_t)vshlq_n_s16(v371, 6uLL);
      int64x2_t v380 = (int64x2_t)vshlq_n_s16(v372, 6uLL);
      int64x2_t v381 = (int64x2_t)vshlq_n_s16(v374, 6uLL);
      int64x2_t v382 = (int64x2_t)vshlq_n_s16(v375, 6uLL);
      uint16x8_t v383 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v378, v379);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v381, v382);
      char v384 = (int64x2_t *)(a1 + 2 * a2);
      int64x2_t v385 = (int64x2_t)vshlq_n_s16(v373, 6uLL);
      int64x2_t v386 = (int64x2_t)vshlq_n_s16(v376, 6uLL);
      *uint16x8_t v383 = vzip2q_s64(v378, v379);
      v383[1] = vzip2q_s64(v381, v382);
      int64x2_t v387 = (int64x2_t)vshlq_n_s16(v377, 6uLL);
      *char v384 = vzip1q_s64(v380, v385);
      v384[1] = vzip1q_s64(v386, v387);
      int32x4_t v388 = (int64x2_t *)((char *)v384 + a2);
      *int32x4_t v388 = vzip2q_s64(v380, v385);
      v388[1] = vzip2q_s64(v386, v387);
      break;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int32x4_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int32x4_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *__int16 v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  uint64_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    unsigned int v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *uint64_t v31 = 0;
    unsigned int v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  uint64_t v9 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1, 64, a2, *a3, a4, a5, a6);
  uint64_t v12 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 32, 64, v9, a3[1], a4, v10, v11);
  uint64_t v15 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 256, 64, v12, a3[2], a4, v13, v14);
  uint64_t v18 = v15
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 288, 64, v15, a3[3], a4, v16, v17);
  uint64_t v21 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 512, 64, v18, a3[4], a4, v19, v20);
  uint64_t v24 = v21
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 544, 64, v21, a3[5], a4, v22, v23);
  uint64_t v27 = v24
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 768, 64, v24, a3[6], a4, v25, v26);
  unsigned int v30 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 800, 64, v27, v30, a4, v28, v29);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(uint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  unint64_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v11 = (int16x8_t)vzip1q_s64(*a3, v9);
  int16x8_t v12 = (int16x8_t)vzip2q_s64(*a3, v9);
  int16x8_t v13 = (int16x8_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  int32x4_t v14 = (int64x2_t *)((char *)v7 + a4);
  int64x2_t v17 = v14[1];
  int16x8_t v18 = (int16x8_t)vzip2q_s64(v8, v10);
  int16x8_t v19 = vshrq_n_s16(v11, 6uLL);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16(v12, 6uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip1q_s64(v15, *v14), 6uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip2q_s64(v15, *v14), 6uLL);
  int16x8_t v23 = vshrq_n_s16(v13, 6uLL);
  int16x8_t v24 = vshrq_n_s16(v18, 6uLL);
  int16x8_t v25 = vshrq_n_s16((int16x8_t)vzip1q_s64(v16, v17), 6uLL);
  int16x8_t v26 = vshrq_n_s16((int16x8_t)vzip2q_s64(v16, v17), 6uLL);
  int16x8_t v27 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 0);
  v28.i64[0] = 0x5000500050005;
  v28.i64[1] = 0x5000500050005;
  int8x16_t v423 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v27), 6uLL), v28);
  int8x16_t v425 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, v27), 6uLL), v28);
  int8x16_t v427 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v27), 6uLL), v28);
  int8x16_t v428 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v27), 6uLL), v28);
  int8x16_t v429 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v27), 6uLL), v28);
  int8x16_t v430 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v27), 6uLL), v28);
  int8x16_t v431 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v27), 6uLL), v28);
  int8x16_t v432 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v27), 6uLL), v28);
  int16x8_t v29 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v423, (int16x8_t)v425), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v423, (int16x8_t)v425), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = vpmaxq_s16(v29, v29);
  int16x8_t v32 = vpminq_s16(v30, v30);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  int16x8_t v37 = vminq_s16(v34, v36);
  int16x8_t v38 = vzip1q_s16(v33, v34);
  v39.i64[0] = 0x10001000100010;
  v39.i64[1] = 0x10001000100010;
  int16x8_t v40 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v38)), (int8x16_t)vceqzq_s16(v38));
  int16x8_t v41 = vpmaxq_s16(v40, v40);
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v427, (int16x8_t)v428), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v427, (int16x8_t)v428), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vpmaxq_s16(v44, v44);
  int16x8_t v47 = vpminq_s16(v45, v45);
  int16x8_t v48 = vmaxq_s16(vmaxq_s16(v33, v35), v46);
  int16x8_t v49 = vminq_s16(v37, v47);
  int16x8_t v50 = vzip1q_s16(v46, v47);
  int16x8_t v51 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v50)), (int8x16_t)vceqzq_s16(v50));
  int16x8_t v52 = vpmaxq_s16(v51, v51);
  int16x8_t v53 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v429, (int16x8_t)v430), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v429, (int16x8_t)v430), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = vpmaxq_s16(v53, v53);
  int16x8_t v56 = vpminq_s16(v54, v54);
  int16x8_t v57 = vpmaxq_s16(v55, v55);
  int16x8_t v58 = vpminq_s16(v56, v56);
  int16x8_t v59 = vmaxq_s16(v48, v57);
  int16x8_t v60 = vminq_s16(v49, v58);
  int16x8_t v61 = vzip1q_s16(v57, v58);
  int16x8_t v62 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v61)), (int8x16_t)vceqzq_s16(v61));
  int16x8_t v63 = vpmaxq_s16(v62, v62);
  int16x8_t v64 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v431, (int16x8_t)v432), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v431, (int16x8_t)v432), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = vpmaxq_s16(v64, v64);
  int16x8_t v67 = vpminq_s16(v65, v65);
  int16x8_t v68 = vpmaxq_s16(v66, v66);
  int16x8_t v69 = vpminq_s16(v67, v67);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(v59, v68);
  int16x8_t v71 = vminq_s16(v60, v69);
  int16x8_t v72 = vzip1q_s16(v68, v69);
  int16x8_t v73 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v72)), (int8x16_t)vceqzq_s16(v72));
  v69.i64[0] = -1;
  v69.i64[1] = -1;
  int16x8_t v74 = vpmaxq_s16(v73, v73);
  int8x16_t v75 = (int8x16_t)vmaxq_s16(vmaxq_s16(v41, v52), vmaxq_s16(v63, v74));
  int16x8_t v76 = vclzq_s16(vsubq_s16((int16x8_t)v70, v71));
  v37.i64[0] = 0xF000F000F000FLL;
  v37.i64[1] = 0xF000F000F000FLL;
  int16x8_t v77 = vsubq_s16(v37, v76);
  int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v39, v76);
  int8x16_t v79 = (int8x16_t)vsubq_s16(vshlq_s16(v69, v77), v71);
  int8x16_t v80 = (int8x16_t)vcgtq_s16((int16x8_t)v75, (int16x8_t)v78);
  int8x16_t v439 = vbslq_s8(v80, v78, v75);
  int8x16_t v440 = (int8x16_t)v71;
  int8x16_t v441 = v70;
  int8x16_t v442 = vandq_s8(v79, v80);
  v70.i64[0] = 0x8000800080008;
  v70.i64[1] = 0x8000800080008;
  int8x16_t v81 = vandq_s8(v80, v70);
  v82.i64[0] = 0x3000300030003;
  v82.i64[1] = 0x3000300030003;
  int16x8_t v83 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v41), (int16x8_t)v82), (int16x8_t)0);
  int8x16_t v84 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v52), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v63), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v439, v74), (int16x8_t)v82), (int16x8_t)0);
  int16x8_t v435 = vsubq_s16((int16x8_t)v439, v83);
  int16x8_t v436 = vsubq_s16((int16x8_t)v439, (int16x8_t)v84);
  int16x8_t v437 = vsubq_s16((int16x8_t)v439, v85);
  int16x8_t v438 = vsubq_s16((int16x8_t)v439, v86);
  int8x16_t v87 = (int8x16_t)vceqq_s16(vaddq_s16(v86, v85), vnegq_s16(vaddq_s16(v83, (int16x8_t)v84)));
  v84.i64[0] = 0x4000400040004;
  v84.i64[1] = 0x4000400040004;
  int8x16_t v88 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v439), v82), v81), vbicq_s8(v84, v87));
  int8x16_t v433 = (int8x16_t)v27;
  int8x16_t v434 = v88;
  if (vmaxvq_s16((int16x8_t)v439))
  {
    int16x8_t v417 = v21;
    int16x8_t v418 = v22;
    int16x8_t v419 = v23;
    int16x8_t v420 = v24;
    int16x8_t v421 = v25;
    int16x8_t v422 = v26;
    v89.i64[0] = 0x4000400040004;
    v89.i64[1] = 0x4000400040004;
    int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v423, (int16x8_t)vqtbl1q_s8(v423, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v425, (int16x8_t)vqtbl1q_s8(v425, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v92 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v427, (int16x8_t)vqtbl1q_s8(v427, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v428, (int16x8_t)vqtbl1q_s8(v428, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v429, (int16x8_t)vqtbl1q_s8(v429, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v430, (int16x8_t)vqtbl1q_s8(v430, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v431, (int16x8_t)vqtbl1q_s8(v431, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v432, (int16x8_t)vqtbl1q_s8(v432, (int8x16_t)xmmword_242EA76C0)), 6uLL), v28);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vpmaxq_s16(v100, v100);
    int16x8_t v103 = vpminq_s16(v101, v101);
    int16x8_t v104 = vmaxq_s16(v102, v35);
    int16x8_t v105 = vminq_s16(v103, v36);
    int16x8_t v106 = vzip1q_s16(v102, v103);
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v106)), (int8x16_t)vceqzq_s16(v106));
    int16x8_t v108 = vpmaxq_s16(v107, v107);
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v104, v113);
    int16x8_t v116 = vminq_s16(v105, v114);
    int16x8_t v117 = vzip1q_s16(v113, v114);
    int16x8_t v118 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v117)), (int8x16_t)vceqzq_s16(v117));
    int16x8_t v119 = vpmaxq_s16(v118, v118);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int16x8_t v127 = vminq_s16(v116, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v126, v135);
    int8x16_t v138 = (int8x16_t)vminq_s16(v127, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v39, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16(v108, v119), vmaxq_s16(v130, v141));
    int8x16_t v416 = (int8x16_t)v137;
    int16x8_t v143 = vclzq_s16(vsubq_s16(v137, (int16x8_t)v138));
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v39, v143);
    int8x16_t v145 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v142);
    v142.i64[0] = 0x18001800180018;
    v142.i64[1] = 0x18001800180018;
    int8x16_t v147 = vbslq_s8(v145, v142, v39);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v108), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v119), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v130), (int16x8_t)v82), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v141), (int16x8_t)v82), (int16x8_t)0);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v146, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v146, v149);
    int8x16_t v154 = (int8x16_t)vsubq_s16((int16x8_t)v146, v150);
    int8x16_t v155 = (int8x16_t)vsubq_s16((int16x8_t)v146, v151);
    int8x16_t v156 = vbicq_s8(v89, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v89.i64[0] = 0x7000700070007;
    v89.i64[1] = 0x7000700070007;
    v157.i64[0] = 0x8000800080008;
    v157.i64[1] = 0x8000800080008;
    int8x16_t v158 = v439;
    int16x8_t v159 = (int16x8_t)vandq_s8(v88, v82);
    v160.i64[0] = 0x2000200020002;
    v160.i64[1] = 0x2000200020002;
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v159, v160), v39);
    int16x8_t v162 = v435;
    int16x8_t v163 = v436;
    int16x8_t v164 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v439, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v81, v157))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v157)), v161);
    int16x8_t v166 = v437;
    int16x8_t v165 = v438;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v164, v435, (int16x8_t)v89), vshlq_n_s16(vaddq_s16(vaddq_s16(v437, v436), v438), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v146, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v156, (int16x8_t)v156)), (int16x8_t)v152, (int16x8_t)v89), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v154, (int16x8_t)v153), (int16x8_t)v155), 3uLL))), 0);
    int v168 = (unsigned __int16)vaddvq_s16((int16x8_t)v167);
    BOOL v170 = a5 < 4 || a6 < 2;
    if (v168)
    {
      v171.i64[0] = 0x3000300030003;
      v171.i64[1] = 0x3000300030003;
      int8x16_t v423 = vbslq_s8(v167, v90, v423);
      int8x16_t v425 = vbslq_s8(v167, v91, v425);
      int8x16_t v172 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v146), v171), v147), v156);
      v173.i64[0] = 0xF000F000F000FLL;
      v173.i64[1] = 0xF000F000F000FLL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int8x16_t v427 = vbslq_s8(v167, v92, v427);
      int8x16_t v428 = vbslq_s8(v167, v93, v428);
      int8x16_t v429 = vbslq_s8(v167, v94, v429);
      int8x16_t v430 = vbslq_s8(v167, v95, v430);
      int8x16_t v431 = vbslq_s8(v167, v96, v431);
      int8x16_t v432 = vbslq_s8(v167, v97, v432);
      int16x8_t v162 = (int16x8_t)vbslq_s8(v167, v152, (int8x16_t)v435);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v167, v153, (int8x16_t)v436);
      int16x8_t v435 = v162;
      int16x8_t v436 = v163;
      int16x8_t v166 = (int16x8_t)vbslq_s8(v167, v154, (int8x16_t)v437);
      int16x8_t v165 = (int16x8_t)vbslq_s8(v167, v155, (int8x16_t)v438);
      int16x8_t v437 = v166;
      int16x8_t v438 = v165;
      int8x16_t v441 = vbslq_s8(v167, v416, v441);
      int8x16_t v442 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v171, vsubq_s16(v173, v143)), (int16x8_t)v138), v145), v442);
      int8x16_t v158 = vbslq_s8(v167, v146, v439);
      int8x16_t v439 = v158;
      int8x16_t v440 = vbslq_s8(v167, v138, v440);
      int8x16_t v88 = vbslq_s8(v167, v172, v88);
      int8x16_t v433 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v433, (int16x8_t)vqtbl1q_s8(v433, (int8x16_t)xmmword_242EA76C0)), v433);
      int8x16_t v434 = v88;
    }
    int16x8_t v174 = v421;
    int16x8_t v175 = v419;
    int16x8_t v176 = v417;
    if (!v170)
    {
      int16x8_t v177 = vsubq_s16(v19, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v178 = v418;
      v178.i32[3] = v20.i32[3];
      int16x8_t v179 = vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v180 = v420;
      v180.i32[3] = v20.i32[3];
      int16x8_t v181 = v422;
      v181.i32[3] = v20.i32[3];
      int16x8_t v182 = v179;
      v182.i32[3] = v177.i32[0];
      v177.i32[0] = v179.i32[3];
      int16x8_t v183 = vshlq_n_s16(v182, 6uLL);
      v184.i64[0] = 0x5000500050005;
      v184.i64[1] = 0x5000500050005;
      int8x16_t v185 = (int8x16_t)vshlq_s16(vshlq_n_s16(v177, 6uLL), v184);
      int8x16_t v186 = (int8x16_t)vshlq_s16(v183, v184);
      int8x16_t v187 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v417, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v176.i8, (int8x16_t)xmmword_242EA7590)), 6uLL), v184);
      int8x16_t v188 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v418, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v176.i8, (int8x16_t)xmmword_242EA7630)), 6uLL), v184);
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v419, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7640)), 6uLL), v184);
      int8x16_t v190 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v420, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7570)), 6uLL), v184);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v421, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7650)), 6uLL), v184);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v422, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7570)), 6uLL), v184);
      int16x8_t v193 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v185, (int16x8_t)v186), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v194 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v185, (int16x8_t)v186), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v195 = vpmaxq_s16(v193, v193);
      int16x8_t v196 = vpminq_s16(v194, v194);
      int16x8_t v197 = vpmaxq_s16(v195, v195);
      int16x8_t v198 = vpminq_s16(v196, v196);
      v199.i64[0] = 0x8000800080008000;
      v199.i64[1] = 0x8000800080008000;
      int16x8_t v200 = vmaxq_s16(v197, v199);
      v199.i64[0] = 0x8000800080008000;
      v199.i64[1] = 0x8000800080008000;
      int16x8_t v201 = vminq_s16(v198, v199);
      int16x8_t v202 = vzip1q_s16(v197, v198);
      v199.i64[0] = 0x10001000100010;
      v199.i64[1] = 0x10001000100010;
      int16x8_t v203 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v202)), (int8x16_t)vceqzq_s16(v202));
      int16x8_t v204 = vpmaxq_s16(v203, v203);
      int16x8_t v205 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v207 = vpmaxq_s16(v205, v205);
      int16x8_t v208 = vpminq_s16(v206, v206);
      int16x8_t v209 = vpmaxq_s16(v207, v207);
      int16x8_t v210 = vpminq_s16(v208, v208);
      int16x8_t v211 = vmaxq_s16(v200, v209);
      int16x8_t v212 = vminq_s16(v201, v210);
      int16x8_t v213 = vzip1q_s16(v209, v210);
      int16x8_t v214 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v213)), (int8x16_t)vceqzq_s16(v213));
      int16x8_t v215 = vpmaxq_s16(v214, v214);
      int16x8_t v216 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v218 = vpmaxq_s16(v216, v216);
      int16x8_t v219 = vpminq_s16(v217, v217);
      int16x8_t v220 = vpmaxq_s16(v218, v218);
      int16x8_t v221 = vpminq_s16(v219, v219);
      int16x8_t v222 = vmaxq_s16(v211, v220);
      int16x8_t v223 = vzip1q_s16(v220, v221);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int16x8_t v230 = vpmaxq_s16(v228, v228);
      int16x8_t v231 = vpminq_s16(v229, v229);
      int8x16_t v232 = (int8x16_t)vmaxq_s16(v222, v230);
      int8x16_t v233 = (int8x16_t)vminq_s16(vminq_s16(v212, v221), v231);
      int16x8_t v234 = vzip1q_s16(v230, v231);
      int16x8_t v235 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v199, vclsq_s16(v234)), (int8x16_t)vceqzq_s16(v234));
      int8x16_t v236 = (int8x16_t)vpmaxq_s16(v235, v235);
      int8x16_t v237 = (int8x16_t)vmaxq_s16(vmaxq_s16(v204, v215), vmaxq_s16(v225, (int16x8_t)v236));
      int16x8_t v238 = vclzq_s16(vsubq_s16((int16x8_t)v232, (int16x8_t)v233));
      int8x16_t v239 = (int8x16_t)vsubq_s16(v199, v238);
      int8x16_t v240 = (int8x16_t)vcgtq_s16((int16x8_t)v237, (int16x8_t)v239);
      int8x16_t v241 = vbslq_s8(v240, v239, v237);
      v242.i64[0] = 0x3000300030003;
      v242.i64[1] = 0x3000300030003;
      int16x8_t v243 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v204), v242), (int16x8_t)0);
      int16x8_t v244 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v215), v242), (int16x8_t)0);
      int16x8_t v245 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v225), v242), (int16x8_t)0);
      int16x8_t v246 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, (int16x8_t)v236), v242), (int16x8_t)0);
      int8x16_t v247 = (int8x16_t)vsubq_s16((int16x8_t)v241, v243);
      int8x16_t v248 = (int8x16_t)vsubq_s16((int16x8_t)v241, v244);
      int8x16_t v249 = (int8x16_t)vsubq_s16((int16x8_t)v241, v245);
      int8x16_t v250 = (int8x16_t)vsubq_s16((int16x8_t)v241, v246);
      v236.i64[0] = 0x4000400040004;
      v236.i64[1] = 0x4000400040004;
      int8x16_t v251 = vbicq_s8(v236, (int8x16_t)vceqq_s16(vaddq_s16(v246, v245), vnegq_s16(vaddq_s16(v243, v244))));
      v252.i64[0] = 0x7000700070007;
      v252.i64[1] = 0x7000700070007;
      int16x8_t v253 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v239, v240), vaddq_s16((int16x8_t)v251, (int16x8_t)v251)), (int16x8_t)v247, v252), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v249, (int16x8_t)v248), (int16x8_t)v250), 3uLL));
      v239.i64[0] = 0x8000800080008;
      v239.i64[1] = 0x8000800080008;
      int8x16_t v88 = v434;
      int16x8_t v162 = v435;
      v254.i64[0] = 0x2000200020002;
      v254.i64[1] = 0x2000200020002;
      int16x8_t v255 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v434, (int8x16_t)v242), (int16x8_t)v254), (int8x16_t)v199);
      int16x8_t v165 = v438;
      int8x16_t v158 = v439;
      int16x8_t v256 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v439, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v434, v239))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v239)), v255);
      int16x8_t v163 = v436;
      int16x8_t v166 = v437;
      int8x16_t v257 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v256, v435, v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v437, v436), v438), 3uLL)), v253), 0);
      if (vaddvq_s16((int16x8_t)v257))
      {
        v258.i64[0] = 0x9000900090009;
        v258.i64[1] = 0x9000900090009;
        int8x16_t v423 = vbslq_s8(v257, v185, v423);
        int8x16_t v425 = vbslq_s8(v257, v186, v425);
        v259.i64[0] = -1;
        v259.i64[1] = -1;
        int8x16_t v427 = vbslq_s8(v257, v187, v427);
        int8x16_t v428 = vbslq_s8(v257, v188, v428);
        v260.i64[0] = 0xF000F000F000FLL;
        v260.i64[1] = 0xF000F000F000FLL;
        int8x16_t v429 = vbslq_s8(v257, v189, v429);
        int8x16_t v430 = vbslq_s8(v257, v190, v430);
        int8x16_t v431 = vbslq_s8(v257, v191, v431);
        int8x16_t v432 = vbslq_s8(v257, v192, v432);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v257, v247, (int8x16_t)v435);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v257, v248, (int8x16_t)v436);
        int16x8_t v435 = v162;
        int16x8_t v436 = v163;
        int16x8_t v166 = (int16x8_t)vbslq_s8(v257, v249, (int8x16_t)v437);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v257, v250, (int8x16_t)v438);
        int16x8_t v437 = v166;
        int16x8_t v438 = v165;
        int8x16_t v441 = vbslq_s8(v257, v232, v441);
        int8x16_t v442 = vbslq_s8(v257, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v259, vsubq_s16(v260, v238)), (int16x8_t)v233), v240), v442);
        int8x16_t v158 = vbslq_s8(v257, v241, v439);
        int8x16_t v439 = v158;
        int8x16_t v440 = vbslq_s8(v257, v233, v440);
        int8x16_t v88 = vbslq_s8(v257, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v241), v254), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v240, v258), (int16x8_t)vmvnq_s8(v240))), v251), v434);
        int8x16_t v433 = vbslq_s8(v257, vextq_s8(v20, v20, 0xCuLL), v433);
        int8x16_t v434 = v88;
      }
    }
    int16x8_t v261 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v162));
    int8x16_t v424 = (int8x16_t)vaddq_s16(v261, (int16x8_t)v423);
    int8x16_t v426 = (int8x16_t)vaddq_s16((int16x8_t)v425, v261);
    int16x8_t v262 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v163));
    int8x16_t v427 = (int8x16_t)vaddq_s16((int16x8_t)v427, v262);
    int8x16_t v428 = (int8x16_t)vaddq_s16((int16x8_t)v428, v262);
    int16x8_t v263 = (int16x8_t)vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v166));
    int8x16_t v429 = (int8x16_t)vaddq_s16((int16x8_t)v429, v263);
    int8x16_t v430 = (int8x16_t)vaddq_s16((int16x8_t)v430, v263);
    int8x16_t v264 = vandq_s8(v442, (int8x16_t)vceqq_s16((int16x8_t)v158, v165));
    int8x16_t v431 = (int8x16_t)vaddq_s16((int16x8_t)v431, (int16x8_t)v264);
    int8x16_t v432 = (int8x16_t)vaddq_s16((int16x8_t)v432, (int16x8_t)v264);
    v264.i64[0] = 0x8000800080008;
    v264.i64[1] = 0x8000800080008;
    v265.i64[0] = 0x3000300030003;
    v265.i64[1] = 0x3000300030003;
    v266.i64[0] = 0x2000200020002;
    v266.i64[1] = 0x2000200020002;
    int8x16_t v267 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v265), v266);
    v266.i64[0] = 0x10001000100010;
    v266.i64[1] = 0x10001000100010;
    int16x8_t v268 = (int16x8_t)vandq_s8(v267, (int8x16_t)v266);
    v266.i64[0] = 0x7000700070007;
    v266.i64[1] = 0x7000700070007;
    int16x8_t v269 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v158, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v88, v264))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v264)), v268), v162, v266), vshlq_n_s16(vaddq_s16(v166, vaddq_s16(v163, v165)), 3uLL));
    if ((unint64_t)(vpaddq_s16(v269, v269).i16[0] - 347) < 0xFFFFFFFFFFFFFE78)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint32x4_t *)a3, a4, a5, a6, a7);
      return 48;
    }
    else
    {
      int v270 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v271 = 8 * (a1 & 7);
      if (v271) {
        uint64_t v272 = *v270 & ~(-1 << v271);
      }
      else {
        uint64_t v272 = 0;
      }
      *a2 = 0;
      uint64_t v275 = ((v158.i16[0] << 10) + 15360) & 0x3C00;
      if (!v158.i16[0]) {
        uint64_t v275 = 0;
      }
      if (v158.i16[1]) {
        uint64_t v276 = ((v158.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v276 = 0;
      }
      unint64_t v277 = v275 | v276 | v88.i8[0] & 0x1F | (32 * (v88.i8[2] & 0x1Fu));
      unint64_t v278 = v433.i16[0] & 0x3FF | ((unint64_t)(v433.i16[1] & 0x3FF) << 10);
      uint64_t v279 = (v277 << v271) | v272;
      if (v271 >= 0x2E)
      {
        *int v270 = v279;
        uint64_t v279 = v277 >> (-8 * (a1 & 7u));
      }
      unint64_t v280 = (v271 + 18) & 0x3A;
      unint64_t v281 = v279 | (v278 << v280);
      if (v280 >= 0x2C)
      {
        *(void *)((char *)v270 + (((v271 + 18) >> 3) & 8)) = v281;
        unint64_t v281 = v278 >> -(char)v280;
      }
      unint64_t v282 = v271 + 38;
      int8x16_t v283 = (int8x16_t)vsubq_s16((int16x8_t)v439, v435);
      int8x16_t v284 = (int8x16_t)vsubq_s16((int16x8_t)v439, v436);
      int8x16_t v285 = (int8x16_t)vsubq_s16((int16x8_t)v439, v437);
      int8x16_t v286 = (int8x16_t)vsubq_s16((int16x8_t)v439, v438);
      *(uint8x8_t *)v283.i8 = vqmovn_u16((uint16x8_t)v283);
      *(uint8x8_t *)v284.i8 = vqmovn_u16((uint16x8_t)v284);
      *(uint8x8_t *)v285.i8 = vqmovn_u16((uint16x8_t)v285);
      *(uint8x8_t *)v286.i8 = vqmovn_u16((uint16x8_t)v286);
      v286.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v283, v284), (int16x8_t)vzip1q_s8(v285, v286)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v283, v284), (int16x8_t)vtrn2q_s8(v285, v286))).u64[0];
      v284.i64[0] = 0x202020202020202;
      v284.i64[1] = 0x202020202020202;
      int8x16_t v287 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v434.i8, (int8x8_t)0x4000400040004)))), v284);
      v284.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v284.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v285, (uint8x16_t)vorrq_s8(v287, v284)), (int8x16_t)v286.u64[0]);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v287.i8);
      uint16x8_t v290 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vmovl_high_u8(v288));
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16(v289, (int16x8_t)vmovl_high_u8((uint8x16_t)v287));
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16(v291);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      uint64_t v302 = (v271 + 38) & 0x3E;
      unint64_t v303 = (v300.i64[0] << v302) | v281;
      if ((unint64_t)(v301.i64[0] + v302) >= 0x40)
      {
        *(void *)((char *)v270 + ((v282 >> 3) & 8)) = v303;
        unint64_t v303 = (unint64_t)v300.i64[0] >> -(char)v302;
      }
      unint64_t v304 = v301.i64[0] + v282;
      unint64_t v305 = v303 | (v300.i64[1] << v304);
      if ((v304 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v304 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v300.i64[1] >> -(v304 & 0x3F);
        if ((v304 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      unint64_t v306 = v304 + v301.i64[1];
      v307.i64[0] = 0x8000800080008;
      v307.i64[1] = 0x8000800080008;
      v308.i64[0] = -1;
      v308.i64[1] = -1;
      int16x8_t v309 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v434, v307), (int8x16_t)0, 0xCuLL), v439);
      v310.i64[0] = 0xF000F000F000FLL;
      v310.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v311 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v308, (uint16x8_t)vaddq_s16(v309, v310)), v442);
      int32x4_t v312 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v309.i8);
      int32x4_t v313 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v311.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v312)), (int32x4_t)vmovl_high_u16(v311));
      int32x4_t v314 = vpaddq_s32(v312, (int32x4_t)vmovl_high_u16((uint16x8_t)v309));
      v315.i64[0] = v313.u32[0];
      v315.i64[1] = v313.u32[1];
      uint64x2_t v316 = (uint64x2_t)v315;
      v315.i64[0] = v313.u32[2];
      v315.i64[1] = v313.u32[3];
      uint64x2_t v317 = (uint64x2_t)v315;
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      int64x2_t v318 = v315;
      v315.i64[0] = v314.u32[2];
      v315.i64[1] = v314.u32[3];
      int64x2_t v319 = vpaddq_s64((int64x2_t)vshlq_u64(v316, (uint64x2_t)vzip1q_s64((int64x2_t)0, v318)), (int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)));
      int64x2_t v320 = vpaddq_s64(v318, v315);
      unint64_t v321 = (v319.i64[0] << v306) | v305;
      if (v320.i64[0] + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v319.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v321 = 0;
        }
      }
      unint64_t v322 = v320.i64[0] + v306;
      unint64_t v323 = v321 | (v319.i64[1] << v322);
      if ((v322 & 0x3F) + v320.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v322 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        unint64_t v323 = (unint64_t)v319.i64[1] >> -(v322 & 0x3F);
        if ((v322 & 0x3F) == 0) {
          unint64_t v323 = 0;
        }
      }
      unint64_t v324 = v322 + v320.i64[1];
      int16x8_t v325 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v435, 0xCuLL);
      v326.i64[0] = 0xF000F000F000FLL;
      v326.i64[1] = 0xF000F000F000FLL;
      v327.i64[0] = -1;
      v327.i64[1] = -1;
      uint16x8_t v328 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v327, (uint16x8_t)vaddq_s16(v325, v326)), v424);
      int32x4_t v329 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v325.i8);
      int32x4_t v330 = (int32x4_t)vmovl_high_u16((uint16x8_t)v325);
      int32x4_t v331 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v328.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)), (int32x4_t)vshlq_u32(vmovl_high_u16(v328), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)));
      int32x4_t v332 = vpaddq_s32(v329, v330);
      v333.i64[0] = v331.u32[0];
      v333.i64[1] = v331.u32[1];
      uint64x2_t v334 = (uint64x2_t)v333;
      v333.i64[0] = v331.u32[2];
      v333.i64[1] = v331.u32[3];
      uint64x2_t v335 = (uint64x2_t)v333;
      v333.i64[0] = v332.u32[0];
      v333.i64[1] = v332.u32[1];
      int64x2_t v336 = v333;
      v333.i64[0] = v332.u32[2];
      v333.i64[1] = v332.u32[3];
      int64x2_t v337 = vpaddq_s64((int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v336)), (int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v333)));
      int64x2_t v338 = vpaddq_s64(v336, v333);
      unint64_t v339 = (v337.i64[0] << v324) | v323;
      if (v338.i64[0] + (v324 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v324 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
        unint64_t v339 = (unint64_t)v337.i64[0] >> -(v324 & 0x3F);
        if ((v324 & 0x3F) == 0) {
          unint64_t v339 = 0;
        }
      }
      unint64_t v340 = v338.i64[0] + v324;
      unint64_t v341 = v339 | (v337.i64[1] << v340);
      if ((v340 & 0x3F) + v338.i64[1] >= 0x40)
      {
        *(void *)((char *)v270 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
        unint64_t v341 = (unint64_t)v337.i64[1] >> -(v340 & 0x3F);
        if ((v340 & 0x3F) == 0) {
          unint64_t v341 = 0;
        }
      }
      unint64_t v342 = v340 + v338.i64[1];
      v343.i64[0] = 0xF000F000F000FLL;
      v343.i64[1] = 0xF000F000F000FLL;
      v344.i64[0] = -1;
      v344.i64[1] = -1;
      uint16x8_t v345 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v344, (uint16x8_t)vaddq_s16(v435, v343)), v426);
      int32x4_t v346 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v435.i8);
      int32x4_t v347 = (int32x4_t)vmovl_high_u16((uint16x8_t)v435);
      int32x4_t v348 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v345.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)), (int32x4_t)vshlq_u32(vmovl_high_u16(v345), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)));
      int32x4_t v349 = vpaddq_s32(v346, v347);
      v350.i64[0] = v348.u32[0];
      v350.i64[1] = v348.u32[1];
      uint64x2_t v351 = (uint64x2_t)v350;
      v350.i64[0] = v348.u32[2];
      v350.i64[1] = v348.u32[3];
      uint64x2_t v352 = (uint64x2_t)v350;
      v350.i64[0] = v349.u32[0];
      v350.i64[1] = v349.u32[1];
      int64x2_t v353 = v350;
      v350.i64[0] = v349.u32[2];
      v350.i64[1] = v349.u32[3];
      int64x2_t v354 = vpaddq_s64((int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v353)), (int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v350)));
      int64x2_t v355 = vpaddq_s64(v353, v350);
      unint64_t v356 = (v354.i64[0] << v342) | v341;
      if (v355.i64[0] + (v342 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v270 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
        if ((v342 & 0x3F) != 0) {
          unint64_t v356 = (unint64_t)v354.i64[0] >> -(v342 & 0x3F);
        }
        else {
          unint64_t v356 = 0;
        }
      }
      uint64_t v357 = v355.i64[1];
      unint64_t v358 = v355.i64[0] + v342;
      uint64_t v359 = (v355.i64[0] + v342) & 0x3F;
      unint64_t v360 = v356 | (v354.i64[1] << v358);
      if ((unint64_t)(v359 + v355.i64[1]) >= 0x40)
      {
        *(void *)((char *)v270 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
        unint64_t v360 = (unint64_t)v354.i64[1] >> -(char)v359;
        if (!v359) {
          unint64_t v360 = 0;
        }
      }
      uint64_t v361 = 0;
      v362.i64[0] = 0xF000F000F000FLL;
      v362.i64[1] = 0xF000F000F000FLL;
      v363.i64[0] = -1;
      v363.i64[1] = -1;
      unint64_t v364 = v358 + v357;
      char v365 = 1;
      do
      {
        char v366 = v365;
        uint16x8_t v367 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v363, (uint16x8_t)vaddq_s16(v436, v362)), *(&v427 + v361));
        int32x4_t v368 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v436.i8);
        int32x4_t v369 = (int32x4_t)vmovl_high_u16((uint16x8_t)v436);
        int32x4_t v370 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v367.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v368)), (int32x4_t)vshlq_u32(vmovl_high_u16(v367), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v369)));
        int32x4_t v371 = vpaddq_s32(v368, v369);
        v372.i64[0] = v370.u32[0];
        v372.i64[1] = v370.u32[1];
        uint64x2_t v373 = (uint64x2_t)v372;
        v372.i64[0] = v370.u32[2];
        v372.i64[1] = v370.u32[3];
        uint64x2_t v374 = (uint64x2_t)v372;
        v372.i64[0] = v371.u32[0];
        v372.i64[1] = v371.u32[1];
        int64x2_t v375 = v372;
        v372.i64[0] = v371.u32[2];
        v372.i64[1] = v371.u32[3];
        int64x2_t v376 = vpaddq_s64((int64x2_t)vshlq_u64(v373, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)), (int64x2_t)vshlq_u64(v374, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)));
        int64x2_t v377 = vpaddq_s64(v375, v372);
        unint64_t v378 = (v376.i64[0] << v364) | v360;
        if (v377.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v378;
          unint64_t v378 = (unint64_t)v376.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v378 = 0;
          }
        }
        unint64_t v379 = v377.i64[0] + v364;
        unint64_t v360 = v378 | (v376.i64[1] << v379);
        if ((v379 & 0x3F) + v377.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v376.i64[1] >> -(v379 & 0x3F);
          if ((v379 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v365 = 0;
        unint64_t v364 = v379 + v377.i64[1];
        uint64_t v361 = 1;
      }
      while ((v366 & 1) != 0);
      uint64_t v380 = 0;
      char v381 = 1;
      v382.i64[0] = 0xF000F000F000FLL;
      v382.i64[1] = 0xF000F000F000FLL;
      v383.i64[0] = -1;
      v383.i64[1] = -1;
      do
      {
        char v384 = v381;
        uint16x8_t v385 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v383, (uint16x8_t)vaddq_s16(v437, v382)), *(&v429 + v380));
        int32x4_t v386 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v437.i8);
        int32x4_t v387 = (int32x4_t)vmovl_high_u16((uint16x8_t)v437);
        int32x4_t v388 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v385.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v386)), (int32x4_t)vshlq_u32(vmovl_high_u16(v385), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)));
        int32x4_t v389 = vpaddq_s32(v386, v387);
        v390.i64[0] = v388.u32[0];
        v390.i64[1] = v388.u32[1];
        uint64x2_t v391 = (uint64x2_t)v390;
        v390.i64[0] = v388.u32[2];
        v390.i64[1] = v388.u32[3];
        uint64x2_t v392 = (uint64x2_t)v390;
        v390.i64[0] = v389.u32[0];
        v390.i64[1] = v389.u32[1];
        int64x2_t v393 = v390;
        v390.i64[0] = v389.u32[2];
        v390.i64[1] = v389.u32[3];
        int64x2_t v394 = vpaddq_s64((int64x2_t)vshlq_u64(v391, (uint64x2_t)vzip1q_s64((int64x2_t)0, v393)), (int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)));
        int64x2_t v395 = vpaddq_s64(v393, v390);
        unint64_t v396 = (v394.i64[0] << v364) | v360;
        if (v395.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v396;
          unint64_t v396 = (unint64_t)v394.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v396 = 0;
          }
        }
        unint64_t v397 = v395.i64[0] + v364;
        unint64_t v360 = v396 | (v394.i64[1] << v397);
        if ((v397 & 0x3F) + v395.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v397 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v394.i64[1] >> -(v397 & 0x3F);
          if ((v397 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v381 = 0;
        unint64_t v364 = v397 + v395.i64[1];
        uint64_t v380 = 1;
      }
      while ((v384 & 1) != 0);
      uint64_t v398 = 0;
      char v399 = 1;
      v400.i64[0] = 0xF000F000F000FLL;
      v400.i64[1] = 0xF000F000F000FLL;
      v401.i64[0] = -1;
      v401.i64[1] = -1;
      do
      {
        char v402 = v399;
        uint16x8_t v403 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v401, (uint16x8_t)vaddq_s16(v438, v400)), *(&v431 + v398));
        int32x4_t v404 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v438.i8);
        int32x4_t v405 = (int32x4_t)vmovl_high_u16((uint16x8_t)v438);
        int32x4_t v406 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v403.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v404)), (int32x4_t)vshlq_u32(vmovl_high_u16(v403), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v405)));
        int32x4_t v407 = vpaddq_s32(v404, v405);
        v408.i64[0] = v406.u32[0];
        v408.i64[1] = v406.u32[1];
        uint64x2_t v409 = (uint64x2_t)v408;
        v408.i64[0] = v406.u32[2];
        v408.i64[1] = v406.u32[3];
        uint64x2_t v410 = (uint64x2_t)v408;
        v408.i64[0] = v407.u32[0];
        v408.i64[1] = v407.u32[1];
        int64x2_t v411 = v408;
        v408.i64[0] = v407.u32[2];
        v408.i64[1] = v407.u32[3];
        int64x2_t v412 = vpaddq_s64((int64x2_t)vshlq_u64(v409, (uint64x2_t)vzip1q_s64((int64x2_t)0, v411)), (int64x2_t)vshlq_u64(v410, (uint64x2_t)vzip1q_s64((int64x2_t)0, v408)));
        int64x2_t v413 = vpaddq_s64(v411, v408);
        unint64_t v414 = (v412.i64[0] << v364) | v360;
        if (v413.i64[0] + (v364 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v414;
          unint64_t v414 = (unint64_t)v412.i64[0] >> -(v364 & 0x3F);
          if ((v364 & 0x3F) == 0) {
            unint64_t v414 = 0;
          }
        }
        unint64_t v415 = v413.i64[0] + v364;
        unint64_t v360 = v414 | (v412.i64[1] << v415);
        if ((v415 & 0x3F) + v413.i64[1] >= 0x40)
        {
          *(void *)((char *)v270 + ((v415 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v412.i64[1] >> -(v415 & 0x3F);
          if ((v415 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        char v399 = 0;
        unint64_t v364 = v415 + v413.i64[1];
        uint64_t v398 = 1;
      }
      while ((v402 & 1) != 0);
      if ((v364 & 0x3F) != 0) {
        *(void *)((char *)v270 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
      }
      unint64_t result = (v364 - v271 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    unsigned int v273 = ((unsigned __int32)a3->i32[0] >> 12) & 0xFFFFFC00 | ((unsigned __int16)a3->i32[0] >> 6);
    *(unsigned char *)(a1 + 2) = (unsigned __int32)a3->i32[0] >> 28;
    *(_WORD *)a1 = v273;
    *a2 = 2;
    return 3;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v11 = a6;
  if (a5 > 3)
  {
    uint64_t v14 = a5 & 0xFC;
    if (a5 == v14)
    {
      uint64_t v15 = 0;
      int64x2_t v16 = &v64;
      do
      {
        int64x2_t v17 = (unsigned __int32 *)v16;
        int16x8_t v18 = a3;
        uint64_t v19 = a5;
        do
        {
          uint32x4_t v20 = *v18++;
          uint32x4_t v21 = vshrq_n_u32(v20, 6uLL);
          *(v17 - 8) = v21.i32[0] & 0xFFFF03FF;
          *(v17 - 4) = v21.i32[1] & 0xFFFF03FF;
          *int64x2_t v17 = v21.i32[2] & 0xFFFF03FF;
          v17[4] = v21.i32[3] & 0xFFFF03FF;
          v17 += 16;
          v19 -= 4;
        }
        while (v19);
        ++v15;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int64x2_t v16 = (long long *)((char *)v16 + 4);
      }
      while (v15 != a6);
    }
    else
    {
      uint64_t v22 = 0;
      int16x8_t v23 = &v62;
      int16x8_t v24 = &v64;
      do
      {
        int16x8_t v25 = (unsigned __int32 *)v24;
        int16x8_t v26 = a3;
        uint64_t v27 = a5 & 0xFC;
        do
        {
          uint32x4_t v28 = *v26++;
          uint32x4_t v29 = vshrq_n_u32(v28, 6uLL);
          *(v25 - 8) = v29.i32[0] & 0xFFFF03FF;
          *(v25 - 4) = v29.i32[1] & 0xFFFF03FF;
          *int16x8_t v25 = v29.i32[2] & 0xFFFF03FF;
          v25[4] = v29.i32[3] & 0xFFFF03FF;
          v25 += 16;
          v27 -= 4;
        }
        while (v27);
        uint64_t v30 = v14;
        uint64_t v31 = a5 - v14;
        do
        {
          LODWORD(v23[v30]) = ((unsigned __int32)a3->i32[v30] >> 6) & 0x3FF03FF;
          ++v30;
          --v31;
        }
        while (v31);
        ++v22;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int16x8_t v24 = (long long *)((char *)v24 + 4);
        int16x8_t v23 = (long long *)((char *)v23 + 4);
      }
      while (v22 != a6);
    }
  }
  else
  {
    int16x8_t v12 = &a3->i32[2];
    int16x8_t v13 = (int *)&v63;
    do
    {
      *(v13 - 4) = (*(v12 - 2) >> 6) & 0x3FF03FF;
      if (a5 != 1)
      {
        *int16x8_t v13 = (*(v12 - 1) >> 6) & 0x3FF03FF;
        if (a5 != 2) {
          v13[4] = (*v12 >> 6) & 0x3FF03FF;
        }
      }
      int16x8_t v12 = (__int32 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  int v46 = (unsigned __int16)v62;
  int v47 = WORD1(v62);
  int v48 = (unsigned __int16)v63;
  int v49 = WORD1(v63);
  int v50 = WORD2(v62);
  int v51 = WORD3(v62);
  int v52 = WORD2(v63);
  int v53 = WORD3(v63);
  int v54 = (unsigned __int16)v64;
  int v55 = WORD1(v64);
  int v56 = (unsigned __int16)v65;
  int v57 = WORD1(v65);
  int v58 = WORD2(v64);
  int v59 = WORD3(v64);
  if (a5 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = a5;
  }
  if (a5 >= 4) {
    unsigned int v33 = a5 - 4;
  }
  else {
    unsigned int v33 = 0;
  }
  int v60 = WORD2(v65);
  int v61 = WORD3(v65);
  if (a6 >= 2) {
    unsigned int v34 = 2;
  }
  else {
    unsigned int v34 = a6;
  }
  if (a6 >= 2) {
    unsigned int v35 = a6 - 2;
  }
  else {
    unsigned int v35 = 0;
  }
  char v36 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v46, a7, v32, v34);
  int v46 = WORD4(v62);
  int v47 = WORD5(v62);
  int v48 = WORD4(v63);
  int v49 = WORD5(v63);
  int v50 = WORD6(v62);
  int v51 = HIWORD(v62);
  int v52 = WORD6(v63);
  int v53 = HIWORD(v63);
  int v54 = WORD4(v64);
  int v55 = WORD5(v64);
  int v56 = WORD4(v65);
  int v57 = WORD5(v65);
  int v58 = WORD6(v64);
  int v59 = HIWORD(v64);
  int v60 = WORD6(v65);
  int v61 = HIWORD(v65);
  if (a6 >= 4) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = v35;
  }
  int v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 12, (uint64_t)&v46, a7, v32, v37);
  int v46 = (unsigned __int16)v66;
  int v47 = WORD1(v66);
  int v48 = (unsigned __int16)v67;
  int v49 = WORD1(v67);
  int v50 = WORD2(v66);
  int v51 = WORD3(v66);
  int v52 = WORD2(v67);
  int v53 = WORD3(v67);
  int v54 = (unsigned __int16)v68;
  int v55 = WORD1(v68);
  int v56 = (unsigned __int16)v69;
  int v57 = WORD1(v69);
  int v58 = WORD2(v68);
  int v59 = WORD3(v68);
  if (a5 >= 8) {
    unsigned int v39 = 4;
  }
  else {
    unsigned int v39 = v33;
  }
  int v60 = WORD2(v69);
  int v61 = WORD3(v69);
  int v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v46, a7, v39, v34);
  int v46 = WORD4(v66);
  int v47 = WORD5(v66);
  int v48 = WORD4(v67);
  int v49 = WORD5(v67);
  int v50 = WORD6(v66);
  int v51 = HIWORD(v66);
  int v52 = WORD6(v67);
  int v53 = HIWORD(v67);
  int v54 = WORD4(v68);
  int v55 = WORD5(v68);
  int v56 = WORD4(v69);
  int v57 = WORD5(v69);
  int v58 = WORD6(v68);
  int v59 = HIWORD(v68);
  int v60 = WORD6(v69);
  int v61 = HIWORD(v69);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 36, (uint64_t)&v46, a7, v39, v37);
  if (v40) {
    char v42 = 4;
  }
  else {
    char v42 = 0;
  }
  if (v38) {
    char v43 = 2;
  }
  else {
    char v43 = 0;
  }
  if (result) {
    char v44 = -8;
  }
  else {
    char v44 = -16;
  }
  *a2 = v44 | v42 | v36 | v43;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v273 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v237 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v236 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v235 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v234 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v232 = v7;
  BOOL v233 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v231 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::compBits[v6];
    *(&v271 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(int *)((char *)&v248 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v247[v17 + 2] = v18;
    uint64_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint32x4_t v21 = (unsigned int *)((char *)&v251 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint32x4_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint32x4_t v21 = (unsigned int *)((char *)&v251 + v17 * 4);
      *uint32x4_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint32x4_t v21 = (unsigned int *)((char *)&v251 + v17 * 4);
      *uint32x4_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint32x4_t v29 = &v269[v17 + 2];
    v269[v6 + 2] = v20;
    v270[v6] = v20;
    v269[v6] = 0;
    if (v231)
    {
      unsigned int v30 = v20;
      if (v233) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v269[v6] = 1;
        v270[v6] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        uint64_t v31 = &v269[v17 + 2];
      }
      else {
        uint64_t v31 = (unsigned int *)(&v253 + v6);
      }
      unsigned int v20 = *v31;
      *uint32x4_t v29 = *v31;
      if (v233)
      {
LABEL_58:
        if (v232) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v269[v6] = 2;
      v270[v6] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      unsigned int v32 = &v269[v17 + 2];
    }
    else {
      unsigned int v32 = (unsigned int *)(&v255 + v6);
    }
    unsigned int v20 = *v32;
    *uint32x4_t v29 = *v32;
    if (v232)
    {
LABEL_59:
      if (v234) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v269[v6] = 3;
      v270[v6] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      unsigned int v33 = &v269[v17 + 2];
    }
    else {
      unsigned int v33 = (unsigned int *)(&v257 + v6);
    }
    unsigned int v20 = *v33;
    *uint32x4_t v29 = *v33;
    if (v234)
    {
LABEL_60:
      if (v236) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v269[v6] = 4;
      v270[v6] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      unsigned int v34 = &v269[v17 + 2];
    }
    else {
      unsigned int v34 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v34;
    *uint32x4_t v29 = *v34;
    if (v236)
    {
LABEL_61:
      if (v235) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v269[v6] = 5;
      v270[v6] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      unsigned int v35 = &v269[v17 + 2];
    }
    else {
      unsigned int v35 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v35;
    *uint32x4_t v29 = *v35;
    if (v235)
    {
LABEL_62:
      if (v237) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v269[v6] = 7;
        v270[v6] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        unsigned int v37 = &v269[v17 + 2];
      }
      else {
        unsigned int v37 = (unsigned int *)(&v265 + v6);
      }
      unsigned int v20 = *v37;
      *uint32x4_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v269[v6] = 6;
      v270[v6] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      char v36 = &v269[v17 + 2];
    }
    else {
      char v36 = (unsigned int *)(&v263 + v6);
    }
    unsigned int v20 = *v36;
    *uint32x4_t v29 = *v36;
    if (!v237) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v267 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42] - v43;
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v70 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v70) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v267 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v267 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  int v51 = v248;
  int v52 = v249;
  unsigned int v54 = v267;
  unsigned int v53 = v268;
  BOOL v56 = v268 >= v267;
  BOOL v57 = v268 < v267;
  int v58 = kDQuadParamTable[160 * v249 + 6 + 10 * v268];
  int v245 = kDQuadParamTable[160 * v248 + 6 + 10 * v267];
  int v55 = v245;
  int v246 = v58;
  v247[0] = v245;
  v247[1] = v58;
  if (*(&v267 + v56) == *(&v267 + v57))
  {
    int v59 = v245;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v247 | (4 * v57));
    int v59 = v245;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v245 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v245 | (4 * v56)) += v60;
      int v59 = v245;
    }
  }
  int v61 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v62 = *((void *)v61 + 1);
  unsigned int v64 = v61[4];
  unsigned int v63 = v61[5];
  if (a4) {
    BOOL v65 = a5 == 0;
  }
  else {
    BOOL v65 = 1;
  }
  int v66 = v65;
  int v230 = v66;
  unsigned int v243 = v64;
  unsigned int v241 = v63;
  int v67 = v59 - v55;
  if (v67 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v67)
    {
      unsigned int v241 = --v63;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v68 = -1;
LABEL_167:
        unsigned int v243 = v68 + v64;
      }
    }
  }
  else if (v67)
  {
    v63 += v67;
    unsigned int v241 = v63;
    int v68 = v67;
    goto LABEL_167;
  }
  BOOL v70 = v51 == 5 && v54 == 1 && v67 < 2;
  int v71 = v70;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v72 = 31744;
    }
    else {
      int v72 = 0;
    }
    if (v51 == 4) {
      int v73 = 2139095040;
    }
    else {
      int v73 = v72;
    }
    int v74 = 1 << (v271 - 1);
    if (v66)
    {
      if (v231) {
        goto LABEL_188;
      }
LABEL_336:
      if ((v73 & ~v253) == 0 || v253 == v74) {
        int v71 = 1;
      }
      if (!v233) {
        goto LABEL_343;
      }
LABEL_189:
      if (v232) {
        goto LABEL_190;
      }
LABEL_350:
      if ((v73 & ~v257) == 0 || v257 == v74) {
        int v71 = 1;
      }
      if (!v234) {
        goto LABEL_357;
      }
LABEL_191:
      if (v236) {
        goto LABEL_192;
      }
LABEL_364:
      if ((v73 & ~v261) == 0 || v261 == v74) {
        int v71 = 1;
      }
      if (!v235) {
        goto LABEL_371;
      }
LABEL_193:
      if (!v237) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v73 & ~v251) == 0 || v251 == v74) {
        int v71 = 1;
      }
      if (!v231) {
        goto LABEL_336;
      }
LABEL_188:
      if (v233) {
        goto LABEL_189;
      }
LABEL_343:
      if ((v73 & ~v255) == 0 || v255 == v74) {
        int v71 = 1;
      }
      if (!v232) {
        goto LABEL_350;
      }
LABEL_190:
      if (v234) {
        goto LABEL_191;
      }
LABEL_357:
      if ((v73 & ~v259) == 0 || v259 == v74) {
        int v71 = 1;
      }
      if (!v236) {
        goto LABEL_364;
      }
LABEL_192:
      if (v235) {
        goto LABEL_193;
      }
LABEL_371:
      if ((v73 & ~v263) == 0 || v263 == v74) {
        int v71 = 1;
      }
      if (!v237)
      {
LABEL_194:
        if ((v73 & ~v265) == 0 || v265 == v74) {
          int v71 = 1;
        }
      }
    }
  }
  BOOL v70 = v62 >> v63 > 0x10;
  int v76 = v66;
  if (v70) {
    int v76 = 1;
  }
  int v77 = v76 | v71;
  int8x16_t v78 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v79 = *((void *)v78 + 1);
  unsigned int v81 = v78[4];
  unsigned int v80 = v78[5];
  unsigned int v244 = v81;
  unsigned int v242 = v80;
  int v82 = v246 - v58;
  if (v246 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v246)
    {
      unsigned int v242 = --v80;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v83 = -1;
LABEL_206:
        unsigned int v244 = v83 + v81;
      }
    }
  }
  else if (v246 != v58)
  {
    v80 += v82;
    unsigned int v242 = v80;
    int v83 = v246 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v82 < 2) {
    int v77 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v84 = 31744;
    }
    else {
      int v84 = 0;
    }
    if (v52 == 4) {
      int v84 = 2139095040;
    }
    int v85 = 1 << (v272 - 1);
    if (v230)
    {
      if (v231) {
        goto LABEL_221;
      }
LABEL_386:
      if ((v84 & ~v254) == 0 || v254 == v85) {
        int v77 = 1;
      }
      if (!v233) {
        goto LABEL_393;
      }
LABEL_222:
      if (v232) {
        goto LABEL_223;
      }
LABEL_400:
      if ((v84 & ~v258) == 0 || v258 == v85) {
        int v77 = 1;
      }
      if (!v234) {
        goto LABEL_407;
      }
LABEL_224:
      if (v236) {
        goto LABEL_225;
      }
LABEL_414:
      if ((v84 & ~v262) == 0 || v262 == v85) {
        int v77 = 1;
      }
      if (!v235) {
        goto LABEL_421;
      }
LABEL_226:
      if (!v237) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v84 & ~v252) == 0 || v252 == v85) {
        int v77 = 1;
      }
      if (!v231) {
        goto LABEL_386;
      }
LABEL_221:
      if (v233) {
        goto LABEL_222;
      }
LABEL_393:
      if ((v84 & ~v256) == 0 || v256 == v85) {
        int v77 = 1;
      }
      if (!v232) {
        goto LABEL_400;
      }
LABEL_223:
      if (v234) {
        goto LABEL_224;
      }
LABEL_407:
      if ((v84 & ~v260) == 0 || v260 == v85) {
        int v77 = 1;
      }
      if (!v236) {
        goto LABEL_414;
      }
LABEL_225:
      if (v235) {
        goto LABEL_226;
      }
LABEL_421:
      if ((v84 & ~v264) == 0 || v264 == v85) {
        int v77 = 1;
      }
      if (!v237)
      {
LABEL_227:
        if ((v84 & ~v266) == 0 || v266 == v85) {
          int v77 = 1;
        }
      }
    }
  }
  char v87 = 0;
  uint64_t v88 = 0;
  BOOL v70 = v79 >> v80 > 0x10;
  int v89 = v230;
  if (v70) {
    int v89 = 1;
  }
  int v227 = v89;
  int v228 = v77;
  uint64_t v240 = 0;
  uint64_t v239 = 0;
  memset(v238, 0, sizeof(v238));
  do
  {
    uint64_t v90 = 0;
    unsigned int v91 = 0;
    unsigned int v92 = *(&v271 + v88);
    if (v92 >= *(&v243 + v88)) {
      unsigned int v93 = *(&v243 + v88);
    }
    else {
      unsigned int v93 = *(&v271 + v88);
    }
    *(&v243 + v88) = v93;
    int8x16_t v94 = &kDQuadParamTable[160 * *(&v248 + v88) + 10 * *(&v267 + v88)];
    if (v94[5]) {
      unsigned int v95 = v92;
    }
    else {
      unsigned int v95 = 0;
    }
    if (v95 >= *(&v241 + v88)) {
      unsigned int v95 = *(&v241 + v88);
    }
    int v96 = v270[v88] & (-1 << (v92 - v93));
    int8x16_t v97 = &v251 + v88;
    int v98 = *v97 - v96;
    uint64_t v99 = 32 * v88;
    int16x8_t v100 = &v250[32 * v88];
    if (v230) {
      int v98 = 0;
    }
    int v101 = v97[2] - v96;
    if (v231) {
      int v101 = 0;
    }
    *int16x8_t v100 = v98;
    v100[1] = v101;
    int v102 = v97[4] - v96;
    if (v233) {
      int v102 = 0;
    }
    int v103 = v97[6] - v96;
    if (v232) {
      int v103 = 0;
    }
    v100[2] = v102;
    v100[3] = v103;
    int v104 = v97[8] - v96;
    if (v234) {
      int v104 = 0;
    }
    int v105 = v97[10] - v96;
    if (v236) {
      int v105 = 0;
    }
    v100[4] = v104;
    v100[5] = v105;
    int v106 = v97[12] - v96;
    if (v235) {
      int v106 = 0;
    }
    int v107 = v97[14] - v96;
    if (v237) {
      int v107 = 0;
    }
    v100[6] = v106;
    v100[7] = v107;
    char v108 = v87;
    *(&v241 + v88) = v95;
    unint64_t v109 = *((void *)v94 + 1);
    *((_DWORD *)&v240 + v88) = v96;
    unint64_t v110 = v109 >> v95;
    int v111 = ~(-1 << v92);
    if (v110 <= 1) {
      unint64_t v112 = 1;
    }
    else {
      unint64_t v112 = v110;
    }
    uint64_t v113 = 2 * v269[v88];
    do
    {
      if (v113 != v90)
      {
        if (v95) {
          unint64_t v114 = *(unsigned int *)&v250[v99] / v112;
        }
        else {
          LODWORD(v114) = 0;
        }
        int16x8_t v115 = (int *)v238 + 7 * v88 + v91;
        *int16x8_t v115 = v114;
        if (v110 >= 2)
        {
          unint64_t v116 = *(unsigned int *)&v250[v99];
          if (v116)
          {
            if (v116 / v112 * v112 == v116 && ((v116 / v112) & 1) != 0)
            {
              if (v96 || v114 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v118 = v97[v90], v119 = v247[v88 + 2], v118 != v119)
                  && ((a3 | 2) != 3 || v112 + v119 != v118))
                {
                  LODWORD(v114) = v114 - 1;
                  *int16x8_t v115 = v114;
                }
              }
              else
              {
                LODWORD(v114) = 1;
              }
            }
          }
        }
        if ((unint64_t)v114 >> v95 || v97[v90] == v111) {
          *int16x8_t v115 = ~(-1 << v95);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v90 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v90) >= a4)
        {
          *int16x8_t v115 = 0;
        }
        ++v91;
      }
      v99 += 4;
      v90 += 2;
    }
    while (v90 != 16);
    char v87 = 1;
    uint64_t v88 = 1;
  }
  while ((v108 & 1) == 0);
  int16x8_t v121 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v122 = 8 * (a1 & 7);
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)a1 = 0;
  if ((v227 | v228) == 1)
  {
    uint64_t v123 = 0;
    uint64_t v124 = 0;
    unsigned int v125 = v271;
    unsigned int v126 = v272;
    uint64_t v127 = v271 - 4;
    uint64_t v128 = v272 - 4;
    uint64_t v129 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v130 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v123;
      BOOL v131 = v130[1] >= a5 || *v130 >= a4;
      char v132 = v131;
      if (v131)
      {
        unint64_t v133 = 0;
        if (v127 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v133 = (unint64_t)*(&v251 + 2 * v123) >> 4;
        if (v127 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v125 != 4 && (unint64_t)(v129 - v122 + (v124 << 6) + v127) <= 0x60)
      {
        uint64_t v134 = 0;
        unint64_t v135 = v125 - 4;
        do
        {
          unint64_t v136 = 64 - v129;
          if (64 - v129 >= v135) {
            unint64_t v136 = v135;
          }
          v121[v124] |= ((v133 >> v134) & ~(-1 << v136)) << v129;
          v134 += v136;
          unint64_t v137 = v136 + v129;
          v124 += v137 >> 6;
          uint64_t v129 = v137 & 0x3F;
          v135 -= v136;
        }
        while (v135);
      }
LABEL_315:
      if (v132)
      {
        unint64_t v138 = 0;
        if (v128 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v138 = (unint64_t)*(&v251 + 2 * v123 + 1) >> 4;
        if (v128 <= 0x100)
        {
LABEL_319:
          if (v126 != 4 && (unint64_t)(v129 - v122 + (v124 << 6) + v128) <= 0x60)
          {
            uint64_t v139 = 0;
            unint64_t v140 = v126 - 4;
            do
            {
              unint64_t v141 = 64 - v129;
              if (64 - v129 >= v140) {
                unint64_t v141 = v140;
              }
              v121[v124] |= ((v138 >> v139) & ~(-1 << v141)) << v129;
              v139 += v141;
              unint64_t v142 = v141 + v129;
              v124 += v142 >> 6;
              uint64_t v129 = v142 & 0x3F;
              v140 -= v141;
            }
            while (v140);
          }
        }
      }
      if (++v123 == 8) {
        return v227 | v228;
      }
    }
  }
  unsigned int v143 = v267;
  char v144 = LOBYTE(v270[0]) | v267;
  if (v270[0] | v267)
  {
    char v144 = v267 - 2;
    if (v267 <= 2)
    {
      char v144 = 0;
      char v145 = 0;
      unsigned int v146 = v267 + 1;
      goto LABEL_430;
    }
    unsigned int v162 = 0;
    unsigned int v146 = 0;
    int v161 = 0;
    char v145 = 1;
  }
  else
  {
    char v145 = 0;
    unsigned int v146 = 0;
LABEL_430:
    int v161 = 1;
    unsigned int v162 = 2;
  }
  *v121 |= (unint64_t)(v144 & 7) << v122;
  uint64_t v163 = v122 | 3;
  unsigned int v164 = v268;
  if (v270[1] | v268)
  {
    char v165 = v268 - 2;
    if (v268 <= 2)
    {
      char v165 = 0;
      char v166 = 0;
      unsigned int v167 = v268 + 1;
      goto LABEL_436;
    }
    unsigned int v169 = 0;
    unsigned int v167 = 0;
    int v168 = 0;
    char v166 = 1;
  }
  else
  {
    char v165 = 0;
    char v166 = 0;
    unsigned int v167 = 0;
LABEL_436:
    int v168 = 1;
    unsigned int v169 = 2;
  }
  if ((unint64_t)(v163 - v122 - 94) >= 0xFFFFFFFFFFFFFF9FLL)
  {
    *v121 |= (unint64_t)(v165 & 7) << v163;
    uint64_t v163 = v122 | 6;
  }
  if (!v161)
  {
    uint64_t v171 = 0;
    int v172 = 6;
    if (v168) {
      goto LABEL_453;
    }
LABEL_446:
    unsigned int v173 = v271;
    if (!v143) {
      goto LABEL_461;
    }
    goto LABEL_465;
  }
  unint64_t v170 = v162;
  if (v163 - v122 + (unint64_t)v162 > 0x60) {
    char v145 = 1;
  }
  if (v145)
  {
    uint64_t v171 = 0;
  }
  else
  {
    uint64_t v171 = 0;
    uint64_t v174 = 0;
    do
    {
      unint64_t v175 = 64 - v163;
      if (64 - v163 >= v170) {
        unint64_t v175 = v170;
      }
      v121[v171] |= (((unint64_t)v146 >> v174) & ~(-1 << v175)) << v163;
      v174 += v175;
      unint64_t v176 = v175 + v163;
      v171 += v176 >> 6;
      uint64_t v163 = v176 & 0x3F;
      v170 -= v175;
    }
    while (v170);
  }
  int v172 = v162 + 6;
  if (!v168) {
    goto LABEL_446;
  }
LABEL_453:
  unint64_t v177 = v169;
  if (v163 - v122 + (v171 << 6) + (unint64_t)v169 > 0x60) {
    char v166 = 1;
  }
  if ((v166 & 1) == 0)
  {
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v163;
      if (64 - v163 >= v177) {
        unint64_t v179 = v177;
      }
      v121[v171] |= (((unint64_t)v167 >> v178) & ~(-1 << v179)) << v163;
      v178 += v179;
      unint64_t v180 = v179 + v163;
      v171 += v180 >> 6;
      uint64_t v163 = v180 & 0x3F;
      v177 -= v179;
    }
    while (v177);
  }
  v172 += v169;
  unsigned int v173 = v271;
  if (!v143)
  {
LABEL_461:
    if (v173 != 2 && v173 < 0x10)
    {
      unsigned int v181 = v272;
      if (!v164) {
        goto LABEL_526;
      }
LABEL_473:
      unsigned int v188 = v244;
      if (v244 <= 0x100 && v244 && v163 - v122 + (v171 << 6) + (unint64_t)v244 <= 0x60)
      {
        uint64_t v189 = 0;
        unint64_t v190 = (HIDWORD(v240) >> (v181 - v244));
        unint64_t v191 = v244;
        do
        {
          unint64_t v192 = 64 - v163;
          if (64 - v163 >= v191) {
            unint64_t v192 = v191;
          }
          v121[v171] |= ((v190 >> v189) & ~(-1 << v192)) << v163;
          v189 += v192;
          unint64_t v193 = v192 + v163;
          v171 += v193 >> 6;
          uint64_t v163 = v193 & 0x3F;
          v191 -= v192;
        }
        while (v191);
      }
      v172 += v188;
      goto LABEL_481;
    }
  }
LABEL_465:
  unsigned int v182 = v243;
  if (v243 <= 0x100 && v243 && v163 - v122 + (v171 << 6) + (unint64_t)v243 <= 0x60)
  {
    uint64_t v183 = 0;
    unint64_t v184 = v240 >> (v173 - v243);
    unint64_t v185 = v243;
    do
    {
      unint64_t v186 = 64 - v163;
      if (64 - v163 >= v185) {
        unint64_t v186 = v185;
      }
      v121[v171] |= ((v184 >> v183) & ~(-1 << v186)) << v163;
      v183 += v186;
      unint64_t v187 = v186 + v163;
      v171 += v187 >> 6;
      uint64_t v163 = v187 & 0x3F;
      v185 -= v186;
    }
    while (v185);
  }
  v172 += v182;
  unsigned int v181 = v272;
  if (v164) {
    goto LABEL_473;
  }
LABEL_526:
  if (v181 == 2 || v181 >= 0x10) {
    goto LABEL_473;
  }
LABEL_481:
  unint64_t v194 = v241;
  if (v241)
  {
    if ((unint64_t)(v163 - v122 + (v171 << 6) + 3) <= 0x60)
    {
      uint64_t v195 = 0;
      unint64_t v196 = v269[0];
      unint64_t v197 = 3;
      do
      {
        unint64_t v198 = 64 - v163;
        if (64 - v163 >= v197) {
          unint64_t v198 = v197;
        }
        v121[v171] |= ((v196 >> v195) & ~(-1 << v198)) << v163;
        v195 += v198;
        unint64_t v199 = v198 + v163;
        v171 += v199 >> 6;
        uint64_t v163 = v199 & 0x3F;
        v197 -= v198;
      }
      while (v197);
    }
    v172 += 3;
  }
  unint64_t v200 = v242;
  if (v242)
  {
    if ((unint64_t)(v163 - v122 + (v171 << 6) + 3) <= 0x60)
    {
      uint64_t v201 = 0;
      unint64_t v202 = v269[1];
      unint64_t v203 = 3;
      do
      {
        unint64_t v204 = 64 - v163;
        if (64 - v163 >= v203) {
          unint64_t v204 = v203;
        }
        v121[v171] |= ((v202 >> v201) & ~(-1 << v204)) << v163;
        v201 += v204;
        unint64_t v205 = v204 + v163;
        v171 += v205 >> 6;
        uint64_t v163 = v205 & 0x3F;
        v203 -= v204;
      }
      while (v203);
    }
    v172 += 3;
  }
  unsigned int v206 = 96 - v172;
  unsigned int v207 = (96 - v172) / 7u;
  unint64_t v208 = v206 % 7;
  if ((v208 - 257) >= 0xFFFFFF00 && v163 - v122 + (v171 << 6) + v208 <= 0x60)
  {
    do
    {
      unint64_t v209 = 64 - v163;
      if (64 - v163 >= v208) {
        unint64_t v209 = v208;
      }
      unint64_t v210 = v209 + v163;
      v171 += v210 >> 6;
      uint64_t v163 = v210 & 0x3F;
      v208 -= v209;
    }
    while (v208);
  }
  uint64_t v211 = 0;
  int v212 = v200 + v194;
  while (2)
  {
    if (v194 && v194 <= 0x100 && v163 - v122 + (v171 << 6) + v194 <= 0x60)
    {
      uint64_t v213 = 0;
      unint64_t v214 = *((unsigned int *)v238 + v211);
      unint64_t v215 = v194;
      do
      {
        unint64_t v216 = 64 - v163;
        if (64 - v163 >= v215) {
          unint64_t v216 = v215;
        }
        v121[v171] |= ((v214 >> v213) & ~(-1 << v216)) << v163;
        v213 += v216;
        unint64_t v217 = v216 + v163;
        v171 += v217 >> 6;
        uint64_t v163 = v217 & 0x3F;
        v215 -= v216;
      }
      while (v215);
    }
    if (v200)
    {
      if (v200 <= 0x100 && v163 - v122 + (v171 << 6) + v200 <= 0x60)
      {
        uint64_t v218 = 0;
        unint64_t v219 = *((unsigned int *)&v238[1] + v211 + 3);
        unint64_t v220 = v200;
        do
        {
          unint64_t v221 = 64 - v163;
          if (64 - v163 >= v220) {
            unint64_t v221 = v220;
          }
          v121[v171] |= ((v219 >> v218) & ~(-1 << v221)) << v163;
          v218 += v221;
          unint64_t v222 = v221 + v163;
          v171 += v222 >> 6;
          uint64_t v163 = v222 & 0x3F;
          v220 -= v221;
        }
        while (v220);
      }
      unint64_t v223 = v207 - v212;
      if (v207 != v212)
      {
LABEL_519:
        if (v223 <= 0x100 && v163 - v122 + (v171 << 6) + v223 <= 0x60)
        {
          do
          {
            unint64_t v224 = 64 - v163;
            if (64 - v163 >= v223) {
              unint64_t v224 = v223;
            }
            unint64_t v225 = v224 + v163;
            v171 += v225 >> 6;
            uint64_t v163 = v225 & 0x3F;
            v223 -= v224;
          }
          while (v223);
        }
      }
    }
    else
    {
      unint64_t v223 = v207 - v194;
      if (v207 != v194) {
        goto LABEL_519;
      }
    }
    if (++v211 != 7) {
      continue;
    }
    return v227 | v228;
  }
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v195 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v190[0] = 10;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v180 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v180 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::getDquadModeData(0, v12, v14, &v191);
  v194[0] = DquadModeData;
  v193[0] = 1;
  v190[1] = 10;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)5,(AGXTextureFootprint)3>::getDquadModeData(1, v11, v20, &v192);
  v194[1] = v24;
  v193[1] = 1;
  BOOL v26 = v24 < DquadModeData;
  unsigned int v27 = v24;
  int v28 = dword_242EA9408[10 * v24 + 6];
  int v187 = dword_242EA9408[10 * DquadModeData + 6];
  int v25 = v187;
  int v188 = v28;
  v189[0] = v187;
  v189[1] = v28;
  if (v194[v24 >= DquadModeData] == v194[v26])
  {
    int v29 = v187;
  }
  else
  {
    int v30 = *(_DWORD *)((unint64_t)v189 | (4 * v26));
    int v29 = v187;
    if (v30 >= 1)
    {
      *(_DWORD *)((unint64_t)&v187 | (4 * v26)) = 0;
      *(_DWORD *)((unint64_t)&v187 | (4 * (v24 >= DquadModeData))) += v30;
      int v29 = v187;
    }
  }
  uint64_t v31 = kDQuadParamTable;
  unsigned int v32 = &kDQuadParamTable[10 * DquadModeData];
  unsigned int v33 = v32[164];
  unsigned int v34 = v32[165];
  int v35 = v29 - v25;
  if (v35 >= 0)
  {
    unsigned int v36 = v34;
    if (!v35) {
      goto LABEL_37;
    }
    unsigned int v36 = v35 + v34;
    goto LABEL_32;
  }
  if (kDQuadParamTable[10 * DquadModeData + 167] >= -v35)
  {
    unsigned int v36 = v34;
  }
  else
  {
    unsigned int v36 = v34 - 1;
    if (!kDQuadParamTable[10 * DquadModeData + 168])
    {
      int v35 = -1;
LABEL_32:
      v33 += v35;
    }
  }
LABEL_37:
  if (v33 >= 0xA) {
    uint64_t v37 = 10;
  }
  else {
    uint64_t v37 = v33;
  }
  v186[0] = v37;
  if (v34) {
    LODWORD(v38) = 10;
  }
  else {
    LODWORD(v38) = 0;
  }
  if (v38 >= v36) {
    unint64_t v38 = v36;
  }
  else {
    unint64_t v38 = v38;
  }
  v185[0] = v38;
  unsigned int v39 = &kDQuadParamTable[10 * v24];
  LODWORD(v40) = v39[164];
  int v41 = v39[165];
  int v43 = v188 - v28;
  BOOL v42 = v188 == v28;
  if (v188 - v28 >= 0)
  {
    LODWORD(v44) = v41;
    if (v42) {
      goto LABEL_54;
    }
    LODWORD(v44) = v43 + v41;
    goto LABEL_49;
  }
  if (kDQuadParamTable[10 * v24 + 167] >= v28 - v188)
  {
    LODWORD(v44) = v41;
  }
  else
  {
    LODWORD(v44) = v41 - 1;
    if (!kDQuadParamTable[10 * v24 + 168])
    {
      int v43 = -1;
LABEL_49:
      LODWORD(v40) = v43 + v40;
    }
  }
LABEL_54:
  int v45 = v180 + v19;
  if (v40 >= 0xA) {
    uint64_t v40 = 10;
  }
  else {
    uint64_t v40 = v40;
  }
  v186[1] = v40;
  if (v41) {
    unsigned int v46 = 10;
  }
  else {
    unsigned int v46 = 0;
  }
  if (v46 >= v44) {
    unint64_t v44 = v44;
  }
  else {
    unint64_t v44 = v46;
  }
  v185[1] = v44;
  uint64_t v184 = 0;
  if (DquadModeData)
  {
    int v47 = 0;
    if (v37 && (unint64_t)(v10 - v6 + (v13 << 6) + v37) <= 0x60)
    {
      int v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = v37;
      do
      {
        unint64_t v50 = 64 - v10;
        if (64 - v10 >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v50)) << v48;
        v48 += v50;
        v13 += (v50 + v10) >> 6;
        uint64_t v10 = (v50 + v10) & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    LODWORD(v184) = v47 << (10 - v37);
    v45 += v37;
    if (v27)
    {
LABEL_71:
      int v51 = 0;
      if (v40 && (unint64_t)(v10 - v6 + (v13 << 6) + v40) <= 0x60)
      {
        int v51 = 0;
        uint64_t v52 = 0;
        unint64_t v53 = v40;
        do
        {
          unint64_t v54 = 64 - v10;
          if (64 - v10 >= v53) {
            unint64_t v54 = v53;
          }
          v51 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v54)) << v52;
          v52 += v54;
          v13 += (v54 + v10) >> 6;
          uint64_t v10 = (v54 + v10) & 0x3F;
          v53 -= v54;
        }
        while (v53);
      }
      HIDWORD(v184) = v51 << (10 - v40);
      v45 += v40;
      uint64_t v183 = 0;
      if (!v38) {
        goto LABEL_88;
      }
      goto LABEL_81;
    }
  }
  else
  {
    LODWORD(v184) = v191;
    if (v24) {
      goto LABEL_71;
    }
  }
  HIDWORD(v184) = v192;
  uint64_t v183 = 0;
  if (v38)
  {
LABEL_81:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v55 = 0;
      uint64_t v56 = 0;
      unint64_t v57 = 3;
      do
      {
        unint64_t v58 = 64 - v10;
        if (64 - v10 >= v57) {
          unint64_t v58 = v57;
        }
        v55 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v58)) << v56;
        v56 += v58;
        v13 += (v58 + v10) >> 6;
        uint64_t v10 = (v58 + v10) & 0x3F;
        v57 -= v58;
      }
      while (v57);
    }
    else
    {
      int v55 = 0;
    }
    LODWORD(v183) = v55;
    v45 += 3;
  }
LABEL_88:
  if (v44)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v59 = 0;
      uint64_t v60 = 0;
      unint64_t v61 = 3;
      do
      {
        unint64_t v62 = 64 - v10;
        if (64 - v10 >= v61) {
          unint64_t v62 = v61;
        }
        v59 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v62)) << v60;
        v60 += v62;
        v13 += (v62 + v10) >> 6;
        uint64_t v10 = (v62 + v10) & 0x3F;
        v61 -= v62;
      }
      while (v61);
    }
    else
    {
      int v59 = 0;
    }
    HIDWORD(v183) = v59;
    v45 += 3;
  }
  uint64_t v63 = 0;
  unsigned int v64 = a3 & 0xFFFFFFFD;
  unsigned int v65 = 96 - v45;
  unsigned int v66 = (96 - v45) / 7u;
  unint64_t v67 = (v10 | (v13 << 6)) + v65 % 7;
  uint64_t v182 = 0;
  memset(v181, 0, sizeof(v181));
  do
  {
    unint64_t v69 = v67 >> 6;
    int64_t result = v67 & 0x3F;
    if (v38)
    {
      if (result - v6 + (v67 & 0xFFFFFFFFFFFFFFC0) + v38 <= 0x60)
      {
        int v71 = 0;
        uint64_t v72 = 0;
        unint64_t v73 = v38;
        do
        {
          unint64_t v74 = 64 - result;
          if (64 - result >= v73) {
            unint64_t v74 = v73;
          }
          v71 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v74)) << v72;
          v72 += v74;
          unint64_t v75 = v74 + result;
          v69 += v75 >> 6;
          int64_t result = v75 & 0x3F;
          v73 -= v74;
        }
        while (v73);
      }
      else
      {
        int v71 = 0;
      }
      *((_DWORD *)v181 + v63) = v71;
    }
    if (v44)
    {
      if (result - v6 + (v69 << 6) + v44 <= 0x60)
      {
        int v76 = 0;
        uint64_t v77 = 0;
        unint64_t v78 = v44;
        do
        {
          unint64_t v79 = 64 - result;
          if (64 - result >= v78) {
            unint64_t v79 = v78;
          }
          v76 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v79)) << v77;
          v77 += v79;
          unint64_t v80 = v79 + result;
          v69 += v80 >> 6;
          int64_t result = v80 & 0x3F;
          v78 -= v79;
        }
        while (v78);
      }
      else
      {
        int v76 = 0;
      }
      *((_DWORD *)&v181[1] + v63 + 3) = v76;
      int v68 = v44 + v38;
    }
    else
    {
      int v68 = v38;
    }
    unint64_t v67 = (result | (v69 << 6)) + v66 - v68;
    ++v63;
  }
  while (v63 != 7);
  char v81 = 0;
  uint64_t v82 = 0;
  do
  {
    char v87 = v81;
    unint64_t v88 = *(void *)&v31[160 * v193[v82] + 2 + 10 * v194[v82]];
    int v89 = v185[v82];
    if (v88 >> v89 <= 1) {
      unint64_t v90 = 1;
    }
    else {
      unint64_t v90 = v88 >> v89;
    }
    int v91 = v190[v82];
    unint64_t v92 = v90 >> 1;
    if (v90 >> 1 >= (unint64_t)(1 << (v91 - v186[v82])) >> 1) {
      unint64_t v93 = (unint64_t)(1 << (v91 - v186[v82])) >> 1;
    }
    else {
      unint64_t v93 = v90 >> 1;
    }
    unint64_t v94 = (1 << (v91 - 1));
    unint64_t v95 = v185[v82 - 2];
    unint64_t v96 = v94 - v95;
    unint64_t v97 = 1 << v91;
    int v98 = (1 << v91) - 1;
    if (v95) {
      unint64_t v99 = v93;
    }
    else {
      unint64_t v99 = 0;
    }
    BOOL v100 = v95 == v94;
    BOOL v101 = v91 == 16;
    if (v91 == 16) {
      unint64_t v102 = 31744;
    }
    else {
      unint64_t v102 = 2139095040;
    }
    if (v91 == 16) {
      unint64_t v103 = 64512;
    }
    else {
      unint64_t v103 = 4286578688;
    }
    unint64_t v104 = 2143289344;
    if (v101) {
      unint64_t v104 = 32256;
    }
    unint64_t v105 = 4290772992;
    if (v101) {
      unint64_t v105 = 65024;
    }
    unint64_t v106 = (v103 - 1);
    if (v89)
    {
      int64_t result = (int64_t)v31;
      unint64_t v107 = v88 + v95;
      uint64_t v108 = ~(-1 << v89);
      int v109 = *((_DWORD *)&v183 + v82);
      unint64_t v110 = v96 / v90;
      if (!v109)
      {
        uint64_t v118 = 0;
        unint64_t v113 = v99;
        BOOL v112 = v95 == v94;
        goto LABEL_181;
      }
      uint64_t v111 = *((unsigned int *)v181 + 7 * v82);
      BOOL v112 = v110 == v111;
      if (v95 | v111)
      {
        if (v107 >= v97 && v111 == v108)
        {
          uint64_t v118 = 1;
          unint64_t v113 = v97 - 1;
          goto LABEL_181;
        }
        unint64_t v113 = v92 + v90 * v111;
      }
      else
      {
        unint64_t v113 = 0;
      }
      uint64_t v118 = 1;
LABEL_181:
      unint64_t v119 = v113 + v95;
      unint64_t v120 = v119;
      if (a3 == 4)
      {
        BOOL v121 = v119 < v102 || v119 >= v104;
        unint64_t v120 = (v102 - 1);
        if (v121)
        {
          BOOL v122 = v119 < v104 || v119 >= v94;
          unint64_t v120 = v94;
          if (v122)
          {
            if (v119 < v105 && v119 >= v103) {
              unint64_t v120 = (v103 - 1);
            }
            else {
              unint64_t v120 = v119;
            }
          }
        }
      }
      if (v120 >= v97) {
        int v124 = v98;
      }
      else {
        int v124 = v120;
      }
      if (v112) {
        int v125 = 0;
      }
      else {
        int v125 = v124 ^ v94;
      }
      if (v64 != 1) {
        int v125 = v124;
      }
      *(_DWORD *)(a2 + 4 * v82) = v125;
      if (v109 == 1)
      {
        unint64_t v126 = v99;
        BOOL v127 = v95 == v94;
      }
      else
      {
        uint64_t v128 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v127 = v110 == v128;
        if (v95 | v128)
        {
          if (v107 < v97 || (unint64_t v126 = v97 - 1, v128 != v108)) {
            unint64_t v126 = v92 + v90 * v128;
          }
        }
        else
        {
          unint64_t v126 = 0;
        }
        ++v118;
      }
      unint64_t v129 = v126 + v95;
      unint64_t v130 = v129;
      if (a3 == 4)
      {
        BOOL v131 = v129 < v102 || v129 >= v104;
        unint64_t v130 = (v102 - 1);
        if (v131)
        {
          BOOL v132 = v129 < v104 || v129 >= v94;
          unint64_t v130 = v94;
          if (v132)
          {
            if (v129 < v105 && v129 >= v103) {
              unint64_t v130 = (v103 - 1);
            }
            else {
              unint64_t v130 = v129;
            }
          }
        }
      }
      if (v130 >= v97) {
        int v134 = v98;
      }
      else {
        int v134 = v130;
      }
      if (v127) {
        int v135 = 0;
      }
      else {
        int v135 = v134 ^ v94;
      }
      if (v64 != 1) {
        int v135 = v134;
      }
      *(_DWORD *)(a2 + 4 * v82 + 8) = v135;
      if (v109 == 2)
      {
        unint64_t v136 = v99;
        BOOL v137 = v95 == v94;
      }
      else
      {
        uint64_t v138 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v137 = v110 == v138;
        if (v95 | v138)
        {
          if (v107 < v97 || (unint64_t v136 = v97 - 1, v138 != v108)) {
            unint64_t v136 = v92 + v90 * v138;
          }
        }
        else
        {
          unint64_t v136 = 0;
        }
        ++v118;
      }
      unint64_t v139 = v136 + v95;
      unint64_t v140 = v139;
      if (a3 == 4)
      {
        if (v139 < v102 || (unint64_t v140 = (v102 - 1), v139 >= v104))
        {
          if (v139 < v104 || (unint64_t v140 = v94, v139 >= v94))
          {
            if (v139 < v105 && v139 >= v103) {
              unint64_t v140 = (v103 - 1);
            }
            else {
              unint64_t v140 = v139;
            }
          }
        }
      }
      if (v140 >= v97) {
        int v142 = v98;
      }
      else {
        int v142 = v140;
      }
      if (v137) {
        int v143 = 0;
      }
      else {
        int v143 = v142 ^ v94;
      }
      if (v64 != 1) {
        int v143 = v142;
      }
      *(_DWORD *)(a2 + 4 * v82 + 16) = v143;
      if (v109 == 3)
      {
        unint64_t v144 = v99;
        BOOL v145 = v95 == v94;
      }
      else
      {
        uint64_t v146 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v145 = v110 == v146;
        if (v95 | v146)
        {
          if (v107 < v97 || (unint64_t v144 = v97 - 1, v146 != v108)) {
            unint64_t v144 = v92 + v90 * v146;
          }
        }
        else
        {
          unint64_t v144 = 0;
        }
        ++v118;
      }
      unint64_t v147 = v144 + v95;
      unint64_t v148 = v147;
      if (a3 == 4)
      {
        if (v147 < v102 || (unint64_t v148 = (v102 - 1), v147 >= v104))
        {
          if (v147 < v104 || (unint64_t v148 = v94, v147 >= v94))
          {
            if (v147 < v105 && v147 >= v103) {
              unint64_t v148 = (v103 - 1);
            }
            else {
              unint64_t v148 = v147;
            }
          }
        }
      }
      if (v148 >= v97) {
        int v150 = v98;
      }
      else {
        int v150 = v148;
      }
      if (v145) {
        int v151 = 0;
      }
      else {
        int v151 = v150 ^ v94;
      }
      if (v64 != 1) {
        int v151 = v150;
      }
      *(_DWORD *)(a2 + 4 * v82 + 24) = v151;
      if (v109 == 4)
      {
        unint64_t v152 = v99;
        BOOL v153 = v95 == v94;
      }
      else
      {
        uint64_t v154 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v153 = v110 == v154;
        if (v95 | v154)
        {
          if (v107 < v97 || (unint64_t v152 = v97 - 1, v154 != v108)) {
            unint64_t v152 = v92 + v90 * v154;
          }
        }
        else
        {
          unint64_t v152 = 0;
        }
        ++v118;
      }
      unint64_t v155 = v152 + v95;
      unint64_t v156 = v155;
      if (a3 == 4)
      {
        if (v155 < v102 || (unint64_t v156 = (v102 - 1), v155 >= v104))
        {
          if (v155 < v104 || (unint64_t v156 = v94, v155 >= v94))
          {
            if (v155 < v105 && v155 >= v103) {
              unint64_t v156 = (v103 - 1);
            }
            else {
              unint64_t v156 = v155;
            }
          }
        }
      }
      if (v156 >= v97) {
        int v158 = v98;
      }
      else {
        int v158 = v156;
      }
      if (v153) {
        int v159 = 0;
      }
      else {
        int v159 = v158 ^ v94;
      }
      if (v64 != 1) {
        int v159 = v158;
      }
      *(_DWORD *)(a2 + 4 * v82 + 32) = v159;
      if (v109 == 5)
      {
        unint64_t v160 = v99;
        BOOL v161 = v95 == v94;
      }
      else
      {
        uint64_t v162 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v161 = v110 == v162;
        if (v95 | v162)
        {
          if (v107 < v97 || (unint64_t v160 = v97 - 1, v162 != v108)) {
            unint64_t v160 = v92 + v90 * v162;
          }
        }
        else
        {
          unint64_t v160 = 0;
        }
        ++v118;
      }
      unint64_t v163 = v160 + v95;
      unint64_t v164 = v163;
      if (a3 == 4)
      {
        if (v163 < v102 || (unint64_t v164 = (v102 - 1), v163 >= v104))
        {
          if (v163 < v104 || (unint64_t v164 = v94, v163 >= v94))
          {
            if (v163 < v105 && v163 >= v103) {
              unint64_t v164 = (v103 - 1);
            }
            else {
              unint64_t v164 = v163;
            }
          }
        }
      }
      if (v164 >= v97) {
        int v166 = v98;
      }
      else {
        int v166 = v164;
      }
      if (v161) {
        int v167 = 0;
      }
      else {
        int v167 = v166 ^ v94;
      }
      if (v64 != 1) {
        int v167 = v166;
      }
      *(_DWORD *)(a2 + 4 * v82 + 40) = v167;
      if (v109 == 6)
      {
        unint64_t v168 = v99;
        BOOL v169 = v95 == v94;
      }
      else
      {
        uint64_t v170 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v169 = v110 == v170;
        if (v95 | v170)
        {
          if (v107 < v97 || (unint64_t v168 = v97 - 1, v170 != v108)) {
            unint64_t v168 = v92 + v90 * v170;
          }
        }
        else
        {
          unint64_t v168 = 0;
        }
        ++v118;
      }
      unint64_t v171 = v168 + v95;
      unint64_t v172 = v171;
      if (a3 == 4)
      {
        if (v171 < v102 || (unint64_t v172 = (v102 - 1), v171 >= v104))
        {
          if (v171 < v104 || (unint64_t v172 = v94, v171 >= v94))
          {
            if (v171 < v105 && v171 >= v103) {
              unint64_t v172 = (v103 - 1);
            }
            else {
              unint64_t v172 = v171;
            }
          }
        }
      }
      if (v172 >= v97) {
        int v174 = v98;
      }
      else {
        int v174 = v172;
      }
      if (v169) {
        int v175 = 0;
      }
      else {
        int v175 = v174 ^ v94;
      }
      if (v64 != 1) {
        int v175 = v174;
      }
      *(_DWORD *)(a2 + 4 * v82 + 48) = v175;
      if (v109 != 7)
      {
        uint64_t v176 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v100 = v110 == v176;
        if (v95 | v176)
        {
          if (v107 >= v97 && v176 == v108) {
            unint64_t v99 = v97 - 1;
          }
          else {
            unint64_t v99 = v92 + v90 * v176;
          }
        }
        else
        {
          unint64_t v99 = 0;
        }
      }
      unint64_t v177 = v99 + v95;
      unint64_t v84 = v177;
      if (a3 == 4)
      {
        if (v177 < v102 || (unint64_t v84 = (v102 - 1), v177 >= v104))
        {
          if (v177 < v104 || (unint64_t v84 = v94, v177 >= v94))
          {
            if (v177 < v105 && v177 >= v103) {
              unint64_t v84 = (v103 - 1);
            }
            else {
              unint64_t v84 = v177;
            }
          }
        }
      }
      if (v84 >= v97) {
        int v85 = v98;
      }
      else {
        int v85 = v84;
      }
      int v86 = v85 ^ v94;
      if (v100) {
        int v86 = 0;
      }
      if (v64 == 1) {
        int v85 = v86;
      }
      uint64_t v31 = (_DWORD *)result;
      goto LABEL_130;
    }
    BOOL v115 = v104 <= v95 && v95 < v94;
    BOOL v117 = v95 >= v103 && v105 > v95;
    if (a3 == 4)
    {
      if (v95 < v102 || v104 <= v95)
      {
        if (v115)
        {
          if (v97 <= v94) {
            int v85 = v98;
          }
          else {
            int v85 = v94;
          }
        }
        else
        {
          if (v117) {
            unint64_t v95 = v106;
          }
          if (v95 >= v97) {
            int v85 = v98;
          }
          else {
            int v85 = v95;
          }
        }
      }
      else if (v97 <= (v102 - 1))
      {
        int v85 = v98;
      }
      else
      {
        int v85 = v102 - 1;
      }
    }
    else if (v97 <= v95)
    {
      int v85 = v98;
    }
    else
    {
      int v85 = v185[v82 - 2];
    }
    int v178 = v85 ^ v94;
    if (v90 > v96) {
      int v178 = 0;
    }
    if (v64 == 1) {
      int v85 = v178;
    }
    unint64_t v179 = (_DWORD *)(a2 + 4 * v82);
    *unint64_t v179 = v85;
    v179[2] = v85;
    v179[4] = v85;
    v179[6] = v85;
    v179[8] = v85;
    v179[10] = v85;
    v179[12] = v85;
LABEL_130:
    *(_DWORD *)(a2 + 4 * v82 + 56) = v85;
    char v81 = 1;
    uint64_t v82 = 1;
  }
  while ((v87 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int32x4_t a6, int32x4_t a7)
{
  uint64_t v446 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v12 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    uint64_t v13 = (_OWORD *)(a1 + a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)(a1 + 2 * a2);
    *char v14 = 0u;
    v14[1] = 0u;
    uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
LABEL_6:
    _OWORD *v15 = v12;
    v15[1] = v12;
    return result;
  }
  char v9 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v431, a5);
    }
    int v401 = HIDWORD(v431);
    __int16 v402 = v431;
    int v403 = v433;
    __int16 v404 = v432;
    int v417 = v435;
    __int16 v418 = v434;
    int v419 = v437;
    __int16 v420 = v436;
    int v397 = v439;
    __int16 v398 = v438;
    int v399 = v441;
    __int16 v400 = v440;
    int v415 = v443;
    __int16 v416 = v442;
    uint64_t v20 = a3 + 12;
    __int16 v413 = v444;
    int v414 = v445;
    if ((v9 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v431, a5);
    }
    int v409 = HIDWORD(v431);
    __int16 v410 = v431;
    int v411 = v433;
    __int16 v412 = v432;
    int v425 = v435;
    __int16 v426 = v434;
    int v427 = v437;
    __int16 v428 = v436;
    int v405 = v439;
    __int16 v406 = v438;
    int v407 = v441;
    __int16 v408 = v440;
    int v423 = v443;
    __int16 v424 = v442;
    uint64_t v21 = a3 + 24;
    __int16 v421 = v444;
    int v422 = v445;
    if ((v9 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v431, a5);
    }
    __int16 v23 = v431;
    int v22 = HIDWORD(v431);
    __int16 v24 = v432;
    int v393 = v435;
    __int16 v394 = v434;
    __int16 v25 = v438;
    int v395 = v437;
    __int16 v396 = v436;
    int v26 = v439;
    __int16 v27 = v440;
    int v28 = v441;
    int v391 = v443;
    __int16 v392 = v442;
    uint64_t v29 = a3 + 36;
    __int16 v30 = v444;
    int v389 = v433;
    int v390 = v445;
    if ((v9 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v431, a5);
    }
    *(_DWORD *)a1 = ((v402 & 0x3FF) << 6) | (v401 << 22);
    *(_DWORD *)(a1 + 4) = ((v404 & 0x3FF) << 6) | (v403 << 22);
    *(_DWORD *)(a1 + 8) = ((v398 & 0x3FF) << 6) | (v397 << 22);
    *(_DWORD *)(a1 + 12) = ((v400 & 0x3FF) << 6) | (v399 << 22);
    *(_DWORD *)(a1 + 16) = ((v23 & 0x3FF) << 6) | (v22 << 22);
    *(_DWORD *)(a1 + 20) = ((v24 & 0x3FF) << 6) | (v389 << 22);
    *(_DWORD *)(a1 + 24) = ((v25 & 0x3FF) << 6) | (v26 << 22);
    *(_DWORD *)(a1 + 28) = ((v27 & 0x3FF) << 6) | (v28 << 22);
    uint64_t v31 = (int *)(a1 + a2);
    *uint64_t v31 = ((v418 & 0x3FF) << 6) | (v417 << 22);
    v31[1] = ((v420 & 0x3FF) << 6) | (v419 << 22);
    v31[2] = ((v416 & 0x3FF) << 6) | (v415 << 22);
    v31[3] = ((v413 & 0x3FF) << 6) | (v414 << 22);
    v31[4] = ((v394 & 0x3FF) << 6) | (v393 << 22);
    v31[5] = ((v396 & 0x3FF) << 6) | (v395 << 22);
    v31[6] = ((v392 & 0x3FF) << 6) | (v391 << 22);
    v31[7] = ((v30 & 0x3FF) << 6) | (v390 << 22);
    unsigned int v32 = (int *)(a1 + a2 + a2);
    *unsigned int v32 = ((v410 & 0x3FF) << 6) | (v409 << 22);
    v32[1] = ((v412 & 0x3FF) << 6) | (v411 << 22);
    v32[2] = ((v406 & 0x3FF) << 6) | (v405 << 22);
    v32[3] = ((v408 & 0x3FF) << 6) | (v407 << 22);
    int v33 = ((v432 & 0x3FF) << 6) | (v433 << 22);
    v32[4] = ((v431 & 0x3FF) << 6) | (HIDWORD(v431) << 22);
    v32[5] = v33;
    int v34 = ((v440 & 0x3FF) << 6) | (v441 << 22);
    v32[6] = ((v438 & 0x3FF) << 6) | (v439 << 22);
    v32[7] = v34;
    int v35 = (int *)((char *)v32 + a2);
    int *v35 = ((v426 & 0x3FF) << 6) | (v425 << 22);
    v35[1] = ((v428 & 0x3FF) << 6) | (v427 << 22);
    v35[2] = ((v424 & 0x3FF) << 6) | (v423 << 22);
    v35[3] = ((v421 & 0x3FF) << 6) | (v422 << 22);
    LODWORD(v32) = ((v436 & 0x3FF) << 6) | (v437 << 22);
    v35[4] = ((v434 & 0x3FF) << 6) | (v435 << 22);
    v35[5] = (int)v32;
    LODWORD(v32) = ((v444 & 0x3FF) << 6) | (v445 << 22);
    v35[6] = ((v442 & 0x3FF) << 6) | (v443 << 22);
    v35[7] = (int)v32;
    return 48;
  }
  switch(a4)
  {
    case 0x7Fu:
      int64x2_t v36 = *(int64x2_t *)a3;
      int64x2_t v37 = *(int64x2_t *)(a3 + 16);
      int64x2_t v38 = *(int64x2_t *)(a3 + 32);
      int64x2_t v39 = *(int64x2_t *)(a3 + 48);
      int64x2_t v40 = *(int64x2_t *)(a3 + 64);
      int64x2_t v41 = *(int64x2_t *)(a3 + 80);
      int64x2_t v42 = *(int64x2_t *)(a3 + 96);
      int64x2_t v43 = *(int64x2_t *)(a3 + 112);
      unint64_t v44 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v37);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v40, v41);
      int v45 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v44 = vzip2q_s64(v36, v37);
      v44[1] = vzip2q_s64(v40, v41);
      *int v45 = vzip1q_s64(v38, v39);
      v45[1] = vzip1q_s64(v42, v43);
      unsigned int v46 = (int64x2_t *)((char *)v45 + a2);
      *unsigned int v46 = vzip2q_s64(v38, v39);
      v46[1] = vzip2q_s64(v42, v43);
      return 128;
    case 0x4Fu:
      v47.i64[0] = 0xA000A000A000ALL;
      v47.i64[1] = 0xA000A000A000ALL;
      int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v47, v47));
      v47.i64[0] = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
      v49.i64[0] = v47.u32[0];
      v49.i64[1] = v47.u32[1];
      int64x2_t v50 = v49;
      unint64_t v51 = vaddvq_s64(v49);
      int64x2_t v52 = 0uLL;
      if (v51 <= 0x80)
      {
        int v85 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v86 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
        v87.i64[0] = v86.u32[0];
        v87.i64[1] = v86.u32[1];
        int64x2_t v88 = v87;
        int64x2_t v89 = vzip1q_s64((int64x2_t)0, v50);
        unint64_t v90 = 8 * (a3 & 7);
        unint64_t v91 = v51 + v90;
        int64x2_t v92 = vaddq_s64(v89, vdupq_n_s64(v90));
        int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v92)));
        if (v51 + v90 > 0x80) {
          int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v92))), v93);
        }
        uint64x2_t v94 = (uint64x2_t)vnegq_s64(v88);
        int64x2_t v95 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v94);
        *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
        *(int32x2_t *)v95.i8 = vmovn_s64(v95);
        unint64_t v96 = v91 & 0x3F;
        unint64_t v97 = (int64x2_t *)((char *)v85 + 8 * (v91 >> 6));
        int8x16_t v98 = (int8x16_t)vaddq_s64(v89, vdupq_n_s64(v96));
        unint64_t v99 = v51 + v91;
        int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v97, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v98)));
        if (v51 + v96 >= 0x81)
        {
          int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v97[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v98)));
          int8x16_t v100 = vorrq_s8(v98, v100);
        }
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v100, v94);
        *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v100);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        unint64_t v102 = v99 & 0x3F;
        unint64_t v103 = (int64x2_t *)((char *)v85 + 8 * (v99 >> 6));
        int64x2_t v104 = vaddq_s64(v89, vdupq_n_s64(v102));
        unint64_t v105 = v51 + v99;
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v103, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
        if (v51 + v102 > 0x80) {
          int8x16_t v106 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v103[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v106);
        }
        int16x8_t v107 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v95);
        int16x8_t v108 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v101);
        int64x2_t v109 = (int64x2_t)vshlq_u64((uint64x2_t)v106, v94);
        *(int32x2_t *)v95.i8 = vmovn_s64((int64x2_t)v106);
        *(int32x2_t *)v109.i8 = vmovn_s64(v109);
        int16x8_t v110 = (int16x8_t)vzip1q_s32((int32x4_t)v95, (int32x4_t)v109);
        unint64_t v111 = v105 & 0x3F;
        BOOL v112 = (int64x2_t *)((char *)v85 + 8 * (v105 >> 6));
        int64x2_t v113 = vaddq_s64(v89, vdupq_n_s64(v111));
        int8x16_t v114 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113));
        unint64_t v115 = v51 + v105;
        int64x2_t v116 = vsubq_s64(vdupq_n_s64(0x40uLL), v113);
        int8x16_t v117 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)v116);
        int8x16_t v118 = vorrq_s8(v117, v114);
        if (v51 + v111 >= 0x81)
        {
          int64x2_t v119 = v112[1];
          uint64x2_t v120 = (uint64x2_t)vdupq_lane_s64(v119.i64[0], 0);
          int8x16_t v117 = (int8x16_t)vdupq_laneq_s64(v119, 1);
          int8x16_t v114 = (int8x16_t)vshlq_u64(v120, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113));
          int64x2_t v116 = vdupq_n_s64(0xC0uLL);
          int8x16_t v118 = vorrq_s8(vorrq_s8(v114, (int8x16_t)vshlq_u64((uint64x2_t)v117, (uint64x2_t)vsubq_s64(v116, v113))), v118);
        }
        v121.i64[0] = 0x1000100010001;
        v121.i64[1] = 0x1000100010001;
        *(int16x4_t *)v117.i8 = vmovn_s32((int32x4_t)v107);
        *(int16x4_t *)v107.i8 = vshrn_n_s32((int32x4_t)v107, 0xAuLL);
        *(int16x4_t *)v114.i8 = vmovn_s32((int32x4_t)v108);
        *(int16x4_t *)v108.i8 = vshrn_n_s32((int32x4_t)v108, 0xAuLL);
        *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v110);
        *(int16x4_t *)v110.i8 = vshrn_n_s32((int32x4_t)v110, 0xAuLL);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v118, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v118);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v122);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xAuLL);
        unint64_t v124 = v115 & 0x3F;
        int v125 = (int64x2_t *)((char *)v85 + 8 * (v115 >> 6));
        int64x2_t v126 = vaddq_s64(v89, vdupq_n_s64(v124));
        unint64_t v127 = v51 + v115;
        int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v125, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
        if (v51 + v124 > 0x80) {
          int8x16_t v128 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v125[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), v128);
        }
        int16x8_t v129 = vshlq_n_s16(v121, 0xAuLL);
        v130.i64[0] = -1;
        v130.i64[1] = -1;
        int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v128, v94);
        *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
        *(int32x2_t *)v131.i8 = vmovn_s64(v131);
        int16x8_t v132 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v131);
        *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v132);
        *(int16x4_t *)v132.i8 = vshrn_n_s32((int32x4_t)v132, 0xAuLL);
        unint64_t v133 = (int64x2_t *)((char *)v85 + 8 * (v127 >> 6));
        int64x2_t v134 = vaddq_s64(v89, vdupq_n_s64(v127 & 0x3F));
        unint64_t v135 = v51 + v127;
        int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
        if (v51 + (v127 & 0x3F) >= 0x81) {
          int8x16_t v136 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v134))), v136);
        }
        int8x16_t v137 = (int8x16_t)vaddq_s16(v129, v130);
        int8x16_t v138 = (int8x16_t)vzip1q_s16((int16x8_t)v117, v107);
        int8x16_t v139 = (int8x16_t)vzip1q_s16((int16x8_t)v114, v108);
        int8x16_t v140 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v110);
        int8x16_t v141 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v123);
        int8x16_t v142 = (int8x16_t)vzip1q_s16((int16x8_t)v128, v132);
        int64x2_t v143 = (int64x2_t)vshlq_u64((uint64x2_t)v136, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v136);
        *(int32x2_t *)v143.i8 = vmovn_s64(v143);
        int16x8_t v144 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v143);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v144);
        *(int16x4_t *)v144.i8 = vshrn_n_s32((int32x4_t)v144, 0xAuLL);
        int8x16_t v145 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v144);
        unint64_t v146 = v51 + v135;
        unint64_t v147 = v135 & 0x3F;
        int64x2_t v148 = vaddq_s64(v89, vdupq_n_s64(v147));
        int16x8_t v149 = (int64x2_t *)((char *)v85 + 8 * (v135 >> 6));
        int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
        if (v51 + v147 > 0x80) {
          int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v150);
        }
        int16x8_t v151 = (int16x8_t)vandq_s8(v138, v137);
        int16x8_t v152 = (int16x8_t)vandq_s8(v139, v137);
        int16x8_t v153 = (int16x8_t)vandq_s8(v140, v137);
        int16x8_t v154 = (int16x8_t)vandq_s8(v141, v137);
        int16x8_t v155 = (int16x8_t)vandq_s8(v142, v137);
        int16x8_t v156 = (int16x8_t)vandq_s8(v145, v137);
        int64x2_t v157 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v94);
        *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
        *(int32x2_t *)v157.i8 = vmovn_s64(v157);
        int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v150, (int32x4_t)v157);
        *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v158);
        *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xAuLL);
        int v159 = (int64x2_t *)((char *)v85 + 8 * (v146 >> 6));
        int64x2_t v160 = vaddq_s64(v89, vdupq_n_s64(v146 & 0x3F));
        int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v150, v158), v137);
        int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v160)));
        if (v51 + (v146 & 0x3F) >= 0x81) {
          int8x16_t v162 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v159[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v160))), v162);
        }
        int64x2_t v54 = (int64x2_t)vshlq_n_s16(v151, 6uLL);
        int64x2_t v55 = (int64x2_t)vshlq_n_s16(v152, 6uLL);
        int64x2_t v57 = (int64x2_t)vshlq_n_s16(v153, 6uLL);
        int64x2_t v56 = (int64x2_t)vshlq_n_s16(v154, 6uLL);
        int64x2_t v52 = (int64x2_t)vshlq_n_s16(v155, 6uLL);
        int64x2_t v53 = (int64x2_t)vshlq_n_s16(v156, 6uLL);
        int64x2_t v163 = (int64x2_t)vshlq_u64((uint64x2_t)v162, v94);
        *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v162);
        *(int32x2_t *)v163.i8 = vmovn_s64(v163);
        int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v154, (int32x4_t)v163);
        *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v164);
        *(int16x4_t *)v164.i8 = vshrn_n_s32((int32x4_t)v164, 0xAuLL);
        int16x8_t v165 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v154, v164), v137);
        int64x2_t v59 = (int64x2_t)vshlq_n_s16(v161, 6uLL);
        int64x2_t v58 = (int64x2_t)vshlq_n_s16(v165, 6uLL);
      }
      else
      {
        int64x2_t v53 = 0uLL;
        int64x2_t v54 = 0uLL;
        int64x2_t v55 = 0uLL;
        int64x2_t v56 = 0uLL;
        int64x2_t v57 = 0uLL;
        int64x2_t v58 = 0uLL;
        int64x2_t v59 = 0uLL;
      }
      int v166 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v54, v55);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v52, v53);
      int v167 = (int64x2_t *)(a1 + 2 * a2);
      *int v166 = vzip2q_s64(v54, v55);
      v166[1] = vzip2q_s64(v52, v53);
      *int v167 = vzip1q_s64(v57, v56);
      v167[1] = vzip1q_s64(v59, v58);
      unint64_t v168 = (int64x2_t *)((char *)v167 + a2);
      *unint64_t v168 = vzip2q_s64(v57, v56);
      v168[1] = vzip2q_s64(v59, v58);
      return 80;
    case 2u:
      int32x4_t v16 = vdupq_n_s32((*(_DWORD *)a3 << 12) & 0xFFC00000 | ((*(_DWORD *)a3 & 0x3FF) << 6));
      *(int32x4_t *)a1 = v16;
      *(int32x4_t *)(a1 + 16) = v16;
      unint64_t v17 = (int32x4_t *)(a1 + a2);
      *unint64_t v17 = v16;
      v17[1] = v16;
      unsigned int v18 = (int32x4_t *)(a1 + 2 * a2);
      *unsigned int v18 = v16;
      v18[1] = v16;
      int v19 = (int32x4_t *)(a1 + a2 + 2 * a2);
      *int v19 = v16;
      v19[1] = v16;
      return 3;
    default:
      unint64_t v60 = 8 * (a3 & 7);
      unint64_t v61 = a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = v60 + 18;
      uint64_t v63 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v60;
      if (v60 >= 0x2F) {
        v63 |= *(void *)(v61 + 8) << (-8 * (a3 & 7u));
      }
      a6.i32[0] = v63;
      a6.i32[1] = (unsigned __int16)v63 >> 5;
      *(int8x8_t *)a6.i8 = vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0x1F0000001FLL);
      *(int16x4_t *)a6.i8 = vmovn_s32(a6);
      a7.i32[0] = (unsigned __int16)v63 >> 10;
      a7.i32[1] = v63 >> 14;
      *(int32x2_t *)a7.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a7.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
      *(int16x4_t *)a7.i8 = vmovn_s32(a7);
      unint64_t v64 = v60 + 38;
      unint64_t v65 = v62 >> 6;
      unint64_t v66 = v62 & 0x3A;
      uint64_t v67 = *(void *)(v61 + 8 * v65) >> v66;
      if (v66 >= 0x2D) {
        v67 |= *(void *)(v61 + 8 * v65 + 8) << -(char)v66;
      }
      int8x16_t v68 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
      int8x16_t v69 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a7.i8, 0);
      unint64_t v70 = (8 * (a3 & 7)) | 0x180;
      v71.i64[0] = 0x3000300030003;
      v71.i64[1] = 0x3000300030003;
      int16x8_t v72 = (int16x8_t)vandq_s8(v68, v71);
      int8x16_t v73 = vbicq_s8(v69, (int8x16_t)vceqq_s16(v72, (int16x8_t)v71));
      v71.i64[0] = 0x202020202020202;
      v71.i64[1] = 0x202020202020202;
      int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v68.i8, (int8x8_t)0x4000400040004)))), v71);
      if (vmaxvq_s8(v74) < 1)
      {
        int v84 = 0;
        v169.i64[0] = -1;
        v169.i64[1] = -1;
        int8x16_t v170 = v73;
        int8x16_t v171 = v73;
        int8x16_t v172 = v73;
        v173.i64[0] = -1;
        v173.i64[1] = -1;
        int8x16_t v174 = v73;
        v175.i64[0] = -1;
        v175.i64[1] = -1;
        v176.i64[0] = -1;
        v176.i64[1] = -1;
      }
      else
      {
        int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
        int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
        unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
        v78.i64[0] = v77;
        v78.i64[1] = HIDWORD(v77);
        int64x2_t v79 = v78;
        unint64_t v80 = vaddvq_s64(v78);
        unint64_t v81 = v64 + v80;
        if (v80 <= 0x80 && v70 >= v81)
        {
          unint64_t v177 = v64 & 0x3E;
          int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v79));
          unint64_t v179 = (int64x2_t *)(v61 + ((v64 >> 3) & 8));
          int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
          if (v177 + v80 < 0x81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = 0;
            int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v83);
          }
          unint64_t v64 = v81;
        }
        else
        {
          int8x16_t v83 = 0uLL;
          int v84 = 1;
        }
        int32x2_t v180 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
        v181.i64[0] = v180.u32[0];
        v181.i64[1] = v180.u32[1];
        int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v181));
        *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
        *(int32x2_t *)v182.i8 = vmovn_s64(v182);
        int8x16_t v183 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v182);
        int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v183, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
        *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
        *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
        int16x8_t v185 = vzip1q_s16((int16x8_t)v183, v184);
        v183.i64[0] = 0x101010101010101;
        v183.i64[1] = 0x101010101010101;
        *(int8x8_t *)v186.i8 = vand_s8(vzip1_s8(vmovn_s16(v185), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v185, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v68.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v183, v74), (int8x8_t)-1));
        v186.i64[1] = v186.i64[0];
        *(int8x8_t *)v186.i8 = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
        *(int16x4_t *)v185.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 0);
        *(int16x4_t *)v183.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 1);
        int8x8_t v187 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 2);
        int8x8_t v188 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 3);
        int8x16_t v174 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v185.i8);
        int8x16_t v172 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v183.i8);
        int8x16_t v171 = (int8x16_t)vsubw_s8((int16x8_t)v73, v187);
        int8x16_t v170 = (int8x16_t)vsubw_s8((int16x8_t)v73, v188);
        int8x16_t v176 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v185.i8));
        int8x16_t v175 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v183.i8));
        int8x16_t v173 = (int8x16_t)vmovl_s8(vceqz_s8(v187));
        int8x16_t v169 = (int8x16_t)vmovl_s8(vceqz_s8(v188));
      }
      v189.i64[0] = 0x8000800080008;
      v189.i64[1] = 0x8000800080008;
      int8x16_t v190 = 0uLL;
      int8x16_t v191 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v68, v189), (int8x16_t)0, 0xCuLL), v73);
      int8x16_t v192 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v191, (int16x8_t)v191));
      v189.i64[0] = vpaddq_s32((int32x4_t)v192, (int32x4_t)v192).u64[0];
      v193.i64[0] = v189.u32[0];
      v193.i64[1] = v189.u32[1];
      int64x2_t v194 = v193;
      unint64_t v195 = vaddvq_s64(v193);
      unint64_t v196 = v64 + v195;
      if (v195 <= 0x80 && v70 >= v196)
      {
        unint64_t v198 = v64 & 0x3F;
        int64x2_t v199 = vaddq_s64(vdupq_n_s64(v198), vzip1q_s64((int64x2_t)0, v194));
        unint64_t v200 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v190 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v200, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200->i64[0], 0), (uint64x2_t)vnegq_s64(v199)));
        if (v198 + v195 >= 0x81) {
          int8x16_t v190 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v200[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v199))), v190);
        }
        unint64_t v64 = v196;
      }
      else
      {
        int v84 = 1;
      }
      int v201 = v68.i8[0] & 3;
      if (v201 == 2)
      {
        BOOL v202 = v70 < v64 + 8;
        unint64_t v203 = v64 + 16;
        if (v70 >= v64 + 8) {
          v64 += 8;
        }
        if (v203 > v70 || v202) {
          int v84 = 1;
        }
        else {
          v64 += 8;
        }
      }
      int8x16_t v205 = 0uLL;
      int8x16_t v206 = vextq_s8((int8x16_t)0, v174, 0xCuLL);
      int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v206, (int16x8_t)v206));
      unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
      v209.i64[0] = v208;
      v209.i64[1] = HIDWORD(v208);
      int64x2_t v210 = v209;
      unint64_t v211 = vaddvq_s64(v209);
      unint64_t v212 = v64 + v211;
      if (v211 <= 0x80 && v70 >= v212)
      {
        unint64_t v215 = v64 & 0x3F;
        int64x2_t v216 = vaddq_s64(vdupq_n_s64(v215), vzip1q_s64((int64x2_t)0, v210));
        unint64_t v217 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v217, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217->i64[0], 0), (uint64x2_t)vnegq_s64(v216)));
        if (v215 + v211 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v217[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v216))), v214);
        }
        unint64_t v64 = v212;
      }
      else
      {
        int v84 = 1;
        int8x16_t v214 = 0uLL;
      }
      int8x16_t v218 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v174, (int16x8_t)v174));
      unint64_t v219 = vpaddq_s32((int32x4_t)v218, (int32x4_t)v218).u64[0];
      v220.i64[0] = v219;
      v220.i64[1] = HIDWORD(v219);
      int64x2_t v221 = v220;
      unint64_t v222 = vaddvq_s64(v220);
      unint64_t v223 = v64 + v222;
      if (v222 <= 0x80 && v70 >= v223)
      {
        unint64_t v225 = v64 & 0x3F;
        int64x2_t v226 = vaddq_s64(vdupq_n_s64(v225), vzip1q_s64((int64x2_t)0, v221));
        int v227 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v226)));
        if (v225 + v222 >= 0x81) {
          int8x16_t v205 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v226))), v205);
        }
        unint64_t v64 = v223;
      }
      else
      {
        int v84 = 1;
      }
      int8x16_t v228 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v172, (int16x8_t)v172));
      unint64_t v229 = vpaddq_s32((int32x4_t)v228, (int32x4_t)v228).u64[0];
      v230.i64[0] = v229;
      v230.i64[1] = HIDWORD(v229);
      int64x2_t v231 = v230;
      unint64_t v232 = vaddvq_s64(v230);
      unint64_t v233 = v64 + v232;
      int8x16_t v234 = 0uLL;
      if (v232 <= 0x80 && v70 >= v233)
      {
        unint64_t v237 = v64 & 0x3F;
        int64x2_t v238 = vaddq_s64(vdupq_n_s64(v237), vzip1q_s64((int64x2_t)0, v231));
        uint64_t v239 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v236 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v239, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239->i64[0], 0), (uint64x2_t)vnegq_s64(v238)));
        if (v237 + v232 >= 0x81) {
          int8x16_t v236 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v239[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v238))), v236);
        }
        unint64_t v64 = v233;
      }
      else
      {
        int v84 = 1;
        int8x16_t v236 = 0uLL;
      }
      if (v232 > 0x80 || (unint64_t v240 = v64 + v232, v70 < v64 + v232))
      {
        int v84 = 1;
        unint64_t v240 = v64;
      }
      else
      {
        unint64_t v241 = v64 & 0x3F;
        int64x2_t v242 = vaddq_s64(vdupq_n_s64(v241), vzip1q_s64((int64x2_t)0, v231));
        unsigned int v243 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v234 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v243, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243->i64[0], 0), (uint64x2_t)vnegq_s64(v242)));
        if (v241 + v232 >= 0x81) {
          int8x16_t v234 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v243[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v242))), v234);
        }
      }
      int8x16_t v244 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v171, (int16x8_t)v171));
      unint64_t v245 = vpaddq_s32((int32x4_t)v244, (int32x4_t)v244).u64[0];
      v246.i64[0] = v245;
      v246.i64[1] = HIDWORD(v245);
      int64x2_t v247 = v246;
      unint64_t v248 = vaddvq_s64(v246);
      int8x16_t v249 = 0uLL;
      if (v248 > 0x80 || (unint64_t v250 = v240 + v248, v70 < v240 + v248))
      {
        int v84 = 1;
        unint64_t v250 = v240;
        int8x16_t v253 = 0uLL;
      }
      else
      {
        int64x2_t v251 = vaddq_s64(vdupq_n_s64(v240 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v252 = (int64x2_t *)(v61 + 8 * (v240 >> 6));
        int8x16_t v253 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v252, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252->i64[0], 0), (uint64x2_t)vnegq_s64(v251)));
        if ((v240 & 0x3F) + v248 >= 0x81) {
          int8x16_t v253 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v252[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v251))), v253);
        }
      }
      if (v248 > 0x80 || (unint64_t v254 = v250 + v248, v70 < v250 + v248))
      {
        int v84 = 1;
        unint64_t v254 = v250;
      }
      else
      {
        int64x2_t v255 = vaddq_s64(vdupq_n_s64(v250 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v256 = (int64x2_t *)(v61 + 8 * (v250 >> 6));
        int8x16_t v249 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v256, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256->i64[0], 0), (uint64x2_t)vnegq_s64(v255)));
        if ((v250 & 0x3F) + v248 >= 0x81) {
          int8x16_t v249 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v256[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v255))), v249);
        }
      }
      int8x16_t v257 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
      unint64_t v258 = vpaddq_s32((int32x4_t)v257, (int32x4_t)v257).u64[0];
      v259.i64[0] = v258;
      v259.i64[1] = HIDWORD(v258);
      int64x2_t v260 = v259;
      unint64_t v261 = vaddvq_s64(v259);
      int8x16_t v262 = 0uLL;
      if (v261 > 0x80 || (unint64_t v263 = v254 + v261, v70 < v254 + v261))
      {
        int v84 = 1;
        unint64_t v263 = v254;
        int8x16_t v267 = 0uLL;
      }
      else
      {
        unint64_t v264 = v254 & 0x3F;
        int64x2_t v265 = vaddq_s64(vdupq_n_s64(v264), vzip1q_s64((int64x2_t)0, v260));
        int v266 = (int64x2_t *)(v61 + 8 * (v254 >> 6));
        int8x16_t v267 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v266, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266->i64[0], 0), (uint64x2_t)vnegq_s64(v265)));
        if (v264 + v261 >= 0x81) {
          int8x16_t v267 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v266[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v265))), v267);
        }
      }
      if (v261 > 0x80 || (unint64_t v268 = v263 + v261, v70 < v263 + v261))
      {
        int v84 = 1;
        unint64_t v268 = v263;
      }
      else
      {
        int64x2_t v269 = vaddq_s64(vdupq_n_s64(v263 & 0x3F), vzip1q_s64((int64x2_t)0, v260));
        int v270 = (int64x2_t *)(v61 + 8 * (v263 >> 6));
        int8x16_t v262 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v270, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270->i64[0], 0), (uint64x2_t)vnegq_s64(v269)));
        if ((v263 & 0x3F) + v261 >= 0x81) {
          int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v270[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v269))), v262);
        }
      }
      if (v84 || (uint64_t result = a4 + 1, v70 + 8 * result - v268 - 384 >= 9) || v201 == 2)
      {
        uint64_t result = 0;
        v431 |= 1023 << ((8 * &v431) & 0x20);
        long long v12 = 0uLL;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        unsigned int v271 = (_OWORD *)(a1 + a2);
        *unsigned int v271 = 0u;
        v271[1] = 0u;
        unsigned int v272 = (_OWORD *)(a1 + 2 * a2);
        uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
        *unsigned int v272 = 0u;
        v272[1] = 0u;
        goto LABEL_6;
      }
      int32x2_t v273 = vzip1_s32(*(int32x2_t *)v192.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v192, v192, 8uLL));
      int32x2_t v274 = vzip1_s32(*(int32x2_t *)v228.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v228, v228, 8uLL));
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      int64x2_t v276 = v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)vnegq_s64(v276);
      uint64x2_t v278 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v279 = (int64x2_t)vshlq_u64((uint64x2_t)v190, v277);
      *(int32x2_t *)v190.i8 = vmovn_s64((int64x2_t)v190);
      *(int32x2_t *)v279.i8 = vmovn_s64(v279);
      int16x8_t v280 = (int16x8_t)vzip1q_s32((int32x4_t)v190, (int32x4_t)v279);
      int64x2_t v281 = (int64x2_t)vshlq_u64((uint64x2_t)v236, v278);
      *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v236);
      *(int32x2_t *)v281.i8 = vmovn_s64(v281);
      int16x8_t v282 = (int16x8_t)vzip1q_s32((int32x4_t)v236, (int32x4_t)v281);
      int64x2_t v283 = (int64x2_t)vshlq_u64((uint64x2_t)v234, v278);
      *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v234);
      *(int32x2_t *)v283.i8 = vmovn_s64(v283);
      int16x8_t v284 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v283);
      uint32x4_t v285 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v172.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL))));
      int16x8_t v286 = (int16x8_t)vshlq_u32((uint32x4_t)v280, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v191.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v191, v191, 8uLL)))));
      *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
      *(int16x4_t *)v286.i8 = vmovn_s32((int32x4_t)v286);
      int16x8_t v287 = vzip1q_s16(v280, v286);
      int16x8_t v288 = (int16x8_t)vshlq_u32((uint32x4_t)v282, v285);
      int16x8_t v289 = (int16x8_t)vshlq_u32((uint32x4_t)v284, v285);
      *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
      *(int16x4_t *)v288.i8 = vmovn_s32((int32x4_t)v288);
      *(int16x4_t *)v284.i8 = vmovn_s32((int32x4_t)v284);
      *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
      int16x8_t v290 = vzip1q_s16(v282, v288);
      v288.i64[0] = 0x10001000100010;
      v288.i64[1] = 0x10001000100010;
      int16x8_t v291 = vzip1q_s16(v284, v289);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      int16x8_t v292 = vsubq_s16(v288, (int16x8_t)v191);
      int16x8_t v293 = vaddq_s16((int16x8_t)v191, v289);
      v289.i64[0] = 0x10001000100010;
      v289.i64[1] = 0x10001000100010;
      int16x8_t v294 = vshlq_s16(v287, v292);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      int16x8_t v295 = vsubq_s16(v289, (int16x8_t)v172);
      int16x8_t v296 = vaddq_s16((int16x8_t)v172, v292);
      int8x16_t v297 = (int8x16_t)vshlq_s16(v294, v293);
      int16x8_t v298 = vshlq_s16(vshlq_s16(v290, v295), v296);
      int16x8_t v299 = vshlq_s16(vshlq_s16(v291, v295), v296);
      int8x16_t v300 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v297.i8, 0);
      int16x8_t v301 = (int16x8_t)vandq_s8(v175, v300);
      int16x8_t v302 = vsubq_s16(v298, v301);
      int16x8_t v303 = vsubq_s16(v299, v301);
      *(int32x2_t *)v298.i8 = vzip1_s32(*(int32x2_t *)v244.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL));
      *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v257.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v257, v257, 8uLL));
      v275.i64[0] = v298.u32[0];
      v275.i64[1] = v298.u32[1];
      int64x2_t v304 = v275;
      v275.i64[0] = v299.u32[0];
      v275.i64[1] = v299.u32[1];
      uint64x2_t v305 = (uint64x2_t)vnegq_s64(v304);
      int64x2_t v306 = (int64x2_t)vshlq_u64((uint64x2_t)v253, v305);
      *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v253);
      *(int32x2_t *)v306.i8 = vmovn_s64(v306);
      int16x8_t v307 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v306);
      uint64x2_t v308 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v249, v305);
      *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v249);
      *(int32x2_t *)v309.i8 = vmovn_s64(v309);
      int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v309);
      int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v267, v308);
      *(int32x2_t *)v253.i8 = vmovn_s64((int64x2_t)v267);
      *(int32x2_t *)v311.i8 = vmovn_s64(v311);
      uint32x4_t v312 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v171.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL))));
      int16x8_t v313 = (int16x8_t)vzip1q_s32((int32x4_t)v253, (int32x4_t)v311);
      int16x8_t v314 = (int16x8_t)vshlq_u32((uint32x4_t)v307, v312);
      int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v312);
      *(int16x4_t *)v307.i8 = vmovn_s32((int32x4_t)v307);
      *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
      *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
      *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
      int16x8_t v316 = vzip1q_s16(v307, v314);
      v314.i64[0] = 0x10001000100010;
      v314.i64[1] = 0x10001000100010;
      int16x8_t v317 = vzip1q_s16(v310, v315);
      v315.i64[0] = 0xF000F000F000FLL;
      v315.i64[1] = 0xF000F000F000FLL;
      int16x8_t v318 = vsubq_s16(v314, (int16x8_t)v171);
      int16x8_t v319 = vaddq_s16((int16x8_t)v171, v315);
      uint32x4_t v320 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL))));
      int16x8_t v321 = vshlq_s16(vshlq_s16(v316, v318), v319);
      int16x8_t v322 = vshlq_s16(vshlq_s16(v317, v318), v319);
      int16x8_t v323 = (int16x8_t)vandq_s8(v173, v300);
      int16x8_t v324 = vsubq_s16(v321, v323);
      int16x8_t v325 = vsubq_s16(v322, v323);
      int16x8_t v326 = (int16x8_t)vshlq_u32((uint32x4_t)v313, v320);
      *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v313);
      *(int16x4_t *)v326.i8 = vmovn_s32((int32x4_t)v326);
      v313.i64[0] = 0x10001000100010;
      v313.i64[1] = 0x10001000100010;
      int16x8_t v327 = vzip1q_s16(v321, v326);
      v321.i64[0] = 0xF000F000F000FLL;
      v321.i64[1] = 0xF000F000F000FLL;
      int16x8_t v328 = vsubq_s16(v313, (int16x8_t)v170);
      int16x8_t v329 = vaddq_s16((int16x8_t)v170, v321);
      int64x2_t v330 = (int64x2_t)vshlq_u64((uint64x2_t)v262, v308);
      *(int32x2_t *)v321.i8 = vmovn_s64((int64x2_t)v262);
      *(int32x2_t *)v330.i8 = vmovn_s64(v330);
      int16x8_t v331 = (int16x8_t)vzip1q_s32((int32x4_t)v321, (int32x4_t)v330);
      int16x8_t v332 = (int16x8_t)vshlq_u32((uint32x4_t)v331, v320);
      *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
      *(int16x4_t *)v332.i8 = vmovn_s32((int32x4_t)v332);
      int16x8_t v333 = vshlq_s16(vshlq_s16(vzip1q_s16(v331, v332), v328), v329);
      int16x8_t v334 = (int16x8_t)vandq_s8(v169, v300);
      int16x8_t v335 = vsubq_s16(vshlq_s16(vshlq_s16(v327, v328), v329), v334);
      int16x8_t v336 = vsubq_s16(v333, v334);
      int32x2_t v337 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
      int32x2_t v338 = vzip1_s32(*(int32x2_t *)v218.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v218, v218, 8uLL));
      v275.i64[0] = v337.u32[0];
      v275.i64[1] = v337.u32[1];
      int64x2_t v339 = v275;
      v275.i64[0] = v338.u32[0];
      v275.i64[1] = v338.u32[1];
      int64x2_t v340 = (int64x2_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)vnegq_s64(v339));
      *(int32x2_t *)v214.i8 = vmovn_s64((int64x2_t)v214);
      *(int32x2_t *)v340.i8 = vmovn_s64(v340);
      int16x8_t v341 = (int16x8_t)vzip1q_s32((int32x4_t)v214, (int32x4_t)v340);
      int64x2_t v342 = (int64x2_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)vnegq_s64(v275));
      *(int32x2_t *)v205.i8 = vmovn_s64((int64x2_t)v205);
      *(int32x2_t *)v342.i8 = vmovn_s64(v342);
      int16x8_t v343 = (int16x8_t)vzip1q_s32((int32x4_t)v205, (int32x4_t)v342);
      int16x8_t v344 = (int16x8_t)vshlq_u32((uint32x4_t)v341, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v206.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v206, v206, 8uLL)))));
      int16x8_t v345 = (int16x8_t)vshlq_u32((uint32x4_t)v343, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v174.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v174, v174, 8uLL)))));
      *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
      *(int16x4_t *)v344.i8 = vmovn_s32((int32x4_t)v344);
      *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
      *(int16x4_t *)v345.i8 = vmovn_s32((int32x4_t)v345);
      int16x8_t v346 = vzip1q_s16(v341, v344);
      v344.i64[0] = 0x10001000100010;
      v344.i64[1] = 0x10001000100010;
      int16x8_t v347 = vzip1q_s16(v343, v345);
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      int16x8_t v348 = vaddq_s16((int16x8_t)vandq_s8(v297, v176), vshlq_s16(vshlq_s16(v346, vsubq_s16(v344, (int16x8_t)v206)), vaddq_s16((int16x8_t)v206, v345)));
      int16x8_t v349 = (int16x8_t)vandq_s8(v176, v300);
      v350.i64[0] = 0x1000100010001;
      v350.i64[1] = 0x1000100010001;
      int16x8_t v351 = vceqq_s16(v72, (int16x8_t)v350);
      int v352 = (unsigned __int16)vaddvq_s16(v351);
      int8x16_t v353 = (int8x16_t)vsubq_s16(v348, v349);
      int8x16_t v354 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v347, vsubq_s16(v344, (int16x8_t)v174)), vaddq_s16((int16x8_t)v174, v345)), v349);
      v351.i16[0] = v67 & 0x3FF;
      v351.i16[1] = (v67 >> 10) & 0x3FF;
      int16x8_t v355 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v351.i8, 0);
      if (v352)
      {
        int8x16_t v356 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v68, v350));
        int8x16_t v357 = v354;
        v357.i32[3] = v353.i32[0];
        int8x16_t v358 = v353;
        v358.i32[0] = v354.i32[3];
        v447.val[0] = vbslq_s8(v356, v358, v353);
        v447.val[1] = vbslq_s8(v356, v357, v354);
        v359.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
        v359.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7570), v356), (int16x8_t)v447.val[0]);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356));
        int8x16_t v353 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA7580), v356), (int16x8_t)v448.val[0]);
        int8x16_t v354 = (int8x16_t)vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA7590), v356), v302);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA75A0), v356), v303);
        int16x8_t v302 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75B0), v356), (int16x8_t)v448.val[0]);
        int16x8_t v303 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA75C0), v356), v324);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA7570), v356), v325);
        int16x8_t v324 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356), (int16x8_t)v448.val[0]);
        int16x8_t v325 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75D0), v356));
        v447.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA75E0), v356), v335);
        v447.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA7570), v356), v336);
        int16x8_t v335 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356), (int16x8_t)v447.val[0]);
        int16x8_t v336 = vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA75F0), v356));
      }
      int8x16_t v360 = (int8x16_t)vaddq_s16((int16x8_t)v353, v355);
      int8x16_t v361 = (int8x16_t)vaddq_s16((int16x8_t)v354, v355);
      int8x16_t v362 = (int8x16_t)vaddq_s16(v302, v355);
      int8x16_t v363 = (int8x16_t)vaddq_s16(v303, v355);
      int8x16_t v364 = (int8x16_t)vaddq_s16(v324, v355);
      int8x16_t v365 = (int8x16_t)vaddq_s16(v325, v355);
      int8x16_t v366 = (int8x16_t)vaddq_s16(v335, v355);
      int8x16_t v367 = (int8x16_t)vaddq_s16(v336, v355);
      v368.i64[0] = 0x10001000100010;
      v368.i64[1] = 0x10001000100010;
      int8x16_t v369 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v68, v368));
      int16x8_t v370 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v360, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v360);
      int16x8_t v371 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v361, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v361);
      int16x8_t v372 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v362, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v362);
      int16x8_t v373 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v363, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v363);
      int16x8_t v374 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v364, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v364);
      int16x8_t v375 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v365, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v365);
      int16x8_t v376 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v366, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v366);
      int16x8_t v377 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v367, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v367);
      int64x2_t v378 = (int64x2_t)vshlq_n_s16(v370, 6uLL);
      int64x2_t v379 = (int64x2_t)vshlq_n_s16(v371, 6uLL);
      int64x2_t v380 = (int64x2_t)vshlq_n_s16(v372, 6uLL);
      int64x2_t v381 = (int64x2_t)vshlq_n_s16(v374, 6uLL);
      int64x2_t v382 = (int64x2_t)vshlq_n_s16(v375, 6uLL);
      uint16x8_t v383 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v378, v379);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v381, v382);
      char v384 = (int64x2_t *)(a1 + 2 * a2);
      int64x2_t v385 = (int64x2_t)vshlq_n_s16(v373, 6uLL);
      int64x2_t v386 = (int64x2_t)vshlq_n_s16(v376, 6uLL);
      *uint16x8_t v383 = vzip2q_s64(v378, v379);
      v383[1] = vzip2q_s64(v381, v382);
      int64x2_t v387 = (int64x2_t)vshlq_n_s16(v377, 6uLL);
      *char v384 = vzip1q_s64(v380, v385);
      v384[1] = vzip1q_s64(v386, v387);
      int32x4_t v388 = (int64x2_t *)((char *)v384 + a2);
      *int32x4_t v388 = vzip2q_s64(v380, v385);
      v388[1] = vzip2q_s64(v386, v387);
      break;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int32x4_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int32x4_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *__int16 v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  uint64_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    int v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *uint64_t v31 = 0;
    int v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  uint64_t v9 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1, 64, a2, *a3, a4, a5, a6);
  uint64_t v12 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 32, 64, v9, a3[1], a4, v10, v11);
  uint64_t v15 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 256, 64, v12, a3[2], a4, v13, v14);
  uint64_t v18 = v15
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 288, 64, v15, a3[3], a4, v16, v17);
  uint64_t v21 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 512, 64, v18, a3[4], a4, v19, v20);
  uint64_t v24 = v21
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 544, 64, v21, a3[5], a4, v22, v23);
  uint64_t v27 = v24
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 768, 64, v24, a3[6], a4, v25, v26);
  unsigned int v30 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)5,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 800, 64, v27, v30, a4, v28, v29);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)0>::decompressSubblock(int32x4_t *a1, uint64_t a2, int32x4_t *a3, int a4, double a5, double a6, double a7, int8x8_t a8)
{
  if (a4 > 46)
  {
    if (a4 == 47)
    {
      v18.i64[0] = 0xC000C000C000CLL;
      v18.i64[1] = 0xC000C000C000CLL;
      int8x16_t v19 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v18, v18));
      unint64_t v20 = vpaddq_s32((int32x4_t)v19, (int32x4_t)v19).u64[0];
      v21.i64[0] = v20;
      v21.i64[1] = HIDWORD(v20);
      int8x16_t v22 = (int8x16_t)v21;
      unint64_t v23 = vaddvq_s64(v21);
      int8x16_t v24 = 0uLL;
      int8x16_t v25 = 0uLL;
      int8x16_t v26 = 0uLL;
      int8x16_t v27 = 0uLL;
      if (v23 <= 0x80)
      {
        int32x4_t v28 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v29 = 8 * (a3 & 7);
        int64x2_t v30 = vzip1q_s64((int64x2_t)0, (int64x2_t)v22);
        unint64_t v31 = v23 + v29;
        int64x2_t v32 = vaddq_s64(v30, vdupq_n_s64(v29));
        int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v32)));
        if (v23 + v29 >= 0x81) {
          int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v28[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v28[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), v25);
        }
        unint64_t v33 = v31 & 0x3F;
        int v34 = (int64x2_t *)((char *)v28 + 8 * (v31 >> 6));
        int64x2_t v35 = vaddq_s64(v30, vdupq_n_s64(v33));
        unint64_t v36 = v23 + v31;
        int8x16_t v26 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v34, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v35)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v34->i64[0], 0), (uint64x2_t)vnegq_s64(v35)));
        if (v23 + v33 >= 0x81) {
          int8x16_t v26 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v34[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v35)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v34[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v35))), v26);
        }
        unint64_t v37 = v36 & 0x3F;
        int64x2_t v38 = (int64x2_t *)((char *)v28 + 8 * (v36 >> 6));
        int64x2_t v39 = vaddq_s64(v30, vdupq_n_s64(v37));
        unint64_t v40 = v23 + v36;
        int8x16_t v24 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v38, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v39)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v38->i64[0], 0), (uint64x2_t)vnegq_s64(v39)));
        if (v23 + v37 >= 0x81) {
          int8x16_t v24 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v38[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v39)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v38[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v39))), v24);
        }
        int8x16_t v22 = (int8x16_t)vaddq_s64(v30, vdupq_n_s64(v40 & 0x3F));
        int64x2_t v41 = (int64x2_t *)((char *)v28 + 8 * (v40 >> 6));
        int8x16_t v27 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v41, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v22)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v22)));
        if (v23 + (v40 & 0x3F) >= 0x81)
        {
          int8x16_t v22 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v22)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v41[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v22)));
          int8x16_t v27 = vorrq_s8(v22, v27);
        }
      }
      *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v24);
      int32x2_t v42 = vzip1_s32(*(int32x2_t *)v19.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL));
      v43.i64[0] = v42.u32[0];
      v43.i64[1] = v42.u32[1];
      uint64x2_t v44 = (uint64x2_t)vnegq_s64(v43);
      int64x2_t v45 = (int64x2_t)vshlq_u64((uint64x2_t)v24, v44);
      *(int32x2_t *)v45.i8 = vmovn_s64(v45);
      int16x8_t v46 = (int16x8_t)vzip1q_s32((int32x4_t)v22, (int32x4_t)v45);
      *(int16x4_t *)v22.i8 = vmovn_s32((int32x4_t)v46);
      *(int16x4_t *)v46.i8 = vshrn_n_s32((int32x4_t)v46, 0xCuLL);
      int8x16_t v47 = (int8x16_t)vzip1q_s16((int16x8_t)v22, v46);
      v48.i64[0] = 0x1000100010001;
      v48.i64[1] = 0x1000100010001;
      v49.i64[0] = -1;
      v49.i64[1] = -1;
      int8x16_t v50 = (int8x16_t)vaddq_s16(vshlq_n_s16(v48, 0xCuLL), v49);
      *(int32x2_t *)v49.i8 = vmovn_s64((int64x2_t)v26);
      int64x2_t v51 = (int64x2_t)vshlq_u64((uint64x2_t)v26, v44);
      *(int32x2_t *)v51.i8 = vmovn_s64(v51);
      int16x8_t v52 = (int16x8_t)vzip1q_s32((int32x4_t)v49, (int32x4_t)v51);
      *(int16x4_t *)v49.i8 = vmovn_s32((int32x4_t)v52);
      *(int16x4_t *)v52.i8 = vshrn_n_s32((int32x4_t)v52, 0xCuLL);
      int16x8_t v53 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v49, v52), v50);
      *(int32x2_t *)v49.i8 = vmovn_s64((int64x2_t)v25);
      int64x2_t v54 = (int64x2_t)vshlq_u64((uint64x2_t)v25, v44);
      *(int32x2_t *)v54.i8 = vmovn_s64(v54);
      int16x8_t v55 = (int16x8_t)vzip1q_s32((int32x4_t)v49, (int32x4_t)v54);
      *(int16x4_t *)v49.i8 = vmovn_s32((int32x4_t)v55);
      *(int16x4_t *)v55.i8 = vshrn_n_s32((int32x4_t)v55, 0xCuLL);
      int64x2_t v56 = (int64x2_t)vshlq_u64((uint64x2_t)v27, v44);
      *(int32x2_t *)v27.i8 = vmovn_s64((int64x2_t)v27);
      *(int32x2_t *)v56.i8 = vmovn_s64(v56);
      int16x8_t v57 = (int16x8_t)vzip1q_s32((int32x4_t)v27, (int32x4_t)v56);
      *(int16x4_t *)v27.i8 = vmovn_s32((int32x4_t)v57);
      *(int16x4_t *)v57.i8 = vshrn_n_s32((int32x4_t)v57, 0xCuLL);
      int16x8_t v58 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v27, v57), v50);
      int32x4_t v59 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v49, v55), v50), 4uLL);
      int32x4_t v60 = (int32x4_t)vshlq_n_s16(v53, 4uLL);
      int32x4_t v61 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v47, v50), 4uLL);
      int32x4_t v62 = (int32x4_t)vshlq_n_s16(v58, 4uLL);
      *a1 = vuzp1q_s32(v59, v61);
      *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v59, v61);
      uint64_t v63 = (int32x4_t *)((char *)a1 + 2 * a2);
      *uint64_t v63 = vuzp1q_s32(v60, v62);
      *(int32x4_t *)((char *)v63 + a2) = vuzp2q_s32(v60, v62);
      return 48;
    }
    if (a4 == 63)
    {
      int32x4_t v10 = *a3;
      int32x4_t v11 = a3[1];
      int32x4_t v12 = a3[2];
      int32x4_t v13 = a3[3];
      *a1 = vuzp1q_s32(*a3, v12);
      *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v10, v12);
      int32x4_t v14 = (int32x4_t *)((char *)a1 + 2 * a2);
      *int32x4_t v14 = vuzp1q_s32(v11, v13);
      *(int32x4_t *)((char *)v14 + a2) = vuzp2q_s32(v11, v13);
      return 64;
    }
  }
  else
  {
    if (!a4)
    {
      uint64_t v9 = 0;
      a1->i64[0] = 0;
      a1->i64[1] = 0;
      uint64_t v15 = (uint64_t *)((char *)a1->i64 + a2);
      void *v15 = 0;
      v15[1] = 0;
      int32x4_t v16 = (uint64_t *)((char *)a1->i64 + 2 * a2);
      *int32x4_t v16 = 0;
      v16[1] = 0;
      int32x4_t v17 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
LABEL_83:
      *int32x4_t v17 = 0;
      v17[1] = 0;
      return v9;
    }
    if (a4 == 1)
    {
      int16x8_t v8 = vdupq_n_s16(16 * a3->u16[0]);
      *a1 = (int32x4_t)v8;
      *(int16x8_t *)((char *)a1 + a2) = v8;
      *(int16x8_t *)((char *)a1 + 2 * a2) = v8;
      *(int16x8_t *)((char *)a1 + 3 * a2) = v8;
      return 2;
    }
  }
  unint64_t v64 = 8 * (a3 & 7);
  unint64_t v65 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = v64 + 18;
  uint64_t v67 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v64;
  if (v64 >= 0x2F) {
    v67 |= *(void *)(v65 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v68 = (8 * (a3 & 7)) | 0x180;
  int v69 = (a4 >> 6) | (4 * v67);
  uint16x8_t v70 = (uint16x8_t)vdupq_n_s16(v69 & 0xF);
  a8.i32[0] = v69 & 0xF;
  v71.i64[0] = 0x3000300030003;
  v71.i64[1] = 0x3000300030003;
  int8x16_t v72 = vbicq_s8((int8x16_t)vdupq_n_s16(((v67 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v71));
  int8x16_t v73 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v74.i64[0] = 0x202020202020202;
  v74.i64[1] = 0x202020202020202;
  int8x16_t v75 = vandq_s8(v73, v74);
  if (vmaxvq_s8(v75) < 1)
  {
    int v85 = 0;
    v86.i64[0] = -1;
    v86.i64[1] = -1;
    int8x16_t v87 = v72;
    int8x16_t v88 = v72;
    int8x16_t v89 = v72;
    v90.i64[0] = -1;
    v90.i64[1] = -1;
    int8x16_t v91 = v72;
    v92.i64[0] = -1;
    v92.i64[1] = -1;
    v93.i64[0] = -1;
    v93.i64[1] = -1;
  }
  else
  {
    int8x16_t v76 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v75, v75));
    int8x16_t v77 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v76, (int16x8_t)v76));
    unint64_t v78 = vpaddq_s32((int32x4_t)v77, (int32x4_t)v77).u64[0];
    v79.i64[0] = v78;
    v79.i64[1] = HIDWORD(v78);
    int64x2_t v80 = v79;
    unint64_t v81 = vaddvq_s64(v79);
    unint64_t v82 = v81 + v66;
    if (v81 <= 0x80 && v68 >= v82)
    {
      unint64_t v94 = v66 & 0x3A;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v80), vdupq_n_s64(v94));
      unint64_t v96 = (int64x2_t *)(v65 + ((v66 >> 3) & 8));
      int8x16_t v84 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v81 + v94 < 0x81)
      {
        int v85 = 0;
      }
      else
      {
        int v85 = 0;
        int8x16_t v84 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), v84);
      }
      unint64_t v66 = v82;
    }
    else
    {
      int8x16_t v84 = 0uLL;
      int v85 = 1;
    }
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v77.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = (int64x2_t)vshlq_u64((uint64x2_t)v84, (uint64x2_t)vnegq_s64(v98));
    *(int32x2_t *)v84.i8 = vmovn_s64((int64x2_t)v84);
    *(int32x2_t *)v99.i8 = vmovn_s64(v99);
    int8x16_t v100 = (int8x16_t)vzip1q_s32((int32x4_t)v84, (int32x4_t)v99);
    int16x8_t v101 = (int16x8_t)vshlq_u32((uint32x4_t)v100, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v76.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL)))));
    *(int16x4_t *)v100.i8 = vmovn_s32((int32x4_t)v100);
    *(int16x4_t *)v101.i8 = vmovn_s32((int32x4_t)v101);
    int8x16_t v102 = (int8x16_t)vzip1q_s16((int16x8_t)v100, v101);
    *(int8x8_t *)v102.i8 = vzip1_s8(vmovn_s16((int16x8_t)v102), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v102, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v75.i8, *(int8x8_t *)v70.i8))))));
    v100.i64[0] = 0x101010101010101;
    v100.i64[1] = 0x101010101010101;
    int8x16_t v103 = vshlq_s8(v100, v75);
    v100.i64[0] = -1;
    v100.i64[1] = -1;
    v103.i32[0] = vandq_s8(v102, vaddq_s8(v103, v100)).u32[0];
    int16x8_t v104 = vdupq_n_s16(v103.i8[0]);
    int16x8_t v105 = vdupq_n_s16(v103.i8[1]);
    int16x8_t v106 = vdupq_n_s16(v103.i8[2]);
    int16x8_t v107 = vdupq_n_s16(v103.i8[3]);
    int8x16_t v91 = (int8x16_t)vsubq_s16((int16x8_t)v72, v104);
    int8x16_t v89 = (int8x16_t)vsubq_s16((int16x8_t)v72, v105);
    int8x16_t v88 = (int8x16_t)vsubq_s16((int16x8_t)v72, v106);
    int8x16_t v87 = (int8x16_t)vsubq_s16((int16x8_t)v72, v107);
    int8x16_t v93 = (int8x16_t)vceqzq_s16(v104);
    int8x16_t v92 = (int8x16_t)vceqzq_s16(v105);
    int8x16_t v90 = (int8x16_t)vceqzq_s16(v106);
    int8x16_t v86 = (int8x16_t)vceqzq_s16(v107);
  }
  v108.i64[0] = 0x7000700070007;
  v108.i64[1] = 0x7000700070007;
  int8x16_t v109 = 0uLL;
  int8x16_t v110 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v70, v108), (int8x16_t)0, 0xEuLL), v72);
  int8x16_t v111 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v110, (int16x8_t)v110));
  unint64_t v112 = vpaddq_s32((int32x4_t)v111, (int32x4_t)v111).u64[0];
  v113.i64[0] = v112;
  v113.i64[1] = HIDWORD(v112);
  int64x2_t v114 = v113;
  unint64_t v115 = vaddvq_s64(v113);
  unint64_t v116 = v115 + v66;
  if (v115 <= 0x80 && v68 >= v116)
  {
    unint64_t v118 = v66 & 0x3F;
    int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v114), vdupq_n_s64(v118));
    uint64x2_t v120 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
    if (v115 + v118 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), v109);
    }
    unint64_t v66 = v116;
  }
  else
  {
    int v85 = 1;
  }
  int v121 = a4 >> 6;
  if (v121 == 2)
  {
    BOOL v122 = v68 >= v66 + 8;
    if (v68 >= v66 + 8) {
      v66 += 8;
    }
    unint64_t v123 = v66 + 8;
    if (!v122 || v68 < v123) {
      int v85 = 1;
    }
    if (v68 >= v123) {
      v66 += 8;
    }
  }
  int8x16_t v125 = 0uLL;
  int8x16_t v126 = vextq_s8((int8x16_t)0, v91, 0xEuLL);
  int8x16_t v127 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v126, (int16x8_t)v126));
  unint64_t v128 = vpaddq_s32((int32x4_t)v127, (int32x4_t)v127).u64[0];
  v129.i64[0] = v128;
  v129.i64[1] = HIDWORD(v128);
  int64x2_t v130 = v129;
  unint64_t v131 = vaddvq_s64(v129);
  unint64_t v132 = v131 + v66;
  if (v131 <= 0x80 && v68 >= v132)
  {
    unint64_t v135 = v66 & 0x3F;
    int64x2_t v136 = vaddq_s64(vzip1q_s64((int64x2_t)0, v130), vdupq_n_s64(v135));
    int8x16_t v137 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v137, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v136)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v137->i64[0], 0), (uint64x2_t)vnegq_s64(v136)));
    if (v131 + v135 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v137[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v136)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v137[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v136))), v134);
    }
    unint64_t v66 = v132;
  }
  else
  {
    int v85 = 1;
    int8x16_t v134 = 0uLL;
  }
  int8x16_t v138 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v89, (int16x8_t)v89));
  unint64_t v139 = vpaddq_s32((int32x4_t)v138, (int32x4_t)v138).u64[0];
  v140.i64[0] = v139;
  v140.i64[1] = HIDWORD(v139);
  int64x2_t v141 = v140;
  unint64_t v142 = vaddvq_s64(v140);
  if (v142 < 0x81)
  {
    int32x2_t v143 = vzip1_s32(*(int32x2_t *)v138.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v138, v138, 8uLL));
    v144.i64[0] = v143.u32[0];
    v144.i64[1] = v143.u32[1];
    int64x2_t v145 = v144;
    int32x4_t v146 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v89.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL)));
    unint64_t v147 = v142 + v66;
    if (v68 >= v142 + v66)
    {
      unint64_t v148 = v66 & 0x3F;
      int64x2_t v149 = vaddq_s64(vzip1q_s64((int64x2_t)0, v141), vdupq_n_s64(v148));
      int8x16_t v150 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
      int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v150, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v149)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v150->i64[0], 0), (uint64x2_t)vnegq_s64(v149)));
      if (v142 + v148 >= 0x81) {
        int8x16_t v125 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v150[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v149)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v150[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v149))), v125);
      }
      unint64_t v66 = v147;
    }
    else
    {
      int v85 = 1;
    }
    int64x2_t v151 = (int64x2_t)vshlq_u64((uint64x2_t)v125, (uint64x2_t)vnegq_s64(v145));
    *(int32x2_t *)v125.i8 = vmovn_s64((int64x2_t)v125);
    *(int32x2_t *)v151.i8 = vmovn_s64(v151);
    int16x8_t v152 = (int16x8_t)vzip1q_s32((int32x4_t)v125, (int32x4_t)v151);
    int16x8_t v153 = (int16x8_t)vshlq_u32((uint32x4_t)v152, (uint32x4_t)vnegq_s32(v146));
    *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
    *(int16x4_t *)v153.i8 = vmovn_s32((int32x4_t)v153);
    int8x16_t v125 = (int8x16_t)vzip1q_s16(v152, v153);
  }
  else
  {
    int v85 = 1;
  }
  int8x16_t v154 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v88, (int16x8_t)v88));
  unint64_t v155 = vpaddq_s32((int32x4_t)v154, (int32x4_t)v154).u64[0];
  v156.i64[0] = v155;
  v156.i64[1] = HIDWORD(v155);
  int64x2_t v157 = v156;
  unint64_t v158 = vaddvq_s64(v156);
  if (v158 <= 0x80)
  {
    int32x2_t v160 = vzip1_s32(*(int32x2_t *)v154.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v154, v154, 8uLL));
    v161.i64[0] = v160.u32[0];
    v161.i64[1] = v160.u32[1];
    int64x2_t v162 = v161;
    int32x4_t v163 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v88.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL)));
    unint64_t v164 = v158 + v66;
    if (v68 >= v158 + v66)
    {
      unint64_t v166 = v66 & 0x3F;
      int64x2_t v167 = vaddq_s64(vzip1q_s64((int64x2_t)0, v157), vdupq_n_s64(v166));
      unint64_t v168 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
      int8x16_t v165 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v168, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v167)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v168->i64[0], 0), (uint64x2_t)vnegq_s64(v167)));
      if (v158 + v166 >= 0x81) {
        int8x16_t v165 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v168[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v167)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v168[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v167))), v165);
      }
      unint64_t v66 = v164;
    }
    else
    {
      int8x16_t v165 = 0uLL;
      int v85 = 1;
    }
    int64x2_t v169 = (int64x2_t)vshlq_u64((uint64x2_t)v165, (uint64x2_t)vnegq_s64(v162));
    *(int32x2_t *)v165.i8 = vmovn_s64((int64x2_t)v165);
    *(int32x2_t *)v169.i8 = vmovn_s64(v169);
    int16x8_t v170 = (int16x8_t)vzip1q_s32((int32x4_t)v165, (int32x4_t)v169);
    int16x8_t v171 = (int16x8_t)vshlq_u32((uint32x4_t)v170, (uint32x4_t)vnegq_s32(v163));
    *(int16x4_t *)v170.i8 = vmovn_s32((int32x4_t)v170);
    *(int16x4_t *)v171.i8 = vmovn_s32((int32x4_t)v171);
    int16x8_t v159 = vzip1q_s16(v170, v171);
  }
  else
  {
    int v85 = 1;
    int16x8_t v159 = 0uLL;
  }
  int8x16_t v172 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v87, (int16x8_t)v87));
  unint64_t v173 = vpaddq_s32((int32x4_t)v172, (int32x4_t)v172).u64[0];
  v174.i64[0] = v173;
  v174.i64[1] = HIDWORD(v173);
  int64x2_t v175 = v174;
  unint64_t v176 = vaddvq_s64(v174);
  if (v176 > 0x80 || v68 < v176 + v66) {
    goto LABEL_81;
  }
  int64x2_t v177 = vaddq_s64(vzip1q_s64((int64x2_t)0, v175), vdupq_n_s64(v66 & 0x3F));
  int64x2_t v178 = (int64x2_t *)(v65 + 8 * (v66 >> 6));
  int8x16_t v179 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v178, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v177)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178->i64[0], 0), (uint64x2_t)vnegq_s64(v177)));
  if (v176 + (v66 & 0x3F) >= 0x81) {
    int8x16_t v179 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v177)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v178[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v177))), v179);
  }
  if (v85 || (uint64_t v9 = (a4 & 0x3Fu) + 1, 8 * ((a3 & 7) + v9) - (v176 + v66) >= 9))
  {
LABEL_81:
    uint64_t v9 = 0;
    unint64_t v180 = (unint64_t)&v235;
LABEL_82:
    *(void *)(v180 & 0xFFFFFFFFFFFFFFF8) |= 4095 << ((8 * v180) & 0x30);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int64x2_t v181 = (uint64_t *)((char *)a1->i64 + a2);
    int64x2_t v182 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *int64x2_t v181 = 0;
    v181[1] = 0;
    int32x4_t v17 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *int64x2_t v182 = 0;
    v182[1] = 0;
    goto LABEL_83;
  }
  if (v121 == 2)
  {
    uint64_t v9 = 0;
    unint64_t v180 = (unint64_t)&v236;
    goto LABEL_82;
  }
  int32x2_t v184 = vzip1_s32(*(int32x2_t *)v111.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
  int32x2_t v185 = vzip1_s32(*(int32x2_t *)v127.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v127, v127, 8uLL));
  v186.i64[0] = v184.u32[0];
  v186.i64[1] = v184.u32[1];
  int64x2_t v187 = v186;
  v186.i64[0] = v185.u32[0];
  v186.i64[1] = v185.u32[1];
  int64x2_t v188 = (int64x2_t)vshlq_u64((uint64x2_t)v109, (uint64x2_t)vnegq_s64(v187));
  int64x2_t v189 = (int64x2_t)vshlq_u64((uint64x2_t)v134, (uint64x2_t)vnegq_s64(v186));
  *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
  *(int32x2_t *)v188.i8 = vmovn_s64(v188);
  *(int32x2_t *)v134.i8 = vmovn_s64((int64x2_t)v134);
  *(int32x2_t *)v189.i8 = vmovn_s64(v189);
  int16x8_t v190 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v188);
  int16x8_t v191 = (int16x8_t)vzip1q_s32((int32x4_t)v134, (int32x4_t)v189);
  int16x8_t v192 = (int16x8_t)vshlq_u32((uint32x4_t)v190, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v110.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL)))));
  int16x8_t v193 = (int16x8_t)vshlq_u32((uint32x4_t)v191, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v126.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL)))));
  *(int16x4_t *)v190.i8 = vmovn_s32((int32x4_t)v190);
  *(int16x4_t *)v192.i8 = vmovn_s32((int32x4_t)v192);
  *(int16x4_t *)v191.i8 = vmovn_s32((int32x4_t)v191);
  *(int16x4_t *)v193.i8 = vmovn_s32((int32x4_t)v193);
  v194.i64[0] = 0x10001000100010;
  v194.i64[1] = 0x10001000100010;
  v195.i64[0] = 0x10001000100010;
  v195.i64[1] = 0x10001000100010;
  int16x8_t v196 = vzip1q_s16(v190, v192);
  v192.i64[0] = 0xF000F000F000FLL;
  v192.i64[1] = 0xF000F000F000FLL;
  int16x8_t v197 = vsubq_s16(v194, (int16x8_t)v110);
  int16x8_t v198 = vzip1q_s16(v191, v193);
  v193.i64[0] = 0xF000F000F000FLL;
  v193.i64[1] = 0xF000F000F000FLL;
  int32x2_t v199 = vzip1_s32(*(int32x2_t *)v172.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL));
  v200.i64[0] = 0xF000F000F000FLL;
  v200.i64[1] = 0xF000F000F000FLL;
  v201.i64[0] = 0x10001000100010;
  v201.i64[1] = 0x10001000100010;
  int16x8_t v202 = vaddq_s16((int16x8_t)v110, v192);
  int16x8_t v203 = vaddq_s16((int16x8_t)v126, v193);
  int16x8_t v204 = vshlq_s16(v198, vsubq_s16(v195, (int16x8_t)v126));
  int16x8_t v205 = vshlq_s16((int16x8_t)v125, vsubq_s16(v195, (int16x8_t)v89));
  int16x8_t v206 = vshlq_s16(v159, vsubq_s16(v195, (int16x8_t)v88));
  v186.i64[0] = v199.u32[0];
  v186.i64[1] = v199.u32[1];
  int32x4_t v207 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v87.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL)));
  int16x8_t v208 = vaddq_s16((int16x8_t)v87, v200);
  int16x8_t v209 = vsubq_s16(v201, (int16x8_t)v87);
  int16x8_t v210 = vdupq_n_s16((v67 >> 6) & 0xFFF);
  int8x16_t v211 = (int8x16_t)vshlq_s16(vshlq_s16(v196, v197), v202);
  int16x8_t v212 = vshlq_s16(v204, v203);
  int64x2_t v213 = (int64x2_t)vshlq_u64((uint64x2_t)v179, (uint64x2_t)vnegq_s64(v186));
  *(int32x2_t *)v204.i8 = vmovn_s64((int64x2_t)v179);
  *(int32x2_t *)v213.i8 = vmovn_s64(v213);
  int16x8_t v214 = (int16x8_t)vzip1q_s32((int32x4_t)v204, (int32x4_t)v213);
  int16x8_t v215 = (int16x8_t)vshlq_u32((uint32x4_t)v214, (uint32x4_t)vnegq_s32(v207));
  *(int16x4_t *)v214.i8 = vmovn_s32((int32x4_t)v214);
  *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v215);
  int16x8_t v216 = vaddq_s16((int16x8_t)vandq_s8(v211, v93), v212);
  int8x16_t v217 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v211.i8, 0);
  int8x16_t v218 = (int8x16_t)vsubq_s16(v216, (int16x8_t)vandq_s8(v217, v93));
  int8x16_t v219 = (int8x16_t)vsubq_s16(vshlq_s16(v205, vaddq_s16((int16x8_t)v89, v193)), (int16x8_t)vandq_s8(v217, v92));
  int8x16_t v220 = (int8x16_t)vsubq_s16(vshlq_s16(v206, vaddq_s16((int16x8_t)v88, v193)), (int16x8_t)vandq_s8(v217, v90));
  int8x16_t v221 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v214, v215), v209), v208), (int16x8_t)vandq_s8(v217, v86));
  v222.i64[0] = 0x1000100010001;
  v222.i64[1] = 0x1000100010001;
  if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v222)))
  {
    int8x16_t v223 = v218;
    v223.i16[0] = v218.i16[7];
    v223.i16[7] = v218.i16[0];
    int8x16_t v224 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
    int8x16_t v225 = vbslq_s8(v224, v223, v218);
    int8x16_t v226 = (int8x16_t)vaddq_s16((int16x8_t)v225, (int16x8_t)vandq_s8(vqtbl1q_s8(v225, (int8x16_t)xmmword_242EA7480), v224));
    int8x16_t v218 = (int8x16_t)vaddq_s16((int16x8_t)v226, (int16x8_t)vandq_s8(vqtbl1q_s8(v226, (int8x16_t)xmmword_242EA7490), v224));
    int8x16_t v227 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v219, (int8x16_t)xmmword_242EA74A0), v224), (int16x8_t)v219);
    int8x16_t v219 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v227, (int8x16_t)xmmword_242EA74B0), v224), (int16x8_t)v227);
    int8x16_t v228 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v220, (int8x16_t)xmmword_242EA74C0), v224), (int16x8_t)v220);
    int8x16_t v220 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v228, (int8x16_t)xmmword_242EA74D0), v224), (int16x8_t)v228);
    int8x16_t v229 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v221, (int8x16_t)xmmword_242EA74E0), v224), (int16x8_t)v221);
    int8x16_t v221 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v229, (int8x16_t)xmmword_242EA74F0), v224), (int16x8_t)v229);
  }
  int32x4_t v230 = (int32x4_t)vshlq_n_s16(vaddq_s16(v210, (int16x8_t)v218), 4uLL);
  int32x4_t v231 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v219, v210), 4uLL);
  int32x4_t v232 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v220, v210), 4uLL);
  int32x4_t v233 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v221, v210), 4uLL);
  *a1 = vuzp1q_s32(v230, v232);
  *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v230, v232);
  int8x16_t v234 = (int32x4_t *)((char *)a1 + 2 * a2);
  *int8x16_t v234 = vuzp1q_s32(v231, v233);
  *(int32x4_t *)((char *)v234 + a2) = vuzp2q_s32(v231, v233);
  return v9;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)0>::compressSubblock(unint64_t a1, char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, int16x4_t a14)
{
  int32x4_t v16 = *(int32x4_t *)((char *)a3 + a4);
  int32x4_t v17 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v18 = *(int32x4_t *)((char *)v17 + a4);
  int8x16_t v19 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v16), 4uLL);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*v17, v18), 4uLL);
  int8x16_t v21 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v16), 4uLL);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v19.i8, 0);
  int8x16_t v23 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip2q_s32(*v17, v18), 4uLL);
  int16x8_t v24 = vshlq_n_s16(vsubq_s16((int16x8_t)v20, (int16x8_t)v22), 4uLL);
  int16x8_t v25 = vshlq_n_s16(vsubq_s16((int16x8_t)v23, (int16x8_t)v22), 4uLL);
  v26.i64[0] = 0x3000300030003;
  v26.i64[1] = 0x3000300030003;
  int8x16_t v27 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v19, (int16x8_t)v22), 4uLL), v26);
  int16x8_t v28 = vshlq_s16(v24, v26);
  int16x8_t v29 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v21, (int16x8_t)v22), 4uLL), v26);
  int16x8_t v30 = vshlq_s16(v25, v26);
  v24.i16[0] = vmaxvq_s16((int16x8_t)v27);
  v25.i16[0] = vminvq_s16((int16x8_t)v27);
  int16x8_t v31 = vdupq_lane_s16(*(int16x4_t *)v24.i8, 0);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
  v26.i64[0] = 0x8000800080008000;
  v26.i64[1] = 0x8000800080008000;
  int16x8_t v33 = vmaxq_s16(v31, v26);
  v34.i64[0] = 0x8000800080008000;
  v34.i64[1] = 0x8000800080008000;
  int16x8_t v35 = vminq_s16(v32, v34);
  int16x8_t v36 = vzip1q_s16(v31, v32);
  int8x16_t v37 = (int8x16_t)vceqzq_s16(v36);
  v38.i64[0] = 0x10001000100010;
  v38.i64[1] = 0x10001000100010;
  int16x8_t v39 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v36)), v37);
  v37.i16[0] = vmaxvq_s16(v28);
  a14.i16[0] = vminvq_s16(v28);
  int16x8_t v40 = vdupq_lane_s16(*(int16x4_t *)v37.i8, 0);
  int16x8_t v41 = vdupq_lane_s16(a14, 0);
  int16x8_t v42 = vpmaxq_s16(v39, v39);
  int16x8_t v43 = vmaxq_s16(v33, v40);
  int16x8_t v44 = vminq_s16(v35, v41);
  int16x8_t v45 = vzip1q_s16(v40, v41);
  int16x8_t v46 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v45)), (int8x16_t)vceqzq_s16(v45));
  int16x8_t v47 = vpmaxq_s16(v46, v46);
  v46.i16[0] = vmaxvq_s16(v29);
  int16x8_t v48 = vdupq_lane_s16(*(int16x4_t *)v46.i8, 0);
  v41.i16[0] = vminvq_s16(v29);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v41.i8, 0);
  int16x8_t v50 = vmaxq_s16(v43, v48);
  int16x8_t v51 = vminq_s16(v44, v49);
  int16x8_t v52 = vzip1q_s16(v48, v49);
  int16x8_t v53 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v52)), (int8x16_t)vceqzq_s16(v52));
  int16x8_t v54 = vpmaxq_s16(v53, v53);
  v53.i16[0] = vmaxvq_s16(v30);
  v15.i16[0] = vminvq_s16(v30);
  int16x8_t v55 = vdupq_lane_s16(*(int16x4_t *)v53.i8, 0);
  int16x8_t v56 = vdupq_lane_s16(v15, 0);
  int16x8_t v57 = vmaxq_s16(v50, v55);
  int16x8_t v58 = vminq_s16(v51, v56);
  int16x8_t v59 = vzip1q_s16(v55, v56);
  int16x8_t v60 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v38, vclsq_s16(v59)), (int8x16_t)vceqzq_s16(v59));
  int16x8_t v61 = vpmaxq_s16(v60, v60);
  int8x16_t v62 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v47), vmaxq_s16(v54, v61));
  int16x8_t v63 = vclzq_s16(vsubq_s16(v57, v58));
  int8x16_t v64 = (int8x16_t)vsubq_s16(v38, v63);
  int8x16_t v65 = (int8x16_t)vcgtq_s16((int16x8_t)v62, (int16x8_t)v64);
  int8x16_t v66 = vbslq_s8(v65, v64, v62);
  if (vmaxvq_s16((int16x8_t)v66))
  {
    v67.i64[0] = 0x4000400040004;
    v67.i64[1] = 0x4000400040004;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    v69.i64[0] = 0xF000F000F000FLL;
    v69.i64[1] = 0xF000F000F000FLL;
    int8x16_t v70 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v68, vsubq_s16(v69, v63)), v58), v65);
    v71.i64[0] = 0x8000800080008;
    v71.i64[1] = 0x8000800080008;
    v69.i64[0] = 0x3000300030003;
    v69.i64[1] = 0x3000300030003;
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v42), v69), (int16x8_t)0);
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v47), v69), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v54), v69), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v61), v69), (int16x8_t)0);
    int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v66, v72);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v66, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v66, v74);
    int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v66, v75);
    int8x16_t v80 = vbicq_s8(v67, (int8x16_t)vceqq_s16(vaddq_s16(v75, v74), vnegq_s16(vaddq_s16(v72, v73))));
    int8x16_t v81 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v66), (int8x16_t)v69), vandq_s8(v65, v71)), v80);
    if (a5 < 4 || a6 < 2)
    {
      int16x8_t v143 = (int16x8_t)v79;
      int16x8_t v142 = (int16x8_t)v78;
    }
    else
    {
      int8x16_t v335 = (int8x16_t)v28;
      int8x16_t v337 = v70;
      int8x16_t v338 = (int8x16_t)v29;
      int8x16_t v339 = (int8x16_t)v30;
      int16x8_t v82 = vsubq_s16((int16x8_t)v19, (int16x8_t)vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7520));
      int8x16_t v83 = v20;
      v83.i16[7] = v19.i16[7];
      int8x16_t v84 = v21;
      v84.i16[7] = v19.i16[7];
      int8x16_t v85 = v23;
      v85.i16[7] = v19.i16[7];
      int8x16_t v86 = (int8x16_t)v82;
      v86.i16[0] = v82.i16[7];
      int8x16_t v336 = v23;
      v86.i16[7] = v82.i16[0];
      int16x8_t v87 = vshlq_n_s16((int16x8_t)v86, 4uLL);
      v86.i64[0] = 0x4000400040004;
      v86.i64[1] = 0x4000400040004;
      v88.i64[0] = 0x3000300030003;
      v88.i64[1] = 0x3000300030003;
      int8x16_t v89 = (int8x16_t)vshlq_s16(v87, v88);
      int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_242EA7530)), 4uLL), v88);
      int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v21, (int16x8_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_242EA7540)), 4uLL), v88);
      v30.i16[0] = vmaxvq_s16((int16x8_t)v89);
      v70.i16[0] = vminvq_s16((int16x8_t)v89);
      int16x8_t v92 = vdupq_lane_s16(*(int16x4_t *)v30.i8, 0);
      int16x8_t v93 = vdupq_lane_s16(*(int16x4_t *)v70.i8, 0);
      int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v23, (int16x8_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7550)), 4uLL), v88);
      v88.i64[0] = 0x8000800080008000;
      v88.i64[1] = 0x8000800080008000;
      int16x8_t v95 = vmaxq_s16(v92, v88);
      v96.i64[0] = 0x8000800080008000;
      v96.i64[1] = 0x8000800080008000;
      int16x8_t v97 = vzip1q_s16(v92, v93);
      int8x16_t v98 = (int8x16_t)vceqzq_s16(v97);
      v99.i64[0] = 0x10001000100010;
      v99.i64[1] = 0x10001000100010;
      int16x8_t v100 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v97)), v98);
      v98.i16[0] = vmaxvq_s16((int16x8_t)v90);
      v14.i16[0] = vminvq_s16((int16x8_t)v90);
      int16x8_t v101 = vdupq_lane_s16(*(int16x4_t *)v98.i8, 0);
      int16x8_t v102 = vdupq_lane_s16(v14, 0);
      int16x8_t v103 = vpmaxq_s16(v100, v100);
      int16x8_t v104 = vmaxq_s16(v95, v101);
      int16x8_t v105 = vminq_s16(vminq_s16(v93, v96), v102);
      int16x8_t v106 = vzip1q_s16(v101, v102);
      int8x16_t v107 = (int8x16_t)vceqzq_s16(v106);
      int16x8_t v108 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v106)), v107);
      int16x8_t v109 = vpmaxq_s16(v108, v108);
      v108.i16[0] = vmaxvq_s16((int16x8_t)v91);
      int16x8_t v110 = vdupq_lane_s16(*(int16x4_t *)v108.i8, 0);
      v107.i16[0] = vminvq_s16((int16x8_t)v91);
      int16x8_t v111 = vdupq_lane_s16(*(int16x4_t *)v107.i8, 0);
      int16x8_t v112 = vmaxq_s16(v104, v110);
      int16x8_t v113 = vminq_s16(v105, v111);
      int16x8_t v114 = vzip1q_s16(v110, v111);
      int8x16_t v115 = (int8x16_t)vceqzq_s16(v114);
      int16x8_t v116 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v114)), v115);
      int16x8_t v117 = vpmaxq_s16(v116, v116);
      v116.i16[0] = vmaxvq_s16((int16x8_t)v94);
      v115.i16[0] = vminvq_s16((int16x8_t)v94);
      int16x8_t v118 = vdupq_lane_s16(*(int16x4_t *)v116.i8, 0);
      int16x8_t v119 = vdupq_lane_s16(*(int16x4_t *)v115.i8, 0);
      int16x8_t v120 = vmaxq_s16(v112, v118);
      int16x8_t v121 = vminq_s16(v113, v119);
      int16x8_t v122 = vzip1q_s16(v118, v119);
      int16x8_t v123 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v122)), (int8x16_t)vceqzq_s16(v122));
      int16x8_t v124 = vpmaxq_s16(v123, v123);
      int8x16_t v125 = (int8x16_t)vmaxq_s16(vmaxq_s16(v103, v109), vmaxq_s16(v117, v124));
      int16x8_t v126 = vclzq_s16(vsubq_s16(v120, v121));
      int8x16_t v127 = (int8x16_t)vsubq_s16(v99, v126);
      int8x16_t v128 = (int8x16_t)vcgtq_s16((int16x8_t)v125, (int16x8_t)v127);
      int8x16_t v129 = vbslq_s8(v128, v127, v125);
      v99.i64[0] = 0x3000300030003;
      v99.i64[1] = 0x3000300030003;
      int16x8_t v130 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v129, v103), v99), (int16x8_t)0);
      int16x8_t v131 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v129, v109), v99), (int16x8_t)0);
      int16x8_t v132 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v129, v117), v99), (int16x8_t)0);
      int16x8_t v133 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v129, v124), v99), (int16x8_t)0);
      int8x16_t v134 = (int8x16_t)vsubq_s16((int16x8_t)v129, v130);
      int8x16_t v135 = (int8x16_t)vsubq_s16((int16x8_t)v129, v131);
      int8x16_t v136 = (int8x16_t)vsubq_s16((int16x8_t)v129, v132);
      int8x16_t v137 = (int8x16_t)vsubq_s16((int16x8_t)v129, v133);
      int8x16_t v138 = vbicq_s8(v86, (int8x16_t)vceqq_s16(vaddq_s16(v133, v132), vnegq_s16(vaddq_s16(v130, v131))));
      int16x8_t v139 = (int16x8_t)vandq_s8(v127, v128);
      v127.i64[0] = 0x7000700070007;
      v127.i64[1] = 0x7000700070007;
      int16x8_t v140 = (int16x8_t)vandq_s8(v64, v65);
      int16x8_t v141 = vaddq_s16((int16x8_t)v80, (int16x8_t)v80);
      int16x8_t v142 = (int16x8_t)v78;
      int16x8_t v143 = (int16x8_t)v79;
      int16x8_t v144 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(v140, v141), (int16x8_t)v76, (int16x8_t)v127), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v78, (int16x8_t)v77), (int16x8_t)v79), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16(v139, vaddq_s16((int16x8_t)v138, (int16x8_t)v138)), (int16x8_t)v134, (int16x8_t)v127), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v136, (int16x8_t)v135), (int16x8_t)v137), 3uLL))), 0);
      if (vaddvq_s16(v144))
      {
        v145.i64[0] = 0x2000200020002;
        v145.i64[1] = 0x2000200020002;
        int8x16_t v146 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v129), v145);
        v145.i64[0] = 0x9000900090009;
        v145.i64[1] = 0x9000900090009;
        v147.i64[0] = -1;
        v147.i64[1] = -1;
        int8x16_t v148 = vorrq_s8(vorrq_s8(v146, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v128, v145), (int16x8_t)vmvnq_s8(v128))), v138);
        v145.i64[0] = 0xF000F000F000FLL;
        v145.i64[1] = 0xF000F000F000FLL;
        int8x16_t v149 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v147, vsubq_s16((int16x8_t)v145, v126)), v121), v128);
        int8x16_t v150 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v144, 0xFuLL));
        v22.i16[0] = vbslq_s8(v150, vextq_s8(v19, v19, 0xEuLL), v22).u16[0];
        int8x16_t v27 = vbslq_s8(v150, v89, v27);
        int8x16_t v23 = v336;
        int16x8_t v28 = (int16x8_t)vbslq_s8(v150, v90, v335);
        int16x8_t v29 = (int16x8_t)vbslq_s8(v150, v91, v338);
        int16x8_t v30 = (int16x8_t)vbslq_s8(v150, v94, v339);
        int8x16_t v76 = vbslq_s8(v150, v134, v76);
        int8x16_t v77 = vbslq_s8(v150, v135, v77);
        int16x8_t v142 = (int16x8_t)vbslq_s8(v150, v136, v78);
        int16x8_t v143 = (int16x8_t)vbslq_s8(v150, v137, v79);
        int8x16_t v70 = vbslq_s8(v150, v149, v337);
        int8x16_t v66 = vbslq_s8(v150, v129, v66);
        int8x16_t v81 = vbslq_s8(v150, v148, v81);
      }
      else
      {
        int16x8_t v29 = (int16x8_t)v338;
        int16x8_t v30 = (int16x8_t)v339;
        int8x16_t v23 = v336;
        int8x16_t v70 = v337;
        int16x8_t v28 = (int16x8_t)v335;
      }
    }
    v153.i64[0] = 0x8000800080008;
    v153.i64[1] = 0x8000800080008;
    int16x8_t v154 = (int16x8_t)vandq_s8(v81, v153);
    v155.i64[0] = 0x3000300030003;
    v155.i64[1] = 0x3000300030003;
    v156.i64[0] = 0x2000200020002;
    v156.i64[1] = 0x2000200020002;
    int8x16_t v157 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v81, v155), v156);
    v156.i64[0] = 0x10001000100010;
    v156.i64[1] = 0x10001000100010;
    unint64_t v158 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v159 = 8 * (a1 & 7);
    if ((unint64_t)((__int16)(vbicq_s8(v66, (int8x16_t)vceqzq_s16(v154)).u16[0]
                                    + ((2 * v81.i16[0]) & 8)
                                    + vandq_s8(v157, (int8x16_t)v156).u16[0]
                                    - v76.i16[0]
                                    + 8 * v76.i16[0]
                                    + 8 * vaddq_s16(v142, vaddq_s16((int16x8_t)v77, v143)).u16[0])
                          + 25) >= 0x180)
    {
      if (v159) {
        uint64_t v161 = *v158 & ~(-1 << v159);
      }
      else {
        uint64_t v161 = 0;
      }
      v289.i64[0] = 0x3000300030003;
      v289.i64[1] = 0x3000300030003;
      v290.i64[0] = -1;
      v290.i64[1] = -1;
      int8x16_t v291 = (int8x16_t)vshlq_u16(v290, v289);
      uint16x8_t v292 = (uint16x8_t)vandq_s8(v291, v19);
      int32x4_t v293 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v292.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v292), (uint32x4_t)xmmword_242EA7B90));
      v294.i64[0] = 0xC0000000CLL;
      v294.i64[1] = 0xC0000000CLL;
      int32x4_t v295 = vpaddq_s32(v294, v294);
      v296.i64[0] = v293.u32[0];
      v296.i64[1] = v293.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v293.u32[2];
      v296.i64[1] = v293.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      uint64x2_t v300 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v299);
      uint64x2_t v301 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v296);
      int64x2_t v302 = vpaddq_s64((int64x2_t)vshlq_u64(v297, v300), (int64x2_t)vshlq_u64(v298, v301));
      int64x2_t v303 = vpaddq_s64(v299, v296);
      uint64_t v304 = v303.i64[1];
      uint64_t v305 = v303.i64[0];
      unint64_t v306 = v303.i64[0] + v159;
      unint64_t v307 = (v302.i64[0] << v159) | v161;
      if (v303.i64[0] + v159 >= 0x40)
      {
        *unint64_t v158 = v307;
        unint64_t v307 = (unint64_t)v302.i64[0] >> (-8 * (a1 & 7u));
        if (!v159) {
          unint64_t v307 = 0;
        }
      }
      unint64_t v308 = v307 | (v302.i64[1] << v306);
      if ((v306 & 0x3F) + v303.i64[1] >= 0x40)
      {
        *(void *)((char *)v158 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v308;
        unint64_t v308 = (unint64_t)v302.i64[1] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v308 = 0;
        }
      }
      unint64_t v309 = v306 + v303.i64[1];
      uint16x8_t v310 = (uint16x8_t)vandq_s8(v291, v20);
      int32x4_t v311 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v310.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v310), (uint32x4_t)xmmword_242EA7B90));
      v312.i64[0] = v311.u32[0];
      v312.i64[1] = v311.u32[1];
      uint64x2_t v313 = v312;
      v312.i64[0] = v311.u32[2];
      v312.i64[1] = v311.u32[3];
      int64x2_t v314 = vpaddq_s64((int64x2_t)vshlq_u64(v313, v300), (int64x2_t)vshlq_u64(v312, v301));
      unint64_t v315 = (v314.i64[0] << v309) | v308;
      if (v305 + (v309 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v158 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v315;
        unint64_t v315 = (unint64_t)v314.i64[0] >> -(v309 & 0x3F);
        if ((v309 & 0x3F) == 0) {
          unint64_t v315 = 0;
        }
      }
      unint64_t v316 = v305 + v309;
      unint64_t v317 = v315 | (v314.i64[1] << v316);
      if ((v316 & 0x3F) + v304 >= 0x40)
      {
        *(void *)((char *)v158 + ((v316 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v317;
        if ((v316 & 0x3F) != 0) {
          unint64_t v317 = (unint64_t)v314.i64[1] >> -(v316 & 0x3F);
        }
        else {
          unint64_t v317 = 0;
        }
      }
      unint64_t v318 = v316 + v304;
      uint16x8_t v319 = (uint16x8_t)vandq_s8(v291, v21);
      int32x4_t v320 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v319.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v319), (uint32x4_t)xmmword_242EA7B90));
      v321.i64[0] = v320.u32[0];
      v321.i64[1] = v320.u32[1];
      uint64x2_t v322 = v321;
      v321.i64[0] = v320.u32[2];
      v321.i64[1] = v320.u32[3];
      int64x2_t v323 = vpaddq_s64((int64x2_t)vshlq_u64(v322, v300), (int64x2_t)vshlq_u64(v321, v301));
      unint64_t v324 = (v323.i64[0] << v318) | v317;
      if (v305 + (v318 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v158 + ((v318 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v323.i64[0] >> -(v318 & 0x3F);
        if ((v318 & 0x3F) == 0) {
          unint64_t v324 = 0;
        }
      }
      unint64_t v325 = v305 + v318;
      unint64_t v326 = v324 | (v323.i64[1] << v325);
      if ((v325 & 0x3F) + v304 >= 0x40)
      {
        *(void *)((char *)v158 + ((v325 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v326;
        if ((v325 & 0x3F) != 0) {
          unint64_t v326 = (unint64_t)v323.i64[1] >> -(v325 & 0x3F);
        }
        else {
          unint64_t v326 = 0;
        }
      }
      unint64_t v327 = v325 + v304;
      uint16x8_t v328 = (uint16x8_t)vandq_s8(v291, v23);
      int32x4_t v329 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v328.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v328), (uint32x4_t)xmmword_242EA7B90));
      v330.i64[0] = v329.u32[0];
      v330.i64[1] = v329.u32[1];
      uint64x2_t v331 = v330;
      v330.i64[0] = v329.u32[2];
      v330.i64[1] = v329.u32[3];
      int64x2_t v332 = vpaddq_s64((int64x2_t)vshlq_u64(v331, v300), (int64x2_t)vshlq_u64(v330, v301));
      unint64_t v333 = (v332.i64[0] << v327) | v326;
      if (v305 + (v327 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v158 + ((v327 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v333;
        unint64_t v333 = (unint64_t)v332.i64[0] >> -(v327 & 0x3F);
        if ((v327 & 0x3F) == 0) {
          unint64_t v333 = 0;
        }
      }
      unint64_t v334 = v305 + v327;
      if ((v334 & 0x3F) + v304 >= 0x40) {
        *(void *)((char *)v158 + ((v334 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v333 | (v332.i64[1] << (v334 & 0x3F));
      }
      char v151 = 47;
      unint64_t result = 48;
    }
    else
    {
      if (v159) {
        uint64_t v160 = *v158 & ~(-1 << v159);
      }
      else {
        uint64_t v160 = 0;
      }
      if (v66.i16[0]) {
        uint64_t v162 = (16 * v66.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v162 = 0;
      }
      *a2 = v81.i8[0] << 6;
      unint64_t v163 = (v162 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v22.i16[0] & 0xFFF) << 8) | v81.i8[0] & 0xF) >> 2;
      unint64_t v164 = (v163 << v159) | v160;
      if (v159 >= 0x2E)
      {
        *unint64_t v158 = v164;
        unint64_t v164 = v163 >> (-8 * (a1 & 7u));
      }
      int8x16_t v165 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v76);
      int8x16_t v166 = (int8x16_t)vsubq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v66, v142);
      int8x16_t v168 = (int8x16_t)vsubq_s16((int16x8_t)v66, v143);
      *(uint8x8_t *)v165.i8 = vqmovn_u16((uint16x8_t)v165);
      *(uint8x8_t *)v166.i8 = vqmovn_u16((uint16x8_t)v166);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      *(uint8x8_t *)v168.i8 = vqmovn_u16((uint16x8_t)v168);
      v165.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v165, v166), (int16x8_t)vzip1q_s8(v167, v168)).u32[0];
      unint64_t v169 = v159 + 18;
      v167.i64[0] = 0x202020202020202;
      v167.i64[1] = 0x202020202020202;
      int8x16_t v170 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v81.i8, (int8x8_t)0x4000400040004)))), v167);
      v167.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v167.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v168.i64[0] = -1;
      v168.i64[1] = -1;
      uint8x16_t v171 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v168, (uint8x16_t)vorrq_s8(v170, v167)), (int8x16_t)v165.u32[0]);
      int16x8_t v172 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v170.i8);
      uint16x8_t v173 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v171.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v172)), (int16x8_t)vmovl_high_u8(v171));
      uint16x8_t v174 = (uint16x8_t)vpaddq_s16(v172, (int16x8_t)vmovl_high_u8((uint8x16_t)v170));
      int32x4_t v175 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v174.i8);
      int32x4_t v176 = (int32x4_t)vmovl_high_u16(v174);
      int32x4_t v177 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v173.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v175)), (int32x4_t)vshlq_u32(vmovl_high_u16(v173), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v176)));
      int32x4_t v178 = vpaddq_s32(v175, v176);
      v179.i64[0] = v177.u32[0];
      v179.i64[1] = v177.u32[1];
      uint64x2_t v180 = (uint64x2_t)v179;
      v179.i64[0] = v177.u32[2];
      v179.i64[1] = v177.u32[3];
      uint64x2_t v181 = (uint64x2_t)v179;
      v179.i64[0] = v178.u32[0];
      v179.i64[1] = v178.u32[1];
      int64x2_t v182 = v179;
      v179.i64[0] = v178.u32[2];
      v179.i64[1] = v178.u32[3];
      int64x2_t v183 = vpaddq_s64((int64x2_t)vshlq_u64(v180, (uint64x2_t)vzip1q_s64((int64x2_t)0, v182)), (int64x2_t)vshlq_u64(v181, (uint64x2_t)vzip1q_s64((int64x2_t)0, v179)));
      int64x2_t v184 = vpaddq_s64(v182, v179);
      uint64_t v185 = (v159 + 18) & 0x3A;
      unint64_t v186 = (v183.i64[0] << v185) | v164;
      if ((unint64_t)(v184.i64[0] + v185) >= 0x40)
      {
        *(void *)((char *)v158 + ((v169 >> 3) & 8)) = v186;
        unint64_t v186 = (unint64_t)v183.i64[0] >> -(char)v185;
      }
      int8x16_t v187 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v76);
      unint64_t v188 = v184.i64[0] + v169;
      uint64_t v189 = (v184.i64[0] + v169) & 0x3F;
      unint64_t v190 = v186 | (v183.i64[1] << (v184.i8[0] + v169));
      if ((unint64_t)(v189 + v184.i64[1]) >= 0x40)
      {
        *(void *)((char *)v158 + ((v188 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v190;
        unint64_t v190 = (unint64_t)v183.i64[1] >> -(char)v189;
        if (!v189) {
          unint64_t v190 = 0;
        }
      }
      int16x8_t v191 = (int16x8_t)vandq_s8(v70, v187);
      unint64_t v192 = v188 + v184.i64[1];
      v193.i64[0] = -1;
      v193.i64[1] = -1;
      int16x8_t v194 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v154, v154), (int8x16_t)0, 0xEuLL), v66);
      v195.i64[0] = 0xF000F000F000FLL;
      v195.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v196 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v193, (uint16x8_t)vaddq_s16(v194, v195)), v70);
      int32x4_t v197 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v194.i8);
      int32x4_t v198 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v196.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v197)), (int32x4_t)vmovl_high_u16(v196));
      int32x4_t v199 = vpaddq_s32(v197, (int32x4_t)vmovl_high_u16((uint16x8_t)v194));
      v200.i64[0] = v198.u32[0];
      v200.i64[1] = v198.u32[1];
      uint64x2_t v201 = (uint64x2_t)v200;
      v200.i64[0] = v198.u32[2];
      v200.i64[1] = v198.u32[3];
      uint64x2_t v202 = (uint64x2_t)v200;
      v200.i64[0] = v199.u32[0];
      v200.i64[1] = v199.u32[1];
      int64x2_t v203 = v200;
      v200.i64[0] = v199.u32[2];
      v200.i64[1] = v199.u32[3];
      int64x2_t v204 = vpaddq_s64((int64x2_t)vshlq_u64(v201, (uint64x2_t)vzip1q_s64((int64x2_t)0, v203)), (int64x2_t)vshlq_u64(v202, (uint64x2_t)vzip1q_s64((int64x2_t)0, v200)));
      int64x2_t v205 = vpaddq_s64(v203, v200);
      unint64_t v206 = (v204.i64[0] << v192) | v190;
      if (v205.i64[0] + (v192 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v158 + ((v192 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v206;
        unint64_t v206 = (unint64_t)v204.i64[0] >> -(v192 & 0x3F);
        if ((v192 & 0x3F) == 0) {
          unint64_t v206 = 0;
        }
      }
      int8x16_t v207 = (int8x16_t)vceqq_s16((int16x8_t)v66, (int16x8_t)v77);
      int8x16_t v208 = (int8x16_t)vaddq_s16(v191, (int16x8_t)v27);
      unint64_t v209 = v205.i64[0] + v192;
      unint64_t v210 = v206 | (v204.i64[1] << v209);
      if ((v209 & 0x3F) + v205.i64[1] >= 0x40)
      {
        *(void *)((char *)v158 + ((v209 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v210;
        unint64_t v210 = (unint64_t)v204.i64[1] >> -(v209 & 0x3F);
        if ((v209 & 0x3F) == 0) {
          unint64_t v210 = 0;
        }
      }
      int16x8_t v211 = (int16x8_t)vandq_s8(v70, v207);
      unint64_t v212 = v209 + v205.i64[1];
      int16x8_t v213 = (int16x8_t)vextq_s8((int8x16_t)0, v76, 0xEuLL);
      v214.i64[0] = 0xF000F000F000FLL;
      v214.i64[1] = 0xF000F000F000FLL;
      v215.i64[0] = -1;
      v215.i64[1] = -1;
      uint16x8_t v216 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v215, (uint16x8_t)vaddq_s16(v213, v214)), v208);
      int32x4_t v217 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v213.i8);
      int32x4_t v218 = (int32x4_t)vmovl_high_u16((uint16x8_t)v213);
      int32x4_t v219 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v216.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v217)), (int32x4_t)vshlq_u32(vmovl_high_u16(v216), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v218)));
      int32x4_t v220 = vpaddq_s32(v217, v218);
      v221.i64[0] = v219.u32[0];
      v221.i64[1] = v219.u32[1];
      uint64x2_t v222 = (uint64x2_t)v221;
      v221.i64[0] = v219.u32[2];
      v221.i64[1] = v219.u32[3];
      uint64x2_t v223 = (uint64x2_t)v221;
      v221.i64[0] = v220.u32[0];
      v221.i64[1] = v220.u32[1];
      int64x2_t v224 = v221;
      v221.i64[0] = v220.u32[2];
      v221.i64[1] = v220.u32[3];
      int64x2_t v225 = vpaddq_s64((int64x2_t)vshlq_u64(v222, (uint64x2_t)vzip1q_s64((int64x2_t)0, v224)), (int64x2_t)vshlq_u64(v223, (uint64x2_t)vzip1q_s64((int64x2_t)0, v221)));
      int64x2_t v226 = vpaddq_s64(v224, v221);
      unint64_t v227 = (v225.i64[0] << v212) | v210;
      if (v226.i64[0] + (v212 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v158 + ((v212 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v227;
        unint64_t v227 = (unint64_t)v225.i64[0] >> -(v212 & 0x3F);
        if ((v212 & 0x3F) == 0) {
          unint64_t v227 = 0;
        }
      }
      int8x16_t v228 = (int8x16_t)vceqq_s16((int16x8_t)v66, v142);
      int8x16_t v229 = (int8x16_t)vaddq_s16(v28, v211);
      unint64_t v230 = v226.i64[0] + v212;
      unint64_t v231 = v227 | (v225.i64[1] << v230);
      if ((v230 & 0x3F) + v226.i64[1] >= 0x40)
      {
        *(void *)((char *)v158 + ((v230 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v231;
        unint64_t v231 = (unint64_t)v225.i64[1] >> -(v230 & 0x3F);
        if ((v230 & 0x3F) == 0) {
          unint64_t v231 = 0;
        }
      }
      int16x8_t v232 = (int16x8_t)vandq_s8(v70, v228);
      unint64_t v233 = v230 + v226.i64[1];
      v234.i64[0] = 0xF000F000F000FLL;
      v234.i64[1] = 0xF000F000F000FLL;
      v235.i64[0] = -1;
      v235.i64[1] = -1;
      uint16x8_t v236 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v235, (uint16x8_t)vaddq_s16((int16x8_t)v77, v234)), v229);
      int32x4_t v237 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v238 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v239 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v236.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v237)), (int32x4_t)vshlq_u32(vmovl_high_u16(v236), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v238)));
      int32x4_t v240 = vpaddq_s32(v237, v238);
      v241.i64[0] = v239.u32[0];
      v241.i64[1] = v239.u32[1];
      uint64x2_t v242 = (uint64x2_t)v241;
      v241.i64[0] = v239.u32[2];
      v241.i64[1] = v239.u32[3];
      uint64x2_t v243 = (uint64x2_t)v241;
      v241.i64[0] = v240.u32[0];
      v241.i64[1] = v240.u32[1];
      int64x2_t v244 = v241;
      v241.i64[0] = v240.u32[2];
      v241.i64[1] = v240.u32[3];
      int64x2_t v245 = vpaddq_s64((int64x2_t)vshlq_u64(v242, (uint64x2_t)vzip1q_s64((int64x2_t)0, v244)), (int64x2_t)vshlq_u64(v243, (uint64x2_t)vzip1q_s64((int64x2_t)0, v241)));
      int64x2_t v246 = vpaddq_s64(v244, v241);
      unint64_t v247 = (v245.i64[0] << v233) | v231;
      if (v246.i64[0] + (v233 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v158 + ((v233 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v247;
        unint64_t v247 = (unint64_t)v245.i64[0] >> -(v233 & 0x3F);
        if ((v233 & 0x3F) == 0) {
          unint64_t v247 = 0;
        }
      }
      int8x16_t v248 = (int8x16_t)vceqq_s16((int16x8_t)v66, v143);
      int8x16_t v249 = (int8x16_t)vaddq_s16(v29, v232);
      unint64_t v250 = v246.i64[0] + v233;
      unint64_t v251 = v247 | (v245.i64[1] << v250);
      if ((v250 & 0x3F) + v246.i64[1] >= 0x40)
      {
        *(void *)((char *)v158 + ((v250 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v251;
        unint64_t v251 = (unint64_t)v245.i64[1] >> -(v250 & 0x3F);
        if ((v250 & 0x3F) == 0) {
          unint64_t v251 = 0;
        }
      }
      int16x8_t v252 = (int16x8_t)vandq_s8(v70, v248);
      unint64_t v253 = v250 + v246.i64[1];
      v254.i64[0] = 0xF000F000F000FLL;
      v254.i64[1] = 0xF000F000F000FLL;
      v255.i64[0] = -1;
      v255.i64[1] = -1;
      uint16x8_t v256 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v255, (uint16x8_t)vaddq_s16(v142, v254)), v249);
      int32x4_t v257 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v142.i8);
      int32x4_t v258 = (int32x4_t)vmovl_high_u16((uint16x8_t)v142);
      int32x4_t v259 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v256.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v257)), (int32x4_t)vshlq_u32(vmovl_high_u16(v256), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v258)));
      int32x4_t v260 = vpaddq_s32(v257, v258);
      v261.i64[0] = v259.u32[0];
      v261.i64[1] = v259.u32[1];
      uint64x2_t v262 = (uint64x2_t)v261;
      v261.i64[0] = v259.u32[2];
      v261.i64[1] = v259.u32[3];
      uint64x2_t v263 = (uint64x2_t)v261;
      v261.i64[0] = v260.u32[0];
      v261.i64[1] = v260.u32[1];
      int64x2_t v264 = v261;
      v261.i64[0] = v260.u32[2];
      v261.i64[1] = v260.u32[3];
      int64x2_t v265 = vpaddq_s64((int64x2_t)vshlq_u64(v262, (uint64x2_t)vzip1q_s64((int64x2_t)0, v264)), (int64x2_t)vshlq_u64(v263, (uint64x2_t)vzip1q_s64((int64x2_t)0, v261)));
      int64x2_t v266 = vpaddq_s64(v264, v261);
      unint64_t v267 = (v265.i64[0] << v253) | v251;
      if (v266.i64[0] + (v253 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v158 + ((v253 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v267;
        unint64_t v267 = (unint64_t)v265.i64[0] >> -(v253 & 0x3F);
        if ((v253 & 0x3F) == 0) {
          unint64_t v267 = 0;
        }
      }
      int8x16_t v268 = (int8x16_t)vaddq_s16(v30, v252);
      unint64_t v269 = v266.i64[0] + v253;
      unint64_t v270 = v267 | (v265.i64[1] << v269);
      if ((v269 & 0x3F) + v266.i64[1] >= 0x40)
      {
        *(void *)((char *)v158 + ((v269 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v270;
        unint64_t v270 = (unint64_t)v265.i64[1] >> -(v269 & 0x3F);
        if ((v269 & 0x3F) == 0) {
          unint64_t v270 = 0;
        }
      }
      unint64_t v271 = v269 + v266.i64[1];
      v272.i64[0] = 0xF000F000F000FLL;
      v272.i64[1] = 0xF000F000F000FLL;
      v273.i64[0] = -1;
      v273.i64[1] = -1;
      uint16x8_t v274 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v273, (uint16x8_t)vaddq_s16(v143, v272)), v268);
      int32x4_t v275 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v143.i8);
      int32x4_t v276 = (int32x4_t)vmovl_high_u16((uint16x8_t)v143);
      int32x4_t v277 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v274.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v275)), (int32x4_t)vshlq_u32(vmovl_high_u16(v274), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v276)));
      int32x4_t v278 = vpaddq_s32(v275, v276);
      v279.i64[0] = v277.u32[0];
      v279.i64[1] = v277.u32[1];
      uint64x2_t v280 = (uint64x2_t)v279;
      v279.i64[0] = v277.u32[2];
      v279.i64[1] = v277.u32[3];
      uint64x2_t v281 = (uint64x2_t)v279;
      v279.i64[0] = v278.u32[0];
      v279.i64[1] = v278.u32[1];
      int64x2_t v282 = v279;
      v279.i64[0] = v278.u32[2];
      v279.i64[1] = v278.u32[3];
      int64x2_t v283 = vpaddq_s64((int64x2_t)vshlq_u64(v280, (uint64x2_t)vzip1q_s64((int64x2_t)0, v282)), (int64x2_t)vshlq_u64(v281, (uint64x2_t)vzip1q_s64((int64x2_t)0, v279)));
      int64x2_t v284 = vpaddq_s64(v282, v279);
      unint64_t v285 = (v283.i64[0] << v271) | v270;
      if (v284.i64[0] + (v271 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v158 + ((v271 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v285;
        if ((v271 & 0x3F) != 0) {
          unint64_t v285 = (unint64_t)v283.i64[0] >> -(v271 & 0x3F);
        }
        else {
          unint64_t v285 = 0;
        }
      }
      unint64_t v286 = v284.i64[0] + v271;
      unint64_t v287 = v285 | (v283.i64[1] << v286);
      if ((v286 & 0x3F) + v284.i64[1] >= 0x40)
      {
        *(void *)((char *)v158 + ((v286 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
        unint64_t v287 = (unint64_t)v283.i64[1] >> -(v286 & 0x3F);
        if ((v286 & 0x3F) == 0) {
          unint64_t v287 = 0;
        }
      }
      unint64_t v288 = v286 + v284.i64[1];
      if ((v288 & 0x3F) != 0) {
        *(void *)((char *)v158 + ((v288 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
      }
      unint64_t result = (v288 - v159 + 7) >> 3;
      char v151 = *a2 | (result - 1);
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 4;
    char v151 = 1;
    unint64_t result = 2;
  }
  *a2 = v151;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressSubblock(uint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, int16x4_t a15)
{
  int32x4_t v17 = *(int32x4_t *)((char *)a3 + a4);
  int32x4_t v18 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v19 = *(int32x4_t *)((char *)v18 + a4);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v17), 4uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip1q_s32(*v18, v19), 4uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v17), 4uLL);
  int8x16_t v23 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v20.i8, 0);
  int16x8_t v24 = vshrq_n_s16((int16x8_t)vzip2q_s32(*v18, v19), 4uLL);
  int16x8_t v25 = vshlq_n_s16(vsubq_s16(v21, (int16x8_t)v23), 4uLL);
  int16x8_t v26 = vshlq_n_s16(vsubq_s16(v24, (int16x8_t)v23), 4uLL);
  v27.i64[0] = 0x3000300030003;
  v27.i64[1] = 0x3000300030003;
  int8x16_t v28 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, (int16x8_t)v23), 4uLL), v27);
  int8x16_t v29 = (int8x16_t)vshlq_s16(v25, v27);
  int16x8_t v30 = vshlq_s16(vshlq_n_s16(vsubq_s16(v22, (int16x8_t)v23), 4uLL), v27);
  int16x8_t v31 = vshlq_s16(v26, v27);
  v25.i16[0] = vmaxvq_s16((int16x8_t)v28);
  v26.i16[0] = vminvq_s16((int16x8_t)v28);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
  int16x8_t v33 = vdupq_lane_s16(*(int16x4_t *)v26.i8, 0);
  v27.i64[0] = 0x8000800080008000;
  v27.i64[1] = 0x8000800080008000;
  int16x8_t v34 = vmaxq_s16(v32, v27);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  int16x8_t v36 = vminq_s16(v33, v35);
  int16x8_t v37 = vzip1q_s16(v32, v33);
  int8x16_t v38 = (int8x16_t)vceqzq_s16(v37);
  v39.i64[0] = 0x10001000100010;
  v39.i64[1] = 0x10001000100010;
  int16x8_t v40 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v37)), v38);
  v38.i16[0] = vmaxvq_s16((int16x8_t)v29);
  a15.i16[0] = vminvq_s16((int16x8_t)v29);
  int16x8_t v41 = vdupq_lane_s16(*(int16x4_t *)v38.i8, 0);
  int16x8_t v42 = vdupq_lane_s16(a15, 0);
  int16x8_t v43 = vpmaxq_s16(v40, v40);
  int16x8_t v44 = vmaxq_s16(v34, v41);
  int16x8_t v45 = vminq_s16(v36, v42);
  int16x8_t v46 = vzip1q_s16(v41, v42);
  int16x8_t v47 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v46)), (int8x16_t)vceqzq_s16(v46));
  int16x8_t v48 = vpmaxq_s16(v47, v47);
  v47.i16[0] = vmaxvq_s16(v30);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v47.i8, 0);
  v42.i16[0] = vminvq_s16(v30);
  int16x8_t v50 = vdupq_lane_s16(*(int16x4_t *)v42.i8, 0);
  int16x8_t v51 = vmaxq_s16(v44, v49);
  int16x8_t v52 = vminq_s16(v45, v50);
  int16x8_t v53 = vzip1q_s16(v49, v50);
  int16x8_t v54 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v53)), (int8x16_t)vceqzq_s16(v53));
  int16x8_t v55 = vpmaxq_s16(v54, v54);
  v54.i16[0] = vmaxvq_s16(v31);
  v16.i16[0] = vminvq_s16(v31);
  int16x8_t v56 = vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
  int16x8_t v57 = vdupq_lane_s16(v16, 0);
  int16x8_t v58 = vmaxq_s16(v51, v56);
  int16x8_t v59 = vminq_s16(v52, v57);
  int16x8_t v60 = vzip1q_s16(v56, v57);
  int16x8_t v61 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v60)), (int8x16_t)vceqzq_s16(v60));
  int16x8_t v62 = vpmaxq_s16(v61, v61);
  int8x16_t v63 = (int8x16_t)vmaxq_s16(vmaxq_s16(v43, v48), vmaxq_s16(v55, v62));
  int16x8_t v64 = vclzq_s16(vsubq_s16(v58, v59));
  int8x16_t v65 = (int8x16_t)vsubq_s16(v39, v64);
  int8x16_t v66 = (int8x16_t)vcgtq_s16((int16x8_t)v63, (int16x8_t)v65);
  int8x16_t v67 = vbslq_s8(v66, v65, v63);
  if (vmaxvq_s16((int16x8_t)v67))
  {
    v68.i64[0] = 0x4000400040004;
    v68.i64[1] = 0x4000400040004;
    v69.i64[0] = -1;
    v69.i64[1] = -1;
    v70.i64[0] = 0xF000F000F000FLL;
    v70.i64[1] = 0xF000F000F000FLL;
    int8x16_t v71 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v69, vsubq_s16(v70, v64)), v59), v66);
    v72.i64[0] = 0x8000800080008;
    v72.i64[1] = 0x8000800080008;
    v70.i64[0] = 0x3000300030003;
    v70.i64[1] = 0x3000300030003;
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v43), v70), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v48), v70), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v55), v70), (int16x8_t)0);
    int16x8_t v76 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v62), v70), (int16x8_t)0);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v67, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v67, v74);
    int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v67, v75);
    int8x16_t v80 = (int8x16_t)vsubq_s16((int16x8_t)v67, v76);
    int8x16_t v81 = vbicq_s8(v68, (int8x16_t)vceqq_s16(vaddq_s16(v76, v75), vnegq_s16(vaddq_s16(v73, v74))));
    int8x16_t v82 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v67), (int8x16_t)v70), vandq_s8(v66, v72)), v81);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v290 = (int8x16_t)v30;
      int8x16_t v291 = (int8x16_t)v31;
      int16x8_t v83 = vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7520));
      int8x16_t v84 = (int8x16_t)v21;
      v84.i16[7] = v20.i16[7];
      int16x8_t v85 = vsubq_s16(v21, (int16x8_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_242EA7530));
      int8x16_t v86 = (int8x16_t)v22;
      v86.i16[7] = v20.i16[7];
      int16x8_t v87 = vsubq_s16(v22, (int16x8_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7540));
      int8x16_t v88 = (int8x16_t)v24;
      v88.i16[7] = v20.i16[7];
      int16x8_t v89 = v83;
      v89.i16[0] = v83.i16[7];
      int16x8_t v90 = vsubq_s16(v24, (int16x8_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7550));
      v89.i16[7] = v83.i16[0];
      int16x8_t v91 = vshlq_n_s16(v89, 4uLL);
      v88.i64[0] = 0x4000400040004;
      v88.i64[1] = 0x4000400040004;
      int16x8_t v92 = vshlq_n_s16(v87, 4uLL);
      int16x8_t v93 = vshlq_n_s16(v90, 4uLL);
      v94.i64[0] = 0x3000300030003;
      v94.i64[1] = 0x3000300030003;
      int8x16_t v95 = (int8x16_t)vshlq_s16(v91, v94);
      int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(v85, 4uLL), v94);
      int8x16_t v97 = (int8x16_t)vshlq_s16(v92, v94);
      v91.i16[0] = vmaxvq_s16((int16x8_t)v95);
      v92.i16[0] = vminvq_s16((int16x8_t)v95);
      int16x8_t v98 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v99 = vdupq_lane_s16(*(int16x4_t *)v92.i8, 0);
      int8x16_t v100 = (int8x16_t)vshlq_s16(v93, v94);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v101 = vmaxq_s16(v98, v93);
      v94.i64[0] = 0x8000800080008000;
      v94.i64[1] = 0x8000800080008000;
      int16x8_t v102 = vminq_s16(v99, v94);
      int16x8_t v103 = vzip1q_s16(v98, v99);
      int8x16_t v104 = (int8x16_t)vceqzq_s16(v103);
      v105.i64[0] = 0x10001000100010;
      v105.i64[1] = 0x10001000100010;
      int16x8_t v106 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v103)), v104);
      v104.i16[0] = vmaxvq_s16((int16x8_t)v96);
      v15.i16[0] = vminvq_s16((int16x8_t)v96);
      int16x8_t v107 = vdupq_lane_s16(*(int16x4_t *)v104.i8, 0);
      int16x8_t v108 = vdupq_lane_s16(v15, 0);
      int16x8_t v109 = vpmaxq_s16(v106, v106);
      int16x8_t v110 = vmaxq_s16(v101, v107);
      int16x8_t v111 = vminq_s16(v102, v108);
      int16x8_t v112 = vzip1q_s16(v107, v108);
      int8x16_t v113 = (int8x16_t)vceqzq_s16(v112);
      int16x8_t v114 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v112)), v113);
      int16x8_t v115 = vpmaxq_s16(v114, v114);
      v114.i16[0] = vmaxvq_s16((int16x8_t)v97);
      int16x8_t v116 = vdupq_lane_s16(*(int16x4_t *)v114.i8, 0);
      v113.i16[0] = vminvq_s16((int16x8_t)v97);
      int16x8_t v117 = vdupq_lane_s16(*(int16x4_t *)v113.i8, 0);
      int16x8_t v118 = vmaxq_s16(v110, v116);
      int16x8_t v119 = vminq_s16(v111, v117);
      int16x8_t v120 = vzip1q_s16(v116, v117);
      int8x16_t v121 = (int8x16_t)vceqzq_s16(v120);
      int16x8_t v122 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v120)), v121);
      int16x8_t v123 = vpmaxq_s16(v122, v122);
      v122.i16[0] = vmaxvq_s16((int16x8_t)v100);
      v121.i16[0] = vminvq_s16((int16x8_t)v100);
      int16x8_t v124 = vdupq_lane_s16(*(int16x4_t *)v122.i8, 0);
      int16x8_t v125 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      int16x8_t v126 = vmaxq_s16(v118, v124);
      int16x8_t v127 = vminq_s16(v119, v125);
      int16x8_t v128 = vzip1q_s16(v124, v125);
      int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
      int16x8_t v130 = vpmaxq_s16(v129, v129);
      int8x16_t v131 = (int8x16_t)vmaxq_s16(vmaxq_s16(v109, v115), vmaxq_s16(v123, v130));
      int16x8_t v132 = vclzq_s16(vsubq_s16(v126, v127));
      int8x16_t v133 = (int8x16_t)vsubq_s16(v105, v132);
      int8x16_t v134 = (int8x16_t)vcgtq_s16((int16x8_t)v131, (int16x8_t)v133);
      int8x16_t v135 = vbslq_s8(v134, v133, v131);
      int16x8_t v136 = vsubq_s16((int16x8_t)v135, v109);
      v109.i64[0] = 0x3000300030003;
      v109.i64[1] = 0x3000300030003;
      int16x8_t v137 = vmaxq_s16(vminq_s16(v136, v109), (int16x8_t)0);
      int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v115), v109), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v123), v109), (int16x8_t)0);
      int16x8_t v140 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v130), v109), (int16x8_t)0);
      int8x16_t v141 = (int8x16_t)vsubq_s16((int16x8_t)v135, v137);
      int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v135, v138);
      int8x16_t v143 = (int8x16_t)vsubq_s16((int16x8_t)v135, v139);
      int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v135, v140);
      int8x16_t v145 = vbicq_s8(v88, (int8x16_t)vceqq_s16(vaddq_s16(v140, v139), vnegq_s16(vaddq_s16(v137, v138))));
      v139.i64[0] = 0x7000700070007;
      v139.i64[1] = 0x7000700070007;
      int16x8_t v146 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v65, v66), vaddq_s16((int16x8_t)v81, (int16x8_t)v81)), (int16x8_t)v77, v139), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v79, (int16x8_t)v78), (int16x8_t)v80), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v133, v134), vaddq_s16((int16x8_t)v145, (int16x8_t)v145)), (int16x8_t)v141, v139), vshlq_n_s16(
                                            vaddq_s16(vaddq_s16((int16x8_t)v143, (int16x8_t)v142), (int16x8_t)v144),
                                            3uLL))),
               0);
      if (vaddvq_s16(v146))
      {
        v147.i64[0] = 0x2000200020002;
        v147.i64[1] = 0x2000200020002;
        int8x16_t v148 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v135), v147);
        v147.i64[0] = 0x9000900090009;
        v147.i64[1] = 0x9000900090009;
        v149.i64[0] = -1;
        v149.i64[1] = -1;
        int8x16_t v150 = vorrq_s8(vorrq_s8(v148, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v134, v147), (int16x8_t)vmvnq_s8(v134))), v145);
        v147.i64[0] = 0xF000F000F000FLL;
        v147.i64[1] = 0xF000F000F000FLL;
        int8x16_t v151 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v149, vsubq_s16((int16x8_t)v147, v132)), v127), v134);
        int8x16_t v152 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v146, 0xFuLL));
        v23.i16[0] = vbslq_s8(v152, vextq_s8(v20, v20, 0xEuLL), v23).u16[0];
        int8x16_t v28 = vbslq_s8(v152, v95, v28);
        int8x16_t v29 = vbslq_s8(v152, v96, v29);
        int16x8_t v30 = (int16x8_t)vbslq_s8(v152, v97, v290);
        int16x8_t v31 = (int16x8_t)vbslq_s8(v152, v100, v291);
        int8x16_t v77 = vbslq_s8(v152, v141, v77);
        int8x16_t v78 = vbslq_s8(v152, v142, v78);
        int8x16_t v79 = vbslq_s8(v152, v143, v79);
        int8x16_t v80 = vbslq_s8(v152, v144, v80);
        int8x16_t v71 = vbslq_s8(v152, v151, v71);
        int8x16_t v67 = vbslq_s8(v152, v135, v67);
        int8x16_t v82 = vbslq_s8(v152, v150, v82);
      }
      else
      {
        int16x8_t v30 = (int16x8_t)v290;
        int16x8_t v31 = (int16x8_t)v291;
      }
    }
    v154.i64[0] = 0x8000800080008;
    v154.i64[1] = 0x8000800080008;
    int16x8_t v155 = (int16x8_t)vandq_s8(v82, v154);
    v156.i64[0] = 0x3000300030003;
    v156.i64[1] = 0x3000300030003;
    v157.i64[0] = 0x2000200020002;
    v157.i64[1] = 0x2000200020002;
    int8x16_t v158 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v156), v157);
    v157.i64[0] = 0x10001000100010;
    v157.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(vbicq_s8(v67, (int8x16_t)vceqzq_s16(v155)).u16[0]
                                    + ((2 * v82.i16[0]) & 8)
                                    + vandq_s8(v158, (int8x16_t)v157).u16[0]
                                    - v77.i16[0]
                                    + 8 * v77.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v79, vaddq_s16((int16x8_t)v78, (int16x8_t)v80)).u16[0])
                          - 271) <= 0xFFFFFFFFFFFFFED7)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint16x8_t *)a3, a4, a5, a6, a7);
      return 36;
    }
    else
    {
      unint64_t v159 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v160 = 8 * (a1 & 7);
      if (v160) {
        uint64_t v161 = *v159 & ~(-1 << v160);
      }
      else {
        uint64_t v161 = 0;
      }
      if (v67.i16[0]) {
        uint64_t v162 = (16 * v67.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v162 = 0;
      }
      *a2 = v82.i8[0] << 6;
      unint64_t v163 = (v162 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v23.i16[0] & 0xFFF) << 8) | v82.i8[0] & 0xF) >> 2;
      unint64_t v164 = (v163 << v160) | v161;
      if (v160 >= 0x2E)
      {
        *unint64_t v159 = v164;
        unint64_t v164 = v163 >> (-8 * (a1 & 7u));
      }
      int8x16_t v165 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v77);
      int8x16_t v166 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v78);
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v79);
      int8x16_t v168 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v80);
      *(uint8x8_t *)v165.i8 = vqmovn_u16((uint16x8_t)v165);
      *(uint8x8_t *)v166.i8 = vqmovn_u16((uint16x8_t)v166);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      *(uint8x8_t *)v168.i8 = vqmovn_u16((uint16x8_t)v168);
      v165.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v165, v166), (int16x8_t)vzip1q_s8(v167, v168)).u32[0];
      unint64_t v169 = v160 + 18;
      v167.i64[0] = 0x202020202020202;
      v167.i64[1] = 0x202020202020202;
      int8x16_t v170 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v82.i8, (int8x8_t)0x4000400040004)))), v167);
      v167.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v167.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      uint8x16_t v172 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v171, (uint8x16_t)vorrq_s8(v170, v167)), (int8x16_t)v165.u32[0]);
      int16x8_t v173 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v170.i8);
      uint16x8_t v174 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v172.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v173)), (int16x8_t)vmovl_high_u8(v172));
      uint16x8_t v175 = (uint16x8_t)vpaddq_s16(v173, (int16x8_t)vmovl_high_u8((uint8x16_t)v170));
      int32x4_t v176 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v175.i8);
      int32x4_t v177 = (int32x4_t)vmovl_high_u16(v175);
      int32x4_t v178 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v174.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v176)), (int32x4_t)vshlq_u32(vmovl_high_u16(v174), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v177)));
      int32x4_t v179 = vpaddq_s32(v176, v177);
      v180.i64[0] = v178.u32[0];
      v180.i64[1] = v178.u32[1];
      uint64x2_t v181 = (uint64x2_t)v180;
      v180.i64[0] = v178.u32[2];
      v180.i64[1] = v178.u32[3];
      uint64x2_t v182 = (uint64x2_t)v180;
      v180.i64[0] = v179.u32[0];
      v180.i64[1] = v179.u32[1];
      int64x2_t v183 = v180;
      v180.i64[0] = v179.u32[2];
      v180.i64[1] = v179.u32[3];
      int64x2_t v184 = vpaddq_s64((int64x2_t)vshlq_u64(v181, (uint64x2_t)vzip1q_s64((int64x2_t)0, v183)), (int64x2_t)vshlq_u64(v182, (uint64x2_t)vzip1q_s64((int64x2_t)0, v180)));
      int64x2_t v185 = vpaddq_s64(v183, v180);
      uint64_t v186 = (v160 + 18) & 0x3A;
      unint64_t v187 = (v184.i64[0] << v186) | v164;
      if ((unint64_t)(v185.i64[0] + v186) >= 0x40)
      {
        *(void *)((char *)v159 + ((v169 >> 3) & 8)) = v187;
        unint64_t v187 = (unint64_t)v184.i64[0] >> -(char)v186;
      }
      int8x16_t v188 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v77);
      unint64_t v189 = v185.i64[0] + v169;
      uint64_t v190 = (v185.i64[0] + v169) & 0x3F;
      unint64_t v191 = v187 | (v184.i64[1] << (v185.i8[0] + v169));
      if ((unint64_t)(v190 + v185.i64[1]) >= 0x40)
      {
        *(void *)((char *)v159 + ((v189 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v191;
        unint64_t v191 = (unint64_t)v184.i64[1] >> -(char)v190;
        if (!v190) {
          unint64_t v191 = 0;
        }
      }
      int16x8_t v192 = (int16x8_t)vandq_s8(v71, v188);
      unint64_t v193 = v189 + v185.i64[1];
      v194.i64[0] = -1;
      v194.i64[1] = -1;
      int16x8_t v195 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v155, v155), (int8x16_t)0, 0xEuLL), v67);
      v196.i64[0] = 0xF000F000F000FLL;
      v196.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v197 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v194, (uint16x8_t)vaddq_s16(v195, v196)), v71);
      int32x4_t v198 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v195.i8);
      int32x4_t v199 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v197.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v198)), (int32x4_t)vmovl_high_u16(v197));
      int32x4_t v200 = vpaddq_s32(v198, (int32x4_t)vmovl_high_u16((uint16x8_t)v195));
      v201.i64[0] = v199.u32[0];
      v201.i64[1] = v199.u32[1];
      uint64x2_t v202 = (uint64x2_t)v201;
      v201.i64[0] = v199.u32[2];
      v201.i64[1] = v199.u32[3];
      uint64x2_t v203 = (uint64x2_t)v201;
      v201.i64[0] = v200.u32[0];
      v201.i64[1] = v200.u32[1];
      int64x2_t v204 = v201;
      v201.i64[0] = v200.u32[2];
      v201.i64[1] = v200.u32[3];
      int64x2_t v205 = vpaddq_s64((int64x2_t)vshlq_u64(v202, (uint64x2_t)vzip1q_s64((int64x2_t)0, v204)), (int64x2_t)vshlq_u64(v203, (uint64x2_t)vzip1q_s64((int64x2_t)0, v201)));
      int64x2_t v206 = vpaddq_s64(v204, v201);
      unint64_t v207 = (v205.i64[0] << v193) | v191;
      if (v206.i64[0] + (v193 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v193 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v207;
        unint64_t v207 = (unint64_t)v205.i64[0] >> -(v193 & 0x3F);
        if ((v193 & 0x3F) == 0) {
          unint64_t v207 = 0;
        }
      }
      int8x16_t v208 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v78);
      int8x16_t v209 = (int8x16_t)vaddq_s16(v192, (int16x8_t)v28);
      unint64_t v210 = v206.i64[0] + v193;
      unint64_t v211 = v207 | (v205.i64[1] << v210);
      if ((v210 & 0x3F) + v206.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v210 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v211;
        unint64_t v211 = (unint64_t)v205.i64[1] >> -(v210 & 0x3F);
        if ((v210 & 0x3F) == 0) {
          unint64_t v211 = 0;
        }
      }
      int16x8_t v212 = (int16x8_t)vandq_s8(v71, v208);
      unint64_t v213 = v210 + v206.i64[1];
      int16x8_t v214 = (int16x8_t)vextq_s8((int8x16_t)0, v77, 0xEuLL);
      v215.i64[0] = 0xF000F000F000FLL;
      v215.i64[1] = 0xF000F000F000FLL;
      v216.i64[0] = -1;
      v216.i64[1] = -1;
      uint16x8_t v217 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v216, (uint16x8_t)vaddq_s16(v214, v215)), v209);
      int32x4_t v218 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v214.i8);
      int32x4_t v219 = (int32x4_t)vmovl_high_u16((uint16x8_t)v214);
      int32x4_t v220 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v217.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v218)), (int32x4_t)vshlq_u32(vmovl_high_u16(v217), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v219)));
      int32x4_t v221 = vpaddq_s32(v218, v219);
      v222.i64[0] = v220.u32[0];
      v222.i64[1] = v220.u32[1];
      uint64x2_t v223 = (uint64x2_t)v222;
      v222.i64[0] = v220.u32[2];
      v222.i64[1] = v220.u32[3];
      uint64x2_t v224 = (uint64x2_t)v222;
      v222.i64[0] = v221.u32[0];
      v222.i64[1] = v221.u32[1];
      int64x2_t v225 = v222;
      v222.i64[0] = v221.u32[2];
      v222.i64[1] = v221.u32[3];
      int64x2_t v226 = vpaddq_s64((int64x2_t)vshlq_u64(v223, (uint64x2_t)vzip1q_s64((int64x2_t)0, v225)), (int64x2_t)vshlq_u64(v224, (uint64x2_t)vzip1q_s64((int64x2_t)0, v222)));
      int64x2_t v227 = vpaddq_s64(v225, v222);
      unint64_t v228 = (v226.i64[0] << v213) | v211;
      if (v227.i64[0] + (v213 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v213 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v228;
        unint64_t v228 = (unint64_t)v226.i64[0] >> -(v213 & 0x3F);
        if ((v213 & 0x3F) == 0) {
          unint64_t v228 = 0;
        }
      }
      int8x16_t v229 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v79);
      int8x16_t v230 = (int8x16_t)vaddq_s16((int16x8_t)v29, v212);
      unint64_t v231 = v227.i64[0] + v213;
      unint64_t v232 = v228 | (v226.i64[1] << v231);
      if ((v231 & 0x3F) + v227.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v231 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v232;
        unint64_t v232 = (unint64_t)v226.i64[1] >> -(v231 & 0x3F);
        if ((v231 & 0x3F) == 0) {
          unint64_t v232 = 0;
        }
      }
      int16x8_t v233 = (int16x8_t)vandq_s8(v71, v229);
      unint64_t v234 = v231 + v227.i64[1];
      v235.i64[0] = 0xF000F000F000FLL;
      v235.i64[1] = 0xF000F000F000FLL;
      v236.i64[0] = -1;
      v236.i64[1] = -1;
      uint16x8_t v237 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v236, (uint16x8_t)vaddq_s16((int16x8_t)v78, v235)), v230);
      int32x4_t v238 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v239 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v240 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v237.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v238)), (int32x4_t)vshlq_u32(vmovl_high_u16(v237), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v239)));
      int32x4_t v241 = vpaddq_s32(v238, v239);
      v242.i64[0] = v240.u32[0];
      v242.i64[1] = v240.u32[1];
      uint64x2_t v243 = (uint64x2_t)v242;
      v242.i64[0] = v240.u32[2];
      v242.i64[1] = v240.u32[3];
      uint64x2_t v244 = (uint64x2_t)v242;
      v242.i64[0] = v241.u32[0];
      v242.i64[1] = v241.u32[1];
      int64x2_t v245 = v242;
      v242.i64[0] = v241.u32[2];
      v242.i64[1] = v241.u32[3];
      int64x2_t v246 = vpaddq_s64((int64x2_t)vshlq_u64(v243, (uint64x2_t)vzip1q_s64((int64x2_t)0, v245)), (int64x2_t)vshlq_u64(v244, (uint64x2_t)vzip1q_s64((int64x2_t)0, v242)));
      int64x2_t v247 = vpaddq_s64(v245, v242);
      unint64_t v248 = (v246.i64[0] << v234) | v232;
      if (v247.i64[0] + (v234 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v234 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v248;
        unint64_t v248 = (unint64_t)v246.i64[0] >> -(v234 & 0x3F);
        if ((v234 & 0x3F) == 0) {
          unint64_t v248 = 0;
        }
      }
      int8x16_t v249 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v80);
      int8x16_t v250 = (int8x16_t)vaddq_s16(v30, v233);
      unint64_t v251 = v247.i64[0] + v234;
      unint64_t v252 = v248 | (v246.i64[1] << v251);
      if ((v251 & 0x3F) + v247.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v251 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v252;
        unint64_t v252 = (unint64_t)v246.i64[1] >> -(v251 & 0x3F);
        if ((v251 & 0x3F) == 0) {
          unint64_t v252 = 0;
        }
      }
      int16x8_t v253 = (int16x8_t)vandq_s8(v71, v249);
      unint64_t v254 = v251 + v247.i64[1];
      v255.i64[0] = 0xF000F000F000FLL;
      v255.i64[1] = 0xF000F000F000FLL;
      v256.i64[0] = -1;
      v256.i64[1] = -1;
      uint16x8_t v257 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v256, (uint16x8_t)vaddq_s16((int16x8_t)v79, v255)), v250);
      int32x4_t v258 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v259 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v260 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v257.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v258)), (int32x4_t)vshlq_u32(vmovl_high_u16(v257), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v259)));
      int32x4_t v261 = vpaddq_s32(v258, v259);
      v262.i64[0] = v260.u32[0];
      v262.i64[1] = v260.u32[1];
      uint64x2_t v263 = (uint64x2_t)v262;
      v262.i64[0] = v260.u32[2];
      v262.i64[1] = v260.u32[3];
      uint64x2_t v264 = (uint64x2_t)v262;
      v262.i64[0] = v261.u32[0];
      v262.i64[1] = v261.u32[1];
      int64x2_t v265 = v262;
      v262.i64[0] = v261.u32[2];
      v262.i64[1] = v261.u32[3];
      int64x2_t v266 = vpaddq_s64((int64x2_t)vshlq_u64(v263, (uint64x2_t)vzip1q_s64((int64x2_t)0, v265)), (int64x2_t)vshlq_u64(v264, (uint64x2_t)vzip1q_s64((int64x2_t)0, v262)));
      int64x2_t v267 = vpaddq_s64(v265, v262);
      unint64_t v268 = (v266.i64[0] << v254) | v252;
      if (v267.i64[0] + (v254 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v254 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v268;
        unint64_t v268 = (unint64_t)v266.i64[0] >> -(v254 & 0x3F);
        if ((v254 & 0x3F) == 0) {
          unint64_t v268 = 0;
        }
      }
      int8x16_t v269 = (int8x16_t)vaddq_s16(v31, v253);
      unint64_t v270 = v267.i64[0] + v254;
      unint64_t v271 = v268 | (v266.i64[1] << v270);
      if ((v270 & 0x3F) + v267.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v270 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v271;
        unint64_t v271 = (unint64_t)v266.i64[1] >> -(v270 & 0x3F);
        if ((v270 & 0x3F) == 0) {
          unint64_t v271 = 0;
        }
      }
      unint64_t v272 = v270 + v267.i64[1];
      v273.i64[0] = 0xF000F000F000FLL;
      v273.i64[1] = 0xF000F000F000FLL;
      v274.i64[0] = -1;
      v274.i64[1] = -1;
      uint16x8_t v275 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v274, (uint16x8_t)vaddq_s16((int16x8_t)v80, v273)), v269);
      int32x4_t v276 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v80.i8);
      int32x4_t v277 = (int32x4_t)vmovl_high_u16((uint16x8_t)v80);
      int32x4_t v278 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v275.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v276)), (int32x4_t)vshlq_u32(vmovl_high_u16(v275), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)));
      int32x4_t v279 = vpaddq_s32(v276, v277);
      v280.i64[0] = v278.u32[0];
      v280.i64[1] = v278.u32[1];
      uint64x2_t v281 = (uint64x2_t)v280;
      v280.i64[0] = v278.u32[2];
      v280.i64[1] = v278.u32[3];
      uint64x2_t v282 = (uint64x2_t)v280;
      v280.i64[0] = v279.u32[0];
      v280.i64[1] = v279.u32[1];
      int64x2_t v283 = v280;
      v280.i64[0] = v279.u32[2];
      v280.i64[1] = v279.u32[3];
      int64x2_t v284 = vpaddq_s64((int64x2_t)vshlq_u64(v281, (uint64x2_t)vzip1q_s64((int64x2_t)0, v283)), (int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v280)));
      int64x2_t v285 = vpaddq_s64(v283, v280);
      unint64_t v286 = (v284.i64[0] << v272) | v271;
      if (v285.i64[0] + (v272 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v159 + ((v272 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
        if ((v272 & 0x3F) != 0) {
          unint64_t v286 = (unint64_t)v284.i64[0] >> -(v272 & 0x3F);
        }
        else {
          unint64_t v286 = 0;
        }
      }
      unint64_t v287 = v285.i64[0] + v272;
      unint64_t v288 = v286 | (v284.i64[1] << v287);
      if ((v287 & 0x3F) + v285.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v287 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v288;
        unint64_t v288 = (unint64_t)v284.i64[1] >> -(v287 & 0x3F);
        if ((v287 & 0x3F) == 0) {
          unint64_t v288 = 0;
        }
      }
      unint64_t v289 = v287 + v285.i64[1];
      if ((v289 & 0x3F) != 0) {
        *(void *)((char *)v159 + ((v289 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v288;
      }
      unint64_t result = (v289 - v160 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 4;
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v11 = a6;
  if (a5 >= 8)
  {
    uint64_t v14 = 0;
    int16x4_t v15 = &v45;
    int16x4_t v16 = (char *)&v43 + ((8 * a5) & 0x7C0);
    do
    {
      int32x4_t v17 = v15;
      int32x4_t v18 = a3;
      uint64_t v19 = a5 & 0xF8;
      do
      {
        uint16x8_t v20 = *v18++;
        uint16x8_t v21 = vshrq_n_u16(v20, 4uLL);
        *((_WORD *)v17 - 16) = v21.i16[0];
        *((_WORD *)v17 - 12) = v21.i16[1];
        *((_WORD *)v17 - 8) = v21.i16[2];
        *((_WORD *)v17 - 4) = v21.i16[3];
        *(_WORD *)int32x4_t v17 = v21.i16[4];
        *((_WORD *)v17 + 4) = v21.i16[5];
        *((_WORD *)v17 + 8) = v21.i16[6];
        *((_WORD *)v17 + 12) = v21.i16[7];
        v17 += 4;
        v19 -= 8;
      }
      while (v19);
      if ((a5 & 0xF8) != (unint64_t)a5)
      {
        int16x8_t v22 = v16;
        uint64_t v23 = a5 & 0xF8;
        do
        {
          _WORD *v22 = (unsigned __int16)a3->i16[v23] >> 4;
          v22 += 4;
          ++v23;
        }
        while (a5 != v23);
      }
      ++v14;
      a3 = (uint16x8_t *)((char *)a3 + a4);
      int16x4_t v15 = (long long *)((char *)v15 + 2);
      v16 += 2;
    }
    while (v14 != a6);
  }
  else
  {
    int32x4_t v12 = &a3->i16[3];
    int32x4_t v13 = (_WORD *)&v44 + 4;
    do
    {
      *(v13 - 12) = (unsigned __int16)*(v12 - 3) >> 4;
      if (a5 != 1)
      {
        *(v13 - 8) = (unsigned __int16)*(v12 - 2) >> 4;
        if (a5 != 2)
        {
          *(v13 - 4) = (unsigned __int16)*(v12 - 1) >> 4;
          if (a5 != 3)
          {
            *int32x4_t v13 = (unsigned __int16)*v12 >> 4;
            if (a5 != 4)
            {
              v13[4] = (unsigned __int16)v12[1] >> 4;
              if (a5 != 5)
              {
                v13[8] = (unsigned __int16)v12[2] >> 4;
                if (a5 != 6) {
                  v13[12] = (unsigned __int16)v12[3] >> 4;
                }
              }
            }
          }
        }
      }
      int32x4_t v12 = (__int16 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  v38.i32[0] = (unsigned __int16)v43;
  v38.i32[1] = WORD4(v43);
  v38.i32[2] = WORD1(v43);
  v38.i32[3] = WORD5(v43);
  int v39 = (unsigned __int16)v44;
  int v40 = WORD4(v44);
  if (a5 >= 4) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = a5;
  }
  if (a5 >= 4) {
    unsigned int v25 = a5 - 4;
  }
  else {
    unsigned int v25 = 0;
  }
  int v41 = WORD1(v44);
  int v42 = WORD5(v44);
  if (a6 >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = a6;
  }
  if (a6 >= 2) {
    unsigned int v27 = a6 - 2;
  }
  else {
    unsigned int v27 = 0;
  }
  char v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, &v38, a7, v24, v26);
  v38.i32[0] = WORD2(v43);
  v38.i32[1] = WORD6(v43);
  v38.i32[2] = WORD3(v43);
  v38.i32[3] = HIWORD(v43);
  int v39 = WORD2(v44);
  int v40 = WORD6(v44);
  int v41 = WORD3(v44);
  int v42 = HIWORD(v44);
  if (a6 >= 4) {
    unsigned int v29 = 2;
  }
  else {
    unsigned int v29 = v27;
  }
  int v30 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 9, &v38, a7, v24, v29);
  v38.i32[0] = (unsigned __int16)v45;
  v38.i32[1] = WORD4(v45);
  v38.i32[2] = WORD1(v45);
  v38.i32[3] = WORD5(v45);
  int v39 = (unsigned __int16)v46;
  int v40 = WORD4(v46);
  if (a5 >= 8) {
    unsigned int v31 = 4;
  }
  else {
    unsigned int v31 = v25;
  }
  int v41 = WORD1(v46);
  int v42 = WORD5(v46);
  int v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 18, &v38, a7, v31, v26);
  v38.i32[0] = WORD2(v45);
  v38.i32[1] = WORD6(v45);
  v38.i32[2] = WORD3(v45);
  v38.i32[3] = HIWORD(v45);
  int v39 = WORD2(v46);
  int v40 = WORD6(v46);
  int v41 = WORD3(v46);
  int v42 = HIWORD(v46);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 27, &v38, a7, v31, v29);
  if (v32) {
    char v34 = 4;
  }
  else {
    char v34 = 0;
  }
  if (v30) {
    char v35 = 2;
  }
  else {
    char v35 = 0;
  }
  if (result) {
    char v36 = -8;
  }
  else {
    char v36 = -16;
  }
  *a2 = v36 | v34 | v28 | v35;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(uint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v124 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v8.i64[0] = 0x80000000800;
    v8.i64[1] = 0x80000000800;
    int8x16_t v9 = veorq_s8(*a2, v8);
    v10.i64[0] = 0x100000001;
    v10.i64[1] = 0x100000001;
    int8x16_t v6 = vbicq_s8(v9, (int8x16_t)vceqq_s32((int32x4_t)v9, v10));
    int8x16_t v11 = veorq_s8(a2[1], v8);
    int8x16_t v7 = vbicq_s8(v11, (int8x16_t)vceqq_s32((int32x4_t)v11, v10));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v5.i64[0] = 0x80000000800;
    v5.i64[1] = 0x80000000800;
    int8x16_t v6 = veorq_s8(*a2, v5);
    int8x16_t v7 = veorq_s8(a2[1], v5);
LABEL_5:
    int8x16_t v122 = v6;
    int8x16_t v123 = v7;
    unsigned int v12 = v6.i32[0];
    goto LABEL_7;
  }
  int8x16_t v13 = a2[1];
  int8x16_t v122 = *a2;
  int8x16_t v123 = v13;
  unsigned int v12 = v122.i32[0];
LABEL_7:
  if (a5) {
    BOOL v14 = a4 >= 2;
  }
  else {
    BOOL v14 = 0;
  }
  int v15 = !v14;
  if (v14)
  {
    unsigned int v17 = v122.u32[1];
    unsigned int v16 = v122.i32[1] < v12;
    if (v122.i32[1] >= v12) {
      unsigned int v18 = v12;
    }
    else {
      unsigned int v18 = v122.u32[1];
    }
    if (v12 > v122.i32[1]) {
      unsigned int v17 = v12;
    }
  }
  else
  {
    unsigned int v16 = 0;
    unsigned int v17 = v12;
    unsigned int v18 = v12;
  }
  BOOL v19 = a5 < 2 || a4 == 0;
  int v20 = v19;
  if (!v19)
  {
    if (v122.i32[2] < v18)
    {
      unsigned int v16 = 2;
      unsigned int v18 = v122.u32[2];
    }
    if (v17 <= v122.i32[2]) {
      unsigned int v17 = v122.u32[2];
    }
  }
  BOOL v21 = a5 >= 2 && a4 >= 2;
  int v22 = !v21;
  if (v21)
  {
    if (v122.i32[3] < v18)
    {
      unsigned int v16 = 3;
      unsigned int v18 = v122.u32[3];
    }
    if (v17 <= v122.i32[3]) {
      unsigned int v17 = v122.u32[3];
    }
  }
  if (a5) {
    BOOL v23 = a4 >= 3;
  }
  else {
    BOOL v23 = 0;
  }
  int v24 = !v23;
  if (v23)
  {
    if (v123.i32[0] < v18)
    {
      unsigned int v16 = 4;
      unsigned int v18 = v123.i32[0];
    }
    if (v17 <= v123.i32[0]) {
      unsigned int v17 = v123.i32[0];
    }
  }
  if (a5) {
    BOOL v25 = a4 >= 4;
  }
  else {
    BOOL v25 = 0;
  }
  int v26 = !v25;
  if (v25)
  {
    if (v123.i32[1] < v18)
    {
      unsigned int v16 = 5;
      unsigned int v18 = v123.u32[1];
    }
    if (v17 <= v123.i32[1]) {
      unsigned int v17 = v123.u32[1];
    }
  }
  BOOL v27 = a5 >= 2 && a4 >= 3;
  int v28 = !v27;
  if (v27)
  {
    if (v123.i32[2] < v18)
    {
      unsigned int v16 = 6;
      unsigned int v18 = v123.u32[2];
    }
    if (v17 <= v123.i32[2]) {
      unsigned int v17 = v123.u32[2];
    }
  }
  BOOL v29 = a5 >= 2 && a4 >= 4;
  int v30 = !v29;
  if (v29)
  {
    if (v123.i32[3] < v18)
    {
      unsigned int v16 = 7;
      unsigned int v18 = v123.u32[3];
    }
    if (v17 <= v123.i32[3]) {
      unsigned int v17 = v123.u32[3];
    }
  }
  unsigned int v31 = v17 - v18;
  unsigned int v32 = __clz(v17 - v18);
  int v33 = 32 - v32;
  if ((int)(32 - v32) <= 2) {
    int v33 = 2;
  }
  unsigned int v34 = v33 - 2;
  if ((v32 & 0x3C) == 0x1C) {
    unsigned int v34 = 2;
  }
  if (v34 < 3 && v17 == v18) {
    unsigned int v34 = v17 != 0;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v36 = 0;
    if (v18 <= 0x7FF && v17 >= 0x800) {
      BOOL v36 = kDQuadParamTable[10 * v34 + 328] == 0;
    }
  }
  else
  {
    BOOL v36 = 0;
  }
  if (v34 > 6 || v36)
  {
    int v38 = kDQuadParamTable[10 * v34 + 324];
    unsigned int v39 = v38 + 3;
    if (v36) {
      int v40 = 0;
    }
    else {
      int v40 = -2;
    }
    int v41 = v18 & ~(-1 << (9 - v38));
    if (v39 >= 0xC) {
      int v41 = 0;
    }
    int v42 = v41 + v40;
    if (v42 >= 1 && __clz(v42 + v31) < v32) {
      ++v34;
    }
  }
  unint64_t v43 = v34;
  unint64_t v47 = (unint64_t)&kDQuadParamTable[10 * v34];
  unint64_t v44 = *(void *)(v47 + 1288);
  int v45 = *(_DWORD *)(v47 + 1296);
  int v46 = *(_DWORD *)(v47 + 1300);
  LODWORD(v47) = v46 + 3;
  if (a4) {
    BOOL v48 = a5 == 0;
  }
  else {
    BOOL v48 = 1;
  }
  int v49 = v48;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v50 = a4 == 0;
    }
    else {
      BOOL v50 = 1;
    }
    int v51 = !v50;
  }
  else
  {
    int v51 = 0;
  }
  unint64_t v52 = 0;
  unsigned int v53 = 0;
  if (v44 >> v47 > 8) {
    int v51 = 1;
  }
  unsigned int v54 = v45 + 3;
  memset(v119, 0, sizeof(v119));
  int v120 = 0;
  if (v46) {
    unsigned int v55 = 12;
  }
  else {
    unsigned int v55 = 0;
  }
  if (v54 >= 0xC) {
    uint64_t v56 = 12;
  }
  else {
    uint64_t v56 = v54;
  }
  if (v55 >= v47) {
    unint64_t v47 = v47;
  }
  else {
    unint64_t v47 = v55;
  }
  unsigned int v57 = v18 & (-1 << (12 - v56));
  unsigned int v58 = v12 - v57;
  if (v49) {
    unsigned int v58 = 0;
  }
  BOOL v19 = v15 == 0;
  unsigned __int32 v59 = v122.i32[1] - v57;
  if (!v19) {
    unsigned __int32 v59 = 0;
  }
  v121[0] = v58;
  v121[1] = v59;
  unint64_t v60 = v16;
  unint64_t v61 = v44 >> v47;
  unsigned __int32 v62 = v122.i32[2] - v57;
  if (v20) {
    unsigned __int32 v62 = 0;
  }
  unsigned __int32 v63 = v122.i32[3] - v57;
  if (v22) {
    unsigned __int32 v63 = 0;
  }
  v121[2] = v62;
  v121[3] = v63;
  unsigned __int32 v64 = v123.i32[0] - v57;
  if (v24) {
    unsigned __int32 v64 = 0;
  }
  unsigned __int32 v65 = v123.i32[1] - v57;
  if (v26) {
    unsigned __int32 v65 = 0;
  }
  v121[4] = v64;
  v121[5] = v65;
  unsigned __int32 v66 = v123.i32[2] - v57;
  if (v28) {
    unsigned __int32 v66 = 0;
  }
  unsigned __int32 v67 = v123.i32[3] - v57;
  if (v30) {
    unsigned __int32 v67 = 0;
  }
  v121[6] = v66;
  v121[7] = v67;
  if (v61 <= 1) {
    unint64_t v68 = 1;
  }
  else {
    unint64_t v68 = v44 >> v47;
  }
  uint64_t v69 = 4 * v16;
  int16x8_t v70 = &byte_242EA911D;
  do
  {
    if (v69 != v52)
    {
      if (v47) {
        unint64_t v71 = v121[v52 / 4] / v68;
      }
      else {
        LODWORD(v71) = 0;
      }
      *((_DWORD *)v119 + v53) = v71;
      if (v61 >= 2)
      {
        unint64_t v72 = v121[v52 / 4];
        if (v72)
        {
          if (v72 / v68 * v68 == v72 && ((v72 / v68) & 1) != 0)
          {
            if (v57 || v71 != 1)
            {
              if ((a3 | 2) != 3
                || (uint64_t v74 = v122.u32[v52 / 4], v74 != 2048) && ((a3 | 2) != 3 || v68 + 2048 != v74))
              {
                LODWORD(v71) = v71 - 1;
                *((_DWORD *)v119 + v53) = v71;
              }
            }
            else
            {
              LODWORD(v71) = 1;
            }
          }
        }
      }
      if (v71 >> v47 || v122.i32[v52 / 4] == 4095) {
        *((_DWORD *)v119 + v53) = ~(-1 << v47);
      }
      if (*v70 >= a5 || *(v70 - 1) >= a4) {
        *((_DWORD *)v119 + v53) = 0;
      }
      ++v53;
    }
    v52 += 4;
    v70 += 2;
  }
  while (v52 != 32);
  int16x8_t v75 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v76 = 8 * (a1 & 7);
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)a1 = 0;
  if ((v51 | v49) == 1)
  {
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 8 * (a1 & 7);
    do
    {
      int8x16_t v80 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v77;
      if (v80[1] >= a5 || *v80 >= a4) {
        unint64_t v82 = 0;
      }
      else {
        unint64_t v82 = (unint64_t)v122.u32[v77] >> 3;
      }
      if ((unint64_t)(v79 - v76 + (v78 << 6) - 64) >= 0xFFFFFFFFFFFFFFB7)
      {
        uint64_t v83 = 0;
        unint64_t v84 = 9;
        do
        {
          unint64_t v85 = 64 - v79;
          if (64 - v79 >= v84) {
            unint64_t v85 = v84;
          }
          v75[v78] |= ((v82 >> v83) & ~(-1 << v85)) << v79;
          v83 += v85;
          unint64_t v86 = v85 + v79;
          v78 += v86 >> 6;
          uint64_t v79 = v86 & 0x3F;
          v84 -= v85;
        }
        while (v84);
      }
      ++v77;
    }
    while (v77 != 8);
    return v51 | v49;
  }
  if (v43 < 4)
  {
    uint64_t v88 = v76 | 3;
    if ((v76 | 3uLL) - v76 <= 0x46)
    {
      uint64_t v87 = 0;
      uint64_t v90 = 0;
      unint64_t v91 = 2;
      do
      {
        unint64_t v92 = 64 - v88;
        if (64 - v88 >= v91) {
          unint64_t v92 = v91;
        }
        v75[v87] |= ((v43 >> v90) & ~(-1 << v92)) << v88;
        v90 += v92;
        unint64_t v93 = v92 + v88;
        v87 += v93 >> 6;
        uint64_t v88 = v93 & 0x3F;
        v91 -= v92;
      }
      while (v91);
    }
    else
    {
      uint64_t v87 = 0;
    }
    int v89 = 5;
    if (!v43) {
      goto LABEL_220;
    }
  }
  else
  {
    uint64_t v87 = 0;
    *v75 |= (unint64_t)(((_BYTE)v43 + 5) & 7) << v76;
    uint64_t v88 = v76 | 3;
    int v89 = 3;
  }
  if (v56 && (unint64_t)(v56 - v76 + v88 + (v87 << 6)) <= 0x48)
  {
    uint64_t v94 = 0;
    unint64_t v95 = v56;
    do
    {
      unint64_t v96 = 64 - v88;
      if (64 - v88 >= v95) {
        unint64_t v96 = v95;
      }
      v75[v87] |= (((unint64_t)(v57 >> (12 - v56)) >> v94) & ~(-1 << v96)) << v88;
      v94 += v96;
      unint64_t v97 = v96 + v88;
      v87 += v97 >> 6;
      uint64_t v88 = v97 & 0x3F;
      v95 -= v96;
    }
    while (v95);
  }
  v89 += v56;
LABEL_220:
  if (v47)
  {
    if ((unint64_t)(v88 - v76 + (v87 << 6) + 3) <= 0x48)
    {
      uint64_t v98 = 0;
      unint64_t v99 = 3;
      do
      {
        unint64_t v100 = 64 - v88;
        if (64 - v88 >= v99) {
          unint64_t v100 = v99;
        }
        v75[v87] |= ((v60 >> v98) & ~(-1 << v100)) << v88;
        v98 += v100;
        unint64_t v101 = v100 + v88;
        v87 += v101 >> 6;
        uint64_t v88 = v101 & 0x3F;
        v99 -= v100;
      }
      while (v99);
    }
    v89 += 3;
  }
  unsigned int v102 = (((37 * (72 - v89)) >> 8)
        + (((72 - v89 - ((unsigned __int16)(37 * (72 - v89)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v103 = -7 * v102 + 72 - v89;
  if ((v103 - 257) >= 0xFFFFFF00 && v88 - v76 + (v87 << 6) + v103 <= 0x48)
  {
    do
    {
      unint64_t v104 = 64 - v88;
      if (64 - v88 >= v103) {
        unint64_t v104 = v103;
      }
      unint64_t v105 = v104 + v88;
      v87 += v105 >> 6;
      uint64_t v88 = v105 & 0x3F;
      v103 -= v104;
    }
    while (v103);
  }
  uint64_t v106 = 0;
  unint64_t v107 = v102 - v47;
  if (v107) {
    BOOL v108 = v107 > 0x100;
  }
  else {
    BOOL v108 = 1;
  }
  char v109 = v108;
  do
  {
    if (v47 && v47 - v76 + v88 + (v87 << 6) <= 0x48)
    {
      uint64_t v110 = 0;
      unint64_t v111 = *((unsigned int *)v119 + v106);
      unint64_t v112 = v47;
      do
      {
        unint64_t v113 = 64 - v88;
        if (64 - v88 >= v112) {
          unint64_t v113 = v112;
        }
        v75[v87] |= ((v111 >> v110) & ~(-1 << v113)) << v88;
        v110 += v113;
        unint64_t v114 = v113 + v88;
        v87 += v114 >> 6;
        uint64_t v88 = v114 & 0x3F;
        v112 -= v113;
      }
      while (v112);
    }
    if ((v109 & 1) == 0 && v88 - v76 + (v87 << 6) + v107 <= 0x48)
    {
      unint64_t v115 = v107;
      do
      {
        unint64_t v116 = 64 - v88;
        if (64 - v88 >= v115) {
          unint64_t v116 = v115;
        }
        unint64_t v117 = v116 + v88;
        v87 += v117 >> 6;
        uint64_t v88 = v117 & 0x3F;
        v115 -= v116;
      }
      while (v115);
    }
    ++v106;
  }
  while (v106 != 7);
  return v51 | v49;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)1>::decompressSubblock(uint64_t a1, uint64_t a2, int32x4_t *a3, unsigned int a4, int a5, double a6, double a7, double a8, int8x8_t a9)
{
  uint64_t v469 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v194 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    int16x8_t v195 = (void *)(a1 + a2);
    *int16x8_t v195 = 0;
    v195[1] = 0;
    int16x8_t v196 = (void *)(a1 + 2 * a2);
    *int16x8_t v196 = 0;
    v196[1] = 0;
    uint16x8_t v197 = (void *)(a1 + a2 + 2 * a2);
LABEL_312:
    *uint16x8_t v197 = 0;
    v197[1] = 0;
    return v194;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v9 = 0;
    unsigned int v10 = a5 & 0xFFFFFFFD;
    int v427 = a3;
    unsigned int v426 = a4;
    while (1)
    {
      unint64_t v28 = (unint64_t)a3 + 9 * v9;
      BOOL v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v30 = 8 * (v28 & 7);
      if (((a4 >> v9) & 1) == 0) {
        break;
      }
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = v30;
      do
      {
        if ((unint64_t)(v33 - v30 + (v32 << 6) - 64) < 0xFFFFFFFFFFFFFFB7)
        {
          __int16 v34 = 0;
        }
        else
        {
          __int16 v34 = 0;
          uint64_t v38 = 0;
          unint64_t v39 = 9;
          do
          {
            if (64 - v33 >= v39) {
              unint64_t v40 = v39;
            }
            else {
              unint64_t v40 = 64 - v33;
            }
            v34 |= (unint64_t)((v29[v32] >> v33) & ~(-1 << v40)) << v38;
            v38 += v40;
            unint64_t v41 = v40 + v33;
            v32 += v41 >> 6;
            uint64_t v33 = v41 & 0x3F;
            v39 -= v40;
          }
          while (v39);
        }
        int v35 = 8 * (v34 & 0x1FF);
        int v36 = v35 - (v34 & 1) + 4;
        if (v35 == 4088) {
          int v36 = 4095;
        }
        if (!v35) {
          int v36 = 0;
        }
        if (v35 == 2048 && v10 == 1) {
          int v36 = v35;
        }
        if (a5 == 4) {
          int v36 = v35;
        }
        *(&v428 + v31++) = v36 ^ (((a5 & 0xFFFFFFFD) == 1) << 11);
      }
      while (v31 != 8);
      LOWORD(v12) = v428;
      LOWORD(v11) = v429;
      LOWORD(v13) = v430;
      LOWORD(v14) = v431;
      LOWORD(v15) = v432;
      LOWORD(v16) = v433;
      __int16 v18 = v434;
      __int16 v17 = v435;
LABEL_5:
      BOOL v19 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v9;
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      int v22 = &v436 + v20;
      uint64_t v23 = 2 * v21;
      *(_WORD *)((char *)v22 + v23) = v12;
      int v24 = &v436 + (v20 + 1);
      *(_WORD *)((char *)v24 + v23) = v11;
      uint64_t v25 = 2 * (v21 + 1);
      *(_WORD *)((char *)v22 + v25) = v13;
      *(_WORD *)((char *)v24 + v25) = v14;
      int v26 = &v436 + (v20 + 2);
      *(_WORD *)((char *)v26 + v23) = v15;
      BOOL v27 = &v436 + (v20 + 3);
      *(_WORD *)((char *)v27 + v23) = v16;
      *(_WORD *)((char *)v26 + v25) = v18;
      *(_WORD *)((char *)v27 + v25) = v17;
      if (++v9 == 4)
      {
        *(_WORD *)a1 = 16 * v436;
        *(_WORD *)(a1 + 2) = 16 * v437;
        *(_WORD *)(a1 + 4) = 16 * v441;
        *(_WORD *)(a1 + 6) = 16 * v445;
        *(_WORD *)(a1 + 8) = 16 * v449;
        *(_WORD *)(a1 + 10) = 16 * v453;
        *(_WORD *)(a1 + 12) = 16 * v457;
        *(_WORD *)(a1 + 14) = 16 * v461;
        int32x4_t v199 = (_WORD *)(a1 + a2);
        *int32x4_t v199 = 16 * WORD1(v436);
        v199[1] = 16 * v438;
        v199[2] = 16 * v442;
        v199[3] = 16 * v446;
        v199[4] = 16 * v450;
        v199[5] = 16 * v454;
        v199[6] = 16 * v458;
        v199[7] = 16 * v462;
        int32x4_t v200 = (_WORD *)(a1 + a2 + a2);
        *int32x4_t v200 = 16 * WORD2(v436);
        v200[1] = 16 * v439;
        v200[2] = 16 * v443;
        v200[3] = 16 * v447;
        v200[4] = 16 * v451;
        v200[5] = 16 * v455;
        v200[6] = 16 * v459;
        v200[7] = 16 * v463;
        int64x2_t v201 = (_WORD *)((char *)v200 + a2);
        *int64x2_t v201 = 16 * HIWORD(v436);
        v201[1] = 16 * v440;
        v201[2] = 16 * v444;
        v201[3] = 16 * v448;
        v201[4] = 16 * v452;
        v201[5] = 16 * v456;
        v201[6] = 16 * v460;
        uint64_t v194 = 36;
        v201[7] = 16 * v464;
        return v194;
      }
    }
    uint64_t v42 = v30 | 3;
    if (((*v29 >> v30) & 7) != 0)
    {
      uint64_t v43 = 0;
      int v44 = 0;
      int v45 = ((*v29 >> v30) & 7) + 3;
      int v46 = 3;
    }
    else
    {
      if ((unint64_t)(v42 - v30) <= 0x46)
      {
        uint64_t v43 = 0;
        char v47 = 0;
        uint64_t v48 = 0;
        unint64_t v49 = 2;
        do
        {
          unint64_t v50 = 64 - v42;
          if (64 - v42 >= v49) {
            unint64_t v50 = v49;
          }
          v47 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v50)) << v48;
          v48 += v50;
          unint64_t v51 = v50 + v42;
          v43 += v51 >> 6;
          uint64_t v42 = v51 & 0x3F;
          v49 -= v50;
        }
        while (v49);
      }
      else
      {
        char v47 = 0;
        uint64_t v43 = 0;
      }
      int v45 = v47 & 3;
      int v44 = 2;
      int v46 = 5;
    }
    unint64_t v52 = &kDQuadParamTable[10 * v45];
    LODWORD(v53) = v52[324] + 3;
    int v54 = v52[325];
    unsigned int v55 = v54 + 3;
    if (v53 >= 0xC) {
      uint64_t v53 = 12;
    }
    else {
      uint64_t v53 = v53;
    }
    if (v54) {
      unsigned int v56 = 12;
    }
    else {
      unsigned int v56 = 0;
    }
    if (v56 >= v55) {
      unint64_t v57 = v55;
    }
    else {
      unint64_t v57 = v56;
    }
    char v58 = 12 - v53;
    if (v45)
    {
      if (v53)
      {
        if ((unint64_t)(v53 - v30 + v42 + (v43 << 6)) <= 0x48)
        {
          int v59 = 0;
          uint64_t v63 = 0;
          unint64_t v64 = v53;
          do
          {
            unint64_t v65 = 64 - v42;
            if (64 - v42 >= v64) {
              unint64_t v65 = v64;
            }
            v59 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v65)) << v63;
            v63 += v65;
            unint64_t v66 = v65 + v42;
            v43 += v66 >> 6;
            uint64_t v42 = v66 & 0x3F;
            v64 -= v65;
          }
          while (v64);
        }
        else
        {
          int v59 = 0;
        }
        int v46 = v53 + v44 + 3;
      }
      else
      {
        int v59 = 0;
      }
      unsigned int v60 = v59 << v58;
      if (v57) {
        goto LABEL_59;
      }
    }
    else
    {
      unsigned int v60 = 0;
      if (v57)
      {
LABEL_59:
        if ((unint64_t)(v42 - v30 + (v43 << 6) + 3) <= 0x48)
        {
          int v61 = 0;
          uint64_t v67 = 0;
          unint64_t v68 = 3;
          do
          {
            unint64_t v69 = 64 - v42;
            if (64 - v42 >= v68) {
              unint64_t v69 = v68;
            }
            v61 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v69)) << v67;
            v67 += v69;
            unint64_t v70 = v69 + v42;
            v43 += v70 >> 6;
            uint64_t v42 = v70 & 0x3F;
            v68 -= v69;
          }
          while (v68);
        }
        else
        {
          int v61 = 0;
        }
        uint64_t v465 = 0;
        uint64_t v466 = 0;
        int v468 = 0;
        uint64_t v467 = 0;
        unsigned int v71 = 69 - v46;
        unsigned int v72 = (69 - v46) / 7u;
        unint64_t v73 = v57 - v30;
        unint64_t v74 = (v42 | (v43 << 6)) + v71 % 7;
        unint64_t v75 = v74 & 0x3F;
        if (v73 + v75 + (v74 & 0xFFFFFFFFFFFFFFC0) <= 0x48)
        {
          uint64_t v62 = 0;
          uint64_t v76 = 0;
          unint64_t v77 = v74 >> 6;
          unint64_t v78 = v57;
          do
          {
            unint64_t v79 = 64 - v75;
            if (64 - v75 >= v78) {
              unint64_t v79 = v78;
            }
            v62 |= ((unint64_t)((v29[v77] >> v75) & ~(-1 << v79)) << v76);
            v76 += v79;
            unint64_t v80 = v79 + v75;
            v77 += v80 >> 6;
            unint64_t v75 = v80 & 0x3F;
            v78 -= v79;
          }
          while (v78);
          LODWORD(v465) = v62;
          unint64_t v74 = v75 | (v77 << 6);
        }
        else
        {
          uint64_t v62 = 0;
        }
        uint64_t v81 = v72 - v57;
        unint64_t v82 = v74 + v81;
        uint64_t v83 = (v74 + v81) & 0x3F;
        if (v73 + v83 + (v82 & 0xFFFFFFFFFFFFFFC0) <= 0x48)
        {
          int v84 = 0;
          uint64_t v85 = 0;
          unint64_t v86 = v82 >> 6;
          unint64_t v87 = v57;
          do
          {
            unint64_t v88 = 64 - v83;
            if (64 - v83 >= v87) {
              unint64_t v88 = v87;
            }
            v84 |= (unint64_t)((v29[v86] >> v83) & ~(-1 << v88)) << v85;
            v85 += v88;
            unint64_t v89 = v88 + v83;
            v86 += v89 >> 6;
            uint64_t v83 = v89 & 0x3F;
            v87 -= v88;
          }
          while (v87);
          HIDWORD(v465) = v84;
          unint64_t v82 = v83 | (v86 << 6);
        }
        else
        {
          HIDWORD(v465) = 0;
        }
        unint64_t v90 = v82 + v81;
        uint64_t v91 = v90 & 0x3F;
        if (v73 + v91 + (v90 & 0xFFFFFFFFFFFFFFC0) <= 0x48)
        {
          int v92 = 0;
          uint64_t v93 = 0;
          unint64_t v94 = v90 >> 6;
          unint64_t v95 = v57;
          do
          {
            unint64_t v96 = 64 - v91;
            if (64 - v91 >= v95) {
              unint64_t v96 = v95;
            }
            v92 |= (unint64_t)((v29[v94] >> v91) & ~(-1 << v96)) << v93;
            v93 += v96;
            unint64_t v97 = v96 + v91;
            v94 += v97 >> 6;
            uint64_t v91 = v97 & 0x3F;
            v95 -= v96;
          }
          while (v95);
          LODWORD(v466) = v92;
          unint64_t v90 = v91 | (v94 << 6);
        }
        else
        {
          LODWORD(v466) = 0;
        }
        unint64_t v98 = v90 + v81;
        uint64_t v99 = v98 & 0x3F;
        if (v73 + v99 + (v98 & 0xFFFFFFFFFFFFFFC0) <= 0x48)
        {
          int v100 = 0;
          uint64_t v101 = 0;
          unint64_t v102 = v98 >> 6;
          unint64_t v103 = v57;
          do
          {
            unint64_t v104 = 64 - v99;
            if (64 - v99 >= v103) {
              unint64_t v104 = v103;
            }
            v100 |= (unint64_t)((v29[v102] >> v99) & ~(-1 << v104)) << v101;
            v101 += v104;
            unint64_t v105 = v104 + v99;
            v102 += v105 >> 6;
            uint64_t v99 = v105 & 0x3F;
            v103 -= v104;
          }
          while (v103);
          HIDWORD(v466) = v100;
          unint64_t v98 = v99 | (v102 << 6);
        }
        else
        {
          HIDWORD(v466) = 0;
        }
        unint64_t v106 = v98 + v81;
        uint64_t v107 = v106 & 0x3F;
        if (v73 + v107 + (v106 & 0xFFFFFFFFFFFFFFC0) <= 0x48)
        {
          int v108 = 0;
          uint64_t v109 = 0;
          unint64_t v110 = v106 >> 6;
          unint64_t v111 = v57;
          do
          {
            unint64_t v112 = 64 - v107;
            if (64 - v107 >= v111) {
              unint64_t v112 = v111;
            }
            v108 |= (unint64_t)((v29[v110] >> v107) & ~(-1 << v112)) << v109;
            v109 += v112;
            unint64_t v113 = v112 + v107;
            v110 += v113 >> 6;
            uint64_t v107 = v113 & 0x3F;
            v111 -= v112;
          }
          while (v111);
          LODWORD(v467) = v108;
          unint64_t v106 = v107 | (v110 << 6);
        }
        else
        {
          LODWORD(v467) = 0;
        }
        unint64_t v114 = v106 + v81;
        unint64_t v115 = v114 >> 6;
        uint64_t v116 = v114 & 0x3F;
        if (v73 + v116 + (v114 & 0xFFFFFFFFFFFFFFC0) <= 0x48)
        {
          int v117 = 0;
          uint64_t v118 = 0;
          unint64_t v119 = v57;
          do
          {
            unint64_t v120 = 64 - v116;
            if (64 - v116 >= v119) {
              unint64_t v120 = v119;
            }
            v117 |= (unint64_t)((v29[v115] >> v116) & ~(-1 << v120)) << v118;
            v118 += v120;
            unint64_t v121 = v120 + v116;
            v115 += v121 >> 6;
            uint64_t v116 = v121 & 0x3F;
            v119 -= v120;
          }
          while (v119);
        }
        else
        {
          int v117 = 0;
        }
        HIDWORD(v467) = v117;
        unint64_t v122 = (v116 | (v115 << 6)) + v81;
        uint64_t v123 = v122 & 0x3F;
        if (v73 + v123 + (v122 & 0xFFFFFFFFFFFFFFC0) <= 0x48)
        {
          int v124 = 0;
          uint64_t v125 = 0;
          unint64_t v126 = v122 >> 6;
          unint64_t v127 = v57;
          do
          {
            unint64_t v128 = 64 - v123;
            if (64 - v123 >= v127) {
              unint64_t v128 = v127;
            }
            v124 |= (unint64_t)((v29[v126] >> v123) & ~(-1 << v128)) << v125;
            v125 += v128;
            unint64_t v129 = v128 + v123;
            v126 += v129 >> 6;
            uint64_t v123 = v129 & 0x3F;
            v127 -= v128;
          }
          while (v127);
        }
        else
        {
          int v124 = 0;
        }
        int v468 = v124;
LABEL_113:
        unint64_t v130 = *(void *)&kDQuadParamTable[10 * v45 + 322];
        if (v130 >> v57 <= 1) {
          unint64_t v131 = 1;
        }
        else {
          unint64_t v131 = v130 >> v57;
        }
        unint64_t v132 = v131 >> 1;
        unint64_t v133 = (unint64_t)(1 << v58) >> 1;
        if (v131 >> 1 < v133) {
          unint64_t v133 = v131 >> 1;
        }
        unint64_t v134 = 2048 - v60;
        if (v60) {
          uint64_t v135 = v133;
        }
        else {
          uint64_t v135 = 0;
        }
        BOOL v136 = v60 == 2048;
        if (v60 >= 0xFFF) {
          __int16 v137 = 4095;
        }
        else {
          __int16 v137 = v60;
        }
        __int16 v138 = v137 ^ 0x800;
        if (v131 <= v134)
        {
          __int16 v139 = 2047;
        }
        else
        {
          __int16 v138 = 0;
          __int16 v139 = 0;
        }
        if (v10 == 1) {
          __int16 v140 = v138;
        }
        else {
          __int16 v140 = v137;
        }
        if (v10 == 1) {
          __int16 v17 = v139;
        }
        else {
          __int16 v17 = 4095;
        }
        if (!v57)
        {
          if (a5 == 4)
          {
            __int16 v18 = v17;
            LOWORD(v16) = v17;
            LOWORD(v15) = v17;
            LOWORD(v14) = v17;
            LOWORD(v13) = v17;
            LOWORD(v11) = v17;
            LOWORD(v12) = v17;
            a3 = v427;
            a4 = v426;
            if ((v60 & 0x7FC00000 | 0x80000000) != 0xFF800000)
            {
              __int16 v17 = v140;
              __int16 v18 = v140;
              LOWORD(v16) = v140;
              LOWORD(v15) = v140;
              LOWORD(v14) = v140;
              LOWORD(v13) = v140;
              LOWORD(v11) = v140;
              LOWORD(v12) = v140;
            }
          }
          else
          {
            __int16 v17 = v140;
            __int16 v18 = v140;
            LOWORD(v16) = v140;
            LOWORD(v15) = v140;
            LOWORD(v14) = v140;
            LOWORD(v13) = v140;
            LOWORD(v11) = v140;
            LOWORD(v12) = v140;
            a3 = v427;
            a4 = v426;
          }
          goto LABEL_5;
        }
        unint64_t v141 = v130 + v60;
        uint64_t v142 = ~(-1 << v57);
        unint64_t v143 = v134 / v131;
        if (!v61)
        {
          uint64_t v146 = 0;
          uint64_t v145 = v135;
          BOOL v144 = v60 == 2048;
          goto LABEL_148;
        }
        BOOL v144 = v143 == v62;
        if (v60 || v62)
        {
          if (v141 >= 0x1000 && v62 == v142)
          {
            uint64_t v146 = 1;
            uint64_t v145 = 4095;
            goto LABEL_148;
          }
          uint64_t v145 = v132 + v131 * v62;
        }
        else
        {
          uint64_t v145 = 0;
        }
        uint64_t v146 = 1;
LABEL_148:
        unint64_t v147 = v145 + v60;
        unint64_t v148 = v147;
        if (a5 == 4)
        {
          unint64_t v148 = 2139095039;
          if ((v147 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v148 = 4286578687;
            if ((v147 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v148 = v147;
            }
          }
        }
        if (v148 >= 0xFFF) {
          int v149 = 4095;
        }
        else {
          int v149 = v148;
        }
        if (v144) {
          int v150 = 0;
        }
        else {
          int v150 = v149 ^ 0x800;
        }
        if (v10 == 1) {
          int v12 = v150;
        }
        else {
          int v12 = v149;
        }
        int v428 = v12;
        if (v61 == 1)
        {
          uint64_t v151 = v135;
          BOOL v152 = v60 == 2048;
        }
        else
        {
          uint64_t v153 = *(unsigned int *)((unint64_t)&v465 | (4 * v146));
          BOOL v152 = v143 == v153;
          if (v60 | v153)
          {
            if (v141 >= 0x1000 && v153 == v142) {
              uint64_t v151 = 4095;
            }
            else {
              uint64_t v151 = v132 + v131 * v153;
            }
          }
          else
          {
            uint64_t v151 = 0;
          }
          ++v146;
        }
        unint64_t v154 = v151 + v60;
        unint64_t v155 = v154;
        if (a5 == 4)
        {
          unint64_t v155 = 2139095039;
          if ((v154 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v155 = 4286578687;
            if ((v154 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v155 = v154;
            }
          }
        }
        if (v155 >= 0xFFF) {
          int v156 = 4095;
        }
        else {
          int v156 = v155;
        }
        if (v152) {
          int v157 = 0;
        }
        else {
          int v157 = v156 ^ 0x800;
        }
        if (v10 == 1) {
          int v11 = v157;
        }
        else {
          int v11 = v156;
        }
        int v429 = v11;
        if (v61 == 2)
        {
          uint64_t v158 = v135;
          BOOL v159 = v60 == 2048;
        }
        else
        {
          uint64_t v160 = *((unsigned int *)&v465 + v146);
          BOOL v159 = v143 == v160;
          if (v60 | v160)
          {
            if (v141 >= 0x1000 && v160 == v142) {
              uint64_t v158 = 4095;
            }
            else {
              uint64_t v158 = v132 + v131 * v160;
            }
          }
          else
          {
            uint64_t v158 = 0;
          }
          ++v146;
        }
        unint64_t v161 = v158 + v60;
        unint64_t v162 = v161;
        if (a5 == 4)
        {
          unint64_t v162 = 2139095039;
          if ((v161 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v162 = 4286578687;
            if ((v161 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v162 = v161;
            }
          }
        }
        if (v162 >= 0xFFF) {
          int v163 = 4095;
        }
        else {
          int v163 = v162;
        }
        if (v159) {
          int v13 = 0;
        }
        else {
          int v13 = v163 ^ 0x800;
        }
        if (v10 != 1) {
          int v13 = v163;
        }
        int v430 = v13;
        if (v61 == 3)
        {
          uint64_t v164 = v135;
          BOOL v165 = v60 == 2048;
        }
        else
        {
          uint64_t v166 = *((unsigned int *)&v465 + v146);
          BOOL v165 = v143 == v166;
          if (v60 | v166)
          {
            if (v141 >= 0x1000 && v166 == v142) {
              uint64_t v164 = 4095;
            }
            else {
              uint64_t v164 = v132 + v131 * v166;
            }
          }
          else
          {
            uint64_t v164 = 0;
          }
          ++v146;
        }
        unint64_t v167 = v164 + v60;
        unint64_t v168 = v167;
        if (a5 == 4)
        {
          unint64_t v168 = 2139095039;
          if ((v167 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            if ((v167 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
              unint64_t v168 = 4286578687;
            }
            else {
              unint64_t v168 = v167;
            }
          }
        }
        if (v168 >= 0xFFF) {
          int v169 = 4095;
        }
        else {
          int v169 = v168;
        }
        if (v165) {
          int v170 = 0;
        }
        else {
          int v170 = v169 ^ 0x800;
        }
        if (v10 == 1) {
          int v14 = v170;
        }
        else {
          int v14 = v169;
        }
        int v431 = v14;
        if (v61 == 4)
        {
          uint64_t v171 = v135;
          BOOL v172 = v60 == 2048;
        }
        else
        {
          uint64_t v173 = *((unsigned int *)&v465 + v146);
          BOOL v172 = v143 == v173;
          if (v60 | v173)
          {
            if (v141 >= 0x1000 && v173 == v142) {
              uint64_t v171 = 4095;
            }
            else {
              uint64_t v171 = v132 + v131 * v173;
            }
          }
          else
          {
            uint64_t v171 = 0;
          }
          ++v146;
        }
        unint64_t v174 = v171 + v60;
        unint64_t v175 = v174;
        if (a5 == 4)
        {
          unint64_t v175 = 2139095039;
          if ((v174 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            if ((v174 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
              unint64_t v175 = 4286578687;
            }
            else {
              unint64_t v175 = v174;
            }
          }
        }
        if (v175 >= 0xFFF) {
          int v176 = 4095;
        }
        else {
          int v176 = v175;
        }
        if (v172) {
          int v177 = 0;
        }
        else {
          int v177 = v176 ^ 0x800;
        }
        if (v10 == 1) {
          int v15 = v177;
        }
        else {
          int v15 = v176;
        }
        int v432 = v15;
        unint64_t v425 = v141;
        if (v61 == 5)
        {
          uint64_t v178 = ~(-1 << v57);
          uint64_t v179 = v135;
          BOOL v180 = v60 == 2048;
        }
        else
        {
          uint64_t v181 = *((unsigned int *)&v465 + v146);
          BOOL v180 = v143 == v181;
          if (v60 | v181)
          {
            if (v141 >= 0x1000 && v181 == v142)
            {
              uint64_t v178 = ~(-1 << v57);
              uint64_t v179 = 4095;
            }
            else
            {
              uint64_t v178 = ~(-1 << v57);
              uint64_t v179 = v132 + v131 * v181;
            }
          }
          else
          {
            uint64_t v178 = ~(-1 << v57);
            uint64_t v179 = 0;
          }
          ++v146;
        }
        unint64_t v182 = v179 + v60;
        unint64_t v183 = v182;
        if (a5 == 4)
        {
          unint64_t v183 = 2139095039;
          if ((v182 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            if ((v182 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
              unint64_t v183 = 4286578687;
            }
            else {
              unint64_t v183 = v182;
            }
          }
        }
        if (v183 >= 0xFFF) {
          int v184 = 4095;
        }
        else {
          int v184 = v183;
        }
        if (v180) {
          int v185 = 0;
        }
        else {
          int v185 = v184 ^ 0x800;
        }
        if (v10 == 1) {
          int v16 = v185;
        }
        else {
          int v16 = v184;
        }
        int v433 = v16;
        if (v61 == 6)
        {
          uint64_t v186 = v135;
          BOOL v187 = v60 == 2048;
        }
        else
        {
          uint64_t v188 = *((unsigned int *)&v465 + v146);
          BOOL v187 = v143 == v188;
          if (v60 | v188)
          {
            if (v425 >= 0x1000 && v188 == v178) {
              uint64_t v186 = 4095;
            }
            else {
              uint64_t v186 = v132 + v131 * v188;
            }
          }
          else
          {
            uint64_t v186 = 0;
          }
          ++v146;
        }
        unint64_t v189 = v186 + v60;
        unint64_t v190 = v189;
        if (a5 == 4)
        {
          unint64_t v190 = 2139095039;
          if ((v189 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v190 = 4286578687;
            if ((v189 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v190 = v189;
            }
          }
        }
        if (v190 >= 0xFFF) {
          LOWORD(v190) = 4095;
        }
        if (v187) {
          __int16 v18 = 0;
        }
        else {
          __int16 v18 = v190 ^ 0x800;
        }
        if (v10 != 1) {
          __int16 v18 = v190;
        }
        if (v61 != 7)
        {
          uint64_t v191 = *((unsigned int *)&v465 + v146);
          BOOL v136 = v143 == v191;
          if (v60 | v191)
          {
            if (v425 >= 0x1000 && v191 == v178) {
              uint64_t v135 = 4095;
            }
            else {
              uint64_t v135 = v132 + v131 * v191;
            }
          }
          else
          {
            uint64_t v135 = 0;
          }
        }
        unint64_t v192 = v135 + v60;
        unint64_t v193 = v192;
        if (a5 == 4)
        {
          unint64_t v193 = 2139095039;
          if ((v192 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v193 = 4286578687;
            if ((v192 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v193 = v135 + v60;
            }
          }
        }
        if (v193 >= 0xFFF) {
          LOWORD(v193) = 4095;
        }
        __int16 v17 = v193 ^ 0x800;
        if (v136) {
          __int16 v17 = 0;
        }
        if (v10 != 1) {
          __int16 v17 = v193;
        }
        a3 = v427;
        a4 = v426;
        goto LABEL_5;
      }
    }
    int v61 = 0;
    uint64_t v62 = 0;
    uint64_t v465 = 0;
    uint64_t v466 = 0;
    int v468 = 0;
    uint64_t v467 = 0;
    goto LABEL_113;
  }
  switch(a4)
  {
    case 0x3Fu:
      int32x4_t v203 = *a3;
      int32x4_t v204 = a3[1];
      int32x4_t v205 = a3[2];
      int32x4_t v206 = a3[3];
      *(int32x4_t *)a1 = vuzp1q_s32(*a3, v205);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v203, v205);
      unint64_t v207 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v207 = vuzp1q_s32(v204, v206);
      *(int32x4_t *)((char *)v207 + a2) = vuzp2q_s32(v204, v206);
      return 64;
    case 0x2Fu:
      v208.i64[0] = 0xC000C000C000CLL;
      v208.i64[1] = 0xC000C000C000CLL;
      int8x16_t v209 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v208, v208));
      unint64_t v210 = vpaddq_s32((int32x4_t)v209, (int32x4_t)v209).u64[0];
      v211.i64[0] = v210;
      v211.i64[1] = HIDWORD(v210);
      int8x16_t v212 = (int8x16_t)v211;
      unint64_t v213 = vaddvq_s64(v211);
      int8x16_t v214 = 0uLL;
      int8x16_t v215 = 0uLL;
      int8x16_t v216 = 0uLL;
      int8x16_t v217 = 0uLL;
      if (v213 <= 0x80)
      {
        int32x4_t v218 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v219 = 8 * (a3 & 7);
        int64x2_t v220 = vzip1q_s64((int64x2_t)0, (int64x2_t)v212);
        unint64_t v221 = v213 + v219;
        int64x2_t v222 = vaddq_s64(v220, vdupq_n_s64(v219));
        int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v222)));
        if (v213 + v219 >= 0x81) {
          int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v218[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v222))), v215);
        }
        unint64_t v223 = v221 & 0x3F;
        uint64x2_t v224 = (int64x2_t *)((char *)v218 + 8 * (v221 >> 6));
        int64x2_t v225 = vaddq_s64(v220, vdupq_n_s64(v223));
        unint64_t v226 = v213 + v221;
        int8x16_t v216 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v224, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224->i64[0], 0), (uint64x2_t)vnegq_s64(v225)));
        if (v213 + v223 >= 0x81) {
          int8x16_t v216 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v224[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v225))), v216);
        }
        unint64_t v227 = v226 & 0x3F;
        unint64_t v228 = (int64x2_t *)((char *)v218 + 8 * (v226 >> 6));
        int64x2_t v229 = vaddq_s64(v220, vdupq_n_s64(v227));
        unint64_t v230 = v213 + v226;
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v228, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228->i64[0], 0), (uint64x2_t)vnegq_s64(v229)));
        if (v213 + v227 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v228[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v229))), v214);
        }
        int8x16_t v212 = (int8x16_t)vaddq_s64(v220, vdupq_n_s64(v230 & 0x3F));
        unint64_t v231 = (int64x2_t *)((char *)v218 + 8 * (v230 >> 6));
        int8x16_t v217 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v231, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v212)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v212)));
        if (v213 + (v230 & 0x3F) >= 0x81)
        {
          int8x16_t v212 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v212)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v231[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v212)));
          int8x16_t v217 = vorrq_s8(v212, v217);
        }
      }
      *(int32x2_t *)v212.i8 = vmovn_s64((int64x2_t)v214);
      int32x2_t v232 = vzip1_s32(*(int32x2_t *)v209.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v209, v209, 8uLL));
      v233.i64[0] = v232.u32[0];
      v233.i64[1] = v232.u32[1];
      uint64x2_t v234 = (uint64x2_t)vnegq_s64(v233);
      int64x2_t v235 = (int64x2_t)vshlq_u64((uint64x2_t)v214, v234);
      *(int32x2_t *)v235.i8 = vmovn_s64(v235);
      int16x8_t v236 = (int16x8_t)vzip1q_s32((int32x4_t)v212, (int32x4_t)v235);
      *(int16x4_t *)v212.i8 = vmovn_s32((int32x4_t)v236);
      *(int16x4_t *)v236.i8 = vshrn_n_s32((int32x4_t)v236, 0xCuLL);
      int8x16_t v237 = (int8x16_t)vzip1q_s16((int16x8_t)v212, v236);
      v238.i64[0] = 0x1000100010001;
      v238.i64[1] = 0x1000100010001;
      v239.i64[0] = -1;
      v239.i64[1] = -1;
      int8x16_t v240 = (int8x16_t)vaddq_s16(vshlq_n_s16(v238, 0xCuLL), v239);
      *(int32x2_t *)v239.i8 = vmovn_s64((int64x2_t)v216);
      int64x2_t v241 = (int64x2_t)vshlq_u64((uint64x2_t)v216, v234);
      *(int32x2_t *)v241.i8 = vmovn_s64(v241);
      int16x8_t v242 = (int16x8_t)vzip1q_s32((int32x4_t)v239, (int32x4_t)v241);
      *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v242);
      *(int16x4_t *)v242.i8 = vshrn_n_s32((int32x4_t)v242, 0xCuLL);
      int16x8_t v243 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v239, v242), v240);
      *(int32x2_t *)v239.i8 = vmovn_s64((int64x2_t)v215);
      int64x2_t v244 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v234);
      *(int32x2_t *)v244.i8 = vmovn_s64(v244);
      int16x8_t v245 = (int16x8_t)vzip1q_s32((int32x4_t)v239, (int32x4_t)v244);
      *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v245);
      *(int16x4_t *)v245.i8 = vshrn_n_s32((int32x4_t)v245, 0xCuLL);
      int64x2_t v246 = (int64x2_t)vshlq_u64((uint64x2_t)v217, v234);
      *(int32x2_t *)v217.i8 = vmovn_s64((int64x2_t)v217);
      *(int32x2_t *)v246.i8 = vmovn_s64(v246);
      int16x8_t v247 = (int16x8_t)vzip1q_s32((int32x4_t)v217, (int32x4_t)v246);
      *(int16x4_t *)v217.i8 = vmovn_s32((int32x4_t)v247);
      *(int16x4_t *)v247.i8 = vshrn_n_s32((int32x4_t)v247, 0xCuLL);
      int16x8_t v248 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v217, v247), v240);
      int32x4_t v249 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v239, v245), v240), 4uLL);
      int32x4_t v250 = (int32x4_t)vshlq_n_s16(v243, 4uLL);
      int32x4_t v251 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v237, v240), 4uLL);
      int32x4_t v252 = (int32x4_t)vshlq_n_s16(v248, 4uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v249, v251);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v249, v251);
      int16x8_t v253 = (int32x4_t *)(a1 + 2 * a2);
      *int16x8_t v253 = vuzp1q_s32(v250, v252);
      *(int32x4_t *)((char *)v253 + a2) = vuzp2q_s32(v250, v252);
      return 48;
    case 1u:
      int16x8_t v198 = vdupq_n_s16(16 * a3->u16[0]);
      *(int16x8_t *)a1 = v198;
      *(int16x8_t *)(a1 + a2) = v198;
      *(int16x8_t *)(a1 + 2 * a2) = v198;
      *(int16x8_t *)(a1 + 3 * a2) = v198;
      return 2;
    default:
      unint64_t v254 = 8 * (a3 & 7);
      unint64_t v255 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v256 = v254 + 18;
      uint64_t v257 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v254;
      if (v254 >= 0x2F) {
        v257 |= *(void *)(v255 + 8) << (-8 * (a3 & 7u));
      }
      unint64_t v258 = v254 + 288;
      int v259 = (a4 >> 6) | (4 * v257);
      uint16x8_t v260 = (uint16x8_t)vdupq_n_s16(v259 & 0xF);
      a9.i32[0] = v259 & 0xF;
      v261.i64[0] = 0x3000300030003;
      v261.i64[1] = 0x3000300030003;
      int8x16_t v262 = vbicq_s8((int8x16_t)vdupq_n_s16(((v257 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v261));
      int8x16_t v263 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a9, (int8x8_t)0x4000400040004), 0))));
      v264.i64[0] = 0x202020202020202;
      v264.i64[1] = 0x202020202020202;
      int8x16_t v265 = vandq_s8(v263, v264);
      if (vmaxvq_s8(v265) < 1)
      {
        int v275 = 0;
        v276.i64[0] = -1;
        v276.i64[1] = -1;
        int8x16_t v277 = v262;
        int8x16_t v278 = v262;
        int8x16_t v279 = v262;
        v280.i64[0] = -1;
        v280.i64[1] = -1;
        int8x16_t v281 = v262;
        v282.i64[0] = -1;
        v282.i64[1] = -1;
        v283.i64[0] = -1;
        v283.i64[1] = -1;
      }
      else
      {
        int8x16_t v266 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v265, v265));
        int8x16_t v267 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v266, (int16x8_t)v266));
        unint64_t v268 = vpaddq_s32((int32x4_t)v267, (int32x4_t)v267).u64[0];
        v269.i64[0] = v268;
        v269.i64[1] = HIDWORD(v268);
        int64x2_t v270 = v269;
        unint64_t v271 = vaddvq_s64(v269);
        unint64_t v272 = v271 + v256;
        if (v271 <= 0x80 && v258 >= v272)
        {
          unint64_t v284 = v256 & 0x3A;
          int64x2_t v285 = vaddq_s64(vzip1q_s64((int64x2_t)0, v270), vdupq_n_s64(v284));
          unint64_t v286 = (int64x2_t *)(v255 + ((v256 >> 3) & 8));
          int8x16_t v274 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v286, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v285)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v286->i64[0], 0), (uint64x2_t)vnegq_s64(v285)));
          if (v271 + v284 < 0x81)
          {
            int v275 = 0;
          }
          else
          {
            int v275 = 0;
            int8x16_t v274 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v286[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v285)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v286[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v285))), v274);
          }
          unint64_t v256 = v272;
        }
        else
        {
          int8x16_t v274 = 0uLL;
          int v275 = 1;
        }
        int32x2_t v287 = vzip1_s32(*(int32x2_t *)v267.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v267, v267, 8uLL));
        v288.i64[0] = v287.u32[0];
        v288.i64[1] = v287.u32[1];
        int64x2_t v289 = (int64x2_t)vshlq_u64((uint64x2_t)v274, (uint64x2_t)vnegq_s64(v288));
        *(int32x2_t *)v274.i8 = vmovn_s64((int64x2_t)v274);
        *(int32x2_t *)v289.i8 = vmovn_s64(v289);
        int8x16_t v290 = (int8x16_t)vzip1q_s32((int32x4_t)v274, (int32x4_t)v289);
        int16x8_t v291 = (int16x8_t)vshlq_u32((uint32x4_t)v290, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v266.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v266, v266, 8uLL)))));
        *(int16x4_t *)v290.i8 = vmovn_s32((int32x4_t)v290);
        *(int16x4_t *)v291.i8 = vmovn_s32((int32x4_t)v291);
        int8x16_t v292 = (int8x16_t)vzip1q_s16((int16x8_t)v290, v291);
        *(int8x8_t *)v292.i8 = vzip1_s8(vmovn_s16((int16x8_t)v292), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v292, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v265.i8, *(int8x8_t *)v260.i8))))));
        v290.i64[0] = 0x101010101010101;
        v290.i64[1] = 0x101010101010101;
        int8x16_t v293 = vshlq_s8(v290, v265);
        v290.i64[0] = -1;
        v290.i64[1] = -1;
        v293.i32[0] = vandq_s8(v292, vaddq_s8(v293, v290)).u32[0];
        int16x8_t v294 = vdupq_n_s16(v293.i8[0]);
        int16x8_t v295 = vdupq_n_s16(v293.i8[1]);
        int16x8_t v296 = vdupq_n_s16(v293.i8[2]);
        int16x8_t v297 = vdupq_n_s16(v293.i8[3]);
        int8x16_t v281 = (int8x16_t)vsubq_s16((int16x8_t)v262, v294);
        int8x16_t v279 = (int8x16_t)vsubq_s16((int16x8_t)v262, v295);
        int8x16_t v278 = (int8x16_t)vsubq_s16((int16x8_t)v262, v296);
        int8x16_t v277 = (int8x16_t)vsubq_s16((int16x8_t)v262, v297);
        int8x16_t v283 = (int8x16_t)vceqzq_s16(v294);
        int8x16_t v282 = (int8x16_t)vceqzq_s16(v295);
        int8x16_t v280 = (int8x16_t)vceqzq_s16(v296);
        int8x16_t v276 = (int8x16_t)vceqzq_s16(v297);
      }
      v298.i64[0] = 0x7000700070007;
      v298.i64[1] = 0x7000700070007;
      int8x16_t v299 = 0uLL;
      int8x16_t v300 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v260, v298), (int8x16_t)0, 0xEuLL), v262);
      int8x16_t v301 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v300, (int16x8_t)v300));
      unint64_t v302 = vpaddq_s32((int32x4_t)v301, (int32x4_t)v301).u64[0];
      v303.i64[0] = v302;
      v303.i64[1] = HIDWORD(v302);
      int64x2_t v304 = v303;
      unint64_t v305 = vaddvq_s64(v303);
      unint64_t v306 = v305 + v256;
      if (v305 <= 0x80 && v258 >= v306)
      {
        unint64_t v308 = v256 & 0x3F;
        int64x2_t v309 = vaddq_s64(vzip1q_s64((int64x2_t)0, v304), vdupq_n_s64(v308));
        uint16x8_t v310 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v299 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v310, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v309)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v310->i64[0], 0), (uint64x2_t)vnegq_s64(v309)));
        if (v305 + v308 >= 0x81) {
          int8x16_t v299 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v310[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v309)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v310[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v309))), v299);
        }
        unint64_t v256 = v306;
      }
      else
      {
        int v275 = 1;
      }
      int v311 = a4 >> 6;
      if (v311 == 2)
      {
        BOOL v312 = v258 >= v256 + 8;
        if (v258 >= v256 + 8) {
          v256 += 8;
        }
        unint64_t v313 = v256 + 8;
        if (!v312 || v258 < v313) {
          int v275 = 1;
        }
        if (v258 >= v313) {
          v256 += 8;
        }
      }
      int8x16_t v315 = 0uLL;
      int8x16_t v316 = vextq_s8((int8x16_t)0, v281, 0xEuLL);
      int8x16_t v317 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v316, (int16x8_t)v316));
      unint64_t v318 = vpaddq_s32((int32x4_t)v317, (int32x4_t)v317).u64[0];
      v319.i64[0] = v318;
      v319.i64[1] = HIDWORD(v318);
      int64x2_t v320 = v319;
      unint64_t v321 = vaddvq_s64(v319);
      unint64_t v322 = v321 + v256;
      if (v321 <= 0x80 && v258 >= v322)
      {
        unint64_t v325 = v256 & 0x3F;
        int64x2_t v326 = vaddq_s64(vzip1q_s64((int64x2_t)0, v320), vdupq_n_s64(v325));
        unint64_t v327 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v324 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v327, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327->i64[0], 0), (uint64x2_t)vnegq_s64(v326)));
        if (v321 + v325 >= 0x81) {
          int8x16_t v324 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v327[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v326))), v324);
        }
        unint64_t v256 = v322;
      }
      else
      {
        int v275 = 1;
        int8x16_t v324 = 0uLL;
      }
      int8x16_t v328 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v279, (int16x8_t)v279));
      unint64_t v329 = vpaddq_s32((int32x4_t)v328, (int32x4_t)v328).u64[0];
      v330.i64[0] = v329;
      v330.i64[1] = HIDWORD(v329);
      int64x2_t v331 = v330;
      unint64_t v332 = vaddvq_s64(v330);
      if (v332 < 0x81)
      {
        int32x2_t v333 = vzip1_s32(*(int32x2_t *)v328.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v328, v328, 8uLL));
        v334.i64[0] = v333.u32[0];
        v334.i64[1] = v333.u32[1];
        int64x2_t v335 = v334;
        int32x4_t v336 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v279.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v279, v279, 8uLL)));
        unint64_t v337 = v332 + v256;
        if (v258 >= v332 + v256)
        {
          unint64_t v338 = v256 & 0x3F;
          int64x2_t v339 = vaddq_s64(vzip1q_s64((int64x2_t)0, v331), vdupq_n_s64(v338));
          int64x2_t v340 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
          int8x16_t v315 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v340, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v339)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v340->i64[0], 0), (uint64x2_t)vnegq_s64(v339)));
          if (v332 + v338 >= 0x81) {
            int8x16_t v315 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v340[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v339)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v340[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v339))), v315);
          }
          unint64_t v256 = v337;
        }
        else
        {
          int v275 = 1;
        }
        int64x2_t v341 = (int64x2_t)vshlq_u64((uint64x2_t)v315, (uint64x2_t)vnegq_s64(v335));
        *(int32x2_t *)v315.i8 = vmovn_s64((int64x2_t)v315);
        *(int32x2_t *)v341.i8 = vmovn_s64(v341);
        int16x8_t v342 = (int16x8_t)vzip1q_s32((int32x4_t)v315, (int32x4_t)v341);
        int16x8_t v343 = (int16x8_t)vshlq_u32((uint32x4_t)v342, (uint32x4_t)vnegq_s32(v336));
        *(int16x4_t *)v342.i8 = vmovn_s32((int32x4_t)v342);
        *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
        int8x16_t v315 = (int8x16_t)vzip1q_s16(v342, v343);
      }
      else
      {
        int v275 = 1;
      }
      int8x16_t v344 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v278, (int16x8_t)v278));
      unint64_t v345 = vpaddq_s32((int32x4_t)v344, (int32x4_t)v344).u64[0];
      v346.i64[0] = v345;
      v346.i64[1] = HIDWORD(v345);
      int64x2_t v347 = v346;
      unint64_t v348 = vaddvq_s64(v346);
      int8x16_t v349 = 0uLL;
      if (v348 <= 0x80)
      {
        int32x2_t v351 = vzip1_s32(*(int32x2_t *)v344.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v344, v344, 8uLL));
        v352.i64[0] = v351.u32[0];
        v352.i64[1] = v351.u32[1];
        int64x2_t v353 = v352;
        int32x4_t v354 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v278.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL)));
        unint64_t v355 = v348 + v256;
        if (v258 >= v348 + v256)
        {
          unint64_t v357 = v256 & 0x3F;
          int64x2_t v358 = vaddq_s64(vzip1q_s64((int64x2_t)0, v347), vdupq_n_s64(v357));
          int8x16_t v359 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
          int8x16_t v356 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v359, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v358)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v359->i64[0], 0), (uint64x2_t)vnegq_s64(v358)));
          if (v348 + v357 >= 0x81) {
            int8x16_t v356 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v359[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v358)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v359[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v358))), v356);
          }
          unint64_t v256 = v355;
        }
        else
        {
          int8x16_t v356 = 0uLL;
          int v275 = 1;
        }
        int64x2_t v360 = (int64x2_t)vshlq_u64((uint64x2_t)v356, (uint64x2_t)vnegq_s64(v353));
        *(int32x2_t *)v356.i8 = vmovn_s64((int64x2_t)v356);
        *(int32x2_t *)v360.i8 = vmovn_s64(v360);
        int16x8_t v361 = (int16x8_t)vzip1q_s32((int32x4_t)v356, (int32x4_t)v360);
        int16x8_t v362 = (int16x8_t)vshlq_u32((uint32x4_t)v361, (uint32x4_t)vnegq_s32(v354));
        *(int16x4_t *)v361.i8 = vmovn_s32((int32x4_t)v361);
        *(int16x4_t *)v362.i8 = vmovn_s32((int32x4_t)v362);
        int16x8_t v350 = vzip1q_s16(v361, v362);
      }
      else
      {
        int v275 = 1;
        int16x8_t v350 = 0uLL;
      }
      int8x16_t v363 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v277, (int16x8_t)v277));
      unint64_t v364 = vpaddq_s32((int32x4_t)v363, (int32x4_t)v363).u64[0];
      v365.i64[0] = v364;
      v365.i64[1] = HIDWORD(v364);
      int64x2_t v366 = v365;
      unint64_t v367 = vaddvq_s64(v365);
      if (v367 > 0x80) {
        goto LABEL_395;
      }
      if (v258 >= v367 + v256)
      {
        int64x2_t v368 = vaddq_s64(vzip1q_s64((int64x2_t)0, v366), vdupq_n_s64(v256 & 0x3F));
        int8x16_t v369 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v349 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v369, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v368)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v369->i64[0], 0), (uint64x2_t)vnegq_s64(v368)));
        if (v367 + (v256 & 0x3F) >= 0x81) {
          int8x16_t v349 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v369[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v368)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v369[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v368))), v349);
        }
        v256 += v367;
      }
      else
      {
        int v275 = 1;
      }
      if (v275 || (uint64_t v194 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v194) - v256 >= 9) || v311 == 2)
      {
LABEL_395:
        uint64_t v194 = 0;
        v436 |= 4095 << ((8 * &v436) & 0x30);
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        int16x8_t v370 = (void *)(a1 + a2);
        int16x8_t v371 = (void *)(a1 + 2 * a2);
        *int16x8_t v370 = 0;
        v370[1] = 0;
        uint16x8_t v197 = (void *)(a1 + a2 + 2 * a2);
        *int16x8_t v371 = 0;
        v371[1] = 0;
        goto LABEL_312;
      }
      int32x2_t v372 = vzip1_s32(*(int32x2_t *)v301.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v301, v301, 8uLL));
      int32x2_t v373 = vzip1_s32(*(int32x2_t *)v317.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v317, v317, 8uLL));
      v374.i64[0] = v372.u32[0];
      v374.i64[1] = v372.u32[1];
      int64x2_t v375 = v374;
      v374.i64[0] = v373.u32[0];
      v374.i64[1] = v373.u32[1];
      int64x2_t v376 = (int64x2_t)vshlq_u64((uint64x2_t)v299, (uint64x2_t)vnegq_s64(v375));
      int64x2_t v377 = (int64x2_t)vshlq_u64((uint64x2_t)v324, (uint64x2_t)vnegq_s64(v374));
      *(int32x2_t *)v299.i8 = vmovn_s64((int64x2_t)v299);
      *(int32x2_t *)v376.i8 = vmovn_s64(v376);
      *(int32x2_t *)v324.i8 = vmovn_s64((int64x2_t)v324);
      *(int32x2_t *)v377.i8 = vmovn_s64(v377);
      int16x8_t v378 = (int16x8_t)vzip1q_s32((int32x4_t)v299, (int32x4_t)v376);
      int16x8_t v379 = (int16x8_t)vzip1q_s32((int32x4_t)v324, (int32x4_t)v377);
      int16x8_t v380 = (int16x8_t)vshlq_u32((uint32x4_t)v378, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v300.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v300, v300, 8uLL)))));
      int16x8_t v381 = (int16x8_t)vshlq_u32((uint32x4_t)v379, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v316.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v316, v316, 8uLL)))));
      *(int16x4_t *)v378.i8 = vmovn_s32((int32x4_t)v378);
      *(int16x4_t *)v380.i8 = vmovn_s32((int32x4_t)v380);
      *(int16x4_t *)v379.i8 = vmovn_s32((int32x4_t)v379);
      *(int16x4_t *)v381.i8 = vmovn_s32((int32x4_t)v381);
      v382.i64[0] = 0x10001000100010;
      v382.i64[1] = 0x10001000100010;
      v383.i64[0] = 0x10001000100010;
      v383.i64[1] = 0x10001000100010;
      int16x8_t v384 = vzip1q_s16(v378, v380);
      v380.i64[0] = 0xF000F000F000FLL;
      v380.i64[1] = 0xF000F000F000FLL;
      int16x8_t v385 = vsubq_s16(v382, (int16x8_t)v300);
      int16x8_t v386 = vzip1q_s16(v379, v381);
      v381.i64[0] = 0xF000F000F000FLL;
      v381.i64[1] = 0xF000F000F000FLL;
      int32x2_t v387 = vzip1_s32(*(int32x2_t *)v363.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v363, v363, 8uLL));
      v388.i64[0] = 0xF000F000F000FLL;
      v388.i64[1] = 0xF000F000F000FLL;
      v389.i64[0] = 0x10001000100010;
      v389.i64[1] = 0x10001000100010;
      int16x8_t v390 = vaddq_s16((int16x8_t)v300, v380);
      int16x8_t v391 = vaddq_s16((int16x8_t)v316, v381);
      int16x8_t v392 = vshlq_s16(v386, vsubq_s16(v383, (int16x8_t)v316));
      int16x8_t v393 = vshlq_s16((int16x8_t)v315, vsubq_s16(v383, (int16x8_t)v279));
      int16x8_t v394 = vshlq_s16(v350, vsubq_s16(v383, (int16x8_t)v278));
      v374.i64[0] = v387.u32[0];
      v374.i64[1] = v387.u32[1];
      int32x4_t v395 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v277.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v277, v277, 8uLL)));
      int16x8_t v396 = vaddq_s16((int16x8_t)v277, v388);
      int16x8_t v397 = vsubq_s16(v389, (int16x8_t)v277);
      int16x8_t v398 = vdupq_n_s16((v257 >> 6) & 0xFFF);
      int8x16_t v399 = (int8x16_t)vshlq_s16(vshlq_s16(v384, v385), v390);
      int16x8_t v400 = vshlq_s16(v392, v391);
      int64x2_t v401 = (int64x2_t)vshlq_u64((uint64x2_t)v349, (uint64x2_t)vnegq_s64(v374));
      *(int32x2_t *)v392.i8 = vmovn_s64((int64x2_t)v349);
      *(int32x2_t *)v401.i8 = vmovn_s64(v401);
      int16x8_t v402 = (int16x8_t)vzip1q_s32((int32x4_t)v392, (int32x4_t)v401);
      int16x8_t v403 = (int16x8_t)vshlq_u32((uint32x4_t)v402, (uint32x4_t)vnegq_s32(v395));
      *(int16x4_t *)v402.i8 = vmovn_s32((int32x4_t)v402);
      *(int16x4_t *)v403.i8 = vmovn_s32((int32x4_t)v403);
      int16x8_t v404 = vaddq_s16((int16x8_t)vandq_s8(v399, v283), v400);
      int8x16_t v405 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v399.i8, 0);
      int8x16_t v406 = (int8x16_t)vsubq_s16(v404, (int16x8_t)vandq_s8(v405, v283));
      int8x16_t v407 = (int8x16_t)vsubq_s16(vshlq_s16(v393, vaddq_s16((int16x8_t)v279, v381)), (int16x8_t)vandq_s8(v405, v282));
      int8x16_t v408 = (int8x16_t)vsubq_s16(vshlq_s16(v394, vaddq_s16((int16x8_t)v278, v381)), (int16x8_t)vandq_s8(v405, v280));
      int8x16_t v409 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v402, v403), v397), v396), (int16x8_t)vandq_s8(v405, v276));
      v410.i64[0] = 0x1000100010001;
      v410.i64[1] = 0x1000100010001;
      if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v410)))
      {
        int8x16_t v411 = v406;
        v411.i16[0] = v406.i16[7];
        v411.i16[7] = v406.i16[0];
        int8x16_t v412 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
        int8x16_t v413 = vbslq_s8(v412, v411, v406);
        int8x16_t v414 = (int8x16_t)vaddq_s16((int16x8_t)v413, (int16x8_t)vandq_s8(vqtbl1q_s8(v413, (int8x16_t)xmmword_242EA7480), v412));
        int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)v414, (int16x8_t)vandq_s8(vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA7490), v412));
        int8x16_t v415 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA74A0), v412), (int16x8_t)v407);
        int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v415, (int8x16_t)xmmword_242EA74B0), v412), (int16x8_t)v415);
        int8x16_t v416 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA74C0), v412), (int16x8_t)v408);
        int8x16_t v408 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v416, (int8x16_t)xmmword_242EA74D0), v412), (int16x8_t)v416);
        int8x16_t v417 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA74E0), v412), (int16x8_t)v409);
        int8x16_t v409 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v417, (int8x16_t)xmmword_242EA74F0), v412), (int16x8_t)v417);
      }
      int32x4_t v418 = (int32x4_t)vshlq_n_s16(vaddq_s16(v398, (int16x8_t)v406), 4uLL);
      int32x4_t v419 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v407, v398), 4uLL);
      int32x4_t v420 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v408, v398), 4uLL);
      int32x4_t v421 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v409, v398), 4uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v418, v420);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v418, v420);
      int v422 = (int32x4_t *)(a1 + 2 * a2);
      *int v422 = vuzp1q_s32(v419, v421);
      *(int32x4_t *)((char *)v422 + a2) = vuzp2q_s32(v419, v421);
      break;
  }
  return v194;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressSubblock(unint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, int16x4_t a15)
{
  int32x4_t v17 = *(int32x4_t *)((char *)a3 + a4);
  __int16 v18 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v19 = *(int32x4_t *)((char *)v18 + a4);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v17), 4uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip1q_s32(*v18, v19), 4uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v17), 4uLL);
  int8x16_t v23 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v20.i8, 0);
  int16x8_t v24 = vshrq_n_s16((int16x8_t)vzip2q_s32(*v18, v19), 4uLL);
  int16x8_t v25 = vshlq_n_s16(vsubq_s16(v21, (int16x8_t)v23), 4uLL);
  int16x8_t v26 = vshlq_n_s16(vsubq_s16(v24, (int16x8_t)v23), 4uLL);
  v27.i64[0] = 0x3000300030003;
  v27.i64[1] = 0x3000300030003;
  int8x16_t v28 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, (int16x8_t)v23), 4uLL), v27);
  int8x16_t v29 = (int8x16_t)vshlq_s16(v25, v27);
  int16x8_t v30 = vshlq_s16(vshlq_n_s16(vsubq_s16(v22, (int16x8_t)v23), 4uLL), v27);
  int16x8_t v31 = vshlq_s16(v26, v27);
  v25.i16[0] = vmaxvq_s16((int16x8_t)v28);
  v26.i16[0] = vminvq_s16((int16x8_t)v28);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
  int16x8_t v33 = vdupq_lane_s16(*(int16x4_t *)v26.i8, 0);
  v27.i64[0] = 0x8000800080008000;
  v27.i64[1] = 0x8000800080008000;
  int16x8_t v34 = vmaxq_s16(v32, v27);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  int16x8_t v36 = vminq_s16(v33, v35);
  int16x8_t v37 = vzip1q_s16(v32, v33);
  int8x16_t v38 = (int8x16_t)vceqzq_s16(v37);
  v39.i64[0] = 0x10001000100010;
  v39.i64[1] = 0x10001000100010;
  int16x8_t v40 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v37)), v38);
  v38.i16[0] = vmaxvq_s16((int16x8_t)v29);
  a15.i16[0] = vminvq_s16((int16x8_t)v29);
  int16x8_t v41 = vdupq_lane_s16(*(int16x4_t *)v38.i8, 0);
  int16x8_t v42 = vdupq_lane_s16(a15, 0);
  int16x8_t v43 = vpmaxq_s16(v40, v40);
  int16x8_t v44 = vmaxq_s16(v34, v41);
  int16x8_t v45 = vminq_s16(v36, v42);
  int16x8_t v46 = vzip1q_s16(v41, v42);
  int16x8_t v47 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v46)), (int8x16_t)vceqzq_s16(v46));
  int16x8_t v48 = vpmaxq_s16(v47, v47);
  v47.i16[0] = vmaxvq_s16(v30);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v47.i8, 0);
  v42.i16[0] = vminvq_s16(v30);
  int16x8_t v50 = vdupq_lane_s16(*(int16x4_t *)v42.i8, 0);
  int16x8_t v51 = vmaxq_s16(v44, v49);
  int16x8_t v52 = vminq_s16(v45, v50);
  int16x8_t v53 = vzip1q_s16(v49, v50);
  int16x8_t v54 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v53)), (int8x16_t)vceqzq_s16(v53));
  int16x8_t v55 = vpmaxq_s16(v54, v54);
  v54.i16[0] = vmaxvq_s16(v31);
  v16.i16[0] = vminvq_s16(v31);
  int16x8_t v56 = vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
  int16x8_t v57 = vdupq_lane_s16(v16, 0);
  int16x8_t v58 = vmaxq_s16(v51, v56);
  int16x8_t v59 = vminq_s16(v52, v57);
  int16x8_t v60 = vzip1q_s16(v56, v57);
  int16x8_t v61 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v60)), (int8x16_t)vceqzq_s16(v60));
  int16x8_t v62 = vpmaxq_s16(v61, v61);
  int8x16_t v63 = (int8x16_t)vmaxq_s16(vmaxq_s16(v43, v48), vmaxq_s16(v55, v62));
  int16x8_t v64 = vclzq_s16(vsubq_s16(v58, v59));
  int8x16_t v65 = (int8x16_t)vsubq_s16(v39, v64);
  int8x16_t v66 = (int8x16_t)vcgtq_s16((int16x8_t)v63, (int16x8_t)v65);
  int8x16_t v67 = vbslq_s8(v66, v65, v63);
  if (vmaxvq_s16((int16x8_t)v67))
  {
    v68.i64[0] = 0x4000400040004;
    v68.i64[1] = 0x4000400040004;
    v69.i64[0] = -1;
    v69.i64[1] = -1;
    v70.i64[0] = 0xF000F000F000FLL;
    v70.i64[1] = 0xF000F000F000FLL;
    int8x16_t v71 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v69, vsubq_s16(v70, v64)), v59), v66);
    v72.i64[0] = 0x8000800080008;
    v72.i64[1] = 0x8000800080008;
    v70.i64[0] = 0x3000300030003;
    v70.i64[1] = 0x3000300030003;
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v43), v70), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v48), v70), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v55), v70), (int16x8_t)0);
    int16x8_t v76 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v62), v70), (int16x8_t)0);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v67, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v67, v74);
    int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v67, v75);
    int8x16_t v80 = (int8x16_t)vsubq_s16((int16x8_t)v67, v76);
    int8x16_t v81 = vbicq_s8(v68, (int8x16_t)vceqq_s16(vaddq_s16(v76, v75), vnegq_s16(vaddq_s16(v73, v74))));
    int8x16_t v82 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v67), (int8x16_t)v70), vandq_s8(v66, v72)), v81);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v290 = (int8x16_t)v30;
      int8x16_t v291 = (int8x16_t)v31;
      int16x8_t v83 = vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7520));
      int8x16_t v84 = (int8x16_t)v21;
      v84.i16[7] = v20.i16[7];
      int16x8_t v85 = vsubq_s16(v21, (int16x8_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_242EA7530));
      int8x16_t v86 = (int8x16_t)v22;
      v86.i16[7] = v20.i16[7];
      int16x8_t v87 = vsubq_s16(v22, (int16x8_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7540));
      int8x16_t v88 = (int8x16_t)v24;
      v88.i16[7] = v20.i16[7];
      int16x8_t v89 = v83;
      v89.i16[0] = v83.i16[7];
      int16x8_t v90 = vsubq_s16(v24, (int16x8_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7550));
      v89.i16[7] = v83.i16[0];
      int16x8_t v91 = vshlq_n_s16(v89, 4uLL);
      v88.i64[0] = 0x4000400040004;
      v88.i64[1] = 0x4000400040004;
      int16x8_t v92 = vshlq_n_s16(v87, 4uLL);
      int16x8_t v93 = vshlq_n_s16(v90, 4uLL);
      v94.i64[0] = 0x3000300030003;
      v94.i64[1] = 0x3000300030003;
      int8x16_t v95 = (int8x16_t)vshlq_s16(v91, v94);
      int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(v85, 4uLL), v94);
      int8x16_t v97 = (int8x16_t)vshlq_s16(v92, v94);
      v91.i16[0] = vmaxvq_s16((int16x8_t)v95);
      v92.i16[0] = vminvq_s16((int16x8_t)v95);
      int16x8_t v98 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v99 = vdupq_lane_s16(*(int16x4_t *)v92.i8, 0);
      int8x16_t v100 = (int8x16_t)vshlq_s16(v93, v94);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v101 = vmaxq_s16(v98, v93);
      v94.i64[0] = 0x8000800080008000;
      v94.i64[1] = 0x8000800080008000;
      int16x8_t v102 = vminq_s16(v99, v94);
      int16x8_t v103 = vzip1q_s16(v98, v99);
      int8x16_t v104 = (int8x16_t)vceqzq_s16(v103);
      v105.i64[0] = 0x10001000100010;
      v105.i64[1] = 0x10001000100010;
      int16x8_t v106 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v103)), v104);
      v104.i16[0] = vmaxvq_s16((int16x8_t)v96);
      v15.i16[0] = vminvq_s16((int16x8_t)v96);
      int16x8_t v107 = vdupq_lane_s16(*(int16x4_t *)v104.i8, 0);
      int16x8_t v108 = vdupq_lane_s16(v15, 0);
      int16x8_t v109 = vpmaxq_s16(v106, v106);
      int16x8_t v110 = vmaxq_s16(v101, v107);
      int16x8_t v111 = vminq_s16(v102, v108);
      int16x8_t v112 = vzip1q_s16(v107, v108);
      int8x16_t v113 = (int8x16_t)vceqzq_s16(v112);
      int16x8_t v114 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v112)), v113);
      int16x8_t v115 = vpmaxq_s16(v114, v114);
      v114.i16[0] = vmaxvq_s16((int16x8_t)v97);
      int16x8_t v116 = vdupq_lane_s16(*(int16x4_t *)v114.i8, 0);
      v113.i16[0] = vminvq_s16((int16x8_t)v97);
      int16x8_t v117 = vdupq_lane_s16(*(int16x4_t *)v113.i8, 0);
      int16x8_t v118 = vmaxq_s16(v110, v116);
      int16x8_t v119 = vminq_s16(v111, v117);
      int16x8_t v120 = vzip1q_s16(v116, v117);
      int8x16_t v121 = (int8x16_t)vceqzq_s16(v120);
      int16x8_t v122 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v120)), v121);
      int16x8_t v123 = vpmaxq_s16(v122, v122);
      v122.i16[0] = vmaxvq_s16((int16x8_t)v100);
      v121.i16[0] = vminvq_s16((int16x8_t)v100);
      int16x8_t v124 = vdupq_lane_s16(*(int16x4_t *)v122.i8, 0);
      int16x8_t v125 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      int16x8_t v126 = vmaxq_s16(v118, v124);
      int16x8_t v127 = vminq_s16(v119, v125);
      int16x8_t v128 = vzip1q_s16(v124, v125);
      int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
      int16x8_t v130 = vpmaxq_s16(v129, v129);
      int8x16_t v131 = (int8x16_t)vmaxq_s16(vmaxq_s16(v109, v115), vmaxq_s16(v123, v130));
      int16x8_t v132 = vclzq_s16(vsubq_s16(v126, v127));
      int8x16_t v133 = (int8x16_t)vsubq_s16(v105, v132);
      int8x16_t v134 = (int8x16_t)vcgtq_s16((int16x8_t)v131, (int16x8_t)v133);
      int8x16_t v135 = vbslq_s8(v134, v133, v131);
      int16x8_t v136 = vsubq_s16((int16x8_t)v135, v109);
      v109.i64[0] = 0x3000300030003;
      v109.i64[1] = 0x3000300030003;
      int16x8_t v137 = vmaxq_s16(vminq_s16(v136, v109), (int16x8_t)0);
      int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v115), v109), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v123), v109), (int16x8_t)0);
      int16x8_t v140 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v130), v109), (int16x8_t)0);
      int8x16_t v141 = (int8x16_t)vsubq_s16((int16x8_t)v135, v137);
      int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v135, v138);
      int8x16_t v143 = (int8x16_t)vsubq_s16((int16x8_t)v135, v139);
      int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v135, v140);
      int8x16_t v145 = vbicq_s8(v88, (int8x16_t)vceqq_s16(vaddq_s16(v140, v139), vnegq_s16(vaddq_s16(v137, v138))));
      v139.i64[0] = 0x7000700070007;
      v139.i64[1] = 0x7000700070007;
      int16x8_t v146 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v65, v66), vaddq_s16((int16x8_t)v81, (int16x8_t)v81)), (int16x8_t)v77, v139), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v79, (int16x8_t)v78), (int16x8_t)v80), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v133, v134), vaddq_s16((int16x8_t)v145, (int16x8_t)v145)), (int16x8_t)v141, v139), vshlq_n_s16(
                                            vaddq_s16(vaddq_s16((int16x8_t)v143, (int16x8_t)v142), (int16x8_t)v144),
                                            3uLL))),
               0);
      if (vaddvq_s16(v146))
      {
        v147.i64[0] = 0x2000200020002;
        v147.i64[1] = 0x2000200020002;
        int8x16_t v148 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v135), v147);
        v147.i64[0] = 0x9000900090009;
        v147.i64[1] = 0x9000900090009;
        v149.i64[0] = -1;
        v149.i64[1] = -1;
        int8x16_t v150 = vorrq_s8(vorrq_s8(v148, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v134, v147), (int16x8_t)vmvnq_s8(v134))), v145);
        v147.i64[0] = 0xF000F000F000FLL;
        v147.i64[1] = 0xF000F000F000FLL;
        int8x16_t v151 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v149, vsubq_s16((int16x8_t)v147, v132)), v127), v134);
        int8x16_t v152 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v146, 0xFuLL));
        v23.i16[0] = vbslq_s8(v152, vextq_s8(v20, v20, 0xEuLL), v23).u16[0];
        int8x16_t v28 = vbslq_s8(v152, v95, v28);
        int8x16_t v29 = vbslq_s8(v152, v96, v29);
        int16x8_t v30 = (int16x8_t)vbslq_s8(v152, v97, v290);
        int16x8_t v31 = (int16x8_t)vbslq_s8(v152, v100, v291);
        int8x16_t v77 = vbslq_s8(v152, v141, v77);
        int8x16_t v78 = vbslq_s8(v152, v142, v78);
        int8x16_t v79 = vbslq_s8(v152, v143, v79);
        int8x16_t v80 = vbslq_s8(v152, v144, v80);
        int8x16_t v71 = vbslq_s8(v152, v151, v71);
        int8x16_t v67 = vbslq_s8(v152, v135, v67);
        int8x16_t v82 = vbslq_s8(v152, v150, v82);
      }
      else
      {
        int16x8_t v30 = (int16x8_t)v290;
        int16x8_t v31 = (int16x8_t)v291;
      }
    }
    v154.i64[0] = 0x8000800080008;
    v154.i64[1] = 0x8000800080008;
    int16x8_t v155 = (int16x8_t)vandq_s8(v82, v154);
    v156.i64[0] = 0x3000300030003;
    v156.i64[1] = 0x3000300030003;
    v157.i64[0] = 0x2000200020002;
    v157.i64[1] = 0x2000200020002;
    int8x16_t v158 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v156), v157);
    v157.i64[0] = 0x10001000100010;
    v157.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(vbicq_s8(v67, (int8x16_t)vceqzq_s16(v155)).u16[0]
                                    + ((2 * v82.i16[0]) & 8)
                                    + vandq_s8(v158, (int8x16_t)v157).u16[0]
                                    - v77.i16[0]
                                    + 8 * v77.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v79, vaddq_s16((int16x8_t)v78, (int16x8_t)v80)).u16[0])
                          - 239) <= 0xFFFFFFFFFFFFFEF7)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (uint16x8_t *)a3, a4, a5, a6, a7);
      return 32;
    }
    else
    {
      BOOL v159 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v160 = 8 * (a1 & 7);
      if (v160) {
        uint64_t v161 = *v159 & ~(-1 << v160);
      }
      else {
        uint64_t v161 = 0;
      }
      if (v67.i16[0]) {
        uint64_t v162 = (16 * v67.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v162 = 0;
      }
      *a2 = v82.i8[0] << 6;
      unint64_t v163 = (v162 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v23.i16[0] & 0xFFF) << 8) | v82.i8[0] & 0xF) >> 2;
      unint64_t v164 = (v163 << v160) | v161;
      if (v160 >= 0x2E)
      {
        *BOOL v159 = v164;
        unint64_t v164 = v163 >> (-8 * (a1 & 7u));
      }
      int8x16_t v165 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v77);
      int8x16_t v166 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v78);
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v79);
      int8x16_t v168 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v80);
      *(uint8x8_t *)v165.i8 = vqmovn_u16((uint16x8_t)v165);
      *(uint8x8_t *)v166.i8 = vqmovn_u16((uint16x8_t)v166);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      *(uint8x8_t *)v168.i8 = vqmovn_u16((uint16x8_t)v168);
      v165.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v165, v166), (int16x8_t)vzip1q_s8(v167, v168)).u32[0];
      unint64_t v169 = v160 + 18;
      v167.i64[0] = 0x202020202020202;
      v167.i64[1] = 0x202020202020202;
      int8x16_t v170 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v82.i8, (int8x8_t)0x4000400040004)))), v167);
      v167.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v167.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      uint8x16_t v172 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v171, (uint8x16_t)vorrq_s8(v170, v167)), (int8x16_t)v165.u32[0]);
      int16x8_t v173 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v170.i8);
      uint16x8_t v174 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v172.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v173)), (int16x8_t)vmovl_high_u8(v172));
      uint16x8_t v175 = (uint16x8_t)vpaddq_s16(v173, (int16x8_t)vmovl_high_u8((uint8x16_t)v170));
      int32x4_t v176 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v175.i8);
      int32x4_t v177 = (int32x4_t)vmovl_high_u16(v175);
      int32x4_t v178 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v174.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v176)), (int32x4_t)vshlq_u32(vmovl_high_u16(v174), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v177)));
      int32x4_t v179 = vpaddq_s32(v176, v177);
      v180.i64[0] = v178.u32[0];
      v180.i64[1] = v178.u32[1];
      uint64x2_t v181 = (uint64x2_t)v180;
      v180.i64[0] = v178.u32[2];
      v180.i64[1] = v178.u32[3];
      uint64x2_t v182 = (uint64x2_t)v180;
      v180.i64[0] = v179.u32[0];
      v180.i64[1] = v179.u32[1];
      int64x2_t v183 = v180;
      v180.i64[0] = v179.u32[2];
      v180.i64[1] = v179.u32[3];
      int64x2_t v184 = vpaddq_s64((int64x2_t)vshlq_u64(v181, (uint64x2_t)vzip1q_s64((int64x2_t)0, v183)), (int64x2_t)vshlq_u64(v182, (uint64x2_t)vzip1q_s64((int64x2_t)0, v180)));
      int64x2_t v185 = vpaddq_s64(v183, v180);
      uint64_t v186 = (v160 + 18) & 0x3A;
      unint64_t v187 = (v184.i64[0] << v186) | v164;
      if ((unint64_t)(v185.i64[0] + v186) >= 0x40)
      {
        *(void *)((char *)v159 + ((v169 >> 3) & 8)) = v187;
        unint64_t v187 = (unint64_t)v184.i64[0] >> -(char)v186;
      }
      int8x16_t v188 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v77);
      unint64_t v189 = v185.i64[0] + v169;
      uint64_t v190 = (v185.i64[0] + v169) & 0x3F;
      unint64_t v191 = v187 | (v184.i64[1] << (v185.i8[0] + v169));
      if ((unint64_t)(v190 + v185.i64[1]) >= 0x40)
      {
        *(void *)((char *)v159 + ((v189 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v191;
        unint64_t v191 = (unint64_t)v184.i64[1] >> -(char)v190;
        if (!v190) {
          unint64_t v191 = 0;
        }
      }
      int16x8_t v192 = (int16x8_t)vandq_s8(v71, v188);
      unint64_t v193 = v189 + v185.i64[1];
      v194.i64[0] = -1;
      v194.i64[1] = -1;
      int16x8_t v195 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v155, v155), (int8x16_t)0, 0xEuLL), v67);
      v196.i64[0] = 0xF000F000F000FLL;
      v196.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v197 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v194, (uint16x8_t)vaddq_s16(v195, v196)), v71);
      int32x4_t v198 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v195.i8);
      int32x4_t v199 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v197.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v198)), (int32x4_t)vmovl_high_u16(v197));
      int32x4_t v200 = vpaddq_s32(v198, (int32x4_t)vmovl_high_u16((uint16x8_t)v195));
      v201.i64[0] = v199.u32[0];
      v201.i64[1] = v199.u32[1];
      uint64x2_t v202 = (uint64x2_t)v201;
      v201.i64[0] = v199.u32[2];
      v201.i64[1] = v199.u32[3];
      uint64x2_t v203 = (uint64x2_t)v201;
      v201.i64[0] = v200.u32[0];
      v201.i64[1] = v200.u32[1];
      int64x2_t v204 = v201;
      v201.i64[0] = v200.u32[2];
      v201.i64[1] = v200.u32[3];
      int64x2_t v205 = vpaddq_s64((int64x2_t)vshlq_u64(v202, (uint64x2_t)vzip1q_s64((int64x2_t)0, v204)), (int64x2_t)vshlq_u64(v203, (uint64x2_t)vzip1q_s64((int64x2_t)0, v201)));
      int64x2_t v206 = vpaddq_s64(v204, v201);
      unint64_t v207 = (v205.i64[0] << v193) | v191;
      if (v206.i64[0] + (v193 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v193 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v207;
        unint64_t v207 = (unint64_t)v205.i64[0] >> -(v193 & 0x3F);
        if ((v193 & 0x3F) == 0) {
          unint64_t v207 = 0;
        }
      }
      int8x16_t v208 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v78);
      int8x16_t v209 = (int8x16_t)vaddq_s16(v192, (int16x8_t)v28);
      unint64_t v210 = v206.i64[0] + v193;
      unint64_t v211 = v207 | (v205.i64[1] << v210);
      if ((v210 & 0x3F) + v206.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v210 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v211;
        unint64_t v211 = (unint64_t)v205.i64[1] >> -(v210 & 0x3F);
        if ((v210 & 0x3F) == 0) {
          unint64_t v211 = 0;
        }
      }
      int16x8_t v212 = (int16x8_t)vandq_s8(v71, v208);
      unint64_t v213 = v210 + v206.i64[1];
      int16x8_t v214 = (int16x8_t)vextq_s8((int8x16_t)0, v77, 0xEuLL);
      v215.i64[0] = 0xF000F000F000FLL;
      v215.i64[1] = 0xF000F000F000FLL;
      v216.i64[0] = -1;
      v216.i64[1] = -1;
      uint16x8_t v217 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v216, (uint16x8_t)vaddq_s16(v214, v215)), v209);
      int32x4_t v218 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v214.i8);
      int32x4_t v219 = (int32x4_t)vmovl_high_u16((uint16x8_t)v214);
      int32x4_t v220 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v217.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v218)), (int32x4_t)vshlq_u32(vmovl_high_u16(v217), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v219)));
      int32x4_t v221 = vpaddq_s32(v218, v219);
      v222.i64[0] = v220.u32[0];
      v222.i64[1] = v220.u32[1];
      uint64x2_t v223 = (uint64x2_t)v222;
      v222.i64[0] = v220.u32[2];
      v222.i64[1] = v220.u32[3];
      uint64x2_t v224 = (uint64x2_t)v222;
      v222.i64[0] = v221.u32[0];
      v222.i64[1] = v221.u32[1];
      int64x2_t v225 = v222;
      v222.i64[0] = v221.u32[2];
      v222.i64[1] = v221.u32[3];
      int64x2_t v226 = vpaddq_s64((int64x2_t)vshlq_u64(v223, (uint64x2_t)vzip1q_s64((int64x2_t)0, v225)), (int64x2_t)vshlq_u64(v224, (uint64x2_t)vzip1q_s64((int64x2_t)0, v222)));
      int64x2_t v227 = vpaddq_s64(v225, v222);
      unint64_t v228 = (v226.i64[0] << v213) | v211;
      if (v227.i64[0] + (v213 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v213 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v228;
        unint64_t v228 = (unint64_t)v226.i64[0] >> -(v213 & 0x3F);
        if ((v213 & 0x3F) == 0) {
          unint64_t v228 = 0;
        }
      }
      int8x16_t v229 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v79);
      int8x16_t v230 = (int8x16_t)vaddq_s16((int16x8_t)v29, v212);
      unint64_t v231 = v227.i64[0] + v213;
      unint64_t v232 = v228 | (v226.i64[1] << v231);
      if ((v231 & 0x3F) + v227.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v231 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v232;
        unint64_t v232 = (unint64_t)v226.i64[1] >> -(v231 & 0x3F);
        if ((v231 & 0x3F) == 0) {
          unint64_t v232 = 0;
        }
      }
      int16x8_t v233 = (int16x8_t)vandq_s8(v71, v229);
      unint64_t v234 = v231 + v227.i64[1];
      v235.i64[0] = 0xF000F000F000FLL;
      v235.i64[1] = 0xF000F000F000FLL;
      v236.i64[0] = -1;
      v236.i64[1] = -1;
      uint16x8_t v237 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v236, (uint16x8_t)vaddq_s16((int16x8_t)v78, v235)), v230);
      int32x4_t v238 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v239 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v240 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v237.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v238)), (int32x4_t)vshlq_u32(vmovl_high_u16(v237), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v239)));
      int32x4_t v241 = vpaddq_s32(v238, v239);
      v242.i64[0] = v240.u32[0];
      v242.i64[1] = v240.u32[1];
      uint64x2_t v243 = (uint64x2_t)v242;
      v242.i64[0] = v240.u32[2];
      v242.i64[1] = v240.u32[3];
      uint64x2_t v244 = (uint64x2_t)v242;
      v242.i64[0] = v241.u32[0];
      v242.i64[1] = v241.u32[1];
      int64x2_t v245 = v242;
      v242.i64[0] = v241.u32[2];
      v242.i64[1] = v241.u32[3];
      int64x2_t v246 = vpaddq_s64((int64x2_t)vshlq_u64(v243, (uint64x2_t)vzip1q_s64((int64x2_t)0, v245)), (int64x2_t)vshlq_u64(v244, (uint64x2_t)vzip1q_s64((int64x2_t)0, v242)));
      int64x2_t v247 = vpaddq_s64(v245, v242);
      unint64_t v248 = (v246.i64[0] << v234) | v232;
      if (v247.i64[0] + (v234 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v234 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v248;
        unint64_t v248 = (unint64_t)v246.i64[0] >> -(v234 & 0x3F);
        if ((v234 & 0x3F) == 0) {
          unint64_t v248 = 0;
        }
      }
      int8x16_t v249 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v80);
      int8x16_t v250 = (int8x16_t)vaddq_s16(v30, v233);
      unint64_t v251 = v247.i64[0] + v234;
      unint64_t v252 = v248 | (v246.i64[1] << v251);
      if ((v251 & 0x3F) + v247.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v251 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v252;
        unint64_t v252 = (unint64_t)v246.i64[1] >> -(v251 & 0x3F);
        if ((v251 & 0x3F) == 0) {
          unint64_t v252 = 0;
        }
      }
      int16x8_t v253 = (int16x8_t)vandq_s8(v71, v249);
      unint64_t v254 = v251 + v247.i64[1];
      v255.i64[0] = 0xF000F000F000FLL;
      v255.i64[1] = 0xF000F000F000FLL;
      v256.i64[0] = -1;
      v256.i64[1] = -1;
      uint16x8_t v257 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v256, (uint16x8_t)vaddq_s16((int16x8_t)v79, v255)), v250);
      int32x4_t v258 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v259 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v260 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v257.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v258)), (int32x4_t)vshlq_u32(vmovl_high_u16(v257), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v259)));
      int32x4_t v261 = vpaddq_s32(v258, v259);
      v262.i64[0] = v260.u32[0];
      v262.i64[1] = v260.u32[1];
      uint64x2_t v263 = (uint64x2_t)v262;
      v262.i64[0] = v260.u32[2];
      v262.i64[1] = v260.u32[3];
      uint64x2_t v264 = (uint64x2_t)v262;
      v262.i64[0] = v261.u32[0];
      v262.i64[1] = v261.u32[1];
      int64x2_t v265 = v262;
      v262.i64[0] = v261.u32[2];
      v262.i64[1] = v261.u32[3];
      int64x2_t v266 = vpaddq_s64((int64x2_t)vshlq_u64(v263, (uint64x2_t)vzip1q_s64((int64x2_t)0, v265)), (int64x2_t)vshlq_u64(v264, (uint64x2_t)vzip1q_s64((int64x2_t)0, v262)));
      int64x2_t v267 = vpaddq_s64(v265, v262);
      unint64_t v268 = (v266.i64[0] << v254) | v252;
      if (v267.i64[0] + (v254 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v254 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v268;
        unint64_t v268 = (unint64_t)v266.i64[0] >> -(v254 & 0x3F);
        if ((v254 & 0x3F) == 0) {
          unint64_t v268 = 0;
        }
      }
      int8x16_t v269 = (int8x16_t)vaddq_s16(v31, v253);
      unint64_t v270 = v267.i64[0] + v254;
      unint64_t v271 = v268 | (v266.i64[1] << v270);
      if ((v270 & 0x3F) + v267.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v270 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v271;
        unint64_t v271 = (unint64_t)v266.i64[1] >> -(v270 & 0x3F);
        if ((v270 & 0x3F) == 0) {
          unint64_t v271 = 0;
        }
      }
      unint64_t v272 = v270 + v267.i64[1];
      v273.i64[0] = 0xF000F000F000FLL;
      v273.i64[1] = 0xF000F000F000FLL;
      v274.i64[0] = -1;
      v274.i64[1] = -1;
      uint16x8_t v275 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v274, (uint16x8_t)vaddq_s16((int16x8_t)v80, v273)), v269);
      int32x4_t v276 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v80.i8);
      int32x4_t v277 = (int32x4_t)vmovl_high_u16((uint16x8_t)v80);
      int32x4_t v278 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v275.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v276)), (int32x4_t)vshlq_u32(vmovl_high_u16(v275), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)));
      int32x4_t v279 = vpaddq_s32(v276, v277);
      v280.i64[0] = v278.u32[0];
      v280.i64[1] = v278.u32[1];
      uint64x2_t v281 = (uint64x2_t)v280;
      v280.i64[0] = v278.u32[2];
      v280.i64[1] = v278.u32[3];
      uint64x2_t v282 = (uint64x2_t)v280;
      v280.i64[0] = v279.u32[0];
      v280.i64[1] = v279.u32[1];
      int64x2_t v283 = v280;
      v280.i64[0] = v279.u32[2];
      v280.i64[1] = v279.u32[3];
      int64x2_t v284 = vpaddq_s64((int64x2_t)vshlq_u64(v281, (uint64x2_t)vzip1q_s64((int64x2_t)0, v283)), (int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v280)));
      int64x2_t v285 = vpaddq_s64(v283, v280);
      unint64_t v286 = (v284.i64[0] << v272) | v271;
      if (v285.i64[0] + (v272 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v159 + ((v272 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
        if ((v272 & 0x3F) != 0) {
          unint64_t v286 = (unint64_t)v284.i64[0] >> -(v272 & 0x3F);
        }
        else {
          unint64_t v286 = 0;
        }
      }
      unint64_t v287 = v285.i64[0] + v272;
      unint64_t v288 = v286 | (v284.i64[1] << v287);
      if ((v287 & 0x3F) + v285.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v287 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v288;
        unint64_t v288 = (unint64_t)v284.i64[1] >> -(v287 & 0x3F);
        if ((v287 & 0x3F) == 0) {
          unint64_t v288 = 0;
        }
      }
      unint64_t v289 = v287 + v285.i64[1];
      if ((v289 & 0x3F) != 0) {
        *(void *)((char *)v159 + ((v289 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v288;
      }
      unint64_t result = (v289 - v160 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 4;
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v11 = a6;
  if (a5 >= 8)
  {
    uint64_t v14 = 0;
    int16x4_t v15 = &v45;
    int16x4_t v16 = (char *)&v43 + ((8 * a5) & 0x7C0);
    do
    {
      int32x4_t v17 = v15;
      __int16 v18 = a3;
      uint64_t v19 = a5 & 0xF8;
      do
      {
        uint16x8_t v20 = *v18++;
        uint16x8_t v21 = vshrq_n_u16(v20, 4uLL);
        *((_WORD *)v17 - 16) = v21.i16[0];
        *((_WORD *)v17 - 12) = v21.i16[1];
        *((_WORD *)v17 - 8) = v21.i16[2];
        *((_WORD *)v17 - 4) = v21.i16[3];
        *(_WORD *)int32x4_t v17 = v21.i16[4];
        *((_WORD *)v17 + 4) = v21.i16[5];
        *((_WORD *)v17 + 8) = v21.i16[6];
        *((_WORD *)v17 + 12) = v21.i16[7];
        v17 += 4;
        v19 -= 8;
      }
      while (v19);
      if ((a5 & 0xF8) != (unint64_t)a5)
      {
        int16x8_t v22 = v16;
        uint64_t v23 = a5 & 0xF8;
        do
        {
          _WORD *v22 = (unsigned __int16)a3->i16[v23] >> 4;
          v22 += 4;
          ++v23;
        }
        while (a5 != v23);
      }
      ++v14;
      a3 = (uint16x8_t *)((char *)a3 + a4);
      int16x4_t v15 = (long long *)((char *)v15 + 2);
      v16 += 2;
    }
    while (v14 != a6);
  }
  else
  {
    int v12 = &a3->i16[3];
    int v13 = (_WORD *)&v44 + 4;
    do
    {
      *(v13 - 12) = (unsigned __int16)*(v12 - 3) >> 4;
      if (a5 != 1)
      {
        *(v13 - 8) = (unsigned __int16)*(v12 - 2) >> 4;
        if (a5 != 2)
        {
          *(v13 - 4) = (unsigned __int16)*(v12 - 1) >> 4;
          if (a5 != 3)
          {
            *int v13 = (unsigned __int16)*v12 >> 4;
            if (a5 != 4)
            {
              v13[4] = (unsigned __int16)v12[1] >> 4;
              if (a5 != 5)
              {
                v13[8] = (unsigned __int16)v12[2] >> 4;
                if (a5 != 6) {
                  v13[12] = (unsigned __int16)v12[3] >> 4;
                }
              }
            }
          }
        }
      }
      int v12 = (__int16 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  v38.i32[0] = (unsigned __int16)v43;
  v38.i32[1] = WORD4(v43);
  v38.i32[2] = WORD1(v43);
  v38.i32[3] = WORD5(v43);
  int v39 = (unsigned __int16)v44;
  int v40 = WORD4(v44);
  if (a5 >= 4) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = a5;
  }
  if (a5 >= 4) {
    unsigned int v25 = a5 - 4;
  }
  else {
    unsigned int v25 = 0;
  }
  int v41 = WORD1(v44);
  int v42 = WORD5(v44);
  if (a6 >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = a6;
  }
  if (a6 >= 2) {
    unsigned int v27 = a6 - 2;
  }
  else {
    unsigned int v27 = 0;
  }
  char v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, &v38, a7, v24, v26);
  v38.i32[0] = WORD2(v43);
  v38.i32[1] = WORD6(v43);
  v38.i32[2] = WORD3(v43);
  v38.i32[3] = HIWORD(v43);
  int v39 = WORD2(v44);
  int v40 = WORD6(v44);
  int v41 = WORD3(v44);
  int v42 = HIWORD(v44);
  if (a6 >= 4) {
    unsigned int v29 = 2;
  }
  else {
    unsigned int v29 = v27;
  }
  int v30 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 8, &v38, a7, v24, v29);
  v38.i32[0] = (unsigned __int16)v45;
  v38.i32[1] = WORD4(v45);
  v38.i32[2] = WORD1(v45);
  v38.i32[3] = WORD5(v45);
  int v39 = (unsigned __int16)v46;
  int v40 = WORD4(v46);
  if (a5 >= 8) {
    unsigned int v31 = 4;
  }
  else {
    unsigned int v31 = v25;
  }
  int v41 = WORD1(v46);
  int v42 = WORD5(v46);
  int v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 16, &v38, a7, v31, v26);
  v38.i32[0] = WORD2(v45);
  v38.i32[1] = WORD6(v45);
  v38.i32[2] = WORD3(v45);
  v38.i32[3] = HIWORD(v45);
  int v39 = WORD2(v46);
  int v40 = WORD6(v46);
  int v41 = WORD3(v46);
  int v42 = HIWORD(v46);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 24, &v38, a7, v31, v29);
  if (v32) {
    char v34 = 4;
  }
  else {
    char v34 = 0;
  }
  if (v30) {
    char v35 = 2;
  }
  else {
    char v35 = 0;
  }
  if (result) {
    char v36 = -8;
  }
  else {
    char v36 = -16;
  }
  *a2 = v36 | v34 | v28 | v35;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(unint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v124 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v8.i64[0] = 0x80000000800;
    v8.i64[1] = 0x80000000800;
    int8x16_t v9 = veorq_s8(*a2, v8);
    v10.i64[0] = 0x100000001;
    v10.i64[1] = 0x100000001;
    int8x16_t v6 = vbicq_s8(v9, (int8x16_t)vceqq_s32((int32x4_t)v9, v10));
    int8x16_t v11 = veorq_s8(a2[1], v8);
    int8x16_t v7 = vbicq_s8(v11, (int8x16_t)vceqq_s32((int32x4_t)v11, v10));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v5.i64[0] = 0x80000000800;
    v5.i64[1] = 0x80000000800;
    int8x16_t v6 = veorq_s8(*a2, v5);
    int8x16_t v7 = veorq_s8(a2[1], v5);
LABEL_5:
    int8x16_t v122 = v6;
    int8x16_t v123 = v7;
    unsigned int v12 = v6.i32[0];
    goto LABEL_7;
  }
  int8x16_t v13 = a2[1];
  int8x16_t v122 = *a2;
  int8x16_t v123 = v13;
  unsigned int v12 = v122.i32[0];
LABEL_7:
  if (a5) {
    BOOL v14 = a4 >= 2;
  }
  else {
    BOOL v14 = 0;
  }
  int v15 = !v14;
  if (v14)
  {
    unsigned int v17 = v122.u32[1];
    unsigned int v16 = v122.i32[1] < v12;
    if (v122.i32[1] >= v12) {
      unsigned int v18 = v12;
    }
    else {
      unsigned int v18 = v122.u32[1];
    }
    if (v12 > v122.i32[1]) {
      unsigned int v17 = v12;
    }
  }
  else
  {
    unsigned int v16 = 0;
    unsigned int v17 = v12;
    unsigned int v18 = v12;
  }
  BOOL v19 = a5 < 2 || a4 == 0;
  int v20 = v19;
  if (!v19)
  {
    if (v122.i32[2] < v18)
    {
      unsigned int v16 = 2;
      unsigned int v18 = v122.u32[2];
    }
    if (v17 <= v122.i32[2]) {
      unsigned int v17 = v122.u32[2];
    }
  }
  BOOL v21 = a5 >= 2 && a4 >= 2;
  int v22 = !v21;
  if (v21)
  {
    if (v122.i32[3] < v18)
    {
      unsigned int v16 = 3;
      unsigned int v18 = v122.u32[3];
    }
    if (v17 <= v122.i32[3]) {
      unsigned int v17 = v122.u32[3];
    }
  }
  if (a5) {
    BOOL v23 = a4 >= 3;
  }
  else {
    BOOL v23 = 0;
  }
  int v24 = !v23;
  if (v23)
  {
    if (v123.i32[0] < v18)
    {
      unsigned int v16 = 4;
      unsigned int v18 = v123.i32[0];
    }
    if (v17 <= v123.i32[0]) {
      unsigned int v17 = v123.i32[0];
    }
  }
  if (a5) {
    BOOL v25 = a4 >= 4;
  }
  else {
    BOOL v25 = 0;
  }
  int v26 = !v25;
  if (v25)
  {
    if (v123.i32[1] < v18)
    {
      unsigned int v16 = 5;
      unsigned int v18 = v123.u32[1];
    }
    if (v17 <= v123.i32[1]) {
      unsigned int v17 = v123.u32[1];
    }
  }
  BOOL v27 = a5 >= 2 && a4 >= 3;
  int v28 = !v27;
  if (v27)
  {
    if (v123.i32[2] < v18)
    {
      unsigned int v16 = 6;
      unsigned int v18 = v123.u32[2];
    }
    if (v17 <= v123.i32[2]) {
      unsigned int v17 = v123.u32[2];
    }
  }
  BOOL v29 = a5 >= 2 && a4 >= 4;
  int v30 = !v29;
  if (v29)
  {
    if (v123.i32[3] < v18)
    {
      unsigned int v16 = 7;
      unsigned int v18 = v123.u32[3];
    }
    if (v17 <= v123.i32[3]) {
      unsigned int v17 = v123.u32[3];
    }
  }
  unsigned int v31 = v17 - v18;
  unsigned int v32 = __clz(v17 - v18);
  int v33 = 32 - v32;
  if ((int)(32 - v32) <= 2) {
    int v33 = 2;
  }
  unsigned int v34 = v33 - 2;
  if ((v32 & 0x3C) == 0x1C) {
    unsigned int v34 = 2;
  }
  if (v34 < 3 && v17 == v18) {
    unsigned int v34 = v17 != 0;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v36 = 0;
    if (v18 <= 0x7FF && v17 >= 0x800) {
      BOOL v36 = kDQuadParamTable[10 * v34 + 328] == 0;
    }
  }
  else
  {
    BOOL v36 = 0;
  }
  if (v34 > 6 || v36)
  {
    int v38 = kDQuadParamTable[10 * v34 + 324];
    unsigned int v39 = v38 + 2;
    if (v36) {
      int v40 = 0;
    }
    else {
      int v40 = -2;
    }
    int v41 = v18 & ~(-1 << (10 - v38));
    if (v39 >= 0xC) {
      int v41 = 0;
    }
    int v42 = v41 + v40;
    if (v42 >= 1 && __clz(v42 + v31) < v32) {
      ++v34;
    }
  }
  unint64_t v43 = v34;
  unint64_t v47 = (unint64_t)&kDQuadParamTable[10 * v34];
  unint64_t v44 = *(void *)(v47 + 1288);
  int v45 = *(_DWORD *)(v47 + 1296);
  int v46 = *(_DWORD *)(v47 + 1300);
  LODWORD(v47) = v46 + 2;
  if (a4) {
    BOOL v48 = a5 == 0;
  }
  else {
    BOOL v48 = 1;
  }
  int v49 = v48;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v50 = a4 == 0;
    }
    else {
      BOOL v50 = 1;
    }
    int v51 = !v50;
  }
  else
  {
    int v51 = 0;
  }
  unint64_t v52 = 0;
  unsigned int v53 = 0;
  if (v44 >> v47 > 0x10) {
    int v51 = 1;
  }
  unsigned int v54 = v45 + 2;
  memset(v119, 0, sizeof(v119));
  int v120 = 0;
  if (v46) {
    unsigned int v55 = 12;
  }
  else {
    unsigned int v55 = 0;
  }
  if (v54 >= 0xC) {
    uint64_t v56 = 12;
  }
  else {
    uint64_t v56 = v54;
  }
  if (v55 >= v47) {
    unint64_t v47 = v47;
  }
  else {
    unint64_t v47 = v55;
  }
  unsigned int v57 = v18 & (-1 << (12 - v56));
  unsigned int v58 = v12 - v57;
  if (v49) {
    unsigned int v58 = 0;
  }
  BOOL v19 = v15 == 0;
  unsigned __int32 v59 = v122.i32[1] - v57;
  if (!v19) {
    unsigned __int32 v59 = 0;
  }
  v121[0] = v58;
  v121[1] = v59;
  unint64_t v60 = v16;
  unint64_t v61 = v44 >> v47;
  unsigned __int32 v62 = v122.i32[2] - v57;
  if (v20) {
    unsigned __int32 v62 = 0;
  }
  unsigned __int32 v63 = v122.i32[3] - v57;
  if (v22) {
    unsigned __int32 v63 = 0;
  }
  v121[2] = v62;
  v121[3] = v63;
  unsigned __int32 v64 = v123.i32[0] - v57;
  if (v24) {
    unsigned __int32 v64 = 0;
  }
  unsigned __int32 v65 = v123.i32[1] - v57;
  if (v26) {
    unsigned __int32 v65 = 0;
  }
  v121[4] = v64;
  v121[5] = v65;
  unsigned __int32 v66 = v123.i32[2] - v57;
  if (v28) {
    unsigned __int32 v66 = 0;
  }
  unsigned __int32 v67 = v123.i32[3] - v57;
  if (v30) {
    unsigned __int32 v67 = 0;
  }
  v121[6] = v66;
  v121[7] = v67;
  if (v61 <= 1) {
    unint64_t v68 = 1;
  }
  else {
    unint64_t v68 = v44 >> v47;
  }
  uint64_t v69 = 4 * v16;
  int16x8_t v70 = &byte_242EA911D;
  do
  {
    if (v69 != v52)
    {
      if (v47) {
        unint64_t v71 = v121[v52 / 4] / v68;
      }
      else {
        LODWORD(v71) = 0;
      }
      *((_DWORD *)v119 + v53) = v71;
      if (v61 >= 2)
      {
        unint64_t v72 = v121[v52 / 4];
        if (v72)
        {
          if (v72 / v68 * v68 == v72 && ((v72 / v68) & 1) != 0)
          {
            if (v57 || v71 != 1)
            {
              if ((a3 | 2) != 3
                || (uint64_t v74 = v122.u32[v52 / 4], v74 != 2048) && ((a3 | 2) != 3 || v68 + 2048 != v74))
              {
                LODWORD(v71) = v71 - 1;
                *((_DWORD *)v119 + v53) = v71;
              }
            }
            else
            {
              LODWORD(v71) = 1;
            }
          }
        }
      }
      if (v71 >> v47 || v122.i32[v52 / 4] == 4095) {
        *((_DWORD *)v119 + v53) = ~(-1 << v47);
      }
      if (*v70 >= a5 || *(v70 - 1) >= a4) {
        *((_DWORD *)v119 + v53) = 0;
      }
      ++v53;
    }
    v52 += 4;
    v70 += 2;
  }
  while (v52 != 32);
  int16x8_t v75 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v76 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if ((v51 | v49) == 1)
  {
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 8 * (a1 & 7);
    do
    {
      int8x16_t v80 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v77;
      if (v80[1] >= a5 || *v80 >= a4) {
        unint64_t v82 = 0;
      }
      else {
        unint64_t v82 = (unint64_t)v122.u32[v77] >> 4;
      }
      if ((unint64_t)(v79 - v76 + (v78 << 6) - 57) >= 0xFFFFFFFFFFFFFFBFLL)
      {
        uint64_t v83 = 0;
        unint64_t v84 = 8;
        do
        {
          unint64_t v85 = 64 - v79;
          if (64 - v79 >= v84) {
            unint64_t v85 = v84;
          }
          v75[v78] |= ((v82 >> v83) & ~(-1 << v85)) << v79;
          v83 += v85;
          unint64_t v86 = v85 + v79;
          v78 += v86 >> 6;
          uint64_t v79 = v86 & 0x3F;
          v84 -= v85;
        }
        while (v84);
      }
      ++v77;
    }
    while (v77 != 8);
    return v51 | v49;
  }
  if (v43 < 4)
  {
    uint64_t v88 = v76 | 3;
    if ((v76 | 3uLL) - v76 <= 0x3E)
    {
      uint64_t v87 = 0;
      uint64_t v90 = 0;
      unint64_t v91 = 2;
      do
      {
        unint64_t v92 = 64 - v88;
        if (64 - v88 >= v91) {
          unint64_t v92 = v91;
        }
        v75[v87] |= ((v43 >> v90) & ~(-1 << v92)) << v88;
        v90 += v92;
        unint64_t v93 = v92 + v88;
        v87 += v93 >> 6;
        uint64_t v88 = v93 & 0x3F;
        v91 -= v92;
      }
      while (v91);
    }
    else
    {
      uint64_t v87 = 0;
    }
    int v89 = 5;
    if (!v43) {
      goto LABEL_220;
    }
  }
  else
  {
    uint64_t v87 = 0;
    *v75 |= (unint64_t)(((_BYTE)v43 + 5) & 7) << v76;
    uint64_t v88 = v76 | 3;
    int v89 = 3;
  }
  if (v56 && (unint64_t)(v56 - v76 + v88 + (v87 << 6)) <= 0x40)
  {
    uint64_t v94 = 0;
    unint64_t v95 = v56;
    do
    {
      unint64_t v96 = 64 - v88;
      if (64 - v88 >= v95) {
        unint64_t v96 = v95;
      }
      v75[v87] |= (((unint64_t)(v57 >> (12 - v56)) >> v94) & ~(-1 << v96)) << v88;
      v94 += v96;
      unint64_t v97 = v96 + v88;
      v87 += v97 >> 6;
      uint64_t v88 = v97 & 0x3F;
      v95 -= v96;
    }
    while (v95);
  }
  v89 += v56;
LABEL_220:
  if (v47)
  {
    if ((unint64_t)(v88 - v76 + (v87 << 6) + 3) <= 0x40)
    {
      uint64_t v98 = 0;
      unint64_t v99 = 3;
      do
      {
        unint64_t v100 = 64 - v88;
        if (64 - v88 >= v99) {
          unint64_t v100 = v99;
        }
        v75[v87] |= ((v60 >> v98) & ~(-1 << v100)) << v88;
        v98 += v100;
        unint64_t v101 = v100 + v88;
        v87 += v101 >> 6;
        uint64_t v88 = v101 & 0x3F;
        v99 -= v100;
      }
      while (v99);
    }
    v89 += 3;
  }
  unsigned int v102 = (((37 * (64 - v89)) >> 8)
        + (((64 - v89 - ((unsigned __int16)(37 * (64 - v89)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v103 = -7 * v102 + 64 - v89;
  if ((v103 - 257) >= 0xFFFFFF00 && v88 - v76 + (v87 << 6) + v103 <= 0x40)
  {
    do
    {
      unint64_t v104 = 64 - v88;
      if (64 - v88 >= v103) {
        unint64_t v104 = v103;
      }
      unint64_t v105 = v104 + v88;
      v87 += v105 >> 6;
      uint64_t v88 = v105 & 0x3F;
      v103 -= v104;
    }
    while (v103);
  }
  uint64_t v106 = 0;
  unint64_t v107 = v102 - v47;
  if (v107) {
    BOOL v108 = v107 > 0x100;
  }
  else {
    BOOL v108 = 1;
  }
  char v109 = v108;
  do
  {
    if (v47 && v47 - v76 + v88 + (v87 << 6) <= 0x40)
    {
      uint64_t v110 = 0;
      unint64_t v111 = *((unsigned int *)v119 + v106);
      unint64_t v112 = v47;
      do
      {
        unint64_t v113 = 64 - v88;
        if (64 - v88 >= v112) {
          unint64_t v113 = v112;
        }
        v75[v87] |= ((v111 >> v110) & ~(-1 << v113)) << v88;
        v110 += v113;
        unint64_t v114 = v113 + v88;
        v87 += v114 >> 6;
        uint64_t v88 = v114 & 0x3F;
        v112 -= v113;
      }
      while (v112);
    }
    if ((v109 & 1) == 0 && v88 - v76 + (v87 << 6) + v107 <= 0x40)
    {
      unint64_t v115 = v107;
      do
      {
        unint64_t v116 = 64 - v88;
        if (64 - v88 >= v115) {
          unint64_t v116 = v115;
        }
        unint64_t v117 = v116 + v88;
        v87 += v117 >> 6;
        uint64_t v88 = v117 & 0x3F;
        v115 -= v116;
      }
      while (v115);
    }
    ++v106;
  }
  while (v106 != 7);
  return v51 | v49;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)2>::decompressSubblock(uint64_t a1, uint64_t a2, int32x4_t *a3, unsigned int a4, int a5, double a6, double a7, double a8, int8x8_t a9)
{
  uint64_t v469 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v194 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    int16x8_t v195 = (void *)(a1 + a2);
    *int16x8_t v195 = 0;
    v195[1] = 0;
    int16x8_t v196 = (void *)(a1 + 2 * a2);
    *int16x8_t v196 = 0;
    v196[1] = 0;
    uint16x8_t v197 = (void *)(a1 + a2 + 2 * a2);
LABEL_312:
    *uint16x8_t v197 = 0;
    v197[1] = 0;
    return v194;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v9 = 0;
    unsigned int v10 = a5 & 0xFFFFFFFD;
    int v427 = a3;
    unsigned int v426 = a4;
    while (1)
    {
      unint64_t v28 = (unint64_t)a3 + 8 * v9;
      BOOL v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v30 = 8 * (v28 & 7);
      if (((a4 >> v9) & 1) == 0) {
        break;
      }
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = v30;
      do
      {
        if ((unint64_t)(v33 - v30 + (v32 << 6) - 57) < 0xFFFFFFFFFFFFFFBFLL)
        {
          unsigned __int8 v34 = 0;
        }
        else
        {
          unsigned __int8 v34 = 0;
          uint64_t v38 = 0;
          unint64_t v39 = 8;
          do
          {
            if (64 - v33 >= v39) {
              unint64_t v40 = v39;
            }
            else {
              unint64_t v40 = 64 - v33;
            }
            v34 |= (unint64_t)((v29[v32] >> v33) & ~(-1 << v40)) << v38;
            v38 += v40;
            unint64_t v41 = v40 + v33;
            v32 += v41 >> 6;
            uint64_t v33 = v41 & 0x3F;
            v39 -= v40;
          }
          while (v39);
        }
        int v35 = 16 * v34;
        int v36 = v35 - (v34 & 1) + 8;
        if (v35 == 4080) {
          int v36 = 4095;
        }
        if (!v35) {
          int v36 = 0;
        }
        if (v35 == 2048 && v10 == 1) {
          int v36 = v35;
        }
        if (a5 == 4) {
          int v36 = v35;
        }
        *(&v428 + v31++) = v36 ^ (((a5 & 0xFFFFFFFD) == 1) << 11);
      }
      while (v31 != 8);
      LOWORD(v12) = v428;
      LOWORD(v11) = v429;
      LOWORD(v13) = v430;
      LOWORD(v14) = v431;
      LOWORD(v15) = v432;
      LOWORD(v16) = v433;
      __int16 v18 = v434;
      __int16 v17 = v435;
LABEL_5:
      BOOL v19 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v9;
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      int v22 = &v436 + v20;
      uint64_t v23 = 2 * v21;
      *(_WORD *)((char *)v22 + v23) = v12;
      int v24 = &v436 + (v20 + 1);
      *(_WORD *)((char *)v24 + v23) = v11;
      uint64_t v25 = 2 * (v21 + 1);
      *(_WORD *)((char *)v22 + v25) = v13;
      *(_WORD *)((char *)v24 + v25) = v14;
      int v26 = &v436 + (v20 + 2);
      *(_WORD *)((char *)v26 + v23) = v15;
      BOOL v27 = &v436 + (v20 + 3);
      *(_WORD *)((char *)v27 + v23) = v16;
      *(_WORD *)((char *)v26 + v25) = v18;
      *(_WORD *)((char *)v27 + v25) = v17;
      if (++v9 == 4)
      {
        *(_WORD *)a1 = 16 * v436;
        *(_WORD *)(a1 + 2) = 16 * v437;
        *(_WORD *)(a1 + 4) = 16 * v441;
        *(_WORD *)(a1 + 6) = 16 * v445;
        *(_WORD *)(a1 + 8) = 16 * v449;
        *(_WORD *)(a1 + 10) = 16 * v453;
        *(_WORD *)(a1 + 12) = 16 * v457;
        *(_WORD *)(a1 + 14) = 16 * v461;
        int32x4_t v199 = (_WORD *)(a1 + a2);
        *int32x4_t v199 = 16 * WORD1(v436);
        v199[1] = 16 * v438;
        v199[2] = 16 * v442;
        v199[3] = 16 * v446;
        v199[4] = 16 * v450;
        v199[5] = 16 * v454;
        v199[6] = 16 * v458;
        v199[7] = 16 * v462;
        int32x4_t v200 = (_WORD *)(a1 + a2 + a2);
        *int32x4_t v200 = 16 * WORD2(v436);
        v200[1] = 16 * v439;
        v200[2] = 16 * v443;
        v200[3] = 16 * v447;
        v200[4] = 16 * v451;
        v200[5] = 16 * v455;
        v200[6] = 16 * v459;
        v200[7] = 16 * v463;
        int64x2_t v201 = (_WORD *)((char *)v200 + a2);
        *int64x2_t v201 = 16 * HIWORD(v436);
        v201[1] = 16 * v440;
        v201[2] = 16 * v444;
        v201[3] = 16 * v448;
        v201[4] = 16 * v452;
        v201[5] = 16 * v456;
        v201[6] = 16 * v460;
        uint64_t v194 = 32;
        v201[7] = 16 * v464;
        return v194;
      }
    }
    uint64_t v42 = v30 | 3;
    if (((*v29 >> v30) & 7) != 0)
    {
      uint64_t v43 = 0;
      int v44 = 0;
      int v45 = ((*v29 >> v30) & 7) + 3;
      int v46 = 3;
    }
    else
    {
      if ((unint64_t)(v42 - v30) <= 0x3E)
      {
        uint64_t v43 = 0;
        char v47 = 0;
        uint64_t v48 = 0;
        unint64_t v49 = 2;
        do
        {
          unint64_t v50 = 64 - v42;
          if (64 - v42 >= v49) {
            unint64_t v50 = v49;
          }
          v47 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v50)) << v48;
          v48 += v50;
          unint64_t v51 = v50 + v42;
          v43 += v51 >> 6;
          uint64_t v42 = v51 & 0x3F;
          v49 -= v50;
        }
        while (v49);
      }
      else
      {
        char v47 = 0;
        uint64_t v43 = 0;
      }
      int v45 = v47 & 3;
      int v44 = 2;
      int v46 = 5;
    }
    unint64_t v52 = &kDQuadParamTable[10 * v45];
    LODWORD(v53) = v52[324] + 2;
    int v54 = v52[325];
    unsigned int v55 = v54 + 2;
    if (v53 >= 0xC) {
      uint64_t v53 = 12;
    }
    else {
      uint64_t v53 = v53;
    }
    if (v54) {
      unsigned int v56 = 12;
    }
    else {
      unsigned int v56 = 0;
    }
    if (v56 >= v55) {
      unint64_t v57 = v55;
    }
    else {
      unint64_t v57 = v56;
    }
    char v58 = 12 - v53;
    if (v45)
    {
      if (v53)
      {
        if ((unint64_t)(v53 - v30 + v42 + (v43 << 6)) <= 0x40)
        {
          int v59 = 0;
          uint64_t v63 = 0;
          unint64_t v64 = v53;
          do
          {
            unint64_t v65 = 64 - v42;
            if (64 - v42 >= v64) {
              unint64_t v65 = v64;
            }
            v59 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v65)) << v63;
            v63 += v65;
            unint64_t v66 = v65 + v42;
            v43 += v66 >> 6;
            uint64_t v42 = v66 & 0x3F;
            v64 -= v65;
          }
          while (v64);
        }
        else
        {
          int v59 = 0;
        }
        int v46 = v53 + v44 + 3;
      }
      else
      {
        int v59 = 0;
      }
      unsigned int v60 = v59 << v58;
      if (v57) {
        goto LABEL_59;
      }
    }
    else
    {
      unsigned int v60 = 0;
      if (v57)
      {
LABEL_59:
        if ((unint64_t)(v42 - v30 + (v43 << 6) + 3) <= 0x40)
        {
          int v61 = 0;
          uint64_t v67 = 0;
          unint64_t v68 = 3;
          do
          {
            unint64_t v69 = 64 - v42;
            if (64 - v42 >= v68) {
              unint64_t v69 = v68;
            }
            v61 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v69)) << v67;
            v67 += v69;
            unint64_t v70 = v69 + v42;
            v43 += v70 >> 6;
            uint64_t v42 = v70 & 0x3F;
            v68 -= v69;
          }
          while (v68);
        }
        else
        {
          int v61 = 0;
        }
        uint64_t v465 = 0;
        uint64_t v466 = 0;
        int v468 = 0;
        uint64_t v467 = 0;
        unsigned int v71 = 61 - v46;
        unsigned int v72 = (61 - v46) / 7u;
        unint64_t v73 = v57 - v30;
        unint64_t v74 = (v42 | (v43 << 6)) + v71 % 7;
        unint64_t v75 = v74 & 0x3F;
        if (v73 + v75 + (v74 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          uint64_t v62 = 0;
          uint64_t v76 = 0;
          unint64_t v77 = v74 >> 6;
          unint64_t v78 = v57;
          do
          {
            unint64_t v79 = 64 - v75;
            if (64 - v75 >= v78) {
              unint64_t v79 = v78;
            }
            v62 |= ((unint64_t)((v29[v77] >> v75) & ~(-1 << v79)) << v76);
            v76 += v79;
            unint64_t v80 = v79 + v75;
            v77 += v80 >> 6;
            unint64_t v75 = v80 & 0x3F;
            v78 -= v79;
          }
          while (v78);
          LODWORD(v465) = v62;
          unint64_t v74 = v75 | (v77 << 6);
        }
        else
        {
          uint64_t v62 = 0;
        }
        uint64_t v81 = v72 - v57;
        unint64_t v82 = v74 + v81;
        uint64_t v83 = (v74 + v81) & 0x3F;
        if (v73 + v83 + (v82 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v84 = 0;
          uint64_t v85 = 0;
          unint64_t v86 = v82 >> 6;
          unint64_t v87 = v57;
          do
          {
            unint64_t v88 = 64 - v83;
            if (64 - v83 >= v87) {
              unint64_t v88 = v87;
            }
            v84 |= (unint64_t)((v29[v86] >> v83) & ~(-1 << v88)) << v85;
            v85 += v88;
            unint64_t v89 = v88 + v83;
            v86 += v89 >> 6;
            uint64_t v83 = v89 & 0x3F;
            v87 -= v88;
          }
          while (v87);
          HIDWORD(v465) = v84;
          unint64_t v82 = v83 | (v86 << 6);
        }
        else
        {
          HIDWORD(v465) = 0;
        }
        unint64_t v90 = v82 + v81;
        uint64_t v91 = v90 & 0x3F;
        if (v73 + v91 + (v90 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v92 = 0;
          uint64_t v93 = 0;
          unint64_t v94 = v90 >> 6;
          unint64_t v95 = v57;
          do
          {
            unint64_t v96 = 64 - v91;
            if (64 - v91 >= v95) {
              unint64_t v96 = v95;
            }
            v92 |= (unint64_t)((v29[v94] >> v91) & ~(-1 << v96)) << v93;
            v93 += v96;
            unint64_t v97 = v96 + v91;
            v94 += v97 >> 6;
            uint64_t v91 = v97 & 0x3F;
            v95 -= v96;
          }
          while (v95);
          LODWORD(v466) = v92;
          unint64_t v90 = v91 | (v94 << 6);
        }
        else
        {
          LODWORD(v466) = 0;
        }
        unint64_t v98 = v90 + v81;
        uint64_t v99 = v98 & 0x3F;
        if (v73 + v99 + (v98 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v100 = 0;
          uint64_t v101 = 0;
          unint64_t v102 = v98 >> 6;
          unint64_t v103 = v57;
          do
          {
            unint64_t v104 = 64 - v99;
            if (64 - v99 >= v103) {
              unint64_t v104 = v103;
            }
            v100 |= (unint64_t)((v29[v102] >> v99) & ~(-1 << v104)) << v101;
            v101 += v104;
            unint64_t v105 = v104 + v99;
            v102 += v105 >> 6;
            uint64_t v99 = v105 & 0x3F;
            v103 -= v104;
          }
          while (v103);
          HIDWORD(v466) = v100;
          unint64_t v98 = v99 | (v102 << 6);
        }
        else
        {
          HIDWORD(v466) = 0;
        }
        unint64_t v106 = v98 + v81;
        uint64_t v107 = v106 & 0x3F;
        if (v73 + v107 + (v106 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v108 = 0;
          uint64_t v109 = 0;
          unint64_t v110 = v106 >> 6;
          unint64_t v111 = v57;
          do
          {
            unint64_t v112 = 64 - v107;
            if (64 - v107 >= v111) {
              unint64_t v112 = v111;
            }
            v108 |= (unint64_t)((v29[v110] >> v107) & ~(-1 << v112)) << v109;
            v109 += v112;
            unint64_t v113 = v112 + v107;
            v110 += v113 >> 6;
            uint64_t v107 = v113 & 0x3F;
            v111 -= v112;
          }
          while (v111);
          LODWORD(v467) = v108;
          unint64_t v106 = v107 | (v110 << 6);
        }
        else
        {
          LODWORD(v467) = 0;
        }
        unint64_t v114 = v106 + v81;
        unint64_t v115 = v114 >> 6;
        uint64_t v116 = v114 & 0x3F;
        if (v73 + v116 + (v114 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v117 = 0;
          uint64_t v118 = 0;
          unint64_t v119 = v57;
          do
          {
            unint64_t v120 = 64 - v116;
            if (64 - v116 >= v119) {
              unint64_t v120 = v119;
            }
            v117 |= (unint64_t)((v29[v115] >> v116) & ~(-1 << v120)) << v118;
            v118 += v120;
            unint64_t v121 = v120 + v116;
            v115 += v121 >> 6;
            uint64_t v116 = v121 & 0x3F;
            v119 -= v120;
          }
          while (v119);
        }
        else
        {
          int v117 = 0;
        }
        HIDWORD(v467) = v117;
        unint64_t v122 = (v116 | (v115 << 6)) + v81;
        uint64_t v123 = v122 & 0x3F;
        if (v73 + v123 + (v122 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
        {
          int v124 = 0;
          uint64_t v125 = 0;
          unint64_t v126 = v122 >> 6;
          unint64_t v127 = v57;
          do
          {
            unint64_t v128 = 64 - v123;
            if (64 - v123 >= v127) {
              unint64_t v128 = v127;
            }
            v124 |= (unint64_t)((v29[v126] >> v123) & ~(-1 << v128)) << v125;
            v125 += v128;
            unint64_t v129 = v128 + v123;
            v126 += v129 >> 6;
            uint64_t v123 = v129 & 0x3F;
            v127 -= v128;
          }
          while (v127);
        }
        else
        {
          int v124 = 0;
        }
        int v468 = v124;
LABEL_113:
        unint64_t v130 = *(void *)&kDQuadParamTable[10 * v45 + 322];
        if (v130 >> v57 <= 1) {
          unint64_t v131 = 1;
        }
        else {
          unint64_t v131 = v130 >> v57;
        }
        unint64_t v132 = v131 >> 1;
        unint64_t v133 = (unint64_t)(1 << v58) >> 1;
        if (v131 >> 1 < v133) {
          unint64_t v133 = v131 >> 1;
        }
        unint64_t v134 = 2048 - v60;
        if (v60) {
          uint64_t v135 = v133;
        }
        else {
          uint64_t v135 = 0;
        }
        BOOL v136 = v60 == 2048;
        if (v60 >= 0xFFF) {
          __int16 v137 = 4095;
        }
        else {
          __int16 v137 = v60;
        }
        __int16 v138 = v137 ^ 0x800;
        if (v131 <= v134)
        {
          __int16 v139 = 2047;
        }
        else
        {
          __int16 v138 = 0;
          __int16 v139 = 0;
        }
        if (v10 == 1) {
          __int16 v140 = v138;
        }
        else {
          __int16 v140 = v137;
        }
        if (v10 == 1) {
          __int16 v17 = v139;
        }
        else {
          __int16 v17 = 4095;
        }
        if (!v57)
        {
          if (a5 == 4)
          {
            __int16 v18 = v17;
            LOWORD(v16) = v17;
            LOWORD(v15) = v17;
            LOWORD(v14) = v17;
            LOWORD(v13) = v17;
            LOWORD(v11) = v17;
            LOWORD(v12) = v17;
            a3 = v427;
            a4 = v426;
            if ((v60 & 0x7FC00000 | 0x80000000) != 0xFF800000)
            {
              __int16 v17 = v140;
              __int16 v18 = v140;
              LOWORD(v16) = v140;
              LOWORD(v15) = v140;
              LOWORD(v14) = v140;
              LOWORD(v13) = v140;
              LOWORD(v11) = v140;
              LOWORD(v12) = v140;
            }
          }
          else
          {
            __int16 v17 = v140;
            __int16 v18 = v140;
            LOWORD(v16) = v140;
            LOWORD(v15) = v140;
            LOWORD(v14) = v140;
            LOWORD(v13) = v140;
            LOWORD(v11) = v140;
            LOWORD(v12) = v140;
            a3 = v427;
            a4 = v426;
          }
          goto LABEL_5;
        }
        unint64_t v141 = v130 + v60;
        uint64_t v142 = ~(-1 << v57);
        unint64_t v143 = v134 / v131;
        if (!v61)
        {
          uint64_t v146 = 0;
          uint64_t v145 = v135;
          BOOL v144 = v60 == 2048;
          goto LABEL_148;
        }
        BOOL v144 = v143 == v62;
        if (v60 || v62)
        {
          if (v141 >= 0x1000 && v62 == v142)
          {
            uint64_t v146 = 1;
            uint64_t v145 = 4095;
            goto LABEL_148;
          }
          uint64_t v145 = v132 + v131 * v62;
        }
        else
        {
          uint64_t v145 = 0;
        }
        uint64_t v146 = 1;
LABEL_148:
        unint64_t v147 = v145 + v60;
        unint64_t v148 = v147;
        if (a5 == 4)
        {
          unint64_t v148 = 2139095039;
          if ((v147 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v148 = 4286578687;
            if ((v147 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v148 = v147;
            }
          }
        }
        if (v148 >= 0xFFF) {
          int v149 = 4095;
        }
        else {
          int v149 = v148;
        }
        if (v144) {
          int v150 = 0;
        }
        else {
          int v150 = v149 ^ 0x800;
        }
        if (v10 == 1) {
          int v12 = v150;
        }
        else {
          int v12 = v149;
        }
        int v428 = v12;
        if (v61 == 1)
        {
          uint64_t v151 = v135;
          BOOL v152 = v60 == 2048;
        }
        else
        {
          uint64_t v153 = *(unsigned int *)((unint64_t)&v465 | (4 * v146));
          BOOL v152 = v143 == v153;
          if (v60 | v153)
          {
            if (v141 >= 0x1000 && v153 == v142) {
              uint64_t v151 = 4095;
            }
            else {
              uint64_t v151 = v132 + v131 * v153;
            }
          }
          else
          {
            uint64_t v151 = 0;
          }
          ++v146;
        }
        unint64_t v154 = v151 + v60;
        unint64_t v155 = v154;
        if (a5 == 4)
        {
          unint64_t v155 = 2139095039;
          if ((v154 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v155 = 4286578687;
            if ((v154 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v155 = v154;
            }
          }
        }
        if (v155 >= 0xFFF) {
          int v156 = 4095;
        }
        else {
          int v156 = v155;
        }
        if (v152) {
          int v157 = 0;
        }
        else {
          int v157 = v156 ^ 0x800;
        }
        if (v10 == 1) {
          int v11 = v157;
        }
        else {
          int v11 = v156;
        }
        int v429 = v11;
        if (v61 == 2)
        {
          uint64_t v158 = v135;
          BOOL v159 = v60 == 2048;
        }
        else
        {
          uint64_t v160 = *((unsigned int *)&v465 + v146);
          BOOL v159 = v143 == v160;
          if (v60 | v160)
          {
            if (v141 >= 0x1000 && v160 == v142) {
              uint64_t v158 = 4095;
            }
            else {
              uint64_t v158 = v132 + v131 * v160;
            }
          }
          else
          {
            uint64_t v158 = 0;
          }
          ++v146;
        }
        unint64_t v161 = v158 + v60;
        unint64_t v162 = v161;
        if (a5 == 4)
        {
          unint64_t v162 = 2139095039;
          if ((v161 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v162 = 4286578687;
            if ((v161 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v162 = v161;
            }
          }
        }
        if (v162 >= 0xFFF) {
          int v163 = 4095;
        }
        else {
          int v163 = v162;
        }
        if (v159) {
          int v13 = 0;
        }
        else {
          int v13 = v163 ^ 0x800;
        }
        if (v10 != 1) {
          int v13 = v163;
        }
        int v430 = v13;
        if (v61 == 3)
        {
          uint64_t v164 = v135;
          BOOL v165 = v60 == 2048;
        }
        else
        {
          uint64_t v166 = *((unsigned int *)&v465 + v146);
          BOOL v165 = v143 == v166;
          if (v60 | v166)
          {
            if (v141 >= 0x1000 && v166 == v142) {
              uint64_t v164 = 4095;
            }
            else {
              uint64_t v164 = v132 + v131 * v166;
            }
          }
          else
          {
            uint64_t v164 = 0;
          }
          ++v146;
        }
        unint64_t v167 = v164 + v60;
        unint64_t v168 = v167;
        if (a5 == 4)
        {
          unint64_t v168 = 2139095039;
          if ((v167 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            if ((v167 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
              unint64_t v168 = 4286578687;
            }
            else {
              unint64_t v168 = v167;
            }
          }
        }
        if (v168 >= 0xFFF) {
          int v169 = 4095;
        }
        else {
          int v169 = v168;
        }
        if (v165) {
          int v170 = 0;
        }
        else {
          int v170 = v169 ^ 0x800;
        }
        if (v10 == 1) {
          int v14 = v170;
        }
        else {
          int v14 = v169;
        }
        int v431 = v14;
        if (v61 == 4)
        {
          uint64_t v171 = v135;
          BOOL v172 = v60 == 2048;
        }
        else
        {
          uint64_t v173 = *((unsigned int *)&v465 + v146);
          BOOL v172 = v143 == v173;
          if (v60 | v173)
          {
            if (v141 >= 0x1000 && v173 == v142) {
              uint64_t v171 = 4095;
            }
            else {
              uint64_t v171 = v132 + v131 * v173;
            }
          }
          else
          {
            uint64_t v171 = 0;
          }
          ++v146;
        }
        unint64_t v174 = v171 + v60;
        unint64_t v175 = v174;
        if (a5 == 4)
        {
          unint64_t v175 = 2139095039;
          if ((v174 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            if ((v174 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
              unint64_t v175 = 4286578687;
            }
            else {
              unint64_t v175 = v174;
            }
          }
        }
        if (v175 >= 0xFFF) {
          int v176 = 4095;
        }
        else {
          int v176 = v175;
        }
        if (v172) {
          int v177 = 0;
        }
        else {
          int v177 = v176 ^ 0x800;
        }
        if (v10 == 1) {
          int v15 = v177;
        }
        else {
          int v15 = v176;
        }
        int v432 = v15;
        unint64_t v425 = v141;
        if (v61 == 5)
        {
          uint64_t v178 = ~(-1 << v57);
          uint64_t v179 = v135;
          BOOL v180 = v60 == 2048;
        }
        else
        {
          uint64_t v181 = *((unsigned int *)&v465 + v146);
          BOOL v180 = v143 == v181;
          if (v60 | v181)
          {
            if (v141 >= 0x1000 && v181 == v142)
            {
              uint64_t v178 = ~(-1 << v57);
              uint64_t v179 = 4095;
            }
            else
            {
              uint64_t v178 = ~(-1 << v57);
              uint64_t v179 = v132 + v131 * v181;
            }
          }
          else
          {
            uint64_t v178 = ~(-1 << v57);
            uint64_t v179 = 0;
          }
          ++v146;
        }
        unint64_t v182 = v179 + v60;
        unint64_t v183 = v182;
        if (a5 == 4)
        {
          unint64_t v183 = 2139095039;
          if ((v182 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            if ((v182 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
              unint64_t v183 = 4286578687;
            }
            else {
              unint64_t v183 = v182;
            }
          }
        }
        if (v183 >= 0xFFF) {
          int v184 = 4095;
        }
        else {
          int v184 = v183;
        }
        if (v180) {
          int v185 = 0;
        }
        else {
          int v185 = v184 ^ 0x800;
        }
        if (v10 == 1) {
          int v16 = v185;
        }
        else {
          int v16 = v184;
        }
        int v433 = v16;
        if (v61 == 6)
        {
          uint64_t v186 = v135;
          BOOL v187 = v60 == 2048;
        }
        else
        {
          uint64_t v188 = *((unsigned int *)&v465 + v146);
          BOOL v187 = v143 == v188;
          if (v60 | v188)
          {
            if (v425 >= 0x1000 && v188 == v178) {
              uint64_t v186 = 4095;
            }
            else {
              uint64_t v186 = v132 + v131 * v188;
            }
          }
          else
          {
            uint64_t v186 = 0;
          }
          ++v146;
        }
        unint64_t v189 = v186 + v60;
        unint64_t v190 = v189;
        if (a5 == 4)
        {
          unint64_t v190 = 2139095039;
          if ((v189 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v190 = 4286578687;
            if ((v189 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v190 = v189;
            }
          }
        }
        if (v190 >= 0xFFF) {
          LOWORD(v190) = 4095;
        }
        if (v187) {
          __int16 v18 = 0;
        }
        else {
          __int16 v18 = v190 ^ 0x800;
        }
        if (v10 != 1) {
          __int16 v18 = v190;
        }
        if (v61 != 7)
        {
          uint64_t v191 = *((unsigned int *)&v465 + v146);
          BOOL v136 = v143 == v191;
          if (v60 | v191)
          {
            if (v425 >= 0x1000 && v191 == v178) {
              uint64_t v135 = 4095;
            }
            else {
              uint64_t v135 = v132 + v131 * v191;
            }
          }
          else
          {
            uint64_t v135 = 0;
          }
        }
        unint64_t v192 = v135 + v60;
        unint64_t v193 = v192;
        if (a5 == 4)
        {
          unint64_t v193 = 2139095039;
          if ((v192 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v193 = 4286578687;
            if ((v192 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v193 = v135 + v60;
            }
          }
        }
        if (v193 >= 0xFFF) {
          LOWORD(v193) = 4095;
        }
        __int16 v17 = v193 ^ 0x800;
        if (v136) {
          __int16 v17 = 0;
        }
        if (v10 != 1) {
          __int16 v17 = v193;
        }
        a3 = v427;
        a4 = v426;
        goto LABEL_5;
      }
    }
    int v61 = 0;
    uint64_t v62 = 0;
    uint64_t v465 = 0;
    uint64_t v466 = 0;
    int v468 = 0;
    uint64_t v467 = 0;
    goto LABEL_113;
  }
  switch(a4)
  {
    case 0x3Fu:
      int32x4_t v203 = *a3;
      int32x4_t v204 = a3[1];
      int32x4_t v205 = a3[2];
      int32x4_t v206 = a3[3];
      *(int32x4_t *)a1 = vuzp1q_s32(*a3, v205);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v203, v205);
      unint64_t v207 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v207 = vuzp1q_s32(v204, v206);
      *(int32x4_t *)((char *)v207 + a2) = vuzp2q_s32(v204, v206);
      return 64;
    case 0x2Fu:
      v208.i64[0] = 0xC000C000C000CLL;
      v208.i64[1] = 0xC000C000C000CLL;
      int8x16_t v209 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v208, v208));
      unint64_t v210 = vpaddq_s32((int32x4_t)v209, (int32x4_t)v209).u64[0];
      v211.i64[0] = v210;
      v211.i64[1] = HIDWORD(v210);
      int8x16_t v212 = (int8x16_t)v211;
      unint64_t v213 = vaddvq_s64(v211);
      int8x16_t v214 = 0uLL;
      int8x16_t v215 = 0uLL;
      int8x16_t v216 = 0uLL;
      int8x16_t v217 = 0uLL;
      if (v213 <= 0x80)
      {
        int32x4_t v218 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v219 = 8 * (a3 & 7);
        int64x2_t v220 = vzip1q_s64((int64x2_t)0, (int64x2_t)v212);
        unint64_t v221 = v213 + v219;
        int64x2_t v222 = vaddq_s64(v220, vdupq_n_s64(v219));
        int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v222)));
        if (v213 + v219 >= 0x81) {
          int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v222)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v218[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v222))), v215);
        }
        unint64_t v223 = v221 & 0x3F;
        uint64x2_t v224 = (int64x2_t *)((char *)v218 + 8 * (v221 >> 6));
        int64x2_t v225 = vaddq_s64(v220, vdupq_n_s64(v223));
        unint64_t v226 = v213 + v221;
        int8x16_t v216 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v224, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224->i64[0], 0), (uint64x2_t)vnegq_s64(v225)));
        if (v213 + v223 >= 0x81) {
          int8x16_t v216 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v224[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v225))), v216);
        }
        unint64_t v227 = v226 & 0x3F;
        unint64_t v228 = (int64x2_t *)((char *)v218 + 8 * (v226 >> 6));
        int64x2_t v229 = vaddq_s64(v220, vdupq_n_s64(v227));
        unint64_t v230 = v213 + v226;
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v228, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228->i64[0], 0), (uint64x2_t)vnegq_s64(v229)));
        if (v213 + v227 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v228[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v229)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v228[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v229))), v214);
        }
        int8x16_t v212 = (int8x16_t)vaddq_s64(v220, vdupq_n_s64(v230 & 0x3F));
        unint64_t v231 = (int64x2_t *)((char *)v218 + 8 * (v230 >> 6));
        int8x16_t v217 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v231, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v212)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v212)));
        if (v213 + (v230 & 0x3F) >= 0x81)
        {
          int8x16_t v212 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v212)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v231[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v212)));
          int8x16_t v217 = vorrq_s8(v212, v217);
        }
      }
      *(int32x2_t *)v212.i8 = vmovn_s64((int64x2_t)v214);
      int32x2_t v232 = vzip1_s32(*(int32x2_t *)v209.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v209, v209, 8uLL));
      v233.i64[0] = v232.u32[0];
      v233.i64[1] = v232.u32[1];
      uint64x2_t v234 = (uint64x2_t)vnegq_s64(v233);
      int64x2_t v235 = (int64x2_t)vshlq_u64((uint64x2_t)v214, v234);
      *(int32x2_t *)v235.i8 = vmovn_s64(v235);
      int16x8_t v236 = (int16x8_t)vzip1q_s32((int32x4_t)v212, (int32x4_t)v235);
      *(int16x4_t *)v212.i8 = vmovn_s32((int32x4_t)v236);
      *(int16x4_t *)v236.i8 = vshrn_n_s32((int32x4_t)v236, 0xCuLL);
      int8x16_t v237 = (int8x16_t)vzip1q_s16((int16x8_t)v212, v236);
      v238.i64[0] = 0x1000100010001;
      v238.i64[1] = 0x1000100010001;
      v239.i64[0] = -1;
      v239.i64[1] = -1;
      int8x16_t v240 = (int8x16_t)vaddq_s16(vshlq_n_s16(v238, 0xCuLL), v239);
      *(int32x2_t *)v239.i8 = vmovn_s64((int64x2_t)v216);
      int64x2_t v241 = (int64x2_t)vshlq_u64((uint64x2_t)v216, v234);
      *(int32x2_t *)v241.i8 = vmovn_s64(v241);
      int16x8_t v242 = (int16x8_t)vzip1q_s32((int32x4_t)v239, (int32x4_t)v241);
      *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v242);
      *(int16x4_t *)v242.i8 = vshrn_n_s32((int32x4_t)v242, 0xCuLL);
      int16x8_t v243 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v239, v242), v240);
      *(int32x2_t *)v239.i8 = vmovn_s64((int64x2_t)v215);
      int64x2_t v244 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v234);
      *(int32x2_t *)v244.i8 = vmovn_s64(v244);
      int16x8_t v245 = (int16x8_t)vzip1q_s32((int32x4_t)v239, (int32x4_t)v244);
      *(int16x4_t *)v239.i8 = vmovn_s32((int32x4_t)v245);
      *(int16x4_t *)v245.i8 = vshrn_n_s32((int32x4_t)v245, 0xCuLL);
      int64x2_t v246 = (int64x2_t)vshlq_u64((uint64x2_t)v217, v234);
      *(int32x2_t *)v217.i8 = vmovn_s64((int64x2_t)v217);
      *(int32x2_t *)v246.i8 = vmovn_s64(v246);
      int16x8_t v247 = (int16x8_t)vzip1q_s32((int32x4_t)v217, (int32x4_t)v246);
      *(int16x4_t *)v217.i8 = vmovn_s32((int32x4_t)v247);
      *(int16x4_t *)v247.i8 = vshrn_n_s32((int32x4_t)v247, 0xCuLL);
      int16x8_t v248 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v217, v247), v240);
      int32x4_t v249 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v239, v245), v240), 4uLL);
      int32x4_t v250 = (int32x4_t)vshlq_n_s16(v243, 4uLL);
      int32x4_t v251 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v237, v240), 4uLL);
      int32x4_t v252 = (int32x4_t)vshlq_n_s16(v248, 4uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v249, v251);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v249, v251);
      int16x8_t v253 = (int32x4_t *)(a1 + 2 * a2);
      *int16x8_t v253 = vuzp1q_s32(v250, v252);
      *(int32x4_t *)((char *)v253 + a2) = vuzp2q_s32(v250, v252);
      return 48;
    case 1u:
      int16x8_t v198 = vdupq_n_s16(16 * a3->u16[0]);
      *(int16x8_t *)a1 = v198;
      *(int16x8_t *)(a1 + a2) = v198;
      *(int16x8_t *)(a1 + 2 * a2) = v198;
      *(int16x8_t *)(a1 + 3 * a2) = v198;
      return 2;
    default:
      unint64_t v254 = 8 * (a3 & 7);
      unint64_t v255 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v256 = v254 + 18;
      uint64_t v257 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v254;
      if (v254 >= 0x2F) {
        v257 |= *(void *)(v255 + 8) << (-8 * (a3 & 7u));
      }
      unint64_t v258 = (8 * (a3 & 7)) | 0x100;
      int v259 = (a4 >> 6) | (4 * v257);
      uint16x8_t v260 = (uint16x8_t)vdupq_n_s16(v259 & 0xF);
      a9.i32[0] = v259 & 0xF;
      v261.i64[0] = 0x3000300030003;
      v261.i64[1] = 0x3000300030003;
      int8x16_t v262 = vbicq_s8((int8x16_t)vdupq_n_s16(((v257 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v261));
      int8x16_t v263 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a9, (int8x8_t)0x4000400040004), 0))));
      v264.i64[0] = 0x202020202020202;
      v264.i64[1] = 0x202020202020202;
      int8x16_t v265 = vandq_s8(v263, v264);
      if (vmaxvq_s8(v265) < 1)
      {
        int v275 = 0;
        v276.i64[0] = -1;
        v276.i64[1] = -1;
        int8x16_t v277 = v262;
        int8x16_t v278 = v262;
        int8x16_t v279 = v262;
        v280.i64[0] = -1;
        v280.i64[1] = -1;
        int8x16_t v281 = v262;
        v282.i64[0] = -1;
        v282.i64[1] = -1;
        v283.i64[0] = -1;
        v283.i64[1] = -1;
      }
      else
      {
        int8x16_t v266 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v265, v265));
        int8x16_t v267 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v266, (int16x8_t)v266));
        unint64_t v268 = vpaddq_s32((int32x4_t)v267, (int32x4_t)v267).u64[0];
        v269.i64[0] = v268;
        v269.i64[1] = HIDWORD(v268);
        int64x2_t v270 = v269;
        unint64_t v271 = vaddvq_s64(v269);
        unint64_t v272 = v271 + v256;
        if (v271 <= 0x80 && v258 >= v272)
        {
          unint64_t v284 = v256 & 0x3A;
          int64x2_t v285 = vaddq_s64(vzip1q_s64((int64x2_t)0, v270), vdupq_n_s64(v284));
          unint64_t v286 = (int64x2_t *)(v255 + ((v256 >> 3) & 8));
          int8x16_t v274 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v286, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v285)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v286->i64[0], 0), (uint64x2_t)vnegq_s64(v285)));
          if (v271 + v284 < 0x81)
          {
            int v275 = 0;
          }
          else
          {
            int v275 = 0;
            int8x16_t v274 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v286[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v285)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v286[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v285))), v274);
          }
          unint64_t v256 = v272;
        }
        else
        {
          int8x16_t v274 = 0uLL;
          int v275 = 1;
        }
        int32x2_t v287 = vzip1_s32(*(int32x2_t *)v267.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v267, v267, 8uLL));
        v288.i64[0] = v287.u32[0];
        v288.i64[1] = v287.u32[1];
        int64x2_t v289 = (int64x2_t)vshlq_u64((uint64x2_t)v274, (uint64x2_t)vnegq_s64(v288));
        *(int32x2_t *)v274.i8 = vmovn_s64((int64x2_t)v274);
        *(int32x2_t *)v289.i8 = vmovn_s64(v289);
        int8x16_t v290 = (int8x16_t)vzip1q_s32((int32x4_t)v274, (int32x4_t)v289);
        int16x8_t v291 = (int16x8_t)vshlq_u32((uint32x4_t)v290, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v266.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v266, v266, 8uLL)))));
        *(int16x4_t *)v290.i8 = vmovn_s32((int32x4_t)v290);
        *(int16x4_t *)v291.i8 = vmovn_s32((int32x4_t)v291);
        int8x16_t v292 = (int8x16_t)vzip1q_s16((int16x8_t)v290, v291);
        *(int8x8_t *)v292.i8 = vzip1_s8(vmovn_s16((int16x8_t)v292), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v292, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v265.i8, *(int8x8_t *)v260.i8))))));
        v290.i64[0] = 0x101010101010101;
        v290.i64[1] = 0x101010101010101;
        int8x16_t v293 = vshlq_s8(v290, v265);
        v290.i64[0] = -1;
        v290.i64[1] = -1;
        v293.i32[0] = vandq_s8(v292, vaddq_s8(v293, v290)).u32[0];
        int16x8_t v294 = vdupq_n_s16(v293.i8[0]);
        int16x8_t v295 = vdupq_n_s16(v293.i8[1]);
        int16x8_t v296 = vdupq_n_s16(v293.i8[2]);
        int16x8_t v297 = vdupq_n_s16(v293.i8[3]);
        int8x16_t v281 = (int8x16_t)vsubq_s16((int16x8_t)v262, v294);
        int8x16_t v279 = (int8x16_t)vsubq_s16((int16x8_t)v262, v295);
        int8x16_t v278 = (int8x16_t)vsubq_s16((int16x8_t)v262, v296);
        int8x16_t v277 = (int8x16_t)vsubq_s16((int16x8_t)v262, v297);
        int8x16_t v283 = (int8x16_t)vceqzq_s16(v294);
        int8x16_t v282 = (int8x16_t)vceqzq_s16(v295);
        int8x16_t v280 = (int8x16_t)vceqzq_s16(v296);
        int8x16_t v276 = (int8x16_t)vceqzq_s16(v297);
      }
      v298.i64[0] = 0x7000700070007;
      v298.i64[1] = 0x7000700070007;
      int8x16_t v299 = 0uLL;
      int8x16_t v300 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v260, v298), (int8x16_t)0, 0xEuLL), v262);
      int8x16_t v301 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v300, (int16x8_t)v300));
      unint64_t v302 = vpaddq_s32((int32x4_t)v301, (int32x4_t)v301).u64[0];
      v303.i64[0] = v302;
      v303.i64[1] = HIDWORD(v302);
      int64x2_t v304 = v303;
      unint64_t v305 = vaddvq_s64(v303);
      unint64_t v306 = v305 + v256;
      if (v305 <= 0x80 && v258 >= v306)
      {
        unint64_t v308 = v256 & 0x3F;
        int64x2_t v309 = vaddq_s64(vzip1q_s64((int64x2_t)0, v304), vdupq_n_s64(v308));
        uint16x8_t v310 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v299 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v310, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v309)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v310->i64[0], 0), (uint64x2_t)vnegq_s64(v309)));
        if (v305 + v308 >= 0x81) {
          int8x16_t v299 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v310[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v309)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v310[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v309))), v299);
        }
        unint64_t v256 = v306;
      }
      else
      {
        int v275 = 1;
      }
      int v311 = a4 >> 6;
      if (v311 == 2)
      {
        BOOL v312 = v258 >= v256 + 8;
        if (v258 >= v256 + 8) {
          v256 += 8;
        }
        unint64_t v313 = v256 + 8;
        if (!v312 || v258 < v313) {
          int v275 = 1;
        }
        if (v258 >= v313) {
          v256 += 8;
        }
      }
      int8x16_t v315 = 0uLL;
      int8x16_t v316 = vextq_s8((int8x16_t)0, v281, 0xEuLL);
      int8x16_t v317 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v316, (int16x8_t)v316));
      unint64_t v318 = vpaddq_s32((int32x4_t)v317, (int32x4_t)v317).u64[0];
      v319.i64[0] = v318;
      v319.i64[1] = HIDWORD(v318);
      int64x2_t v320 = v319;
      unint64_t v321 = vaddvq_s64(v319);
      unint64_t v322 = v321 + v256;
      if (v321 <= 0x80 && v258 >= v322)
      {
        unint64_t v325 = v256 & 0x3F;
        int64x2_t v326 = vaddq_s64(vzip1q_s64((int64x2_t)0, v320), vdupq_n_s64(v325));
        unint64_t v327 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v324 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v327, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327->i64[0], 0), (uint64x2_t)vnegq_s64(v326)));
        if (v321 + v325 >= 0x81) {
          int8x16_t v324 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v327[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v326)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v327[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v326))), v324);
        }
        unint64_t v256 = v322;
      }
      else
      {
        int v275 = 1;
        int8x16_t v324 = 0uLL;
      }
      int8x16_t v328 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v279, (int16x8_t)v279));
      unint64_t v329 = vpaddq_s32((int32x4_t)v328, (int32x4_t)v328).u64[0];
      v330.i64[0] = v329;
      v330.i64[1] = HIDWORD(v329);
      int64x2_t v331 = v330;
      unint64_t v332 = vaddvq_s64(v330);
      if (v332 < 0x81)
      {
        int32x2_t v333 = vzip1_s32(*(int32x2_t *)v328.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v328, v328, 8uLL));
        v334.i64[0] = v333.u32[0];
        v334.i64[1] = v333.u32[1];
        int64x2_t v335 = v334;
        int32x4_t v336 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v279.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v279, v279, 8uLL)));
        unint64_t v337 = v332 + v256;
        if (v258 >= v332 + v256)
        {
          unint64_t v338 = v256 & 0x3F;
          int64x2_t v339 = vaddq_s64(vzip1q_s64((int64x2_t)0, v331), vdupq_n_s64(v338));
          int64x2_t v340 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
          int8x16_t v315 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v340, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v339)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v340->i64[0], 0), (uint64x2_t)vnegq_s64(v339)));
          if (v332 + v338 >= 0x81) {
            int8x16_t v315 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v340[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v339)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v340[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v339))), v315);
          }
          unint64_t v256 = v337;
        }
        else
        {
          int v275 = 1;
        }
        int64x2_t v341 = (int64x2_t)vshlq_u64((uint64x2_t)v315, (uint64x2_t)vnegq_s64(v335));
        *(int32x2_t *)v315.i8 = vmovn_s64((int64x2_t)v315);
        *(int32x2_t *)v341.i8 = vmovn_s64(v341);
        int16x8_t v342 = (int16x8_t)vzip1q_s32((int32x4_t)v315, (int32x4_t)v341);
        int16x8_t v343 = (int16x8_t)vshlq_u32((uint32x4_t)v342, (uint32x4_t)vnegq_s32(v336));
        *(int16x4_t *)v342.i8 = vmovn_s32((int32x4_t)v342);
        *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
        int8x16_t v315 = (int8x16_t)vzip1q_s16(v342, v343);
      }
      else
      {
        int v275 = 1;
      }
      int8x16_t v344 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v278, (int16x8_t)v278));
      unint64_t v345 = vpaddq_s32((int32x4_t)v344, (int32x4_t)v344).u64[0];
      v346.i64[0] = v345;
      v346.i64[1] = HIDWORD(v345);
      int64x2_t v347 = v346;
      unint64_t v348 = vaddvq_s64(v346);
      int8x16_t v349 = 0uLL;
      if (v348 <= 0x80)
      {
        int32x2_t v351 = vzip1_s32(*(int32x2_t *)v344.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v344, v344, 8uLL));
        v352.i64[0] = v351.u32[0];
        v352.i64[1] = v351.u32[1];
        int64x2_t v353 = v352;
        int32x4_t v354 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v278.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL)));
        unint64_t v355 = v348 + v256;
        if (v258 >= v348 + v256)
        {
          unint64_t v357 = v256 & 0x3F;
          int64x2_t v358 = vaddq_s64(vzip1q_s64((int64x2_t)0, v347), vdupq_n_s64(v357));
          int8x16_t v359 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
          int8x16_t v356 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v359, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v358)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v359->i64[0], 0), (uint64x2_t)vnegq_s64(v358)));
          if (v348 + v357 >= 0x81) {
            int8x16_t v356 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v359[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v358)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v359[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v358))), v356);
          }
          unint64_t v256 = v355;
        }
        else
        {
          int8x16_t v356 = 0uLL;
          int v275 = 1;
        }
        int64x2_t v360 = (int64x2_t)vshlq_u64((uint64x2_t)v356, (uint64x2_t)vnegq_s64(v353));
        *(int32x2_t *)v356.i8 = vmovn_s64((int64x2_t)v356);
        *(int32x2_t *)v360.i8 = vmovn_s64(v360);
        int16x8_t v361 = (int16x8_t)vzip1q_s32((int32x4_t)v356, (int32x4_t)v360);
        int16x8_t v362 = (int16x8_t)vshlq_u32((uint32x4_t)v361, (uint32x4_t)vnegq_s32(v354));
        *(int16x4_t *)v361.i8 = vmovn_s32((int32x4_t)v361);
        *(int16x4_t *)v362.i8 = vmovn_s32((int32x4_t)v362);
        int16x8_t v350 = vzip1q_s16(v361, v362);
      }
      else
      {
        int v275 = 1;
        int16x8_t v350 = 0uLL;
      }
      int8x16_t v363 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v277, (int16x8_t)v277));
      unint64_t v364 = vpaddq_s32((int32x4_t)v363, (int32x4_t)v363).u64[0];
      v365.i64[0] = v364;
      v365.i64[1] = HIDWORD(v364);
      int64x2_t v366 = v365;
      unint64_t v367 = vaddvq_s64(v365);
      if (v367 > 0x80) {
        goto LABEL_395;
      }
      if (v258 >= v367 + v256)
      {
        int64x2_t v368 = vaddq_s64(vzip1q_s64((int64x2_t)0, v366), vdupq_n_s64(v256 & 0x3F));
        int8x16_t v369 = (int64x2_t *)(v255 + 8 * (v256 >> 6));
        int8x16_t v349 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v369, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v368)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v369->i64[0], 0), (uint64x2_t)vnegq_s64(v368)));
        if (v367 + (v256 & 0x3F) >= 0x81) {
          int8x16_t v349 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v369[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v368)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v369[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v368))), v349);
        }
        v256 += v367;
      }
      else
      {
        int v275 = 1;
      }
      if (v275 || (uint64_t v194 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v194) - v256 >= 9) || v311 == 2)
      {
LABEL_395:
        uint64_t v194 = 0;
        v436 |= 4095 << ((8 * &v436) & 0x30);
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        int16x8_t v370 = (void *)(a1 + a2);
        int16x8_t v371 = (void *)(a1 + 2 * a2);
        *int16x8_t v370 = 0;
        v370[1] = 0;
        uint16x8_t v197 = (void *)(a1 + a2 + 2 * a2);
        *int16x8_t v371 = 0;
        v371[1] = 0;
        goto LABEL_312;
      }
      int32x2_t v372 = vzip1_s32(*(int32x2_t *)v301.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v301, v301, 8uLL));
      int32x2_t v373 = vzip1_s32(*(int32x2_t *)v317.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v317, v317, 8uLL));
      v374.i64[0] = v372.u32[0];
      v374.i64[1] = v372.u32[1];
      int64x2_t v375 = v374;
      v374.i64[0] = v373.u32[0];
      v374.i64[1] = v373.u32[1];
      int64x2_t v376 = (int64x2_t)vshlq_u64((uint64x2_t)v299, (uint64x2_t)vnegq_s64(v375));
      int64x2_t v377 = (int64x2_t)vshlq_u64((uint64x2_t)v324, (uint64x2_t)vnegq_s64(v374));
      *(int32x2_t *)v299.i8 = vmovn_s64((int64x2_t)v299);
      *(int32x2_t *)v376.i8 = vmovn_s64(v376);
      *(int32x2_t *)v324.i8 = vmovn_s64((int64x2_t)v324);
      *(int32x2_t *)v377.i8 = vmovn_s64(v377);
      int16x8_t v378 = (int16x8_t)vzip1q_s32((int32x4_t)v299, (int32x4_t)v376);
      int16x8_t v379 = (int16x8_t)vzip1q_s32((int32x4_t)v324, (int32x4_t)v377);
      int16x8_t v380 = (int16x8_t)vshlq_u32((uint32x4_t)v378, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v300.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v300, v300, 8uLL)))));
      int16x8_t v381 = (int16x8_t)vshlq_u32((uint32x4_t)v379, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v316.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v316, v316, 8uLL)))));
      *(int16x4_t *)v378.i8 = vmovn_s32((int32x4_t)v378);
      *(int16x4_t *)v380.i8 = vmovn_s32((int32x4_t)v380);
      *(int16x4_t *)v379.i8 = vmovn_s32((int32x4_t)v379);
      *(int16x4_t *)v381.i8 = vmovn_s32((int32x4_t)v381);
      v382.i64[0] = 0x10001000100010;
      v382.i64[1] = 0x10001000100010;
      v383.i64[0] = 0x10001000100010;
      v383.i64[1] = 0x10001000100010;
      int16x8_t v384 = vzip1q_s16(v378, v380);
      v380.i64[0] = 0xF000F000F000FLL;
      v380.i64[1] = 0xF000F000F000FLL;
      int16x8_t v385 = vsubq_s16(v382, (int16x8_t)v300);
      int16x8_t v386 = vzip1q_s16(v379, v381);
      v381.i64[0] = 0xF000F000F000FLL;
      v381.i64[1] = 0xF000F000F000FLL;
      int32x2_t v387 = vzip1_s32(*(int32x2_t *)v363.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v363, v363, 8uLL));
      v388.i64[0] = 0xF000F000F000FLL;
      v388.i64[1] = 0xF000F000F000FLL;
      v389.i64[0] = 0x10001000100010;
      v389.i64[1] = 0x10001000100010;
      int16x8_t v390 = vaddq_s16((int16x8_t)v300, v380);
      int16x8_t v391 = vaddq_s16((int16x8_t)v316, v381);
      int16x8_t v392 = vshlq_s16(v386, vsubq_s16(v383, (int16x8_t)v316));
      int16x8_t v393 = vshlq_s16((int16x8_t)v315, vsubq_s16(v383, (int16x8_t)v279));
      int16x8_t v394 = vshlq_s16(v350, vsubq_s16(v383, (int16x8_t)v278));
      v374.i64[0] = v387.u32[0];
      v374.i64[1] = v387.u32[1];
      int32x4_t v395 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v277.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v277, v277, 8uLL)));
      int16x8_t v396 = vaddq_s16((int16x8_t)v277, v388);
      int16x8_t v397 = vsubq_s16(v389, (int16x8_t)v277);
      int16x8_t v398 = vdupq_n_s16((v257 >> 6) & 0xFFF);
      int8x16_t v399 = (int8x16_t)vshlq_s16(vshlq_s16(v384, v385), v390);
      int16x8_t v400 = vshlq_s16(v392, v391);
      int64x2_t v401 = (int64x2_t)vshlq_u64((uint64x2_t)v349, (uint64x2_t)vnegq_s64(v374));
      *(int32x2_t *)v392.i8 = vmovn_s64((int64x2_t)v349);
      *(int32x2_t *)v401.i8 = vmovn_s64(v401);
      int16x8_t v402 = (int16x8_t)vzip1q_s32((int32x4_t)v392, (int32x4_t)v401);
      int16x8_t v403 = (int16x8_t)vshlq_u32((uint32x4_t)v402, (uint32x4_t)vnegq_s32(v395));
      *(int16x4_t *)v402.i8 = vmovn_s32((int32x4_t)v402);
      *(int16x4_t *)v403.i8 = vmovn_s32((int32x4_t)v403);
      int16x8_t v404 = vaddq_s16((int16x8_t)vandq_s8(v399, v283), v400);
      int8x16_t v405 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v399.i8, 0);
      int8x16_t v406 = (int8x16_t)vsubq_s16(v404, (int16x8_t)vandq_s8(v405, v283));
      int8x16_t v407 = (int8x16_t)vsubq_s16(vshlq_s16(v393, vaddq_s16((int16x8_t)v279, v381)), (int16x8_t)vandq_s8(v405, v282));
      int8x16_t v408 = (int8x16_t)vsubq_s16(vshlq_s16(v394, vaddq_s16((int16x8_t)v278, v381)), (int16x8_t)vandq_s8(v405, v280));
      int8x16_t v409 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v402, v403), v397), v396), (int16x8_t)vandq_s8(v405, v276));
      v410.i64[0] = 0x1000100010001;
      v410.i64[1] = 0x1000100010001;
      if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v410)))
      {
        int8x16_t v411 = v406;
        v411.i16[0] = v406.i16[7];
        v411.i16[7] = v406.i16[0];
        int8x16_t v412 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v260 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
        int8x16_t v413 = vbslq_s8(v412, v411, v406);
        int8x16_t v414 = (int8x16_t)vaddq_s16((int16x8_t)v413, (int16x8_t)vandq_s8(vqtbl1q_s8(v413, (int8x16_t)xmmword_242EA7480), v412));
        int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)v414, (int16x8_t)vandq_s8(vqtbl1q_s8(v414, (int8x16_t)xmmword_242EA7490), v412));
        int8x16_t v415 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA74A0), v412), (int16x8_t)v407);
        int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v415, (int8x16_t)xmmword_242EA74B0), v412), (int16x8_t)v415);
        int8x16_t v416 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA74C0), v412), (int16x8_t)v408);
        int8x16_t v408 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v416, (int8x16_t)xmmword_242EA74D0), v412), (int16x8_t)v416);
        int8x16_t v417 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA74E0), v412), (int16x8_t)v409);
        int8x16_t v409 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v417, (int8x16_t)xmmword_242EA74F0), v412), (int16x8_t)v417);
      }
      int32x4_t v418 = (int32x4_t)vshlq_n_s16(vaddq_s16(v398, (int16x8_t)v406), 4uLL);
      int32x4_t v419 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v407, v398), 4uLL);
      int32x4_t v420 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v408, v398), 4uLL);
      int32x4_t v421 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v409, v398), 4uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v418, v420);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v418, v420);
      int v422 = (int32x4_t *)(a1 + 2 * a2);
      *int v422 = vuzp1q_s32(v419, v421);
      *(int32x4_t *)((char *)v422 + a2) = vuzp2q_s32(v419, v421);
      break;
  }
  return v194;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressSubblock(uint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, int16x4_t a15)
{
  int32x4_t v17 = *(int32x4_t *)((char *)a3 + a4);
  __int16 v18 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v19 = *(int32x4_t *)((char *)v18 + a4);
  int8x16_t v20 = (int8x16_t)vshrq_n_s16((int16x8_t)vzip1q_s32(*a3, v17), 4uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip1q_s32(*v18, v19), 4uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip2q_s32(*a3, v17), 4uLL);
  int8x16_t v23 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v20.i8, 0);
  int16x8_t v24 = vshrq_n_s16((int16x8_t)vzip2q_s32(*v18, v19), 4uLL);
  int16x8_t v25 = vshlq_n_s16(vsubq_s16(v21, (int16x8_t)v23), 4uLL);
  int16x8_t v26 = vshlq_n_s16(vsubq_s16(v24, (int16x8_t)v23), 4uLL);
  v27.i64[0] = 0x3000300030003;
  v27.i64[1] = 0x3000300030003;
  int8x16_t v28 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v20, (int16x8_t)v23), 4uLL), v27);
  int8x16_t v29 = (int8x16_t)vshlq_s16(v25, v27);
  int16x8_t v30 = vshlq_s16(vshlq_n_s16(vsubq_s16(v22, (int16x8_t)v23), 4uLL), v27);
  int16x8_t v31 = vshlq_s16(v26, v27);
  v25.i16[0] = vmaxvq_s16((int16x8_t)v28);
  v26.i16[0] = vminvq_s16((int16x8_t)v28);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v25.i8, 0);
  int16x8_t v33 = vdupq_lane_s16(*(int16x4_t *)v26.i8, 0);
  v27.i64[0] = 0x8000800080008000;
  v27.i64[1] = 0x8000800080008000;
  int16x8_t v34 = vmaxq_s16(v32, v27);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  int16x8_t v36 = vminq_s16(v33, v35);
  int16x8_t v37 = vzip1q_s16(v32, v33);
  int8x16_t v38 = (int8x16_t)vceqzq_s16(v37);
  v39.i64[0] = 0x10001000100010;
  v39.i64[1] = 0x10001000100010;
  int16x8_t v40 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v37)), v38);
  v38.i16[0] = vmaxvq_s16((int16x8_t)v29);
  a15.i16[0] = vminvq_s16((int16x8_t)v29);
  int16x8_t v41 = vdupq_lane_s16(*(int16x4_t *)v38.i8, 0);
  int16x8_t v42 = vdupq_lane_s16(a15, 0);
  int16x8_t v43 = vpmaxq_s16(v40, v40);
  int16x8_t v44 = vmaxq_s16(v34, v41);
  int16x8_t v45 = vminq_s16(v36, v42);
  int16x8_t v46 = vzip1q_s16(v41, v42);
  int16x8_t v47 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v46)), (int8x16_t)vceqzq_s16(v46));
  int16x8_t v48 = vpmaxq_s16(v47, v47);
  v47.i16[0] = vmaxvq_s16(v30);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v47.i8, 0);
  v42.i16[0] = vminvq_s16(v30);
  int16x8_t v50 = vdupq_lane_s16(*(int16x4_t *)v42.i8, 0);
  int16x8_t v51 = vmaxq_s16(v44, v49);
  int16x8_t v52 = vminq_s16(v45, v50);
  int16x8_t v53 = vzip1q_s16(v49, v50);
  int16x8_t v54 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v53)), (int8x16_t)vceqzq_s16(v53));
  int16x8_t v55 = vpmaxq_s16(v54, v54);
  v54.i16[0] = vmaxvq_s16(v31);
  v16.i16[0] = vminvq_s16(v31);
  int16x8_t v56 = vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
  int16x8_t v57 = vdupq_lane_s16(v16, 0);
  int16x8_t v58 = vmaxq_s16(v51, v56);
  int16x8_t v59 = vminq_s16(v52, v57);
  int16x8_t v60 = vzip1q_s16(v56, v57);
  int16x8_t v61 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v39, vclsq_s16(v60)), (int8x16_t)vceqzq_s16(v60));
  int16x8_t v62 = vpmaxq_s16(v61, v61);
  int8x16_t v63 = (int8x16_t)vmaxq_s16(vmaxq_s16(v43, v48), vmaxq_s16(v55, v62));
  int16x8_t v64 = vclzq_s16(vsubq_s16(v58, v59));
  int8x16_t v65 = (int8x16_t)vsubq_s16(v39, v64);
  int8x16_t v66 = (int8x16_t)vcgtq_s16((int16x8_t)v63, (int16x8_t)v65);
  int8x16_t v67 = vbslq_s8(v66, v65, v63);
  if (vmaxvq_s16((int16x8_t)v67))
  {
    v68.i64[0] = 0x4000400040004;
    v68.i64[1] = 0x4000400040004;
    v69.i64[0] = -1;
    v69.i64[1] = -1;
    v70.i64[0] = 0xF000F000F000FLL;
    v70.i64[1] = 0xF000F000F000FLL;
    int8x16_t v71 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v69, vsubq_s16(v70, v64)), v59), v66);
    v72.i64[0] = 0x8000800080008;
    v72.i64[1] = 0x8000800080008;
    v70.i64[0] = 0x3000300030003;
    v70.i64[1] = 0x3000300030003;
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v43), v70), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v48), v70), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v55), v70), (int16x8_t)0);
    int16x8_t v76 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v67, v62), v70), (int16x8_t)0);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v67, v73);
    int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v67, v74);
    int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v67, v75);
    int8x16_t v80 = (int8x16_t)vsubq_s16((int16x8_t)v67, v76);
    int8x16_t v81 = vbicq_s8(v68, (int8x16_t)vceqq_s16(vaddq_s16(v76, v75), vnegq_s16(vaddq_s16(v73, v74))));
    int8x16_t v82 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v67), (int8x16_t)v70), vandq_s8(v66, v72)), v81);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v290 = (int8x16_t)v30;
      int8x16_t v291 = (int8x16_t)v31;
      int16x8_t v83 = vsubq_s16((int16x8_t)v20, (int16x8_t)vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7520));
      int8x16_t v84 = (int8x16_t)v21;
      v84.i16[7] = v20.i16[7];
      int16x8_t v85 = vsubq_s16(v21, (int16x8_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_242EA7530));
      int8x16_t v86 = (int8x16_t)v22;
      v86.i16[7] = v20.i16[7];
      int16x8_t v87 = vsubq_s16(v22, (int16x8_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7540));
      int8x16_t v88 = (int8x16_t)v24;
      v88.i16[7] = v20.i16[7];
      int16x8_t v89 = v83;
      v89.i16[0] = v83.i16[7];
      int16x8_t v90 = vsubq_s16(v24, (int16x8_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7550));
      v89.i16[7] = v83.i16[0];
      int16x8_t v91 = vshlq_n_s16(v89, 4uLL);
      v88.i64[0] = 0x4000400040004;
      v88.i64[1] = 0x4000400040004;
      int16x8_t v92 = vshlq_n_s16(v87, 4uLL);
      int16x8_t v93 = vshlq_n_s16(v90, 4uLL);
      v94.i64[0] = 0x3000300030003;
      v94.i64[1] = 0x3000300030003;
      int8x16_t v95 = (int8x16_t)vshlq_s16(v91, v94);
      int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(v85, 4uLL), v94);
      int8x16_t v97 = (int8x16_t)vshlq_s16(v92, v94);
      v91.i16[0] = vmaxvq_s16((int16x8_t)v95);
      v92.i16[0] = vminvq_s16((int16x8_t)v95);
      int16x8_t v98 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v99 = vdupq_lane_s16(*(int16x4_t *)v92.i8, 0);
      int8x16_t v100 = (int8x16_t)vshlq_s16(v93, v94);
      v93.i64[0] = 0x8000800080008000;
      v93.i64[1] = 0x8000800080008000;
      int16x8_t v101 = vmaxq_s16(v98, v93);
      v94.i64[0] = 0x8000800080008000;
      v94.i64[1] = 0x8000800080008000;
      int16x8_t v102 = vminq_s16(v99, v94);
      int16x8_t v103 = vzip1q_s16(v98, v99);
      int8x16_t v104 = (int8x16_t)vceqzq_s16(v103);
      v105.i64[0] = 0x10001000100010;
      v105.i64[1] = 0x10001000100010;
      int16x8_t v106 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v103)), v104);
      v104.i16[0] = vmaxvq_s16((int16x8_t)v96);
      v15.i16[0] = vminvq_s16((int16x8_t)v96);
      int16x8_t v107 = vdupq_lane_s16(*(int16x4_t *)v104.i8, 0);
      int16x8_t v108 = vdupq_lane_s16(v15, 0);
      int16x8_t v109 = vpmaxq_s16(v106, v106);
      int16x8_t v110 = vmaxq_s16(v101, v107);
      int16x8_t v111 = vminq_s16(v102, v108);
      int16x8_t v112 = vzip1q_s16(v107, v108);
      int8x16_t v113 = (int8x16_t)vceqzq_s16(v112);
      int16x8_t v114 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v112)), v113);
      int16x8_t v115 = vpmaxq_s16(v114, v114);
      v114.i16[0] = vmaxvq_s16((int16x8_t)v97);
      int16x8_t v116 = vdupq_lane_s16(*(int16x4_t *)v114.i8, 0);
      v113.i16[0] = vminvq_s16((int16x8_t)v97);
      int16x8_t v117 = vdupq_lane_s16(*(int16x4_t *)v113.i8, 0);
      int16x8_t v118 = vmaxq_s16(v110, v116);
      int16x8_t v119 = vminq_s16(v111, v117);
      int16x8_t v120 = vzip1q_s16(v116, v117);
      int8x16_t v121 = (int8x16_t)vceqzq_s16(v120);
      int16x8_t v122 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v120)), v121);
      int16x8_t v123 = vpmaxq_s16(v122, v122);
      v122.i16[0] = vmaxvq_s16((int16x8_t)v100);
      v121.i16[0] = vminvq_s16((int16x8_t)v100);
      int16x8_t v124 = vdupq_lane_s16(*(int16x4_t *)v122.i8, 0);
      int16x8_t v125 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      int16x8_t v126 = vmaxq_s16(v118, v124);
      int16x8_t v127 = vminq_s16(v119, v125);
      int16x8_t v128 = vzip1q_s16(v124, v125);
      int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v105, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
      int16x8_t v130 = vpmaxq_s16(v129, v129);
      int8x16_t v131 = (int8x16_t)vmaxq_s16(vmaxq_s16(v109, v115), vmaxq_s16(v123, v130));
      int16x8_t v132 = vclzq_s16(vsubq_s16(v126, v127));
      int8x16_t v133 = (int8x16_t)vsubq_s16(v105, v132);
      int8x16_t v134 = (int8x16_t)vcgtq_s16((int16x8_t)v131, (int16x8_t)v133);
      int8x16_t v135 = vbslq_s8(v134, v133, v131);
      int16x8_t v136 = vsubq_s16((int16x8_t)v135, v109);
      v109.i64[0] = 0x3000300030003;
      v109.i64[1] = 0x3000300030003;
      int16x8_t v137 = vmaxq_s16(vminq_s16(v136, v109), (int16x8_t)0);
      int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v115), v109), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v123), v109), (int16x8_t)0);
      int16x8_t v140 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v130), v109), (int16x8_t)0);
      int8x16_t v141 = (int8x16_t)vsubq_s16((int16x8_t)v135, v137);
      int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v135, v138);
      int8x16_t v143 = (int8x16_t)vsubq_s16((int16x8_t)v135, v139);
      int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v135, v140);
      int8x16_t v145 = vbicq_s8(v88, (int8x16_t)vceqq_s16(vaddq_s16(v140, v139), vnegq_s16(vaddq_s16(v137, v138))));
      v139.i64[0] = 0x7000700070007;
      v139.i64[1] = 0x7000700070007;
      int16x8_t v146 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v65, v66), vaddq_s16((int16x8_t)v81, (int16x8_t)v81)), (int16x8_t)v77, v139), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v79, (int16x8_t)v78), (int16x8_t)v80), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v133, v134), vaddq_s16((int16x8_t)v145, (int16x8_t)v145)), (int16x8_t)v141, v139), vshlq_n_s16(
                                            vaddq_s16(vaddq_s16((int16x8_t)v143, (int16x8_t)v142), (int16x8_t)v144),
                                            3uLL))),
               0);
      if (vaddvq_s16(v146))
      {
        v147.i64[0] = 0x2000200020002;
        v147.i64[1] = 0x2000200020002;
        int8x16_t v148 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v135), v147);
        v147.i64[0] = 0x9000900090009;
        v147.i64[1] = 0x9000900090009;
        v149.i64[0] = -1;
        v149.i64[1] = -1;
        int8x16_t v150 = vorrq_s8(vorrq_s8(v148, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v134, v147), (int16x8_t)vmvnq_s8(v134))), v145);
        v147.i64[0] = 0xF000F000F000FLL;
        v147.i64[1] = 0xF000F000F000FLL;
        int8x16_t v151 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v149, vsubq_s16((int16x8_t)v147, v132)), v127), v134);
        int8x16_t v152 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v146, 0xFuLL));
        v23.i16[0] = vbslq_s8(v152, vextq_s8(v20, v20, 0xEuLL), v23).u16[0];
        int8x16_t v28 = vbslq_s8(v152, v95, v28);
        int8x16_t v29 = vbslq_s8(v152, v96, v29);
        int16x8_t v30 = (int16x8_t)vbslq_s8(v152, v97, v290);
        int16x8_t v31 = (int16x8_t)vbslq_s8(v152, v100, v291);
        int8x16_t v77 = vbslq_s8(v152, v141, v77);
        int8x16_t v78 = vbslq_s8(v152, v142, v78);
        int8x16_t v79 = vbslq_s8(v152, v143, v79);
        int8x16_t v80 = vbslq_s8(v152, v144, v80);
        int8x16_t v71 = vbslq_s8(v152, v151, v71);
        int8x16_t v67 = vbslq_s8(v152, v135, v67);
        int8x16_t v82 = vbslq_s8(v152, v150, v82);
      }
      else
      {
        int16x8_t v30 = (int16x8_t)v290;
        int16x8_t v31 = (int16x8_t)v291;
      }
    }
    v154.i64[0] = 0x8000800080008;
    v154.i64[1] = 0x8000800080008;
    int16x8_t v155 = (int16x8_t)vandq_s8(v82, v154);
    v156.i64[0] = 0x3000300030003;
    v156.i64[1] = 0x3000300030003;
    v157.i64[0] = 0x2000200020002;
    v157.i64[1] = 0x2000200020002;
    int8x16_t v158 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v156), v157);
    v157.i64[0] = 0x10001000100010;
    v157.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(vbicq_s8(v67, (int8x16_t)vceqzq_s16(v155)).u16[0]
                                    + ((2 * v82.i16[0]) & 8)
                                    + vandq_s8(v158, (int8x16_t)v157).u16[0]
                                    - v77.i16[0]
                                    + 8 * v77.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v79, vaddq_s16((int16x8_t)v78, (int16x8_t)v80)).u16[0])
                          - 175) <= 0xFFFFFFFFFFFFFF37)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint16x8_t *)a3, a4, a5, a6, a7);
      return 24;
    }
    else
    {
      BOOL v159 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v160 = 8 * (a1 & 7);
      if (v160) {
        uint64_t v161 = *v159 & ~(-1 << v160);
      }
      else {
        uint64_t v161 = 0;
      }
      if (v67.i16[0]) {
        uint64_t v162 = (16 * v67.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v162 = 0;
      }
      *a2 = v82.i8[0] << 6;
      unint64_t v163 = (v162 & 0xFFFFFFFFFFFFFFF0 | ((unint64_t)(v23.i16[0] & 0xFFF) << 8) | v82.i8[0] & 0xF) >> 2;
      unint64_t v164 = (v163 << v160) | v161;
      if (v160 >= 0x2E)
      {
        *BOOL v159 = v164;
        unint64_t v164 = v163 >> (-8 * (a1 & 7u));
      }
      int8x16_t v165 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v77);
      int8x16_t v166 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v78);
      int8x16_t v167 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v79);
      int8x16_t v168 = (int8x16_t)vsubq_s16((int16x8_t)v67, (int16x8_t)v80);
      *(uint8x8_t *)v165.i8 = vqmovn_u16((uint16x8_t)v165);
      *(uint8x8_t *)v166.i8 = vqmovn_u16((uint16x8_t)v166);
      *(uint8x8_t *)v167.i8 = vqmovn_u16((uint16x8_t)v167);
      *(uint8x8_t *)v168.i8 = vqmovn_u16((uint16x8_t)v168);
      v165.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v165, v166), (int16x8_t)vzip1q_s8(v167, v168)).u32[0];
      unint64_t v169 = v160 + 18;
      v167.i64[0] = 0x202020202020202;
      v167.i64[1] = 0x202020202020202;
      int8x16_t v170 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v82.i8, (int8x8_t)0x4000400040004)))), v167);
      v167.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v167.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      uint8x16_t v172 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v171, (uint8x16_t)vorrq_s8(v170, v167)), (int8x16_t)v165.u32[0]);
      int16x8_t v173 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v170.i8);
      uint16x8_t v174 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v172.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v173)), (int16x8_t)vmovl_high_u8(v172));
      uint16x8_t v175 = (uint16x8_t)vpaddq_s16(v173, (int16x8_t)vmovl_high_u8((uint8x16_t)v170));
      int32x4_t v176 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v175.i8);
      int32x4_t v177 = (int32x4_t)vmovl_high_u16(v175);
      int32x4_t v178 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v174.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v176)), (int32x4_t)vshlq_u32(vmovl_high_u16(v174), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v177)));
      int32x4_t v179 = vpaddq_s32(v176, v177);
      v180.i64[0] = v178.u32[0];
      v180.i64[1] = v178.u32[1];
      uint64x2_t v181 = (uint64x2_t)v180;
      v180.i64[0] = v178.u32[2];
      v180.i64[1] = v178.u32[3];
      uint64x2_t v182 = (uint64x2_t)v180;
      v180.i64[0] = v179.u32[0];
      v180.i64[1] = v179.u32[1];
      int64x2_t v183 = v180;
      v180.i64[0] = v179.u32[2];
      v180.i64[1] = v179.u32[3];
      int64x2_t v184 = vpaddq_s64((int64x2_t)vshlq_u64(v181, (uint64x2_t)vzip1q_s64((int64x2_t)0, v183)), (int64x2_t)vshlq_u64(v182, (uint64x2_t)vzip1q_s64((int64x2_t)0, v180)));
      int64x2_t v185 = vpaddq_s64(v183, v180);
      uint64_t v186 = (v160 + 18) & 0x3A;
      unint64_t v187 = (v184.i64[0] << v186) | v164;
      if ((unint64_t)(v185.i64[0] + v186) >= 0x40)
      {
        *(void *)((char *)v159 + ((v169 >> 3) & 8)) = v187;
        unint64_t v187 = (unint64_t)v184.i64[0] >> -(char)v186;
      }
      int8x16_t v188 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v77);
      unint64_t v189 = v185.i64[0] + v169;
      uint64_t v190 = (v185.i64[0] + v169) & 0x3F;
      unint64_t v191 = v187 | (v184.i64[1] << (v185.i8[0] + v169));
      if ((unint64_t)(v190 + v185.i64[1]) >= 0x40)
      {
        *(void *)((char *)v159 + ((v189 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v191;
        unint64_t v191 = (unint64_t)v184.i64[1] >> -(char)v190;
        if (!v190) {
          unint64_t v191 = 0;
        }
      }
      int16x8_t v192 = (int16x8_t)vandq_s8(v71, v188);
      unint64_t v193 = v189 + v185.i64[1];
      v194.i64[0] = -1;
      v194.i64[1] = -1;
      int16x8_t v195 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v155, v155), (int8x16_t)0, 0xEuLL), v67);
      v196.i64[0] = 0xF000F000F000FLL;
      v196.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v197 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v194, (uint16x8_t)vaddq_s16(v195, v196)), v71);
      int32x4_t v198 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v195.i8);
      int32x4_t v199 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v197.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v198)), (int32x4_t)vmovl_high_u16(v197));
      int32x4_t v200 = vpaddq_s32(v198, (int32x4_t)vmovl_high_u16((uint16x8_t)v195));
      v201.i64[0] = v199.u32[0];
      v201.i64[1] = v199.u32[1];
      uint64x2_t v202 = (uint64x2_t)v201;
      v201.i64[0] = v199.u32[2];
      v201.i64[1] = v199.u32[3];
      uint64x2_t v203 = (uint64x2_t)v201;
      v201.i64[0] = v200.u32[0];
      v201.i64[1] = v200.u32[1];
      int64x2_t v204 = v201;
      v201.i64[0] = v200.u32[2];
      v201.i64[1] = v200.u32[3];
      int64x2_t v205 = vpaddq_s64((int64x2_t)vshlq_u64(v202, (uint64x2_t)vzip1q_s64((int64x2_t)0, v204)), (int64x2_t)vshlq_u64(v203, (uint64x2_t)vzip1q_s64((int64x2_t)0, v201)));
      int64x2_t v206 = vpaddq_s64(v204, v201);
      unint64_t v207 = (v205.i64[0] << v193) | v191;
      if (v206.i64[0] + (v193 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v193 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v207;
        unint64_t v207 = (unint64_t)v205.i64[0] >> -(v193 & 0x3F);
        if ((v193 & 0x3F) == 0) {
          unint64_t v207 = 0;
        }
      }
      int8x16_t v208 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v78);
      int8x16_t v209 = (int8x16_t)vaddq_s16(v192, (int16x8_t)v28);
      unint64_t v210 = v206.i64[0] + v193;
      unint64_t v211 = v207 | (v205.i64[1] << v210);
      if ((v210 & 0x3F) + v206.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v210 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v211;
        unint64_t v211 = (unint64_t)v205.i64[1] >> -(v210 & 0x3F);
        if ((v210 & 0x3F) == 0) {
          unint64_t v211 = 0;
        }
      }
      int16x8_t v212 = (int16x8_t)vandq_s8(v71, v208);
      unint64_t v213 = v210 + v206.i64[1];
      int16x8_t v214 = (int16x8_t)vextq_s8((int8x16_t)0, v77, 0xEuLL);
      v215.i64[0] = 0xF000F000F000FLL;
      v215.i64[1] = 0xF000F000F000FLL;
      v216.i64[0] = -1;
      v216.i64[1] = -1;
      uint16x8_t v217 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v216, (uint16x8_t)vaddq_s16(v214, v215)), v209);
      int32x4_t v218 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v214.i8);
      int32x4_t v219 = (int32x4_t)vmovl_high_u16((uint16x8_t)v214);
      int32x4_t v220 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v217.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v218)), (int32x4_t)vshlq_u32(vmovl_high_u16(v217), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v219)));
      int32x4_t v221 = vpaddq_s32(v218, v219);
      v222.i64[0] = v220.u32[0];
      v222.i64[1] = v220.u32[1];
      uint64x2_t v223 = (uint64x2_t)v222;
      v222.i64[0] = v220.u32[2];
      v222.i64[1] = v220.u32[3];
      uint64x2_t v224 = (uint64x2_t)v222;
      v222.i64[0] = v221.u32[0];
      v222.i64[1] = v221.u32[1];
      int64x2_t v225 = v222;
      v222.i64[0] = v221.u32[2];
      v222.i64[1] = v221.u32[3];
      int64x2_t v226 = vpaddq_s64((int64x2_t)vshlq_u64(v223, (uint64x2_t)vzip1q_s64((int64x2_t)0, v225)), (int64x2_t)vshlq_u64(v224, (uint64x2_t)vzip1q_s64((int64x2_t)0, v222)));
      int64x2_t v227 = vpaddq_s64(v225, v222);
      unint64_t v228 = (v226.i64[0] << v213) | v211;
      if (v227.i64[0] + (v213 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v213 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v228;
        unint64_t v228 = (unint64_t)v226.i64[0] >> -(v213 & 0x3F);
        if ((v213 & 0x3F) == 0) {
          unint64_t v228 = 0;
        }
      }
      int8x16_t v229 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v79);
      int8x16_t v230 = (int8x16_t)vaddq_s16((int16x8_t)v29, v212);
      unint64_t v231 = v227.i64[0] + v213;
      unint64_t v232 = v228 | (v226.i64[1] << v231);
      if ((v231 & 0x3F) + v227.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v231 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v232;
        unint64_t v232 = (unint64_t)v226.i64[1] >> -(v231 & 0x3F);
        if ((v231 & 0x3F) == 0) {
          unint64_t v232 = 0;
        }
      }
      int16x8_t v233 = (int16x8_t)vandq_s8(v71, v229);
      unint64_t v234 = v231 + v227.i64[1];
      v235.i64[0] = 0xF000F000F000FLL;
      v235.i64[1] = 0xF000F000F000FLL;
      v236.i64[0] = -1;
      v236.i64[1] = -1;
      uint16x8_t v237 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v236, (uint16x8_t)vaddq_s16((int16x8_t)v78, v235)), v230);
      int32x4_t v238 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v239 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v240 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v237.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v238)), (int32x4_t)vshlq_u32(vmovl_high_u16(v237), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v239)));
      int32x4_t v241 = vpaddq_s32(v238, v239);
      v242.i64[0] = v240.u32[0];
      v242.i64[1] = v240.u32[1];
      uint64x2_t v243 = (uint64x2_t)v242;
      v242.i64[0] = v240.u32[2];
      v242.i64[1] = v240.u32[3];
      uint64x2_t v244 = (uint64x2_t)v242;
      v242.i64[0] = v241.u32[0];
      v242.i64[1] = v241.u32[1];
      int64x2_t v245 = v242;
      v242.i64[0] = v241.u32[2];
      v242.i64[1] = v241.u32[3];
      int64x2_t v246 = vpaddq_s64((int64x2_t)vshlq_u64(v243, (uint64x2_t)vzip1q_s64((int64x2_t)0, v245)), (int64x2_t)vshlq_u64(v244, (uint64x2_t)vzip1q_s64((int64x2_t)0, v242)));
      int64x2_t v247 = vpaddq_s64(v245, v242);
      unint64_t v248 = (v246.i64[0] << v234) | v232;
      if (v247.i64[0] + (v234 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v234 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v248;
        unint64_t v248 = (unint64_t)v246.i64[0] >> -(v234 & 0x3F);
        if ((v234 & 0x3F) == 0) {
          unint64_t v248 = 0;
        }
      }
      int8x16_t v249 = (int8x16_t)vceqq_s16((int16x8_t)v67, (int16x8_t)v80);
      int8x16_t v250 = (int8x16_t)vaddq_s16(v30, v233);
      unint64_t v251 = v247.i64[0] + v234;
      unint64_t v252 = v248 | (v246.i64[1] << v251);
      if ((v251 & 0x3F) + v247.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v251 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v252;
        unint64_t v252 = (unint64_t)v246.i64[1] >> -(v251 & 0x3F);
        if ((v251 & 0x3F) == 0) {
          unint64_t v252 = 0;
        }
      }
      int16x8_t v253 = (int16x8_t)vandq_s8(v71, v249);
      unint64_t v254 = v251 + v247.i64[1];
      v255.i64[0] = 0xF000F000F000FLL;
      v255.i64[1] = 0xF000F000F000FLL;
      v256.i64[0] = -1;
      v256.i64[1] = -1;
      uint16x8_t v257 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v256, (uint16x8_t)vaddq_s16((int16x8_t)v79, v255)), v250);
      int32x4_t v258 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v259 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v260 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v257.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v258)), (int32x4_t)vshlq_u32(vmovl_high_u16(v257), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v259)));
      int32x4_t v261 = vpaddq_s32(v258, v259);
      v262.i64[0] = v260.u32[0];
      v262.i64[1] = v260.u32[1];
      uint64x2_t v263 = (uint64x2_t)v262;
      v262.i64[0] = v260.u32[2];
      v262.i64[1] = v260.u32[3];
      uint64x2_t v264 = (uint64x2_t)v262;
      v262.i64[0] = v261.u32[0];
      v262.i64[1] = v261.u32[1];
      int64x2_t v265 = v262;
      v262.i64[0] = v261.u32[2];
      v262.i64[1] = v261.u32[3];
      int64x2_t v266 = vpaddq_s64((int64x2_t)vshlq_u64(v263, (uint64x2_t)vzip1q_s64((int64x2_t)0, v265)), (int64x2_t)vshlq_u64(v264, (uint64x2_t)vzip1q_s64((int64x2_t)0, v262)));
      int64x2_t v267 = vpaddq_s64(v265, v262);
      unint64_t v268 = (v266.i64[0] << v254) | v252;
      if (v267.i64[0] + (v254 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v159 + ((v254 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v268;
        unint64_t v268 = (unint64_t)v266.i64[0] >> -(v254 & 0x3F);
        if ((v254 & 0x3F) == 0) {
          unint64_t v268 = 0;
        }
      }
      int8x16_t v269 = (int8x16_t)vaddq_s16(v31, v253);
      unint64_t v270 = v267.i64[0] + v254;
      unint64_t v271 = v268 | (v266.i64[1] << v270);
      if ((v270 & 0x3F) + v267.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v270 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v271;
        unint64_t v271 = (unint64_t)v266.i64[1] >> -(v270 & 0x3F);
        if ((v270 & 0x3F) == 0) {
          unint64_t v271 = 0;
        }
      }
      unint64_t v272 = v270 + v267.i64[1];
      v273.i64[0] = 0xF000F000F000FLL;
      v273.i64[1] = 0xF000F000F000FLL;
      v274.i64[0] = -1;
      v274.i64[1] = -1;
      uint16x8_t v275 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v274, (uint16x8_t)vaddq_s16((int16x8_t)v80, v273)), v269);
      int32x4_t v276 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v80.i8);
      int32x4_t v277 = (int32x4_t)vmovl_high_u16((uint16x8_t)v80);
      int32x4_t v278 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v275.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v276)), (int32x4_t)vshlq_u32(vmovl_high_u16(v275), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v277)));
      int32x4_t v279 = vpaddq_s32(v276, v277);
      v280.i64[0] = v278.u32[0];
      v280.i64[1] = v278.u32[1];
      uint64x2_t v281 = (uint64x2_t)v280;
      v280.i64[0] = v278.u32[2];
      v280.i64[1] = v278.u32[3];
      uint64x2_t v282 = (uint64x2_t)v280;
      v280.i64[0] = v279.u32[0];
      v280.i64[1] = v279.u32[1];
      int64x2_t v283 = v280;
      v280.i64[0] = v279.u32[2];
      v280.i64[1] = v279.u32[3];
      int64x2_t v284 = vpaddq_s64((int64x2_t)vshlq_u64(v281, (uint64x2_t)vzip1q_s64((int64x2_t)0, v283)), (int64x2_t)vshlq_u64(v282, (uint64x2_t)vzip1q_s64((int64x2_t)0, v280)));
      int64x2_t v285 = vpaddq_s64(v283, v280);
      unint64_t v286 = (v284.i64[0] << v272) | v271;
      if (v285.i64[0] + (v272 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v159 + ((v272 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
        if ((v272 & 0x3F) != 0) {
          unint64_t v286 = (unint64_t)v284.i64[0] >> -(v272 & 0x3F);
        }
        else {
          unint64_t v286 = 0;
        }
      }
      unint64_t v287 = v285.i64[0] + v272;
      unint64_t v288 = v286 | (v284.i64[1] << v287);
      if ((v287 & 0x3F) + v285.i64[1] >= 0x40)
      {
        *(void *)((char *)v159 + ((v287 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v288;
        unint64_t v288 = (unint64_t)v284.i64[1] >> -(v287 & 0x3F);
        if ((v287 & 0x3F) == 0) {
          unint64_t v288 = 0;
        }
      }
      unint64_t v289 = v287 + v285.i64[1];
      if ((v289 & 0x3F) != 0) {
        *(void *)((char *)v159 + ((v289 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v288;
      }
      unint64_t result = (v289 - v160 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = (unsigned __int16)a3->i16[0] >> 4;
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v11 = a6;
  if (a5 >= 8)
  {
    uint64_t v14 = 0;
    int16x4_t v15 = &v45;
    int16x4_t v16 = (char *)&v43 + ((8 * a5) & 0x7C0);
    do
    {
      int32x4_t v17 = v15;
      __int16 v18 = a3;
      uint64_t v19 = a5 & 0xF8;
      do
      {
        uint16x8_t v20 = *v18++;
        uint16x8_t v21 = vshrq_n_u16(v20, 4uLL);
        *((_WORD *)v17 - 16) = v21.i16[0];
        *((_WORD *)v17 - 12) = v21.i16[1];
        *((_WORD *)v17 - 8) = v21.i16[2];
        *((_WORD *)v17 - 4) = v21.i16[3];
        *(_WORD *)int32x4_t v17 = v21.i16[4];
        *((_WORD *)v17 + 4) = v21.i16[5];
        *((_WORD *)v17 + 8) = v21.i16[6];
        *((_WORD *)v17 + 12) = v21.i16[7];
        v17 += 4;
        v19 -= 8;
      }
      while (v19);
      if ((a5 & 0xF8) != (unint64_t)a5)
      {
        int16x8_t v22 = v16;
        uint64_t v23 = a5 & 0xF8;
        do
        {
          _WORD *v22 = (unsigned __int16)a3->i16[v23] >> 4;
          v22 += 4;
          ++v23;
        }
        while (a5 != v23);
      }
      ++v14;
      a3 = (uint16x8_t *)((char *)a3 + a4);
      int16x4_t v15 = (long long *)((char *)v15 + 2);
      v16 += 2;
    }
    while (v14 != a6);
  }
  else
  {
    int v12 = &a3->i16[3];
    int v13 = (_WORD *)&v44 + 4;
    do
    {
      *(v13 - 12) = (unsigned __int16)*(v12 - 3) >> 4;
      if (a5 != 1)
      {
        *(v13 - 8) = (unsigned __int16)*(v12 - 2) >> 4;
        if (a5 != 2)
        {
          *(v13 - 4) = (unsigned __int16)*(v12 - 1) >> 4;
          if (a5 != 3)
          {
            *int v13 = (unsigned __int16)*v12 >> 4;
            if (a5 != 4)
            {
              v13[4] = (unsigned __int16)v12[1] >> 4;
              if (a5 != 5)
              {
                v13[8] = (unsigned __int16)v12[2] >> 4;
                if (a5 != 6) {
                  v13[12] = (unsigned __int16)v12[3] >> 4;
                }
              }
            }
          }
        }
      }
      int v12 = (__int16 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  v38.i32[0] = (unsigned __int16)v43;
  v38.i32[1] = WORD4(v43);
  v38.i32[2] = WORD1(v43);
  v38.i32[3] = WORD5(v43);
  int v39 = (unsigned __int16)v44;
  int v40 = WORD4(v44);
  if (a5 >= 4) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = a5;
  }
  if (a5 >= 4) {
    unsigned int v25 = a5 - 4;
  }
  else {
    unsigned int v25 = 0;
  }
  int v41 = WORD1(v44);
  int v42 = WORD5(v44);
  if (a6 >= 2) {
    unsigned int v26 = 2;
  }
  else {
    unsigned int v26 = a6;
  }
  if (a6 >= 2) {
    unsigned int v27 = a6 - 2;
  }
  else {
    unsigned int v27 = 0;
  }
  char v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v38, a7, v24, v26);
  v38.i32[0] = WORD2(v43);
  v38.i32[1] = WORD6(v43);
  v38.i32[2] = WORD3(v43);
  v38.i32[3] = HIWORD(v43);
  int v39 = WORD2(v44);
  int v40 = WORD6(v44);
  int v41 = WORD3(v44);
  int v42 = HIWORD(v44);
  if (a6 >= 4) {
    unsigned int v29 = 2;
  }
  else {
    unsigned int v29 = v27;
  }
  int v30 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 6, &v38, a7, v24, v29);
  v38.i32[0] = (unsigned __int16)v45;
  v38.i32[1] = WORD4(v45);
  v38.i32[2] = WORD1(v45);
  v38.i32[3] = WORD5(v45);
  int v39 = (unsigned __int16)v46;
  int v40 = WORD4(v46);
  if (a5 >= 8) {
    unsigned int v31 = 4;
  }
  else {
    unsigned int v31 = v25;
  }
  int v41 = WORD1(v46);
  int v42 = WORD5(v46);
  int v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 12, &v38, a7, v31, v26);
  v38.i32[0] = WORD2(v45);
  v38.i32[1] = WORD6(v45);
  v38.i32[2] = WORD3(v45);
  v38.i32[3] = HIWORD(v45);
  int v39 = WORD2(v46);
  int v40 = WORD6(v46);
  int v41 = WORD3(v46);
  int v42 = HIWORD(v46);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 18, &v38, a7, v31, v29);
  if (v32) {
    char v34 = 4;
  }
  else {
    char v34 = 0;
  }
  if (v30) {
    char v35 = 2;
  }
  else {
    char v35 = 0;
  }
  if (result) {
    char v36 = -8;
  }
  else {
    char v36 = -16;
  }
  *a2 = v36 | v34 | v28 | v35;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(uint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v119 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v8.i64[0] = 0x80000000800;
    v8.i64[1] = 0x80000000800;
    int8x16_t v9 = veorq_s8(*a2, v8);
    v10.i64[0] = 0x100000001;
    v10.i64[1] = 0x100000001;
    int8x16_t v6 = vbicq_s8(v9, (int8x16_t)vceqq_s32((int32x4_t)v9, v10));
    int8x16_t v11 = veorq_s8(a2[1], v8);
    int8x16_t v7 = vbicq_s8(v11, (int8x16_t)vceqq_s32((int32x4_t)v11, v10));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v5.i64[0] = 0x80000000800;
    v5.i64[1] = 0x80000000800;
    int8x16_t v6 = veorq_s8(*a2, v5);
    int8x16_t v7 = veorq_s8(a2[1], v5);
LABEL_5:
    int8x16_t v117 = v6;
    int8x16_t v118 = v7;
    unsigned int v12 = v6.i32[0];
    goto LABEL_7;
  }
  int8x16_t v13 = a2[1];
  int8x16_t v117 = *a2;
  int8x16_t v118 = v13;
  unsigned int v12 = v117.i32[0];
LABEL_7:
  if (a5) {
    BOOL v14 = a4 >= 2;
  }
  else {
    BOOL v14 = 0;
  }
  int v15 = !v14;
  if (v14)
  {
    unsigned int v17 = v117.u32[1];
    unsigned int v16 = v117.i32[1] < v12;
    if (v117.i32[1] >= v12) {
      unsigned int v18 = v12;
    }
    else {
      unsigned int v18 = v117.u32[1];
    }
    if (v12 > v117.i32[1]) {
      unsigned int v17 = v12;
    }
  }
  else
  {
    unsigned int v16 = 0;
    unsigned int v17 = v12;
    unsigned int v18 = v12;
  }
  BOOL v19 = a5 < 2 || a4 == 0;
  int v20 = v19;
  if (!v19)
  {
    if (v117.i32[2] < v18)
    {
      unsigned int v16 = 2;
      unsigned int v18 = v117.u32[2];
    }
    if (v17 <= v117.i32[2]) {
      unsigned int v17 = v117.u32[2];
    }
  }
  BOOL v21 = a5 >= 2 && a4 >= 2;
  int v22 = !v21;
  if (v21)
  {
    if (v117.i32[3] < v18)
    {
      unsigned int v16 = 3;
      unsigned int v18 = v117.u32[3];
    }
    if (v17 <= v117.i32[3]) {
      unsigned int v17 = v117.u32[3];
    }
  }
  if (a5) {
    BOOL v23 = a4 >= 3;
  }
  else {
    BOOL v23 = 0;
  }
  int v24 = !v23;
  if (v23)
  {
    if (v118.i32[0] < v18)
    {
      unsigned int v16 = 4;
      unsigned int v18 = v118.i32[0];
    }
    if (v17 <= v118.i32[0]) {
      unsigned int v17 = v118.i32[0];
    }
  }
  if (a5) {
    BOOL v25 = a4 >= 4;
  }
  else {
    BOOL v25 = 0;
  }
  int v26 = !v25;
  if (v25)
  {
    if (v118.i32[1] < v18)
    {
      unsigned int v16 = 5;
      unsigned int v18 = v118.u32[1];
    }
    if (v17 <= v118.i32[1]) {
      unsigned int v17 = v118.u32[1];
    }
  }
  BOOL v27 = a5 >= 2 && a4 >= 3;
  int v28 = !v27;
  if (v27)
  {
    if (v118.i32[2] < v18)
    {
      unsigned int v16 = 6;
      unsigned int v18 = v118.u32[2];
    }
    if (v17 <= v118.i32[2]) {
      unsigned int v17 = v118.u32[2];
    }
  }
  BOOL v29 = a5 >= 2 && a4 >= 4;
  int v30 = !v29;
  if (v29)
  {
    if (v118.i32[3] < v18)
    {
      unsigned int v16 = 7;
      unsigned int v18 = v118.u32[3];
    }
    if (v17 <= v118.i32[3]) {
      unsigned int v17 = v118.u32[3];
    }
  }
  unsigned int v31 = v17 - v18;
  unsigned int v32 = __clz(v17 - v18);
  int v33 = 32 - v32;
  if ((int)(32 - v32) <= 2) {
    int v33 = 2;
  }
  unsigned int v34 = v33 - 2;
  if ((v32 & 0x3C) == 0x1C) {
    unsigned int v34 = 2;
  }
  if (v34 < 3 && v17 == v18) {
    unsigned int v34 = v17 != 0;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v36 = 0;
    if (v18 <= 0x7FF && v17 >= 0x800) {
      BOOL v36 = kDQuadParamTable[10 * v34 + 328] == 0;
    }
  }
  else
  {
    BOOL v36 = 0;
  }
  if (v34 > 6 || v36)
  {
    unsigned int v38 = kDQuadParamTable[10 * v34 + 324];
    int v39 = v36 ? 0 : -2;
    int v40 = v38 >= 0xC ? 0 : v18 & ~(-1 << (12 - v38));
    int v41 = v40 + v39;
    if (v41 >= 1 && __clz(v41 + v31) < v32) {
      ++v34;
    }
  }
  uint64_t v44 = (uint64_t)&kDQuadParamTable[10 * v34];
  unint64_t v42 = *(void *)(v44 + 1288);
  LODWORD(v43) = *(_DWORD *)(v44 + 1296);
  LODWORD(v44) = *(_DWORD *)(v44 + 1300);
  if (a4) {
    BOOL v45 = a5 == 0;
  }
  else {
    BOOL v45 = 1;
  }
  int v46 = v45;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v47 = a4 == 0;
    }
    else {
      BOOL v47 = 1;
    }
    int v48 = !v47;
  }
  else
  {
    int v48 = 0;
  }
  unint64_t v49 = 0;
  unsigned int v50 = 0;
  if (v42 >> v44 > 0x40) {
    int v51 = 1;
  }
  else {
    int v51 = v48;
  }
  memset(v114, 0, sizeof(v114));
  int v115 = 0;
  if (v44 >= 0xC) {
    uint64_t v44 = 12;
  }
  else {
    uint64_t v44 = v44;
  }
  if (v43 >= 0xC) {
    uint64_t v43 = 12;
  }
  else {
    uint64_t v43 = v43;
  }
  unsigned int v52 = v18 & (-1 << (12 - v43));
  unsigned int v53 = v12 - v52;
  if (v46) {
    unsigned int v53 = 0;
  }
  BOOL v19 = v15 == 0;
  unsigned __int32 v54 = v117.i32[1] - v52;
  if (!v19) {
    unsigned __int32 v54 = 0;
  }
  v116[0] = v53;
  v116[1] = v54;
  unint64_t v55 = v16;
  unint64_t v56 = v42 >> v44;
  unsigned __int32 v57 = v117.i32[2] - v52;
  if (v20) {
    unsigned __int32 v57 = 0;
  }
  unsigned __int32 v58 = v117.i32[3] - v52;
  if (v22) {
    unsigned __int32 v58 = 0;
  }
  v116[2] = v57;
  v116[3] = v58;
  unsigned __int32 v59 = v118.i32[0] - v52;
  if (v24) {
    unsigned __int32 v59 = 0;
  }
  unsigned __int32 v60 = v118.i32[1] - v52;
  if (v26) {
    unsigned __int32 v60 = 0;
  }
  v116[4] = v59;
  v116[5] = v60;
  unsigned __int32 v61 = v118.i32[2] - v52;
  if (v28) {
    unsigned __int32 v61 = 0;
  }
  unsigned __int32 v62 = v118.i32[3] - v52;
  if (v30) {
    unsigned __int32 v62 = 0;
  }
  v116[6] = v61;
  v116[7] = v62;
  if (v56 <= 1) {
    unint64_t v63 = 1;
  }
  else {
    unint64_t v63 = v42 >> v44;
  }
  uint64_t v64 = 4 * v16;
  int8x16_t v65 = &byte_242EA911D;
  do
  {
    if (v64 != v49)
    {
      if (v44) {
        unint64_t v66 = v116[v49 / 4] / v63;
      }
      else {
        LODWORD(v66) = 0;
      }
      *((_DWORD *)v114 + v50) = v66;
      if (v56 >= 2)
      {
        unint64_t v67 = v116[v49 / 4];
        if (v67)
        {
          if (v67 / v63 * v63 == v67 && ((v67 / v63) & 1) != 0)
          {
            if (v52 || v66 != 1)
            {
              if ((a3 | 2) != 3
                || (uint64_t v69 = v117.u32[v49 / 4], v69 != 2048) && ((a3 | 2) != 3 || v63 + 2048 != v69))
              {
                LODWORD(v66) = v66 - 1;
                *((_DWORD *)v114 + v50) = v66;
              }
            }
            else
            {
              LODWORD(v66) = 1;
            }
          }
        }
      }
      if ((unint64_t)v66 >> v44 || v117.i32[v49 / 4] == 4095) {
        *((_DWORD *)v114 + v50) = ~(-1 << v44);
      }
      if (*v65 >= a5 || *(v65 - 1) >= a4) {
        *((_DWORD *)v114 + v50) = 0;
      }
      ++v50;
    }
    v49 += 4;
    v65 += 2;
  }
  while (v49 != 32);
  int16x8_t v70 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v71 = 8 * (a1 & 7);
  *(_WORD *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
  if ((v51 | v46) == 1)
  {
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v74 = 8 * (a1 & 7);
    do
    {
      int16x8_t v75 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v72;
      if (v75[1] >= a5 || *v75 >= a4) {
        unint64_t v77 = 0;
      }
      else {
        unint64_t v77 = (unint64_t)v117.u32[v72] >> 6;
      }
      if ((unint64_t)(v74 - v71 + (v73 << 6) - 43) >= 0xFFFFFFFFFFFFFFCFLL)
      {
        uint64_t v78 = 0;
        unint64_t v79 = 6;
        do
        {
          unint64_t v80 = 64 - v74;
          if (64 - v74 >= v79) {
            unint64_t v80 = v79;
          }
          v70[v73] |= ((v77 >> v78) & ~(-1 << v80)) << v74;
          v78 += v80;
          unint64_t v81 = v80 + v74;
          v73 += v81 >> 6;
          uint64_t v74 = v81 & 0x3F;
          v79 -= v80;
        }
        while (v79);
      }
      ++v72;
    }
    while (v72 != 8);
    return v51 | v46;
  }
  if (v34 < 4)
  {
    uint64_t v83 = v71 | 3;
    if ((v71 | 3uLL) - v71 <= 0x2E)
    {
      uint64_t v82 = 0;
      uint64_t v85 = 0;
      unint64_t v86 = 2;
      do
      {
        unint64_t v87 = 64 - v83;
        if (64 - v83 >= v86) {
          unint64_t v87 = v86;
        }
        v70[v82] |= (((unint64_t)v34 >> v85) & ~(-1 << v87)) << v83;
        v85 += v87;
        unint64_t v88 = v87 + v83;
        v82 += v88 >> 6;
        uint64_t v83 = v88 & 0x3F;
        v86 -= v87;
      }
      while (v86);
    }
    else
    {
      uint64_t v82 = 0;
    }
    int v84 = 5;
    if (!v34) {
      goto LABEL_219;
    }
  }
  else
  {
    uint64_t v82 = 0;
    *v70 |= (unint64_t)(((_BYTE)v34 + 5) & 7) << v71;
    uint64_t v83 = v71 | 3;
    int v84 = 3;
  }
  if (v43 && (unint64_t)(v43 - v71 + v83 + (v82 << 6)) <= 0x30)
  {
    uint64_t v89 = 0;
    unint64_t v90 = v43;
    do
    {
      unint64_t v91 = 64 - v83;
      if (64 - v83 >= v90) {
        unint64_t v91 = v90;
      }
      v70[v82] |= (((unint64_t)(v52 >> (12 - v43)) >> v89) & ~(-1 << v91)) << v83;
      v89 += v91;
      unint64_t v92 = v91 + v83;
      v82 += v92 >> 6;
      uint64_t v83 = v92 & 0x3F;
      v90 -= v91;
    }
    while (v90);
  }
  v84 += v43;
LABEL_219:
  if (v44)
  {
    if ((unint64_t)(v83 - v71 + (v82 << 6) + 3) <= 0x30)
    {
      uint64_t v93 = 0;
      unint64_t v94 = 3;
      do
      {
        unint64_t v95 = 64 - v83;
        if (64 - v83 >= v94) {
          unint64_t v95 = v94;
        }
        v70[v82] |= ((v55 >> v93) & ~(-1 << v95)) << v83;
        v93 += v95;
        unint64_t v96 = v95 + v83;
        v82 += v96 >> 6;
        uint64_t v83 = v96 & 0x3F;
        v94 -= v95;
      }
      while (v94);
    }
    v84 += 3;
  }
  unsigned int v97 = (((37 * (48 - v84)) >> 8)
       + (((48 - v84 - ((unsigned __int16)(37 * (48 - v84)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v98 = -7 * v97 + 48 - v84;
  if ((v98 - 257) >= 0xFFFFFF00 && v83 - v71 + (v82 << 6) + v98 <= 0x30)
  {
    do
    {
      unint64_t v99 = 64 - v83;
      if (64 - v83 >= v98) {
        unint64_t v99 = v98;
      }
      unint64_t v100 = v99 + v83;
      v82 += v100 >> 6;
      uint64_t v83 = v100 & 0x3F;
      v98 -= v99;
    }
    while (v98);
  }
  uint64_t v101 = 0;
  unint64_t v102 = v97 - v44;
  if (v102) {
    BOOL v103 = v102 > 0x100;
  }
  else {
    BOOL v103 = 1;
  }
  char v104 = v103;
  do
  {
    if (v44 && (unint64_t)(v44 - v71 + v83 + (v82 << 6)) <= 0x30)
    {
      uint64_t v105 = 0;
      unint64_t v106 = *((unsigned int *)v114 + v101);
      unint64_t v107 = v44;
      do
      {
        unint64_t v108 = 64 - v83;
        if (64 - v83 >= v107) {
          unint64_t v108 = v107;
        }
        v70[v82] |= ((v106 >> v105) & ~(-1 << v108)) << v83;
        v105 += v108;
        unint64_t v109 = v108 + v83;
        v82 += v109 >> 6;
        uint64_t v83 = v109 & 0x3F;
        v107 -= v108;
      }
      while (v107);
    }
    if ((v104 & 1) == 0 && v83 - v71 + (v82 << 6) + v102 <= 0x30)
    {
      unint64_t v110 = v102;
      do
      {
        unint64_t v111 = 64 - v83;
        if (64 - v83 >= v110) {
          unint64_t v111 = v110;
        }
        unint64_t v112 = v111 + v83;
        v82 += v112 >> 6;
        uint64_t v83 = v112 & 0x3F;
        v110 -= v111;
      }
      while (v110);
    }
    ++v101;
  }
  while (v101 != 7);
  return v51 | v46;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)2,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)2,(AGXTextureFootprint)3>::decompressSubblock(uint64_t a1, uint64_t a2, int32x4_t *a3, unsigned int a4, int a5, double a6, double a7, double a8, int8x8_t a9)
{
  uint64_t v465 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t v190 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    unint64_t v191 = (void *)(a1 + a2);
    *unint64_t v191 = 0;
    v191[1] = 0;
    int16x8_t v192 = (void *)(a1 + 2 * a2);
    *int16x8_t v192 = 0;
    v192[1] = 0;
    unint64_t v193 = (void *)(a1 + a2 + 2 * a2);
LABEL_302:
    *unint64_t v193 = 0;
    v193[1] = 0;
    return v190;
  }
  if (a4 >= 0xF0)
  {
    uint64_t v9 = 0;
    unsigned int v10 = a5 & 0xFFFFFFFD;
    int v423 = a3;
    unsigned int v422 = a4;
    while (1)
    {
      unint64_t v28 = (unint64_t)a3 + 6 * v9;
      BOOL v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v30 = 8 * (v28 & 7);
      if (((a4 >> v9) & 1) == 0) {
        break;
      }
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = v30;
      do
      {
        if ((unint64_t)(v33 - v30 + (v32 << 6) - 43) < 0xFFFFFFFFFFFFFFCFLL)
        {
          char v34 = 0;
        }
        else
        {
          char v34 = 0;
          uint64_t v38 = 0;
          unint64_t v39 = 6;
          do
          {
            if (64 - v33 >= v39) {
              unint64_t v40 = v39;
            }
            else {
              unint64_t v40 = 64 - v33;
            }
            v34 |= (unint64_t)((v29[v32] >> v33) & ~(-1 << v40)) << v38;
            v38 += v40;
            unint64_t v41 = v40 + v33;
            v32 += v41 >> 6;
            uint64_t v33 = v41 & 0x3F;
            v39 -= v40;
          }
          while (v39);
        }
        int v35 = (v34 & 0x3F) << 6;
        int v36 = v35 - (v34 & 1) + 32;
        if (v35 == 4032) {
          int v36 = 4095;
        }
        if (!v35) {
          int v36 = 0;
        }
        if (v35 == 2048 && v10 == 1) {
          int v36 = v35;
        }
        if (a5 == 4) {
          int v36 = v35;
        }
        *(&v424 + v31++) = v36 ^ (((a5 & 0xFFFFFFFD) == 1) << 11);
      }
      while (v31 != 8);
      LOWORD(v11) = v424;
      LOWORD(v12) = v425;
      LOWORD(v14) = v426;
      LOWORD(v13) = v427;
      LOWORD(v15) = v428;
      LOWORD(v16) = v429;
      __int16 v18 = v430;
      __int16 v17 = v431;
LABEL_5:
      BOOL v19 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v9;
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      int v22 = &v432 + v20;
      uint64_t v23 = 2 * v21;
      *(_WORD *)((char *)v22 + v23) = v11;
      int v24 = &v432 + (v20 + 1);
      *(_WORD *)((char *)v24 + v23) = v12;
      uint64_t v25 = 2 * (v21 + 1);
      *(_WORD *)((char *)v22 + v25) = v14;
      *(_WORD *)((char *)v24 + v25) = v13;
      int v26 = &v432 + (v20 + 2);
      *(_WORD *)((char *)v26 + v23) = v15;
      BOOL v27 = &v432 + (v20 + 3);
      *(_WORD *)((char *)v27 + v23) = v16;
      *(_WORD *)((char *)v26 + v25) = v18;
      *(_WORD *)((char *)v27 + v25) = v17;
      if (++v9 == 4)
      {
        *(_WORD *)a1 = 16 * v432;
        *(_WORD *)(a1 + 2) = 16 * v433;
        *(_WORD *)(a1 + 4) = 16 * v437;
        *(_WORD *)(a1 + 6) = 16 * v441;
        *(_WORD *)(a1 + 8) = 16 * v445;
        *(_WORD *)(a1 + 10) = 16 * v449;
        *(_WORD *)(a1 + 12) = 16 * v453;
        *(_WORD *)(a1 + 14) = 16 * v457;
        int16x8_t v195 = (_WORD *)(a1 + a2);
        *int16x8_t v195 = 16 * WORD1(v432);
        v195[1] = 16 * v434;
        v195[2] = 16 * v438;
        v195[3] = 16 * v442;
        v195[4] = 16 * v446;
        v195[5] = 16 * v450;
        v195[6] = 16 * v454;
        v195[7] = 16 * v458;
        int16x8_t v196 = (_WORD *)(a1 + a2 + a2);
        *int16x8_t v196 = 16 * WORD2(v432);
        v196[1] = 16 * v435;
        v196[2] = 16 * v439;
        v196[3] = 16 * v443;
        v196[4] = 16 * v447;
        v196[5] = 16 * v451;
        v196[6] = 16 * v455;
        v196[7] = 16 * v459;
        uint16x8_t v197 = (_WORD *)((char *)v196 + a2);
        *uint16x8_t v197 = 16 * HIWORD(v432);
        v197[1] = 16 * v436;
        v197[2] = 16 * v440;
        v197[3] = 16 * v444;
        v197[4] = 16 * v448;
        v197[5] = 16 * v452;
        v197[6] = 16 * v456;
        uint64_t v190 = 24;
        v197[7] = 16 * v460;
        return v190;
      }
    }
    uint64_t v42 = v30 | 3;
    if (((*v29 >> v30) & 7) != 0)
    {
      uint64_t v43 = 0;
      int v44 = 0;
      int v45 = ((*v29 >> v30) & 7) + 3;
      int v46 = 3;
    }
    else
    {
      if ((unint64_t)(v42 - v30) <= 0x2E)
      {
        uint64_t v43 = 0;
        char v47 = 0;
        uint64_t v48 = 0;
        unint64_t v49 = 2;
        do
        {
          unint64_t v50 = 64 - v42;
          if (64 - v42 >= v49) {
            unint64_t v50 = v49;
          }
          v47 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v50)) << v48;
          v48 += v50;
          unint64_t v51 = v50 + v42;
          v43 += v51 >> 6;
          uint64_t v42 = v51 & 0x3F;
          v49 -= v50;
        }
        while (v49);
      }
      else
      {
        char v47 = 0;
        uint64_t v43 = 0;
      }
      int v45 = v47 & 3;
      int v44 = 2;
      int v46 = 5;
    }
    unsigned int v52 = &kDQuadParamTable[10 * v45];
    unsigned int v53 = v52[324];
    unsigned int v54 = v52[325];
    if (v53 >= 0xC) {
      uint64_t v55 = 12;
    }
    else {
      uint64_t v55 = v53;
    }
    if (v54 >= 0xC) {
      uint64_t v56 = 12;
    }
    else {
      uint64_t v56 = v54;
    }
    char v57 = 12 - v55;
    if (v45)
    {
      if (v55)
      {
        if ((unint64_t)(v55 - v30 + v42 + (v43 << 6)) <= 0x30)
        {
          int v58 = 0;
          uint64_t v62 = 0;
          unint64_t v63 = v55;
          do
          {
            unint64_t v64 = 64 - v42;
            if (64 - v42 >= v63) {
              unint64_t v64 = v63;
            }
            v58 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v64)) << v62;
            v62 += v64;
            unint64_t v65 = v64 + v42;
            v43 += v65 >> 6;
            uint64_t v42 = v65 & 0x3F;
            v63 -= v64;
          }
          while (v63);
        }
        else
        {
          int v58 = 0;
        }
        int v46 = v55 + v44 + 3;
      }
      else
      {
        int v58 = 0;
      }
      unsigned int v59 = v58 << v57;
      if (v56) {
        goto LABEL_56;
      }
    }
    else
    {
      unsigned int v59 = 0;
      if (v56)
      {
LABEL_56:
        if ((unint64_t)(v42 - v30 + (v43 << 6) + 3) <= 0x30)
        {
          int v60 = 0;
          uint64_t v66 = 0;
          unint64_t v67 = 3;
          do
          {
            unint64_t v68 = 64 - v42;
            if (64 - v42 >= v67) {
              unint64_t v68 = v67;
            }
            v60 |= (unint64_t)((v29[v43] >> v42) & ~(-1 << v68)) << v66;
            v66 += v68;
            unint64_t v69 = v68 + v42;
            v43 += v69 >> 6;
            uint64_t v42 = v69 & 0x3F;
            v67 -= v68;
          }
          while (v67);
        }
        else
        {
          int v60 = 0;
        }
        uint64_t v461 = 0;
        uint64_t v462 = 0;
        int v464 = 0;
        uint64_t v463 = 0;
        unsigned int v70 = 45 - v46;
        unsigned int v71 = (45 - v46) / 7u;
        uint64_t v72 = v56 - v30;
        unint64_t v73 = (v42 | (v43 << 6)) + v70 % 7;
        unint64_t v74 = v73 & 0x3F;
        if (v72 + v74 + (v73 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          uint64_t v61 = 0;
          uint64_t v75 = 0;
          unint64_t v76 = v73 >> 6;
          unint64_t v77 = v56;
          do
          {
            unint64_t v78 = 64 - v74;
            if (64 - v74 >= v77) {
              unint64_t v78 = v77;
            }
            v61 |= ((unint64_t)((v29[v76] >> v74) & ~(-1 << v78)) << v75);
            v75 += v78;
            unint64_t v79 = v78 + v74;
            v76 += v79 >> 6;
            unint64_t v74 = v79 & 0x3F;
            v77 -= v78;
          }
          while (v77);
          LODWORD(v461) = v61;
          unint64_t v73 = v74 | (v76 << 6);
        }
        else
        {
          uint64_t v61 = 0;
        }
        uint64_t v80 = v71 - v56;
        unint64_t v81 = v73 + v80;
        uint64_t v82 = (v73 + v80) & 0x3F;
        if (v72 + v82 + ((v73 + v80) & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v83 = 0;
          uint64_t v84 = 0;
          unint64_t v85 = v81 >> 6;
          unint64_t v86 = v56;
          do
          {
            unint64_t v87 = 64 - v82;
            if (64 - v82 >= v86) {
              unint64_t v87 = v86;
            }
            v83 |= (unint64_t)((v29[v85] >> v82) & ~(-1 << v87)) << v84;
            v84 += v87;
            unint64_t v88 = v87 + v82;
            v85 += v88 >> 6;
            uint64_t v82 = v88 & 0x3F;
            v86 -= v87;
          }
          while (v86);
          HIDWORD(v461) = v83;
          unint64_t v81 = v82 | (v85 << 6);
        }
        else
        {
          HIDWORD(v461) = 0;
        }
        unint64_t v89 = v81 + v80;
        uint64_t v90 = v89 & 0x3F;
        if (v72 + v90 + (v89 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v91 = 0;
          uint64_t v92 = 0;
          unint64_t v93 = v89 >> 6;
          unint64_t v94 = v56;
          do
          {
            unint64_t v95 = 64 - v90;
            if (64 - v90 >= v94) {
              unint64_t v95 = v94;
            }
            v91 |= (unint64_t)((v29[v93] >> v90) & ~(-1 << v95)) << v92;
            v92 += v95;
            unint64_t v96 = v95 + v90;
            v93 += v96 >> 6;
            uint64_t v90 = v96 & 0x3F;
            v94 -= v95;
          }
          while (v94);
          LODWORD(v462) = v91;
          unint64_t v89 = v90 | (v93 << 6);
        }
        else
        {
          LODWORD(v462) = 0;
        }
        unint64_t v97 = v89 + v80;
        uint64_t v98 = v97 & 0x3F;
        if (v72 + v98 + (v97 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v99 = 0;
          uint64_t v100 = 0;
          unint64_t v101 = v97 >> 6;
          unint64_t v102 = v56;
          do
          {
            unint64_t v103 = 64 - v98;
            if (64 - v98 >= v102) {
              unint64_t v103 = v102;
            }
            v99 |= (unint64_t)((v29[v101] >> v98) & ~(-1 << v103)) << v100;
            v100 += v103;
            unint64_t v104 = v103 + v98;
            v101 += v104 >> 6;
            uint64_t v98 = v104 & 0x3F;
            v102 -= v103;
          }
          while (v102);
          HIDWORD(v462) = v99;
          unint64_t v97 = v98 | (v101 << 6);
        }
        else
        {
          HIDWORD(v462) = 0;
        }
        unint64_t v105 = v97 + v80;
        uint64_t v106 = v105 & 0x3F;
        if (v72 + v106 + (v105 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v107 = 0;
          uint64_t v108 = 0;
          unint64_t v109 = v105 >> 6;
          unint64_t v110 = v56;
          do
          {
            unint64_t v111 = 64 - v106;
            if (64 - v106 >= v110) {
              unint64_t v111 = v110;
            }
            v107 |= (unint64_t)((v29[v109] >> v106) & ~(-1 << v111)) << v108;
            v108 += v111;
            unint64_t v112 = v111 + v106;
            v109 += v112 >> 6;
            uint64_t v106 = v112 & 0x3F;
            v110 -= v111;
          }
          while (v110);
          LODWORD(v463) = v107;
          unint64_t v105 = v106 | (v109 << 6);
        }
        else
        {
          LODWORD(v463) = 0;
        }
        unint64_t v113 = v105 + v80;
        unint64_t v114 = v113 >> 6;
        uint64_t v115 = v113 & 0x3F;
        if (v72 + v115 + (v113 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v116 = 0;
          uint64_t v117 = 0;
          unint64_t v118 = v56;
          do
          {
            unint64_t v119 = 64 - v115;
            if (64 - v115 >= v118) {
              unint64_t v119 = v118;
            }
            v116 |= (unint64_t)((v29[v114] >> v115) & ~(-1 << v119)) << v117;
            v117 += v119;
            unint64_t v120 = v119 + v115;
            v114 += v120 >> 6;
            uint64_t v115 = v120 & 0x3F;
            v118 -= v119;
          }
          while (v118);
        }
        else
        {
          int v116 = 0;
        }
        HIDWORD(v463) = v116;
        unint64_t v121 = (v115 | (v114 << 6)) + v80;
        uint64_t v122 = v121 & 0x3F;
        if (v72 + v122 + (v121 & 0xFFFFFFFFFFFFFFC0) <= 0x30)
        {
          int v123 = 0;
          uint64_t v124 = 0;
          unint64_t v125 = v121 >> 6;
          unint64_t v126 = v56;
          do
          {
            unint64_t v127 = 64 - v122;
            if (64 - v122 >= v126) {
              unint64_t v127 = v126;
            }
            v123 |= (unint64_t)((v29[v125] >> v122) & ~(-1 << v127)) << v124;
            v124 += v127;
            unint64_t v128 = v127 + v122;
            v125 += v128 >> 6;
            uint64_t v122 = v128 & 0x3F;
            v126 -= v127;
          }
          while (v126);
        }
        else
        {
          int v123 = 0;
        }
        int v464 = v123;
LABEL_110:
        unint64_t v129 = *(void *)&kDQuadParamTable[10 * v45 + 322];
        if (v129 >> v56 <= 1) {
          unint64_t v130 = 1;
        }
        else {
          unint64_t v130 = v129 >> v56;
        }
        unint64_t v131 = v130 >> 1;
        unint64_t v132 = (unint64_t)(1 << v57) >> 1;
        if (v130 >> 1 < v132) {
          unint64_t v132 = v130 >> 1;
        }
        unint64_t v133 = 2048 - v59;
        if (v59) {
          uint64_t v134 = v132;
        }
        else {
          uint64_t v134 = 0;
        }
        BOOL v135 = v59 == 2048;
        if (v59 >= 0xFFF) {
          __int16 v136 = 4095;
        }
        else {
          __int16 v136 = v59;
        }
        __int16 v137 = v136 ^ 0x800;
        if (v130 <= v133)
        {
          __int16 v138 = 2047;
        }
        else
        {
          __int16 v137 = 0;
          __int16 v138 = 0;
        }
        if (v10 == 1)
        {
          __int16 v17 = v138;
        }
        else
        {
          __int16 v137 = v136;
          __int16 v17 = 4095;
        }
        if (!v56)
        {
          if (a5 == 4)
          {
            __int16 v18 = v17;
            LOWORD(v16) = v17;
            LOWORD(v15) = v17;
            LOWORD(v13) = v17;
            LOWORD(v14) = v17;
            LOWORD(v12) = v17;
            LOWORD(v11) = v17;
            a3 = v423;
            a4 = v422;
            if ((v59 & 0x7FC00000 | 0x80000000) != 0xFF800000)
            {
              __int16 v17 = v137;
              __int16 v18 = v137;
              LOWORD(v16) = v137;
              LOWORD(v15) = v137;
              LOWORD(v13) = v137;
              LOWORD(v14) = v137;
              LOWORD(v12) = v137;
              LOWORD(v11) = v137;
            }
          }
          else
          {
            __int16 v17 = v137;
            __int16 v18 = v137;
            LOWORD(v16) = v137;
            LOWORD(v15) = v137;
            LOWORD(v13) = v137;
            LOWORD(v14) = v137;
            LOWORD(v12) = v137;
            LOWORD(v11) = v137;
            a3 = v423;
            a4 = v422;
          }
          goto LABEL_5;
        }
        unint64_t v139 = v129 + v59;
        uint64_t v140 = ~(-1 << v56);
        unint64_t v141 = v133 / v130;
        if (v60)
        {
          BOOL v142 = v141 == v61;
          if (v59 || v61)
          {
            if (v139 >= 0x1000 && v61 == v140)
            {
              uint64_t v143 = 1;
              uint64_t v61 = 4095;
              goto LABEL_141;
            }
            uint64_t v61 = v131 + v130 * v61;
          }
          uint64_t v143 = 1;
        }
        else
        {
          uint64_t v143 = 0;
          uint64_t v61 = v134;
          BOOL v142 = v59 == 2048;
        }
LABEL_141:
        unint64_t v144 = v61 + v59;
        unint64_t v145 = v144;
        if (a5 == 4)
        {
          unint64_t v145 = 2139095039;
          if ((v144 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v145 = 4286578687;
            if ((v144 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v145 = v144;
            }
          }
        }
        if (v145 >= 0xFFF) {
          int v146 = 4095;
        }
        else {
          int v146 = v145;
        }
        if (v142) {
          int v147 = 0;
        }
        else {
          int v147 = v146 ^ 0x800;
        }
        if (v10 == 1) {
          int v11 = v147;
        }
        else {
          int v11 = v146;
        }
        int v424 = v11;
        if (v60 == 1)
        {
          uint64_t v148 = v134;
          BOOL v149 = v59 == 2048;
        }
        else
        {
          uint64_t v150 = *(unsigned int *)((unint64_t)&v461 | (4 * v143));
          BOOL v149 = v141 == v150;
          if (v59 | v150)
          {
            if (v139 >= 0x1000 && v150 == v140) {
              uint64_t v148 = 4095;
            }
            else {
              uint64_t v148 = v131 + v130 * v150;
            }
          }
          else
          {
            uint64_t v148 = 0;
          }
          ++v143;
        }
        unint64_t v151 = v148 + v59;
        unint64_t v152 = v151;
        if (a5 == 4)
        {
          unint64_t v152 = 2139095039;
          if ((v151 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v152 = 4286578687;
            if ((v151 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v152 = v151;
            }
          }
        }
        if (v152 >= 0xFFF) {
          int v12 = 4095;
        }
        else {
          int v12 = v152;
        }
        if (v149) {
          int v153 = 0;
        }
        else {
          int v153 = v12 ^ 0x800;
        }
        if (v10 == 1) {
          int v12 = v153;
        }
        int v425 = v12;
        if (v60 == 2)
        {
          uint64_t v154 = v134;
          BOOL v155 = v59 == 2048;
        }
        else
        {
          uint64_t v156 = *((unsigned int *)&v461 + v143);
          BOOL v155 = v141 == v156;
          if (v59 | v156)
          {
            if (v139 >= 0x1000 && v156 == v140) {
              uint64_t v154 = 4095;
            }
            else {
              uint64_t v154 = v131 + v130 * v156;
            }
          }
          else
          {
            uint64_t v154 = 0;
          }
          ++v143;
        }
        unint64_t v157 = v154 + v59;
        unint64_t v158 = v157;
        if (a5 == 4)
        {
          unint64_t v158 = 2139095039;
          if ((v157 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v158 = 4286578687;
            if ((v157 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v158 = v157;
            }
          }
        }
        if (v158 >= 0xFFF) {
          int v159 = 4095;
        }
        else {
          int v159 = v158;
        }
        if (v155) {
          int v160 = 0;
        }
        else {
          int v160 = v159 ^ 0x800;
        }
        if (v10 == 1) {
          int v14 = v160;
        }
        else {
          int v14 = v159;
        }
        int v426 = v14;
        if (v60 == 3)
        {
          uint64_t v161 = v134;
          BOOL v162 = v59 == 2048;
        }
        else
        {
          uint64_t v163 = *((unsigned int *)&v461 + v143);
          BOOL v162 = v141 == v163;
          if (v59 | v163)
          {
            if (v139 >= 0x1000 && v163 == v140) {
              uint64_t v161 = 4095;
            }
            else {
              uint64_t v161 = v131 + v130 * v163;
            }
          }
          else
          {
            uint64_t v161 = 0;
          }
          ++v143;
        }
        unint64_t v164 = v161 + v59;
        unint64_t v165 = v164;
        if (a5 == 4)
        {
          unint64_t v165 = 2139095039;
          if ((v164 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v165 = 4286578687;
            if ((v164 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v165 = v164;
            }
          }
        }
        if (v165 >= 0xFFF) {
          int v166 = 4095;
        }
        else {
          int v166 = v165;
        }
        if (v162) {
          int v167 = 0;
        }
        else {
          int v167 = v166 ^ 0x800;
        }
        if (v10 == 1) {
          int v13 = v167;
        }
        else {
          int v13 = v166;
        }
        int v427 = v13;
        if (v60 == 4)
        {
          uint64_t v168 = v134;
          BOOL v169 = v59 == 2048;
        }
        else
        {
          uint64_t v170 = *((unsigned int *)&v461 + v143);
          BOOL v169 = v141 == v170;
          if (v59 | v170)
          {
            if (v139 >= 0x1000 && v170 == v140) {
              uint64_t v168 = 4095;
            }
            else {
              uint64_t v168 = v131 + v130 * v170;
            }
          }
          else
          {
            uint64_t v168 = 0;
          }
          ++v143;
        }
        unint64_t v171 = v168 + v59;
        unint64_t v172 = v171;
        if (a5 == 4)
        {
          unint64_t v172 = 2139095039;
          if ((v171 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v172 = 4286578687;
            if ((v171 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v172 = v171;
            }
          }
        }
        if (v172 >= 0xFFF) {
          int v173 = 4095;
        }
        else {
          int v173 = v172;
        }
        if (v169) {
          int v15 = 0;
        }
        else {
          int v15 = v173 ^ 0x800;
        }
        if (v10 != 1) {
          int v15 = v173;
        }
        int v428 = v15;
        unint64_t v421 = v139;
        if (v60 == 5)
        {
          uint64_t v174 = ~(-1 << v56);
          uint64_t v175 = v134;
          BOOL v176 = v59 == 2048;
        }
        else
        {
          uint64_t v177 = *((unsigned int *)&v461 + v143);
          BOOL v176 = v141 == v177;
          if (v59 | v177)
          {
            if (v139 >= 0x1000 && v177 == v140)
            {
              uint64_t v174 = ~(-1 << v56);
              uint64_t v175 = 4095;
            }
            else
            {
              uint64_t v174 = ~(-1 << v56);
              uint64_t v175 = v131 + v130 * v177;
            }
          }
          else
          {
            uint64_t v174 = ~(-1 << v56);
            uint64_t v175 = 0;
          }
          ++v143;
        }
        unint64_t v178 = v175 + v59;
        unint64_t v179 = v178;
        if (a5 == 4)
        {
          unint64_t v179 = 2139095039;
          if ((v178 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            if ((v178 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
              unint64_t v179 = 4286578687;
            }
            else {
              unint64_t v179 = v178;
            }
          }
        }
        if (v179 >= 0xFFF) {
          int v180 = 4095;
        }
        else {
          int v180 = v179;
        }
        if (v176) {
          int v181 = 0;
        }
        else {
          int v181 = v180 ^ 0x800;
        }
        if (v10 == 1) {
          int v16 = v181;
        }
        else {
          int v16 = v180;
        }
        int v429 = v16;
        if (v60 == 6)
        {
          uint64_t v182 = v134;
          BOOL v183 = v59 == 2048;
        }
        else
        {
          uint64_t v184 = *((unsigned int *)&v461 + v143);
          BOOL v183 = v141 == v184;
          if (v59 | v184)
          {
            if (v421 >= 0x1000 && v184 == v174) {
              uint64_t v182 = 4095;
            }
            else {
              uint64_t v182 = v131 + v130 * v184;
            }
          }
          else
          {
            uint64_t v182 = 0;
          }
          ++v143;
        }
        unint64_t v185 = v182 + v59;
        unint64_t v186 = v185;
        if (a5 == 4)
        {
          unint64_t v186 = 2139095039;
          if ((v185 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v186 = 4286578687;
            if ((v185 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v186 = v185;
            }
          }
        }
        if (v186 >= 0xFFF) {
          LOWORD(v186) = 4095;
        }
        if (v183) {
          __int16 v18 = 0;
        }
        else {
          __int16 v18 = v186 ^ 0x800;
        }
        if (v10 != 1) {
          __int16 v18 = v186;
        }
        if (v60 != 7)
        {
          uint64_t v187 = *((unsigned int *)&v461 + v143);
          BOOL v135 = v141 == v187;
          if (v59 | v187)
          {
            if (v421 >= 0x1000 && v187 == v174) {
              uint64_t v134 = 4095;
            }
            else {
              uint64_t v134 = v131 + v130 * v187;
            }
          }
          else
          {
            uint64_t v134 = 0;
          }
        }
        unint64_t v188 = v134 + v59;
        unint64_t v189 = v188;
        if (a5 == 4)
        {
          unint64_t v189 = 2139095039;
          if ((v188 & 0xFFFFFFFFFFC00000) != 0x7F800000)
          {
            unint64_t v189 = 4286578687;
            if ((v188 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
              unint64_t v189 = v134 + v59;
            }
          }
        }
        if (v189 >= 0xFFF) {
          LOWORD(v189) = 4095;
        }
        __int16 v17 = v189 ^ 0x800;
        if (v135) {
          __int16 v17 = 0;
        }
        if (v10 != 1) {
          __int16 v17 = v189;
        }
        a3 = v423;
        a4 = v422;
        goto LABEL_5;
      }
    }
    int v60 = 0;
    uint64_t v61 = 0;
    uint64_t v461 = 0;
    uint64_t v462 = 0;
    int v464 = 0;
    uint64_t v463 = 0;
    goto LABEL_110;
  }
  switch(a4)
  {
    case 0x3Fu:
      int32x4_t v199 = *a3;
      int32x4_t v200 = a3[1];
      int32x4_t v201 = a3[2];
      int32x4_t v202 = a3[3];
      *(int32x4_t *)a1 = vuzp1q_s32(*a3, v201);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v199, v201);
      uint64x2_t v203 = (int32x4_t *)(a1 + 2 * a2);
      *uint64x2_t v203 = vuzp1q_s32(v200, v202);
      *(int32x4_t *)((char *)v203 + a2) = vuzp2q_s32(v200, v202);
      return 64;
    case 0x2Fu:
      v204.i64[0] = 0xC000C000C000CLL;
      v204.i64[1] = 0xC000C000C000CLL;
      int8x16_t v205 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v204, v204));
      unint64_t v206 = vpaddq_s32((int32x4_t)v205, (int32x4_t)v205).u64[0];
      v207.i64[0] = v206;
      v207.i64[1] = HIDWORD(v206);
      int8x16_t v208 = (int8x16_t)v207;
      unint64_t v209 = vaddvq_s64(v207);
      int8x16_t v210 = 0uLL;
      int8x16_t v211 = 0uLL;
      int8x16_t v212 = 0uLL;
      int8x16_t v213 = 0uLL;
      if (v209 <= 0x80)
      {
        int16x8_t v214 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v215 = 8 * (a3 & 7);
        int64x2_t v216 = vzip1q_s64((int64x2_t)0, (int64x2_t)v208);
        unint64_t v217 = v209 + v215;
        int64x2_t v218 = vaddq_s64(v216, vdupq_n_s64(v215));
        int8x16_t v211 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v218)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v218)));
        if (v209 + v215 >= 0x81) {
          int8x16_t v211 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v214[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v218)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v214[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v218))), v211);
        }
        unint64_t v219 = v217 & 0x3F;
        int32x4_t v220 = (int64x2_t *)((char *)v214 + 8 * (v217 >> 6));
        int64x2_t v221 = vaddq_s64(v216, vdupq_n_s64(v219));
        unint64_t v222 = v209 + v217;
        int8x16_t v212 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v220, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v220->i64[0], 0), (uint64x2_t)vnegq_s64(v221)));
        if (v209 + v219 >= 0x81) {
          int8x16_t v212 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v220[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v220[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v221))), v212);
        }
        unint64_t v223 = v222 & 0x3F;
        uint64x2_t v224 = (int64x2_t *)((char *)v214 + 8 * (v222 >> 6));
        int64x2_t v225 = vaddq_s64(v216, vdupq_n_s64(v223));
        unint64_t v226 = v209 + v222;
        int8x16_t v210 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v224, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224->i64[0], 0), (uint64x2_t)vnegq_s64(v225)));
        if (v209 + v223 >= 0x81) {
          int8x16_t v210 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v224[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v225)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v224[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v225))), v210);
        }
        int8x16_t v208 = (int8x16_t)vaddq_s64(v216, vdupq_n_s64(v226 & 0x3F));
        int64x2_t v227 = (int64x2_t *)((char *)v214 + 8 * (v226 >> 6));
        int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v208)));
        if (v209 + (v226 & 0x3F) >= 0x81)
        {
          int8x16_t v208 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v208)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v208)));
          int8x16_t v213 = vorrq_s8(v208, v213);
        }
      }
      *(int32x2_t *)v208.i8 = vmovn_s64((int64x2_t)v210);
      int32x2_t v228 = vzip1_s32(*(int32x2_t *)v205.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v205, v205, 8uLL));
      v229.i64[0] = v228.u32[0];
      v229.i64[1] = v228.u32[1];
      uint64x2_t v230 = (uint64x2_t)vnegq_s64(v229);
      int64x2_t v231 = (int64x2_t)vshlq_u64((uint64x2_t)v210, v230);
      *(int32x2_t *)v231.i8 = vmovn_s64(v231);
      int16x8_t v232 = (int16x8_t)vzip1q_s32((int32x4_t)v208, (int32x4_t)v231);
      *(int16x4_t *)v208.i8 = vmovn_s32((int32x4_t)v232);
      *(int16x4_t *)v232.i8 = vshrn_n_s32((int32x4_t)v232, 0xCuLL);
      int8x16_t v233 = (int8x16_t)vzip1q_s16((int16x8_t)v208, v232);
      v234.i64[0] = 0x1000100010001;
      v234.i64[1] = 0x1000100010001;
      v235.i64[0] = -1;
      v235.i64[1] = -1;
      int8x16_t v236 = (int8x16_t)vaddq_s16(vshlq_n_s16(v234, 0xCuLL), v235);
      *(int32x2_t *)v235.i8 = vmovn_s64((int64x2_t)v212);
      int64x2_t v237 = (int64x2_t)vshlq_u64((uint64x2_t)v212, v230);
      *(int32x2_t *)v237.i8 = vmovn_s64(v237);
      int16x8_t v238 = (int16x8_t)vzip1q_s32((int32x4_t)v235, (int32x4_t)v237);
      *(int16x4_t *)v235.i8 = vmovn_s32((int32x4_t)v238);
      *(int16x4_t *)v238.i8 = vshrn_n_s32((int32x4_t)v238, 0xCuLL);
      int16x8_t v239 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v235, v238), v236);
      *(int32x2_t *)v235.i8 = vmovn_s64((int64x2_t)v211);
      int64x2_t v240 = (int64x2_t)vshlq_u64((uint64x2_t)v211, v230);
      *(int32x2_t *)v240.i8 = vmovn_s64(v240);
      int16x8_t v241 = (int16x8_t)vzip1q_s32((int32x4_t)v235, (int32x4_t)v240);
      *(int16x4_t *)v235.i8 = vmovn_s32((int32x4_t)v241);
      *(int16x4_t *)v241.i8 = vshrn_n_s32((int32x4_t)v241, 0xCuLL);
      int64x2_t v242 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v230);
      *(int32x2_t *)v213.i8 = vmovn_s64((int64x2_t)v213);
      *(int32x2_t *)v242.i8 = vmovn_s64(v242);
      int16x8_t v243 = (int16x8_t)vzip1q_s32((int32x4_t)v213, (int32x4_t)v242);
      *(int16x4_t *)v213.i8 = vmovn_s32((int32x4_t)v243);
      *(int16x4_t *)v243.i8 = vshrn_n_s32((int32x4_t)v243, 0xCuLL);
      int16x8_t v244 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v213, v243), v236);
      int32x4_t v245 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v235, v241), v236), 4uLL);
      int32x4_t v246 = (int32x4_t)vshlq_n_s16(v239, 4uLL);
      int32x4_t v247 = (int32x4_t)vshlq_n_s16((int16x8_t)vandq_s8(v233, v236), 4uLL);
      int32x4_t v248 = (int32x4_t)vshlq_n_s16(v244, 4uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v245, v247);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v245, v247);
      int8x16_t v249 = (int32x4_t *)(a1 + 2 * a2);
      *int8x16_t v249 = vuzp1q_s32(v246, v248);
      *(int32x4_t *)((char *)v249 + a2) = vuzp2q_s32(v246, v248);
      return 48;
    case 1u:
      int16x8_t v194 = vdupq_n_s16(16 * a3->u16[0]);
      *(int16x8_t *)a1 = v194;
      *(int16x8_t *)(a1 + a2) = v194;
      *(int16x8_t *)(a1 + 2 * a2) = v194;
      *(int16x8_t *)(a1 + 3 * a2) = v194;
      return 2;
    default:
      unint64_t v250 = 8 * (a3 & 7);
      unint64_t v251 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v252 = v250 + 18;
      uint64_t v253 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v250;
      if (v250 >= 0x2F) {
        v253 |= *(void *)(v251 + 8) << (-8 * (a3 & 7u));
      }
      unint64_t v254 = (8 * (a3 & 7)) | 0xC0;
      int v255 = (a4 >> 6) | (4 * v253);
      uint16x8_t v256 = (uint16x8_t)vdupq_n_s16(v255 & 0xF);
      a9.i32[0] = v255 & 0xF;
      v257.i64[0] = 0x3000300030003;
      v257.i64[1] = 0x3000300030003;
      int8x16_t v258 = vbicq_s8((int8x16_t)vdupq_n_s16(((v253 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v256 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v257));
      int8x16_t v259 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a9, (int8x8_t)0x4000400040004), 0))));
      v260.i64[0] = 0x202020202020202;
      v260.i64[1] = 0x202020202020202;
      int8x16_t v261 = vandq_s8(v259, v260);
      if (vmaxvq_s8(v261) < 1)
      {
        int v271 = 0;
        v272.i64[0] = -1;
        v272.i64[1] = -1;
        int8x16_t v273 = v258;
        int8x16_t v274 = v258;
        int8x16_t v275 = v258;
        v276.i64[0] = -1;
        v276.i64[1] = -1;
        int8x16_t v277 = v258;
        v278.i64[0] = -1;
        v278.i64[1] = -1;
        v279.i64[0] = -1;
        v279.i64[1] = -1;
      }
      else
      {
        int8x16_t v262 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v261, v261));
        int8x16_t v263 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v262, (int16x8_t)v262));
        unint64_t v264 = vpaddq_s32((int32x4_t)v263, (int32x4_t)v263).u64[0];
        v265.i64[0] = v264;
        v265.i64[1] = HIDWORD(v264);
        int64x2_t v266 = v265;
        unint64_t v267 = vaddvq_s64(v265);
        unint64_t v268 = v267 + v252;
        if (v267 <= 0x80 && v254 >= v268)
        {
          unint64_t v280 = v252 & 0x3A;
          int64x2_t v281 = vaddq_s64(vzip1q_s64((int64x2_t)0, v266), vdupq_n_s64(v280));
          uint64x2_t v282 = (int64x2_t *)(v251 + ((v252 >> 3) & 8));
          int8x16_t v270 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v282, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v281)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v282->i64[0], 0), (uint64x2_t)vnegq_s64(v281)));
          if (v267 + v280 < 0x81)
          {
            int v271 = 0;
          }
          else
          {
            int v271 = 0;
            int8x16_t v270 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v282[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v281)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v282[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v281))), v270);
          }
          unint64_t v252 = v268;
        }
        else
        {
          int8x16_t v270 = 0uLL;
          int v271 = 1;
        }
        int32x2_t v283 = vzip1_s32(*(int32x2_t *)v263.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v263, v263, 8uLL));
        v284.i64[0] = v283.u32[0];
        v284.i64[1] = v283.u32[1];
        int64x2_t v285 = (int64x2_t)vshlq_u64((uint64x2_t)v270, (uint64x2_t)vnegq_s64(v284));
        *(int32x2_t *)v270.i8 = vmovn_s64((int64x2_t)v270);
        *(int32x2_t *)v285.i8 = vmovn_s64(v285);
        int8x16_t v286 = (int8x16_t)vzip1q_s32((int32x4_t)v270, (int32x4_t)v285);
        int16x8_t v287 = (int16x8_t)vshlq_u32((uint32x4_t)v286, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v262.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL)))));
        *(int16x4_t *)v286.i8 = vmovn_s32((int32x4_t)v286);
        *(int16x4_t *)v287.i8 = vmovn_s32((int32x4_t)v287);
        int8x16_t v288 = (int8x16_t)vzip1q_s16((int16x8_t)v286, v287);
        *(int8x8_t *)v288.i8 = vzip1_s8(vmovn_s16((int16x8_t)v288), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v288, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v261.i8, *(int8x8_t *)v256.i8))))));
        v286.i64[0] = 0x101010101010101;
        v286.i64[1] = 0x101010101010101;
        int8x16_t v289 = vshlq_s8(v286, v261);
        v286.i64[0] = -1;
        v286.i64[1] = -1;
        v289.i32[0] = vandq_s8(v288, vaddq_s8(v289, v286)).u32[0];
        int16x8_t v290 = vdupq_n_s16(v289.i8[0]);
        int16x8_t v291 = vdupq_n_s16(v289.i8[1]);
        int16x8_t v292 = vdupq_n_s16(v289.i8[2]);
        int16x8_t v293 = vdupq_n_s16(v289.i8[3]);
        int8x16_t v277 = (int8x16_t)vsubq_s16((int16x8_t)v258, v290);
        int8x16_t v275 = (int8x16_t)vsubq_s16((int16x8_t)v258, v291);
        int8x16_t v274 = (int8x16_t)vsubq_s16((int16x8_t)v258, v292);
        int8x16_t v273 = (int8x16_t)vsubq_s16((int16x8_t)v258, v293);
        int8x16_t v279 = (int8x16_t)vceqzq_s16(v290);
        int8x16_t v278 = (int8x16_t)vceqzq_s16(v291);
        int8x16_t v276 = (int8x16_t)vceqzq_s16(v292);
        int8x16_t v272 = (int8x16_t)vceqzq_s16(v293);
      }
      v294.i64[0] = 0x7000700070007;
      v294.i64[1] = 0x7000700070007;
      int8x16_t v295 = 0uLL;
      int8x16_t v296 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v256, v294), (int8x16_t)0, 0xEuLL), v258);
      int8x16_t v297 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v296, (int16x8_t)v296));
      unint64_t v298 = vpaddq_s32((int32x4_t)v297, (int32x4_t)v297).u64[0];
      v299.i64[0] = v298;
      v299.i64[1] = HIDWORD(v298);
      int64x2_t v300 = v299;
      unint64_t v301 = vaddvq_s64(v299);
      unint64_t v302 = v301 + v252;
      if (v301 <= 0x80 && v254 >= v302)
      {
        unint64_t v304 = v252 & 0x3F;
        int64x2_t v305 = vaddq_s64(vzip1q_s64((int64x2_t)0, v300), vdupq_n_s64(v304));
        unint64_t v306 = (int64x2_t *)(v251 + 8 * (v252 >> 6));
        int8x16_t v295 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v306, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v305)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v306->i64[0], 0), (uint64x2_t)vnegq_s64(v305)));
        if (v301 + v304 >= 0x81) {
          int8x16_t v295 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v306[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v305)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v306[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v305))), v295);
        }
        unint64_t v252 = v302;
      }
      else
      {
        int v271 = 1;
      }
      int v307 = a4 >> 6;
      if (v307 == 2)
      {
        BOOL v308 = v254 >= v252 + 8;
        if (v254 >= v252 + 8) {
          v252 += 8;
        }
        unint64_t v309 = v252 + 8;
        if (!v308 || v254 < v309) {
          int v271 = 1;
        }
        if (v254 >= v309) {
          v252 += 8;
        }
      }
      int8x16_t v311 = 0uLL;
      int8x16_t v312 = vextq_s8((int8x16_t)0, v277, 0xEuLL);
      int8x16_t v313 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v312, (int16x8_t)v312));
      unint64_t v314 = vpaddq_s32((int32x4_t)v313, (int32x4_t)v313).u64[0];
      v315.i64[0] = v314;
      v315.i64[1] = HIDWORD(v314);
      int64x2_t v316 = v315;
      unint64_t v317 = vaddvq_s64(v315);
      unint64_t v318 = v317 + v252;
      if (v317 <= 0x80 && v254 >= v318)
      {
        unint64_t v321 = v252 & 0x3F;
        int64x2_t v322 = vaddq_s64(vzip1q_s64((int64x2_t)0, v316), vdupq_n_s64(v321));
        int64x2_t v323 = (int64x2_t *)(v251 + 8 * (v252 >> 6));
        int8x16_t v320 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v323, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v322)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v323->i64[0], 0), (uint64x2_t)vnegq_s64(v322)));
        if (v317 + v321 >= 0x81) {
          int8x16_t v320 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v323[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v322)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v323[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v322))), v320);
        }
        unint64_t v252 = v318;
      }
      else
      {
        int v271 = 1;
        int8x16_t v320 = 0uLL;
      }
      int8x16_t v324 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v275, (int16x8_t)v275));
      unint64_t v325 = vpaddq_s32((int32x4_t)v324, (int32x4_t)v324).u64[0];
      v326.i64[0] = v325;
      v326.i64[1] = HIDWORD(v325);
      int64x2_t v327 = v326;
      unint64_t v328 = vaddvq_s64(v326);
      if (v328 < 0x81)
      {
        int32x2_t v329 = vzip1_s32(*(int32x2_t *)v324.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v324, v324, 8uLL));
        v330.i64[0] = v329.u32[0];
        v330.i64[1] = v329.u32[1];
        int64x2_t v331 = v330;
        int32x4_t v332 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v275.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v275, v275, 8uLL)));
        unint64_t v333 = v328 + v252;
        if (v254 >= v328 + v252)
        {
          unint64_t v334 = v252 & 0x3F;
          int64x2_t v335 = vaddq_s64(vzip1q_s64((int64x2_t)0, v327), vdupq_n_s64(v334));
          int32x4_t v336 = (int64x2_t *)(v251 + 8 * (v252 >> 6));
          int8x16_t v311 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v336, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v335)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v336->i64[0], 0), (uint64x2_t)vnegq_s64(v335)));
          if (v328 + v334 >= 0x81) {
            int8x16_t v311 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v336[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v335)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v336[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v335))), v311);
          }
          unint64_t v252 = v333;
        }
        else
        {
          int v271 = 1;
        }
        int64x2_t v337 = (int64x2_t)vshlq_u64((uint64x2_t)v311, (uint64x2_t)vnegq_s64(v331));
        *(int32x2_t *)v311.i8 = vmovn_s64((int64x2_t)v311);
        *(int32x2_t *)v337.i8 = vmovn_s64(v337);
        int16x8_t v338 = (int16x8_t)vzip1q_s32((int32x4_t)v311, (int32x4_t)v337);
        int16x8_t v339 = (int16x8_t)vshlq_u32((uint32x4_t)v338, (uint32x4_t)vnegq_s32(v332));
        *(int16x4_t *)v338.i8 = vmovn_s32((int32x4_t)v338);
        *(int16x4_t *)v339.i8 = vmovn_s32((int32x4_t)v339);
        int8x16_t v311 = (int8x16_t)vzip1q_s16(v338, v339);
      }
      else
      {
        int v271 = 1;
      }
      int8x16_t v340 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v274, (int16x8_t)v274));
      unint64_t v341 = vpaddq_s32((int32x4_t)v340, (int32x4_t)v340).u64[0];
      v342.i64[0] = v341;
      v342.i64[1] = HIDWORD(v341);
      int64x2_t v343 = v342;
      unint64_t v344 = vaddvq_s64(v342);
      int8x16_t v345 = 0uLL;
      if (v344 <= 0x80)
      {
        int32x2_t v347 = vzip1_s32(*(int32x2_t *)v340.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v340, v340, 8uLL));
        v348.i64[0] = v347.u32[0];
        v348.i64[1] = v347.u32[1];
        int64x2_t v349 = v348;
        int32x4_t v350 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v274.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v274, v274, 8uLL)));
        unint64_t v351 = v344 + v252;
        if (v254 >= v344 + v252)
        {
          unint64_t v353 = v252 & 0x3F;
          int64x2_t v354 = vaddq_s64(vzip1q_s64((int64x2_t)0, v343), vdupq_n_s64(v353));
          unint64_t v355 = (int64x2_t *)(v251 + 8 * (v252 >> 6));
          int8x16_t v352 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v355, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v354)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v355->i64[0], 0), (uint64x2_t)vnegq_s64(v354)));
          if (v344 + v353 >= 0x81) {
            int8x16_t v352 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v355[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v354)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v355[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v354))), v352);
          }
          unint64_t v252 = v351;
        }
        else
        {
          int8x16_t v352 = 0uLL;
          int v271 = 1;
        }
        int64x2_t v356 = (int64x2_t)vshlq_u64((uint64x2_t)v352, (uint64x2_t)vnegq_s64(v349));
        *(int32x2_t *)v352.i8 = vmovn_s64((int64x2_t)v352);
        *(int32x2_t *)v356.i8 = vmovn_s64(v356);
        int16x8_t v357 = (int16x8_t)vzip1q_s32((int32x4_t)v352, (int32x4_t)v356);
        int16x8_t v358 = (int16x8_t)vshlq_u32((uint32x4_t)v357, (uint32x4_t)vnegq_s32(v350));
        *(int16x4_t *)v357.i8 = vmovn_s32((int32x4_t)v357);
        *(int16x4_t *)v358.i8 = vmovn_s32((int32x4_t)v358);
        int16x8_t v346 = vzip1q_s16(v357, v358);
      }
      else
      {
        int v271 = 1;
        int16x8_t v346 = 0uLL;
      }
      int8x16_t v359 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v273, (int16x8_t)v273));
      unint64_t v360 = vpaddq_s32((int32x4_t)v359, (int32x4_t)v359).u64[0];
      v361.i64[0] = v360;
      v361.i64[1] = HIDWORD(v360);
      int64x2_t v362 = v361;
      unint64_t v363 = vaddvq_s64(v361);
      if (v363 > 0x80) {
        goto LABEL_385;
      }
      if (v254 >= v363 + v252)
      {
        int64x2_t v364 = vaddq_s64(vzip1q_s64((int64x2_t)0, v362), vdupq_n_s64(v252 & 0x3F));
        int64x2_t v365 = (int64x2_t *)(v251 + 8 * (v252 >> 6));
        int8x16_t v345 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v365, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v364)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v365->i64[0], 0), (uint64x2_t)vnegq_s64(v364)));
        if (v363 + (v252 & 0x3F) >= 0x81) {
          int8x16_t v345 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v365[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v364)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v365[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v364))), v345);
        }
        v252 += v363;
      }
      else
      {
        int v271 = 1;
      }
      if (v271 || (uint64_t v190 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v190) - v252 >= 9) || v307 == 2)
      {
LABEL_385:
        uint64_t v190 = 0;
        v432 |= 4095 << ((8 * &v432) & 0x30);
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        int64x2_t v366 = (void *)(a1 + a2);
        unint64_t v367 = (void *)(a1 + 2 * a2);
        *int64x2_t v366 = 0;
        v366[1] = 0;
        unint64_t v193 = (void *)(a1 + a2 + 2 * a2);
        *unint64_t v367 = 0;
        v367[1] = 0;
        goto LABEL_302;
      }
      int32x2_t v368 = vzip1_s32(*(int32x2_t *)v297.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v297, v297, 8uLL));
      int32x2_t v369 = vzip1_s32(*(int32x2_t *)v313.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v313, v313, 8uLL));
      v370.i64[0] = v368.u32[0];
      v370.i64[1] = v368.u32[1];
      int64x2_t v371 = v370;
      v370.i64[0] = v369.u32[0];
      v370.i64[1] = v369.u32[1];
      int64x2_t v372 = (int64x2_t)vshlq_u64((uint64x2_t)v295, (uint64x2_t)vnegq_s64(v371));
      int64x2_t v373 = (int64x2_t)vshlq_u64((uint64x2_t)v320, (uint64x2_t)vnegq_s64(v370));
      *(int32x2_t *)v295.i8 = vmovn_s64((int64x2_t)v295);
      *(int32x2_t *)v372.i8 = vmovn_s64(v372);
      *(int32x2_t *)v320.i8 = vmovn_s64((int64x2_t)v320);
      *(int32x2_t *)v373.i8 = vmovn_s64(v373);
      int16x8_t v374 = (int16x8_t)vzip1q_s32((int32x4_t)v295, (int32x4_t)v372);
      int16x8_t v375 = (int16x8_t)vzip1q_s32((int32x4_t)v320, (int32x4_t)v373);
      int16x8_t v376 = (int16x8_t)vshlq_u32((uint32x4_t)v374, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v296.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v296, v296, 8uLL)))));
      int16x8_t v377 = (int16x8_t)vshlq_u32((uint32x4_t)v375, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v312.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v312, v312, 8uLL)))));
      *(int16x4_t *)v374.i8 = vmovn_s32((int32x4_t)v374);
      *(int16x4_t *)v376.i8 = vmovn_s32((int32x4_t)v376);
      *(int16x4_t *)v375.i8 = vmovn_s32((int32x4_t)v375);
      *(int16x4_t *)v377.i8 = vmovn_s32((int32x4_t)v377);
      v378.i64[0] = 0x10001000100010;
      v378.i64[1] = 0x10001000100010;
      v379.i64[0] = 0x10001000100010;
      v379.i64[1] = 0x10001000100010;
      int16x8_t v380 = vzip1q_s16(v374, v376);
      v376.i64[0] = 0xF000F000F000FLL;
      v376.i64[1] = 0xF000F000F000FLL;
      int16x8_t v381 = vsubq_s16(v378, (int16x8_t)v296);
      int16x8_t v382 = vzip1q_s16(v375, v377);
      v377.i64[0] = 0xF000F000F000FLL;
      v377.i64[1] = 0xF000F000F000FLL;
      int32x2_t v383 = vzip1_s32(*(int32x2_t *)v359.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v359, v359, 8uLL));
      v384.i64[0] = 0xF000F000F000FLL;
      v384.i64[1] = 0xF000F000F000FLL;
      v385.i64[0] = 0x10001000100010;
      v385.i64[1] = 0x10001000100010;
      int16x8_t v386 = vaddq_s16((int16x8_t)v296, v376);
      int16x8_t v387 = vaddq_s16((int16x8_t)v312, v377);
      int16x8_t v388 = vshlq_s16(v382, vsubq_s16(v379, (int16x8_t)v312));
      int16x8_t v389 = vshlq_s16((int16x8_t)v311, vsubq_s16(v379, (int16x8_t)v275));
      int16x8_t v390 = vshlq_s16(v346, vsubq_s16(v379, (int16x8_t)v274));
      v370.i64[0] = v383.u32[0];
      v370.i64[1] = v383.u32[1];
      int32x4_t v391 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v273.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v273, v273, 8uLL)));
      int16x8_t v392 = vaddq_s16((int16x8_t)v273, v384);
      int16x8_t v393 = vsubq_s16(v385, (int16x8_t)v273);
      int16x8_t v394 = vdupq_n_s16((v253 >> 6) & 0xFFF);
      int8x16_t v395 = (int8x16_t)vshlq_s16(vshlq_s16(v380, v381), v386);
      int16x8_t v396 = vshlq_s16(v388, v387);
      int64x2_t v397 = (int64x2_t)vshlq_u64((uint64x2_t)v345, (uint64x2_t)vnegq_s64(v370));
      *(int32x2_t *)v388.i8 = vmovn_s64((int64x2_t)v345);
      *(int32x2_t *)v397.i8 = vmovn_s64(v397);
      int16x8_t v398 = (int16x8_t)vzip1q_s32((int32x4_t)v388, (int32x4_t)v397);
      int16x8_t v399 = (int16x8_t)vshlq_u32((uint32x4_t)v398, (uint32x4_t)vnegq_s32(v391));
      *(int16x4_t *)v398.i8 = vmovn_s32((int32x4_t)v398);
      *(int16x4_t *)v399.i8 = vmovn_s32((int32x4_t)v399);
      int16x8_t v400 = vaddq_s16((int16x8_t)vandq_s8(v395, v279), v396);
      int8x16_t v401 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v395.i8, 0);
      int8x16_t v402 = (int8x16_t)vsubq_s16(v400, (int16x8_t)vandq_s8(v401, v279));
      int8x16_t v403 = (int8x16_t)vsubq_s16(vshlq_s16(v389, vaddq_s16((int16x8_t)v275, v377)), (int16x8_t)vandq_s8(v401, v278));
      int8x16_t v404 = (int8x16_t)vsubq_s16(vshlq_s16(v390, vaddq_s16((int16x8_t)v274, v377)), (int16x8_t)vandq_s8(v401, v276));
      int8x16_t v405 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(vzip1q_s16(v398, v399), v393), v392), (int16x8_t)vandq_s8(v401, v272));
      v406.i64[0] = 0x1000100010001;
      v406.i64[1] = 0x1000100010001;
      if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v256 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v406)))
      {
        int8x16_t v407 = v402;
        v407.i16[0] = v402.i16[7];
        v407.i16[7] = v402.i16[0];
        int8x16_t v408 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v256 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
        int8x16_t v409 = vbslq_s8(v408, v407, v402);
        int8x16_t v410 = (int8x16_t)vaddq_s16((int16x8_t)v409, (int16x8_t)vandq_s8(vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA7480), v408));
        int8x16_t v402 = (int8x16_t)vaddq_s16((int16x8_t)v410, (int16x8_t)vandq_s8(vqtbl1q_s8(v410, (int8x16_t)xmmword_242EA7490), v408));
        int8x16_t v411 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v403, (int8x16_t)xmmword_242EA74A0), v408), (int16x8_t)v403);
        int8x16_t v403 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v411, (int8x16_t)xmmword_242EA74B0), v408), (int16x8_t)v411);
        int8x16_t v412 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v404, (int8x16_t)xmmword_242EA74C0), v408), (int16x8_t)v404);
        int8x16_t v404 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v412, (int8x16_t)xmmword_242EA74D0), v408), (int16x8_t)v412);
        int8x16_t v413 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v405, (int8x16_t)xmmword_242EA74E0), v408), (int16x8_t)v405);
        int8x16_t v405 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8(v413, (int8x16_t)xmmword_242EA74F0), v408), (int16x8_t)v413);
      }
      int32x4_t v414 = (int32x4_t)vshlq_n_s16(vaddq_s16(v394, (int16x8_t)v402), 4uLL);
      int32x4_t v415 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v403, v394), 4uLL);
      int32x4_t v416 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v404, v394), 4uLL);
      int32x4_t v417 = (int32x4_t)vshlq_n_s16(vaddq_s16((int16x8_t)v405, v394), 4uLL);
      *(int32x4_t *)a1 = vuzp1q_s32(v414, v416);
      *(int32x4_t *)(a1 + a2) = vuzp2q_s32(v414, v416);
      int32x4_t v418 = (int32x4_t *)(a1 + 2 * a2);
      *int32x4_t v418 = vuzp1q_s32(v415, v417);
      *(int32x4_t *)((char *)v418 + a2) = vuzp2q_s32(v415, v417);
      break;
  }
  return v190;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(int64x2_t *a1, uint64_t a2, int64x2_t *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  if (a4 > 94)
  {
    if (a4 == 95)
    {
      v26.i64[0] = 0xC000C000C000CLL;
      v26.i64[1] = 0xC000C000C000CLL;
      int8x16_t v27 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v26, v26));
      v26.i64[0] = vpaddq_s32((int32x4_t)v27, (int32x4_t)v27).u64[0];
      v28.i64[0] = v26.u32[0];
      v28.i64[1] = v26.u32[1];
      int64x2_t v29 = v28;
      unint64_t v30 = vaddvq_s64(v28);
      int64x2_t v31 = 0uLL;
      if (v30 <= 0x80)
      {
        unint64_t v64 = (int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v65 = vzip1_s32(*(int32x2_t *)v27.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v27, v27, 8uLL));
        v66.i64[0] = v65.u32[0];
        v66.i64[1] = v65.u32[1];
        int64x2_t v67 = v66;
        int64x2_t v68 = vzip1q_s64((int64x2_t)0, v29);
        unint64_t v69 = 8 * (a3 & 7);
        unint64_t v70 = v30 + v69;
        int64x2_t v71 = vaddq_s64(v68, vdupq_n_s64(v69));
        int8x16_t v72 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v71)));
        if (v30 + v69 > 0x80) {
          int8x16_t v72 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v64[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v64[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), v72);
        }
        uint64x2_t v73 = (uint64x2_t)vnegq_s64(v67);
        int64x2_t v74 = (int64x2_t)vshlq_u64((uint64x2_t)v72, v73);
        *(int32x2_t *)v72.i8 = vmovn_s64((int64x2_t)v72);
        *(int32x2_t *)v74.i8 = vmovn_s64(v74);
        unint64_t v75 = v70 & 0x3F;
        unint64_t v76 = (int64x2_t *)((char *)v64 + 8 * (v70 >> 6));
        int8x16_t v77 = (int8x16_t)vaddq_s64(v68, vdupq_n_s64(v75));
        unint64_t v78 = v30 + v70;
        int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v76, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v76->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v77)));
        if (v30 + v75 >= 0x81)
        {
          int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v76[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v77)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v76[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v77)));
          int8x16_t v79 = vorrq_s8(v77, v79);
        }
        int64x2_t v80 = (int64x2_t)vshlq_u64((uint64x2_t)v79, v73);
        *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v79);
        *(int32x2_t *)v80.i8 = vmovn_s64(v80);
        unint64_t v81 = v78 & 0x3F;
        uint64_t v82 = (int64x2_t *)((char *)v64 + 8 * (v78 >> 6));
        int64x2_t v83 = vaddq_s64(v68, vdupq_n_s64(v81));
        unint64_t v84 = v30 + v78;
        int8x16_t v85 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v82, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v83)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v82->i64[0], 0), (uint64x2_t)vnegq_s64(v83)));
        if (v30 + v81 > 0x80) {
          int8x16_t v85 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v82[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v83)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v82[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v83))), v85);
        }
        int16x8_t v86 = (int16x8_t)vzip1q_s32((int32x4_t)v72, (int32x4_t)v74);
        int16x8_t v87 = (int16x8_t)vzip1q_s32((int32x4_t)v77, (int32x4_t)v80);
        int64x2_t v88 = (int64x2_t)vshlq_u64((uint64x2_t)v85, v73);
        *(int32x2_t *)v74.i8 = vmovn_s64((int64x2_t)v85);
        *(int32x2_t *)v88.i8 = vmovn_s64(v88);
        int16x8_t v89 = (int16x8_t)vzip1q_s32((int32x4_t)v74, (int32x4_t)v88);
        unint64_t v90 = v84 & 0x3F;
        int v91 = (int64x2_t *)((char *)v64 + 8 * (v84 >> 6));
        int64x2_t v92 = vaddq_s64(v68, vdupq_n_s64(v90));
        int8x16_t v93 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v92));
        unint64_t v94 = v30 + v84;
        int64x2_t v95 = vsubq_s64(vdupq_n_s64(0x40uLL), v92);
        int8x16_t v96 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)v95);
        int8x16_t v97 = vorrq_s8(v96, v93);
        if (v30 + v90 >= 0x81)
        {
          int64x2_t v98 = v91[1];
          uint64x2_t v99 = (uint64x2_t)vdupq_lane_s64(v98.i64[0], 0);
          int8x16_t v96 = (int8x16_t)vdupq_laneq_s64(v98, 1);
          int8x16_t v93 = (int8x16_t)vshlq_u64(v99, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92));
          int64x2_t v95 = vdupq_n_s64(0xC0uLL);
          int8x16_t v97 = vorrq_s8(vorrq_s8(v93, (int8x16_t)vshlq_u64((uint64x2_t)v96, (uint64x2_t)vsubq_s64(v95, v92))), v97);
        }
        v100.i64[0] = 0x1000100010001;
        v100.i64[1] = 0x1000100010001;
        *(int16x4_t *)v96.i8 = vmovn_s32((int32x4_t)v86);
        *(int16x4_t *)v86.i8 = vshrn_n_s32((int32x4_t)v86, 0xCuLL);
        *(int16x4_t *)v93.i8 = vmovn_s32((int32x4_t)v87);
        *(int16x4_t *)v87.i8 = vshrn_n_s32((int32x4_t)v87, 0xCuLL);
        *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v89);
        *(int16x4_t *)v89.i8 = vshrn_n_s32((int32x4_t)v89, 0xCuLL);
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v97, v73);
        *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        int16x8_t v102 = (int16x8_t)vzip1q_s32((int32x4_t)v97, (int32x4_t)v101);
        *(int16x4_t *)v97.i8 = vmovn_s32((int32x4_t)v102);
        *(int16x4_t *)v102.i8 = vshrn_n_s32((int32x4_t)v102, 0xCuLL);
        unint64_t v103 = v94 & 0x3F;
        unint64_t v104 = (int64x2_t *)((char *)v64 + 8 * (v94 >> 6));
        int64x2_t v105 = vaddq_s64(v68, vdupq_n_s64(v103));
        unint64_t v106 = v30 + v94;
        int8x16_t v107 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v104, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v104->i64[0], 0), (uint64x2_t)vnegq_s64(v105)));
        if (v30 + v103 > 0x80) {
          int8x16_t v107 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v104[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v104[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v105))), v107);
        }
        int16x8_t v108 = vshlq_n_s16(v100, 0xCuLL);
        v109.i64[0] = -1;
        v109.i64[1] = -1;
        int64x2_t v110 = (int64x2_t)vshlq_u64((uint64x2_t)v107, v73);
        *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
        *(int32x2_t *)v110.i8 = vmovn_s64(v110);
        int16x8_t v111 = (int16x8_t)vzip1q_s32((int32x4_t)v107, (int32x4_t)v110);
        *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v111);
        *(int16x4_t *)v111.i8 = vshrn_n_s32((int32x4_t)v111, 0xCuLL);
        unint64_t v112 = (int64x2_t *)((char *)v64 + 8 * (v106 >> 6));
        int64x2_t v113 = vaddq_s64(v68, vdupq_n_s64(v106 & 0x3F));
        unint64_t v114 = v30 + v106;
        int8x16_t v115 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v113)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113)));
        if (v30 + (v106 & 0x3F) >= 0x81) {
          int8x16_t v115 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v113))), v115);
        }
        int8x16_t v116 = (int8x16_t)vaddq_s16(v108, v109);
        int8x16_t v117 = (int8x16_t)vzip1q_s16((int16x8_t)v96, v86);
        int8x16_t v118 = (int8x16_t)vzip1q_s16((int16x8_t)v93, v87);
        int8x16_t v119 = (int8x16_t)vzip1q_s16((int16x8_t)v95, v89);
        int8x16_t v120 = (int8x16_t)vzip1q_s16((int16x8_t)v97, v102);
        int8x16_t v121 = (int8x16_t)vzip1q_s16((int16x8_t)v107, v111);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v115, v73);
        *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v115);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v97, (int32x4_t)v122);
        *(int16x4_t *)v97.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xCuLL);
        int8x16_t v124 = (int8x16_t)vzip1q_s16((int16x8_t)v97, v123);
        unint64_t v125 = v30 + v114;
        unint64_t v126 = v114 & 0x3F;
        int64x2_t v127 = vaddq_s64(v68, vdupq_n_s64(v126));
        unint64_t v128 = (int64x2_t *)((char *)v64 + 8 * (v114 >> 6));
        int8x16_t v129 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v128, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128->i64[0], 0), (uint64x2_t)vnegq_s64(v127)));
        if (v30 + v126 > 0x80) {
          int8x16_t v129 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v128[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v127))), v129);
        }
        int16x8_t v130 = (int16x8_t)vandq_s8(v117, v116);
        int16x8_t v131 = (int16x8_t)vandq_s8(v118, v116);
        int16x8_t v132 = (int16x8_t)vandq_s8(v119, v116);
        int16x8_t v133 = (int16x8_t)vandq_s8(v120, v116);
        int16x8_t v134 = (int16x8_t)vandq_s8(v121, v116);
        int16x8_t v135 = (int16x8_t)vandq_s8(v124, v116);
        int64x2_t v136 = (int64x2_t)vshlq_u64((uint64x2_t)v129, v73);
        *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
        *(int32x2_t *)v136.i8 = vmovn_s64(v136);
        int16x8_t v137 = (int16x8_t)vzip1q_s32((int32x4_t)v129, (int32x4_t)v136);
        *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v137);
        *(int16x4_t *)v137.i8 = vshrn_n_s32((int32x4_t)v137, 0xCuLL);
        __int16 v138 = (int64x2_t *)((char *)v64 + 8 * (v125 >> 6));
        int64x2_t v139 = vaddq_s64(v68, vdupq_n_s64(v125 & 0x3F));
        int16x8_t v140 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v129, v137), v116);
        int8x16_t v141 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v138, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
        if (v30 + (v125 & 0x3F) >= 0x81) {
          int8x16_t v141 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v138[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v138[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), v141);
        }
        int64x2_t v33 = (int64x2_t)vshlq_n_s16(v130, 4uLL);
        int64x2_t v34 = (int64x2_t)vshlq_n_s16(v131, 4uLL);
        int64x2_t v36 = (int64x2_t)vshlq_n_s16(v132, 4uLL);
        int64x2_t v35 = (int64x2_t)vshlq_n_s16(v133, 4uLL);
        int64x2_t v31 = (int64x2_t)vshlq_n_s16(v134, 4uLL);
        int64x2_t v32 = (int64x2_t)vshlq_n_s16(v135, 4uLL);
        int64x2_t v142 = (int64x2_t)vshlq_u64((uint64x2_t)v141, v73);
        *(int32x2_t *)v133.i8 = vmovn_s64((int64x2_t)v141);
        *(int32x2_t *)v142.i8 = vmovn_s64(v142);
        int16x8_t v143 = (int16x8_t)vzip1q_s32((int32x4_t)v133, (int32x4_t)v142);
        *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v143);
        *(int16x4_t *)v143.i8 = vshrn_n_s32((int32x4_t)v143, 0xCuLL);
        int16x8_t v144 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v133, v143), v116);
        int64x2_t v38 = (int64x2_t)vshlq_n_s16(v140, 4uLL);
        int64x2_t v37 = (int64x2_t)vshlq_n_s16(v144, 4uLL);
      }
      else
      {
        int64x2_t v32 = 0uLL;
        int64x2_t v33 = 0uLL;
        int64x2_t v34 = 0uLL;
        int64x2_t v35 = 0uLL;
        int64x2_t v36 = 0uLL;
        int64x2_t v37 = 0uLL;
        int64x2_t v38 = 0uLL;
      }
      unint64_t v145 = (int64x2_t *)((char *)a1 + a2);
      *a1 = vzip1q_s64(v33, v34);
      a1[1] = vzip1q_s64(v31, v32);
      int v146 = (int64x2_t *)((char *)a1 + 2 * a2);
      int64x2_t *v145 = vzip2q_s64(v33, v34);
      v145[1] = vzip2q_s64(v31, v32);
      *int v146 = vzip1q_s64(v36, v35);
      v146[1] = vzip1q_s64(v38, v37);
      int v147 = (int64x2_t *)((char *)v146 + a2);
      *int v147 = vzip2q_s64(v36, v35);
      v147[1] = vzip2q_s64(v38, v37);
      return 96;
    }
    if (a4 == 127)
    {
      int64x2_t v11 = *a3;
      int64x2_t v12 = a3[1];
      int64x2_t v13 = a3[2];
      int64x2_t v14 = a3[3];
      int64x2_t v15 = a3[4];
      int64x2_t v16 = a3[5];
      int64x2_t v17 = a3[6];
      int64x2_t v18 = a3[7];
      BOOL v19 = (int64x2_t *)((char *)a1 + a2);
      *a1 = vzip1q_s64(*a3, v12);
      a1[1] = vzip1q_s64(v15, v16);
      uint64_t v20 = (int64x2_t *)((char *)a1 + 2 * a2);
      *BOOL v19 = vzip2q_s64(v11, v12);
      v19[1] = vzip2q_s64(v15, v16);
      *uint64_t v20 = vzip1q_s64(v13, v14);
      v20[1] = vzip1q_s64(v17, v18);
      uint64_t v21 = (int64x2_t *)((char *)v20 + a2);
      *uint64_t v21 = vzip2q_s64(v13, v14);
      v21[1] = vzip2q_s64(v17, v18);
      return 128;
    }
  }
  else
  {
    if (!a4)
    {
      uint64_t v10 = 0;
      long long v22 = 0uLL;
      *a1 = 0u;
      a1[1] = 0u;
      uint64_t v23 = &a1->i8[a2];
      *(_OWORD *)uint64_t v23 = 0u;
      *((_OWORD *)v23 + 1) = 0u;
      int v24 = &a1->i8[2 * a2];
      *(_OWORD *)int v24 = 0u;
      *((_OWORD *)v24 + 1) = 0u;
      uint64_t v25 = &a1->i8[2 * a2 + a2];
LABEL_116:
      *(_OWORD *)uint64_t v25 = v22;
      *((_OWORD *)v25 + 1) = v22;
      return v10;
    }
    if (a4 == 2)
    {
      int32x4_t v6 = vdupq_n_s32((a3->i32[0] << 8) & 0xFFF00000 | (16 * (a3->i32[0] & 0xFFF)));
      *a1 = (int64x2_t)v6;
      a1[1] = (int64x2_t)v6;
      int8x16_t v7 = (int32x4_t *)&a1->i8[a2];
      *int8x16_t v7 = v6;
      v7[1] = v6;
      int8x16_t v8 = (int32x4_t *)((char *)a1 + 2 * a2);
      *int8x16_t v8 = v6;
      v8[1] = v6;
      uint64_t v9 = (int32x4_t *)((char *)a1 + 2 * a2 + a2);
      *uint64_t v9 = v6;
      v9[1] = v6;
      return 3;
    }
  }
  unint64_t v39 = 8 * (a3 & 7);
  unint64_t v40 = (unint64_t)a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = v39 + 18;
  uint64_t v42 = *(void *)((unint64_t)a3 & 0xFFFFFFFFFFFFFFF8) >> v39;
  if (v39 >= 0x2F) {
    v42 |= *(void *)(v40 + 8) << (-8 * (a3 & 7u));
  }
  a5.i32[0] = v42;
  a5.i32[1] = (unsigned __int16)v42 >> 5;
  *(int8x8_t *)a5.i8 = vand_s8(*(int8x8_t *)a5.i8, (int8x8_t)0x1F0000001FLL);
  *(int16x4_t *)a5.i8 = vmovn_s32(a5);
  a6.i32[0] = (unsigned __int16)v42 >> 10;
  a6.i32[1] = v42 >> 14;
  *(int32x2_t *)a6.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
  *(int16x4_t *)a6.i8 = vmovn_s32(a6);
  unint64_t v43 = v39 + 42;
  unint64_t v44 = v41 >> 6;
  unint64_t v45 = v41 & 0x3A;
  uint64_t v46 = *(void *)(v40 + 8 * v44) >> v45;
  if (v45 >= 0x29) {
    v46 |= *(void *)(v40 + 8 * v44 + 8) << -(char)v45;
  }
  int8x16_t v47 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a5.i8, 0);
  int8x16_t v48 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
  unint64_t v49 = (8 * (a3 & 7)) | 0x300;
  v50.i64[0] = 0x3000300030003;
  v50.i64[1] = 0x3000300030003;
  int16x8_t v51 = (int16x8_t)vandq_s8(v47, v50);
  int8x16_t v52 = vbicq_s8(v48, (int8x16_t)vceqq_s16(v51, (int16x8_t)v50));
  v50.i64[0] = 0x202020202020202;
  v50.i64[1] = 0x202020202020202;
  int8x16_t v53 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v47.i8, (int8x8_t)0x4000400040004)))), v50);
  if (vmaxvq_s8(v53) < 1)
  {
    int v63 = 0;
    v148.i64[0] = -1;
    v148.i64[1] = -1;
    int8x16_t v149 = v52;
    int8x16_t v150 = v52;
    int8x16_t v151 = v52;
    v152.i64[0] = -1;
    v152.i64[1] = -1;
    int8x16_t v153 = v52;
    v154.i64[0] = -1;
    v154.i64[1] = -1;
    v155.i64[0] = -1;
    v155.i64[1] = -1;
  }
  else
  {
    int8x16_t v54 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v53, v53));
    int8x16_t v55 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v54, (int16x8_t)v54));
    unint64_t v56 = vpaddq_s32((int32x4_t)v55, (int32x4_t)v55).u64[0];
    v57.i64[0] = v56;
    v57.i64[1] = HIDWORD(v56);
    int64x2_t v58 = v57;
    unint64_t v59 = vaddvq_s64(v57);
    unint64_t v60 = v43 + v59;
    if (v59 <= 0x80 && v49 >= v60)
    {
      unint64_t v156 = v43 & 0x3A;
      int64x2_t v157 = vaddq_s64(vdupq_n_s64(v156), vzip1q_s64((int64x2_t)0, v58));
      unint64_t v158 = (int64x2_t *)(v40 + ((v43 >> 3) & 8));
      int8x16_t v62 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v158, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v157)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v158->i64[0], 0), (uint64x2_t)vnegq_s64(v157)));
      if (v156 + v59 < 0x81)
      {
        int v63 = 0;
      }
      else
      {
        int v63 = 0;
        int8x16_t v62 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v158[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v157)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v158[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v157))), v62);
      }
      unint64_t v43 = v60;
    }
    else
    {
      int8x16_t v62 = 0uLL;
      int v63 = 1;
    }
    int32x2_t v159 = vzip1_s32(*(int32x2_t *)v55.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v55, v55, 8uLL));
    v160.i64[0] = v159.u32[0];
    v160.i64[1] = v159.u32[1];
    int64x2_t v161 = (int64x2_t)vshlq_u64((uint64x2_t)v62, (uint64x2_t)vnegq_s64(v160));
    *(int32x2_t *)v62.i8 = vmovn_s64((int64x2_t)v62);
    *(int32x2_t *)v161.i8 = vmovn_s64(v161);
    int8x16_t v162 = (int8x16_t)vzip1q_s32((int32x4_t)v62, (int32x4_t)v161);
    int16x8_t v163 = (int16x8_t)vshlq_u32((uint32x4_t)v162, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v54.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v54, v54, 8uLL)))));
    *(int16x4_t *)v162.i8 = vmovn_s32((int32x4_t)v162);
    *(int16x4_t *)v163.i8 = vmovn_s32((int32x4_t)v163);
    int16x8_t v164 = vzip1q_s16((int16x8_t)v162, v163);
    v162.i64[0] = 0x101010101010101;
    v162.i64[1] = 0x101010101010101;
    *(int8x8_t *)v165.i8 = vand_s8(vzip1_s8(vmovn_s16(v164), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v164, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v53.i8, *(int8x8_t *)v47.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v162, v53), (int8x8_t)-1));
    v165.i64[1] = v165.i64[0];
    *(int8x8_t *)v165.i8 = vqtbl1_s8(v165, (int8x8_t)0x703060205010400);
    *(int16x4_t *)v164.i8 = vdup_lane_s16(*(int16x4_t *)v165.i8, 0);
    *(int16x4_t *)v162.i8 = vdup_lane_s16(*(int16x4_t *)v165.i8, 1);
    int8x8_t v166 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v165.i8, 2);
    int8x8_t v167 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v165.i8, 3);
    int8x16_t v153 = (int8x16_t)vsubw_s8((int16x8_t)v52, *(int8x8_t *)v164.i8);
    int8x16_t v151 = (int8x16_t)vsubw_s8((int16x8_t)v52, *(int8x8_t *)v162.i8);
    int8x16_t v150 = (int8x16_t)vsubw_s8((int16x8_t)v52, v166);
    int8x16_t v149 = (int8x16_t)vsubw_s8((int16x8_t)v52, v167);
    int8x16_t v155 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v164.i8));
    int8x16_t v154 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v162.i8));
    int8x16_t v152 = (int8x16_t)vmovl_s8(vceqz_s8(v166));
    int8x16_t v148 = (int8x16_t)vmovl_s8(vceqz_s8(v167));
  }
  v168.i64[0] = 0x8000800080008;
  v168.i64[1] = 0x8000800080008;
  int8x16_t v169 = 0uLL;
  int8x16_t v170 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v47, v168), (int8x16_t)0, 0xCuLL), v52);
  int8x16_t v171 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
  v168.i64[0] = vpaddq_s32((int32x4_t)v171, (int32x4_t)v171).u64[0];
  v172.i64[0] = v168.u32[0];
  v172.i64[1] = v168.u32[1];
  int64x2_t v173 = v172;
  unint64_t v174 = vaddvq_s64(v172);
  unint64_t v175 = v43 + v174;
  if (v174 <= 0x80 && v49 >= v175)
  {
    unint64_t v177 = v43 & 0x3F;
    int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v173));
    unint64_t v179 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v169 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
    if (v177 + v174 >= 0x81) {
      int8x16_t v169 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v169);
    }
    unint64_t v43 = v175;
  }
  else
  {
    int v63 = 1;
  }
  int v180 = v47.i8[0] & 3;
  if (v180 == 2)
  {
    BOOL v181 = v49 < v43 + 8;
    unint64_t v182 = v43 + 16;
    if (v49 >= v43 + 8) {
      v43 += 8;
    }
    if (v182 > v49 || v181) {
      int v63 = 1;
    }
    else {
      v43 += 8;
    }
  }
  int8x16_t v184 = 0uLL;
  int8x16_t v185 = vextq_s8((int8x16_t)0, v153, 0xCuLL);
  int8x16_t v186 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v185, (int16x8_t)v185));
  unint64_t v187 = vpaddq_s32((int32x4_t)v186, (int32x4_t)v186).u64[0];
  v188.i64[0] = v187;
  v188.i64[1] = HIDWORD(v187);
  int64x2_t v189 = v188;
  unint64_t v190 = vaddvq_s64(v188);
  unint64_t v191 = v43 + v190;
  if (v190 <= 0x80 && v49 >= v191)
  {
    unint64_t v194 = v43 & 0x3F;
    int64x2_t v195 = vaddq_s64(vdupq_n_s64(v194), vzip1q_s64((int64x2_t)0, v189));
    int16x8_t v196 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v193 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v196, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196->i64[0], 0), (uint64x2_t)vnegq_s64(v195)));
    if (v194 + v190 >= 0x81) {
      int8x16_t v193 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v196[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v195)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v196[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v195))), v193);
    }
    unint64_t v43 = v191;
  }
  else
  {
    int v63 = 1;
    int8x16_t v193 = 0uLL;
  }
  int8x16_t v197 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v153, (int16x8_t)v153));
  unint64_t v198 = vpaddq_s32((int32x4_t)v197, (int32x4_t)v197).u64[0];
  v199.i64[0] = v198;
  v199.i64[1] = HIDWORD(v198);
  int64x2_t v200 = v199;
  unint64_t v201 = vaddvq_s64(v199);
  unint64_t v202 = v43 + v201;
  if (v201 <= 0x80 && v49 >= v202)
  {
    unint64_t v204 = v43 & 0x3F;
    int64x2_t v205 = vaddq_s64(vdupq_n_s64(v204), vzip1q_s64((int64x2_t)0, v200));
    unint64_t v206 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v184 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v206, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v205)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v206->i64[0], 0), (uint64x2_t)vnegq_s64(v205)));
    if (v204 + v201 >= 0x81) {
      int8x16_t v184 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v206[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v205)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v206[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v205))), v184);
    }
    unint64_t v43 = v202;
  }
  else
  {
    int v63 = 1;
  }
  int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v151, (int16x8_t)v151));
  unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
  v209.i64[0] = v208;
  v209.i64[1] = HIDWORD(v208);
  int64x2_t v210 = v209;
  unint64_t v211 = vaddvq_s64(v209);
  unint64_t v212 = v43 + v211;
  int8x16_t v213 = 0uLL;
  if (v211 <= 0x80 && v49 >= v212)
  {
    unint64_t v216 = v43 & 0x3F;
    int64x2_t v217 = vaddq_s64(vdupq_n_s64(v216), vzip1q_s64((int64x2_t)0, v210));
    int64x2_t v218 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v218, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218->i64[0], 0), (uint64x2_t)vnegq_s64(v217)));
    if (v216 + v211 >= 0x81) {
      int8x16_t v215 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v218[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v217)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v218[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v217))), v215);
    }
    unint64_t v43 = v212;
    if (v211 > 0x80) {
      goto LABEL_90;
    }
  }
  else
  {
    int v63 = 1;
    int8x16_t v215 = 0uLL;
    if (v211 > 0x80) {
      goto LABEL_90;
    }
  }
  unint64_t v219 = v43 + v211;
  if (v49 >= v43 + v211)
  {
    unint64_t v220 = v43 & 0x3F;
    int64x2_t v221 = vaddq_s64(vdupq_n_s64(v220), vzip1q_s64((int64x2_t)0, v210));
    unint64_t v222 = (int64x2_t *)(v40 + 8 * (v43 >> 6));
    int8x16_t v213 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v222, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222->i64[0], 0), (uint64x2_t)vnegq_s64(v221)));
    if (v220 + v211 >= 0x81) {
      int8x16_t v213 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v221)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v222[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v221))), v213);
    }
    goto LABEL_91;
  }
LABEL_90:
  int v63 = 1;
  unint64_t v219 = v43;
LABEL_91:
  int8x16_t v223 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v150, (int16x8_t)v150));
  unint64_t v224 = vpaddq_s32((int32x4_t)v223, (int32x4_t)v223).u64[0];
  v225.i64[0] = v224;
  v225.i64[1] = HIDWORD(v224);
  int64x2_t v226 = v225;
  unint64_t v227 = vaddvq_s64(v225);
  int8x16_t v228 = 0uLL;
  if (v227 > 0x80 || (unint64_t v229 = v219 + v227, v49 < v219 + v227))
  {
    int v63 = 1;
    unint64_t v229 = v219;
    int8x16_t v232 = 0uLL;
  }
  else
  {
    int64x2_t v230 = vaddq_s64(vdupq_n_s64(v219 & 0x3F), vzip1q_s64((int64x2_t)0, v226));
    int64x2_t v231 = (int64x2_t *)(v40 + 8 * (v219 >> 6));
    int8x16_t v232 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v231, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v230)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231->i64[0], 0), (uint64x2_t)vnegq_s64(v230)));
    if ((v219 & 0x3F) + v227 >= 0x81) {
      int8x16_t v232 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v231[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v230)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v231[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v230))), v232);
    }
  }
  if (v227 > 0x80 || (unint64_t v233 = v229 + v227, v49 < v229 + v227))
  {
    int v63 = 1;
    unint64_t v233 = v229;
  }
  else
  {
    int64x2_t v234 = vaddq_s64(vdupq_n_s64(v229 & 0x3F), vzip1q_s64((int64x2_t)0, v226));
    int16x8_t v235 = (int64x2_t *)(v40 + 8 * (v229 >> 6));
    int8x16_t v228 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v235, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235->i64[0], 0), (uint64x2_t)vnegq_s64(v234)));
    if ((v229 & 0x3F) + v227 >= 0x81) {
      int8x16_t v228 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v235[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v234)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v235[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v234))), v228);
    }
  }
  int8x16_t v236 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v149, (int16x8_t)v149));
  unint64_t v237 = vpaddq_s32((int32x4_t)v236, (int32x4_t)v236).u64[0];
  v238.i64[0] = v237;
  v238.i64[1] = HIDWORD(v237);
  int64x2_t v239 = v238;
  unint64_t v240 = vaddvq_s64(v238);
  if (v240 > 0x80 || (unint64_t v241 = v233 + v240, v49 < v233 + v240))
  {
    int v63 = 1;
    unint64_t v241 = v233;
    int8x16_t v245 = 0uLL;
  }
  else
  {
    unint64_t v242 = v233 & 0x3F;
    int64x2_t v243 = vaddq_s64(vdupq_n_s64(v242), vzip1q_s64((int64x2_t)0, v239));
    int16x8_t v244 = (int64x2_t *)(v40 + 8 * (v233 >> 6));
    int8x16_t v245 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v244, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v243)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v244->i64[0], 0), (uint64x2_t)vnegq_s64(v243)));
    if (v242 + v240 >= 0x81) {
      int8x16_t v245 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v244[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v243)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v244[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v243))), v245);
    }
  }
  if (v240 > 0x80 || v49 < v241 + v240) {
    goto LABEL_114;
  }
  int64x2_t v246 = vaddq_s64(vdupq_n_s64(v241 & 0x3F), vzip1q_s64((int64x2_t)0, v239));
  int32x4_t v247 = (int64x2_t *)(v40 + 8 * (v241 >> 6));
  int8x16_t v248 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v247, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v246)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v247->i64[0], 0), (uint64x2_t)vnegq_s64(v246)));
  if ((v241 & 0x3F) + v240 >= 0x81) {
    int8x16_t v248 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v247[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v246)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v247[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v246))), v248);
  }
  if (v63 || (uint64_t v10 = a4 + 1, v49 + 8 * v10 - (v241 + v240) - 768 >= 9))
  {
LABEL_114:
    uint64_t v10 = 0;
    unint64_t v249 = (unint64_t)&v369;
LABEL_115:
    *(void *)(v249 & 0xFFFFFFFFFFFFFFF8) |= 4095 << ((8 * v249) & 0x20);
    long long v22 = 0uLL;
    *a1 = 0u;
    a1[1] = 0u;
    unint64_t v250 = &a1->i8[a2];
    *(_OWORD *)unint64_t v250 = 0u;
    *((_OWORD *)v250 + 1) = 0u;
    unint64_t v251 = &a1->i8[2 * a2];
    uint64_t v25 = &a1->i8[2 * a2 + a2];
    *(_OWORD *)unint64_t v251 = 0u;
    *((_OWORD *)v251 + 1) = 0u;
    goto LABEL_116;
  }
  if (v180 == 2)
  {
    uint64_t v10 = 0;
    unint64_t v249 = (unint64_t)&v370;
    goto LABEL_115;
  }
  int32x2_t v253 = vzip1_s32(*(int32x2_t *)v171.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL));
  int32x2_t v254 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
  v255.i64[0] = v253.u32[0];
  v255.i64[1] = v253.u32[1];
  int64x2_t v256 = v255;
  v255.i64[0] = v254.u32[0];
  v255.i64[1] = v254.u32[1];
  uint64x2_t v257 = (uint64x2_t)vnegq_s64(v256);
  uint64x2_t v258 = (uint64x2_t)vnegq_s64(v255);
  int64x2_t v259 = (int64x2_t)vshlq_u64((uint64x2_t)v169, v257);
  *(int32x2_t *)v169.i8 = vmovn_s64((int64x2_t)v169);
  *(int32x2_t *)v259.i8 = vmovn_s64(v259);
  int16x8_t v260 = (int16x8_t)vzip1q_s32((int32x4_t)v169, (int32x4_t)v259);
  int64x2_t v261 = (int64x2_t)vshlq_u64((uint64x2_t)v215, v258);
  *(int32x2_t *)v215.i8 = vmovn_s64((int64x2_t)v215);
  *(int32x2_t *)v261.i8 = vmovn_s64(v261);
  int16x8_t v262 = (int16x8_t)vzip1q_s32((int32x4_t)v215, (int32x4_t)v261);
  int64x2_t v263 = (int64x2_t)vshlq_u64((uint64x2_t)v213, v258);
  *(int32x2_t *)v213.i8 = vmovn_s64((int64x2_t)v213);
  *(int32x2_t *)v263.i8 = vmovn_s64(v263);
  int16x8_t v264 = (int16x8_t)vzip1q_s32((int32x4_t)v213, (int32x4_t)v263);
  uint32x4_t v265 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v151.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v151, v151, 8uLL))));
  int16x8_t v266 = (int16x8_t)vshlq_u32((uint32x4_t)v260, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL)))));
  *(int16x4_t *)v260.i8 = vmovn_s32((int32x4_t)v260);
  *(int16x4_t *)v266.i8 = vmovn_s32((int32x4_t)v266);
  int16x8_t v267 = vzip1q_s16(v260, v266);
  int16x8_t v268 = (int16x8_t)vshlq_u32((uint32x4_t)v262, v265);
  int16x8_t v269 = (int16x8_t)vshlq_u32((uint32x4_t)v264, v265);
  *(int16x4_t *)v262.i8 = vmovn_s32((int32x4_t)v262);
  *(int16x4_t *)v268.i8 = vmovn_s32((int32x4_t)v268);
  *(int16x4_t *)v264.i8 = vmovn_s32((int32x4_t)v264);
  *(int16x4_t *)v269.i8 = vmovn_s32((int32x4_t)v269);
  int16x8_t v270 = vzip1q_s16(v262, v268);
  v268.i64[0] = 0x10001000100010;
  v268.i64[1] = 0x10001000100010;
  int16x8_t v271 = vzip1q_s16(v264, v269);
  v269.i64[0] = 0xF000F000F000FLL;
  v269.i64[1] = 0xF000F000F000FLL;
  int16x8_t v272 = vsubq_s16(v268, (int16x8_t)v170);
  int16x8_t v273 = vaddq_s16((int16x8_t)v170, v269);
  v269.i64[0] = 0x10001000100010;
  v269.i64[1] = 0x10001000100010;
  int16x8_t v274 = vshlq_s16(v267, v272);
  v272.i64[0] = 0xF000F000F000FLL;
  v272.i64[1] = 0xF000F000F000FLL;
  int16x8_t v275 = vsubq_s16(v269, (int16x8_t)v151);
  int16x8_t v276 = vaddq_s16((int16x8_t)v151, v272);
  int8x16_t v277 = (int8x16_t)vshlq_s16(v274, v273);
  int16x8_t v278 = vshlq_s16(vshlq_s16(v270, v275), v276);
  int16x8_t v279 = vshlq_s16(vshlq_s16(v271, v275), v276);
  int8x16_t v280 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v277.i8, 0);
  int16x8_t v281 = (int16x8_t)vandq_s8(v154, v280);
  int16x8_t v282 = vsubq_s16(v278, v281);
  int16x8_t v283 = vsubq_s16(v279, v281);
  *(int32x2_t *)v278.i8 = vzip1_s32(*(int32x2_t *)v223.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v223, v223, 8uLL));
  *(int32x2_t *)v279.i8 = vzip1_s32(*(int32x2_t *)v236.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v236, v236, 8uLL));
  v255.i64[0] = v278.u32[0];
  v255.i64[1] = v278.u32[1];
  int64x2_t v284 = v255;
  v255.i64[0] = v279.u32[0];
  v255.i64[1] = v279.u32[1];
  uint64x2_t v285 = (uint64x2_t)vnegq_s64(v284);
  int64x2_t v286 = (int64x2_t)vshlq_u64((uint64x2_t)v232, v285);
  *(int32x2_t *)v281.i8 = vmovn_s64((int64x2_t)v232);
  *(int32x2_t *)v286.i8 = vmovn_s64(v286);
  int16x8_t v287 = (int16x8_t)vzip1q_s32((int32x4_t)v281, (int32x4_t)v286);
  uint64x2_t v288 = (uint64x2_t)vnegq_s64(v255);
  int64x2_t v289 = (int64x2_t)vshlq_u64((uint64x2_t)v228, v285);
  *(int32x2_t *)v228.i8 = vmovn_s64((int64x2_t)v228);
  *(int32x2_t *)v289.i8 = vmovn_s64(v289);
  int16x8_t v290 = (int16x8_t)vzip1q_s32((int32x4_t)v228, (int32x4_t)v289);
  int64x2_t v291 = (int64x2_t)vshlq_u64((uint64x2_t)v245, v288);
  *(int32x2_t *)v232.i8 = vmovn_s64((int64x2_t)v245);
  *(int32x2_t *)v291.i8 = vmovn_s64(v291);
  uint32x4_t v292 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v150.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v150, v150, 8uLL))));
  int16x8_t v293 = (int16x8_t)vzip1q_s32((int32x4_t)v232, (int32x4_t)v291);
  int16x8_t v294 = (int16x8_t)vshlq_u32((uint32x4_t)v287, v292);
  int16x8_t v295 = (int16x8_t)vshlq_u32((uint32x4_t)v290, v292);
  *(int16x4_t *)v287.i8 = vmovn_s32((int32x4_t)v287);
  *(int16x4_t *)v294.i8 = vmovn_s32((int32x4_t)v294);
  *(int16x4_t *)v290.i8 = vmovn_s32((int32x4_t)v290);
  *(int16x4_t *)v295.i8 = vmovn_s32((int32x4_t)v295);
  int16x8_t v296 = vzip1q_s16(v287, v294);
  v294.i64[0] = 0x10001000100010;
  v294.i64[1] = 0x10001000100010;
  int16x8_t v297 = vzip1q_s16(v290, v295);
  v295.i64[0] = 0xF000F000F000FLL;
  v295.i64[1] = 0xF000F000F000FLL;
  int16x8_t v298 = vsubq_s16(v294, (int16x8_t)v150);
  int16x8_t v299 = vaddq_s16((int16x8_t)v150, v295);
  uint32x4_t v300 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v149.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v149, v149, 8uLL))));
  int16x8_t v301 = vshlq_s16(vshlq_s16(v296, v298), v299);
  int16x8_t v302 = vshlq_s16(vshlq_s16(v297, v298), v299);
  int16x8_t v303 = (int16x8_t)vandq_s8(v152, v280);
  int16x8_t v304 = vsubq_s16(v301, v303);
  int16x8_t v305 = vsubq_s16(v302, v303);
  int16x8_t v306 = (int16x8_t)vshlq_u32((uint32x4_t)v293, v300);
  *(int16x4_t *)v301.i8 = vmovn_s32((int32x4_t)v293);
  *(int16x4_t *)v306.i8 = vmovn_s32((int32x4_t)v306);
  v293.i64[0] = 0x10001000100010;
  v293.i64[1] = 0x10001000100010;
  int16x8_t v307 = vzip1q_s16(v301, v306);
  v301.i64[0] = 0xF000F000F000FLL;
  v301.i64[1] = 0xF000F000F000FLL;
  int16x8_t v308 = vsubq_s16(v293, (int16x8_t)v149);
  int16x8_t v309 = vaddq_s16((int16x8_t)v149, v301);
  int64x2_t v310 = (int64x2_t)vshlq_u64((uint64x2_t)v248, v288);
  *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v248);
  *(int32x2_t *)v310.i8 = vmovn_s64(v310);
  int16x8_t v311 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v310);
  int16x8_t v312 = (int16x8_t)vshlq_u32((uint32x4_t)v311, v300);
  *(int16x4_t *)v311.i8 = vmovn_s32((int32x4_t)v311);
  *(int16x4_t *)v312.i8 = vmovn_s32((int32x4_t)v312);
  int16x8_t v313 = vshlq_s16(vshlq_s16(vzip1q_s16(v311, v312), v308), v309);
  int16x8_t v314 = (int16x8_t)vandq_s8(v148, v280);
  int16x8_t v315 = vsubq_s16(vshlq_s16(vshlq_s16(v307, v308), v309), v314);
  int16x8_t v316 = vsubq_s16(v313, v314);
  int32x2_t v317 = vzip1_s32(*(int32x2_t *)v186.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v186, v186, 8uLL));
  int32x2_t v318 = vzip1_s32(*(int32x2_t *)v197.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v197, v197, 8uLL));
  v255.i64[0] = v317.u32[0];
  v255.i64[1] = v317.u32[1];
  int64x2_t v319 = v255;
  v255.i64[0] = v318.u32[0];
  v255.i64[1] = v318.u32[1];
  int64x2_t v320 = (int64x2_t)vshlq_u64((uint64x2_t)v193, (uint64x2_t)vnegq_s64(v319));
  *(int32x2_t *)v193.i8 = vmovn_s64((int64x2_t)v193);
  *(int32x2_t *)v320.i8 = vmovn_s64(v320);
  int16x8_t v321 = (int16x8_t)vzip1q_s32((int32x4_t)v193, (int32x4_t)v320);
  int64x2_t v322 = (int64x2_t)vshlq_u64((uint64x2_t)v184, (uint64x2_t)vnegq_s64(v255));
  *(int32x2_t *)v184.i8 = vmovn_s64((int64x2_t)v184);
  *(int32x2_t *)v322.i8 = vmovn_s64(v322);
  int16x8_t v323 = (int16x8_t)vzip1q_s32((int32x4_t)v184, (int32x4_t)v322);
  int16x8_t v324 = (int16x8_t)vshlq_u32((uint32x4_t)v321, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v185.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v185, v185, 8uLL)))));
  int16x8_t v325 = (int16x8_t)vshlq_u32((uint32x4_t)v323, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v153.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v153, v153, 8uLL)))));
  *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v321);
  *(int16x4_t *)v324.i8 = vmovn_s32((int32x4_t)v324);
  *(int16x4_t *)v323.i8 = vmovn_s32((int32x4_t)v323);
  *(int16x4_t *)v325.i8 = vmovn_s32((int32x4_t)v325);
  int16x8_t v326 = vzip1q_s16(v321, v324);
  v324.i64[0] = 0x10001000100010;
  v324.i64[1] = 0x10001000100010;
  int16x8_t v327 = vzip1q_s16(v323, v325);
  v325.i64[0] = 0xF000F000F000FLL;
  v325.i64[1] = 0xF000F000F000FLL;
  int16x8_t v328 = vaddq_s16((int16x8_t)vandq_s8(v277, v155), vshlq_s16(vshlq_s16(v326, vsubq_s16(v324, (int16x8_t)v185)), vaddq_s16((int16x8_t)v185, v325)));
  int16x8_t v329 = (int16x8_t)vandq_s8(v155, v280);
  v330.i64[0] = 0x1000100010001;
  v330.i64[1] = 0x1000100010001;
  int16x8_t v331 = vceqq_s16(v51, (int16x8_t)v330);
  int v332 = (unsigned __int16)vaddvq_s16(v331);
  int8x16_t v333 = (int8x16_t)vsubq_s16(v328, v329);
  int8x16_t v334 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v327, vsubq_s16(v324, (int16x8_t)v153)), vaddq_s16((int16x8_t)v153, v325)), v329);
  v331.i16[0] = v46 & 0xFFF;
  v331.i16[1] = (v46 >> 12) & 0xFFF;
  int16x8_t v335 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v331.i8, 0);
  if (v332)
  {
    int8x16_t v336 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v47, v330));
    int8x16_t v337 = v334;
    v337.i32[3] = v333.i32[0];
    int8x16_t v338 = v333;
    v338.i32[0] = v334.i32[3];
    v371.val[0] = vbslq_s8(v336, v338, v333);
    v371.val[1] = vbslq_s8(v336, v337, v334);
    v339.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v339.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v372.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v371, (int8x16_t)xmmword_242EA7570), v336), (int16x8_t)v371.val[0]);
    v372.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v371.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v371, v339), v336));
    int8x16_t v333 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v372, (int8x16_t)xmmword_242EA7580), v336), (int16x8_t)v372.val[0]);
    int8x16_t v334 = (int8x16_t)vaddq_s16((int16x8_t)v372.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v372, v339), v336));
    v372.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v282.i8, (int8x16_t)xmmword_242EA7590), v336), v282);
    v372.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v282.i8, (int8x16_t)xmmword_242EA75A0), v336), v283);
    int16x8_t v282 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v372, (int8x16_t)xmmword_242EA75B0), v336), (int16x8_t)v372.val[0]);
    int16x8_t v283 = vaddq_s16((int16x8_t)v372.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v372, v339), v336));
    v372.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v304.i8, (int8x16_t)xmmword_242EA75C0), v336), v304);
    v372.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v304.i8, (int8x16_t)xmmword_242EA7570), v336), v305);
    int16x8_t v304 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v372, v339), v336), (int16x8_t)v372.val[0]);
    int16x8_t v305 = vaddq_s16((int16x8_t)v372.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v372, (int8x16_t)xmmword_242EA75D0), v336));
    v371.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v315.i8, (int8x16_t)xmmword_242EA75E0), v336), v315);
    v371.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v315.i8, (int8x16_t)xmmword_242EA7570), v336), v316);
    int16x8_t v315 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v371, v339), v336), (int16x8_t)v371.val[0]);
    int16x8_t v316 = vaddq_s16((int16x8_t)v371.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v371, (int8x16_t)xmmword_242EA75F0), v336));
  }
  int8x16_t v340 = (int8x16_t)vaddq_s16((int16x8_t)v333, v335);
  int8x16_t v341 = (int8x16_t)vaddq_s16((int16x8_t)v334, v335);
  int8x16_t v342 = (int8x16_t)vaddq_s16(v282, v335);
  int8x16_t v343 = (int8x16_t)vaddq_s16(v283, v335);
  int8x16_t v344 = (int8x16_t)vaddq_s16(v304, v335);
  int8x16_t v345 = (int8x16_t)vaddq_s16(v305, v335);
  int8x16_t v346 = (int8x16_t)vaddq_s16(v315, v335);
  int8x16_t v347 = (int8x16_t)vaddq_s16(v316, v335);
  v348.i64[0] = 0x10001000100010;
  v348.i64[1] = 0x10001000100010;
  int8x16_t v349 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v47, v348));
  int16x8_t v350 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v340, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v340);
  int16x8_t v351 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v341, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v341);
  int16x8_t v352 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v342, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v342);
  int16x8_t v353 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v343, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v343);
  int16x8_t v354 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v344, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v344);
  int16x8_t v355 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v345, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v345);
  int16x8_t v356 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v346, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v346);
  int16x8_t v357 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v347, (int8x16_t)xmmword_242EA76C0), v349), (int16x8_t)v347);
  int64x2_t v358 = (int64x2_t)vshlq_n_s16(v350, 4uLL);
  int64x2_t v359 = (int64x2_t)vshlq_n_s16(v351, 4uLL);
  int64x2_t v360 = (int64x2_t)vshlq_n_s16(v352, 4uLL);
  int64x2_t v361 = (int64x2_t)vshlq_n_s16(v354, 4uLL);
  int64x2_t v362 = (int64x2_t)vshlq_n_s16(v355, 4uLL);
  unint64_t v363 = (int64x2_t *)((char *)a1 + a2);
  *a1 = vzip1q_s64(v358, v359);
  a1[1] = vzip1q_s64(v361, v362);
  int64x2_t v364 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t v365 = (int64x2_t)vshlq_n_s16(v353, 4uLL);
  int64x2_t v366 = (int64x2_t)vshlq_n_s16(v356, 4uLL);
  *unint64_t v363 = vzip2q_s64(v358, v359);
  v363[1] = vzip2q_s64(v361, v362);
  int64x2_t v367 = (int64x2_t)vshlq_n_s16(v357, 4uLL);
  *int64x2_t v364 = vzip1q_s64(v360, v365);
  v364[1] = vzip1q_s64(v366, v367);
  int32x2_t v368 = (int64x2_t *)((char *)v364 + a2);
  *int32x2_t v368 = vzip2q_s64(v360, v365);
  v368[1] = vzip2q_s64(v366, v367);
  return v10;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressMacroblock(int64x2_t *a1, int64x2_t *a2, unsigned __int8 *a3, int32x4_t a4, int32x4_t a5)
{
  int8x16_t v7 = (int64x2_t *)((char *)a2
                   + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1, 64, a2, *a3, a4, a5));
  uint64_t v10 = (int64x2_t *)((char *)v7
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 2, 64, v7, a3[1], v8, v9));
  int64x2_t v13 = (int64x2_t *)((char *)v10
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 16, 64, v10, a3[2], v11, v12));
  int64x2_t v16 = (int64x2_t *)((char *)v13
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 18, 64, v13, a3[3], v14, v15));
  BOOL v19 = (int64x2_t *)((char *)v16
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 32, 64, v16, a3[4], v17, v18));
  long long v22 = (int64x2_t *)((char *)v19
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 34, 64, v19, a3[5], v20, v21));
  uint64_t v25 = (int64x2_t *)((char *)v22
                    + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 48, 64, v22, a3[6], v23, v24));
  int v28 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressSubblock(a1 + 50, 64, v25, v28, v26, v27);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(uint64_t a1, char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  int64x2_t v7 = a3[1];
  int32x4_t v6 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v8 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v9 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v10 = (int16x8_t)vzip1q_s64(v7, v9);
  int64x2_t v12 = *v6;
  int64x2_t v13 = v6[1];
  int32x4_t v11 = (int64x2_t *)((char *)v6 + a4);
  int64x2_t v14 = v11[1];
  int16x8_t v15 = (int16x8_t)vzip2q_s64(v7, v9);
  int16x8_t v16 = (int16x8_t)vzip1q_s64(v13, v14);
  int16x8_t v17 = (int16x8_t)vzip2q_s64(v13, v14);
  int16x8_t v18 = vshrq_n_s16((int16x8_t)vzip1q_s64(*a3, v8), 4uLL);
  v19.i64[0] = 0x4000400040004;
  v19.i64[1] = 0x4000400040004;
  int16x8_t v20 = vshrq_n_s16((int16x8_t)vzip2q_s64(*a3, v8), 4uLL);
  int16x8_t v21 = vshrq_n_s16((int16x8_t)vzip1q_s64(v12, *v11), 4uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip2q_s64(v12, *v11), 4uLL);
  int16x8_t v23 = vshrq_n_s16(v10, 4uLL);
  int16x8_t v24 = vshrq_n_s16(v15, 4uLL);
  int16x8_t v25 = vshrq_n_s16(v16, 4uLL);
  int16x8_t v26 = vshrq_n_s16(v17, 4uLL);
  int16x8_t v27 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v18.i8, 0);
  v28.i64[0] = 0x3000300030003;
  v28.i64[1] = 0x3000300030003;
  int8x16_t v506 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v27), 4uLL), v28);
  int8x16_t v508 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v27), 4uLL), v28);
  int8x16_t v510 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v27), 4uLL), v28);
  int8x16_t v511 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v27), 4uLL), v28);
  int8x16_t v512 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v27), 4uLL), v28);
  int8x16_t v513 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v27), 4uLL), v28);
  int8x16_t v514 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v27), 4uLL), v28);
  int8x16_t v515 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v27), 4uLL), v28);
  int16x8_t v29 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v506, (int16x8_t)v508), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v506, (int16x8_t)v508), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = vpmaxq_s16(v29, v29);
  int16x8_t v32 = vpminq_s16(v30, v30);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  v35.i64[0] = 0x8000800080008000;
  v35.i64[1] = 0x8000800080008000;
  int16x8_t v36 = vmaxq_s16(v33, v35);
  v37.i64[0] = 0x8000800080008000;
  v37.i64[1] = 0x8000800080008000;
  int16x8_t v38 = vminq_s16(v34, v37);
  int16x8_t v39 = vzip1q_s16(v33, v34);
  v40.i64[0] = 0x10001000100010;
  v40.i64[1] = 0x10001000100010;
  int16x8_t v41 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v39)), (int8x16_t)vceqzq_s16(v39));
  int16x8_t v42 = vpmaxq_s16(v41, v41);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v510, (int16x8_t)v511), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v510, (int16x8_t)v511), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v45 = vpmaxq_s16(v43, v43);
  int16x8_t v46 = vpminq_s16(v44, v44);
  int16x8_t v47 = vpmaxq_s16(v45, v45);
  int16x8_t v48 = vpminq_s16(v46, v46);
  int16x8_t v49 = vmaxq_s16(v36, v47);
  int16x8_t v50 = vminq_s16(v38, v48);
  int16x8_t v51 = vzip1q_s16(v47, v48);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v51)), (int8x16_t)vceqzq_s16(v51));
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v512, (int16x8_t)v513), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v512, (int16x8_t)v513), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v56 = vpmaxq_s16(v54, v54);
  int16x8_t v57 = vpminq_s16(v55, v55);
  int16x8_t v58 = vpmaxq_s16(v56, v56);
  int16x8_t v59 = vpminq_s16(v57, v57);
  int16x8_t v60 = vmaxq_s16(v49, v58);
  int16x8_t v61 = vminq_s16(v50, v59);
  int16x8_t v62 = vzip1q_s16(v58, v59);
  int16x8_t v63 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int16x8_t v64 = vpmaxq_s16(v63, v63);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v514, (int16x8_t)v515), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v514, (int16x8_t)v515), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v67 = vpmaxq_s16(v65, v65);
  int16x8_t v68 = vpminq_s16(v66, v66);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int16x8_t v71 = vmaxq_s16(v60, v69);
  int16x8_t v72 = vminq_s16(v61, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  v70.i64[0] = -1;
  v70.i64[1] = -1;
  int16x8_t v75 = vpmaxq_s16(v74, v74);
  int8x16_t v76 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v53), vmaxq_s16(v64, v75));
  int16x8_t v77 = vclzq_s16(vsubq_s16(v71, v72));
  v38.i64[0] = 0xF000F000F000FLL;
  v38.i64[1] = 0xF000F000F000FLL;
  int16x8_t v78 = vsubq_s16(v38, v77);
  int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v40, v77);
  int8x16_t v80 = (int8x16_t)vsubq_s16(vshlq_s16(v70, v78), v72);
  int8x16_t v81 = (int8x16_t)vcgtq_s16((int16x8_t)v76, (int16x8_t)v79);
  int8x16_t v522 = vbslq_s8(v81, v79, v76);
  int8x16_t v523 = (int8x16_t)v72;
  int8x16_t v524 = (int8x16_t)v71;
  int8x16_t v525 = vandq_s8(v80, v81);
  v82.i64[0] = 0x8000800080008;
  v82.i64[1] = 0x8000800080008;
  int8x16_t v83 = vandq_s8(v81, v82);
  v84.i64[0] = 0x3000300030003;
  v84.i64[1] = 0x3000300030003;
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v522, v42), (int16x8_t)v84), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v522, v53), (int16x8_t)v84), (int16x8_t)0);
  int16x8_t v87 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v522, v64), (int16x8_t)v84), (int16x8_t)0);
  int16x8_t v88 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v522, v75), (int16x8_t)v84), (int16x8_t)0);
  int16x8_t v518 = vsubq_s16((int16x8_t)v522, v85);
  int16x8_t v519 = vsubq_s16((int16x8_t)v522, v86);
  int16x8_t v520 = vsubq_s16((int16x8_t)v522, v87);
  int16x8_t v521 = vsubq_s16((int16x8_t)v522, v88);
  int8x16_t v89 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v522), v84), v83), vbicq_s8(v19, (int8x16_t)vceqq_s16(vaddq_s16(v88, v87), vnegq_s16(vaddq_s16(v85, v86)))));
  int8x16_t v516 = (int8x16_t)v27;
  int8x16_t v517 = v89;
  if (vmaxvq_s16((int16x8_t)v522))
  {
    int16x8_t v501 = v18;
    int8x16_t v502 = (int8x16_t)v20;
    int8x16_t v503 = (int8x16_t)v21;
    int8x16_t v500 = (int8x16_t)v22;
    int8x16_t v504 = (int8x16_t)v23;
    int8x16_t v498 = (int8x16_t)v24;
    int8x16_t v505 = (int8x16_t)v25;
    int8x16_t v499 = (int8x16_t)v26;
    int8x16_t v90 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v506, (int16x8_t)vqtbl1q_s8(v506, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v508, (int16x8_t)vqtbl1q_s8(v508, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    v92.i64[0] = 0x4000400040004;
    v92.i64[1] = 0x4000400040004;
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v510, (int16x8_t)vqtbl1q_s8(v510, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v511, (int16x8_t)vqtbl1q_s8(v511, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v512, (int16x8_t)vqtbl1q_s8(v512, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v513, (int16x8_t)vqtbl1q_s8(v513, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v514, (int16x8_t)vqtbl1q_s8(v514, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    int8x16_t v98 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v515, (int16x8_t)vqtbl1q_s8(v515, (int8x16_t)xmmword_242EA76C0)), 4uLL), v28);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v90, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v101 = vpmaxq_s16(v99, v99);
    int16x8_t v102 = vpminq_s16(v100, v100);
    int16x8_t v103 = vpmaxq_s16(v101, v101);
    int16x8_t v104 = vpminq_s16(v102, v102);
    int16x8_t v105 = vmaxq_s16(v103, v35);
    int16x8_t v106 = vminq_s16(v104, v37);
    int16x8_t v107 = vzip1q_s16(v103, v104);
    int16x8_t v108 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v107)), (int8x16_t)vceqzq_s16(v107));
    int16x8_t v109 = vpmaxq_s16(v108, v108);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v93, (int16x8_t)v94), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v93, (int16x8_t)v94), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v112 = vpmaxq_s16(v110, v110);
    int16x8_t v113 = vpminq_s16(v111, v111);
    int16x8_t v114 = vpmaxq_s16(v112, v112);
    int16x8_t v115 = vpminq_s16(v113, v113);
    int16x8_t v116 = vmaxq_s16(v105, v114);
    int16x8_t v117 = vminq_s16(v106, v115);
    int16x8_t v118 = vzip1q_s16(v114, v115);
    int16x8_t v119 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v118)), (int8x16_t)vceqzq_s16(v118));
    int16x8_t v120 = vpmaxq_s16(v119, v119);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v95, (int16x8_t)v96), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v95, (int16x8_t)v96), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v123 = vpmaxq_s16(v121, v121);
    int16x8_t v124 = vpminq_s16(v122, v122);
    int16x8_t v125 = vpmaxq_s16(v123, v123);
    int16x8_t v126 = vpminq_s16(v124, v124);
    int16x8_t v127 = vmaxq_s16(v116, v125);
    int16x8_t v128 = vminq_s16(v117, v126);
    int16x8_t v129 = vzip1q_s16(v125, v126);
    int16x8_t v130 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v129)), (int8x16_t)vceqzq_s16(v129));
    int16x8_t v131 = vpmaxq_s16(v130, v130);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v97, (int16x8_t)v98), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v133 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v97, (int16x8_t)v98), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v134 = vpmaxq_s16(v132, v132);
    int16x8_t v135 = vpminq_s16(v133, v133);
    int16x8_t v136 = vpmaxq_s16(v134, v134);
    int16x8_t v137 = vpminq_s16(v135, v135);
    int8x16_t v138 = (int8x16_t)vmaxq_s16(v127, v136);
    int8x16_t v139 = (int8x16_t)vminq_s16(v128, v137);
    int16x8_t v140 = vzip1q_s16(v136, v137);
    int16x8_t v141 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v140)), (int8x16_t)vceqzq_s16(v140));
    int16x8_t v142 = vpmaxq_s16(v141, v141);
    int8x16_t v143 = (int8x16_t)vmaxq_s16(vmaxq_s16(v109, v120), vmaxq_s16(v131, v142));
    int16x8_t v144 = vclzq_s16(vsubq_s16((int16x8_t)v138, (int16x8_t)v139));
    int8x16_t v145 = (int8x16_t)vsubq_s16((int16x8_t)v40, v144);
    int8x16_t v146 = (int8x16_t)vcgtq_s16((int16x8_t)v143, (int16x8_t)v145);
    int8x16_t v147 = vbslq_s8(v146, v145, v143);
    v143.i64[0] = 0x18001800180018;
    v143.i64[1] = 0x18001800180018;
    int8x16_t v148 = vbslq_s8(v146, v143, v40);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v109), (int16x8_t)v84), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v120), (int16x8_t)v84), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v131), (int16x8_t)v84), (int16x8_t)0);
    int16x8_t v152 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v142), (int16x8_t)v84), (int16x8_t)0);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v147, v149);
    int8x16_t v154 = (int8x16_t)vsubq_s16((int16x8_t)v147, v150);
    int8x16_t v155 = (int8x16_t)vsubq_s16((int16x8_t)v147, v151);
    int8x16_t v156 = (int8x16_t)vsubq_s16((int16x8_t)v147, v152);
    int8x16_t v157 = vbicq_s8(v92, (int8x16_t)vceqq_s16(vaddq_s16(v152, v151), vnegq_s16(vaddq_s16(v149, v150))));
    v92.i64[0] = 0x7000700070007;
    v92.i64[1] = 0x7000700070007;
    int8x16_t v158 = v522;
    int16x8_t v159 = (int16x8_t)vbicq_s8(v522, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v83, v82)));
    int16x8_t v160 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v89, (int16x8_t)v89), v82);
    v161.i64[0] = 0x2000200020002;
    v161.i64[1] = 0x2000200020002;
    int16x8_t v162 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v89, v84), v161), v40);
    int16x8_t v163 = v518;
    int16x8_t v164 = v519;
    int16x8_t v165 = vaddq_s16(vaddq_s16(v159, v160), v162);
    int16x8_t v167 = v520;
    int16x8_t v166 = v521;
    int8x16_t v168 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v165, v518, (int16x8_t)v92), vshlq_n_s16(vaddq_s16(vaddq_s16(v520, v519), v521), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v147, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v148 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v157, (int16x8_t)v157)), (int16x8_t)v153, (int16x8_t)v92), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v155, (int16x8_t)v154), (int16x8_t)v156), 3uLL))), 0);
    int v169 = (unsigned __int16)vaddvq_s16((int16x8_t)v168);
    BOOL v171 = a5 < 4 || a6 < 2;
    if (v169)
    {
      v172.i64[0] = 0x3000300030003;
      v172.i64[1] = 0x3000300030003;
      int8x16_t v506 = vbslq_s8(v168, v90, v506);
      int8x16_t v508 = vbslq_s8(v168, v91, v508);
      int8x16_t v173 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v147), v172), v148), v157);
      v174.i64[0] = 0xF000F000F000FLL;
      v174.i64[1] = 0xF000F000F000FLL;
      v172.i64[0] = -1;
      v172.i64[1] = -1;
      int8x16_t v510 = vbslq_s8(v168, v93, v510);
      int8x16_t v511 = vbslq_s8(v168, v94, v511);
      int8x16_t v512 = vbslq_s8(v168, v95, v512);
      int8x16_t v513 = vbslq_s8(v168, v96, v513);
      int8x16_t v514 = vbslq_s8(v168, v97, v514);
      int8x16_t v515 = vbslq_s8(v168, v98, v515);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v168, v153, (int8x16_t)v518);
      int16x8_t v164 = (int16x8_t)vbslq_s8(v168, v154, (int8x16_t)v519);
      int16x8_t v518 = v163;
      int16x8_t v519 = v164;
      int16x8_t v167 = (int16x8_t)vbslq_s8(v168, v155, (int8x16_t)v520);
      int16x8_t v166 = (int16x8_t)vbslq_s8(v168, v156, (int8x16_t)v521);
      int16x8_t v520 = v167;
      int16x8_t v521 = v166;
      int8x16_t v524 = vbslq_s8(v168, v138, v524);
      int8x16_t v525 = vbslq_s8(v168, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v172, vsubq_s16(v174, v144)), (int16x8_t)v139), v146), v525);
      int8x16_t v158 = vbslq_s8(v168, v147, v522);
      int8x16_t v522 = v158;
      int8x16_t v523 = vbslq_s8(v168, v139, v523);
      int8x16_t v89 = vbslq_s8(v168, v173, v89);
      int8x16_t v516 = vbslq_s8(v168, (int8x16_t)vsubq_s16((int16x8_t)v516, (int16x8_t)vqtbl1q_s8(v516, (int8x16_t)xmmword_242EA76C0)), v516);
      int8x16_t v517 = v89;
    }
    int8x16_t v175 = (int8x16_t)v501;
    int8x16_t v176 = v502;
    if (!v171)
    {
      int16x8_t v177 = vsubq_s16(v501, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7570));
      v526.val[0] = v503;
      v526.val[1] = v500;
      v526.val[1].i32[3] = v502.i32[3];
      int16x8_t v178 = vsubq_s16((int16x8_t)v502, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v179 = vsubq_s16((int16x8_t)v503, (int16x8_t)vqtbl2q_s8(v526, (int8x16_t)xmmword_242EA7590));
      int16x8_t v180 = vsubq_s16((int16x8_t)v500, (int16x8_t)vqtbl2q_s8(v526, (int8x16_t)xmmword_242EA7630));
      v526.val[0] = v504;
      v526.val[1] = v498;
      v526.val[1].i32[3] = v502.i32[3];
      int16x8_t v181 = vsubq_s16((int16x8_t)v504, (int16x8_t)vqtbl2q_s8(v526, (int8x16_t)xmmword_242EA7640));
      int16x8_t v182 = vsubq_s16((int16x8_t)v498, (int16x8_t)vqtbl2q_s8(v526, (int8x16_t)xmmword_242EA7570));
      v526.val[1] = v505;
      int8x16_t v183 = v499;
      v183.i32[3] = v502.i32[3];
      v526.val[0] = (int8x16_t)vsubq_s16((int16x8_t)v505, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)((char *)&v526 + 16), (int8x16_t)xmmword_242EA7650));
      int16x8_t v184 = vsubq_s16((int16x8_t)v499, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)((char *)&v526 + 16), (int8x16_t)xmmword_242EA7570));
      v526.val[1] = (int8x16_t)v178;
      v526.val[1].i32[3] = v177.i32[0];
      v177.i32[0] = v178.i32[3];
      v185.i64[0] = 0x4000400040004;
      v185.i64[1] = 0x4000400040004;
      int16x8_t v186 = vshlq_n_s16((int16x8_t)v526.val[1], 4uLL);
      v526.val[1].i64[0] = 0x3000300030003;
      v526.val[1].i64[1] = 0x3000300030003;
      int8x16_t v187 = (int8x16_t)vshlq_s16(vshlq_n_s16(v177, 4uLL), (int16x8_t)v526.val[1]);
      int8x16_t v188 = (int8x16_t)vshlq_s16(v186, (int16x8_t)v526.val[1]);
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(v179, 4uLL), (int16x8_t)v526.val[1]);
      int8x16_t v190 = (int8x16_t)vshlq_s16(vshlq_n_s16(v180, 4uLL), (int16x8_t)v526.val[1]);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(v181, 4uLL), (int16x8_t)v526.val[1]);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16(v182, 4uLL), (int16x8_t)v526.val[1]);
      int8x16_t v193 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v526.val[0], 4uLL), (int16x8_t)v526.val[1]);
      int8x16_t v194 = (int8x16_t)vshlq_s16(vshlq_n_s16(v184, 4uLL), (int16x8_t)v526.val[1]);
      int16x8_t v195 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v196 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v187, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v197 = vpmaxq_s16(v195, v195);
      int16x8_t v198 = vpminq_s16(v196, v196);
      int16x8_t v199 = vpmaxq_s16(v197, v197);
      int16x8_t v200 = vpminq_s16(v198, v198);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      v179.i64[0] = 0x8000800080008000;
      v179.i64[1] = 0x8000800080008000;
      int16x8_t v201 = vminq_s16(v200, v179);
      int16x8_t v202 = vzip1q_s16(v199, v200);
      v203.i64[0] = 0x10001000100010;
      v203.i64[1] = 0x10001000100010;
      int16x8_t v204 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v203, vclsq_s16(v202)), (int8x16_t)vceqzq_s16(v202));
      int16x8_t v205 = vpmaxq_s16(v204, v204);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v207 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v208 = vpmaxq_s16(v206, v206);
      int16x8_t v209 = vpminq_s16(v207, v207);
      int16x8_t v210 = vpmaxq_s16(v208, v208);
      int16x8_t v211 = vpminq_s16(v209, v209);
      int16x8_t v212 = vmaxq_s16(vmaxq_s16(v199, v186), v210);
      int16x8_t v213 = vminq_s16(v201, v211);
      int16x8_t v214 = vzip1q_s16(v210, v211);
      int16x8_t v215 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v203, vclsq_s16(v214)), (int8x16_t)vceqzq_s16(v214));
      int16x8_t v216 = vpmaxq_s16(v215, v215);
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v218 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v219 = vpmaxq_s16(v217, v217);
      int16x8_t v220 = vpminq_s16(v218, v218);
      int16x8_t v221 = vpmaxq_s16(v219, v219);
      int16x8_t v222 = vpminq_s16(v220, v220);
      int16x8_t v223 = vmaxq_s16(v212, v221);
      int16x8_t v224 = vminq_s16(v213, v222);
      int16x8_t v225 = vzip1q_s16(v221, v222);
      int16x8_t v226 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v203, vclsq_s16(v225)), (int8x16_t)vceqzq_s16(v225));
      int16x8_t v227 = vpmaxq_s16(v226, v226);
      int16x8_t v228 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v229 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v230 = vpmaxq_s16(v228, v228);
      int16x8_t v231 = vpminq_s16(v229, v229);
      int16x8_t v232 = vpmaxq_s16(v230, v230);
      v526.val[0] = (int8x16_t)vpminq_s16(v231, v231);
      int8x16_t v233 = (int8x16_t)vmaxq_s16(v223, v232);
      int8x16_t v234 = (int8x16_t)vminq_s16(v224, (int16x8_t)v526.val[0]);
      int16x8_t v235 = vzip1q_s16(v232, (int16x8_t)v526.val[0]);
      int16x8_t v236 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v203, vclsq_s16(v235)), (int8x16_t)vceqzq_s16(v235));
      int16x8_t v237 = vpmaxq_s16(v236, v236);
      int8x16_t v238 = (int8x16_t)vmaxq_s16(vmaxq_s16(v205, v216), vmaxq_s16(v227, v237));
      int16x8_t v239 = vclzq_s16(vsubq_s16((int16x8_t)v233, (int16x8_t)v234));
      v526.val[0] = (int8x16_t)vsubq_s16(v203, v239);
      int8x16_t v240 = (int8x16_t)vcgtq_s16((int16x8_t)v238, (int16x8_t)v526.val[0]);
      int8x16_t v241 = vbslq_s8(v240, v526.val[0], v238);
      v526.val[1].i64[0] = 0x3000300030003;
      v526.val[1].i64[1] = 0x3000300030003;
      int16x8_t v242 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v205), (int16x8_t)v526.val[1]), (int16x8_t)0);
      int8x16_t v243 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v216), (int16x8_t)v526.val[1]), (int16x8_t)0);
      int16x8_t v244 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v227), (int16x8_t)v526.val[1]), (int16x8_t)0);
      int16x8_t v245 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v241, v237), (int16x8_t)v526.val[1]), (int16x8_t)0);
      int8x16_t v246 = (int8x16_t)vsubq_s16((int16x8_t)v241, v242);
      int8x16_t v247 = (int8x16_t)vsubq_s16((int16x8_t)v241, (int16x8_t)v243);
      int8x16_t v248 = (int8x16_t)vsubq_s16((int16x8_t)v241, v244);
      int8x16_t v249 = (int8x16_t)vsubq_s16((int16x8_t)v241, v245);
      int8x16_t v250 = vbicq_s8(v185, (int8x16_t)vceqq_s16(vaddq_s16(v245, v244), vnegq_s16(vaddq_s16(v242, (int16x8_t)v243))));
      v244.i64[0] = 0x7000700070007;
      v244.i64[1] = 0x7000700070007;
      int16x8_t v251 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v526.val[0], v240), vaddq_s16((int16x8_t)v250, (int16x8_t)v250)), (int16x8_t)v246, v244), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v248, (int16x8_t)v247), (int16x8_t)v249), 3uLL));
      v243.i64[0] = 0x8000800080008;
      v243.i64[1] = 0x8000800080008;
      int8x16_t v89 = v517;
      int16x8_t v163 = v518;
      v526.val[0] = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v517, v243));
      int16x8_t v252 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v89, (int16x8_t)v89), v243);
      v253.i64[0] = 0x2000200020002;
      v253.i64[1] = 0x2000200020002;
      v526.val[1] = vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v517, v526.val[1]), (int16x8_t)v253), (int8x16_t)v203);
      int16x8_t v166 = v521;
      int8x16_t v158 = v522;
      int16x8_t v164 = v519;
      int16x8_t v167 = v520;
      int8x16_t v254 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v522, v526.val[0]), v252), (int16x8_t)v526.val[1]), v518, v244), vshlq_n_s16(vaddq_s16(vaddq_s16(v520, v519), v521), 3uLL)), v251), 0);
      if (vaddvq_s16((int16x8_t)v254))
      {
        v255.i64[0] = 0x9000900090009;
        v255.i64[1] = 0x9000900090009;
        int8x16_t v506 = vbslq_s8(v254, v187, v506);
        int8x16_t v508 = vbslq_s8(v254, v188, v508);
        v256.i64[0] = -1;
        v256.i64[1] = -1;
        int8x16_t v257 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v241), v253), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v240, v255), (int16x8_t)vmvnq_s8(v240))), v250);
        int8x16_t v510 = vbslq_s8(v254, v189, v510);
        int8x16_t v511 = vbslq_s8(v254, v190, v511);
        v258.i64[0] = 0xF000F000F000FLL;
        v258.i64[1] = 0xF000F000F000FLL;
        int8x16_t v512 = vbslq_s8(v254, v191, v512);
        int8x16_t v513 = vbslq_s8(v254, v192, v513);
        int8x16_t v514 = vbslq_s8(v254, v193, v514);
        int8x16_t v515 = vbslq_s8(v254, v194, v515);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v254, v246, (int8x16_t)v518);
        int16x8_t v164 = (int16x8_t)vbslq_s8(v254, v247, (int8x16_t)v519);
        int16x8_t v518 = v163;
        int16x8_t v519 = v164;
        int16x8_t v167 = (int16x8_t)vbslq_s8(v254, v248, (int8x16_t)v520);
        int16x8_t v166 = (int16x8_t)vbslq_s8(v254, v249, (int8x16_t)v521);
        int16x8_t v520 = v167;
        int16x8_t v521 = v166;
        int8x16_t v524 = vbslq_s8(v254, v233, v524);
        int8x16_t v525 = vbslq_s8(v254, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v256, vsubq_s16(v258, v239)), (int16x8_t)v234), v240), v525);
        int8x16_t v158 = vbslq_s8(v254, v241, v522);
        int8x16_t v522 = v158;
        int8x16_t v523 = vbslq_s8(v254, v234, v523);
        int8x16_t v89 = vbslq_s8(v254, v257, v517);
        int8x16_t v516 = vbslq_s8(v254, vextq_s8(v502, v502, 0xCuLL), v516);
        int8x16_t v517 = v89;
      }
      int8x16_t v175 = (int8x16_t)v501;
      int8x16_t v176 = v502;
    }
    int16x8_t v262 = (int16x8_t)vandq_s8(v525, (int8x16_t)vceqq_s16((int16x8_t)v158, v163));
    int8x16_t v507 = (int8x16_t)vaddq_s16(v262, (int16x8_t)v506);
    int8x16_t v509 = (int8x16_t)vaddq_s16((int16x8_t)v508, v262);
    int16x8_t v263 = (int16x8_t)vandq_s8(v525, (int8x16_t)vceqq_s16((int16x8_t)v158, v164));
    int8x16_t v510 = (int8x16_t)vaddq_s16((int16x8_t)v510, v263);
    int8x16_t v511 = (int8x16_t)vaddq_s16((int16x8_t)v511, v263);
    int16x8_t v264 = (int16x8_t)vandq_s8(v525, (int8x16_t)vceqq_s16((int16x8_t)v158, v167));
    int8x16_t v512 = (int8x16_t)vaddq_s16((int16x8_t)v512, v264);
    int8x16_t v513 = (int8x16_t)vaddq_s16((int16x8_t)v513, v264);
    int16x8_t v265 = (int16x8_t)vandq_s8(v525, (int8x16_t)vceqq_s16((int16x8_t)v158, v166));
    v266.i64[0] = 0x8000800080008;
    v266.i64[1] = 0x8000800080008;
    v267.i64[0] = 0x3000300030003;
    v267.i64[1] = 0x3000300030003;
    v268.i64[0] = 0x2000200020002;
    v268.i64[1] = 0x2000200020002;
    int8x16_t v269 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v89, v267), v268);
    v268.i64[0] = 0x10001000100010;
    v268.i64[1] = 0x10001000100010;
    int16x8_t v270 = (int16x8_t)vandq_s8(v269, (int8x16_t)v268);
    v268.i64[0] = 0x7000700070007;
    v268.i64[1] = 0x7000700070007;
    int16x8_t v271 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v158, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v89, v266))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v89, (int16x8_t)v89), v266)), v270), v163, v268), vshlq_n_s16(vaddq_s16(v167, vaddq_s16(v164, v166)), 3uLL));
    int8x16_t v514 = (int8x16_t)vaddq_s16((int16x8_t)v514, v265);
    int8x16_t v515 = (int8x16_t)vaddq_s16((int16x8_t)v515, v265);
    int16x8_t v272 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v273 = 8 * (a1 & 7);
    if ((unint64_t)(vpaddq_s16(v271, v271).i16[0] + 49) > 0x2FF)
    {
      if (v273) {
        uint64_t v275 = *v272 & ~(-1 << v273);
      }
      else {
        uint64_t v275 = 0;
      }
      v417.i64[0] = 0x3000300030003;
      v417.i64[1] = 0x3000300030003;
      v418.i64[0] = -1;
      v418.i64[1] = -1;
      int8x16_t v419 = (int8x16_t)vshlq_u16(v418, v417);
      v417.i64[0] = 0xC0000000CLL;
      v417.i64[1] = 0xC0000000CLL;
      int32x4_t v420 = vpaddq_s32((int32x4_t)v417, (int32x4_t)v417);
      v421.i64[0] = v420.u32[0];
      v421.i64[1] = v420.u32[1];
      int64x2_t v422 = v421;
      v421.i64[0] = v420.u32[2];
      v421.i64[1] = v420.u32[3];
      uint64x2_t v423 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v422);
      uint64x2_t v424 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v421);
      int64x2_t v425 = vpaddq_s64(v422, v421);
      uint64_t v426 = v425.i64[1];
      uint64_t v427 = v425.i64[0];
      uint16x8_t v428 = (uint16x8_t)vandq_s8(v419, v175);
      int32x4_t v429 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v428.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v428), (uint32x4_t)xmmword_242EA7B90));
      v421.i64[0] = v429.u32[0];
      v421.i64[1] = v429.u32[1];
      uint64x2_t v430 = (uint64x2_t)v421;
      v421.i64[0] = v429.u32[2];
      v421.i64[1] = v429.u32[3];
      int64x2_t v431 = vpaddq_s64((int64x2_t)vshlq_u64(v430, v423), (int64x2_t)vshlq_u64((uint64x2_t)v421, v424));
      unint64_t v432 = v427 + v273;
      unint64_t v433 = (v431.i64[0] << v273) | v275;
      if (v427 + v273 >= 0x40)
      {
        *int16x8_t v272 = v433;
        unint64_t v433 = (unint64_t)v431.i64[0] >> (-8 * (a1 & 7u));
        if (!v273) {
          unint64_t v433 = 0;
        }
      }
      unint64_t v434 = v433 | (v431.i64[1] << v432);
      if ((v432 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v272 + ((v432 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v434;
        if ((v432 & 0x3F) != 0) {
          unint64_t v434 = (unint64_t)v431.i64[1] >> -(v432 & 0x3F);
        }
        else {
          unint64_t v434 = 0;
        }
      }
      unint64_t v435 = v432 + v426;
      uint16x8_t v436 = (uint16x8_t)vandq_s8(v419, v176);
      int32x4_t v437 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v436.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v436), (uint32x4_t)xmmword_242EA7B90));
      v438.i64[0] = v437.u32[0];
      v438.i64[1] = v437.u32[1];
      uint64x2_t v439 = v438;
      v438.i64[0] = v437.u32[2];
      v438.i64[1] = v437.u32[3];
      int64x2_t v440 = vpaddq_s64((int64x2_t)vshlq_u64(v439, v423), (int64x2_t)vshlq_u64(v438, v424));
      uint64_t v441 = (v432 + v426) & 0x3F;
      unint64_t v442 = (v440.i64[0] << (v432 + v426)) | v434;
      if ((unint64_t)(v427 + v441) >= 0x40)
      {
        *(void *)((char *)v272 + ((v435 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v442;
        unint64_t v442 = (unint64_t)v440.i64[0] >> -(char)v441;
        if (!v441) {
          unint64_t v442 = 0;
        }
      }
      unint64_t v443 = v427 + v435;
      unint64_t v444 = v442 | (v440.i64[1] << v443);
      if ((v443 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v272 + ((v443 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v444;
        unint64_t v444 = (unint64_t)v440.i64[1] >> -(v443 & 0x3F);
        if ((v443 & 0x3F) == 0) {
          unint64_t v444 = 0;
        }
      }
      unint64_t v445 = v443 + v426;
      uint16x8_t v446 = (uint16x8_t)vandq_s8(v419, v503);
      int32x4_t v447 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v446.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v446), (uint32x4_t)xmmword_242EA7B90));
      v448.i64[0] = v447.u32[0];
      v448.i64[1] = v447.u32[1];
      uint64x2_t v449 = v448;
      v448.i64[0] = v447.u32[2];
      v448.i64[1] = v447.u32[3];
      int64x2_t v450 = vpaddq_s64((int64x2_t)vshlq_u64(v449, v423), (int64x2_t)vshlq_u64(v448, v424));
      unint64_t v451 = (v450.i64[0] << v445) | v444;
      if (v427 + (v445 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v445 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v451;
        unint64_t v451 = (unint64_t)v450.i64[0] >> -(v445 & 0x3F);
        if ((v445 & 0x3F) == 0) {
          unint64_t v451 = 0;
        }
      }
      unint64_t v452 = v427 + v445;
      unint64_t v453 = v451 | (v450.i64[1] << v452);
      if ((v452 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v272 + ((v452 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v453;
        unint64_t v453 = (unint64_t)v450.i64[1] >> -(v452 & 0x3F);
        if ((v452 & 0x3F) == 0) {
          unint64_t v453 = 0;
        }
      }
      unint64_t v454 = v452 + v426;
      uint16x8_t v455 = (uint16x8_t)vandq_s8(v419, v500);
      int32x4_t v456 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v455.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v455), (uint32x4_t)xmmword_242EA7B90));
      v457.i64[0] = v456.u32[0];
      v457.i64[1] = v456.u32[1];
      uint64x2_t v458 = v457;
      v457.i64[0] = v456.u32[2];
      v457.i64[1] = v456.u32[3];
      int64x2_t v459 = vpaddq_s64((int64x2_t)vshlq_u64(v458, v423), (int64x2_t)vshlq_u64(v457, v424));
      unint64_t v460 = (v459.i64[0] << v454) | v453;
      if (v427 + (v454 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v454 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v460;
        unint64_t v460 = (unint64_t)v459.i64[0] >> -(v454 & 0x3F);
        if ((v454 & 0x3F) == 0) {
          unint64_t v460 = 0;
        }
      }
      unint64_t v461 = v427 + v454;
      unint64_t v462 = v460 | (v459.i64[1] << v461);
      if ((v461 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v272 + ((v461 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v462;
        unint64_t v462 = (unint64_t)v459.i64[1] >> -(v461 & 0x3F);
        if ((v461 & 0x3F) == 0) {
          unint64_t v462 = 0;
        }
      }
      unint64_t v463 = v461 + v426;
      uint16x8_t v464 = (uint16x8_t)vandq_s8(v419, v504);
      int32x4_t v465 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v464.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v464), (uint32x4_t)xmmword_242EA7B90));
      v466.i64[0] = v465.u32[0];
      v466.i64[1] = v465.u32[1];
      uint64x2_t v467 = v466;
      v466.i64[0] = v465.u32[2];
      v466.i64[1] = v465.u32[3];
      int64x2_t v468 = vpaddq_s64((int64x2_t)vshlq_u64(v467, v423), (int64x2_t)vshlq_u64(v466, v424));
      unint64_t v469 = (v468.i64[0] << v463) | v462;
      if (v427 + (v463 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v463 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v469;
        unint64_t v469 = (unint64_t)v468.i64[0] >> -(v463 & 0x3F);
        if ((v463 & 0x3F) == 0) {
          unint64_t v469 = 0;
        }
      }
      unint64_t v470 = v427 + v463;
      unint64_t v471 = v469 | (v468.i64[1] << v470);
      if ((v470 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v272 + ((v470 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v471;
        unint64_t v471 = (unint64_t)v468.i64[1] >> -(v470 & 0x3F);
        if ((v470 & 0x3F) == 0) {
          unint64_t v471 = 0;
        }
      }
      unint64_t v472 = v470 + v426;
      uint16x8_t v473 = (uint16x8_t)vandq_s8(v419, v498);
      int32x4_t v474 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v473.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v473), (uint32x4_t)xmmword_242EA7B90));
      v475.i64[0] = v474.u32[0];
      v475.i64[1] = v474.u32[1];
      uint64x2_t v476 = v475;
      v475.i64[0] = v474.u32[2];
      v475.i64[1] = v474.u32[3];
      int64x2_t v477 = vpaddq_s64((int64x2_t)vshlq_u64(v476, v423), (int64x2_t)vshlq_u64(v475, v424));
      unint64_t v478 = (v477.i64[0] << v472) | v471;
      if (v427 + (v472 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v472 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v478;
        unint64_t v478 = (unint64_t)v477.i64[0] >> -(v472 & 0x3F);
        if ((v472 & 0x3F) == 0) {
          unint64_t v478 = 0;
        }
      }
      unint64_t v479 = v427 + v472;
      unint64_t v480 = v478 | (v477.i64[1] << v479);
      if ((v479 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v272 + ((v479 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v480;
        unint64_t v480 = (unint64_t)v477.i64[1] >> -(v479 & 0x3F);
        if ((v479 & 0x3F) == 0) {
          unint64_t v480 = 0;
        }
      }
      unint64_t v481 = v479 + v426;
      uint16x8_t v482 = (uint16x8_t)vandq_s8(v419, v505);
      int32x4_t v483 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v482.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v482), (uint32x4_t)xmmword_242EA7B90));
      v484.i64[0] = v483.u32[0];
      v484.i64[1] = v483.u32[1];
      uint64x2_t v485 = v484;
      v484.i64[0] = v483.u32[2];
      v484.i64[1] = v483.u32[3];
      int64x2_t v486 = vpaddq_s64((int64x2_t)vshlq_u64(v485, v423), (int64x2_t)vshlq_u64(v484, v424));
      unint64_t v487 = (v486.i64[0] << v481) | v480;
      if (v427 + (v481 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v481 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v487;
        unint64_t v487 = (unint64_t)v486.i64[0] >> -(v481 & 0x3F);
        if ((v481 & 0x3F) == 0) {
          unint64_t v487 = 0;
        }
      }
      unint64_t v488 = v427 + v481;
      unint64_t v489 = v487 | (v486.i64[1] << v488);
      if ((v488 & 0x3F) + v426 >= 0x40)
      {
        *(void *)((char *)v272 + ((v488 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v489;
        unint64_t v489 = (unint64_t)v486.i64[1] >> -(v488 & 0x3F);
        if ((v488 & 0x3F) == 0) {
          unint64_t v489 = 0;
        }
      }
      unint64_t v490 = v488 + v426;
      uint16x8_t v491 = (uint16x8_t)vandq_s8(v419, v499);
      int32x4_t v492 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v491.i8), (uint32x4_t)xmmword_242EA7B90), (int32x4_t)vshlq_u32(vmovl_high_u16(v491), (uint32x4_t)xmmword_242EA7B90));
      v493.i64[0] = v492.u32[0];
      v493.i64[1] = v492.u32[1];
      uint64x2_t v494 = v493;
      v493.i64[0] = v492.u32[2];
      v493.i64[1] = v492.u32[3];
      int64x2_t v495 = vpaddq_s64((int64x2_t)vshlq_u64(v494, v423), (int64x2_t)vshlq_u64(v493, v424));
      unint64_t v496 = (v495.i64[0] << v490) | v489;
      if (v427 + (v490 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v490 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v496;
        unint64_t v496 = (unint64_t)v495.i64[0] >> -(v490 & 0x3F);
        if ((v490 & 0x3F) == 0) {
          unint64_t v496 = 0;
        }
      }
      unint64_t v497 = v427 + v490;
      if ((v497 & 0x3F) + v426 >= 0x40) {
        *(void *)((char *)v272 + ((v497 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v496 | (v495.i64[1] << (v497 & 0x3F));
      }
      char v260 = 95;
      unint64_t result = 96;
    }
    else
    {
      if (v273) {
        uint64_t v274 = *v272 & ~(-1 << v273);
      }
      else {
        uint64_t v274 = 0;
      }
      *a2 = 0;
      uint64_t v276 = ((v158.i16[0] << 10) + 15360) & 0x3C00;
      if (!v158.i16[0]) {
        uint64_t v276 = 0;
      }
      if (v158.i16[1]) {
        uint64_t v277 = ((v158.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v277 = 0;
      }
      unint64_t v278 = v276 | v277 | v89.i8[0] & 0x1F | (32 * (v89.i8[2] & 0x1Fu));
      unint64_t v279 = v516.i16[0] & 0xFFF | ((unint64_t)(v516.i16[1] & 0xFFF) << 12);
      uint64_t v280 = (v278 << v273) | v274;
      if (v273 >= 0x2E)
      {
        *int16x8_t v272 = v280;
        uint64_t v280 = v278 >> (-8 * (a1 & 7u));
      }
      unint64_t v281 = (v273 + 18) & 0x3A;
      unint64_t v282 = v280 | (v279 << v281);
      if (v281 >= 0x28)
      {
        *(void *)((char *)v272 + (((v273 + 18) >> 3) & 8)) = v282;
        unint64_t v282 = v279 >> -(char)v281;
      }
      unint64_t v283 = v273 + 42;
      int8x16_t v284 = (int8x16_t)vsubq_s16((int16x8_t)v522, v518);
      int8x16_t v285 = (int8x16_t)vsubq_s16((int16x8_t)v522, v519);
      int8x16_t v286 = (int8x16_t)vsubq_s16((int16x8_t)v522, v520);
      int8x16_t v287 = (int8x16_t)vsubq_s16((int16x8_t)v522, v521);
      *(uint8x8_t *)v284.i8 = vqmovn_u16((uint16x8_t)v284);
      *(uint8x8_t *)v285.i8 = vqmovn_u16((uint16x8_t)v285);
      *(uint8x8_t *)v286.i8 = vqmovn_u16((uint16x8_t)v286);
      *(uint8x8_t *)v287.i8 = vqmovn_u16((uint16x8_t)v287);
      v287.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v284, v285), (int16x8_t)vzip1q_s8(v286, v287)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v284, v285), (int16x8_t)vtrn2q_s8(v286, v287))).u64[0];
      v285.i64[0] = 0x202020202020202;
      v285.i64[1] = 0x202020202020202;
      int8x16_t v288 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v517.i8, (int8x8_t)0x4000400040004)))), v285);
      v285.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v285.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v286.i64[0] = -1;
      v286.i64[1] = -1;
      uint8x16_t v289 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v286, (uint8x16_t)vorrq_s8(v288, v285)), (int8x16_t)v287.u64[0]);
      int16x8_t v290 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v288.i8);
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v289.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v290)), (int16x8_t)vmovl_high_u8(v289));
      uint16x8_t v292 = (uint16x8_t)vpaddq_s16(v290, (int16x8_t)vmovl_high_u8((uint8x16_t)v288));
      int32x4_t v293 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v292.i8);
      int32x4_t v294 = (int32x4_t)vmovl_high_u16(v292);
      int32x4_t v295 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v291.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)), (int32x4_t)vshlq_u32(vmovl_high_u16(v291), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v294)));
      int32x4_t v296 = vpaddq_s32(v293, v294);
      v297.i64[0] = v295.u32[0];
      v297.i64[1] = v295.u32[1];
      uint64x2_t v298 = (uint64x2_t)v297;
      v297.i64[0] = v295.u32[2];
      v297.i64[1] = v295.u32[3];
      uint64x2_t v299 = (uint64x2_t)v297;
      v297.i64[0] = v296.u32[0];
      v297.i64[1] = v296.u32[1];
      int64x2_t v300 = v297;
      v297.i64[0] = v296.u32[2];
      v297.i64[1] = v296.u32[3];
      int64x2_t v301 = vpaddq_s64((int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v300)), (int64x2_t)vshlq_u64(v299, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)));
      int64x2_t v302 = vpaddq_s64(v300, v297);
      uint64_t v303 = (v273 + 42) & 0x3A;
      unint64_t v304 = (v301.i64[0] << v303) | v282;
      if ((unint64_t)(v302.i64[0] + v303) >= 0x40)
      {
        *(void *)((char *)v272 + ((v283 >> 3) & 8)) = v304;
        unint64_t v304 = (unint64_t)v301.i64[0] >> -(char)v303;
      }
      unint64_t v305 = v302.i64[0] + v283;
      unint64_t v306 = v304 | (v301.i64[1] << v305);
      if ((v305 & 0x3F) + v302.i64[1] >= 0x40)
      {
        *(void *)((char *)v272 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v306;
        unint64_t v306 = (unint64_t)v301.i64[1] >> -(v305 & 0x3F);
        if ((v305 & 0x3F) == 0) {
          unint64_t v306 = 0;
        }
      }
      unint64_t v307 = v305 + v302.i64[1];
      v308.i64[0] = 0x8000800080008;
      v308.i64[1] = 0x8000800080008;
      v309.i64[0] = -1;
      v309.i64[1] = -1;
      int16x8_t v310 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v517, v308), (int8x16_t)0, 0xCuLL), v522);
      v311.i64[0] = 0xF000F000F000FLL;
      v311.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v312 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v309, (uint16x8_t)vaddq_s16(v310, v311)), v525);
      int32x4_t v313 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v310.i8);
      int32x4_t v314 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v312.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v313)), (int32x4_t)vmovl_high_u16(v312));
      int32x4_t v315 = vpaddq_s32(v313, (int32x4_t)vmovl_high_u16((uint16x8_t)v310));
      v316.i64[0] = v314.u32[0];
      v316.i64[1] = v314.u32[1];
      uint64x2_t v317 = (uint64x2_t)v316;
      v316.i64[0] = v314.u32[2];
      v316.i64[1] = v314.u32[3];
      uint64x2_t v318 = (uint64x2_t)v316;
      v316.i64[0] = v315.u32[0];
      v316.i64[1] = v315.u32[1];
      int64x2_t v319 = v316;
      v316.i64[0] = v315.u32[2];
      v316.i64[1] = v315.u32[3];
      int64x2_t v320 = vpaddq_s64((int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v319)), (int64x2_t)vshlq_u64(v318, (uint64x2_t)vzip1q_s64((int64x2_t)0, v316)));
      int64x2_t v321 = vpaddq_s64(v319, v316);
      unint64_t v322 = (v320.i64[0] << v307) | v306;
      if (v321.i64[0] + (v307 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v307 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v322;
        unint64_t v322 = (unint64_t)v320.i64[0] >> -(v307 & 0x3F);
        if ((v307 & 0x3F) == 0) {
          unint64_t v322 = 0;
        }
      }
      unint64_t v323 = v321.i64[0] + v307;
      unint64_t v324 = v322 | (v320.i64[1] << v323);
      if ((v323 & 0x3F) + v321.i64[1] >= 0x40)
      {
        *(void *)((char *)v272 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v320.i64[1] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v324 = 0;
        }
      }
      unint64_t v325 = v323 + v321.i64[1];
      int16x8_t v326 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v518, 0xCuLL);
      v327.i64[0] = 0xF000F000F000FLL;
      v327.i64[1] = 0xF000F000F000FLL;
      v328.i64[0] = -1;
      v328.i64[1] = -1;
      uint16x8_t v329 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v328, (uint16x8_t)vaddq_s16(v326, v327)), v507);
      int32x4_t v330 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v326.i8);
      int32x4_t v331 = (int32x4_t)vmovl_high_u16((uint16x8_t)v326);
      int32x4_t v332 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v329.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)), (int32x4_t)vshlq_u32(vmovl_high_u16(v329), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)));
      int32x4_t v333 = vpaddq_s32(v330, v331);
      v334.i64[0] = v332.u32[0];
      v334.i64[1] = v332.u32[1];
      uint64x2_t v335 = (uint64x2_t)v334;
      v334.i64[0] = v332.u32[2];
      v334.i64[1] = v332.u32[3];
      uint64x2_t v336 = (uint64x2_t)v334;
      v334.i64[0] = v333.u32[0];
      v334.i64[1] = v333.u32[1];
      int64x2_t v337 = v334;
      v334.i64[0] = v333.u32[2];
      v334.i64[1] = v333.u32[3];
      int64x2_t v338 = vpaddq_s64((int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v337)), (int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)));
      int64x2_t v339 = vpaddq_s64(v337, v334);
      unint64_t v340 = (v338.i64[0] << v325) | v324;
      if (v339.i64[0] + (v325 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v325 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v340;
        unint64_t v340 = (unint64_t)v338.i64[0] >> -(v325 & 0x3F);
        if ((v325 & 0x3F) == 0) {
          unint64_t v340 = 0;
        }
      }
      unint64_t v341 = v339.i64[0] + v325;
      unint64_t v342 = v340 | (v338.i64[1] << v341);
      if ((v341 & 0x3F) + v339.i64[1] >= 0x40)
      {
        *(void *)((char *)v272 + ((v341 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
        unint64_t v342 = (unint64_t)v338.i64[1] >> -(v341 & 0x3F);
        if ((v341 & 0x3F) == 0) {
          unint64_t v342 = 0;
        }
      }
      unint64_t v343 = v341 + v339.i64[1];
      v344.i64[0] = 0xF000F000F000FLL;
      v344.i64[1] = 0xF000F000F000FLL;
      v345.i64[0] = -1;
      v345.i64[1] = -1;
      uint16x8_t v346 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v345, (uint16x8_t)vaddq_s16(v518, v344)), v509);
      int32x4_t v347 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v518.i8);
      int32x4_t v348 = (int32x4_t)vmovl_high_u16((uint16x8_t)v518);
      int32x4_t v349 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v346.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)), (int32x4_t)vshlq_u32(vmovl_high_u16(v346), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)));
      int32x4_t v350 = vpaddq_s32(v347, v348);
      v351.i64[0] = v349.u32[0];
      v351.i64[1] = v349.u32[1];
      uint64x2_t v352 = (uint64x2_t)v351;
      v351.i64[0] = v349.u32[2];
      v351.i64[1] = v349.u32[3];
      uint64x2_t v353 = (uint64x2_t)v351;
      v351.i64[0] = v350.u32[0];
      v351.i64[1] = v350.u32[1];
      int64x2_t v354 = v351;
      v351.i64[0] = v350.u32[2];
      v351.i64[1] = v350.u32[3];
      int64x2_t v355 = vpaddq_s64((int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v354)), (int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v351)));
      int64x2_t v356 = vpaddq_s64(v354, v351);
      unint64_t v357 = (v355.i64[0] << v343) | v342;
      if (v356.i64[0] + (v343 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
        if ((v343 & 0x3F) != 0) {
          unint64_t v357 = (unint64_t)v355.i64[0] >> -(v343 & 0x3F);
        }
        else {
          unint64_t v357 = 0;
        }
      }
      uint64_t v358 = v356.i64[1];
      unint64_t v359 = v356.i64[0] + v343;
      uint64_t v360 = (v356.i64[0] + v343) & 0x3F;
      unint64_t v361 = v357 | (v355.i64[1] << v359);
      if ((unint64_t)(v360 + v356.i64[1]) >= 0x40)
      {
        *(void *)((char *)v272 + ((v359 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
        unint64_t v361 = (unint64_t)v355.i64[1] >> -(char)v360;
        if (!v360) {
          unint64_t v361 = 0;
        }
      }
      uint64_t v362 = 0;
      v363.i64[0] = 0xF000F000F000FLL;
      v363.i64[1] = 0xF000F000F000FLL;
      v364.i64[0] = -1;
      v364.i64[1] = -1;
      unint64_t v365 = v359 + v358;
      char v366 = 1;
      do
      {
        char v367 = v366;
        uint16x8_t v368 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v364, (uint16x8_t)vaddq_s16(v519, v363)), *(&v510 + v362));
        int32x4_t v369 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v519.i8);
        int32x4_t v370 = (int32x4_t)vmovl_high_u16((uint16x8_t)v519);
        int32x4_t v371 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v368.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v369)), (int32x4_t)vshlq_u32(vmovl_high_u16(v368), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v370)));
        int32x4_t v372 = vpaddq_s32(v369, v370);
        v373.i64[0] = v371.u32[0];
        v373.i64[1] = v371.u32[1];
        uint64x2_t v374 = (uint64x2_t)v373;
        v373.i64[0] = v371.u32[2];
        v373.i64[1] = v371.u32[3];
        uint64x2_t v375 = (uint64x2_t)v373;
        v373.i64[0] = v372.u32[0];
        v373.i64[1] = v372.u32[1];
        int64x2_t v376 = v373;
        v373.i64[0] = v372.u32[2];
        v373.i64[1] = v372.u32[3];
        int64x2_t v377 = vpaddq_s64((int64x2_t)vshlq_u64(v374, (uint64x2_t)vzip1q_s64((int64x2_t)0, v376)), (int64x2_t)vshlq_u64(v375, (uint64x2_t)vzip1q_s64((int64x2_t)0, v373)));
        int64x2_t v378 = vpaddq_s64(v376, v373);
        unint64_t v379 = (v377.i64[0] << v365) | v361;
        if (v378.i64[0] + (v365 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v272 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v379;
          unint64_t v379 = (unint64_t)v377.i64[0] >> -(v365 & 0x3F);
          if ((v365 & 0x3F) == 0) {
            unint64_t v379 = 0;
          }
        }
        unint64_t v380 = v378.i64[0] + v365;
        unint64_t v361 = v379 | (v377.i64[1] << v380);
        if ((v380 & 0x3F) + v378.i64[1] >= 0x40)
        {
          *(void *)((char *)v272 + ((v380 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
          unint64_t v361 = (unint64_t)v377.i64[1] >> -(v380 & 0x3F);
          if ((v380 & 0x3F) == 0) {
            unint64_t v361 = 0;
          }
        }
        char v366 = 0;
        unint64_t v365 = v380 + v378.i64[1];
        uint64_t v362 = 1;
      }
      while ((v367 & 1) != 0);
      uint64_t v381 = 0;
      char v382 = 1;
      v383.i64[0] = 0xF000F000F000FLL;
      v383.i64[1] = 0xF000F000F000FLL;
      v384.i64[0] = -1;
      v384.i64[1] = -1;
      do
      {
        char v385 = v382;
        uint16x8_t v386 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v384, (uint16x8_t)vaddq_s16(v520, v383)), *(&v512 + v381));
        int32x4_t v387 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v520.i8);
        int32x4_t v388 = (int32x4_t)vmovl_high_u16((uint16x8_t)v520);
        int32x4_t v389 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v386.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)), (int32x4_t)vshlq_u32(vmovl_high_u16(v386), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v388)));
        int32x4_t v390 = vpaddq_s32(v387, v388);
        v391.i64[0] = v389.u32[0];
        v391.i64[1] = v389.u32[1];
        uint64x2_t v392 = (uint64x2_t)v391;
        v391.i64[0] = v389.u32[2];
        v391.i64[1] = v389.u32[3];
        uint64x2_t v393 = (uint64x2_t)v391;
        v391.i64[0] = v390.u32[0];
        v391.i64[1] = v390.u32[1];
        int64x2_t v394 = v391;
        v391.i64[0] = v390.u32[2];
        v391.i64[1] = v390.u32[3];
        int64x2_t v395 = vpaddq_s64((int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)), (int64x2_t)vshlq_u64(v393, (uint64x2_t)vzip1q_s64((int64x2_t)0, v391)));
        int64x2_t v396 = vpaddq_s64(v394, v391);
        unint64_t v397 = (v395.i64[0] << v365) | v361;
        if (v396.i64[0] + (v365 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v272 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v397;
          unint64_t v397 = (unint64_t)v395.i64[0] >> -(v365 & 0x3F);
          if ((v365 & 0x3F) == 0) {
            unint64_t v397 = 0;
          }
        }
        unint64_t v398 = v396.i64[0] + v365;
        unint64_t v361 = v397 | (v395.i64[1] << v398);
        if ((v398 & 0x3F) + v396.i64[1] >= 0x40)
        {
          *(void *)((char *)v272 + ((v398 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
          unint64_t v361 = (unint64_t)v395.i64[1] >> -(v398 & 0x3F);
          if ((v398 & 0x3F) == 0) {
            unint64_t v361 = 0;
          }
        }
        char v382 = 0;
        unint64_t v365 = v398 + v396.i64[1];
        uint64_t v381 = 1;
      }
      while ((v385 & 1) != 0);
      uint64_t v399 = 0;
      char v400 = 1;
      v401.i64[0] = 0xF000F000F000FLL;
      v401.i64[1] = 0xF000F000F000FLL;
      v402.i64[0] = -1;
      v402.i64[1] = -1;
      do
      {
        char v403 = v400;
        uint16x8_t v404 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v402, (uint16x8_t)vaddq_s16(v521, v401)), *(&v514 + v399));
        int32x4_t v405 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v521.i8);
        int32x4_t v406 = (int32x4_t)vmovl_high_u16((uint16x8_t)v521);
        int32x4_t v407 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v404.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v405)), (int32x4_t)vshlq_u32(vmovl_high_u16(v404), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)));
        int32x4_t v408 = vpaddq_s32(v405, v406);
        v409.i64[0] = v407.u32[0];
        v409.i64[1] = v407.u32[1];
        uint64x2_t v410 = (uint64x2_t)v409;
        v409.i64[0] = v407.u32[2];
        v409.i64[1] = v407.u32[3];
        uint64x2_t v411 = (uint64x2_t)v409;
        v409.i64[0] = v408.u32[0];
        v409.i64[1] = v408.u32[1];
        int64x2_t v412 = v409;
        v409.i64[0] = v408.u32[2];
        v409.i64[1] = v408.u32[3];
        int64x2_t v413 = vpaddq_s64((int64x2_t)vshlq_u64(v410, (uint64x2_t)vzip1q_s64((int64x2_t)0, v412)), (int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v409)));
        int64x2_t v414 = vpaddq_s64(v412, v409);
        unint64_t v415 = (v413.i64[0] << v365) | v361;
        if (v414.i64[0] + (v365 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v272 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v415;
          unint64_t v415 = (unint64_t)v413.i64[0] >> -(v365 & 0x3F);
          if ((v365 & 0x3F) == 0) {
            unint64_t v415 = 0;
          }
        }
        unint64_t v416 = v414.i64[0] + v365;
        unint64_t v361 = v415 | (v413.i64[1] << v416);
        if ((v416 & 0x3F) + v414.i64[1] >= 0x40)
        {
          *(void *)((char *)v272 + ((v416 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
          unint64_t v361 = (unint64_t)v413.i64[1] >> -(v416 & 0x3F);
          if ((v416 & 0x3F) == 0) {
            unint64_t v361 = 0;
          }
        }
        char v400 = 0;
        unint64_t v365 = v416 + v414.i64[1];
        uint64_t v399 = 1;
      }
      while ((v403 & 1) != 0);
      if ((v365 & 0x3F) != 0) {
        *(void *)((char *)v272 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
      }
      unint64_t result = (v365 - v273 + 7) >> 3;
      char v260 = *a2 | (result - 1);
    }
  }
  else
  {
    unsigned int v259 = ((unsigned __int32)a3->i32[0] >> 8) & 0xFFFFF000 | ((unsigned __int16)a3->i32[0] >> 4);
    *(unsigned char *)(a1 + 2) = HIBYTE(a3->i32[0]);
    *(_WORD *)a1 = v259;
    char v260 = 2;
    unint64_t result = 3;
  }
  *a2 = v260;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, char *a4, int a5, int a6)
{
  uint64_t v9 = a3;
  int32x4_t v11 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v12, v13);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  int64x2_t v14 = a4 + 1;
  if (a5 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 8;
  if (v16 >= 8) {
    int v17 = 8;
  }
  else {
    int v17 = v16;
  }
  if (v17 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 2, a2, v17, v13);
    v9 += result;
  }
  else
  {
    *int64x2_t v14 = 0;
  }
  uint64_t v18 = 4 * a2;
  int8x16_t v19 = a4 + 2;
  if (a6 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v12 && v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v19, (int64x2_t *)((char *)v11 + v18), a2, v12, v22);
    v9 += result;
    int16x8_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  else
  {
    *int8x16_t v19 = 0;
    int16x8_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  if (v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int64x2_t *)((char *)v11 + v18 + 32), a2, v17, v22);
    v9 += result;
    goto LABEL_35;
  }
LABEL_34:
  *int16x8_t v23 = 0;
LABEL_35:
  int16x8_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int64x2_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    v9 += result;
    int16x8_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  else
  {
    char *v24 = 0;
    int16x8_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int64x2_t *)((char *)v11 + 8 * a2 + 32), a2, v17, v27);
    v9 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v28 = 0;
LABEL_49:
  int16x8_t v29 = a4 + 6;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v29, (int64x2_t *)((char *)v11 + 12 * a2), a2, v12, v32);
    v9 += result;
    int16x8_t v33 = a4 + 7;
    if (!v17) {
      goto LABEL_64;
    }
  }
  else
  {
    *int16x8_t v29 = 0;
    int16x8_t v33 = a4 + 7;
    if (!v17)
    {
LABEL_64:
      char *v33 = 0;
      return result;
    }
  }
  if (!v32) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int64x2_t *)((char *)v11 + 12 * a2 + 32), a2, v17, v32);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)1>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(uint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  int64x2_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v11 = (int16x8_t)vzip1q_s64(*a3, v9);
  int16x8_t v12 = (int16x8_t)vzip2q_s64(*a3, v9);
  int16x8_t v13 = (int16x8_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  int64x2_t v14 = (int64x2_t *)((char *)v7 + a4);
  int64x2_t v17 = v14[1];
  int16x8_t v18 = (int16x8_t)vzip2q_s64(v8, v10);
  int16x8_t v19 = vshrq_n_s16(v11, 4uLL);
  v20.i64[0] = 0x4000400040004;
  v20.i64[1] = 0x4000400040004;
  int8x16_t v21 = (int8x16_t)vshrq_n_s16(v12, 4uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip1q_s64(v15, *v14), 4uLL);
  int16x8_t v23 = vshrq_n_s16((int16x8_t)vzip2q_s64(v15, *v14), 4uLL);
  int16x8_t v24 = vshrq_n_s16(v13, 4uLL);
  int16x8_t v25 = vshrq_n_s16(v18, 4uLL);
  int16x8_t v26 = vshrq_n_s16((int16x8_t)vzip1q_s64(v16, v17), 4uLL);
  int16x8_t v27 = vshrq_n_s16((int16x8_t)vzip2q_s64(v16, v17), 4uLL);
  int16x8_t v28 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 0);
  v29.i64[0] = 0x3000300030003;
  v29.i64[1] = 0x3000300030003;
  int8x16_t v402 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v28), 4uLL), v29);
  int8x16_t v404 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v21, v28), 4uLL), v29);
  int8x16_t v406 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v28), 4uLL), v29);
  int8x16_t v407 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v28), 4uLL), v29);
  int8x16_t v408 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v28), 4uLL), v29);
  int8x16_t v409 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v28), 4uLL), v29);
  int8x16_t v410 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v28), 4uLL), v29);
  int8x16_t v411 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v28), 4uLL), v29);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v402, (int16x8_t)v404), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v402, (int16x8_t)v404), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v32 = vpmaxq_s16(v30, v30);
  int16x8_t v33 = vpminq_s16(v31, v31);
  int16x8_t v34 = vpmaxq_s16(v32, v32);
  int16x8_t v35 = vpminq_s16(v33, v33);
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  v37.i64[0] = 0x8000800080008000;
  v37.i64[1] = 0x8000800080008000;
  int16x8_t v38 = vminq_s16(v35, v37);
  int16x8_t v39 = vzip1q_s16(v34, v35);
  v40.i64[0] = 0x10001000100010;
  v40.i64[1] = 0x10001000100010;
  int16x8_t v41 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v39)), (int8x16_t)vceqzq_s16(v39));
  int16x8_t v42 = vpmaxq_s16(v41, v41);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v406, (int16x8_t)v407), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v406, (int16x8_t)v407), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v45 = vpmaxq_s16(v43, v43);
  int16x8_t v46 = vpminq_s16(v44, v44);
  int16x8_t v47 = vpmaxq_s16(v45, v45);
  int16x8_t v48 = vpminq_s16(v46, v46);
  int16x8_t v49 = vmaxq_s16(vmaxq_s16(v34, v36), v47);
  int16x8_t v50 = vminq_s16(v38, v48);
  int16x8_t v51 = vzip1q_s16(v47, v48);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v51)), (int8x16_t)vceqzq_s16(v51));
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v408, (int16x8_t)v409), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v408, (int16x8_t)v409), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v56 = vpmaxq_s16(v54, v54);
  int16x8_t v57 = vpminq_s16(v55, v55);
  int16x8_t v58 = vpmaxq_s16(v56, v56);
  int16x8_t v59 = vpminq_s16(v57, v57);
  int16x8_t v60 = vmaxq_s16(v49, v58);
  int16x8_t v61 = vminq_s16(v50, v59);
  int16x8_t v62 = vzip1q_s16(v58, v59);
  int16x8_t v63 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int16x8_t v64 = vpmaxq_s16(v63, v63);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v410, (int16x8_t)v411), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v410, (int16x8_t)v411), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v67 = vpmaxq_s16(v65, v65);
  int16x8_t v68 = vpminq_s16(v66, v66);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int8x16_t v71 = (int8x16_t)vmaxq_s16(v60, v69);
  int16x8_t v72 = vminq_s16(v61, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  v70.i64[0] = -1;
  v70.i64[1] = -1;
  int16x8_t v75 = vpmaxq_s16(v74, v74);
  int8x16_t v76 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v53), vmaxq_s16(v64, v75));
  int16x8_t v77 = vclzq_s16(vsubq_s16((int16x8_t)v71, v72));
  v38.i64[0] = 0xF000F000F000FLL;
  v38.i64[1] = 0xF000F000F000FLL;
  int16x8_t v78 = vsubq_s16(v38, v77);
  int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v40, v77);
  int8x16_t v80 = (int8x16_t)vsubq_s16(vshlq_s16(v70, v78), v72);
  int8x16_t v81 = (int8x16_t)vcgtq_s16((int16x8_t)v76, (int16x8_t)v79);
  int8x16_t v418 = vbslq_s8(v81, v79, v76);
  int8x16_t v419 = (int8x16_t)v72;
  int8x16_t v420 = v71;
  int8x16_t v421 = vandq_s8(v80, v81);
  v71.i64[0] = 0x8000800080008;
  v71.i64[1] = 0x8000800080008;
  int8x16_t v82 = vandq_s8(v81, v71);
  v83.i64[0] = 0x3000300030003;
  v83.i64[1] = 0x3000300030003;
  int16x8_t v84 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v42), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v53), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v64), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v87 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v75), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v414 = vsubq_s16((int16x8_t)v418, v84);
  int16x8_t v415 = vsubq_s16((int16x8_t)v418, v85);
  int16x8_t v416 = vsubq_s16((int16x8_t)v418, v86);
  int16x8_t v417 = vsubq_s16((int16x8_t)v418, v87);
  int8x16_t v88 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v418), v83), v82), vbicq_s8(v20, (int8x16_t)vceqq_s16(vaddq_s16(v87, v86), vnegq_s16(vaddq_s16(v84, v85)))));
  int8x16_t v412 = (int8x16_t)v28;
  int8x16_t v413 = v88;
  if (vmaxvq_s16((int16x8_t)v418))
  {
    int16x8_t v398 = v22;
    int16x8_t v399 = v23;
    int16x8_t v400 = v24;
    int16x8_t v401 = v25;
    int16x8_t v395 = v26;
    int16x8_t v396 = v27;
    int8x16_t v89 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v402, (int16x8_t)vqtbl1q_s8(v402, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    v90.i64[0] = 0x4000400040004;
    v90.i64[1] = 0x4000400040004;
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v404, (int16x8_t)vqtbl1q_s8(v404, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v92 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v406, (int16x8_t)vqtbl1q_s8(v406, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v407, (int16x8_t)vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v408, (int16x8_t)vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v409, (int16x8_t)vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v410, (int16x8_t)vqtbl1q_s8(v410, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v411, (int16x8_t)vqtbl1q_s8(v411, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v89, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v89, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vpmaxq_s16(v100, v100);
    int16x8_t v103 = vpminq_s16(v101, v101);
    int16x8_t v104 = vmaxq_s16(v102, v36);
    int16x8_t v105 = vminq_s16(v103, v37);
    int16x8_t v106 = vzip1q_s16(v102, v103);
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v106)), (int8x16_t)vceqzq_s16(v106));
    int16x8_t v108 = vpmaxq_s16(v107, v107);
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v104, v113);
    int16x8_t v116 = vminq_s16(v105, v114);
    int16x8_t v117 = vzip1q_s16(v113, v114);
    int16x8_t v118 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v117)), (int8x16_t)vceqzq_s16(v117));
    int16x8_t v119 = vpmaxq_s16(v118, v118);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int16x8_t v127 = vminq_s16(v116, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v126, v135);
    int8x16_t v138 = (int8x16_t)vminq_s16(v127, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16(v108, v119), vmaxq_s16(v130, v141));
    int8x16_t v397 = (int8x16_t)v137;
    int16x8_t v143 = vclzq_s16(vsubq_s16(v137, (int16x8_t)v138));
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v40, v143);
    int8x16_t v145 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v142);
    v142.i64[0] = 0x18001800180018;
    v142.i64[1] = 0x18001800180018;
    int8x16_t v147 = vbslq_s8(v145, v142, v40);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v108), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v119), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v130), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v141), (int16x8_t)v83), (int16x8_t)0);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v146, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v146, v149);
    int8x16_t v154 = (int8x16_t)vsubq_s16((int16x8_t)v146, v150);
    int8x16_t v155 = (int8x16_t)vsubq_s16((int16x8_t)v146, v151);
    int8x16_t v156 = vbicq_s8(v90, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v90.i64[0] = 0x7000700070007;
    v90.i64[1] = 0x7000700070007;
    v157.i64[0] = 0x8000800080008;
    v157.i64[1] = 0x8000800080008;
    int8x16_t v158 = v418;
    int16x8_t v159 = (int16x8_t)vandq_s8(v88, v83);
    v160.i64[0] = 0x2000200020002;
    v160.i64[1] = 0x2000200020002;
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v159, v160), v40);
    int16x8_t v162 = v414;
    int16x8_t v163 = v415;
    int16x8_t v164 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v418, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v82, v157))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v157)), v161);
    int16x8_t v166 = v416;
    int16x8_t v165 = v417;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v164, v414, (int16x8_t)v90), vshlq_n_s16(vaddq_s16(vaddq_s16(v416, v415), v417), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v146, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v156, (int16x8_t)v156)), (int16x8_t)v152, (int16x8_t)v90), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v154, (int16x8_t)v153), (int16x8_t)v155), 3uLL))), 0);
    int v168 = (unsigned __int16)vaddvq_s16((int16x8_t)v167);
    BOOL v170 = a5 < 4 || a6 < 2;
    if (v168)
    {
      v171.i64[0] = 0x3000300030003;
      v171.i64[1] = 0x3000300030003;
      int8x16_t v402 = vbslq_s8(v167, v89, v402);
      int8x16_t v404 = vbslq_s8(v167, v91, v404);
      int8x16_t v172 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v146), v171), v147), v156);
      v173.i64[0] = 0xF000F000F000FLL;
      v173.i64[1] = 0xF000F000F000FLL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int8x16_t v406 = vbslq_s8(v167, v92, v406);
      int8x16_t v407 = vbslq_s8(v167, v93, v407);
      int8x16_t v408 = vbslq_s8(v167, v94, v408);
      int8x16_t v409 = vbslq_s8(v167, v95, v409);
      int8x16_t v410 = vbslq_s8(v167, v96, v410);
      int8x16_t v411 = vbslq_s8(v167, v97, v411);
      int16x8_t v162 = (int16x8_t)vbslq_s8(v167, v152, (int8x16_t)v414);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v167, v153, (int8x16_t)v415);
      int16x8_t v414 = v162;
      int16x8_t v415 = v163;
      int16x8_t v166 = (int16x8_t)vbslq_s8(v167, v154, (int8x16_t)v416);
      int16x8_t v165 = (int16x8_t)vbslq_s8(v167, v155, (int8x16_t)v417);
      int16x8_t v416 = v166;
      int16x8_t v417 = v165;
      int8x16_t v420 = vbslq_s8(v167, v397, v420);
      int8x16_t v421 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v171, vsubq_s16(v173, v143)), (int16x8_t)v138), v145), v421);
      int8x16_t v158 = vbslq_s8(v167, v146, v418);
      int8x16_t v418 = v158;
      int8x16_t v419 = vbslq_s8(v167, v138, v419);
      int8x16_t v88 = vbslq_s8(v167, v172, v88);
      int8x16_t v412 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v412, (int16x8_t)vqtbl1q_s8(v412, (int8x16_t)xmmword_242EA76C0)), v412);
      int8x16_t v413 = v88;
    }
    int16x8_t v174 = v400;
    int16x8_t v175 = v398;
    if (!v170)
    {
      int16x8_t v176 = vsubq_s16(v19, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v177 = v399;
      v177.i32[3] = v21.i32[3];
      int16x8_t v178 = vsubq_s16((int16x8_t)v21, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v179 = v401;
      v179.i32[3] = v21.i32[3];
      int16x8_t v180 = vsubq_s16(v400, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7640));
      int16x8_t v181 = vsubq_s16(v401, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7570));
      v422.val[0] = (int8x16_t)v395;
      v422.val[1] = (int8x16_t)v396;
      v422.val[1].i32[3] = v21.i32[3];
      int16x8_t v182 = vsubq_s16(v395, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7650));
      int16x8_t v183 = vsubq_s16(v396, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7570));
      v422.val[0] = (int8x16_t)v178;
      v422.val[0].i32[3] = v176.i32[0];
      v176.i32[0] = v178.i32[3];
      v184.i64[0] = 0x4000400040004;
      v184.i64[1] = 0x4000400040004;
      int16x8_t v185 = vshlq_n_s16((int16x8_t)v422.val[0], 4uLL);
      v422.val[0] = (int8x16_t)vshlq_n_s16(v180, 4uLL);
      v422.val[1] = (int8x16_t)vshlq_n_s16(v181, 4uLL);
      int16x8_t v186 = vshlq_n_s16(v182, 4uLL);
      int16x8_t v187 = vshlq_n_s16(v183, 4uLL);
      v188.i64[0] = 0x3000300030003;
      v188.i64[1] = 0x3000300030003;
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(v176, 4uLL), v188);
      int8x16_t v190 = (int8x16_t)vshlq_s16(v185, v188);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v398, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7590)), 4uLL), v188);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v399, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7630)), 4uLL), v188);
      int8x16_t v193 = (int8x16_t)vshlq_s16((int16x8_t)v422.val[0], v188);
      int8x16_t v194 = (int8x16_t)vshlq_s16((int16x8_t)v422.val[1], v188);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v186, v188);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v187, v188);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      v422.val[1] = vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v197 = vmaxq_s16((int16x8_t)v422.val[0], v186);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v198 = vminq_s16((int16x8_t)v422.val[1], v186);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[1]);
      v422.val[1].i64[0] = 0x10001000100010;
      v422.val[1].i64[1] = 0x10001000100010;
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v199 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v200 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v201 = vpminq_s16(v200, v200);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v202 = vpminq_s16(v201, v201);
      int16x8_t v203 = vmaxq_s16(v197, (int16x8_t)v422.val[0]);
      int16x8_t v204 = vminq_s16(v198, v202);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v202);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v205 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v207 = vpminq_s16(v206, v206);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v208 = vpminq_s16(v207, v207);
      int16x8_t v209 = vmaxq_s16(v203, (int16x8_t)v422.val[0]);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v208);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v210 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v195, (int16x8_t)v196), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v211 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v195, (int16x8_t)v196), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v212 = vpminq_s16(v211, v211);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v213 = vpminq_s16(v212, v212);
      int8x16_t v214 = (int8x16_t)vmaxq_s16(v209, (int16x8_t)v422.val[0]);
      int8x16_t v215 = (int8x16_t)vminq_s16(vminq_s16(v204, v208), v213);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v213);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int8x16_t v216 = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = (int8x16_t)vmaxq_s16(vmaxq_s16(v199, v205), vmaxq_s16(v210, (int16x8_t)v216));
      int16x8_t v217 = vclzq_s16(vsubq_s16((int16x8_t)v214, (int16x8_t)v215));
      int8x16_t v218 = (int8x16_t)vsubq_s16((int16x8_t)v422.val[1], v217);
      int8x16_t v219 = (int8x16_t)vcgtq_s16((int16x8_t)v422.val[0], (int16x8_t)v218);
      int8x16_t v220 = vbslq_s8(v219, v218, v422.val[0]);
      v221.i64[0] = 0x3000300030003;
      v221.i64[1] = 0x3000300030003;
      int16x8_t v222 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v199), v221), (int16x8_t)0);
      int16x8_t v223 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v205), v221), (int16x8_t)0);
      int16x8_t v224 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v210), v221), (int16x8_t)0);
      int16x8_t v225 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, (int16x8_t)v216), v221), (int16x8_t)0);
      int8x16_t v226 = (int8x16_t)vsubq_s16((int16x8_t)v220, v222);
      int8x16_t v227 = (int8x16_t)vsubq_s16((int16x8_t)v220, v223);
      int8x16_t v228 = (int8x16_t)vsubq_s16((int16x8_t)v220, v224);
      int8x16_t v229 = (int8x16_t)vsubq_s16((int16x8_t)v220, v225);
      int8x16_t v230 = vbicq_s8(v184, (int8x16_t)vceqq_s16(vaddq_s16(v225, v224), vnegq_s16(vaddq_s16(v222, v223))));
      v231.i64[0] = 0x7000700070007;
      v231.i64[1] = 0x7000700070007;
      int16x8_t v232 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v218, v219), vaddq_s16((int16x8_t)v230, (int16x8_t)v230)), (int16x8_t)v226, v231), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v228, (int16x8_t)v227), (int16x8_t)v229), 3uLL));
      v216.i64[0] = 0x8000800080008;
      v216.i64[1] = 0x8000800080008;
      int8x16_t v88 = v413;
      int16x8_t v162 = v414;
      v233.i64[0] = 0x2000200020002;
      v233.i64[1] = 0x2000200020002;
      int16x8_t v234 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v413, (int8x16_t)v221), (int16x8_t)v233), v422.val[1]);
      int16x8_t v165 = v417;
      int8x16_t v158 = v418;
      int16x8_t v235 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v418, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v413, v216))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v216)), v234);
      int16x8_t v163 = v415;
      int16x8_t v166 = v416;
      int8x16_t v236 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v235, v414, v231), vshlq_n_s16(vaddq_s16(vaddq_s16(v416, v415), v417), 3uLL)), v232), 0);
      if (vaddvq_s16((int16x8_t)v236))
      {
        v237.i64[0] = 0x9000900090009;
        v237.i64[1] = 0x9000900090009;
        int8x16_t v402 = vbslq_s8(v236, v189, v402);
        int8x16_t v404 = vbslq_s8(v236, v190, v404);
        v238.i64[0] = -1;
        v238.i64[1] = -1;
        int8x16_t v406 = vbslq_s8(v236, v191, v406);
        int8x16_t v407 = vbslq_s8(v236, v192, v407);
        v239.i64[0] = 0xF000F000F000FLL;
        v239.i64[1] = 0xF000F000F000FLL;
        int8x16_t v408 = vbslq_s8(v236, v193, v408);
        int8x16_t v409 = vbslq_s8(v236, v194, v409);
        int8x16_t v410 = vbslq_s8(v236, v195, v410);
        int8x16_t v411 = vbslq_s8(v236, v196, v411);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v236, v226, (int8x16_t)v414);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v236, v227, (int8x16_t)v415);
        int16x8_t v414 = v162;
        int16x8_t v415 = v163;
        int16x8_t v166 = (int16x8_t)vbslq_s8(v236, v228, (int8x16_t)v416);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v236, v229, (int8x16_t)v417);
        int16x8_t v416 = v166;
        int16x8_t v417 = v165;
        int8x16_t v420 = vbslq_s8(v236, v214, v420);
        int8x16_t v421 = vbslq_s8(v236, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v238, vsubq_s16(v239, v217)), (int16x8_t)v215), v219), v421);
        int8x16_t v158 = vbslq_s8(v236, v220, v418);
        int8x16_t v418 = v158;
        int8x16_t v419 = vbslq_s8(v236, v215, v419);
        int8x16_t v88 = vbslq_s8(v236, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v220), v233), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v219, v237), (int16x8_t)vmvnq_s8(v219))), v230), v413);
        int8x16_t v412 = vbslq_s8(v236, vextq_s8(v21, v21, 0xCuLL), v412);
        int8x16_t v413 = v88;
      }
    }
    int16x8_t v240 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v162));
    int8x16_t v403 = (int8x16_t)vaddq_s16(v240, (int16x8_t)v402);
    int8x16_t v405 = (int8x16_t)vaddq_s16((int16x8_t)v404, v240);
    int16x8_t v241 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v163));
    int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)v406, v241);
    int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)v407, v241);
    int16x8_t v242 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v166));
    int8x16_t v408 = (int8x16_t)vaddq_s16((int16x8_t)v408, v242);
    int8x16_t v409 = (int8x16_t)vaddq_s16((int16x8_t)v409, v242);
    int8x16_t v243 = vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v165));
    int8x16_t v410 = (int8x16_t)vaddq_s16((int16x8_t)v410, (int16x8_t)v243);
    int8x16_t v411 = (int8x16_t)vaddq_s16((int16x8_t)v411, (int16x8_t)v243);
    v243.i64[0] = 0x8000800080008;
    v243.i64[1] = 0x8000800080008;
    v244.i64[0] = 0x3000300030003;
    v244.i64[1] = 0x3000300030003;
    v245.i64[0] = 0x2000200020002;
    v245.i64[1] = 0x2000200020002;
    int8x16_t v246 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v244), v245);
    v245.i64[0] = 0x10001000100010;
    v245.i64[1] = 0x10001000100010;
    int16x8_t v247 = (int16x8_t)vandq_s8(v246, (int8x16_t)v245);
    v245.i64[0] = 0x7000700070007;
    v245.i64[1] = 0x7000700070007;
    int16x8_t v248 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v158, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v88, v243))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v243)), v247), v162, v245), vshlq_n_s16(vaddq_s16(v166, vaddq_s16(v163, v165)), 3uLL));
    if ((unint64_t)(vpaddq_s16(v248, v248).i16[0] - 599) < 0xFFFFFFFFFFFFFD78)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(a1, a2, (uint32x4_t *)a3, a4, a5, a6, a7);
      return 80;
    }
    else
    {
      int8x16_t v249 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v250 = 8 * (a1 & 7);
      if (v250) {
        uint64_t v251 = *v249 & ~(-1 << v250);
      }
      else {
        uint64_t v251 = 0;
      }
      *a2 = 0;
      uint64_t v254 = ((v158.i16[0] << 10) + 15360) & 0x3C00;
      if (!v158.i16[0]) {
        uint64_t v254 = 0;
      }
      if (v158.i16[1]) {
        uint64_t v255 = ((v158.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v255 = 0;
      }
      unint64_t v256 = v254 | v255 | v88.i8[0] & 0x1F | (32 * (v88.i8[2] & 0x1Fu));
      unint64_t v257 = v412.i16[0] & 0xFFF | ((unint64_t)(v412.i16[1] & 0xFFF) << 12);
      uint64_t v258 = (v256 << v250) | v251;
      if (v250 >= 0x2E)
      {
        *int8x16_t v249 = v258;
        uint64_t v258 = v256 >> (-8 * (a1 & 7u));
      }
      unint64_t v259 = (v250 + 18) & 0x3A;
      unint64_t v260 = v258 | (v257 << v259);
      if (v259 >= 0x28)
      {
        *(void *)((char *)v249 + (((v250 + 18) >> 3) & 8)) = v260;
        unint64_t v260 = v257 >> -(char)v259;
      }
      unint64_t v261 = v250 + 42;
      int8x16_t v262 = (int8x16_t)vsubq_s16((int16x8_t)v418, v414);
      int8x16_t v263 = (int8x16_t)vsubq_s16((int16x8_t)v418, v415);
      int8x16_t v264 = (int8x16_t)vsubq_s16((int16x8_t)v418, v416);
      int8x16_t v265 = (int8x16_t)vsubq_s16((int16x8_t)v418, v417);
      *(uint8x8_t *)v262.i8 = vqmovn_u16((uint16x8_t)v262);
      *(uint8x8_t *)v263.i8 = vqmovn_u16((uint16x8_t)v263);
      *(uint8x8_t *)v264.i8 = vqmovn_u16((uint16x8_t)v264);
      *(uint8x8_t *)v265.i8 = vqmovn_u16((uint16x8_t)v265);
      v265.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v262, v263), (int16x8_t)vzip1q_s8(v264, v265)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v262, v263), (int16x8_t)vtrn2q_s8(v264, v265))).u64[0];
      v263.i64[0] = 0x202020202020202;
      v263.i64[1] = 0x202020202020202;
      int8x16_t v266 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v413.i8, (int8x8_t)0x4000400040004)))), v263);
      v263.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v263.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v264.i64[0] = -1;
      v264.i64[1] = -1;
      uint8x16_t v267 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v264, (uint8x16_t)vorrq_s8(v266, v263)), (int8x16_t)v265.u64[0]);
      int16x8_t v268 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v266.i8);
      uint16x8_t v269 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v267.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v268)), (int16x8_t)vmovl_high_u8(v267));
      uint16x8_t v270 = (uint16x8_t)vpaddq_s16(v268, (int16x8_t)vmovl_high_u8((uint8x16_t)v266));
      int32x4_t v271 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v270.i8);
      int32x4_t v272 = (int32x4_t)vmovl_high_u16(v270);
      int32x4_t v273 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v269.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v271)), (int32x4_t)vshlq_u32(vmovl_high_u16(v269), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v272)));
      int32x4_t v274 = vpaddq_s32(v271, v272);
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      uint64x2_t v276 = (uint64x2_t)v275;
      v275.i64[0] = v273.u32[2];
      v275.i64[1] = v273.u32[3];
      uint64x2_t v277 = (uint64x2_t)v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      int64x2_t v278 = v275;
      v275.i64[0] = v274.u32[2];
      v275.i64[1] = v274.u32[3];
      int64x2_t v279 = vpaddq_s64((int64x2_t)vshlq_u64(v276, (uint64x2_t)vzip1q_s64((int64x2_t)0, v278)), (int64x2_t)vshlq_u64(v277, (uint64x2_t)vzip1q_s64((int64x2_t)0, v275)));
      int64x2_t v280 = vpaddq_s64(v278, v275);
      uint64_t v281 = (v250 + 42) & 0x3A;
      unint64_t v282 = (v279.i64[0] << v281) | v260;
      if ((unint64_t)(v280.i64[0] + v281) >= 0x40)
      {
        *(void *)((char *)v249 + ((v261 >> 3) & 8)) = v282;
        unint64_t v282 = (unint64_t)v279.i64[0] >> -(char)v281;
      }
      unint64_t v283 = v280.i64[0] + v261;
      unint64_t v284 = v282 | (v279.i64[1] << v283);
      if ((v283 & 0x3F) + v280.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v284;
        unint64_t v284 = (unint64_t)v279.i64[1] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v284 = 0;
        }
      }
      unint64_t v285 = v283 + v280.i64[1];
      v286.i64[0] = 0x8000800080008;
      v286.i64[1] = 0x8000800080008;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      int16x8_t v288 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v413, v286), (int8x16_t)0, 0xCuLL), v418);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v290 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v287, (uint16x8_t)vaddq_s16(v288, v289)), v421);
      int32x4_t v291 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v288.i8);
      int32x4_t v292 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v291)), (int32x4_t)vmovl_high_u16(v290));
      int32x4_t v293 = vpaddq_s32(v291, (int32x4_t)vmovl_high_u16((uint16x8_t)v288));
      v294.i64[0] = v292.u32[0];
      v294.i64[1] = v292.u32[1];
      uint64x2_t v295 = (uint64x2_t)v294;
      v294.i64[0] = v292.u32[2];
      v294.i64[1] = v292.u32[3];
      uint64x2_t v296 = (uint64x2_t)v294;
      v294.i64[0] = v293.u32[0];
      v294.i64[1] = v293.u32[1];
      int64x2_t v297 = v294;
      v294.i64[0] = v293.u32[2];
      v294.i64[1] = v293.u32[3];
      int64x2_t v298 = vpaddq_s64((int64x2_t)vshlq_u64(v295, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)), (int64x2_t)vshlq_u64(v296, (uint64x2_t)vzip1q_s64((int64x2_t)0, v294)));
      int64x2_t v299 = vpaddq_s64(v297, v294);
      unint64_t v300 = (v298.i64[0] << v285) | v284;
      if (v299.i64[0] + (v285 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v300;
        unint64_t v300 = (unint64_t)v298.i64[0] >> -(v285 & 0x3F);
        if ((v285 & 0x3F) == 0) {
          unint64_t v300 = 0;
        }
      }
      unint64_t v301 = v299.i64[0] + v285;
      unint64_t v302 = v300 | (v298.i64[1] << v301);
      if ((v301 & 0x3F) + v299.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v301 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v298.i64[1] >> -(v301 & 0x3F);
        if ((v301 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      unint64_t v303 = v301 + v299.i64[1];
      int16x8_t v304 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v414, 0xCuLL);
      v305.i64[0] = 0xF000F000F000FLL;
      v305.i64[1] = 0xF000F000F000FLL;
      v306.i64[0] = -1;
      v306.i64[1] = -1;
      uint16x8_t v307 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v306, (uint16x8_t)vaddq_s16(v304, v305)), v403);
      int32x4_t v308 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v304.i8);
      int32x4_t v309 = (int32x4_t)vmovl_high_u16((uint16x8_t)v304);
      int32x4_t v310 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v307.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v308)), (int32x4_t)vshlq_u32(vmovl_high_u16(v307), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v309)));
      int32x4_t v311 = vpaddq_s32(v308, v309);
      v312.i64[0] = v310.u32[0];
      v312.i64[1] = v310.u32[1];
      uint64x2_t v313 = (uint64x2_t)v312;
      v312.i64[0] = v310.u32[2];
      v312.i64[1] = v310.u32[3];
      uint64x2_t v314 = (uint64x2_t)v312;
      v312.i64[0] = v311.u32[0];
      v312.i64[1] = v311.u32[1];
      int64x2_t v315 = v312;
      v312.i64[0] = v311.u32[2];
      v312.i64[1] = v311.u32[3];
      int64x2_t v316 = vpaddq_s64((int64x2_t)vshlq_u64(v313, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)), (int64x2_t)vshlq_u64(v314, (uint64x2_t)vzip1q_s64((int64x2_t)0, v312)));
      int64x2_t v317 = vpaddq_s64(v315, v312);
      unint64_t v318 = (v316.i64[0] << v303) | v302;
      if (v317.i64[0] + (v303 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v303 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v318;
        unint64_t v318 = (unint64_t)v316.i64[0] >> -(v303 & 0x3F);
        if ((v303 & 0x3F) == 0) {
          unint64_t v318 = 0;
        }
      }
      unint64_t v319 = v317.i64[0] + v303;
      unint64_t v320 = v318 | (v316.i64[1] << v319);
      if ((v319 & 0x3F) + v317.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v320;
        unint64_t v320 = (unint64_t)v316.i64[1] >> -(v319 & 0x3F);
        if ((v319 & 0x3F) == 0) {
          unint64_t v320 = 0;
        }
      }
      unint64_t v321 = v319 + v317.i64[1];
      v322.i64[0] = 0xF000F000F000FLL;
      v322.i64[1] = 0xF000F000F000FLL;
      v323.i64[0] = -1;
      v323.i64[1] = -1;
      uint16x8_t v324 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v323, (uint16x8_t)vaddq_s16(v414, v322)), v405);
      int32x4_t v325 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v414.i8);
      int32x4_t v326 = (int32x4_t)vmovl_high_u16((uint16x8_t)v414);
      int32x4_t v327 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v324.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v325)), (int32x4_t)vshlq_u32(vmovl_high_u16(v324), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v326)));
      int32x4_t v328 = vpaddq_s32(v325, v326);
      v329.i64[0] = v327.u32[0];
      v329.i64[1] = v327.u32[1];
      uint64x2_t v330 = (uint64x2_t)v329;
      v329.i64[0] = v327.u32[2];
      v329.i64[1] = v327.u32[3];
      uint64x2_t v331 = (uint64x2_t)v329;
      v329.i64[0] = v328.u32[0];
      v329.i64[1] = v328.u32[1];
      int64x2_t v332 = v329;
      v329.i64[0] = v328.u32[2];
      v329.i64[1] = v328.u32[3];
      int64x2_t v333 = vpaddq_s64((int64x2_t)vshlq_u64(v330, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)), (int64x2_t)vshlq_u64(v331, (uint64x2_t)vzip1q_s64((int64x2_t)0, v329)));
      int64x2_t v334 = vpaddq_s64(v332, v329);
      unint64_t v335 = (v333.i64[0] << v321) | v320;
      if (v334.i64[0] + (v321 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v321 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v335;
        if ((v321 & 0x3F) != 0) {
          unint64_t v335 = (unint64_t)v333.i64[0] >> -(v321 & 0x3F);
        }
        else {
          unint64_t v335 = 0;
        }
      }
      uint64_t v336 = v334.i64[1];
      unint64_t v337 = v334.i64[0] + v321;
      uint64_t v338 = (v334.i64[0] + v321) & 0x3F;
      unint64_t v339 = v335 | (v333.i64[1] << v337);
      if ((unint64_t)(v338 + v334.i64[1]) >= 0x40)
      {
        *(void *)((char *)v249 + ((v337 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
        unint64_t v339 = (unint64_t)v333.i64[1] >> -(char)v338;
        if (!v338) {
          unint64_t v339 = 0;
        }
      }
      uint64_t v340 = 0;
      v341.i64[0] = 0xF000F000F000FLL;
      v341.i64[1] = 0xF000F000F000FLL;
      v342.i64[0] = -1;
      v342.i64[1] = -1;
      unint64_t v343 = v337 + v336;
      char v344 = 1;
      do
      {
        char v345 = v344;
        uint16x8_t v346 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v342, (uint16x8_t)vaddq_s16(v415, v341)), *(&v406 + v340));
        int32x4_t v347 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v415.i8);
        int32x4_t v348 = (int32x4_t)vmovl_high_u16((uint16x8_t)v415);
        int32x4_t v349 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v346.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)), (int32x4_t)vshlq_u32(vmovl_high_u16(v346), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)));
        int32x4_t v350 = vpaddq_s32(v347, v348);
        v351.i64[0] = v349.u32[0];
        v351.i64[1] = v349.u32[1];
        uint64x2_t v352 = (uint64x2_t)v351;
        v351.i64[0] = v349.u32[2];
        v351.i64[1] = v349.u32[3];
        uint64x2_t v353 = (uint64x2_t)v351;
        v351.i64[0] = v350.u32[0];
        v351.i64[1] = v350.u32[1];
        int64x2_t v354 = v351;
        v351.i64[0] = v350.u32[2];
        v351.i64[1] = v350.u32[3];
        int64x2_t v355 = vpaddq_s64((int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v354)), (int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v351)));
        int64x2_t v356 = vpaddq_s64(v354, v351);
        unint64_t v357 = (v355.i64[0] << v343) | v339;
        if (v356.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
          unint64_t v357 = (unint64_t)v355.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v357 = 0;
          }
        }
        unint64_t v358 = v356.i64[0] + v343;
        unint64_t v339 = v357 | (v355.i64[1] << v358);
        if ((v358 & 0x3F) + v356.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v355.i64[1] >> -(v358 & 0x3F);
          if ((v358 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v344 = 0;
        unint64_t v343 = v358 + v356.i64[1];
        uint64_t v340 = 1;
      }
      while ((v345 & 1) != 0);
      uint64_t v359 = 0;
      char v360 = 1;
      v361.i64[0] = 0xF000F000F000FLL;
      v361.i64[1] = 0xF000F000F000FLL;
      v362.i64[0] = -1;
      v362.i64[1] = -1;
      do
      {
        char v363 = v360;
        uint16x8_t v364 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v362, (uint16x8_t)vaddq_s16(v416, v361)), *(&v408 + v359));
        int32x4_t v365 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v416.i8);
        int32x4_t v366 = (int32x4_t)vmovl_high_u16((uint16x8_t)v416);
        int32x4_t v367 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v364.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v365)), (int32x4_t)vshlq_u32(vmovl_high_u16(v364), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v366)));
        int32x4_t v368 = vpaddq_s32(v365, v366);
        v369.i64[0] = v367.u32[0];
        v369.i64[1] = v367.u32[1];
        uint64x2_t v370 = (uint64x2_t)v369;
        v369.i64[0] = v367.u32[2];
        v369.i64[1] = v367.u32[3];
        uint64x2_t v371 = (uint64x2_t)v369;
        v369.i64[0] = v368.u32[0];
        v369.i64[1] = v368.u32[1];
        int64x2_t v372 = v369;
        v369.i64[0] = v368.u32[2];
        v369.i64[1] = v368.u32[3];
        int64x2_t v373 = vpaddq_s64((int64x2_t)vshlq_u64(v370, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)), (int64x2_t)vshlq_u64(v371, (uint64x2_t)vzip1q_s64((int64x2_t)0, v369)));
        int64x2_t v374 = vpaddq_s64(v372, v369);
        unint64_t v375 = (v373.i64[0] << v343) | v339;
        if (v374.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
          unint64_t v375 = (unint64_t)v373.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v375 = 0;
          }
        }
        unint64_t v376 = v374.i64[0] + v343;
        unint64_t v339 = v375 | (v373.i64[1] << v376);
        if ((v376 & 0x3F) + v374.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v373.i64[1] >> -(v376 & 0x3F);
          if ((v376 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v360 = 0;
        unint64_t v343 = v376 + v374.i64[1];
        uint64_t v359 = 1;
      }
      while ((v363 & 1) != 0);
      uint64_t v377 = 0;
      char v378 = 1;
      v379.i64[0] = 0xF000F000F000FLL;
      v379.i64[1] = 0xF000F000F000FLL;
      v380.i64[0] = -1;
      v380.i64[1] = -1;
      do
      {
        char v381 = v378;
        uint16x8_t v382 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v380, (uint16x8_t)vaddq_s16(v417, v379)), *(&v410 + v377));
        int32x4_t v383 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v417.i8);
        int32x4_t v384 = (int32x4_t)vmovl_high_u16((uint16x8_t)v417);
        int32x4_t v385 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v382.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v383)), (int32x4_t)vshlq_u32(vmovl_high_u16(v382), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v384)));
        int32x4_t v386 = vpaddq_s32(v383, v384);
        v387.i64[0] = v385.u32[0];
        v387.i64[1] = v385.u32[1];
        uint64x2_t v388 = (uint64x2_t)v387;
        v387.i64[0] = v385.u32[2];
        v387.i64[1] = v385.u32[3];
        uint64x2_t v389 = (uint64x2_t)v387;
        v387.i64[0] = v386.u32[0];
        v387.i64[1] = v386.u32[1];
        int64x2_t v390 = v387;
        v387.i64[0] = v386.u32[2];
        v387.i64[1] = v386.u32[3];
        int64x2_t v391 = vpaddq_s64((int64x2_t)vshlq_u64(v388, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)), (int64x2_t)vshlq_u64(v389, (uint64x2_t)vzip1q_s64((int64x2_t)0, v387)));
        int64x2_t v392 = vpaddq_s64(v390, v387);
        unint64_t v393 = (v391.i64[0] << v343) | v339;
        if (v392.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v393;
          unint64_t v393 = (unint64_t)v391.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v393 = 0;
          }
        }
        unint64_t v394 = v392.i64[0] + v343;
        unint64_t v339 = v393 | (v391.i64[1] << v394);
        if ((v394 & 0x3F) + v392.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v391.i64[1] >> -(v394 & 0x3F);
          if ((v394 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v378 = 0;
        unint64_t v343 = v394 + v392.i64[1];
        uint64_t v377 = 1;
      }
      while ((v381 & 1) != 0);
      if ((v343 & 0x3F) != 0) {
        *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
      }
      unint64_t result = (v343 - v250 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    unsigned int v252 = ((unsigned __int32)a3->i32[0] >> 8) & 0xFFFFF000 | ((unsigned __int16)a3->i32[0] >> 4);
    *(unsigned char *)(a1 + 2) = HIBYTE(a3->i32[0]);
    *(_WORD *)a1 = v252;
    *a2 = 2;
    return 3;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v11 = a6;
  if (a5 > 3)
  {
    uint64_t v14 = a5 & 0xFC;
    if (a5 == v14)
    {
      uint64_t v15 = 0;
      int64x2_t v16 = &v64;
      do
      {
        int64x2_t v17 = (unsigned __int32 *)v16;
        int16x8_t v18 = a3;
        uint64_t v19 = a5;
        do
        {
          uint32x4_t v20 = *v18++;
          uint32x4_t v21 = vshrq_n_u32(v20, 4uLL);
          *(v17 - 8) = v21.i32[0] & 0xFFFF0FFF;
          *(v17 - 4) = v21.i32[1] & 0xFFFF0FFF;
          *int64x2_t v17 = v21.i32[2] & 0xFFFF0FFF;
          v17[4] = v21.i32[3] & 0xFFFF0FFF;
          v17 += 16;
          v19 -= 4;
        }
        while (v19);
        ++v15;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int64x2_t v16 = (long long *)((char *)v16 + 4);
      }
      while (v15 != a6);
    }
    else
    {
      uint64_t v22 = 0;
      int16x8_t v23 = &v62;
      int16x8_t v24 = &v64;
      do
      {
        int16x8_t v25 = (unsigned __int32 *)v24;
        int16x8_t v26 = a3;
        uint64_t v27 = a5 & 0xFC;
        do
        {
          uint32x4_t v28 = *v26++;
          uint32x4_t v29 = vshrq_n_u32(v28, 4uLL);
          *(v25 - 8) = v29.i32[0] & 0xFFFF0FFF;
          *(v25 - 4) = v29.i32[1] & 0xFFFF0FFF;
          *int16x8_t v25 = v29.i32[2] & 0xFFFF0FFF;
          v25[4] = v29.i32[3] & 0xFFFF0FFF;
          v25 += 16;
          v27 -= 4;
        }
        while (v27);
        uint64_t v30 = v14;
        uint64_t v31 = a5 - v14;
        do
        {
          LODWORD(v23[v30]) = ((unsigned __int32)a3->i32[v30] >> 4) & 0xFFF0FFF;
          ++v30;
          --v31;
        }
        while (v31);
        ++v22;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int16x8_t v24 = (long long *)((char *)v24 + 4);
        int16x8_t v23 = (long long *)((char *)v23 + 4);
      }
      while (v22 != a6);
    }
  }
  else
  {
    int16x8_t v12 = &a3->i32[2];
    int16x8_t v13 = (int *)&v63;
    do
    {
      *(v13 - 4) = (*(v12 - 2) >> 4) & 0xFFF0FFF;
      if (a5 != 1)
      {
        *int16x8_t v13 = (*(v12 - 1) >> 4) & 0xFFF0FFF;
        if (a5 != 2) {
          v13[4] = (*v12 >> 4) & 0xFFF0FFF;
        }
      }
      int16x8_t v12 = (__int32 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  int v46 = (unsigned __int16)v62;
  int v47 = WORD1(v62);
  int v48 = (unsigned __int16)v63;
  int v49 = WORD1(v63);
  int v50 = WORD2(v62);
  int v51 = WORD3(v62);
  int v52 = WORD2(v63);
  int v53 = WORD3(v63);
  int v54 = (unsigned __int16)v64;
  int v55 = WORD1(v64);
  int v56 = (unsigned __int16)v65;
  int v57 = WORD1(v65);
  int v58 = WORD2(v64);
  int v59 = WORD3(v64);
  if (a5 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = a5;
  }
  if (a5 >= 4) {
    unsigned int v33 = a5 - 4;
  }
  else {
    unsigned int v33 = 0;
  }
  int v60 = WORD2(v65);
  int v61 = WORD3(v65);
  if (a6 >= 2) {
    unsigned int v34 = 2;
  }
  else {
    unsigned int v34 = a6;
  }
  if (a6 >= 2) {
    unsigned int v35 = a6 - 2;
  }
  else {
    unsigned int v35 = 0;
  }
  char v36 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v46, a7, v32, v34);
  int v46 = WORD4(v62);
  int v47 = WORD5(v62);
  int v48 = WORD4(v63);
  int v49 = WORD5(v63);
  int v50 = WORD6(v62);
  int v51 = HIWORD(v62);
  int v52 = WORD6(v63);
  int v53 = HIWORD(v63);
  int v54 = WORD4(v64);
  int v55 = WORD5(v64);
  int v56 = WORD4(v65);
  int v57 = WORD5(v65);
  int v58 = WORD6(v64);
  int v59 = HIWORD(v64);
  int v60 = WORD6(v65);
  int v61 = HIWORD(v65);
  if (a6 >= 4) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = v35;
  }
  int v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 20, (uint64_t)&v46, a7, v32, v37);
  int v46 = (unsigned __int16)v66;
  int v47 = WORD1(v66);
  int v48 = (unsigned __int16)v67;
  int v49 = WORD1(v67);
  int v50 = WORD2(v66);
  int v51 = WORD3(v66);
  int v52 = WORD2(v67);
  int v53 = WORD3(v67);
  int v54 = (unsigned __int16)v68;
  int v55 = WORD1(v68);
  int v56 = (unsigned __int16)v69;
  int v57 = WORD1(v69);
  int v58 = WORD2(v68);
  int v59 = WORD3(v68);
  if (a5 >= 8) {
    unsigned int v39 = 4;
  }
  else {
    unsigned int v39 = v33;
  }
  int v60 = WORD2(v69);
  int v61 = WORD3(v69);
  int v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 40, (uint64_t)&v46, a7, v39, v34);
  int v46 = WORD4(v66);
  int v47 = WORD5(v66);
  int v48 = WORD4(v67);
  int v49 = WORD5(v67);
  int v50 = WORD6(v66);
  int v51 = HIWORD(v66);
  int v52 = WORD6(v67);
  int v53 = HIWORD(v67);
  int v54 = WORD4(v68);
  int v55 = WORD5(v68);
  int v56 = WORD4(v69);
  int v57 = WORD5(v69);
  int v58 = WORD6(v68);
  int v59 = HIWORD(v68);
  int v60 = WORD6(v69);
  int v61 = HIWORD(v69);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(a1 + 60, (uint64_t)&v46, a7, v39, v37);
  if (v40) {
    char v42 = 4;
  }
  else {
    char v42 = 0;
  }
  if (v38) {
    char v43 = 2;
  }
  else {
    char v43 = 0;
  }
  if (result) {
    char v44 = -8;
  }
  else {
    char v44 = -16;
  }
  *a2 = v44 | v42 | v36 | v43;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v274 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v239 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v238 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v237 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v236 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v234 = v7;
  BOOL v235 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v233 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::compBits[v6];
    *(&v272 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(unsigned int *)((char *)&v250 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v249[v17 + 2] = v18;
    uint64_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint32x4_t v21 = (unsigned int *)((char *)&v253 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint32x4_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint32x4_t v21 = (unsigned int *)((char *)&v253 + v17 * 4);
      *uint32x4_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint32x4_t v21 = (unsigned int *)((char *)&v253 + v17 * 4);
      *uint32x4_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint32x4_t v29 = &v271[v17 + 2];
    v271[v6 + 2] = v20;
    v271[v6 + 4] = v20;
    v271[v6] = 0;
    if (v233)
    {
      unsigned int v30 = v20;
      if (v235) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v271[v6] = 1;
        v271[v6 + 4] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        uint64_t v31 = &v271[v17 + 2];
      }
      else {
        uint64_t v31 = (unsigned int *)(&v255 + v6);
      }
      unsigned int v20 = *v31;
      *uint32x4_t v29 = *v31;
      if (v235)
      {
LABEL_58:
        if (v234) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v271[v6] = 2;
      v271[v6 + 4] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      unsigned int v32 = &v271[v17 + 2];
    }
    else {
      unsigned int v32 = (unsigned int *)(&v257 + v6);
    }
    unsigned int v20 = *v32;
    *uint32x4_t v29 = *v32;
    if (v234)
    {
LABEL_59:
      if (v236) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v271[v6] = 3;
      v271[v6 + 4] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      unsigned int v33 = &v271[v17 + 2];
    }
    else {
      unsigned int v33 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v33;
    *uint32x4_t v29 = *v33;
    if (v236)
    {
LABEL_60:
      if (v238) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v271[v6] = 4;
      v271[v6 + 4] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      unsigned int v34 = &v271[v17 + 2];
    }
    else {
      unsigned int v34 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v34;
    *uint32x4_t v29 = *v34;
    if (v238)
    {
LABEL_61:
      if (v237) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v271[v6] = 5;
      v271[v6 + 4] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      unsigned int v35 = &v271[v17 + 2];
    }
    else {
      unsigned int v35 = (unsigned int *)(&v263 + v6);
    }
    unsigned int v20 = *v35;
    *uint32x4_t v29 = *v35;
    if (v237)
    {
LABEL_62:
      if (v239) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v271[v6] = 7;
        v271[v6 + 4] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        unsigned int v37 = &v271[v17 + 2];
      }
      else {
        unsigned int v37 = (unsigned int *)(&v267 + v6);
      }
      unsigned int v20 = *v37;
      *uint32x4_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v271[v6] = 6;
      v271[v6 + 4] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      char v36 = &v271[v17 + 2];
    }
    else {
      char v36 = (unsigned int *)(&v265 + v6);
    }
    unsigned int v20 = *v36;
    *uint32x4_t v29 = *v36;
    if (!v239) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v269 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42]
          - v43
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v14
            + 1);
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v72 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v72) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v269 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v269 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  uint64_t v51 = v250;
  uint64_t v52 = v251;
  unsigned int v54 = v269;
  unsigned int v53 = v270;
  BOOL v56 = v270 >= v269;
  BOOL v57 = v270 < v269;
  int v58 = kDQuadParamTable[160 * v251 + 6 + 10 * v270];
  int v247 = kDQuadParamTable[160 * v250 + 6 + 10 * v269];
  int v55 = v247;
  int v248 = v58;
  v249[0] = v247;
  v249[1] = v58;
  if (*(&v269 + v56) == *(&v269 + v57))
  {
    int v59 = v247;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v249 | (4 * v57));
    int v59 = v247;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v247 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v247 | (4 * v56)) += v60;
      int v59 = v247;
    }
  }
  if (a4) {
    BOOL v61 = a5 == 0;
  }
  else {
    BOOL v61 = 1;
  }
  int v62 = v61;
  int v232 = v62;
  long long v63 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v64 = *((void *)v63 + 1);
  int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v51
        + 1);
  int v66 = v63[4];
  LODWORD(v63) = v63[5];
  unsigned int v67 = v66 + v65;
  unsigned int v245 = v67;
  unsigned int v68 = v63 + v65;
  unsigned int v243 = v68;
  int v69 = v59 - v55;
  if (v69 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v69)
    {
      unsigned int v243 = --v68;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v70 = -1;
LABEL_167:
        unsigned int v245 = v70 + v67;
      }
    }
  }
  else if (v69)
  {
    v68 += v69;
    unsigned int v243 = v68;
    int v70 = v69;
    goto LABEL_167;
  }
  BOOL v72 = v51 == 5 && v54 == 1 && v69 < 2;
  int v73 = v72;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v74 = 31744;
    }
    else {
      int v74 = 0;
    }
    if (v51 == 4) {
      int v75 = 2139095040;
    }
    else {
      int v75 = v74;
    }
    int v76 = 1 << (v272 - 1);
    if (v232)
    {
      if (v233) {
        goto LABEL_188;
      }
LABEL_355:
      if ((v75 & ~v255) == 0 || v255 == v76) {
        int v73 = 1;
      }
      if (!v235) {
        goto LABEL_362;
      }
LABEL_189:
      if (v234) {
        goto LABEL_190;
      }
LABEL_369:
      if ((v75 & ~v259) == 0 || v259 == v76) {
        int v73 = 1;
      }
      if (!v236) {
        goto LABEL_376;
      }
LABEL_191:
      if (v238) {
        goto LABEL_192;
      }
LABEL_383:
      if ((v75 & ~v263) == 0 || v263 == v76) {
        int v73 = 1;
      }
      if (!v237) {
        goto LABEL_390;
      }
LABEL_193:
      if (!v239) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v75 & ~v253) == 0 || v253 == v76) {
        int v73 = 1;
      }
      if (!v233) {
        goto LABEL_355;
      }
LABEL_188:
      if (v235) {
        goto LABEL_189;
      }
LABEL_362:
      if ((v75 & ~v257) == 0 || v257 == v76) {
        int v73 = 1;
      }
      if (!v234) {
        goto LABEL_369;
      }
LABEL_190:
      if (v236) {
        goto LABEL_191;
      }
LABEL_376:
      if ((v75 & ~v261) == 0 || v261 == v76) {
        int v73 = 1;
      }
      if (!v238) {
        goto LABEL_383;
      }
LABEL_192:
      if (v237) {
        goto LABEL_193;
      }
LABEL_390:
      if ((v75 & ~v265) == 0 || v265 == v76) {
        int v73 = 1;
      }
      if (!v239)
      {
LABEL_194:
        if ((v75 & ~v267) == 0 || v267 == v76) {
          int v73 = 1;
        }
      }
    }
  }
  BOOL v72 = v64 >> v68 > 4;
  int v78 = v232;
  if (v72) {
    int v78 = 1;
  }
  int v79 = v78 | v73;
  int8x16_t v80 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v81 = *((void *)v80 + 1);
  int v82 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v52
        + 1);
  int v83 = v80[4];
  LODWORD(v80) = v80[5];
  unsigned int v84 = v83 + v82;
  unsigned int v246 = v84;
  unsigned int v85 = v80 + v82;
  unsigned int v244 = v85;
  int v86 = v248 - v58;
  if (v248 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v248)
    {
      unsigned int v244 = --v85;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v87 = -1;
LABEL_206:
        unsigned int v246 = v87 + v84;
      }
    }
  }
  else if (v248 != v58)
  {
    v85 += v86;
    unsigned int v244 = v85;
    int v87 = v248 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v86 < 2) {
    int v79 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v88 = 31744;
    }
    else {
      int v88 = 0;
    }
    if (v52 == 4) {
      int v88 = 2139095040;
    }
    int v89 = 1 << (v273 - 1);
    if (v232)
    {
      if (v233) {
        goto LABEL_221;
      }
LABEL_405:
      if ((v88 & ~v256) == 0 || v256 == v89) {
        int v79 = 1;
      }
      if (!v235) {
        goto LABEL_412;
      }
LABEL_222:
      if (v234) {
        goto LABEL_223;
      }
LABEL_419:
      if ((v88 & ~v260) == 0 || v260 == v89) {
        int v79 = 1;
      }
      if (!v236) {
        goto LABEL_426;
      }
LABEL_224:
      if (v238) {
        goto LABEL_225;
      }
LABEL_433:
      if ((v88 & ~v264) == 0 || v264 == v89) {
        int v79 = 1;
      }
      if (!v237) {
        goto LABEL_440;
      }
LABEL_226:
      if (!v239) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v88 & ~v254) == 0 || v254 == v89) {
        int v79 = 1;
      }
      if (!v233) {
        goto LABEL_405;
      }
LABEL_221:
      if (v235) {
        goto LABEL_222;
      }
LABEL_412:
      if ((v88 & ~v258) == 0 || v258 == v89) {
        int v79 = 1;
      }
      if (!v234) {
        goto LABEL_419;
      }
LABEL_223:
      if (v236) {
        goto LABEL_224;
      }
LABEL_426:
      if ((v88 & ~v262) == 0 || v262 == v89) {
        int v79 = 1;
      }
      if (!v238) {
        goto LABEL_433;
      }
LABEL_225:
      if (v237) {
        goto LABEL_226;
      }
LABEL_440:
      if ((v88 & ~v266) == 0 || v266 == v89) {
        int v79 = 1;
      }
      if (!v239)
      {
LABEL_227:
        if ((v88 & ~v268) == 0 || v268 == v89) {
          int v79 = 1;
        }
      }
    }
  }
  char v91 = 0;
  uint64_t v92 = 0;
  BOOL v72 = v81 >> v85 > 4;
  int v93 = v232;
  if (v72) {
    int v93 = 1;
  }
  int v229 = v93;
  int v230 = v79;
  uint64_t v242 = 0;
  uint64_t v241 = 0;
  memset(v240, 0, sizeof(v240));
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v272 + v92);
    if (v96 >= *(&v245 + v92)) {
      unsigned int v97 = *(&v245 + v92);
    }
    else {
      unsigned int v97 = *(&v272 + v92);
    }
    *(&v245 + v92) = v97;
    int16x8_t v98 = &kDQuadParamTable[160 * *(&v250 + v92) + 10 * *(&v269 + v92)];
    if (v98[5]) {
      unsigned int v99 = v96;
    }
    else {
      unsigned int v99 = 0;
    }
    if (v99 >= *(&v243 + v92)) {
      unsigned int v99 = *(&v243 + v92);
    }
    int v100 = v271[v92 + 4] & (-1 << (v96 - v97));
    int16x8_t v101 = &v253 + v92;
    int v102 = *v101 - v100;
    uint64_t v103 = 32 * v92;
    int16x8_t v104 = &v252[32 * v92];
    if (v232) {
      int v102 = 0;
    }
    int v105 = v101[2] - v100;
    if (v233) {
      int v105 = 0;
    }
    *int16x8_t v104 = v102;
    v104[1] = v105;
    int v106 = v101[4] - v100;
    if (v235) {
      int v106 = 0;
    }
    int v107 = v101[6] - v100;
    if (v234) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v101[8] - v100;
    if (v236) {
      int v108 = 0;
    }
    int v109 = v101[10] - v100;
    if (v238) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    int v110 = v101[12] - v100;
    if (v237) {
      int v110 = 0;
    }
    int v111 = v101[14] - v100;
    if (v239) {
      int v111 = 0;
    }
    v104[6] = v110;
    v104[7] = v111;
    char v112 = v91;
    *(&v243 + v92) = v99;
    unint64_t v113 = *((void *)v98 + 1);
    *((_DWORD *)&v242 + v92) = v100;
    unint64_t v114 = v113 >> v99;
    int v115 = ~(-1 << v96);
    if (v114 <= 1) {
      unint64_t v116 = 1;
    }
    else {
      unint64_t v116 = v114;
    }
    uint64_t v117 = 2 * v271[v92];
    do
    {
      if (v117 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)&v252[v103] / v116;
        }
        else {
          LODWORD(v118) = 0;
        }
        int16x8_t v119 = (int *)v240 + 7 * v92 + v95;
        *int16x8_t v119 = v118;
        if (v114 >= 2)
        {
          unint64_t v120 = *(unsigned int *)&v252[v103];
          if (v120)
          {
            if (v120 / v116 * v116 == v120 && ((v120 / v116) & 1) != 0)
            {
              if (v100 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v101[v94], v123 = v249[v92 + 2], v122 != v123)
                  && ((a3 | 2) != 3 || v116 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  *int16x8_t v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v101[v94] == v115) {
          *int16x8_t v119 = ~(-1 << v99);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94) >= a4)
        {
          *int16x8_t v119 = 0;
        }
        ++v95;
      }
      v103 += 4;
      v94 += 2;
    }
    while (v94 != 16);
    char v91 = 1;
    uint64_t v92 = 1;
  }
  while ((v112 & 1) == 0);
  int16x8_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  if ((v229 | v230) == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v272;
    unsigned int v130 = v273;
    uint64_t v131 = v272 - 2;
    uint64_t v132 = v273 - 2;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= a5 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v253 + 2 * v127) >> 2;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v129 != 2 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0xA0)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 2;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_315:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v253 + 2 * v127 + 1) >> 2;
        if (v132 <= 0x100)
        {
LABEL_319:
          if (v130 != 2 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0xA0)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 2;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return v229 | v230;
      }
    }
  }
  unsigned int v148 = v269;
  unsigned int v147 = v270;
  BOOL v149 = v269 < 4;
  char v150 = v269 - 3;
  if (v269 <= 3) {
    unint64_t v151 = v269;
  }
  else {
    unint64_t v151 = 0;
  }
  if (v269 < 3) {
    char v150 = 0;
  }
  unint64_t v152 = ((unint64_t)(v150 & 7) << v126) | *v125;
  *int16x8_t v125 = v152;
  uint64_t v153 = v126 | 3;
  if (v147 <= 3) {
    unint64_t v154 = v147;
  }
  else {
    unint64_t v154 = 0;
  }
  if ((unint64_t)(v153 - v126 - 158) >= 0xFFFFFFFFFFFFFF5FLL)
  {
    if (v147 <= 3) {
      uint64_t v155 = 0;
    }
    else {
      uint64_t v155 = ((_BYTE)v147 + 5) & 7;
    }
    *int16x8_t v125 = (v155 << v153) | v152;
    uint64_t v153 = v126 | 6;
  }
  if (v148 <= 3)
  {
    unint64_t v178 = (2 * v149);
    if (v153 - v126 + v178 <= 0xA0)
    {
      uint64_t v156 = 0;
      uint64_t v179 = 0;
      unint64_t v180 = v178;
      do
      {
        unint64_t v181 = 64 - v153;
        if (64 - v153 >= v180) {
          unint64_t v181 = v180;
        }
        v125[v156] |= ((v151 >> v179) & ~(-1 << v181)) << v153;
        v179 += v181;
        unint64_t v182 = v181 + v153;
        v156 += v182 >> 6;
        uint64_t v153 = v182 & 0x3F;
        v180 -= v181;
      }
      while (v180);
    }
    else
    {
      uint64_t v156 = 0;
    }
    int v157 = v178 + 6;
    if (v147 > 3) {
      goto LABEL_455;
    }
LABEL_341:
    uint64_t v158 = 2 * (v147 < 4);
    if ((unint64_t)(v153 - v126 + (v156 << 6) + v158) <= 0xA0)
    {
      uint64_t v159 = 0;
      unint64_t v160 = 2 * (v147 < 4);
      do
      {
        unint64_t v161 = 64 - v153;
        if (64 - v153 >= v160) {
          unint64_t v161 = v160;
        }
        v125[v156] |= ((v154 >> v159) & ~(-1 << v161)) << v153;
        v159 += v161;
        unint64_t v162 = v161 + v153;
        v156 += v162 >> 6;
        uint64_t v153 = v162 & 0x3F;
        v160 -= v161;
      }
      while (v160);
    }
    v157 += v158;
    unsigned int v163 = v272;
    if (!v148) {
      goto LABEL_465;
    }
LABEL_456:
    unsigned int v183 = v245;
    if (v245 <= 0x100 && v245 && v153 - v126 + (v156 << 6) + (unint64_t)v245 <= 0xA0)
    {
      uint64_t v184 = 0;
      unint64_t v185 = v242 >> (v163 - v245);
      unint64_t v186 = v245;
      do
      {
        unint64_t v187 = 64 - v153;
        if (64 - v153 >= v186) {
          unint64_t v187 = v186;
        }
        v125[v156] |= ((v185 >> v184) & ~(-1 << v187)) << v153;
        v184 += v187;
        unint64_t v188 = v187 + v153;
        v156 += v188 >> 6;
        uint64_t v153 = v188 & 0x3F;
        v186 -= v187;
      }
      while (v186);
    }
    v157 += v183;
    unsigned int v189 = v273;
    if (!v147) {
      goto LABEL_521;
    }
LABEL_468:
    unsigned int v190 = v246;
    if (v246 <= 0x100 && v246 && v153 - v126 + (v156 << 6) + (unint64_t)v246 <= 0xA0)
    {
      uint64_t v191 = 0;
      unint64_t v192 = (HIDWORD(v242) >> (v189 - v246));
      unint64_t v193 = v246;
      do
      {
        unint64_t v194 = 64 - v153;
        if (64 - v153 >= v193) {
          unint64_t v194 = v193;
        }
        v125[v156] |= ((v192 >> v191) & ~(-1 << v194)) << v153;
        v191 += v194;
        unint64_t v195 = v194 + v153;
        v156 += v195 >> 6;
        uint64_t v153 = v195 & 0x3F;
        v193 -= v194;
      }
      while (v193);
    }
    v157 += v190;
  }
  else
  {
    uint64_t v156 = 0;
    int v157 = 6;
    if (v147 <= 3) {
      goto LABEL_341;
    }
LABEL_455:
    unsigned int v163 = v272;
    if (v148) {
      goto LABEL_456;
    }
LABEL_465:
    if (v163 == 2 || v163 >= 0x10) {
      goto LABEL_456;
    }
    unsigned int v189 = v273;
    if (v147) {
      goto LABEL_468;
    }
LABEL_521:
    if (v189 == 2 || v189 >= 0x10) {
      goto LABEL_468;
    }
  }
  unint64_t v196 = v243;
  if (v243)
  {
    if ((unint64_t)(v153 - v126 + (v156 << 6) + 3) <= 0xA0)
    {
      uint64_t v197 = 0;
      unint64_t v198 = v271[0];
      unint64_t v199 = 3;
      do
      {
        unint64_t v200 = 64 - v153;
        if (64 - v153 >= v199) {
          unint64_t v200 = v199;
        }
        v125[v156] |= ((v198 >> v197) & ~(-1 << v200)) << v153;
        v197 += v200;
        unint64_t v201 = v200 + v153;
        v156 += v201 >> 6;
        uint64_t v153 = v201 & 0x3F;
        v199 -= v200;
      }
      while (v199);
    }
    v157 += 3;
  }
  unint64_t v202 = v244;
  if (v244)
  {
    if ((unint64_t)(v153 - v126 + (v156 << 6) + 3) <= 0xA0)
    {
      uint64_t v203 = 0;
      unint64_t v204 = v271[1];
      unint64_t v205 = 3;
      do
      {
        unint64_t v206 = 64 - v153;
        if (64 - v153 >= v205) {
          unint64_t v206 = v205;
        }
        v125[v156] |= ((v204 >> v203) & ~(-1 << v206)) << v153;
        v203 += v206;
        unint64_t v207 = v206 + v153;
        v156 += v207 >> 6;
        uint64_t v153 = v207 & 0x3F;
        v205 -= v206;
      }
      while (v205);
    }
    v157 += 3;
  }
  unsigned int v208 = 160 - v157;
  unsigned int v209 = (160 - v157) / 7u;
  unint64_t v210 = v208 % 7;
  if ((v210 - 257) >= 0xFFFFFF00 && v153 - v126 + (v156 << 6) + v210 <= 0xA0)
  {
    do
    {
      unint64_t v211 = 64 - v153;
      if (64 - v153 >= v210) {
        unint64_t v211 = v210;
      }
      unint64_t v212 = v211 + v153;
      v156 += v212 >> 6;
      uint64_t v153 = v212 & 0x3F;
      v210 -= v211;
    }
    while (v210);
  }
  uint64_t v213 = 0;
  int v214 = v202 + v196;
  while (2)
  {
    if (v196 && v196 <= 0x100 && v153 - v126 + (v156 << 6) + v196 <= 0xA0)
    {
      uint64_t v215 = 0;
      unint64_t v216 = *((unsigned int *)v240 + v213);
      unint64_t v217 = v196;
      do
      {
        unint64_t v218 = 64 - v153;
        if (64 - v153 >= v217) {
          unint64_t v218 = v217;
        }
        v125[v156] |= ((v216 >> v215) & ~(-1 << v218)) << v153;
        v215 += v218;
        unint64_t v219 = v218 + v153;
        v156 += v219 >> 6;
        uint64_t v153 = v219 & 0x3F;
        v217 -= v218;
      }
      while (v217);
    }
    if (v202)
    {
      if (v202 <= 0x100 && v153 - v126 + (v156 << 6) + v202 <= 0xA0)
      {
        uint64_t v220 = 0;
        unint64_t v221 = *((unsigned int *)&v240[1] + v213 + 3);
        unint64_t v222 = v202;
        do
        {
          unint64_t v223 = 64 - v153;
          if (64 - v153 >= v222) {
            unint64_t v223 = v222;
          }
          v125[v156] |= ((v221 >> v220) & ~(-1 << v223)) << v153;
          v220 += v223;
          unint64_t v224 = v223 + v153;
          v156 += v224 >> 6;
          uint64_t v153 = v224 & 0x3F;
          v222 -= v223;
        }
        while (v222);
      }
      unint64_t v225 = v209 - v214;
      if (v209 != v214)
      {
LABEL_514:
        if (v225 <= 0x100 && v153 - v126 + (v156 << 6) + v225 <= 0xA0)
        {
          do
          {
            unint64_t v226 = 64 - v153;
            if (64 - v153 >= v225) {
              unint64_t v226 = v225;
            }
            unint64_t v227 = v226 + v153;
            v156 += v227 >> 6;
            uint64_t v153 = v227 & 0x3F;
            v225 -= v226;
          }
          while (v225);
        }
      }
    }
    else
    {
      unint64_t v225 = v209 - v196;
      if (v209 != v196) {
        goto LABEL_514;
      }
    }
    if (++v213 != 7) {
      continue;
    }
    return v229 | v230;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = ((a3 & 0xFFFFFFFD) == 1) << 11;
  uint64_t result = v6;
  do
  {
    if ((unint64_t)(result - v6 + (v4 << 6) - 151) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      __int16 v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 10;
      do
      {
        unint64_t v18 = 64 - result;
        if (64 - result >= v17) {
          unint64_t v18 = v17;
        }
        v15 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v18)) << v16;
        v16 += v18;
        unint64_t v19 = v18 + result;
        v4 += v19 >> 6;
        uint64_t result = v19 & 0x3F;
        v17 -= v18;
      }
      while (v17);
    }
    else
    {
      __int16 v15 = 0;
    }
    int v20 = 4 * (v15 & 0x3FF);
    if (a3 != 4)
    {
      BOOL v25 = v20 == 2048 && v7 == 1;
      if (!v25 && v20)
      {
        if (v20 == 4092) {
          int v20 = 4095;
        }
        else {
          v20 |= 2 - (v15 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 8 * v3) = v20 ^ v8;
    if ((unint64_t)(result - v6 + (v4 << 6) - 151) < 0xFFFFFFFFFFFFFF5FLL)
    {
      __int16 v10 = 0;
    }
    else
    {
      __int16 v10 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 10;
      do
      {
        unint64_t v23 = 64 - result;
        if (64 - result >= v22) {
          unint64_t v23 = v22;
        }
        v10 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v23)) << v21;
        v21 += v23;
        unint64_t v24 = v23 + result;
        v4 += v24 >> 6;
        uint64_t result = v24 & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    int v11 = 4 * (v10 & 0x3FF);
    int v12 = (2 - (v10 & 1)) | v11;
    if (v11 == 4092) {
      int v12 = 4095;
    }
    if (v11 == 2048 && v7 == 1 || v11 == 0) {
      int v12 = v11;
    }
    if (a3 == 4) {
      int v12 = v11;
    }
    *(_DWORD *)(a2 + 8 * v3++ + 4) = v12 ^ v8;
  }
  while (v3 != 8);
  return result;
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v193 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x9D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x9D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v188[0] = 12;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v178 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 159) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v178 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)1>::getDquadModeData(0, v12, v14, &v189);
  v192[0] = DquadModeData;
  v191[0] = 2;
  v188[1] = 12;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 159) >= 0xFFFFFFFFFFFFFF5FLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)1>::getDquadModeData(1, v11, v20, &v190);
  v192[1] = v24;
  v191[1] = 2;
  BOOL v26 = v24 < DquadModeData;
  unsigned int v27 = v24;
  int v28 = dword_242EA9688[10 * v24 + 6];
  int v185 = dword_242EA9688[10 * DquadModeData + 6];
  int v25 = v185;
  int v186 = v28;
  v187[0] = v185;
  v187[1] = v28;
  if (v192[v24 >= DquadModeData] == v192[v26])
  {
    int v29 = v185;
  }
  else
  {
    int v30 = *(_DWORD *)((unint64_t)v187 | (4 * v26));
    int v29 = v185;
    if (v30 >= 1)
    {
      *(_DWORD *)((unint64_t)&v185 | (4 * v26)) = 0;
      *(_DWORD *)((unint64_t)&v185 | (4 * (v24 >= DquadModeData))) += v30;
      int v29 = v185;
    }
  }
  uint64_t v31 = kDQuadParamTable;
  unsigned int v32 = &kDQuadParamTable[10 * DquadModeData];
  LODWORD(v33) = v32[324] + 3;
  int v34 = v32[325];
  unsigned int v35 = v34 + 3;
  int v36 = v29 - v25;
  if (v36 < 0)
  {
    if (kDQuadParamTable[10 * DquadModeData + 327] >= -v36) {
      goto LABEL_35;
    }
    unsigned int v35 = v34 + 2;
    if (kDQuadParamTable[10 * DquadModeData + 328]) {
      goto LABEL_35;
    }
    int v36 = -1;
  }
  else
  {
    if (!v36) {
      goto LABEL_35;
    }
    v35 += v36;
  }
  LODWORD(v33) = v36 + v33;
LABEL_35:
  if (v33 >= 0xC) {
    uint64_t v33 = 12;
  }
  else {
    uint64_t v33 = v33;
  }
  v184[0] = v33;
  if (v34) {
    LODWORD(v37) = 12;
  }
  else {
    LODWORD(v37) = 0;
  }
  if (v37 >= v35) {
    unint64_t v37 = v35;
  }
  else {
    unint64_t v37 = v37;
  }
  v183[0] = v37;
  unsigned int v38 = &kDQuadParamTable[10 * v24];
  LODWORD(v39) = v38[324] + 3;
  int v40 = v38[325];
  unsigned int v41 = v40 + 3;
  int v42 = v186 - v28;
  if (v42 < 0)
  {
    if (kDQuadParamTable[10 * v24 + 327] >= -v42) {
      goto LABEL_50;
    }
    unsigned int v41 = v40 + 2;
    if (kDQuadParamTable[10 * v24 + 328]) {
      goto LABEL_50;
    }
    int v42 = -1;
  }
  else
  {
    if (!v42) {
      goto LABEL_50;
    }
    v41 += v42;
  }
  LODWORD(v39) = v42 + v39;
LABEL_50:
  int v43 = v178 + v19;
  if (v39 >= 0xC) {
    uint64_t v39 = 12;
  }
  else {
    uint64_t v39 = v39;
  }
  v184[1] = v39;
  if (v40) {
    LODWORD(v44) = 12;
  }
  else {
    LODWORD(v44) = 0;
  }
  if (v44 >= v41) {
    unint64_t v44 = v41;
  }
  else {
    unint64_t v44 = v44;
  }
  v183[1] = v44;
  uint64_t v182 = 0;
  if (DquadModeData)
  {
    int v45 = 0;
    if (v33 && (unint64_t)(v10 - v6 + (v13 << 6) + v33) <= 0xA0)
    {
      int v45 = 0;
      uint64_t v46 = 0;
      unint64_t v47 = v33;
      do
      {
        unint64_t v48 = 64 - v10;
        if (64 - v10 >= v47) {
          unint64_t v48 = v47;
        }
        v45 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v48)) << v46;
        v46 += v48;
        v13 += (v48 + v10) >> 6;
        uint64_t v10 = (v48 + v10) & 0x3F;
        v47 -= v48;
      }
      while (v47);
    }
    LODWORD(v182) = v45 << (12 - v33);
    v43 += v33;
    if (v27)
    {
LABEL_67:
      int v49 = 0;
      if (v39 && (unint64_t)(v10 - v6 + (v13 << 6) + v39) <= 0xA0)
      {
        int v49 = 0;
        uint64_t v50 = 0;
        unint64_t v51 = v39;
        do
        {
          unint64_t v52 = 64 - v10;
          if (64 - v10 >= v51) {
            unint64_t v52 = v51;
          }
          v49 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v52)) << v50;
          v50 += v52;
          v13 += (v52 + v10) >> 6;
          uint64_t v10 = (v52 + v10) & 0x3F;
          v51 -= v52;
        }
        while (v51);
      }
      HIDWORD(v182) = v49 << (12 - v39);
      v43 += v39;
      uint64_t v181 = 0;
      if (!v37) {
        goto LABEL_84;
      }
      goto LABEL_77;
    }
  }
  else
  {
    LODWORD(v182) = v189;
    if (v24) {
      goto LABEL_67;
    }
  }
  HIDWORD(v182) = v190;
  uint64_t v181 = 0;
  if (v37)
  {
LABEL_77:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xA0)
    {
      int v53 = 0;
      uint64_t v54 = 0;
      unint64_t v55 = 3;
      do
      {
        unint64_t v56 = 64 - v10;
        if (64 - v10 >= v55) {
          unint64_t v56 = v55;
        }
        v53 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v56)) << v54;
        v54 += v56;
        v13 += (v56 + v10) >> 6;
        uint64_t v10 = (v56 + v10) & 0x3F;
        v55 -= v56;
      }
      while (v55);
    }
    else
    {
      int v53 = 0;
    }
    LODWORD(v181) = v53;
    v43 += 3;
  }
LABEL_84:
  if (v44)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0xA0)
    {
      int v57 = 0;
      uint64_t v58 = 0;
      unint64_t v59 = 3;
      do
      {
        unint64_t v60 = 64 - v10;
        if (64 - v10 >= v59) {
          unint64_t v60 = v59;
        }
        v57 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v60)) << v58;
        v58 += v60;
        v13 += (v60 + v10) >> 6;
        uint64_t v10 = (v60 + v10) & 0x3F;
        v59 -= v60;
      }
      while (v59);
    }
    else
    {
      int v57 = 0;
    }
    HIDWORD(v181) = v57;
    v43 += 3;
  }
  uint64_t v61 = 0;
  unsigned int v62 = a3 & 0xFFFFFFFD;
  unsigned int v63 = 160 - v43;
  unsigned int v64 = (160 - v43) / 7u;
  unint64_t v65 = (v10 | (v13 << 6)) + v63 % 7;
  uint64_t v180 = 0;
  memset(v179, 0, sizeof(v179));
  do
  {
    unint64_t v67 = v65 >> 6;
    int64_t result = v65 & 0x3F;
    if (v37)
    {
      if (result - v6 + (v65 & 0xFFFFFFFFFFFFFFC0) + v37 <= 0xA0)
      {
        int v69 = 0;
        uint64_t v70 = 0;
        unint64_t v71 = v37;
        do
        {
          unint64_t v72 = 64 - result;
          if (64 - result >= v71) {
            unint64_t v72 = v71;
          }
          v69 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v72)) << v70;
          v70 += v72;
          unint64_t v73 = v72 + result;
          v67 += v73 >> 6;
          int64_t result = v73 & 0x3F;
          v71 -= v72;
        }
        while (v71);
      }
      else
      {
        int v69 = 0;
      }
      *((_DWORD *)v179 + v61) = v69;
    }
    if (v44)
    {
      if (result - v6 + (v67 << 6) + v44 <= 0xA0)
      {
        int v74 = 0;
        uint64_t v75 = 0;
        unint64_t v76 = v44;
        do
        {
          unint64_t v77 = 64 - result;
          if (64 - result >= v76) {
            unint64_t v77 = v76;
          }
          v74 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v77)) << v75;
          v75 += v77;
          unint64_t v78 = v77 + result;
          v67 += v78 >> 6;
          int64_t result = v78 & 0x3F;
          v76 -= v77;
        }
        while (v76);
      }
      else
      {
        int v74 = 0;
      }
      *((_DWORD *)&v179[1] + v61 + 3) = v74;
      int v66 = v44 + v37;
    }
    else
    {
      int v66 = v37;
    }
    unint64_t v65 = (result | (v67 << 6)) + v64 - v66;
    ++v61;
  }
  while (v61 != 7);
  char v79 = 0;
  uint64_t v80 = 0;
  do
  {
    char v85 = v79;
    unint64_t v86 = *(void *)&v31[160 * v191[v80] + 2 + 10 * v192[v80]];
    int v87 = v183[v80];
    if (v86 >> v87 <= 1) {
      unint64_t v88 = 1;
    }
    else {
      unint64_t v88 = v86 >> v87;
    }
    int v89 = v188[v80];
    unint64_t v90 = v88 >> 1;
    if (v88 >> 1 >= (unint64_t)(1 << (v89 - v184[v80])) >> 1) {
      unint64_t v91 = (unint64_t)(1 << (v89 - v184[v80])) >> 1;
    }
    else {
      unint64_t v91 = v88 >> 1;
    }
    unint64_t v92 = (1 << (v89 - 1));
    unint64_t v93 = v183[v80 - 2];
    unint64_t v94 = v92 - v93;
    unint64_t v95 = 1 << v89;
    int v96 = (1 << v89) - 1;
    if (v93) {
      unint64_t v97 = v91;
    }
    else {
      unint64_t v97 = 0;
    }
    BOOL v98 = v93 == v92;
    BOOL v99 = v89 == 16;
    if (v89 == 16) {
      unint64_t v100 = 31744;
    }
    else {
      unint64_t v100 = 2139095040;
    }
    if (v89 == 16) {
      unint64_t v101 = 64512;
    }
    else {
      unint64_t v101 = 4286578688;
    }
    unint64_t v102 = 2143289344;
    if (v99) {
      unint64_t v102 = 32256;
    }
    unint64_t v103 = 4290772992;
    if (v99) {
      unint64_t v103 = 65024;
    }
    unint64_t v104 = (v101 - 1);
    if (v87)
    {
      int64_t result = (int64_t)v31;
      unint64_t v105 = v86 + v93;
      uint64_t v106 = ~(-1 << v87);
      int v107 = *((_DWORD *)&v181 + v80);
      unint64_t v108 = v94 / v88;
      if (!v107)
      {
        uint64_t v116 = 0;
        unint64_t v111 = v97;
        BOOL v110 = v93 == v92;
        goto LABEL_177;
      }
      uint64_t v109 = *((unsigned int *)v179 + 7 * v80);
      BOOL v110 = v108 == v109;
      if (v93 | v109)
      {
        if (v105 >= v95 && v109 == v106)
        {
          uint64_t v116 = 1;
          unint64_t v111 = v95 - 1;
          goto LABEL_177;
        }
        unint64_t v111 = v90 + v88 * v109;
      }
      else
      {
        unint64_t v111 = 0;
      }
      uint64_t v116 = 1;
LABEL_177:
      unint64_t v117 = v111 + v93;
      unint64_t v118 = v117;
      if (a3 == 4)
      {
        BOOL v119 = v117 < v100 || v117 >= v102;
        unint64_t v118 = (v100 - 1);
        if (v119)
        {
          BOOL v120 = v117 < v102 || v117 >= v92;
          unint64_t v118 = v92;
          if (v120)
          {
            if (v117 < v103 && v117 >= v101) {
              unint64_t v118 = (v101 - 1);
            }
            else {
              unint64_t v118 = v117;
            }
          }
        }
      }
      if (v118 >= v95) {
        int v122 = v96;
      }
      else {
        int v122 = v118;
      }
      if (v110) {
        int v123 = 0;
      }
      else {
        int v123 = v122 ^ v92;
      }
      if (v62 != 1) {
        int v123 = v122;
      }
      *(_DWORD *)(a2 + 4 * v80) = v123;
      if (v107 == 1)
      {
        unint64_t v124 = v97;
        BOOL v125 = v93 == v92;
      }
      else
      {
        uint64_t v126 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v125 = v108 == v126;
        if (v93 | v126)
        {
          if (v105 < v95 || (unint64_t v124 = v95 - 1, v126 != v106)) {
            unint64_t v124 = v90 + v88 * v126;
          }
        }
        else
        {
          unint64_t v124 = 0;
        }
        ++v116;
      }
      unint64_t v127 = v124 + v93;
      unint64_t v128 = v127;
      if (a3 == 4)
      {
        BOOL v129 = v127 < v100 || v127 >= v102;
        unint64_t v128 = (v100 - 1);
        if (v129)
        {
          BOOL v130 = v127 < v102 || v127 >= v92;
          unint64_t v128 = v92;
          if (v130)
          {
            if (v127 < v103 && v127 >= v101) {
              unint64_t v128 = (v101 - 1);
            }
            else {
              unint64_t v128 = v127;
            }
          }
        }
      }
      if (v128 >= v95) {
        int v132 = v96;
      }
      else {
        int v132 = v128;
      }
      if (v125) {
        int v133 = 0;
      }
      else {
        int v133 = v132 ^ v92;
      }
      if (v62 != 1) {
        int v133 = v132;
      }
      *(_DWORD *)(a2 + 4 * v80 + 8) = v133;
      if (v107 == 2)
      {
        unint64_t v134 = v97;
        BOOL v135 = v93 == v92;
      }
      else
      {
        uint64_t v136 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v135 = v108 == v136;
        if (v93 | v136)
        {
          if (v105 < v95 || (unint64_t v134 = v95 - 1, v136 != v106)) {
            unint64_t v134 = v90 + v88 * v136;
          }
        }
        else
        {
          unint64_t v134 = 0;
        }
        ++v116;
      }
      unint64_t v137 = v134 + v93;
      unint64_t v138 = v137;
      if (a3 == 4)
      {
        if (v137 < v100 || (unint64_t v138 = (v100 - 1), v137 >= v102))
        {
          if (v137 < v102 || (unint64_t v138 = v92, v137 >= v92))
          {
            if (v137 < v103 && v137 >= v101) {
              unint64_t v138 = (v101 - 1);
            }
            else {
              unint64_t v138 = v137;
            }
          }
        }
      }
      if (v138 >= v95) {
        int v140 = v96;
      }
      else {
        int v140 = v138;
      }
      if (v135) {
        int v141 = 0;
      }
      else {
        int v141 = v140 ^ v92;
      }
      if (v62 != 1) {
        int v141 = v140;
      }
      *(_DWORD *)(a2 + 4 * v80 + 16) = v141;
      if (v107 == 3)
      {
        unint64_t v142 = v97;
        BOOL v143 = v93 == v92;
      }
      else
      {
        uint64_t v144 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v143 = v108 == v144;
        if (v93 | v144)
        {
          if (v105 < v95 || (unint64_t v142 = v95 - 1, v144 != v106)) {
            unint64_t v142 = v90 + v88 * v144;
          }
        }
        else
        {
          unint64_t v142 = 0;
        }
        ++v116;
      }
      unint64_t v145 = v142 + v93;
      unint64_t v146 = v145;
      if (a3 == 4)
      {
        if (v145 < v100 || (unint64_t v146 = (v100 - 1), v145 >= v102))
        {
          if (v145 < v102 || (unint64_t v146 = v92, v145 >= v92))
          {
            if (v145 < v103 && v145 >= v101) {
              unint64_t v146 = (v101 - 1);
            }
            else {
              unint64_t v146 = v145;
            }
          }
        }
      }
      if (v146 >= v95) {
        int v148 = v96;
      }
      else {
        int v148 = v146;
      }
      if (v143) {
        int v149 = 0;
      }
      else {
        int v149 = v148 ^ v92;
      }
      if (v62 != 1) {
        int v149 = v148;
      }
      *(_DWORD *)(a2 + 4 * v80 + 24) = v149;
      if (v107 == 4)
      {
        unint64_t v150 = v97;
        BOOL v151 = v93 == v92;
      }
      else
      {
        uint64_t v152 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v151 = v108 == v152;
        if (v93 | v152)
        {
          if (v105 < v95 || (unint64_t v150 = v95 - 1, v152 != v106)) {
            unint64_t v150 = v90 + v88 * v152;
          }
        }
        else
        {
          unint64_t v150 = 0;
        }
        ++v116;
      }
      unint64_t v153 = v150 + v93;
      unint64_t v154 = v153;
      if (a3 == 4)
      {
        if (v153 < v100 || (unint64_t v154 = (v100 - 1), v153 >= v102))
        {
          if (v153 < v102 || (unint64_t v154 = v92, v153 >= v92))
          {
            if (v153 < v103 && v153 >= v101) {
              unint64_t v154 = (v101 - 1);
            }
            else {
              unint64_t v154 = v153;
            }
          }
        }
      }
      if (v154 >= v95) {
        int v156 = v96;
      }
      else {
        int v156 = v154;
      }
      if (v151) {
        int v157 = 0;
      }
      else {
        int v157 = v156 ^ v92;
      }
      if (v62 != 1) {
        int v157 = v156;
      }
      *(_DWORD *)(a2 + 4 * v80 + 32) = v157;
      if (v107 == 5)
      {
        unint64_t v158 = v97;
        BOOL v159 = v93 == v92;
      }
      else
      {
        uint64_t v160 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v159 = v108 == v160;
        if (v93 | v160)
        {
          if (v105 < v95 || (unint64_t v158 = v95 - 1, v160 != v106)) {
            unint64_t v158 = v90 + v88 * v160;
          }
        }
        else
        {
          unint64_t v158 = 0;
        }
        ++v116;
      }
      unint64_t v161 = v158 + v93;
      unint64_t v162 = v161;
      if (a3 == 4)
      {
        if (v161 < v100 || (unint64_t v162 = (v100 - 1), v161 >= v102))
        {
          if (v161 < v102 || (unint64_t v162 = v92, v161 >= v92))
          {
            if (v161 < v103 && v161 >= v101) {
              unint64_t v162 = (v101 - 1);
            }
            else {
              unint64_t v162 = v161;
            }
          }
        }
      }
      if (v162 >= v95) {
        int v164 = v96;
      }
      else {
        int v164 = v162;
      }
      if (v159) {
        int v165 = 0;
      }
      else {
        int v165 = v164 ^ v92;
      }
      if (v62 != 1) {
        int v165 = v164;
      }
      *(_DWORD *)(a2 + 4 * v80 + 40) = v165;
      if (v107 == 6)
      {
        unint64_t v166 = v97;
        BOOL v167 = v93 == v92;
      }
      else
      {
        uint64_t v168 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v167 = v108 == v168;
        if (v93 | v168)
        {
          if (v105 < v95 || (unint64_t v166 = v95 - 1, v168 != v106)) {
            unint64_t v166 = v90 + v88 * v168;
          }
        }
        else
        {
          unint64_t v166 = 0;
        }
        ++v116;
      }
      unint64_t v169 = v166 + v93;
      unint64_t v170 = v169;
      if (a3 == 4)
      {
        if (v169 < v100 || (unint64_t v170 = (v100 - 1), v169 >= v102))
        {
          if (v169 < v102 || (unint64_t v170 = v92, v169 >= v92))
          {
            if (v169 < v103 && v169 >= v101) {
              unint64_t v170 = (v101 - 1);
            }
            else {
              unint64_t v170 = v169;
            }
          }
        }
      }
      if (v170 >= v95) {
        int v172 = v96;
      }
      else {
        int v172 = v170;
      }
      if (v167) {
        int v173 = 0;
      }
      else {
        int v173 = v172 ^ v92;
      }
      if (v62 != 1) {
        int v173 = v172;
      }
      *(_DWORD *)(a2 + 4 * v80 + 48) = v173;
      if (v107 != 7)
      {
        uint64_t v174 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v98 = v108 == v174;
        if (v93 | v174)
        {
          if (v105 >= v95 && v174 == v106) {
            unint64_t v97 = v95 - 1;
          }
          else {
            unint64_t v97 = v90 + v88 * v174;
          }
        }
        else
        {
          unint64_t v97 = 0;
        }
      }
      unint64_t v175 = v97 + v93;
      unint64_t v82 = v175;
      if (a3 == 4)
      {
        if (v175 < v100 || (unint64_t v82 = (v100 - 1), v175 >= v102))
        {
          if (v175 < v102 || (unint64_t v82 = v92, v175 >= v92))
          {
            if (v175 < v103 && v175 >= v101) {
              unint64_t v82 = (v101 - 1);
            }
            else {
              unint64_t v82 = v175;
            }
          }
        }
      }
      if (v82 >= v95) {
        int v83 = v96;
      }
      else {
        int v83 = v82;
      }
      int v84 = v83 ^ v92;
      if (v98) {
        int v84 = 0;
      }
      if (v62 == 1) {
        int v83 = v84;
      }
      uint64_t v31 = (_DWORD *)result;
      goto LABEL_126;
    }
    BOOL v113 = v102 <= v93 && v93 < v92;
    BOOL v115 = v93 >= v101 && v103 > v93;
    if (a3 == 4)
    {
      if (v93 < v100 || v102 <= v93)
      {
        if (v113)
        {
          if (v95 <= v92) {
            int v83 = v96;
          }
          else {
            int v83 = v92;
          }
        }
        else
        {
          if (v115) {
            unint64_t v93 = v104;
          }
          if (v93 >= v95) {
            int v83 = v96;
          }
          else {
            int v83 = v93;
          }
        }
      }
      else if (v95 <= (v100 - 1))
      {
        int v83 = v96;
      }
      else
      {
        int v83 = v100 - 1;
      }
    }
    else if (v95 <= v93)
    {
      int v83 = v96;
    }
    else
    {
      int v83 = v183[v80 - 2];
    }
    int v176 = v83 ^ v92;
    if (v88 > v94) {
      int v176 = 0;
    }
    if (v62 == 1) {
      int v83 = v176;
    }
    int16x8_t v177 = (_DWORD *)(a2 + 4 * v80);
    *int16x8_t v177 = v83;
    v177[2] = v83;
    v177[4] = v83;
    v177[6] = v83;
    v177[8] = v83;
    v177[10] = v83;
    v177[12] = v83;
LABEL_126:
    *(_DWORD *)(a2 + 4 * v80 + 56) = v83;
    char v79 = 1;
    uint64_t v80 = 1;
  }
  while ((v85 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int32x4_t a6, int32x4_t a7)
{
  uint64_t v446 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v12 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    uint64_t v13 = (_OWORD *)(a1 + a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)(a1 + 2 * a2);
    *char v14 = 0u;
    v14[1] = 0u;
    uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
LABEL_6:
    _OWORD *v15 = v12;
    v15[1] = v12;
    return result;
  }
  char v9 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v431, a5);
    }
    int v401 = HIDWORD(v431);
    __int16 v402 = v431;
    int v403 = v433;
    __int16 v404 = v432;
    int v417 = v435;
    __int16 v418 = v434;
    int v419 = v437;
    __int16 v420 = v436;
    int v397 = v439;
    __int16 v398 = v438;
    int v399 = v441;
    __int16 v400 = v440;
    int v415 = v443;
    __int16 v416 = v442;
    uint64_t v20 = a3 + 20;
    __int16 v413 = v444;
    int v414 = v445;
    if ((v9 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v431, a5);
    }
    int v409 = HIDWORD(v431);
    __int16 v410 = v431;
    int v411 = v433;
    __int16 v412 = v432;
    int v425 = v435;
    __int16 v426 = v434;
    int v427 = v437;
    __int16 v428 = v436;
    int v405 = v439;
    __int16 v406 = v438;
    int v407 = v441;
    __int16 v408 = v440;
    int v423 = v443;
    __int16 v424 = v442;
    uint64_t v21 = a3 + 40;
    __int16 v421 = v444;
    int v422 = v445;
    if ((v9 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v431, a5);
    }
    __int16 v23 = v431;
    int v22 = HIDWORD(v431);
    __int16 v24 = v432;
    int v393 = v435;
    __int16 v394 = v434;
    __int16 v25 = v438;
    int v395 = v437;
    __int16 v396 = v436;
    int v26 = v439;
    __int16 v27 = v440;
    int v28 = v441;
    int v391 = v443;
    __int16 v392 = v442;
    uint64_t v29 = a3 + 60;
    __int16 v30 = v444;
    int v389 = v433;
    int v390 = v445;
    if ((v9 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v431, a5);
    }
    *(_DWORD *)a1 = (16 * (v402 & 0xFFF)) | (v401 << 20);
    *(_DWORD *)(a1 + 4) = (16 * (v404 & 0xFFF)) | (v403 << 20);
    *(_DWORD *)(a1 + 8) = (16 * (v398 & 0xFFF)) | (v397 << 20);
    *(_DWORD *)(a1 + 12) = (16 * (v400 & 0xFFF)) | (v399 << 20);
    *(_DWORD *)(a1 + 16) = (16 * (v23 & 0xFFF)) | (v22 << 20);
    *(_DWORD *)(a1 + 20) = (16 * (v24 & 0xFFF)) | (v389 << 20);
    *(_DWORD *)(a1 + 24) = (16 * (v25 & 0xFFF)) | (v26 << 20);
    *(_DWORD *)(a1 + 28) = (16 * (v27 & 0xFFF)) | (v28 << 20);
    uint64_t v31 = (int *)(a1 + a2);
    *uint64_t v31 = (16 * (v418 & 0xFFF)) | (v417 << 20);
    v31[1] = (16 * (v420 & 0xFFF)) | (v419 << 20);
    v31[2] = (16 * (v416 & 0xFFF)) | (v415 << 20);
    v31[3] = (16 * (v413 & 0xFFF)) | (v414 << 20);
    v31[4] = (16 * (v394 & 0xFFF)) | (v393 << 20);
    v31[5] = (16 * (v396 & 0xFFF)) | (v395 << 20);
    v31[6] = (16 * (v392 & 0xFFF)) | (v391 << 20);
    v31[7] = (16 * (v30 & 0xFFF)) | (v390 << 20);
    unsigned int v32 = (int *)(a1 + a2 + a2);
    *unsigned int v32 = (16 * (v410 & 0xFFF)) | (v409 << 20);
    v32[1] = (16 * (v412 & 0xFFF)) | (v411 << 20);
    v32[2] = (16 * (v406 & 0xFFF)) | (v405 << 20);
    v32[3] = (16 * (v408 & 0xFFF)) | (v407 << 20);
    int v33 = (16 * (v432 & 0xFFF)) | (v433 << 20);
    v32[4] = (16 * (v431 & 0xFFF)) | (HIDWORD(v431) << 20);
    v32[5] = v33;
    int v34 = (16 * (v440 & 0xFFF)) | (v441 << 20);
    v32[6] = (16 * (v438 & 0xFFF)) | (v439 << 20);
    v32[7] = v34;
    unsigned int v35 = (int *)((char *)v32 + a2);
    int *v35 = (16 * (v426 & 0xFFF)) | (v425 << 20);
    v35[1] = (16 * (v428 & 0xFFF)) | (v427 << 20);
    v35[2] = (16 * (v424 & 0xFFF)) | (v423 << 20);
    v35[3] = (16 * (v421 & 0xFFF)) | (v422 << 20);
    LODWORD(v32) = (16 * (v436 & 0xFFF)) | (v437 << 20);
    v35[4] = (16 * (v434 & 0xFFF)) | (v435 << 20);
    v35[5] = (int)v32;
    LODWORD(v32) = (16 * (v444 & 0xFFF)) | (v445 << 20);
    v35[6] = (16 * (v442 & 0xFFF)) | (v443 << 20);
    v35[7] = (int)v32;
    return 80;
  }
  switch(a4)
  {
    case 0x7Fu:
      int64x2_t v36 = *(int64x2_t *)a3;
      int64x2_t v37 = *(int64x2_t *)(a3 + 16);
      int64x2_t v38 = *(int64x2_t *)(a3 + 32);
      int64x2_t v39 = *(int64x2_t *)(a3 + 48);
      int64x2_t v40 = *(int64x2_t *)(a3 + 64);
      int64x2_t v41 = *(int64x2_t *)(a3 + 80);
      int64x2_t v42 = *(int64x2_t *)(a3 + 96);
      int64x2_t v43 = *(int64x2_t *)(a3 + 112);
      unint64_t v44 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v37);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v40, v41);
      int v45 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v44 = vzip2q_s64(v36, v37);
      v44[1] = vzip2q_s64(v40, v41);
      *int v45 = vzip1q_s64(v38, v39);
      v45[1] = vzip1q_s64(v42, v43);
      uint64_t v46 = (int64x2_t *)((char *)v45 + a2);
      *uint64_t v46 = vzip2q_s64(v38, v39);
      v46[1] = vzip2q_s64(v42, v43);
      return 128;
    case 0x5Fu:
      v47.i64[0] = 0xC000C000C000CLL;
      v47.i64[1] = 0xC000C000C000CLL;
      int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v47, v47));
      v47.i64[0] = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
      v49.i64[0] = v47.u32[0];
      v49.i64[1] = v47.u32[1];
      int64x2_t v50 = v49;
      unint64_t v51 = vaddvq_s64(v49);
      int64x2_t v52 = 0uLL;
      if (v51 <= 0x80)
      {
        char v85 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v86 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
        v87.i64[0] = v86.u32[0];
        v87.i64[1] = v86.u32[1];
        int64x2_t v88 = v87;
        int64x2_t v89 = vzip1q_s64((int64x2_t)0, v50);
        unint64_t v90 = 8 * (a3 & 7);
        unint64_t v91 = v51 + v90;
        int64x2_t v92 = vaddq_s64(v89, vdupq_n_s64(v90));
        int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v92)));
        if (v51 + v90 > 0x80) {
          int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v92))), v93);
        }
        uint64x2_t v94 = (uint64x2_t)vnegq_s64(v88);
        int64x2_t v95 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v94);
        *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
        *(int32x2_t *)v95.i8 = vmovn_s64(v95);
        unint64_t v96 = v91 & 0x3F;
        unint64_t v97 = (int64x2_t *)((char *)v85 + 8 * (v91 >> 6));
        int8x16_t v98 = (int8x16_t)vaddq_s64(v89, vdupq_n_s64(v96));
        unint64_t v99 = v51 + v91;
        int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v97, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v98)));
        if (v51 + v96 >= 0x81)
        {
          int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v97[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v98)));
          int8x16_t v100 = vorrq_s8(v98, v100);
        }
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v100, v94);
        *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v100);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        unint64_t v102 = v99 & 0x3F;
        unint64_t v103 = (int64x2_t *)((char *)v85 + 8 * (v99 >> 6));
        int64x2_t v104 = vaddq_s64(v89, vdupq_n_s64(v102));
        unint64_t v105 = v51 + v99;
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v103, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
        if (v51 + v102 > 0x80) {
          int8x16_t v106 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v103[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v106);
        }
        int16x8_t v107 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v95);
        int16x8_t v108 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v101);
        int64x2_t v109 = (int64x2_t)vshlq_u64((uint64x2_t)v106, v94);
        *(int32x2_t *)v95.i8 = vmovn_s64((int64x2_t)v106);
        *(int32x2_t *)v109.i8 = vmovn_s64(v109);
        int16x8_t v110 = (int16x8_t)vzip1q_s32((int32x4_t)v95, (int32x4_t)v109);
        unint64_t v111 = v105 & 0x3F;
        char v112 = (int64x2_t *)((char *)v85 + 8 * (v105 >> 6));
        int64x2_t v113 = vaddq_s64(v89, vdupq_n_s64(v111));
        int8x16_t v114 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113));
        unint64_t v115 = v51 + v105;
        int64x2_t v116 = vsubq_s64(vdupq_n_s64(0x40uLL), v113);
        int8x16_t v117 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)v116);
        int8x16_t v118 = vorrq_s8(v117, v114);
        if (v51 + v111 >= 0x81)
        {
          int64x2_t v119 = v112[1];
          uint64x2_t v120 = (uint64x2_t)vdupq_lane_s64(v119.i64[0], 0);
          int8x16_t v117 = (int8x16_t)vdupq_laneq_s64(v119, 1);
          int8x16_t v114 = (int8x16_t)vshlq_u64(v120, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113));
          int64x2_t v116 = vdupq_n_s64(0xC0uLL);
          int8x16_t v118 = vorrq_s8(vorrq_s8(v114, (int8x16_t)vshlq_u64((uint64x2_t)v117, (uint64x2_t)vsubq_s64(v116, v113))), v118);
        }
        v121.i64[0] = 0x1000100010001;
        v121.i64[1] = 0x1000100010001;
        *(int16x4_t *)v117.i8 = vmovn_s32((int32x4_t)v107);
        *(int16x4_t *)v107.i8 = vshrn_n_s32((int32x4_t)v107, 0xCuLL);
        *(int16x4_t *)v114.i8 = vmovn_s32((int32x4_t)v108);
        *(int16x4_t *)v108.i8 = vshrn_n_s32((int32x4_t)v108, 0xCuLL);
        *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v110);
        *(int16x4_t *)v110.i8 = vshrn_n_s32((int32x4_t)v110, 0xCuLL);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v118, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v118);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v122);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xCuLL);
        unint64_t v124 = v115 & 0x3F;
        BOOL v125 = (int64x2_t *)((char *)v85 + 8 * (v115 >> 6));
        int64x2_t v126 = vaddq_s64(v89, vdupq_n_s64(v124));
        unint64_t v127 = v51 + v115;
        int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v125, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
        if (v51 + v124 > 0x80) {
          int8x16_t v128 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v125[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), v128);
        }
        int16x8_t v129 = vshlq_n_s16(v121, 0xCuLL);
        v130.i64[0] = -1;
        v130.i64[1] = -1;
        int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v128, v94);
        *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
        *(int32x2_t *)v131.i8 = vmovn_s64(v131);
        int16x8_t v132 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v131);
        *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v132);
        *(int16x4_t *)v132.i8 = vshrn_n_s32((int32x4_t)v132, 0xCuLL);
        int v133 = (int64x2_t *)((char *)v85 + 8 * (v127 >> 6));
        int64x2_t v134 = vaddq_s64(v89, vdupq_n_s64(v127 & 0x3F));
        unint64_t v135 = v51 + v127;
        int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
        if (v51 + (v127 & 0x3F) >= 0x81) {
          int8x16_t v136 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v134))), v136);
        }
        int8x16_t v137 = (int8x16_t)vaddq_s16(v129, v130);
        int8x16_t v138 = (int8x16_t)vzip1q_s16((int16x8_t)v117, v107);
        int8x16_t v139 = (int8x16_t)vzip1q_s16((int16x8_t)v114, v108);
        int8x16_t v140 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v110);
        int8x16_t v141 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v123);
        int8x16_t v142 = (int8x16_t)vzip1q_s16((int16x8_t)v128, v132);
        int64x2_t v143 = (int64x2_t)vshlq_u64((uint64x2_t)v136, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v136);
        *(int32x2_t *)v143.i8 = vmovn_s64(v143);
        int16x8_t v144 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v143);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v144);
        *(int16x4_t *)v144.i8 = vshrn_n_s32((int32x4_t)v144, 0xCuLL);
        int8x16_t v145 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v144);
        unint64_t v146 = v51 + v135;
        unint64_t v147 = v135 & 0x3F;
        int64x2_t v148 = vaddq_s64(v89, vdupq_n_s64(v147));
        int v149 = (int64x2_t *)((char *)v85 + 8 * (v135 >> 6));
        int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
        if (v51 + v147 > 0x80) {
          int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v150);
        }
        int16x8_t v151 = (int16x8_t)vandq_s8(v138, v137);
        int16x8_t v152 = (int16x8_t)vandq_s8(v139, v137);
        int16x8_t v153 = (int16x8_t)vandq_s8(v140, v137);
        int16x8_t v154 = (int16x8_t)vandq_s8(v141, v137);
        int16x8_t v155 = (int16x8_t)vandq_s8(v142, v137);
        int16x8_t v156 = (int16x8_t)vandq_s8(v145, v137);
        int64x2_t v157 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v94);
        *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
        *(int32x2_t *)v157.i8 = vmovn_s64(v157);
        int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v150, (int32x4_t)v157);
        *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v158);
        *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xCuLL);
        BOOL v159 = (int64x2_t *)((char *)v85 + 8 * (v146 >> 6));
        int64x2_t v160 = vaddq_s64(v89, vdupq_n_s64(v146 & 0x3F));
        int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v150, v158), v137);
        int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v160)));
        if (v51 + (v146 & 0x3F) >= 0x81) {
          int8x16_t v162 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v159[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v160))), v162);
        }
        int64x2_t v54 = (int64x2_t)vshlq_n_s16(v151, 4uLL);
        int64x2_t v55 = (int64x2_t)vshlq_n_s16(v152, 4uLL);
        int64x2_t v57 = (int64x2_t)vshlq_n_s16(v153, 4uLL);
        int64x2_t v56 = (int64x2_t)vshlq_n_s16(v154, 4uLL);
        int64x2_t v52 = (int64x2_t)vshlq_n_s16(v155, 4uLL);
        int64x2_t v53 = (int64x2_t)vshlq_n_s16(v156, 4uLL);
        int64x2_t v163 = (int64x2_t)vshlq_u64((uint64x2_t)v162, v94);
        *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v162);
        *(int32x2_t *)v163.i8 = vmovn_s64(v163);
        int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v154, (int32x4_t)v163);
        *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v164);
        *(int16x4_t *)v164.i8 = vshrn_n_s32((int32x4_t)v164, 0xCuLL);
        int16x8_t v165 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v154, v164), v137);
        int64x2_t v59 = (int64x2_t)vshlq_n_s16(v161, 4uLL);
        int64x2_t v58 = (int64x2_t)vshlq_n_s16(v165, 4uLL);
      }
      else
      {
        int64x2_t v53 = 0uLL;
        int64x2_t v54 = 0uLL;
        int64x2_t v55 = 0uLL;
        int64x2_t v56 = 0uLL;
        int64x2_t v57 = 0uLL;
        int64x2_t v58 = 0uLL;
        int64x2_t v59 = 0uLL;
      }
      unint64_t v166 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v54, v55);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v52, v53);
      BOOL v167 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v166 = vzip2q_s64(v54, v55);
      v166[1] = vzip2q_s64(v52, v53);
      *BOOL v167 = vzip1q_s64(v57, v56);
      v167[1] = vzip1q_s64(v59, v58);
      uint64_t v168 = (int64x2_t *)((char *)v167 + a2);
      *uint64_t v168 = vzip2q_s64(v57, v56);
      v168[1] = vzip2q_s64(v59, v58);
      return 96;
    case 2u:
      int32x4_t v16 = vdupq_n_s32((*(_DWORD *)a3 << 8) & 0xFFF00000 | (16 * (*(_DWORD *)a3 & 0xFFF)));
      *(int32x4_t *)a1 = v16;
      *(int32x4_t *)(a1 + 16) = v16;
      unint64_t v17 = (int32x4_t *)(a1 + a2);
      *unint64_t v17 = v16;
      v17[1] = v16;
      unint64_t v18 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v18 = v16;
      v18[1] = v16;
      int v19 = (int32x4_t *)(a1 + a2 + 2 * a2);
      *int v19 = v16;
      v19[1] = v16;
      return 3;
    default:
      unint64_t v60 = 8 * (a3 & 7);
      unint64_t v61 = a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = v60 + 18;
      uint64_t v63 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v60;
      if (v60 >= 0x2F) {
        v63 |= *(void *)(v61 + 8) << (-8 * (a3 & 7u));
      }
      a6.i32[0] = v63;
      a6.i32[1] = (unsigned __int16)v63 >> 5;
      *(int8x8_t *)a6.i8 = vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0x1F0000001FLL);
      *(int16x4_t *)a6.i8 = vmovn_s32(a6);
      a7.i32[0] = (unsigned __int16)v63 >> 10;
      a7.i32[1] = v63 >> 14;
      *(int32x2_t *)a7.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a7.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
      *(int16x4_t *)a7.i8 = vmovn_s32(a7);
      unint64_t v64 = v60 + 42;
      unint64_t v65 = v62 >> 6;
      unint64_t v66 = v62 & 0x3A;
      uint64_t v67 = *(void *)(v61 + 8 * v65) >> v66;
      if (v66 >= 0x29) {
        v67 |= *(void *)(v61 + 8 * v65 + 8) << -(char)v66;
      }
      int8x16_t v68 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
      int8x16_t v69 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a7.i8, 0);
      unint64_t v70 = (8 * (a3 & 7)) | 0x280;
      v71.i64[0] = 0x3000300030003;
      v71.i64[1] = 0x3000300030003;
      int16x8_t v72 = (int16x8_t)vandq_s8(v68, v71);
      int8x16_t v73 = vbicq_s8(v69, (int8x16_t)vceqq_s16(v72, (int16x8_t)v71));
      v71.i64[0] = 0x202020202020202;
      v71.i64[1] = 0x202020202020202;
      int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v68.i8, (int8x8_t)0x4000400040004)))), v71);
      if (vmaxvq_s8(v74) < 1)
      {
        int v84 = 0;
        v169.i64[0] = -1;
        v169.i64[1] = -1;
        int8x16_t v170 = v73;
        int8x16_t v171 = v73;
        int8x16_t v172 = v73;
        v173.i64[0] = -1;
        v173.i64[1] = -1;
        int8x16_t v174 = v73;
        v175.i64[0] = -1;
        v175.i64[1] = -1;
        v176.i64[0] = -1;
        v176.i64[1] = -1;
      }
      else
      {
        int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
        int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
        unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
        v78.i64[0] = v77;
        v78.i64[1] = HIDWORD(v77);
        int64x2_t v79 = v78;
        unint64_t v80 = vaddvq_s64(v78);
        unint64_t v81 = v64 + v80;
        if (v80 <= 0x80 && v70 >= v81)
        {
          unint64_t v177 = v64 & 0x3A;
          int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v79));
          uint64_t v179 = (int64x2_t *)(v61 + ((v64 >> 3) & 8));
          int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
          if (v177 + v80 < 0x81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = 0;
            int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v83);
          }
          unint64_t v64 = v81;
        }
        else
        {
          int8x16_t v83 = 0uLL;
          int v84 = 1;
        }
        int32x2_t v180 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
        v181.i64[0] = v180.u32[0];
        v181.i64[1] = v180.u32[1];
        int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v181));
        *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
        *(int32x2_t *)v182.i8 = vmovn_s64(v182);
        int8x16_t v183 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v182);
        int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v183, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
        *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
        *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
        int16x8_t v185 = vzip1q_s16((int16x8_t)v183, v184);
        v183.i64[0] = 0x101010101010101;
        v183.i64[1] = 0x101010101010101;
        *(int8x8_t *)v186.i8 = vand_s8(vzip1_s8(vmovn_s16(v185), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v185, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v68.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v183, v74), (int8x8_t)-1));
        v186.i64[1] = v186.i64[0];
        *(int8x8_t *)v186.i8 = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
        *(int16x4_t *)v185.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 0);
        *(int16x4_t *)v183.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 1);
        int8x8_t v187 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 2);
        int8x8_t v188 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 3);
        int8x16_t v174 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v185.i8);
        int8x16_t v172 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v183.i8);
        int8x16_t v171 = (int8x16_t)vsubw_s8((int16x8_t)v73, v187);
        int8x16_t v170 = (int8x16_t)vsubw_s8((int16x8_t)v73, v188);
        int8x16_t v176 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v185.i8));
        int8x16_t v175 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v183.i8));
        int8x16_t v173 = (int8x16_t)vmovl_s8(vceqz_s8(v187));
        int8x16_t v169 = (int8x16_t)vmovl_s8(vceqz_s8(v188));
      }
      v189.i64[0] = 0x8000800080008;
      v189.i64[1] = 0x8000800080008;
      int8x16_t v190 = 0uLL;
      int8x16_t v191 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v68, v189), (int8x16_t)0, 0xCuLL), v73);
      int8x16_t v192 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v191, (int16x8_t)v191));
      v189.i64[0] = vpaddq_s32((int32x4_t)v192, (int32x4_t)v192).u64[0];
      v193.i64[0] = v189.u32[0];
      v193.i64[1] = v189.u32[1];
      int64x2_t v194 = v193;
      unint64_t v195 = vaddvq_s64(v193);
      unint64_t v196 = v64 + v195;
      if (v195 <= 0x80 && v70 >= v196)
      {
        unint64_t v198 = v64 & 0x3F;
        int64x2_t v199 = vaddq_s64(vdupq_n_s64(v198), vzip1q_s64((int64x2_t)0, v194));
        unint64_t v200 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v190 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v200, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200->i64[0], 0), (uint64x2_t)vnegq_s64(v199)));
        if (v198 + v195 >= 0x81) {
          int8x16_t v190 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v200[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v199))), v190);
        }
        unint64_t v64 = v196;
      }
      else
      {
        int v84 = 1;
      }
      int v201 = v68.i8[0] & 3;
      if (v201 == 2)
      {
        BOOL v202 = v70 < v64 + 8;
        unint64_t v203 = v64 + 16;
        if (v70 >= v64 + 8) {
          v64 += 8;
        }
        if (v203 > v70 || v202) {
          int v84 = 1;
        }
        else {
          v64 += 8;
        }
      }
      int8x16_t v205 = 0uLL;
      int8x16_t v206 = vextq_s8((int8x16_t)0, v174, 0xCuLL);
      int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v206, (int16x8_t)v206));
      unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
      v209.i64[0] = v208;
      v209.i64[1] = HIDWORD(v208);
      int64x2_t v210 = v209;
      unint64_t v211 = vaddvq_s64(v209);
      unint64_t v212 = v64 + v211;
      if (v211 <= 0x80 && v70 >= v212)
      {
        unint64_t v215 = v64 & 0x3F;
        int64x2_t v216 = vaddq_s64(vdupq_n_s64(v215), vzip1q_s64((int64x2_t)0, v210));
        unint64_t v217 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v217, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217->i64[0], 0), (uint64x2_t)vnegq_s64(v216)));
        if (v215 + v211 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v217[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v216))), v214);
        }
        unint64_t v64 = v212;
      }
      else
      {
        int v84 = 1;
        int8x16_t v214 = 0uLL;
      }
      int8x16_t v218 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v174, (int16x8_t)v174));
      unint64_t v219 = vpaddq_s32((int32x4_t)v218, (int32x4_t)v218).u64[0];
      v220.i64[0] = v219;
      v220.i64[1] = HIDWORD(v219);
      int64x2_t v221 = v220;
      unint64_t v222 = vaddvq_s64(v220);
      unint64_t v223 = v64 + v222;
      if (v222 <= 0x80 && v70 >= v223)
      {
        unint64_t v225 = v64 & 0x3F;
        int64x2_t v226 = vaddq_s64(vdupq_n_s64(v225), vzip1q_s64((int64x2_t)0, v221));
        unint64_t v227 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v226)));
        if (v225 + v222 >= 0x81) {
          int8x16_t v205 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v226))), v205);
        }
        unint64_t v64 = v223;
      }
      else
      {
        int v84 = 1;
      }
      int8x16_t v228 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v172, (int16x8_t)v172));
      unint64_t v229 = vpaddq_s32((int32x4_t)v228, (int32x4_t)v228).u64[0];
      v230.i64[0] = v229;
      v230.i64[1] = HIDWORD(v229);
      int64x2_t v231 = v230;
      unint64_t v232 = vaddvq_s64(v230);
      unint64_t v233 = v64 + v232;
      int8x16_t v234 = 0uLL;
      if (v232 <= 0x80 && v70 >= v233)
      {
        unint64_t v237 = v64 & 0x3F;
        int64x2_t v238 = vaddq_s64(vdupq_n_s64(v237), vzip1q_s64((int64x2_t)0, v231));
        BOOL v239 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v236 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v239, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239->i64[0], 0), (uint64x2_t)vnegq_s64(v238)));
        if (v237 + v232 >= 0x81) {
          int8x16_t v236 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v239[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v238))), v236);
        }
        unint64_t v64 = v233;
      }
      else
      {
        int v84 = 1;
        int8x16_t v236 = 0uLL;
      }
      if (v232 > 0x80 || (unint64_t v240 = v64 + v232, v70 < v64 + v232))
      {
        int v84 = 1;
        unint64_t v240 = v64;
      }
      else
      {
        unint64_t v241 = v64 & 0x3F;
        int64x2_t v242 = vaddq_s64(vdupq_n_s64(v241), vzip1q_s64((int64x2_t)0, v231));
        unsigned int v243 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v234 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v243, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243->i64[0], 0), (uint64x2_t)vnegq_s64(v242)));
        if (v241 + v232 >= 0x81) {
          int8x16_t v234 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v243[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v242))), v234);
        }
      }
      int8x16_t v244 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v171, (int16x8_t)v171));
      unint64_t v245 = vpaddq_s32((int32x4_t)v244, (int32x4_t)v244).u64[0];
      v246.i64[0] = v245;
      v246.i64[1] = HIDWORD(v245);
      int64x2_t v247 = v246;
      unint64_t v248 = vaddvq_s64(v246);
      int8x16_t v249 = 0uLL;
      if (v248 > 0x80 || (unint64_t v250 = v240 + v248, v70 < v240 + v248))
      {
        int v84 = 1;
        unint64_t v250 = v240;
        int8x16_t v253 = 0uLL;
      }
      else
      {
        int64x2_t v251 = vaddq_s64(vdupq_n_s64(v240 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        unsigned int v252 = (int64x2_t *)(v61 + 8 * (v240 >> 6));
        int8x16_t v253 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v252, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252->i64[0], 0), (uint64x2_t)vnegq_s64(v251)));
        if ((v240 & 0x3F) + v248 >= 0x81) {
          int8x16_t v253 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v252[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v251))), v253);
        }
      }
      if (v248 > 0x80 || (unint64_t v254 = v250 + v248, v70 < v250 + v248))
      {
        int v84 = 1;
        unint64_t v254 = v250;
      }
      else
      {
        int64x2_t v255 = vaddq_s64(vdupq_n_s64(v250 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v256 = (int64x2_t *)(v61 + 8 * (v250 >> 6));
        int8x16_t v249 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v256, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256->i64[0], 0), (uint64x2_t)vnegq_s64(v255)));
        if ((v250 & 0x3F) + v248 >= 0x81) {
          int8x16_t v249 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v256[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v255))), v249);
        }
      }
      int8x16_t v257 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
      unint64_t v258 = vpaddq_s32((int32x4_t)v257, (int32x4_t)v257).u64[0];
      v259.i64[0] = v258;
      v259.i64[1] = HIDWORD(v258);
      int64x2_t v260 = v259;
      unint64_t v261 = vaddvq_s64(v259);
      int8x16_t v262 = 0uLL;
      if (v261 > 0x80 || (unint64_t v263 = v254 + v261, v70 < v254 + v261))
      {
        int v84 = 1;
        unint64_t v263 = v254;
        int8x16_t v267 = 0uLL;
      }
      else
      {
        unint64_t v264 = v254 & 0x3F;
        int64x2_t v265 = vaddq_s64(vdupq_n_s64(v264), vzip1q_s64((int64x2_t)0, v260));
        int v266 = (int64x2_t *)(v61 + 8 * (v254 >> 6));
        int8x16_t v267 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v266, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266->i64[0], 0), (uint64x2_t)vnegq_s64(v265)));
        if (v264 + v261 >= 0x81) {
          int8x16_t v267 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v266[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v265))), v267);
        }
      }
      if (v261 > 0x80 || (unint64_t v268 = v263 + v261, v70 < v263 + v261))
      {
        int v84 = 1;
        unint64_t v268 = v263;
      }
      else
      {
        int64x2_t v269 = vaddq_s64(vdupq_n_s64(v263 & 0x3F), vzip1q_s64((int64x2_t)0, v260));
        unsigned int v270 = (int64x2_t *)(v61 + 8 * (v263 >> 6));
        int8x16_t v262 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v270, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270->i64[0], 0), (uint64x2_t)vnegq_s64(v269)));
        if ((v263 & 0x3F) + v261 >= 0x81) {
          int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v270[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v269))), v262);
        }
      }
      if (v84 || (uint64_t result = a4 + 1, v70 + 8 * result - v268 - 640 >= 9) || v201 == 2)
      {
        uint64_t result = 0;
        v431 |= 4095 << ((8 * &v431) & 0x20);
        long long v12 = 0uLL;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        int32x4_t v271 = (_OWORD *)(a1 + a2);
        *int32x4_t v271 = 0u;
        v271[1] = 0u;
        unsigned int v272 = (_OWORD *)(a1 + 2 * a2);
        uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
        *unsigned int v272 = 0u;
        v272[1] = 0u;
        goto LABEL_6;
      }
      int32x2_t v273 = vzip1_s32(*(int32x2_t *)v192.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v192, v192, 8uLL));
      int32x2_t v274 = vzip1_s32(*(int32x2_t *)v228.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v228, v228, 8uLL));
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      int64x2_t v276 = v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)vnegq_s64(v276);
      uint64x2_t v278 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v279 = (int64x2_t)vshlq_u64((uint64x2_t)v190, v277);
      *(int32x2_t *)v190.i8 = vmovn_s64((int64x2_t)v190);
      *(int32x2_t *)v279.i8 = vmovn_s64(v279);
      int16x8_t v280 = (int16x8_t)vzip1q_s32((int32x4_t)v190, (int32x4_t)v279);
      int64x2_t v281 = (int64x2_t)vshlq_u64((uint64x2_t)v236, v278);
      *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v236);
      *(int32x2_t *)v281.i8 = vmovn_s64(v281);
      int16x8_t v282 = (int16x8_t)vzip1q_s32((int32x4_t)v236, (int32x4_t)v281);
      int64x2_t v283 = (int64x2_t)vshlq_u64((uint64x2_t)v234, v278);
      *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v234);
      *(int32x2_t *)v283.i8 = vmovn_s64(v283);
      int16x8_t v284 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v283);
      uint32x4_t v285 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v172.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL))));
      int16x8_t v286 = (int16x8_t)vshlq_u32((uint32x4_t)v280, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v191.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v191, v191, 8uLL)))));
      *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
      *(int16x4_t *)v286.i8 = vmovn_s32((int32x4_t)v286);
      int16x8_t v287 = vzip1q_s16(v280, v286);
      int16x8_t v288 = (int16x8_t)vshlq_u32((uint32x4_t)v282, v285);
      int16x8_t v289 = (int16x8_t)vshlq_u32((uint32x4_t)v284, v285);
      *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
      *(int16x4_t *)v288.i8 = vmovn_s32((int32x4_t)v288);
      *(int16x4_t *)v284.i8 = vmovn_s32((int32x4_t)v284);
      *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
      int16x8_t v290 = vzip1q_s16(v282, v288);
      v288.i64[0] = 0x10001000100010;
      v288.i64[1] = 0x10001000100010;
      int16x8_t v291 = vzip1q_s16(v284, v289);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      int16x8_t v292 = vsubq_s16(v288, (int16x8_t)v191);
      int16x8_t v293 = vaddq_s16((int16x8_t)v191, v289);
      v289.i64[0] = 0x10001000100010;
      v289.i64[1] = 0x10001000100010;
      int16x8_t v294 = vshlq_s16(v287, v292);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      int16x8_t v295 = vsubq_s16(v289, (int16x8_t)v172);
      int16x8_t v296 = vaddq_s16((int16x8_t)v172, v292);
      int8x16_t v297 = (int8x16_t)vshlq_s16(v294, v293);
      int16x8_t v298 = vshlq_s16(vshlq_s16(v290, v295), v296);
      int16x8_t v299 = vshlq_s16(vshlq_s16(v291, v295), v296);
      int8x16_t v300 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v297.i8, 0);
      int16x8_t v301 = (int16x8_t)vandq_s8(v175, v300);
      int16x8_t v302 = vsubq_s16(v298, v301);
      int16x8_t v303 = vsubq_s16(v299, v301);
      *(int32x2_t *)v298.i8 = vzip1_s32(*(int32x2_t *)v244.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL));
      *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v257.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v257, v257, 8uLL));
      v275.i64[0] = v298.u32[0];
      v275.i64[1] = v298.u32[1];
      int64x2_t v304 = v275;
      v275.i64[0] = v299.u32[0];
      v275.i64[1] = v299.u32[1];
      uint64x2_t v305 = (uint64x2_t)vnegq_s64(v304);
      int64x2_t v306 = (int64x2_t)vshlq_u64((uint64x2_t)v253, v305);
      *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v253);
      *(int32x2_t *)v306.i8 = vmovn_s64(v306);
      int16x8_t v307 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v306);
      uint64x2_t v308 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v249, v305);
      *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v249);
      *(int32x2_t *)v309.i8 = vmovn_s64(v309);
      int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v309);
      int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v267, v308);
      *(int32x2_t *)v253.i8 = vmovn_s64((int64x2_t)v267);
      *(int32x2_t *)v311.i8 = vmovn_s64(v311);
      uint32x4_t v312 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v171.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL))));
      int16x8_t v313 = (int16x8_t)vzip1q_s32((int32x4_t)v253, (int32x4_t)v311);
      int16x8_t v314 = (int16x8_t)vshlq_u32((uint32x4_t)v307, v312);
      int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v312);
      *(int16x4_t *)v307.i8 = vmovn_s32((int32x4_t)v307);
      *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
      *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
      *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
      int16x8_t v316 = vzip1q_s16(v307, v314);
      v314.i64[0] = 0x10001000100010;
      v314.i64[1] = 0x10001000100010;
      int16x8_t v317 = vzip1q_s16(v310, v315);
      v315.i64[0] = 0xF000F000F000FLL;
      v315.i64[1] = 0xF000F000F000FLL;
      int16x8_t v318 = vsubq_s16(v314, (int16x8_t)v171);
      int16x8_t v319 = vaddq_s16((int16x8_t)v171, v315);
      uint32x4_t v320 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL))));
      int16x8_t v321 = vshlq_s16(vshlq_s16(v316, v318), v319);
      int16x8_t v322 = vshlq_s16(vshlq_s16(v317, v318), v319);
      int16x8_t v323 = (int16x8_t)vandq_s8(v173, v300);
      int16x8_t v324 = vsubq_s16(v321, v323);
      int16x8_t v325 = vsubq_s16(v322, v323);
      int16x8_t v326 = (int16x8_t)vshlq_u32((uint32x4_t)v313, v320);
      *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v313);
      *(int16x4_t *)v326.i8 = vmovn_s32((int32x4_t)v326);
      v313.i64[0] = 0x10001000100010;
      v313.i64[1] = 0x10001000100010;
      int16x8_t v327 = vzip1q_s16(v321, v326);
      v321.i64[0] = 0xF000F000F000FLL;
      v321.i64[1] = 0xF000F000F000FLL;
      int16x8_t v328 = vsubq_s16(v313, (int16x8_t)v170);
      int16x8_t v329 = vaddq_s16((int16x8_t)v170, v321);
      int64x2_t v330 = (int64x2_t)vshlq_u64((uint64x2_t)v262, v308);
      *(int32x2_t *)v321.i8 = vmovn_s64((int64x2_t)v262);
      *(int32x2_t *)v330.i8 = vmovn_s64(v330);
      int16x8_t v331 = (int16x8_t)vzip1q_s32((int32x4_t)v321, (int32x4_t)v330);
      int16x8_t v332 = (int16x8_t)vshlq_u32((uint32x4_t)v331, v320);
      *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
      *(int16x4_t *)v332.i8 = vmovn_s32((int32x4_t)v332);
      int16x8_t v333 = vshlq_s16(vshlq_s16(vzip1q_s16(v331, v332), v328), v329);
      int16x8_t v334 = (int16x8_t)vandq_s8(v169, v300);
      int16x8_t v335 = vsubq_s16(vshlq_s16(vshlq_s16(v327, v328), v329), v334);
      int16x8_t v336 = vsubq_s16(v333, v334);
      int32x2_t v337 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
      int32x2_t v338 = vzip1_s32(*(int32x2_t *)v218.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v218, v218, 8uLL));
      v275.i64[0] = v337.u32[0];
      v275.i64[1] = v337.u32[1];
      int64x2_t v339 = v275;
      v275.i64[0] = v338.u32[0];
      v275.i64[1] = v338.u32[1];
      int64x2_t v340 = (int64x2_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)vnegq_s64(v339));
      *(int32x2_t *)v214.i8 = vmovn_s64((int64x2_t)v214);
      *(int32x2_t *)v340.i8 = vmovn_s64(v340);
      int16x8_t v341 = (int16x8_t)vzip1q_s32((int32x4_t)v214, (int32x4_t)v340);
      int64x2_t v342 = (int64x2_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)vnegq_s64(v275));
      *(int32x2_t *)v205.i8 = vmovn_s64((int64x2_t)v205);
      *(int32x2_t *)v342.i8 = vmovn_s64(v342);
      int16x8_t v343 = (int16x8_t)vzip1q_s32((int32x4_t)v205, (int32x4_t)v342);
      int16x8_t v344 = (int16x8_t)vshlq_u32((uint32x4_t)v341, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v206.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v206, v206, 8uLL)))));
      int16x8_t v345 = (int16x8_t)vshlq_u32((uint32x4_t)v343, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v174.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v174, v174, 8uLL)))));
      *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
      *(int16x4_t *)v344.i8 = vmovn_s32((int32x4_t)v344);
      *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
      *(int16x4_t *)v345.i8 = vmovn_s32((int32x4_t)v345);
      int16x8_t v346 = vzip1q_s16(v341, v344);
      v344.i64[0] = 0x10001000100010;
      v344.i64[1] = 0x10001000100010;
      int16x8_t v347 = vzip1q_s16(v343, v345);
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      int16x8_t v348 = vaddq_s16((int16x8_t)vandq_s8(v297, v176), vshlq_s16(vshlq_s16(v346, vsubq_s16(v344, (int16x8_t)v206)), vaddq_s16((int16x8_t)v206, v345)));
      int16x8_t v349 = (int16x8_t)vandq_s8(v176, v300);
      v350.i64[0] = 0x1000100010001;
      v350.i64[1] = 0x1000100010001;
      int16x8_t v351 = vceqq_s16(v72, (int16x8_t)v350);
      int v352 = (unsigned __int16)vaddvq_s16(v351);
      int8x16_t v353 = (int8x16_t)vsubq_s16(v348, v349);
      int8x16_t v354 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v347, vsubq_s16(v344, (int16x8_t)v174)), vaddq_s16((int16x8_t)v174, v345)), v349);
      v351.i16[0] = v67 & 0xFFF;
      v351.i16[1] = (v67 >> 12) & 0xFFF;
      int16x8_t v355 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v351.i8, 0);
      if (v352)
      {
        int8x16_t v356 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v68, v350));
        int8x16_t v357 = v354;
        v357.i32[3] = v353.i32[0];
        int8x16_t v358 = v353;
        v358.i32[0] = v354.i32[3];
        v447.val[0] = vbslq_s8(v356, v358, v353);
        v447.val[1] = vbslq_s8(v356, v357, v354);
        v359.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
        v359.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7570), v356), (int16x8_t)v447.val[0]);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356));
        int8x16_t v353 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA7580), v356), (int16x8_t)v448.val[0]);
        int8x16_t v354 = (int8x16_t)vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA7590), v356), v302);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA75A0), v356), v303);
        int16x8_t v302 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75B0), v356), (int16x8_t)v448.val[0]);
        int16x8_t v303 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA75C0), v356), v324);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA7570), v356), v325);
        int16x8_t v324 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356), (int16x8_t)v448.val[0]);
        int16x8_t v325 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75D0), v356));
        v447.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA75E0), v356), v335);
        v447.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA7570), v356), v336);
        int16x8_t v335 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356), (int16x8_t)v447.val[0]);
        int16x8_t v336 = vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA75F0), v356));
      }
      int8x16_t v360 = (int8x16_t)vaddq_s16((int16x8_t)v353, v355);
      int8x16_t v361 = (int8x16_t)vaddq_s16((int16x8_t)v354, v355);
      int8x16_t v362 = (int8x16_t)vaddq_s16(v302, v355);
      int8x16_t v363 = (int8x16_t)vaddq_s16(v303, v355);
      int8x16_t v364 = (int8x16_t)vaddq_s16(v324, v355);
      int8x16_t v365 = (int8x16_t)vaddq_s16(v325, v355);
      int8x16_t v366 = (int8x16_t)vaddq_s16(v335, v355);
      int8x16_t v367 = (int8x16_t)vaddq_s16(v336, v355);
      v368.i64[0] = 0x10001000100010;
      v368.i64[1] = 0x10001000100010;
      int8x16_t v369 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v68, v368));
      int16x8_t v370 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v360, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v360);
      int16x8_t v371 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v361, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v361);
      int16x8_t v372 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v362, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v362);
      int16x8_t v373 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v363, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v363);
      int16x8_t v374 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v364, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v364);
      int16x8_t v375 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v365, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v365);
      int16x8_t v376 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v366, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v366);
      int16x8_t v377 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v367, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v367);
      int64x2_t v378 = (int64x2_t)vshlq_n_s16(v370, 4uLL);
      int64x2_t v379 = (int64x2_t)vshlq_n_s16(v371, 4uLL);
      int64x2_t v380 = (int64x2_t)vshlq_n_s16(v372, 4uLL);
      int64x2_t v381 = (int64x2_t)vshlq_n_s16(v374, 4uLL);
      int64x2_t v382 = (int64x2_t)vshlq_n_s16(v375, 4uLL);
      int32x4_t v383 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v378, v379);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v381, v382);
      int32x4_t v384 = (int64x2_t *)(a1 + 2 * a2);
      int64x2_t v385 = (int64x2_t)vshlq_n_s16(v373, 4uLL);
      int64x2_t v386 = (int64x2_t)vshlq_n_s16(v376, 4uLL);
      *int32x4_t v383 = vzip2q_s64(v378, v379);
      v383[1] = vzip2q_s64(v381, v382);
      int64x2_t v387 = (int64x2_t)vshlq_n_s16(v377, 4uLL);
      *int32x4_t v384 = vzip1q_s64(v380, v385);
      v384[1] = vzip1q_s64(v386, v387);
      uint64x2_t v388 = (int64x2_t *)((char *)v384 + a2);
      *uint64x2_t v388 = vzip2q_s64(v380, v385);
      v388[1] = vzip2q_s64(v386, v387);
      break;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int32x4_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int32x4_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *__int16 v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  uint64_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    unsigned int v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *uint64_t v31 = 0;
    unsigned int v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  uint64_t v9 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1, 64, a2, *a3, a4, a5, a6);
  uint64_t v12 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 32, 64, v9, a3[1], a4, v10, v11);
  uint64_t v15 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 256, 64, v12, a3[2], a4, v13, v14);
  uint64_t v18 = v15
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 288, 64, v15, a3[3], a4, v16, v17);
  uint64_t v21 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 512, 64, v18, a3[4], a4, v19, v20);
  uint64_t v24 = v21
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 544, 64, v21, a3[5], a4, v22, v23);
  uint64_t v27 = v24
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 768, 64, v24, a3[6], a4, v25, v26);
  unsigned int v30 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressSubblock(a1 + 800, 64, v27, v30, a4, v28, v29);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)2>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(unint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  unint64_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v11 = (int16x8_t)vzip1q_s64(*a3, v9);
  int16x8_t v12 = (int16x8_t)vzip2q_s64(*a3, v9);
  int16x8_t v13 = (int16x8_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  int32x4_t v14 = (int64x2_t *)((char *)v7 + a4);
  int64x2_t v17 = v14[1];
  int16x8_t v18 = (int16x8_t)vzip2q_s64(v8, v10);
  int16x8_t v19 = vshrq_n_s16(v11, 4uLL);
  v20.i64[0] = 0x4000400040004;
  v20.i64[1] = 0x4000400040004;
  int8x16_t v21 = (int8x16_t)vshrq_n_s16(v12, 4uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip1q_s64(v15, *v14), 4uLL);
  int16x8_t v23 = vshrq_n_s16((int16x8_t)vzip2q_s64(v15, *v14), 4uLL);
  int16x8_t v24 = vshrq_n_s16(v13, 4uLL);
  int16x8_t v25 = vshrq_n_s16(v18, 4uLL);
  int16x8_t v26 = vshrq_n_s16((int16x8_t)vzip1q_s64(v16, v17), 4uLL);
  int16x8_t v27 = vshrq_n_s16((int16x8_t)vzip2q_s64(v16, v17), 4uLL);
  int16x8_t v28 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 0);
  v29.i64[0] = 0x3000300030003;
  v29.i64[1] = 0x3000300030003;
  int8x16_t v402 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v28), 4uLL), v29);
  int8x16_t v404 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v21, v28), 4uLL), v29);
  int8x16_t v406 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v28), 4uLL), v29);
  int8x16_t v407 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v28), 4uLL), v29);
  int8x16_t v408 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v28), 4uLL), v29);
  int8x16_t v409 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v28), 4uLL), v29);
  int8x16_t v410 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v28), 4uLL), v29);
  int8x16_t v411 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v28), 4uLL), v29);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v402, (int16x8_t)v404), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v402, (int16x8_t)v404), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v32 = vpmaxq_s16(v30, v30);
  int16x8_t v33 = vpminq_s16(v31, v31);
  int16x8_t v34 = vpmaxq_s16(v32, v32);
  int16x8_t v35 = vpminq_s16(v33, v33);
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  v37.i64[0] = 0x8000800080008000;
  v37.i64[1] = 0x8000800080008000;
  int16x8_t v38 = vminq_s16(v35, v37);
  int16x8_t v39 = vzip1q_s16(v34, v35);
  v40.i64[0] = 0x10001000100010;
  v40.i64[1] = 0x10001000100010;
  int16x8_t v41 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v39)), (int8x16_t)vceqzq_s16(v39));
  int16x8_t v42 = vpmaxq_s16(v41, v41);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v406, (int16x8_t)v407), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v406, (int16x8_t)v407), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v45 = vpmaxq_s16(v43, v43);
  int16x8_t v46 = vpminq_s16(v44, v44);
  int16x8_t v47 = vpmaxq_s16(v45, v45);
  int16x8_t v48 = vpminq_s16(v46, v46);
  int16x8_t v49 = vmaxq_s16(vmaxq_s16(v34, v36), v47);
  int16x8_t v50 = vminq_s16(v38, v48);
  int16x8_t v51 = vzip1q_s16(v47, v48);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v51)), (int8x16_t)vceqzq_s16(v51));
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v408, (int16x8_t)v409), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v408, (int16x8_t)v409), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v56 = vpmaxq_s16(v54, v54);
  int16x8_t v57 = vpminq_s16(v55, v55);
  int16x8_t v58 = vpmaxq_s16(v56, v56);
  int16x8_t v59 = vpminq_s16(v57, v57);
  int16x8_t v60 = vmaxq_s16(v49, v58);
  int16x8_t v61 = vminq_s16(v50, v59);
  int16x8_t v62 = vzip1q_s16(v58, v59);
  int16x8_t v63 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int16x8_t v64 = vpmaxq_s16(v63, v63);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v410, (int16x8_t)v411), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v410, (int16x8_t)v411), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v67 = vpmaxq_s16(v65, v65);
  int16x8_t v68 = vpminq_s16(v66, v66);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int8x16_t v71 = (int8x16_t)vmaxq_s16(v60, v69);
  int16x8_t v72 = vminq_s16(v61, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  v70.i64[0] = -1;
  v70.i64[1] = -1;
  int16x8_t v75 = vpmaxq_s16(v74, v74);
  int8x16_t v76 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v53), vmaxq_s16(v64, v75));
  int16x8_t v77 = vclzq_s16(vsubq_s16((int16x8_t)v71, v72));
  v38.i64[0] = 0xF000F000F000FLL;
  v38.i64[1] = 0xF000F000F000FLL;
  int16x8_t v78 = vsubq_s16(v38, v77);
  int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v40, v77);
  int8x16_t v80 = (int8x16_t)vsubq_s16(vshlq_s16(v70, v78), v72);
  int8x16_t v81 = (int8x16_t)vcgtq_s16((int16x8_t)v76, (int16x8_t)v79);
  int8x16_t v418 = vbslq_s8(v81, v79, v76);
  int8x16_t v419 = (int8x16_t)v72;
  int8x16_t v420 = v71;
  int8x16_t v421 = vandq_s8(v80, v81);
  v71.i64[0] = 0x8000800080008;
  v71.i64[1] = 0x8000800080008;
  int8x16_t v82 = vandq_s8(v81, v71);
  v83.i64[0] = 0x3000300030003;
  v83.i64[1] = 0x3000300030003;
  int16x8_t v84 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v42), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v53), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v64), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v87 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v75), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v414 = vsubq_s16((int16x8_t)v418, v84);
  int16x8_t v415 = vsubq_s16((int16x8_t)v418, v85);
  int16x8_t v416 = vsubq_s16((int16x8_t)v418, v86);
  int16x8_t v417 = vsubq_s16((int16x8_t)v418, v87);
  int8x16_t v88 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v418), v83), v82), vbicq_s8(v20, (int8x16_t)vceqq_s16(vaddq_s16(v87, v86), vnegq_s16(vaddq_s16(v84, v85)))));
  int8x16_t v412 = (int8x16_t)v28;
  int8x16_t v413 = v88;
  if (vmaxvq_s16((int16x8_t)v418))
  {
    int16x8_t v398 = v22;
    int16x8_t v399 = v23;
    int16x8_t v400 = v24;
    int16x8_t v401 = v25;
    int16x8_t v395 = v26;
    int16x8_t v396 = v27;
    int8x16_t v89 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v402, (int16x8_t)vqtbl1q_s8(v402, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    v90.i64[0] = 0x4000400040004;
    v90.i64[1] = 0x4000400040004;
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v404, (int16x8_t)vqtbl1q_s8(v404, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v92 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v406, (int16x8_t)vqtbl1q_s8(v406, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v407, (int16x8_t)vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v408, (int16x8_t)vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v409, (int16x8_t)vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v410, (int16x8_t)vqtbl1q_s8(v410, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v411, (int16x8_t)vqtbl1q_s8(v411, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v89, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v89, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vpmaxq_s16(v100, v100);
    int16x8_t v103 = vpminq_s16(v101, v101);
    int16x8_t v104 = vmaxq_s16(v102, v36);
    int16x8_t v105 = vminq_s16(v103, v37);
    int16x8_t v106 = vzip1q_s16(v102, v103);
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v106)), (int8x16_t)vceqzq_s16(v106));
    int16x8_t v108 = vpmaxq_s16(v107, v107);
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v104, v113);
    int16x8_t v116 = vminq_s16(v105, v114);
    int16x8_t v117 = vzip1q_s16(v113, v114);
    int16x8_t v118 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v117)), (int8x16_t)vceqzq_s16(v117));
    int16x8_t v119 = vpmaxq_s16(v118, v118);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int16x8_t v127 = vminq_s16(v116, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v126, v135);
    int8x16_t v138 = (int8x16_t)vminq_s16(v127, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16(v108, v119), vmaxq_s16(v130, v141));
    int8x16_t v397 = (int8x16_t)v137;
    int16x8_t v143 = vclzq_s16(vsubq_s16(v137, (int16x8_t)v138));
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v40, v143);
    int8x16_t v145 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v142);
    v142.i64[0] = 0x18001800180018;
    v142.i64[1] = 0x18001800180018;
    int8x16_t v147 = vbslq_s8(v145, v142, v40);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v108), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v119), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v130), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v141), (int16x8_t)v83), (int16x8_t)0);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v146, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v146, v149);
    int8x16_t v154 = (int8x16_t)vsubq_s16((int16x8_t)v146, v150);
    int8x16_t v155 = (int8x16_t)vsubq_s16((int16x8_t)v146, v151);
    int8x16_t v156 = vbicq_s8(v90, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v90.i64[0] = 0x7000700070007;
    v90.i64[1] = 0x7000700070007;
    v157.i64[0] = 0x8000800080008;
    v157.i64[1] = 0x8000800080008;
    int8x16_t v158 = v418;
    int16x8_t v159 = (int16x8_t)vandq_s8(v88, v83);
    v160.i64[0] = 0x2000200020002;
    v160.i64[1] = 0x2000200020002;
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v159, v160), v40);
    int16x8_t v162 = v414;
    int16x8_t v163 = v415;
    int16x8_t v164 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v418, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v82, v157))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v157)), v161);
    int16x8_t v166 = v416;
    int16x8_t v165 = v417;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v164, v414, (int16x8_t)v90), vshlq_n_s16(vaddq_s16(vaddq_s16(v416, v415), v417), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v146, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v156, (int16x8_t)v156)), (int16x8_t)v152, (int16x8_t)v90), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v154, (int16x8_t)v153), (int16x8_t)v155), 3uLL))), 0);
    int v168 = (unsigned __int16)vaddvq_s16((int16x8_t)v167);
    BOOL v170 = a5 < 4 || a6 < 2;
    if (v168)
    {
      v171.i64[0] = 0x3000300030003;
      v171.i64[1] = 0x3000300030003;
      int8x16_t v402 = vbslq_s8(v167, v89, v402);
      int8x16_t v404 = vbslq_s8(v167, v91, v404);
      int8x16_t v172 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v146), v171), v147), v156);
      v173.i64[0] = 0xF000F000F000FLL;
      v173.i64[1] = 0xF000F000F000FLL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int8x16_t v406 = vbslq_s8(v167, v92, v406);
      int8x16_t v407 = vbslq_s8(v167, v93, v407);
      int8x16_t v408 = vbslq_s8(v167, v94, v408);
      int8x16_t v409 = vbslq_s8(v167, v95, v409);
      int8x16_t v410 = vbslq_s8(v167, v96, v410);
      int8x16_t v411 = vbslq_s8(v167, v97, v411);
      int16x8_t v162 = (int16x8_t)vbslq_s8(v167, v152, (int8x16_t)v414);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v167, v153, (int8x16_t)v415);
      int16x8_t v414 = v162;
      int16x8_t v415 = v163;
      int16x8_t v166 = (int16x8_t)vbslq_s8(v167, v154, (int8x16_t)v416);
      int16x8_t v165 = (int16x8_t)vbslq_s8(v167, v155, (int8x16_t)v417);
      int16x8_t v416 = v166;
      int16x8_t v417 = v165;
      int8x16_t v420 = vbslq_s8(v167, v397, v420);
      int8x16_t v421 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v171, vsubq_s16(v173, v143)), (int16x8_t)v138), v145), v421);
      int8x16_t v158 = vbslq_s8(v167, v146, v418);
      int8x16_t v418 = v158;
      int8x16_t v419 = vbslq_s8(v167, v138, v419);
      int8x16_t v88 = vbslq_s8(v167, v172, v88);
      int8x16_t v412 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v412, (int16x8_t)vqtbl1q_s8(v412, (int8x16_t)xmmword_242EA76C0)), v412);
      int8x16_t v413 = v88;
    }
    int16x8_t v174 = v400;
    int16x8_t v175 = v398;
    if (!v170)
    {
      int16x8_t v176 = vsubq_s16(v19, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v177 = v399;
      v177.i32[3] = v21.i32[3];
      int16x8_t v178 = vsubq_s16((int16x8_t)v21, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v179 = v401;
      v179.i32[3] = v21.i32[3];
      int16x8_t v180 = vsubq_s16(v400, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7640));
      int16x8_t v181 = vsubq_s16(v401, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7570));
      v422.val[0] = (int8x16_t)v395;
      v422.val[1] = (int8x16_t)v396;
      v422.val[1].i32[3] = v21.i32[3];
      int16x8_t v182 = vsubq_s16(v395, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7650));
      int16x8_t v183 = vsubq_s16(v396, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7570));
      v422.val[0] = (int8x16_t)v178;
      v422.val[0].i32[3] = v176.i32[0];
      v176.i32[0] = v178.i32[3];
      v184.i64[0] = 0x4000400040004;
      v184.i64[1] = 0x4000400040004;
      int16x8_t v185 = vshlq_n_s16((int16x8_t)v422.val[0], 4uLL);
      v422.val[0] = (int8x16_t)vshlq_n_s16(v180, 4uLL);
      v422.val[1] = (int8x16_t)vshlq_n_s16(v181, 4uLL);
      int16x8_t v186 = vshlq_n_s16(v182, 4uLL);
      int16x8_t v187 = vshlq_n_s16(v183, 4uLL);
      v188.i64[0] = 0x3000300030003;
      v188.i64[1] = 0x3000300030003;
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(v176, 4uLL), v188);
      int8x16_t v190 = (int8x16_t)vshlq_s16(v185, v188);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v398, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7590)), 4uLL), v188);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v399, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7630)), 4uLL), v188);
      int8x16_t v193 = (int8x16_t)vshlq_s16((int16x8_t)v422.val[0], v188);
      int8x16_t v194 = (int8x16_t)vshlq_s16((int16x8_t)v422.val[1], v188);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v186, v188);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v187, v188);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      v422.val[1] = vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v197 = vmaxq_s16((int16x8_t)v422.val[0], v186);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v198 = vminq_s16((int16x8_t)v422.val[1], v186);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[1]);
      v422.val[1].i64[0] = 0x10001000100010;
      v422.val[1].i64[1] = 0x10001000100010;
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v199 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v200 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v201 = vpminq_s16(v200, v200);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v202 = vpminq_s16(v201, v201);
      int16x8_t v203 = vmaxq_s16(v197, (int16x8_t)v422.val[0]);
      int16x8_t v204 = vminq_s16(v198, v202);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v202);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v205 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v207 = vpminq_s16(v206, v206);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v208 = vpminq_s16(v207, v207);
      int16x8_t v209 = vmaxq_s16(v203, (int16x8_t)v422.val[0]);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v208);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v210 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v195, (int16x8_t)v196), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v211 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v195, (int16x8_t)v196), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v212 = vpminq_s16(v211, v211);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v213 = vpminq_s16(v212, v212);
      int8x16_t v214 = (int8x16_t)vmaxq_s16(v209, (int16x8_t)v422.val[0]);
      int8x16_t v215 = (int8x16_t)vminq_s16(vminq_s16(v204, v208), v213);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v213);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int8x16_t v216 = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = (int8x16_t)vmaxq_s16(vmaxq_s16(v199, v205), vmaxq_s16(v210, (int16x8_t)v216));
      int16x8_t v217 = vclzq_s16(vsubq_s16((int16x8_t)v214, (int16x8_t)v215));
      int8x16_t v218 = (int8x16_t)vsubq_s16((int16x8_t)v422.val[1], v217);
      int8x16_t v219 = (int8x16_t)vcgtq_s16((int16x8_t)v422.val[0], (int16x8_t)v218);
      int8x16_t v220 = vbslq_s8(v219, v218, v422.val[0]);
      v221.i64[0] = 0x3000300030003;
      v221.i64[1] = 0x3000300030003;
      int16x8_t v222 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v199), v221), (int16x8_t)0);
      int16x8_t v223 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v205), v221), (int16x8_t)0);
      int16x8_t v224 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v210), v221), (int16x8_t)0);
      int16x8_t v225 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, (int16x8_t)v216), v221), (int16x8_t)0);
      int8x16_t v226 = (int8x16_t)vsubq_s16((int16x8_t)v220, v222);
      int8x16_t v227 = (int8x16_t)vsubq_s16((int16x8_t)v220, v223);
      int8x16_t v228 = (int8x16_t)vsubq_s16((int16x8_t)v220, v224);
      int8x16_t v229 = (int8x16_t)vsubq_s16((int16x8_t)v220, v225);
      int8x16_t v230 = vbicq_s8(v184, (int8x16_t)vceqq_s16(vaddq_s16(v225, v224), vnegq_s16(vaddq_s16(v222, v223))));
      v231.i64[0] = 0x7000700070007;
      v231.i64[1] = 0x7000700070007;
      int16x8_t v232 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v218, v219), vaddq_s16((int16x8_t)v230, (int16x8_t)v230)), (int16x8_t)v226, v231), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v228, (int16x8_t)v227), (int16x8_t)v229), 3uLL));
      v216.i64[0] = 0x8000800080008;
      v216.i64[1] = 0x8000800080008;
      int8x16_t v88 = v413;
      int16x8_t v162 = v414;
      v233.i64[0] = 0x2000200020002;
      v233.i64[1] = 0x2000200020002;
      int16x8_t v234 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v413, (int8x16_t)v221), (int16x8_t)v233), v422.val[1]);
      int16x8_t v165 = v417;
      int8x16_t v158 = v418;
      int16x8_t v235 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v418, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v413, v216))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v216)), v234);
      int16x8_t v163 = v415;
      int16x8_t v166 = v416;
      int8x16_t v236 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v235, v414, v231), vshlq_n_s16(vaddq_s16(vaddq_s16(v416, v415), v417), 3uLL)), v232), 0);
      if (vaddvq_s16((int16x8_t)v236))
      {
        v237.i64[0] = 0x9000900090009;
        v237.i64[1] = 0x9000900090009;
        int8x16_t v402 = vbslq_s8(v236, v189, v402);
        int8x16_t v404 = vbslq_s8(v236, v190, v404);
        v238.i64[0] = -1;
        v238.i64[1] = -1;
        int8x16_t v406 = vbslq_s8(v236, v191, v406);
        int8x16_t v407 = vbslq_s8(v236, v192, v407);
        v239.i64[0] = 0xF000F000F000FLL;
        v239.i64[1] = 0xF000F000F000FLL;
        int8x16_t v408 = vbslq_s8(v236, v193, v408);
        int8x16_t v409 = vbslq_s8(v236, v194, v409);
        int8x16_t v410 = vbslq_s8(v236, v195, v410);
        int8x16_t v411 = vbslq_s8(v236, v196, v411);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v236, v226, (int8x16_t)v414);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v236, v227, (int8x16_t)v415);
        int16x8_t v414 = v162;
        int16x8_t v415 = v163;
        int16x8_t v166 = (int16x8_t)vbslq_s8(v236, v228, (int8x16_t)v416);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v236, v229, (int8x16_t)v417);
        int16x8_t v416 = v166;
        int16x8_t v417 = v165;
        int8x16_t v420 = vbslq_s8(v236, v214, v420);
        int8x16_t v421 = vbslq_s8(v236, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v238, vsubq_s16(v239, v217)), (int16x8_t)v215), v219), v421);
        int8x16_t v158 = vbslq_s8(v236, v220, v418);
        int8x16_t v418 = v158;
        int8x16_t v419 = vbslq_s8(v236, v215, v419);
        int8x16_t v88 = vbslq_s8(v236, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v220), v233), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v219, v237), (int16x8_t)vmvnq_s8(v219))), v230), v413);
        int8x16_t v412 = vbslq_s8(v236, vextq_s8(v21, v21, 0xCuLL), v412);
        int8x16_t v413 = v88;
      }
    }
    int16x8_t v240 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v162));
    int8x16_t v403 = (int8x16_t)vaddq_s16(v240, (int16x8_t)v402);
    int8x16_t v405 = (int8x16_t)vaddq_s16((int16x8_t)v404, v240);
    int16x8_t v241 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v163));
    int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)v406, v241);
    int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)v407, v241);
    int16x8_t v242 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v166));
    int8x16_t v408 = (int8x16_t)vaddq_s16((int16x8_t)v408, v242);
    int8x16_t v409 = (int8x16_t)vaddq_s16((int16x8_t)v409, v242);
    int8x16_t v243 = vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v165));
    int8x16_t v410 = (int8x16_t)vaddq_s16((int16x8_t)v410, (int16x8_t)v243);
    int8x16_t v411 = (int8x16_t)vaddq_s16((int16x8_t)v411, (int16x8_t)v243);
    v243.i64[0] = 0x8000800080008;
    v243.i64[1] = 0x8000800080008;
    v244.i64[0] = 0x3000300030003;
    v244.i64[1] = 0x3000300030003;
    v245.i64[0] = 0x2000200020002;
    v245.i64[1] = 0x2000200020002;
    int8x16_t v246 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v244), v245);
    v245.i64[0] = 0x10001000100010;
    v245.i64[1] = 0x10001000100010;
    int16x8_t v247 = (int16x8_t)vandq_s8(v246, (int8x16_t)v245);
    v245.i64[0] = 0x7000700070007;
    v245.i64[1] = 0x7000700070007;
    int16x8_t v248 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v158, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v88, v243))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v243)), v247), v162, v245), vshlq_n_s16(vaddq_s16(v166, vaddq_s16(v163, v165)), 3uLL));
    if ((unint64_t)(vpaddq_s16(v248, v248).i16[0] - 471) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (uint32x4_t *)a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      int8x16_t v249 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v250 = 8 * (a1 & 7);
      if (v250) {
        uint64_t v251 = *v249 & ~(-1 << v250);
      }
      else {
        uint64_t v251 = 0;
      }
      *a2 = 0;
      uint64_t v254 = ((v158.i16[0] << 10) + 15360) & 0x3C00;
      if (!v158.i16[0]) {
        uint64_t v254 = 0;
      }
      if (v158.i16[1]) {
        uint64_t v255 = ((v158.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v255 = 0;
      }
      unint64_t v256 = v254 | v255 | v88.i8[0] & 0x1F | (32 * (v88.i8[2] & 0x1Fu));
      unint64_t v257 = v412.i16[0] & 0xFFF | ((unint64_t)(v412.i16[1] & 0xFFF) << 12);
      uint64_t v258 = (v256 << v250) | v251;
      if (v250 >= 0x2E)
      {
        *int8x16_t v249 = v258;
        uint64_t v258 = v256 >> (-8 * (a1 & 7u));
      }
      unint64_t v259 = (v250 + 18) & 0x3A;
      unint64_t v260 = v258 | (v257 << v259);
      if (v259 >= 0x28)
      {
        *(void *)((char *)v249 + (((v250 + 18) >> 3) & 8)) = v260;
        unint64_t v260 = v257 >> -(char)v259;
      }
      unint64_t v261 = v250 + 42;
      int8x16_t v262 = (int8x16_t)vsubq_s16((int16x8_t)v418, v414);
      int8x16_t v263 = (int8x16_t)vsubq_s16((int16x8_t)v418, v415);
      int8x16_t v264 = (int8x16_t)vsubq_s16((int16x8_t)v418, v416);
      int8x16_t v265 = (int8x16_t)vsubq_s16((int16x8_t)v418, v417);
      *(uint8x8_t *)v262.i8 = vqmovn_u16((uint16x8_t)v262);
      *(uint8x8_t *)v263.i8 = vqmovn_u16((uint16x8_t)v263);
      *(uint8x8_t *)v264.i8 = vqmovn_u16((uint16x8_t)v264);
      *(uint8x8_t *)v265.i8 = vqmovn_u16((uint16x8_t)v265);
      v265.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v262, v263), (int16x8_t)vzip1q_s8(v264, v265)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v262, v263), (int16x8_t)vtrn2q_s8(v264, v265))).u64[0];
      v263.i64[0] = 0x202020202020202;
      v263.i64[1] = 0x202020202020202;
      int8x16_t v266 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v413.i8, (int8x8_t)0x4000400040004)))), v263);
      v263.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v263.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v264.i64[0] = -1;
      v264.i64[1] = -1;
      uint8x16_t v267 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v264, (uint8x16_t)vorrq_s8(v266, v263)), (int8x16_t)v265.u64[0]);
      int16x8_t v268 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v266.i8);
      uint16x8_t v269 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v267.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v268)), (int16x8_t)vmovl_high_u8(v267));
      uint16x8_t v270 = (uint16x8_t)vpaddq_s16(v268, (int16x8_t)vmovl_high_u8((uint8x16_t)v266));
      int32x4_t v271 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v270.i8);
      int32x4_t v272 = (int32x4_t)vmovl_high_u16(v270);
      int32x4_t v273 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v269.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v271)), (int32x4_t)vshlq_u32(vmovl_high_u16(v269), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v272)));
      int32x4_t v274 = vpaddq_s32(v271, v272);
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      uint64x2_t v276 = (uint64x2_t)v275;
      v275.i64[0] = v273.u32[2];
      v275.i64[1] = v273.u32[3];
      uint64x2_t v277 = (uint64x2_t)v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      int64x2_t v278 = v275;
      v275.i64[0] = v274.u32[2];
      v275.i64[1] = v274.u32[3];
      int64x2_t v279 = vpaddq_s64((int64x2_t)vshlq_u64(v276, (uint64x2_t)vzip1q_s64((int64x2_t)0, v278)), (int64x2_t)vshlq_u64(v277, (uint64x2_t)vzip1q_s64((int64x2_t)0, v275)));
      int64x2_t v280 = vpaddq_s64(v278, v275);
      uint64_t v281 = (v250 + 42) & 0x3A;
      unint64_t v282 = (v279.i64[0] << v281) | v260;
      if ((unint64_t)(v280.i64[0] + v281) >= 0x40)
      {
        *(void *)((char *)v249 + ((v261 >> 3) & 8)) = v282;
        unint64_t v282 = (unint64_t)v279.i64[0] >> -(char)v281;
      }
      unint64_t v283 = v280.i64[0] + v261;
      unint64_t v284 = v282 | (v279.i64[1] << v283);
      if ((v283 & 0x3F) + v280.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v284;
        unint64_t v284 = (unint64_t)v279.i64[1] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v284 = 0;
        }
      }
      unint64_t v285 = v283 + v280.i64[1];
      v286.i64[0] = 0x8000800080008;
      v286.i64[1] = 0x8000800080008;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      int16x8_t v288 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v413, v286), (int8x16_t)0, 0xCuLL), v418);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v290 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v287, (uint16x8_t)vaddq_s16(v288, v289)), v421);
      int32x4_t v291 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v288.i8);
      int32x4_t v292 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v291)), (int32x4_t)vmovl_high_u16(v290));
      int32x4_t v293 = vpaddq_s32(v291, (int32x4_t)vmovl_high_u16((uint16x8_t)v288));
      v294.i64[0] = v292.u32[0];
      v294.i64[1] = v292.u32[1];
      uint64x2_t v295 = (uint64x2_t)v294;
      v294.i64[0] = v292.u32[2];
      v294.i64[1] = v292.u32[3];
      uint64x2_t v296 = (uint64x2_t)v294;
      v294.i64[0] = v293.u32[0];
      v294.i64[1] = v293.u32[1];
      int64x2_t v297 = v294;
      v294.i64[0] = v293.u32[2];
      v294.i64[1] = v293.u32[3];
      int64x2_t v298 = vpaddq_s64((int64x2_t)vshlq_u64(v295, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)), (int64x2_t)vshlq_u64(v296, (uint64x2_t)vzip1q_s64((int64x2_t)0, v294)));
      int64x2_t v299 = vpaddq_s64(v297, v294);
      unint64_t v300 = (v298.i64[0] << v285) | v284;
      if (v299.i64[0] + (v285 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v300;
        unint64_t v300 = (unint64_t)v298.i64[0] >> -(v285 & 0x3F);
        if ((v285 & 0x3F) == 0) {
          unint64_t v300 = 0;
        }
      }
      unint64_t v301 = v299.i64[0] + v285;
      unint64_t v302 = v300 | (v298.i64[1] << v301);
      if ((v301 & 0x3F) + v299.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v301 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v298.i64[1] >> -(v301 & 0x3F);
        if ((v301 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      unint64_t v303 = v301 + v299.i64[1];
      int16x8_t v304 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v414, 0xCuLL);
      v305.i64[0] = 0xF000F000F000FLL;
      v305.i64[1] = 0xF000F000F000FLL;
      v306.i64[0] = -1;
      v306.i64[1] = -1;
      uint16x8_t v307 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v306, (uint16x8_t)vaddq_s16(v304, v305)), v403);
      int32x4_t v308 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v304.i8);
      int32x4_t v309 = (int32x4_t)vmovl_high_u16((uint16x8_t)v304);
      int32x4_t v310 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v307.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v308)), (int32x4_t)vshlq_u32(vmovl_high_u16(v307), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v309)));
      int32x4_t v311 = vpaddq_s32(v308, v309);
      v312.i64[0] = v310.u32[0];
      v312.i64[1] = v310.u32[1];
      uint64x2_t v313 = (uint64x2_t)v312;
      v312.i64[0] = v310.u32[2];
      v312.i64[1] = v310.u32[3];
      uint64x2_t v314 = (uint64x2_t)v312;
      v312.i64[0] = v311.u32[0];
      v312.i64[1] = v311.u32[1];
      int64x2_t v315 = v312;
      v312.i64[0] = v311.u32[2];
      v312.i64[1] = v311.u32[3];
      int64x2_t v316 = vpaddq_s64((int64x2_t)vshlq_u64(v313, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)), (int64x2_t)vshlq_u64(v314, (uint64x2_t)vzip1q_s64((int64x2_t)0, v312)));
      int64x2_t v317 = vpaddq_s64(v315, v312);
      unint64_t v318 = (v316.i64[0] << v303) | v302;
      if (v317.i64[0] + (v303 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v303 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v318;
        unint64_t v318 = (unint64_t)v316.i64[0] >> -(v303 & 0x3F);
        if ((v303 & 0x3F) == 0) {
          unint64_t v318 = 0;
        }
      }
      unint64_t v319 = v317.i64[0] + v303;
      unint64_t v320 = v318 | (v316.i64[1] << v319);
      if ((v319 & 0x3F) + v317.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v320;
        unint64_t v320 = (unint64_t)v316.i64[1] >> -(v319 & 0x3F);
        if ((v319 & 0x3F) == 0) {
          unint64_t v320 = 0;
        }
      }
      unint64_t v321 = v319 + v317.i64[1];
      v322.i64[0] = 0xF000F000F000FLL;
      v322.i64[1] = 0xF000F000F000FLL;
      v323.i64[0] = -1;
      v323.i64[1] = -1;
      uint16x8_t v324 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v323, (uint16x8_t)vaddq_s16(v414, v322)), v405);
      int32x4_t v325 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v414.i8);
      int32x4_t v326 = (int32x4_t)vmovl_high_u16((uint16x8_t)v414);
      int32x4_t v327 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v324.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v325)), (int32x4_t)vshlq_u32(vmovl_high_u16(v324), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v326)));
      int32x4_t v328 = vpaddq_s32(v325, v326);
      v329.i64[0] = v327.u32[0];
      v329.i64[1] = v327.u32[1];
      uint64x2_t v330 = (uint64x2_t)v329;
      v329.i64[0] = v327.u32[2];
      v329.i64[1] = v327.u32[3];
      uint64x2_t v331 = (uint64x2_t)v329;
      v329.i64[0] = v328.u32[0];
      v329.i64[1] = v328.u32[1];
      int64x2_t v332 = v329;
      v329.i64[0] = v328.u32[2];
      v329.i64[1] = v328.u32[3];
      int64x2_t v333 = vpaddq_s64((int64x2_t)vshlq_u64(v330, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)), (int64x2_t)vshlq_u64(v331, (uint64x2_t)vzip1q_s64((int64x2_t)0, v329)));
      int64x2_t v334 = vpaddq_s64(v332, v329);
      unint64_t v335 = (v333.i64[0] << v321) | v320;
      if (v334.i64[0] + (v321 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v321 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v335;
        if ((v321 & 0x3F) != 0) {
          unint64_t v335 = (unint64_t)v333.i64[0] >> -(v321 & 0x3F);
        }
        else {
          unint64_t v335 = 0;
        }
      }
      uint64_t v336 = v334.i64[1];
      unint64_t v337 = v334.i64[0] + v321;
      uint64_t v338 = (v334.i64[0] + v321) & 0x3F;
      unint64_t v339 = v335 | (v333.i64[1] << v337);
      if ((unint64_t)(v338 + v334.i64[1]) >= 0x40)
      {
        *(void *)((char *)v249 + ((v337 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
        unint64_t v339 = (unint64_t)v333.i64[1] >> -(char)v338;
        if (!v338) {
          unint64_t v339 = 0;
        }
      }
      uint64_t v340 = 0;
      v341.i64[0] = 0xF000F000F000FLL;
      v341.i64[1] = 0xF000F000F000FLL;
      v342.i64[0] = -1;
      v342.i64[1] = -1;
      unint64_t v343 = v337 + v336;
      char v344 = 1;
      do
      {
        char v345 = v344;
        uint16x8_t v346 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v342, (uint16x8_t)vaddq_s16(v415, v341)), *(&v406 + v340));
        int32x4_t v347 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v415.i8);
        int32x4_t v348 = (int32x4_t)vmovl_high_u16((uint16x8_t)v415);
        int32x4_t v349 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v346.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)), (int32x4_t)vshlq_u32(vmovl_high_u16(v346), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)));
        int32x4_t v350 = vpaddq_s32(v347, v348);
        v351.i64[0] = v349.u32[0];
        v351.i64[1] = v349.u32[1];
        uint64x2_t v352 = (uint64x2_t)v351;
        v351.i64[0] = v349.u32[2];
        v351.i64[1] = v349.u32[3];
        uint64x2_t v353 = (uint64x2_t)v351;
        v351.i64[0] = v350.u32[0];
        v351.i64[1] = v350.u32[1];
        int64x2_t v354 = v351;
        v351.i64[0] = v350.u32[2];
        v351.i64[1] = v350.u32[3];
        int64x2_t v355 = vpaddq_s64((int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v354)), (int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v351)));
        int64x2_t v356 = vpaddq_s64(v354, v351);
        unint64_t v357 = (v355.i64[0] << v343) | v339;
        if (v356.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
          unint64_t v357 = (unint64_t)v355.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v357 = 0;
          }
        }
        unint64_t v358 = v356.i64[0] + v343;
        unint64_t v339 = v357 | (v355.i64[1] << v358);
        if ((v358 & 0x3F) + v356.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v355.i64[1] >> -(v358 & 0x3F);
          if ((v358 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v344 = 0;
        unint64_t v343 = v358 + v356.i64[1];
        uint64_t v340 = 1;
      }
      while ((v345 & 1) != 0);
      uint64_t v359 = 0;
      char v360 = 1;
      v361.i64[0] = 0xF000F000F000FLL;
      v361.i64[1] = 0xF000F000F000FLL;
      v362.i64[0] = -1;
      v362.i64[1] = -1;
      do
      {
        char v363 = v360;
        uint16x8_t v364 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v362, (uint16x8_t)vaddq_s16(v416, v361)), *(&v408 + v359));
        int32x4_t v365 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v416.i8);
        int32x4_t v366 = (int32x4_t)vmovl_high_u16((uint16x8_t)v416);
        int32x4_t v367 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v364.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v365)), (int32x4_t)vshlq_u32(vmovl_high_u16(v364), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v366)));
        int32x4_t v368 = vpaddq_s32(v365, v366);
        v369.i64[0] = v367.u32[0];
        v369.i64[1] = v367.u32[1];
        uint64x2_t v370 = (uint64x2_t)v369;
        v369.i64[0] = v367.u32[2];
        v369.i64[1] = v367.u32[3];
        uint64x2_t v371 = (uint64x2_t)v369;
        v369.i64[0] = v368.u32[0];
        v369.i64[1] = v368.u32[1];
        int64x2_t v372 = v369;
        v369.i64[0] = v368.u32[2];
        v369.i64[1] = v368.u32[3];
        int64x2_t v373 = vpaddq_s64((int64x2_t)vshlq_u64(v370, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)), (int64x2_t)vshlq_u64(v371, (uint64x2_t)vzip1q_s64((int64x2_t)0, v369)));
        int64x2_t v374 = vpaddq_s64(v372, v369);
        unint64_t v375 = (v373.i64[0] << v343) | v339;
        if (v374.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
          unint64_t v375 = (unint64_t)v373.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v375 = 0;
          }
        }
        unint64_t v376 = v374.i64[0] + v343;
        unint64_t v339 = v375 | (v373.i64[1] << v376);
        if ((v376 & 0x3F) + v374.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v373.i64[1] >> -(v376 & 0x3F);
          if ((v376 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v360 = 0;
        unint64_t v343 = v376 + v374.i64[1];
        uint64_t v359 = 1;
      }
      while ((v363 & 1) != 0);
      uint64_t v377 = 0;
      char v378 = 1;
      v379.i64[0] = 0xF000F000F000FLL;
      v379.i64[1] = 0xF000F000F000FLL;
      v380.i64[0] = -1;
      v380.i64[1] = -1;
      do
      {
        char v381 = v378;
        uint16x8_t v382 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v380, (uint16x8_t)vaddq_s16(v417, v379)), *(&v410 + v377));
        int32x4_t v383 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v417.i8);
        int32x4_t v384 = (int32x4_t)vmovl_high_u16((uint16x8_t)v417);
        int32x4_t v385 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v382.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v383)), (int32x4_t)vshlq_u32(vmovl_high_u16(v382), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v384)));
        int32x4_t v386 = vpaddq_s32(v383, v384);
        v387.i64[0] = v385.u32[0];
        v387.i64[1] = v385.u32[1];
        uint64x2_t v388 = (uint64x2_t)v387;
        v387.i64[0] = v385.u32[2];
        v387.i64[1] = v385.u32[3];
        uint64x2_t v389 = (uint64x2_t)v387;
        v387.i64[0] = v386.u32[0];
        v387.i64[1] = v386.u32[1];
        int64x2_t v390 = v387;
        v387.i64[0] = v386.u32[2];
        v387.i64[1] = v386.u32[3];
        int64x2_t v391 = vpaddq_s64((int64x2_t)vshlq_u64(v388, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)), (int64x2_t)vshlq_u64(v389, (uint64x2_t)vzip1q_s64((int64x2_t)0, v387)));
        int64x2_t v392 = vpaddq_s64(v390, v387);
        unint64_t v393 = (v391.i64[0] << v343) | v339;
        if (v392.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v393;
          unint64_t v393 = (unint64_t)v391.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v393 = 0;
          }
        }
        unint64_t v394 = v392.i64[0] + v343;
        unint64_t v339 = v393 | (v391.i64[1] << v394);
        if ((v394 & 0x3F) + v392.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v391.i64[1] >> -(v394 & 0x3F);
          if ((v394 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v378 = 0;
        unint64_t v343 = v394 + v392.i64[1];
        uint64_t v377 = 1;
      }
      while ((v381 & 1) != 0);
      if ((v343 & 0x3F) != 0) {
        *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
      }
      unint64_t result = (v343 - v250 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    unsigned int v252 = ((unsigned __int32)a3->i32[0] >> 8) & 0xFFFFF000 | ((unsigned __int16)a3->i32[0] >> 4);
    *(unsigned char *)(a1 + 2) = HIBYTE(a3->i32[0]);
    *(_WORD *)a1 = v252;
    *a2 = 2;
    return 3;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v11 = a6;
  if (a5 > 3)
  {
    uint64_t v14 = a5 & 0xFC;
    if (a5 == v14)
    {
      uint64_t v15 = 0;
      int64x2_t v16 = &v64;
      do
      {
        int64x2_t v17 = (unsigned __int32 *)v16;
        int16x8_t v18 = a3;
        uint64_t v19 = a5;
        do
        {
          uint32x4_t v20 = *v18++;
          uint32x4_t v21 = vshrq_n_u32(v20, 4uLL);
          *(v17 - 8) = v21.i32[0] & 0xFFFF0FFF;
          *(v17 - 4) = v21.i32[1] & 0xFFFF0FFF;
          *int64x2_t v17 = v21.i32[2] & 0xFFFF0FFF;
          v17[4] = v21.i32[3] & 0xFFFF0FFF;
          v17 += 16;
          v19 -= 4;
        }
        while (v19);
        ++v15;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int64x2_t v16 = (long long *)((char *)v16 + 4);
      }
      while (v15 != a6);
    }
    else
    {
      uint64_t v22 = 0;
      int16x8_t v23 = &v62;
      int16x8_t v24 = &v64;
      do
      {
        int16x8_t v25 = (unsigned __int32 *)v24;
        int16x8_t v26 = a3;
        uint64_t v27 = a5 & 0xFC;
        do
        {
          uint32x4_t v28 = *v26++;
          uint32x4_t v29 = vshrq_n_u32(v28, 4uLL);
          *(v25 - 8) = v29.i32[0] & 0xFFFF0FFF;
          *(v25 - 4) = v29.i32[1] & 0xFFFF0FFF;
          *int16x8_t v25 = v29.i32[2] & 0xFFFF0FFF;
          v25[4] = v29.i32[3] & 0xFFFF0FFF;
          v25 += 16;
          v27 -= 4;
        }
        while (v27);
        uint64_t v30 = v14;
        uint64_t v31 = a5 - v14;
        do
        {
          LODWORD(v23[v30]) = ((unsigned __int32)a3->i32[v30] >> 4) & 0xFFF0FFF;
          ++v30;
          --v31;
        }
        while (v31);
        ++v22;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int16x8_t v24 = (long long *)((char *)v24 + 4);
        int16x8_t v23 = (long long *)((char *)v23 + 4);
      }
      while (v22 != a6);
    }
  }
  else
  {
    int16x8_t v12 = &a3->i32[2];
    int16x8_t v13 = (int *)&v63;
    do
    {
      *(v13 - 4) = (*(v12 - 2) >> 4) & 0xFFF0FFF;
      if (a5 != 1)
      {
        *int16x8_t v13 = (*(v12 - 1) >> 4) & 0xFFF0FFF;
        if (a5 != 2) {
          v13[4] = (*v12 >> 4) & 0xFFF0FFF;
        }
      }
      int16x8_t v12 = (__int32 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  int v46 = (unsigned __int16)v62;
  int v47 = WORD1(v62);
  int v48 = (unsigned __int16)v63;
  int v49 = WORD1(v63);
  int v50 = WORD2(v62);
  int v51 = WORD3(v62);
  int v52 = WORD2(v63);
  int v53 = WORD3(v63);
  int v54 = (unsigned __int16)v64;
  int v55 = WORD1(v64);
  int v56 = (unsigned __int16)v65;
  int v57 = WORD1(v65);
  int v58 = WORD2(v64);
  int v59 = WORD3(v64);
  if (a5 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = a5;
  }
  if (a5 >= 4) {
    unsigned int v33 = a5 - 4;
  }
  else {
    unsigned int v33 = 0;
  }
  int v60 = WORD2(v65);
  int v61 = WORD3(v65);
  if (a6 >= 2) {
    unsigned int v34 = 2;
  }
  else {
    unsigned int v34 = a6;
  }
  if (a6 >= 2) {
    unsigned int v35 = a6 - 2;
  }
  else {
    unsigned int v35 = 0;
  }
  char v36 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v46, a7, v32, v34);
  int v46 = WORD4(v62);
  int v47 = WORD5(v62);
  int v48 = WORD4(v63);
  int v49 = WORD5(v63);
  int v50 = WORD6(v62);
  int v51 = HIWORD(v62);
  int v52 = WORD6(v63);
  int v53 = HIWORD(v63);
  int v54 = WORD4(v64);
  int v55 = WORD5(v64);
  int v56 = WORD4(v65);
  int v57 = WORD5(v65);
  int v58 = WORD6(v64);
  int v59 = HIWORD(v64);
  int v60 = WORD6(v65);
  int v61 = HIWORD(v65);
  if (a6 >= 4) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = v35;
  }
  int v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v46, a7, v32, v37);
  int v46 = (unsigned __int16)v66;
  int v47 = WORD1(v66);
  int v48 = (unsigned __int16)v67;
  int v49 = WORD1(v67);
  int v50 = WORD2(v66);
  int v51 = WORD3(v66);
  int v52 = WORD2(v67);
  int v53 = WORD3(v67);
  int v54 = (unsigned __int16)v68;
  int v55 = WORD1(v68);
  int v56 = (unsigned __int16)v69;
  int v57 = WORD1(v69);
  int v58 = WORD2(v68);
  int v59 = WORD3(v68);
  if (a5 >= 8) {
    unsigned int v39 = 4;
  }
  else {
    unsigned int v39 = v33;
  }
  int v60 = WORD2(v69);
  int v61 = WORD3(v69);
  int v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v46, a7, v39, v34);
  int v46 = WORD4(v66);
  int v47 = WORD5(v66);
  int v48 = WORD4(v67);
  int v49 = WORD5(v67);
  int v50 = WORD6(v66);
  int v51 = HIWORD(v66);
  int v52 = WORD6(v67);
  int v53 = HIWORD(v67);
  int v54 = WORD4(v68);
  int v55 = WORD5(v68);
  int v56 = WORD4(v69);
  int v57 = WORD5(v69);
  int v58 = WORD6(v68);
  int v59 = HIWORD(v68);
  int v60 = WORD6(v69);
  int v61 = HIWORD(v69);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v46, a7, v39, v37);
  if (v40) {
    char v42 = 4;
  }
  else {
    char v42 = 0;
  }
  if (v38) {
    char v43 = 2;
  }
  else {
    char v43 = 0;
  }
  if (result) {
    char v44 = -8;
  }
  else {
    char v44 = -16;
  }
  *a2 = v44 | v42 | v36 | v43;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v274 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v239 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v238 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v237 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v236 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v234 = v7;
  BOOL v235 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v233 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::compBits[v6];
    *(&v272 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(unsigned int *)((char *)&v250 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v249[v17 + 2] = v18;
    uint64_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint32x4_t v21 = (unsigned int *)((char *)&v253 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint32x4_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint32x4_t v21 = (unsigned int *)((char *)&v253 + v17 * 4);
      *uint32x4_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint32x4_t v21 = (unsigned int *)((char *)&v253 + v17 * 4);
      *uint32x4_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint32x4_t v29 = &v271[v17 + 2];
    v271[v6 + 2] = v20;
    v271[v6 + 4] = v20;
    v271[v6] = 0;
    if (v233)
    {
      unsigned int v30 = v20;
      if (v235) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v271[v6] = 1;
        v271[v6 + 4] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        uint64_t v31 = &v271[v17 + 2];
      }
      else {
        uint64_t v31 = (unsigned int *)(&v255 + v6);
      }
      unsigned int v20 = *v31;
      *uint32x4_t v29 = *v31;
      if (v235)
      {
LABEL_58:
        if (v234) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v271[v6] = 2;
      v271[v6 + 4] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      unsigned int v32 = &v271[v17 + 2];
    }
    else {
      unsigned int v32 = (unsigned int *)(&v257 + v6);
    }
    unsigned int v20 = *v32;
    *uint32x4_t v29 = *v32;
    if (v234)
    {
LABEL_59:
      if (v236) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v271[v6] = 3;
      v271[v6 + 4] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      unsigned int v33 = &v271[v17 + 2];
    }
    else {
      unsigned int v33 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v33;
    *uint32x4_t v29 = *v33;
    if (v236)
    {
LABEL_60:
      if (v238) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v271[v6] = 4;
      v271[v6 + 4] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      unsigned int v34 = &v271[v17 + 2];
    }
    else {
      unsigned int v34 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v34;
    *uint32x4_t v29 = *v34;
    if (v238)
    {
LABEL_61:
      if (v237) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v271[v6] = 5;
      v271[v6 + 4] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      unsigned int v35 = &v271[v17 + 2];
    }
    else {
      unsigned int v35 = (unsigned int *)(&v263 + v6);
    }
    unsigned int v20 = *v35;
    *uint32x4_t v29 = *v35;
    if (v237)
    {
LABEL_62:
      if (v239) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v271[v6] = 7;
        v271[v6 + 4] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        unsigned int v37 = &v271[v17 + 2];
      }
      else {
        unsigned int v37 = (unsigned int *)(&v267 + v6);
      }
      unsigned int v20 = *v37;
      *uint32x4_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v271[v6] = 6;
      v271[v6 + 4] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      char v36 = &v271[v17 + 2];
    }
    else {
      char v36 = (unsigned int *)(&v265 + v6);
    }
    unsigned int v20 = *v36;
    *uint32x4_t v29 = *v36;
    if (!v239) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v269 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42]
          - v43
          + *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
            + 4 * v14
            + 2);
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v72 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v72) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v269 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v269 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  uint64_t v51 = v250;
  uint64_t v52 = v251;
  unsigned int v54 = v269;
  unsigned int v53 = v270;
  BOOL v56 = v270 >= v269;
  BOOL v57 = v270 < v269;
  int v58 = kDQuadParamTable[160 * v251 + 6 + 10 * v270];
  int v247 = kDQuadParamTable[160 * v250 + 6 + 10 * v269];
  int v55 = v247;
  int v248 = v58;
  v249[0] = v247;
  v249[1] = v58;
  if (*(&v269 + v56) == *(&v269 + v57))
  {
    int v59 = v247;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v249 | (4 * v57));
    int v59 = v247;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v247 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v247 | (4 * v56)) += v60;
      int v59 = v247;
    }
  }
  if (a4) {
    BOOL v61 = a5 == 0;
  }
  else {
    BOOL v61 = 1;
  }
  int v62 = v61;
  int v232 = v62;
  long long v63 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v64 = *((void *)v63 + 1);
  int v65 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v51
        + 2);
  int v66 = v63[4];
  LODWORD(v63) = v63[5];
  unsigned int v67 = v66 + v65;
  unsigned int v245 = v67;
  unsigned int v68 = v63 + v65;
  unsigned int v243 = v68;
  int v69 = v59 - v55;
  if (v69 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v69)
    {
      unsigned int v243 = --v68;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v70 = -1;
LABEL_167:
        unsigned int v245 = v70 + v67;
      }
    }
  }
  else if (v69)
  {
    v68 += v69;
    unsigned int v243 = v68;
    int v70 = v69;
    goto LABEL_167;
  }
  BOOL v72 = v51 == 5 && v54 == 1 && v69 < 2;
  int v73 = v72;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v74 = 31744;
    }
    else {
      int v74 = 0;
    }
    if (v51 == 4) {
      int v75 = 2139095040;
    }
    else {
      int v75 = v74;
    }
    int v76 = 1 << (v272 - 1);
    if (v232)
    {
      if (v233) {
        goto LABEL_188;
      }
LABEL_355:
      if ((v75 & ~v255) == 0 || v255 == v76) {
        int v73 = 1;
      }
      if (!v235) {
        goto LABEL_362;
      }
LABEL_189:
      if (v234) {
        goto LABEL_190;
      }
LABEL_369:
      if ((v75 & ~v259) == 0 || v259 == v76) {
        int v73 = 1;
      }
      if (!v236) {
        goto LABEL_376;
      }
LABEL_191:
      if (v238) {
        goto LABEL_192;
      }
LABEL_383:
      if ((v75 & ~v263) == 0 || v263 == v76) {
        int v73 = 1;
      }
      if (!v237) {
        goto LABEL_390;
      }
LABEL_193:
      if (!v239) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v75 & ~v253) == 0 || v253 == v76) {
        int v73 = 1;
      }
      if (!v233) {
        goto LABEL_355;
      }
LABEL_188:
      if (v235) {
        goto LABEL_189;
      }
LABEL_362:
      if ((v75 & ~v257) == 0 || v257 == v76) {
        int v73 = 1;
      }
      if (!v234) {
        goto LABEL_369;
      }
LABEL_190:
      if (v236) {
        goto LABEL_191;
      }
LABEL_376:
      if ((v75 & ~v261) == 0 || v261 == v76) {
        int v73 = 1;
      }
      if (!v238) {
        goto LABEL_383;
      }
LABEL_192:
      if (v237) {
        goto LABEL_193;
      }
LABEL_390:
      if ((v75 & ~v265) == 0 || v265 == v76) {
        int v73 = 1;
      }
      if (!v239)
      {
LABEL_194:
        if ((v75 & ~v267) == 0 || v267 == v76) {
          int v73 = 1;
        }
      }
    }
  }
  BOOL v72 = v64 >> v68 > 0x10;
  int v78 = v232;
  if (v72) {
    int v78 = 1;
  }
  int v79 = v78 | v73;
  int8x16_t v80 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v81 = *((void *)v80 + 1);
  int v82 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
        + 4 * v52
        + 2);
  int v83 = v80[4];
  LODWORD(v80) = v80[5];
  unsigned int v84 = v83 + v82;
  unsigned int v246 = v84;
  unsigned int v85 = v80 + v82;
  unsigned int v244 = v85;
  int v86 = v248 - v58;
  if (v248 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v248)
    {
      unsigned int v244 = --v85;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v87 = -1;
LABEL_206:
        unsigned int v246 = v87 + v84;
      }
    }
  }
  else if (v248 != v58)
  {
    v85 += v86;
    unsigned int v244 = v85;
    int v87 = v248 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v86 < 2) {
    int v79 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v88 = 31744;
    }
    else {
      int v88 = 0;
    }
    if (v52 == 4) {
      int v88 = 2139095040;
    }
    int v89 = 1 << (v273 - 1);
    if (v232)
    {
      if (v233) {
        goto LABEL_221;
      }
LABEL_405:
      if ((v88 & ~v256) == 0 || v256 == v89) {
        int v79 = 1;
      }
      if (!v235) {
        goto LABEL_412;
      }
LABEL_222:
      if (v234) {
        goto LABEL_223;
      }
LABEL_419:
      if ((v88 & ~v260) == 0 || v260 == v89) {
        int v79 = 1;
      }
      if (!v236) {
        goto LABEL_426;
      }
LABEL_224:
      if (v238) {
        goto LABEL_225;
      }
LABEL_433:
      if ((v88 & ~v264) == 0 || v264 == v89) {
        int v79 = 1;
      }
      if (!v237) {
        goto LABEL_440;
      }
LABEL_226:
      if (!v239) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v88 & ~v254) == 0 || v254 == v89) {
        int v79 = 1;
      }
      if (!v233) {
        goto LABEL_405;
      }
LABEL_221:
      if (v235) {
        goto LABEL_222;
      }
LABEL_412:
      if ((v88 & ~v258) == 0 || v258 == v89) {
        int v79 = 1;
      }
      if (!v234) {
        goto LABEL_419;
      }
LABEL_223:
      if (v236) {
        goto LABEL_224;
      }
LABEL_426:
      if ((v88 & ~v262) == 0 || v262 == v89) {
        int v79 = 1;
      }
      if (!v238) {
        goto LABEL_433;
      }
LABEL_225:
      if (v237) {
        goto LABEL_226;
      }
LABEL_440:
      if ((v88 & ~v266) == 0 || v266 == v89) {
        int v79 = 1;
      }
      if (!v239)
      {
LABEL_227:
        if ((v88 & ~v268) == 0 || v268 == v89) {
          int v79 = 1;
        }
      }
    }
  }
  char v91 = 0;
  uint64_t v92 = 0;
  BOOL v72 = v81 >> v85 > 0x10;
  int v93 = v232;
  if (v72) {
    int v93 = 1;
  }
  int v229 = v93;
  int v230 = v79;
  uint64_t v242 = 0;
  uint64_t v241 = 0;
  memset(v240, 0, sizeof(v240));
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v272 + v92);
    if (v96 >= *(&v245 + v92)) {
      unsigned int v97 = *(&v245 + v92);
    }
    else {
      unsigned int v97 = *(&v272 + v92);
    }
    *(&v245 + v92) = v97;
    int16x8_t v98 = &kDQuadParamTable[160 * *(&v250 + v92) + 10 * *(&v269 + v92)];
    if (v98[5]) {
      unsigned int v99 = v96;
    }
    else {
      unsigned int v99 = 0;
    }
    if (v99 >= *(&v243 + v92)) {
      unsigned int v99 = *(&v243 + v92);
    }
    int v100 = v271[v92 + 4] & (-1 << (v96 - v97));
    int16x8_t v101 = &v253 + v92;
    int v102 = *v101 - v100;
    uint64_t v103 = 32 * v92;
    int16x8_t v104 = &v252[32 * v92];
    if (v232) {
      int v102 = 0;
    }
    int v105 = v101[2] - v100;
    if (v233) {
      int v105 = 0;
    }
    *int16x8_t v104 = v102;
    v104[1] = v105;
    int v106 = v101[4] - v100;
    if (v235) {
      int v106 = 0;
    }
    int v107 = v101[6] - v100;
    if (v234) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v101[8] - v100;
    if (v236) {
      int v108 = 0;
    }
    int v109 = v101[10] - v100;
    if (v238) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    int v110 = v101[12] - v100;
    if (v237) {
      int v110 = 0;
    }
    int v111 = v101[14] - v100;
    if (v239) {
      int v111 = 0;
    }
    v104[6] = v110;
    v104[7] = v111;
    char v112 = v91;
    *(&v243 + v92) = v99;
    unint64_t v113 = *((void *)v98 + 1);
    *((_DWORD *)&v242 + v92) = v100;
    unint64_t v114 = v113 >> v99;
    int v115 = ~(-1 << v96);
    if (v114 <= 1) {
      unint64_t v116 = 1;
    }
    else {
      unint64_t v116 = v114;
    }
    uint64_t v117 = 2 * v271[v92];
    do
    {
      if (v117 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)&v252[v103] / v116;
        }
        else {
          LODWORD(v118) = 0;
        }
        int16x8_t v119 = (int *)v240 + 7 * v92 + v95;
        *int16x8_t v119 = v118;
        if (v114 >= 2)
        {
          unint64_t v120 = *(unsigned int *)&v252[v103];
          if (v120)
          {
            if (v120 / v116 * v116 == v120 && ((v120 / v116) & 1) != 0)
            {
              if (v100 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v101[v94], v123 = v249[v92 + 2], v122 != v123)
                  && ((a3 | 2) != 3 || v116 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  *int16x8_t v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v101[v94] == v115) {
          *int16x8_t v119 = ~(-1 << v99);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v94) >= a4)
        {
          *int16x8_t v119 = 0;
        }
        ++v95;
      }
      v103 += 4;
      v94 += 2;
    }
    while (v94 != 16);
    char v91 = 1;
    uint64_t v92 = 1;
  }
  while ((v112 & 1) == 0);
  int16x8_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if ((v229 | v230) == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v272;
    unsigned int v130 = v273;
    uint64_t v131 = v272 - 4;
    uint64_t v132 = v273 - 4;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= a5 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v253 + 2 * v127) >> 4;
        if (v131 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v129 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x80)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 4;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_315:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v253 + 2 * v127 + 1) >> 4;
        if (v132 <= 0x100)
        {
LABEL_319:
          if (v130 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x80)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 4;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return v229 | v230;
      }
    }
  }
  unsigned int v148 = v269;
  unsigned int v147 = v270;
  BOOL v149 = v269 < 4;
  char v150 = v269 - 3;
  if (v269 <= 3) {
    unint64_t v151 = v269;
  }
  else {
    unint64_t v151 = 0;
  }
  if (v269 < 3) {
    char v150 = 0;
  }
  unint64_t v152 = ((unint64_t)(v150 & 7) << v126) | *v125;
  *int16x8_t v125 = v152;
  uint64_t v153 = v126 | 3;
  if (v147 <= 3) {
    unint64_t v154 = v147;
  }
  else {
    unint64_t v154 = 0;
  }
  if ((unint64_t)(v153 - v126 - 126) >= 0xFFFFFFFFFFFFFF7FLL)
  {
    if (v147 <= 3) {
      uint64_t v155 = 0;
    }
    else {
      uint64_t v155 = ((_BYTE)v147 + 5) & 7;
    }
    *int16x8_t v125 = (v155 << v153) | v152;
    uint64_t v153 = v126 | 6;
  }
  if (v148 <= 3)
  {
    unint64_t v178 = (2 * v149);
    if (v153 - v126 + v178 <= 0x80)
    {
      uint64_t v156 = 0;
      uint64_t v179 = 0;
      unint64_t v180 = v178;
      do
      {
        unint64_t v181 = 64 - v153;
        if (64 - v153 >= v180) {
          unint64_t v181 = v180;
        }
        v125[v156] |= ((v151 >> v179) & ~(-1 << v181)) << v153;
        v179 += v181;
        unint64_t v182 = v181 + v153;
        v156 += v182 >> 6;
        uint64_t v153 = v182 & 0x3F;
        v180 -= v181;
      }
      while (v180);
    }
    else
    {
      uint64_t v156 = 0;
    }
    int v157 = v178 + 6;
    if (v147 > 3) {
      goto LABEL_455;
    }
LABEL_341:
    uint64_t v158 = 2 * (v147 < 4);
    if ((unint64_t)(v153 - v126 + (v156 << 6) + v158) <= 0x80)
    {
      uint64_t v159 = 0;
      unint64_t v160 = 2 * (v147 < 4);
      do
      {
        unint64_t v161 = 64 - v153;
        if (64 - v153 >= v160) {
          unint64_t v161 = v160;
        }
        v125[v156] |= ((v154 >> v159) & ~(-1 << v161)) << v153;
        v159 += v161;
        unint64_t v162 = v161 + v153;
        v156 += v162 >> 6;
        uint64_t v153 = v162 & 0x3F;
        v160 -= v161;
      }
      while (v160);
    }
    v157 += v158;
    unsigned int v163 = v272;
    if (!v148) {
      goto LABEL_465;
    }
LABEL_456:
    unsigned int v183 = v245;
    if (v245 <= 0x100 && v245 && v153 - v126 + (v156 << 6) + (unint64_t)v245 <= 0x80)
    {
      uint64_t v184 = 0;
      unint64_t v185 = v242 >> (v163 - v245);
      unint64_t v186 = v245;
      do
      {
        unint64_t v187 = 64 - v153;
        if (64 - v153 >= v186) {
          unint64_t v187 = v186;
        }
        v125[v156] |= ((v185 >> v184) & ~(-1 << v187)) << v153;
        v184 += v187;
        unint64_t v188 = v187 + v153;
        v156 += v188 >> 6;
        uint64_t v153 = v188 & 0x3F;
        v186 -= v187;
      }
      while (v186);
    }
    v157 += v183;
    unsigned int v189 = v273;
    if (!v147) {
      goto LABEL_521;
    }
LABEL_468:
    unsigned int v190 = v246;
    if (v246 <= 0x100 && v246 && v153 - v126 + (v156 << 6) + (unint64_t)v246 <= 0x80)
    {
      uint64_t v191 = 0;
      unint64_t v192 = (HIDWORD(v242) >> (v189 - v246));
      unint64_t v193 = v246;
      do
      {
        unint64_t v194 = 64 - v153;
        if (64 - v153 >= v193) {
          unint64_t v194 = v193;
        }
        v125[v156] |= ((v192 >> v191) & ~(-1 << v194)) << v153;
        v191 += v194;
        unint64_t v195 = v194 + v153;
        v156 += v195 >> 6;
        uint64_t v153 = v195 & 0x3F;
        v193 -= v194;
      }
      while (v193);
    }
    v157 += v190;
  }
  else
  {
    uint64_t v156 = 0;
    int v157 = 6;
    if (v147 <= 3) {
      goto LABEL_341;
    }
LABEL_455:
    unsigned int v163 = v272;
    if (v148) {
      goto LABEL_456;
    }
LABEL_465:
    if (v163 == 2 || v163 >= 0x10) {
      goto LABEL_456;
    }
    unsigned int v189 = v273;
    if (v147) {
      goto LABEL_468;
    }
LABEL_521:
    if (v189 == 2 || v189 >= 0x10) {
      goto LABEL_468;
    }
  }
  unint64_t v196 = v243;
  if (v243)
  {
    if ((unint64_t)(v153 - v126 + (v156 << 6) + 3) <= 0x80)
    {
      uint64_t v197 = 0;
      unint64_t v198 = v271[0];
      unint64_t v199 = 3;
      do
      {
        unint64_t v200 = 64 - v153;
        if (64 - v153 >= v199) {
          unint64_t v200 = v199;
        }
        v125[v156] |= ((v198 >> v197) & ~(-1 << v200)) << v153;
        v197 += v200;
        unint64_t v201 = v200 + v153;
        v156 += v201 >> 6;
        uint64_t v153 = v201 & 0x3F;
        v199 -= v200;
      }
      while (v199);
    }
    v157 += 3;
  }
  unint64_t v202 = v244;
  if (v244)
  {
    if ((unint64_t)(v153 - v126 + (v156 << 6) + 3) <= 0x80)
    {
      uint64_t v203 = 0;
      unint64_t v204 = v271[1];
      unint64_t v205 = 3;
      do
      {
        unint64_t v206 = 64 - v153;
        if (64 - v153 >= v205) {
          unint64_t v206 = v205;
        }
        v125[v156] |= ((v204 >> v203) & ~(-1 << v206)) << v153;
        v203 += v206;
        unint64_t v207 = v206 + v153;
        v156 += v207 >> 6;
        uint64_t v153 = v207 & 0x3F;
        v205 -= v206;
      }
      while (v205);
    }
    v157 += 3;
  }
  unsigned int v208 = 128 - v157;
  unsigned int v209 = (128 - v157) / 7u;
  unint64_t v210 = v208 % 7;
  if ((v210 - 257) >= 0xFFFFFF00 && v153 - v126 + (v156 << 6) + v210 <= 0x80)
  {
    do
    {
      unint64_t v211 = 64 - v153;
      if (64 - v153 >= v210) {
        unint64_t v211 = v210;
      }
      unint64_t v212 = v211 + v153;
      v156 += v212 >> 6;
      uint64_t v153 = v212 & 0x3F;
      v210 -= v211;
    }
    while (v210);
  }
  uint64_t v213 = 0;
  int v214 = v202 + v196;
  while (2)
  {
    if (v196 && v196 <= 0x100 && v153 - v126 + (v156 << 6) + v196 <= 0x80)
    {
      uint64_t v215 = 0;
      unint64_t v216 = *((unsigned int *)v240 + v213);
      unint64_t v217 = v196;
      do
      {
        unint64_t v218 = 64 - v153;
        if (64 - v153 >= v217) {
          unint64_t v218 = v217;
        }
        v125[v156] |= ((v216 >> v215) & ~(-1 << v218)) << v153;
        v215 += v218;
        unint64_t v219 = v218 + v153;
        v156 += v219 >> 6;
        uint64_t v153 = v219 & 0x3F;
        v217 -= v218;
      }
      while (v217);
    }
    if (v202)
    {
      if (v202 <= 0x100 && v153 - v126 + (v156 << 6) + v202 <= 0x80)
      {
        uint64_t v220 = 0;
        unint64_t v221 = *((unsigned int *)&v240[1] + v213 + 3);
        unint64_t v222 = v202;
        do
        {
          unint64_t v223 = 64 - v153;
          if (64 - v153 >= v222) {
            unint64_t v223 = v222;
          }
          v125[v156] |= ((v221 >> v220) & ~(-1 << v223)) << v153;
          v220 += v223;
          unint64_t v224 = v223 + v153;
          v156 += v224 >> 6;
          uint64_t v153 = v224 & 0x3F;
          v222 -= v223;
        }
        while (v222);
      }
      unint64_t v225 = v209 - v214;
      if (v209 != v214)
      {
LABEL_514:
        if (v225 <= 0x100 && v153 - v126 + (v156 << 6) + v225 <= 0x80)
        {
          do
          {
            unint64_t v226 = 64 - v153;
            if (64 - v153 >= v225) {
              unint64_t v226 = v225;
            }
            unint64_t v227 = v226 + v153;
            v156 += v227 >> 6;
            uint64_t v153 = v227 & 0x3F;
            v225 -= v226;
          }
          while (v225);
        }
      }
    }
    else
    {
      unint64_t v225 = v209 - v196;
      if (v209 != v196) {
        goto LABEL_514;
      }
    }
    if (++v213 != 7) {
      continue;
    }
    return v229 | v230;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = ((a3 & 0xFFFFFFFD) == 1) << 11;
  uint64_t result = v6;
  do
  {
    if ((unint64_t)(result - v6 + (v4 << 6) - 121) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      unsigned __int8 v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 8;
      do
      {
        unint64_t v18 = 64 - result;
        if (64 - result >= v17) {
          unint64_t v18 = v17;
        }
        v15 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v18)) << v16;
        v16 += v18;
        unint64_t v19 = v18 + result;
        v4 += v19 >> 6;
        uint64_t result = v19 & 0x3F;
        v17 -= v18;
      }
      while (v17);
    }
    else
    {
      unsigned __int8 v15 = 0;
    }
    int v20 = 16 * v15;
    if (a3 != 4)
    {
      BOOL v25 = v20 == 2048 && v7 == 1;
      if (!v25 && v20)
      {
        if (v20 == 4080) {
          int v20 = 4095;
        }
        else {
          v20 |= 8 - (v15 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 8 * v3) = v20 ^ v8;
    if ((unint64_t)(result - v6 + (v4 << 6) - 121) < 0xFFFFFFFFFFFFFF7FLL)
    {
      unsigned __int8 v10 = 0;
    }
    else
    {
      unsigned __int8 v10 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 8;
      do
      {
        unint64_t v23 = 64 - result;
        if (64 - result >= v22) {
          unint64_t v23 = v22;
        }
        v10 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v23)) << v21;
        v21 += v23;
        unint64_t v24 = v23 + result;
        v4 += v24 >> 6;
        uint64_t result = v24 & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    int v11 = 16 * v10;
    int v12 = (8 - (v10 & 1)) | v11;
    if (v11 == 4080) {
      int v12 = 4095;
    }
    if (v11 == 2048 && v7 == 1 || v11 == 0) {
      int v12 = v11;
    }
    if (a3 == 4) {
      int v12 = v11;
    }
    *(_DWORD *)(a2 + 8 * v3++ + 4) = v12 ^ v8;
  }
  while (v3 != 8);
  return result;
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v193 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x7D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x7D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v188[0] = 12;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v178 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 127) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v178 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)2>::getDquadModeData(0, v12, v14, &v189);
  v192[0] = DquadModeData;
  v191[0] = 2;
  v188[1] = 12;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 127) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)2>::getDquadModeData(1, v11, v20, &v190);
  v192[1] = v24;
  v191[1] = 2;
  BOOL v26 = v24 < DquadModeData;
  unsigned int v27 = v24;
  int v28 = dword_242EA9688[10 * v24 + 6];
  int v185 = dword_242EA9688[10 * DquadModeData + 6];
  int v25 = v185;
  int v186 = v28;
  v187[0] = v185;
  v187[1] = v28;
  if (v192[v24 >= DquadModeData] == v192[v26])
  {
    int v29 = v185;
  }
  else
  {
    int v30 = *(_DWORD *)((unint64_t)v187 | (4 * v26));
    int v29 = v185;
    if (v30 >= 1)
    {
      *(_DWORD *)((unint64_t)&v185 | (4 * v26)) = 0;
      *(_DWORD *)((unint64_t)&v185 | (4 * (v24 >= DquadModeData))) += v30;
      int v29 = v185;
    }
  }
  uint64_t v31 = kDQuadParamTable;
  unsigned int v32 = &kDQuadParamTable[10 * DquadModeData];
  LODWORD(v33) = v32[324] + 2;
  int v34 = v32[325];
  unsigned int v35 = v34 + 2;
  int v36 = v29 - v25;
  if (v36 < 0)
  {
    if (kDQuadParamTable[10 * DquadModeData + 327] >= -v36) {
      goto LABEL_35;
    }
    unsigned int v35 = v34 + 1;
    if (kDQuadParamTable[10 * DquadModeData + 328]) {
      goto LABEL_35;
    }
    int v36 = -1;
  }
  else
  {
    if (!v36) {
      goto LABEL_35;
    }
    v35 += v36;
  }
  LODWORD(v33) = v36 + v33;
LABEL_35:
  if (v33 >= 0xC) {
    uint64_t v33 = 12;
  }
  else {
    uint64_t v33 = v33;
  }
  v184[0] = v33;
  if (v34) {
    LODWORD(v37) = 12;
  }
  else {
    LODWORD(v37) = 0;
  }
  if (v37 >= v35) {
    unint64_t v37 = v35;
  }
  else {
    unint64_t v37 = v37;
  }
  v183[0] = v37;
  unsigned int v38 = &kDQuadParamTable[10 * v24];
  LODWORD(v39) = v38[324] + 2;
  int v40 = v38[325];
  unsigned int v41 = v40 + 2;
  int v42 = v186 - v28;
  if (v42 < 0)
  {
    if (kDQuadParamTable[10 * v24 + 327] >= -v42) {
      goto LABEL_50;
    }
    unsigned int v41 = v40 + 1;
    if (kDQuadParamTable[10 * v24 + 328]) {
      goto LABEL_50;
    }
    int v42 = -1;
  }
  else
  {
    if (!v42) {
      goto LABEL_50;
    }
    v41 += v42;
  }
  LODWORD(v39) = v42 + v39;
LABEL_50:
  int v43 = v178 + v19;
  if (v39 >= 0xC) {
    uint64_t v39 = 12;
  }
  else {
    uint64_t v39 = v39;
  }
  v184[1] = v39;
  if (v40) {
    LODWORD(v44) = 12;
  }
  else {
    LODWORD(v44) = 0;
  }
  if (v44 >= v41) {
    unint64_t v44 = v41;
  }
  else {
    unint64_t v44 = v44;
  }
  v183[1] = v44;
  uint64_t v182 = 0;
  if (DquadModeData)
  {
    int v45 = 0;
    if (v33 && (unint64_t)(v10 - v6 + (v13 << 6) + v33) <= 0x80)
    {
      int v45 = 0;
      uint64_t v46 = 0;
      unint64_t v47 = v33;
      do
      {
        unint64_t v48 = 64 - v10;
        if (64 - v10 >= v47) {
          unint64_t v48 = v47;
        }
        v45 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v48)) << v46;
        v46 += v48;
        v13 += (v48 + v10) >> 6;
        uint64_t v10 = (v48 + v10) & 0x3F;
        v47 -= v48;
      }
      while (v47);
    }
    LODWORD(v182) = v45 << (12 - v33);
    v43 += v33;
    if (v27)
    {
LABEL_67:
      int v49 = 0;
      if (v39 && (unint64_t)(v10 - v6 + (v13 << 6) + v39) <= 0x80)
      {
        int v49 = 0;
        uint64_t v50 = 0;
        unint64_t v51 = v39;
        do
        {
          unint64_t v52 = 64 - v10;
          if (64 - v10 >= v51) {
            unint64_t v52 = v51;
          }
          v49 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v52)) << v50;
          v50 += v52;
          v13 += (v52 + v10) >> 6;
          uint64_t v10 = (v52 + v10) & 0x3F;
          v51 -= v52;
        }
        while (v51);
      }
      HIDWORD(v182) = v49 << (12 - v39);
      v43 += v39;
      uint64_t v181 = 0;
      if (!v37) {
        goto LABEL_84;
      }
      goto LABEL_77;
    }
  }
  else
  {
    LODWORD(v182) = v189;
    if (v24) {
      goto LABEL_67;
    }
  }
  HIDWORD(v182) = v190;
  uint64_t v181 = 0;
  if (v37)
  {
LABEL_77:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x80)
    {
      int v53 = 0;
      uint64_t v54 = 0;
      unint64_t v55 = 3;
      do
      {
        unint64_t v56 = 64 - v10;
        if (64 - v10 >= v55) {
          unint64_t v56 = v55;
        }
        v53 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v56)) << v54;
        v54 += v56;
        v13 += (v56 + v10) >> 6;
        uint64_t v10 = (v56 + v10) & 0x3F;
        v55 -= v56;
      }
      while (v55);
    }
    else
    {
      int v53 = 0;
    }
    LODWORD(v181) = v53;
    v43 += 3;
  }
LABEL_84:
  if (v44)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x80)
    {
      int v57 = 0;
      uint64_t v58 = 0;
      unint64_t v59 = 3;
      do
      {
        unint64_t v60 = 64 - v10;
        if (64 - v10 >= v59) {
          unint64_t v60 = v59;
        }
        v57 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v60)) << v58;
        v58 += v60;
        v13 += (v60 + v10) >> 6;
        uint64_t v10 = (v60 + v10) & 0x3F;
        v59 -= v60;
      }
      while (v59);
    }
    else
    {
      int v57 = 0;
    }
    HIDWORD(v181) = v57;
    v43 += 3;
  }
  uint64_t v61 = 0;
  unsigned int v62 = a3 & 0xFFFFFFFD;
  unsigned int v63 = 128 - v43;
  unsigned int v64 = (128 - v43) / 7u;
  unint64_t v65 = (v10 | (v13 << 6)) + v63 % 7;
  uint64_t v180 = 0;
  memset(v179, 0, sizeof(v179));
  do
  {
    unint64_t v67 = v65 >> 6;
    int64_t result = v65 & 0x3F;
    if (v37)
    {
      if (result - v6 + (v65 & 0xFFFFFFFFFFFFFFC0) + v37 <= 0x80)
      {
        int v69 = 0;
        uint64_t v70 = 0;
        unint64_t v71 = v37;
        do
        {
          unint64_t v72 = 64 - result;
          if (64 - result >= v71) {
            unint64_t v72 = v71;
          }
          v69 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v72)) << v70;
          v70 += v72;
          unint64_t v73 = v72 + result;
          v67 += v73 >> 6;
          int64_t result = v73 & 0x3F;
          v71 -= v72;
        }
        while (v71);
      }
      else
      {
        int v69 = 0;
      }
      *((_DWORD *)v179 + v61) = v69;
    }
    if (v44)
    {
      if (result - v6 + (v67 << 6) + v44 <= 0x80)
      {
        int v74 = 0;
        uint64_t v75 = 0;
        unint64_t v76 = v44;
        do
        {
          unint64_t v77 = 64 - result;
          if (64 - result >= v76) {
            unint64_t v77 = v76;
          }
          v74 |= (unint64_t)((*(void *)(v5 + 8 * v67) >> result) & ~(-1 << v77)) << v75;
          v75 += v77;
          unint64_t v78 = v77 + result;
          v67 += v78 >> 6;
          int64_t result = v78 & 0x3F;
          v76 -= v77;
        }
        while (v76);
      }
      else
      {
        int v74 = 0;
      }
      *((_DWORD *)&v179[1] + v61 + 3) = v74;
      int v66 = v44 + v37;
    }
    else
    {
      int v66 = v37;
    }
    unint64_t v65 = (result | (v67 << 6)) + v64 - v66;
    ++v61;
  }
  while (v61 != 7);
  char v79 = 0;
  uint64_t v80 = 0;
  do
  {
    char v85 = v79;
    unint64_t v86 = *(void *)&v31[160 * v191[v80] + 2 + 10 * v192[v80]];
    int v87 = v183[v80];
    if (v86 >> v87 <= 1) {
      unint64_t v88 = 1;
    }
    else {
      unint64_t v88 = v86 >> v87;
    }
    int v89 = v188[v80];
    unint64_t v90 = v88 >> 1;
    if (v88 >> 1 >= (unint64_t)(1 << (v89 - v184[v80])) >> 1) {
      unint64_t v91 = (unint64_t)(1 << (v89 - v184[v80])) >> 1;
    }
    else {
      unint64_t v91 = v88 >> 1;
    }
    unint64_t v92 = (1 << (v89 - 1));
    unint64_t v93 = v183[v80 - 2];
    unint64_t v94 = v92 - v93;
    unint64_t v95 = 1 << v89;
    int v96 = (1 << v89) - 1;
    if (v93) {
      unint64_t v97 = v91;
    }
    else {
      unint64_t v97 = 0;
    }
    BOOL v98 = v93 == v92;
    BOOL v99 = v89 == 16;
    if (v89 == 16) {
      unint64_t v100 = 31744;
    }
    else {
      unint64_t v100 = 2139095040;
    }
    if (v89 == 16) {
      unint64_t v101 = 64512;
    }
    else {
      unint64_t v101 = 4286578688;
    }
    unint64_t v102 = 2143289344;
    if (v99) {
      unint64_t v102 = 32256;
    }
    unint64_t v103 = 4290772992;
    if (v99) {
      unint64_t v103 = 65024;
    }
    unint64_t v104 = (v101 - 1);
    if (v87)
    {
      int64_t result = (int64_t)v31;
      unint64_t v105 = v86 + v93;
      uint64_t v106 = ~(-1 << v87);
      int v107 = *((_DWORD *)&v181 + v80);
      unint64_t v108 = v94 / v88;
      if (!v107)
      {
        uint64_t v116 = 0;
        unint64_t v111 = v97;
        BOOL v110 = v93 == v92;
        goto LABEL_177;
      }
      uint64_t v109 = *((unsigned int *)v179 + 7 * v80);
      BOOL v110 = v108 == v109;
      if (v93 | v109)
      {
        if (v105 >= v95 && v109 == v106)
        {
          uint64_t v116 = 1;
          unint64_t v111 = v95 - 1;
          goto LABEL_177;
        }
        unint64_t v111 = v90 + v88 * v109;
      }
      else
      {
        unint64_t v111 = 0;
      }
      uint64_t v116 = 1;
LABEL_177:
      unint64_t v117 = v111 + v93;
      unint64_t v118 = v117;
      if (a3 == 4)
      {
        BOOL v119 = v117 < v100 || v117 >= v102;
        unint64_t v118 = (v100 - 1);
        if (v119)
        {
          BOOL v120 = v117 < v102 || v117 >= v92;
          unint64_t v118 = v92;
          if (v120)
          {
            if (v117 < v103 && v117 >= v101) {
              unint64_t v118 = (v101 - 1);
            }
            else {
              unint64_t v118 = v117;
            }
          }
        }
      }
      if (v118 >= v95) {
        int v122 = v96;
      }
      else {
        int v122 = v118;
      }
      if (v110) {
        int v123 = 0;
      }
      else {
        int v123 = v122 ^ v92;
      }
      if (v62 != 1) {
        int v123 = v122;
      }
      *(_DWORD *)(a2 + 4 * v80) = v123;
      if (v107 == 1)
      {
        unint64_t v124 = v97;
        BOOL v125 = v93 == v92;
      }
      else
      {
        uint64_t v126 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v125 = v108 == v126;
        if (v93 | v126)
        {
          if (v105 < v95 || (unint64_t v124 = v95 - 1, v126 != v106)) {
            unint64_t v124 = v90 + v88 * v126;
          }
        }
        else
        {
          unint64_t v124 = 0;
        }
        ++v116;
      }
      unint64_t v127 = v124 + v93;
      unint64_t v128 = v127;
      if (a3 == 4)
      {
        BOOL v129 = v127 < v100 || v127 >= v102;
        unint64_t v128 = (v100 - 1);
        if (v129)
        {
          BOOL v130 = v127 < v102 || v127 >= v92;
          unint64_t v128 = v92;
          if (v130)
          {
            if (v127 < v103 && v127 >= v101) {
              unint64_t v128 = (v101 - 1);
            }
            else {
              unint64_t v128 = v127;
            }
          }
        }
      }
      if (v128 >= v95) {
        int v132 = v96;
      }
      else {
        int v132 = v128;
      }
      if (v125) {
        int v133 = 0;
      }
      else {
        int v133 = v132 ^ v92;
      }
      if (v62 != 1) {
        int v133 = v132;
      }
      *(_DWORD *)(a2 + 4 * v80 + 8) = v133;
      if (v107 == 2)
      {
        unint64_t v134 = v97;
        BOOL v135 = v93 == v92;
      }
      else
      {
        uint64_t v136 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v135 = v108 == v136;
        if (v93 | v136)
        {
          if (v105 < v95 || (unint64_t v134 = v95 - 1, v136 != v106)) {
            unint64_t v134 = v90 + v88 * v136;
          }
        }
        else
        {
          unint64_t v134 = 0;
        }
        ++v116;
      }
      unint64_t v137 = v134 + v93;
      unint64_t v138 = v137;
      if (a3 == 4)
      {
        if (v137 < v100 || (unint64_t v138 = (v100 - 1), v137 >= v102))
        {
          if (v137 < v102 || (unint64_t v138 = v92, v137 >= v92))
          {
            if (v137 < v103 && v137 >= v101) {
              unint64_t v138 = (v101 - 1);
            }
            else {
              unint64_t v138 = v137;
            }
          }
        }
      }
      if (v138 >= v95) {
        int v140 = v96;
      }
      else {
        int v140 = v138;
      }
      if (v135) {
        int v141 = 0;
      }
      else {
        int v141 = v140 ^ v92;
      }
      if (v62 != 1) {
        int v141 = v140;
      }
      *(_DWORD *)(a2 + 4 * v80 + 16) = v141;
      if (v107 == 3)
      {
        unint64_t v142 = v97;
        BOOL v143 = v93 == v92;
      }
      else
      {
        uint64_t v144 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v143 = v108 == v144;
        if (v93 | v144)
        {
          if (v105 < v95 || (unint64_t v142 = v95 - 1, v144 != v106)) {
            unint64_t v142 = v90 + v88 * v144;
          }
        }
        else
        {
          unint64_t v142 = 0;
        }
        ++v116;
      }
      unint64_t v145 = v142 + v93;
      unint64_t v146 = v145;
      if (a3 == 4)
      {
        if (v145 < v100 || (unint64_t v146 = (v100 - 1), v145 >= v102))
        {
          if (v145 < v102 || (unint64_t v146 = v92, v145 >= v92))
          {
            if (v145 < v103 && v145 >= v101) {
              unint64_t v146 = (v101 - 1);
            }
            else {
              unint64_t v146 = v145;
            }
          }
        }
      }
      if (v146 >= v95) {
        int v148 = v96;
      }
      else {
        int v148 = v146;
      }
      if (v143) {
        int v149 = 0;
      }
      else {
        int v149 = v148 ^ v92;
      }
      if (v62 != 1) {
        int v149 = v148;
      }
      *(_DWORD *)(a2 + 4 * v80 + 24) = v149;
      if (v107 == 4)
      {
        unint64_t v150 = v97;
        BOOL v151 = v93 == v92;
      }
      else
      {
        uint64_t v152 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v151 = v108 == v152;
        if (v93 | v152)
        {
          if (v105 < v95 || (unint64_t v150 = v95 - 1, v152 != v106)) {
            unint64_t v150 = v90 + v88 * v152;
          }
        }
        else
        {
          unint64_t v150 = 0;
        }
        ++v116;
      }
      unint64_t v153 = v150 + v93;
      unint64_t v154 = v153;
      if (a3 == 4)
      {
        if (v153 < v100 || (unint64_t v154 = (v100 - 1), v153 >= v102))
        {
          if (v153 < v102 || (unint64_t v154 = v92, v153 >= v92))
          {
            if (v153 < v103 && v153 >= v101) {
              unint64_t v154 = (v101 - 1);
            }
            else {
              unint64_t v154 = v153;
            }
          }
        }
      }
      if (v154 >= v95) {
        int v156 = v96;
      }
      else {
        int v156 = v154;
      }
      if (v151) {
        int v157 = 0;
      }
      else {
        int v157 = v156 ^ v92;
      }
      if (v62 != 1) {
        int v157 = v156;
      }
      *(_DWORD *)(a2 + 4 * v80 + 32) = v157;
      if (v107 == 5)
      {
        unint64_t v158 = v97;
        BOOL v159 = v93 == v92;
      }
      else
      {
        uint64_t v160 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v159 = v108 == v160;
        if (v93 | v160)
        {
          if (v105 < v95 || (unint64_t v158 = v95 - 1, v160 != v106)) {
            unint64_t v158 = v90 + v88 * v160;
          }
        }
        else
        {
          unint64_t v158 = 0;
        }
        ++v116;
      }
      unint64_t v161 = v158 + v93;
      unint64_t v162 = v161;
      if (a3 == 4)
      {
        if (v161 < v100 || (unint64_t v162 = (v100 - 1), v161 >= v102))
        {
          if (v161 < v102 || (unint64_t v162 = v92, v161 >= v92))
          {
            if (v161 < v103 && v161 >= v101) {
              unint64_t v162 = (v101 - 1);
            }
            else {
              unint64_t v162 = v161;
            }
          }
        }
      }
      if (v162 >= v95) {
        int v164 = v96;
      }
      else {
        int v164 = v162;
      }
      if (v159) {
        int v165 = 0;
      }
      else {
        int v165 = v164 ^ v92;
      }
      if (v62 != 1) {
        int v165 = v164;
      }
      *(_DWORD *)(a2 + 4 * v80 + 40) = v165;
      if (v107 == 6)
      {
        unint64_t v166 = v97;
        BOOL v167 = v93 == v92;
      }
      else
      {
        uint64_t v168 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v167 = v108 == v168;
        if (v93 | v168)
        {
          if (v105 < v95 || (unint64_t v166 = v95 - 1, v168 != v106)) {
            unint64_t v166 = v90 + v88 * v168;
          }
        }
        else
        {
          unint64_t v166 = 0;
        }
        ++v116;
      }
      unint64_t v169 = v166 + v93;
      unint64_t v170 = v169;
      if (a3 == 4)
      {
        if (v169 < v100 || (unint64_t v170 = (v100 - 1), v169 >= v102))
        {
          if (v169 < v102 || (unint64_t v170 = v92, v169 >= v92))
          {
            if (v169 < v103 && v169 >= v101) {
              unint64_t v170 = (v101 - 1);
            }
            else {
              unint64_t v170 = v169;
            }
          }
        }
      }
      if (v170 >= v95) {
        int v172 = v96;
      }
      else {
        int v172 = v170;
      }
      if (v167) {
        int v173 = 0;
      }
      else {
        int v173 = v172 ^ v92;
      }
      if (v62 != 1) {
        int v173 = v172;
      }
      *(_DWORD *)(a2 + 4 * v80 + 48) = v173;
      if (v107 != 7)
      {
        uint64_t v174 = *((unsigned int *)v179 + 7 * v80 + v116);
        BOOL v98 = v108 == v174;
        if (v93 | v174)
        {
          if (v105 >= v95 && v174 == v106) {
            unint64_t v97 = v95 - 1;
          }
          else {
            unint64_t v97 = v90 + v88 * v174;
          }
        }
        else
        {
          unint64_t v97 = 0;
        }
      }
      unint64_t v175 = v97 + v93;
      unint64_t v82 = v175;
      if (a3 == 4)
      {
        if (v175 < v100 || (unint64_t v82 = (v100 - 1), v175 >= v102))
        {
          if (v175 < v102 || (unint64_t v82 = v92, v175 >= v92))
          {
            if (v175 < v103 && v175 >= v101) {
              unint64_t v82 = (v101 - 1);
            }
            else {
              unint64_t v82 = v175;
            }
          }
        }
      }
      if (v82 >= v95) {
        int v83 = v96;
      }
      else {
        int v83 = v82;
      }
      int v84 = v83 ^ v92;
      if (v98) {
        int v84 = 0;
      }
      if (v62 == 1) {
        int v83 = v84;
      }
      uint64_t v31 = (_DWORD *)result;
      goto LABEL_126;
    }
    BOOL v113 = v102 <= v93 && v93 < v92;
    BOOL v115 = v93 >= v101 && v103 > v93;
    if (a3 == 4)
    {
      if (v93 < v100 || v102 <= v93)
      {
        if (v113)
        {
          if (v95 <= v92) {
            int v83 = v96;
          }
          else {
            int v83 = v92;
          }
        }
        else
        {
          if (v115) {
            unint64_t v93 = v104;
          }
          if (v93 >= v95) {
            int v83 = v96;
          }
          else {
            int v83 = v93;
          }
        }
      }
      else if (v95 <= (v100 - 1))
      {
        int v83 = v96;
      }
      else
      {
        int v83 = v100 - 1;
      }
    }
    else if (v95 <= v93)
    {
      int v83 = v96;
    }
    else
    {
      int v83 = v183[v80 - 2];
    }
    int v176 = v83 ^ v92;
    if (v88 > v94) {
      int v176 = 0;
    }
    if (v62 == 1) {
      int v83 = v176;
    }
    int16x8_t v177 = (_DWORD *)(a2 + 4 * v80);
    *int16x8_t v177 = v83;
    v177[2] = v83;
    v177[4] = v83;
    v177[6] = v83;
    v177[8] = v83;
    v177[10] = v83;
    v177[12] = v83;
LABEL_126:
    *(_DWORD *)(a2 + 4 * v80 + 56) = v83;
    char v79 = 1;
    uint64_t v80 = 1;
  }
  while ((v85 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int32x4_t a6, int32x4_t a7)
{
  uint64_t v446 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v12 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    uint64_t v13 = (_OWORD *)(a1 + a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)(a1 + 2 * a2);
    *char v14 = 0u;
    v14[1] = 0u;
    uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
LABEL_6:
    _OWORD *v15 = v12;
    v15[1] = v12;
    return result;
  }
  char v9 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v431, a5);
    }
    int v401 = HIDWORD(v431);
    __int16 v402 = v431;
    int v403 = v433;
    __int16 v404 = v432;
    int v417 = v435;
    __int16 v418 = v434;
    int v419 = v437;
    __int16 v420 = v436;
    int v397 = v439;
    __int16 v398 = v438;
    int v399 = v441;
    __int16 v400 = v440;
    int v415 = v443;
    __int16 v416 = v442;
    uint64_t v20 = a3 + 16;
    __int16 v413 = v444;
    int v414 = v445;
    if ((v9 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v431, a5);
    }
    int v409 = HIDWORD(v431);
    __int16 v410 = v431;
    int v411 = v433;
    __int16 v412 = v432;
    int v425 = v435;
    __int16 v426 = v434;
    int v427 = v437;
    __int16 v428 = v436;
    int v405 = v439;
    __int16 v406 = v438;
    int v407 = v441;
    __int16 v408 = v440;
    int v423 = v443;
    __int16 v424 = v442;
    uint64_t v21 = a3 + 32;
    __int16 v421 = v444;
    int v422 = v445;
    if ((v9 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v431, a5);
    }
    __int16 v23 = v431;
    int v22 = HIDWORD(v431);
    __int16 v24 = v432;
    int v393 = v435;
    __int16 v394 = v434;
    __int16 v25 = v438;
    int v395 = v437;
    __int16 v396 = v436;
    int v26 = v439;
    __int16 v27 = v440;
    int v28 = v441;
    int v391 = v443;
    __int16 v392 = v442;
    uint64_t v29 = a3 + 48;
    __int16 v30 = v444;
    int v389 = v433;
    int v390 = v445;
    if ((v9 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v431, a5);
    }
    *(_DWORD *)a1 = (16 * (v402 & 0xFFF)) | (v401 << 20);
    *(_DWORD *)(a1 + 4) = (16 * (v404 & 0xFFF)) | (v403 << 20);
    *(_DWORD *)(a1 + 8) = (16 * (v398 & 0xFFF)) | (v397 << 20);
    *(_DWORD *)(a1 + 12) = (16 * (v400 & 0xFFF)) | (v399 << 20);
    *(_DWORD *)(a1 + 16) = (16 * (v23 & 0xFFF)) | (v22 << 20);
    *(_DWORD *)(a1 + 20) = (16 * (v24 & 0xFFF)) | (v389 << 20);
    *(_DWORD *)(a1 + 24) = (16 * (v25 & 0xFFF)) | (v26 << 20);
    *(_DWORD *)(a1 + 28) = (16 * (v27 & 0xFFF)) | (v28 << 20);
    uint64_t v31 = (int *)(a1 + a2);
    *uint64_t v31 = (16 * (v418 & 0xFFF)) | (v417 << 20);
    v31[1] = (16 * (v420 & 0xFFF)) | (v419 << 20);
    v31[2] = (16 * (v416 & 0xFFF)) | (v415 << 20);
    v31[3] = (16 * (v413 & 0xFFF)) | (v414 << 20);
    v31[4] = (16 * (v394 & 0xFFF)) | (v393 << 20);
    v31[5] = (16 * (v396 & 0xFFF)) | (v395 << 20);
    v31[6] = (16 * (v392 & 0xFFF)) | (v391 << 20);
    v31[7] = (16 * (v30 & 0xFFF)) | (v390 << 20);
    unsigned int v32 = (int *)(a1 + a2 + a2);
    *unsigned int v32 = (16 * (v410 & 0xFFF)) | (v409 << 20);
    v32[1] = (16 * (v412 & 0xFFF)) | (v411 << 20);
    v32[2] = (16 * (v406 & 0xFFF)) | (v405 << 20);
    v32[3] = (16 * (v408 & 0xFFF)) | (v407 << 20);
    int v33 = (16 * (v432 & 0xFFF)) | (v433 << 20);
    v32[4] = (16 * (v431 & 0xFFF)) | (HIDWORD(v431) << 20);
    v32[5] = v33;
    int v34 = (16 * (v440 & 0xFFF)) | (v441 << 20);
    v32[6] = (16 * (v438 & 0xFFF)) | (v439 << 20);
    v32[7] = v34;
    unsigned int v35 = (int *)((char *)v32 + a2);
    int *v35 = (16 * (v426 & 0xFFF)) | (v425 << 20);
    v35[1] = (16 * (v428 & 0xFFF)) | (v427 << 20);
    v35[2] = (16 * (v424 & 0xFFF)) | (v423 << 20);
    v35[3] = (16 * (v421 & 0xFFF)) | (v422 << 20);
    LODWORD(v32) = (16 * (v436 & 0xFFF)) | (v437 << 20);
    v35[4] = (16 * (v434 & 0xFFF)) | (v435 << 20);
    v35[5] = (int)v32;
    LODWORD(v32) = (16 * (v444 & 0xFFF)) | (v445 << 20);
    v35[6] = (16 * (v442 & 0xFFF)) | (v443 << 20);
    v35[7] = (int)v32;
    return 64;
  }
  switch(a4)
  {
    case 0x7Fu:
      int64x2_t v36 = *(int64x2_t *)a3;
      int64x2_t v37 = *(int64x2_t *)(a3 + 16);
      int64x2_t v38 = *(int64x2_t *)(a3 + 32);
      int64x2_t v39 = *(int64x2_t *)(a3 + 48);
      int64x2_t v40 = *(int64x2_t *)(a3 + 64);
      int64x2_t v41 = *(int64x2_t *)(a3 + 80);
      int64x2_t v42 = *(int64x2_t *)(a3 + 96);
      int64x2_t v43 = *(int64x2_t *)(a3 + 112);
      unint64_t v44 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v37);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v40, v41);
      int v45 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v44 = vzip2q_s64(v36, v37);
      v44[1] = vzip2q_s64(v40, v41);
      *int v45 = vzip1q_s64(v38, v39);
      v45[1] = vzip1q_s64(v42, v43);
      uint64_t v46 = (int64x2_t *)((char *)v45 + a2);
      *uint64_t v46 = vzip2q_s64(v38, v39);
      v46[1] = vzip2q_s64(v42, v43);
      return 128;
    case 0x5Fu:
      v47.i64[0] = 0xC000C000C000CLL;
      v47.i64[1] = 0xC000C000C000CLL;
      int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v47, v47));
      v47.i64[0] = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
      v49.i64[0] = v47.u32[0];
      v49.i64[1] = v47.u32[1];
      int64x2_t v50 = v49;
      unint64_t v51 = vaddvq_s64(v49);
      int64x2_t v52 = 0uLL;
      if (v51 <= 0x80)
      {
        char v85 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v86 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
        v87.i64[0] = v86.u32[0];
        v87.i64[1] = v86.u32[1];
        int64x2_t v88 = v87;
        int64x2_t v89 = vzip1q_s64((int64x2_t)0, v50);
        unint64_t v90 = 8 * (a3 & 7);
        unint64_t v91 = v51 + v90;
        int64x2_t v92 = vaddq_s64(v89, vdupq_n_s64(v90));
        int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v92)));
        if (v51 + v90 > 0x80) {
          int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v92))), v93);
        }
        uint64x2_t v94 = (uint64x2_t)vnegq_s64(v88);
        int64x2_t v95 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v94);
        *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
        *(int32x2_t *)v95.i8 = vmovn_s64(v95);
        unint64_t v96 = v91 & 0x3F;
        unint64_t v97 = (int64x2_t *)((char *)v85 + 8 * (v91 >> 6));
        int8x16_t v98 = (int8x16_t)vaddq_s64(v89, vdupq_n_s64(v96));
        unint64_t v99 = v51 + v91;
        int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v97, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v98)));
        if (v51 + v96 >= 0x81)
        {
          int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v97[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v98)));
          int8x16_t v100 = vorrq_s8(v98, v100);
        }
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v100, v94);
        *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v100);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        unint64_t v102 = v99 & 0x3F;
        unint64_t v103 = (int64x2_t *)((char *)v85 + 8 * (v99 >> 6));
        int64x2_t v104 = vaddq_s64(v89, vdupq_n_s64(v102));
        unint64_t v105 = v51 + v99;
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v103, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
        if (v51 + v102 > 0x80) {
          int8x16_t v106 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v103[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v106);
        }
        int16x8_t v107 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v95);
        int16x8_t v108 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v101);
        int64x2_t v109 = (int64x2_t)vshlq_u64((uint64x2_t)v106, v94);
        *(int32x2_t *)v95.i8 = vmovn_s64((int64x2_t)v106);
        *(int32x2_t *)v109.i8 = vmovn_s64(v109);
        int16x8_t v110 = (int16x8_t)vzip1q_s32((int32x4_t)v95, (int32x4_t)v109);
        unint64_t v111 = v105 & 0x3F;
        char v112 = (int64x2_t *)((char *)v85 + 8 * (v105 >> 6));
        int64x2_t v113 = vaddq_s64(v89, vdupq_n_s64(v111));
        int8x16_t v114 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113));
        unint64_t v115 = v51 + v105;
        int64x2_t v116 = vsubq_s64(vdupq_n_s64(0x40uLL), v113);
        int8x16_t v117 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)v116);
        int8x16_t v118 = vorrq_s8(v117, v114);
        if (v51 + v111 >= 0x81)
        {
          int64x2_t v119 = v112[1];
          uint64x2_t v120 = (uint64x2_t)vdupq_lane_s64(v119.i64[0], 0);
          int8x16_t v117 = (int8x16_t)vdupq_laneq_s64(v119, 1);
          int8x16_t v114 = (int8x16_t)vshlq_u64(v120, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113));
          int64x2_t v116 = vdupq_n_s64(0xC0uLL);
          int8x16_t v118 = vorrq_s8(vorrq_s8(v114, (int8x16_t)vshlq_u64((uint64x2_t)v117, (uint64x2_t)vsubq_s64(v116, v113))), v118);
        }
        v121.i64[0] = 0x1000100010001;
        v121.i64[1] = 0x1000100010001;
        *(int16x4_t *)v117.i8 = vmovn_s32((int32x4_t)v107);
        *(int16x4_t *)v107.i8 = vshrn_n_s32((int32x4_t)v107, 0xCuLL);
        *(int16x4_t *)v114.i8 = vmovn_s32((int32x4_t)v108);
        *(int16x4_t *)v108.i8 = vshrn_n_s32((int32x4_t)v108, 0xCuLL);
        *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v110);
        *(int16x4_t *)v110.i8 = vshrn_n_s32((int32x4_t)v110, 0xCuLL);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v118, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v118);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v122);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xCuLL);
        unint64_t v124 = v115 & 0x3F;
        BOOL v125 = (int64x2_t *)((char *)v85 + 8 * (v115 >> 6));
        int64x2_t v126 = vaddq_s64(v89, vdupq_n_s64(v124));
        unint64_t v127 = v51 + v115;
        int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v125, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
        if (v51 + v124 > 0x80) {
          int8x16_t v128 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v125[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), v128);
        }
        int16x8_t v129 = vshlq_n_s16(v121, 0xCuLL);
        v130.i64[0] = -1;
        v130.i64[1] = -1;
        int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v128, v94);
        *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
        *(int32x2_t *)v131.i8 = vmovn_s64(v131);
        int16x8_t v132 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v131);
        *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v132);
        *(int16x4_t *)v132.i8 = vshrn_n_s32((int32x4_t)v132, 0xCuLL);
        int v133 = (int64x2_t *)((char *)v85 + 8 * (v127 >> 6));
        int64x2_t v134 = vaddq_s64(v89, vdupq_n_s64(v127 & 0x3F));
        unint64_t v135 = v51 + v127;
        int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
        if (v51 + (v127 & 0x3F) >= 0x81) {
          int8x16_t v136 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v134))), v136);
        }
        int8x16_t v137 = (int8x16_t)vaddq_s16(v129, v130);
        int8x16_t v138 = (int8x16_t)vzip1q_s16((int16x8_t)v117, v107);
        int8x16_t v139 = (int8x16_t)vzip1q_s16((int16x8_t)v114, v108);
        int8x16_t v140 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v110);
        int8x16_t v141 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v123);
        int8x16_t v142 = (int8x16_t)vzip1q_s16((int16x8_t)v128, v132);
        int64x2_t v143 = (int64x2_t)vshlq_u64((uint64x2_t)v136, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v136);
        *(int32x2_t *)v143.i8 = vmovn_s64(v143);
        int16x8_t v144 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v143);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v144);
        *(int16x4_t *)v144.i8 = vshrn_n_s32((int32x4_t)v144, 0xCuLL);
        int8x16_t v145 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v144);
        unint64_t v146 = v51 + v135;
        unint64_t v147 = v135 & 0x3F;
        int64x2_t v148 = vaddq_s64(v89, vdupq_n_s64(v147));
        int v149 = (int64x2_t *)((char *)v85 + 8 * (v135 >> 6));
        int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
        if (v51 + v147 > 0x80) {
          int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v150);
        }
        int16x8_t v151 = (int16x8_t)vandq_s8(v138, v137);
        int16x8_t v152 = (int16x8_t)vandq_s8(v139, v137);
        int16x8_t v153 = (int16x8_t)vandq_s8(v140, v137);
        int16x8_t v154 = (int16x8_t)vandq_s8(v141, v137);
        int16x8_t v155 = (int16x8_t)vandq_s8(v142, v137);
        int16x8_t v156 = (int16x8_t)vandq_s8(v145, v137);
        int64x2_t v157 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v94);
        *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
        *(int32x2_t *)v157.i8 = vmovn_s64(v157);
        int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v150, (int32x4_t)v157);
        *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v158);
        *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xCuLL);
        BOOL v159 = (int64x2_t *)((char *)v85 + 8 * (v146 >> 6));
        int64x2_t v160 = vaddq_s64(v89, vdupq_n_s64(v146 & 0x3F));
        int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v150, v158), v137);
        int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v160)));
        if (v51 + (v146 & 0x3F) >= 0x81) {
          int8x16_t v162 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v159[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v160))), v162);
        }
        int64x2_t v54 = (int64x2_t)vshlq_n_s16(v151, 4uLL);
        int64x2_t v55 = (int64x2_t)vshlq_n_s16(v152, 4uLL);
        int64x2_t v57 = (int64x2_t)vshlq_n_s16(v153, 4uLL);
        int64x2_t v56 = (int64x2_t)vshlq_n_s16(v154, 4uLL);
        int64x2_t v52 = (int64x2_t)vshlq_n_s16(v155, 4uLL);
        int64x2_t v53 = (int64x2_t)vshlq_n_s16(v156, 4uLL);
        int64x2_t v163 = (int64x2_t)vshlq_u64((uint64x2_t)v162, v94);
        *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v162);
        *(int32x2_t *)v163.i8 = vmovn_s64(v163);
        int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v154, (int32x4_t)v163);
        *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v164);
        *(int16x4_t *)v164.i8 = vshrn_n_s32((int32x4_t)v164, 0xCuLL);
        int16x8_t v165 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v154, v164), v137);
        int64x2_t v59 = (int64x2_t)vshlq_n_s16(v161, 4uLL);
        int64x2_t v58 = (int64x2_t)vshlq_n_s16(v165, 4uLL);
      }
      else
      {
        int64x2_t v53 = 0uLL;
        int64x2_t v54 = 0uLL;
        int64x2_t v55 = 0uLL;
        int64x2_t v56 = 0uLL;
        int64x2_t v57 = 0uLL;
        int64x2_t v58 = 0uLL;
        int64x2_t v59 = 0uLL;
      }
      unint64_t v166 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v54, v55);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v52, v53);
      BOOL v167 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v166 = vzip2q_s64(v54, v55);
      v166[1] = vzip2q_s64(v52, v53);
      *BOOL v167 = vzip1q_s64(v57, v56);
      v167[1] = vzip1q_s64(v59, v58);
      uint64_t v168 = (int64x2_t *)((char *)v167 + a2);
      *uint64_t v168 = vzip2q_s64(v57, v56);
      v168[1] = vzip2q_s64(v59, v58);
      return 96;
    case 2u:
      int32x4_t v16 = vdupq_n_s32((*(_DWORD *)a3 << 8) & 0xFFF00000 | (16 * (*(_DWORD *)a3 & 0xFFF)));
      *(int32x4_t *)a1 = v16;
      *(int32x4_t *)(a1 + 16) = v16;
      unint64_t v17 = (int32x4_t *)(a1 + a2);
      *unint64_t v17 = v16;
      v17[1] = v16;
      unint64_t v18 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v18 = v16;
      v18[1] = v16;
      int v19 = (int32x4_t *)(a1 + a2 + 2 * a2);
      *int v19 = v16;
      v19[1] = v16;
      return 3;
    default:
      unint64_t v60 = 8 * (a3 & 7);
      unint64_t v61 = a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = v60 + 18;
      uint64_t v63 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v60;
      if (v60 >= 0x2F) {
        v63 |= *(void *)(v61 + 8) << (-8 * (a3 & 7u));
      }
      a6.i32[0] = v63;
      a6.i32[1] = (unsigned __int16)v63 >> 5;
      *(int8x8_t *)a6.i8 = vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0x1F0000001FLL);
      *(int16x4_t *)a6.i8 = vmovn_s32(a6);
      a7.i32[0] = (unsigned __int16)v63 >> 10;
      a7.i32[1] = v63 >> 14;
      *(int32x2_t *)a7.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a7.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
      *(int16x4_t *)a7.i8 = vmovn_s32(a7);
      unint64_t v64 = v60 + 42;
      unint64_t v65 = v62 >> 6;
      unint64_t v66 = v62 & 0x3A;
      uint64_t v67 = *(void *)(v61 + 8 * v65) >> v66;
      if (v66 >= 0x29) {
        v67 |= *(void *)(v61 + 8 * v65 + 8) << -(char)v66;
      }
      int8x16_t v68 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
      int8x16_t v69 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a7.i8, 0);
      unint64_t v70 = (8 * (a3 & 7)) | 0x200;
      v71.i64[0] = 0x3000300030003;
      v71.i64[1] = 0x3000300030003;
      int16x8_t v72 = (int16x8_t)vandq_s8(v68, v71);
      int8x16_t v73 = vbicq_s8(v69, (int8x16_t)vceqq_s16(v72, (int16x8_t)v71));
      v71.i64[0] = 0x202020202020202;
      v71.i64[1] = 0x202020202020202;
      int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v68.i8, (int8x8_t)0x4000400040004)))), v71);
      if (vmaxvq_s8(v74) < 1)
      {
        int v84 = 0;
        v169.i64[0] = -1;
        v169.i64[1] = -1;
        int8x16_t v170 = v73;
        int8x16_t v171 = v73;
        int8x16_t v172 = v73;
        v173.i64[0] = -1;
        v173.i64[1] = -1;
        int8x16_t v174 = v73;
        v175.i64[0] = -1;
        v175.i64[1] = -1;
        v176.i64[0] = -1;
        v176.i64[1] = -1;
      }
      else
      {
        int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
        int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
        unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
        v78.i64[0] = v77;
        v78.i64[1] = HIDWORD(v77);
        int64x2_t v79 = v78;
        unint64_t v80 = vaddvq_s64(v78);
        unint64_t v81 = v64 + v80;
        if (v80 <= 0x80 && v70 >= v81)
        {
          unint64_t v177 = v64 & 0x3A;
          int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v79));
          uint64_t v179 = (int64x2_t *)(v61 + ((v64 >> 3) & 8));
          int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
          if (v177 + v80 < 0x81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = 0;
            int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v83);
          }
          unint64_t v64 = v81;
        }
        else
        {
          int8x16_t v83 = 0uLL;
          int v84 = 1;
        }
        int32x2_t v180 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
        v181.i64[0] = v180.u32[0];
        v181.i64[1] = v180.u32[1];
        int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v181));
        *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
        *(int32x2_t *)v182.i8 = vmovn_s64(v182);
        int8x16_t v183 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v182);
        int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v183, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
        *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
        *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
        int16x8_t v185 = vzip1q_s16((int16x8_t)v183, v184);
        v183.i64[0] = 0x101010101010101;
        v183.i64[1] = 0x101010101010101;
        *(int8x8_t *)v186.i8 = vand_s8(vzip1_s8(vmovn_s16(v185), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v185, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v68.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v183, v74), (int8x8_t)-1));
        v186.i64[1] = v186.i64[0];
        *(int8x8_t *)v186.i8 = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
        *(int16x4_t *)v185.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 0);
        *(int16x4_t *)v183.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 1);
        int8x8_t v187 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 2);
        int8x8_t v188 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 3);
        int8x16_t v174 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v185.i8);
        int8x16_t v172 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v183.i8);
        int8x16_t v171 = (int8x16_t)vsubw_s8((int16x8_t)v73, v187);
        int8x16_t v170 = (int8x16_t)vsubw_s8((int16x8_t)v73, v188);
        int8x16_t v176 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v185.i8));
        int8x16_t v175 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v183.i8));
        int8x16_t v173 = (int8x16_t)vmovl_s8(vceqz_s8(v187));
        int8x16_t v169 = (int8x16_t)vmovl_s8(vceqz_s8(v188));
      }
      v189.i64[0] = 0x8000800080008;
      v189.i64[1] = 0x8000800080008;
      int8x16_t v190 = 0uLL;
      int8x16_t v191 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v68, v189), (int8x16_t)0, 0xCuLL), v73);
      int8x16_t v192 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v191, (int16x8_t)v191));
      v189.i64[0] = vpaddq_s32((int32x4_t)v192, (int32x4_t)v192).u64[0];
      v193.i64[0] = v189.u32[0];
      v193.i64[1] = v189.u32[1];
      int64x2_t v194 = v193;
      unint64_t v195 = vaddvq_s64(v193);
      unint64_t v196 = v64 + v195;
      if (v195 <= 0x80 && v70 >= v196)
      {
        unint64_t v198 = v64 & 0x3F;
        int64x2_t v199 = vaddq_s64(vdupq_n_s64(v198), vzip1q_s64((int64x2_t)0, v194));
        unint64_t v200 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v190 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v200, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200->i64[0], 0), (uint64x2_t)vnegq_s64(v199)));
        if (v198 + v195 >= 0x81) {
          int8x16_t v190 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v200[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v199))), v190);
        }
        unint64_t v64 = v196;
      }
      else
      {
        int v84 = 1;
      }
      int v201 = v68.i8[0] & 3;
      if (v201 == 2)
      {
        BOOL v202 = v70 < v64 + 8;
        unint64_t v203 = v64 + 16;
        if (v70 >= v64 + 8) {
          v64 += 8;
        }
        if (v203 > v70 || v202) {
          int v84 = 1;
        }
        else {
          v64 += 8;
        }
      }
      int8x16_t v205 = 0uLL;
      int8x16_t v206 = vextq_s8((int8x16_t)0, v174, 0xCuLL);
      int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v206, (int16x8_t)v206));
      unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
      v209.i64[0] = v208;
      v209.i64[1] = HIDWORD(v208);
      int64x2_t v210 = v209;
      unint64_t v211 = vaddvq_s64(v209);
      unint64_t v212 = v64 + v211;
      if (v211 <= 0x80 && v70 >= v212)
      {
        unint64_t v215 = v64 & 0x3F;
        int64x2_t v216 = vaddq_s64(vdupq_n_s64(v215), vzip1q_s64((int64x2_t)0, v210));
        unint64_t v217 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v217, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217->i64[0], 0), (uint64x2_t)vnegq_s64(v216)));
        if (v215 + v211 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v217[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v216))), v214);
        }
        unint64_t v64 = v212;
      }
      else
      {
        int v84 = 1;
        int8x16_t v214 = 0uLL;
      }
      int8x16_t v218 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v174, (int16x8_t)v174));
      unint64_t v219 = vpaddq_s32((int32x4_t)v218, (int32x4_t)v218).u64[0];
      v220.i64[0] = v219;
      v220.i64[1] = HIDWORD(v219);
      int64x2_t v221 = v220;
      unint64_t v222 = vaddvq_s64(v220);
      unint64_t v223 = v64 + v222;
      if (v222 <= 0x80 && v70 >= v223)
      {
        unint64_t v225 = v64 & 0x3F;
        int64x2_t v226 = vaddq_s64(vdupq_n_s64(v225), vzip1q_s64((int64x2_t)0, v221));
        unint64_t v227 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v226)));
        if (v225 + v222 >= 0x81) {
          int8x16_t v205 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v226))), v205);
        }
        unint64_t v64 = v223;
      }
      else
      {
        int v84 = 1;
      }
      int8x16_t v228 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v172, (int16x8_t)v172));
      unint64_t v229 = vpaddq_s32((int32x4_t)v228, (int32x4_t)v228).u64[0];
      v230.i64[0] = v229;
      v230.i64[1] = HIDWORD(v229);
      int64x2_t v231 = v230;
      unint64_t v232 = vaddvq_s64(v230);
      unint64_t v233 = v64 + v232;
      int8x16_t v234 = 0uLL;
      if (v232 <= 0x80 && v70 >= v233)
      {
        unint64_t v237 = v64 & 0x3F;
        int64x2_t v238 = vaddq_s64(vdupq_n_s64(v237), vzip1q_s64((int64x2_t)0, v231));
        BOOL v239 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v236 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v239, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239->i64[0], 0), (uint64x2_t)vnegq_s64(v238)));
        if (v237 + v232 >= 0x81) {
          int8x16_t v236 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v239[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v238))), v236);
        }
        unint64_t v64 = v233;
      }
      else
      {
        int v84 = 1;
        int8x16_t v236 = 0uLL;
      }
      if (v232 > 0x80 || (unint64_t v240 = v64 + v232, v70 < v64 + v232))
      {
        int v84 = 1;
        unint64_t v240 = v64;
      }
      else
      {
        unint64_t v241 = v64 & 0x3F;
        int64x2_t v242 = vaddq_s64(vdupq_n_s64(v241), vzip1q_s64((int64x2_t)0, v231));
        unsigned int v243 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v234 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v243, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243->i64[0], 0), (uint64x2_t)vnegq_s64(v242)));
        if (v241 + v232 >= 0x81) {
          int8x16_t v234 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v243[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v242))), v234);
        }
      }
      int8x16_t v244 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v171, (int16x8_t)v171));
      unint64_t v245 = vpaddq_s32((int32x4_t)v244, (int32x4_t)v244).u64[0];
      v246.i64[0] = v245;
      v246.i64[1] = HIDWORD(v245);
      int64x2_t v247 = v246;
      unint64_t v248 = vaddvq_s64(v246);
      int8x16_t v249 = 0uLL;
      if (v248 > 0x80 || (unint64_t v250 = v240 + v248, v70 < v240 + v248))
      {
        int v84 = 1;
        unint64_t v250 = v240;
        int8x16_t v253 = 0uLL;
      }
      else
      {
        int64x2_t v251 = vaddq_s64(vdupq_n_s64(v240 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        unsigned int v252 = (int64x2_t *)(v61 + 8 * (v240 >> 6));
        int8x16_t v253 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v252, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252->i64[0], 0), (uint64x2_t)vnegq_s64(v251)));
        if ((v240 & 0x3F) + v248 >= 0x81) {
          int8x16_t v253 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v252[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v251))), v253);
        }
      }
      if (v248 > 0x80 || (unint64_t v254 = v250 + v248, v70 < v250 + v248))
      {
        int v84 = 1;
        unint64_t v254 = v250;
      }
      else
      {
        int64x2_t v255 = vaddq_s64(vdupq_n_s64(v250 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v256 = (int64x2_t *)(v61 + 8 * (v250 >> 6));
        int8x16_t v249 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v256, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256->i64[0], 0), (uint64x2_t)vnegq_s64(v255)));
        if ((v250 & 0x3F) + v248 >= 0x81) {
          int8x16_t v249 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v256[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v255))), v249);
        }
      }
      int8x16_t v257 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
      unint64_t v258 = vpaddq_s32((int32x4_t)v257, (int32x4_t)v257).u64[0];
      v259.i64[0] = v258;
      v259.i64[1] = HIDWORD(v258);
      int64x2_t v260 = v259;
      unint64_t v261 = vaddvq_s64(v259);
      int8x16_t v262 = 0uLL;
      if (v261 > 0x80 || (unint64_t v263 = v254 + v261, v70 < v254 + v261))
      {
        int v84 = 1;
        unint64_t v263 = v254;
        int8x16_t v267 = 0uLL;
      }
      else
      {
        unint64_t v264 = v254 & 0x3F;
        int64x2_t v265 = vaddq_s64(vdupq_n_s64(v264), vzip1q_s64((int64x2_t)0, v260));
        int v266 = (int64x2_t *)(v61 + 8 * (v254 >> 6));
        int8x16_t v267 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v266, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266->i64[0], 0), (uint64x2_t)vnegq_s64(v265)));
        if (v264 + v261 >= 0x81) {
          int8x16_t v267 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v266[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v265))), v267);
        }
      }
      if (v261 > 0x80 || (unint64_t v268 = v263 + v261, v70 < v263 + v261))
      {
        int v84 = 1;
        unint64_t v268 = v263;
      }
      else
      {
        int64x2_t v269 = vaddq_s64(vdupq_n_s64(v263 & 0x3F), vzip1q_s64((int64x2_t)0, v260));
        unsigned int v270 = (int64x2_t *)(v61 + 8 * (v263 >> 6));
        int8x16_t v262 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v270, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270->i64[0], 0), (uint64x2_t)vnegq_s64(v269)));
        if ((v263 & 0x3F) + v261 >= 0x81) {
          int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v270[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v269))), v262);
        }
      }
      if (v84 || (uint64_t result = a4 + 1, v70 + 8 * result - v268 - 512 >= 9) || v201 == 2)
      {
        uint64_t result = 0;
        v431 |= 4095 << ((8 * &v431) & 0x20);
        long long v12 = 0uLL;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        int32x4_t v271 = (_OWORD *)(a1 + a2);
        *int32x4_t v271 = 0u;
        v271[1] = 0u;
        unsigned int v272 = (_OWORD *)(a1 + 2 * a2);
        uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
        *unsigned int v272 = 0u;
        v272[1] = 0u;
        goto LABEL_6;
      }
      int32x2_t v273 = vzip1_s32(*(int32x2_t *)v192.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v192, v192, 8uLL));
      int32x2_t v274 = vzip1_s32(*(int32x2_t *)v228.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v228, v228, 8uLL));
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      int64x2_t v276 = v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)vnegq_s64(v276);
      uint64x2_t v278 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v279 = (int64x2_t)vshlq_u64((uint64x2_t)v190, v277);
      *(int32x2_t *)v190.i8 = vmovn_s64((int64x2_t)v190);
      *(int32x2_t *)v279.i8 = vmovn_s64(v279);
      int16x8_t v280 = (int16x8_t)vzip1q_s32((int32x4_t)v190, (int32x4_t)v279);
      int64x2_t v281 = (int64x2_t)vshlq_u64((uint64x2_t)v236, v278);
      *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v236);
      *(int32x2_t *)v281.i8 = vmovn_s64(v281);
      int16x8_t v282 = (int16x8_t)vzip1q_s32((int32x4_t)v236, (int32x4_t)v281);
      int64x2_t v283 = (int64x2_t)vshlq_u64((uint64x2_t)v234, v278);
      *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v234);
      *(int32x2_t *)v283.i8 = vmovn_s64(v283);
      int16x8_t v284 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v283);
      uint32x4_t v285 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v172.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL))));
      int16x8_t v286 = (int16x8_t)vshlq_u32((uint32x4_t)v280, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v191.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v191, v191, 8uLL)))));
      *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
      *(int16x4_t *)v286.i8 = vmovn_s32((int32x4_t)v286);
      int16x8_t v287 = vzip1q_s16(v280, v286);
      int16x8_t v288 = (int16x8_t)vshlq_u32((uint32x4_t)v282, v285);
      int16x8_t v289 = (int16x8_t)vshlq_u32((uint32x4_t)v284, v285);
      *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
      *(int16x4_t *)v288.i8 = vmovn_s32((int32x4_t)v288);
      *(int16x4_t *)v284.i8 = vmovn_s32((int32x4_t)v284);
      *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
      int16x8_t v290 = vzip1q_s16(v282, v288);
      v288.i64[0] = 0x10001000100010;
      v288.i64[1] = 0x10001000100010;
      int16x8_t v291 = vzip1q_s16(v284, v289);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      int16x8_t v292 = vsubq_s16(v288, (int16x8_t)v191);
      int16x8_t v293 = vaddq_s16((int16x8_t)v191, v289);
      v289.i64[0] = 0x10001000100010;
      v289.i64[1] = 0x10001000100010;
      int16x8_t v294 = vshlq_s16(v287, v292);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      int16x8_t v295 = vsubq_s16(v289, (int16x8_t)v172);
      int16x8_t v296 = vaddq_s16((int16x8_t)v172, v292);
      int8x16_t v297 = (int8x16_t)vshlq_s16(v294, v293);
      int16x8_t v298 = vshlq_s16(vshlq_s16(v290, v295), v296);
      int16x8_t v299 = vshlq_s16(vshlq_s16(v291, v295), v296);
      int8x16_t v300 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v297.i8, 0);
      int16x8_t v301 = (int16x8_t)vandq_s8(v175, v300);
      int16x8_t v302 = vsubq_s16(v298, v301);
      int16x8_t v303 = vsubq_s16(v299, v301);
      *(int32x2_t *)v298.i8 = vzip1_s32(*(int32x2_t *)v244.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL));
      *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v257.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v257, v257, 8uLL));
      v275.i64[0] = v298.u32[0];
      v275.i64[1] = v298.u32[1];
      int64x2_t v304 = v275;
      v275.i64[0] = v299.u32[0];
      v275.i64[1] = v299.u32[1];
      uint64x2_t v305 = (uint64x2_t)vnegq_s64(v304);
      int64x2_t v306 = (int64x2_t)vshlq_u64((uint64x2_t)v253, v305);
      *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v253);
      *(int32x2_t *)v306.i8 = vmovn_s64(v306);
      int16x8_t v307 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v306);
      uint64x2_t v308 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v249, v305);
      *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v249);
      *(int32x2_t *)v309.i8 = vmovn_s64(v309);
      int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v309);
      int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v267, v308);
      *(int32x2_t *)v253.i8 = vmovn_s64((int64x2_t)v267);
      *(int32x2_t *)v311.i8 = vmovn_s64(v311);
      uint32x4_t v312 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v171.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL))));
      int16x8_t v313 = (int16x8_t)vzip1q_s32((int32x4_t)v253, (int32x4_t)v311);
      int16x8_t v314 = (int16x8_t)vshlq_u32((uint32x4_t)v307, v312);
      int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v312);
      *(int16x4_t *)v307.i8 = vmovn_s32((int32x4_t)v307);
      *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
      *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
      *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
      int16x8_t v316 = vzip1q_s16(v307, v314);
      v314.i64[0] = 0x10001000100010;
      v314.i64[1] = 0x10001000100010;
      int16x8_t v317 = vzip1q_s16(v310, v315);
      v315.i64[0] = 0xF000F000F000FLL;
      v315.i64[1] = 0xF000F000F000FLL;
      int16x8_t v318 = vsubq_s16(v314, (int16x8_t)v171);
      int16x8_t v319 = vaddq_s16((int16x8_t)v171, v315);
      uint32x4_t v320 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL))));
      int16x8_t v321 = vshlq_s16(vshlq_s16(v316, v318), v319);
      int16x8_t v322 = vshlq_s16(vshlq_s16(v317, v318), v319);
      int16x8_t v323 = (int16x8_t)vandq_s8(v173, v300);
      int16x8_t v324 = vsubq_s16(v321, v323);
      int16x8_t v325 = vsubq_s16(v322, v323);
      int16x8_t v326 = (int16x8_t)vshlq_u32((uint32x4_t)v313, v320);
      *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v313);
      *(int16x4_t *)v326.i8 = vmovn_s32((int32x4_t)v326);
      v313.i64[0] = 0x10001000100010;
      v313.i64[1] = 0x10001000100010;
      int16x8_t v327 = vzip1q_s16(v321, v326);
      v321.i64[0] = 0xF000F000F000FLL;
      v321.i64[1] = 0xF000F000F000FLL;
      int16x8_t v328 = vsubq_s16(v313, (int16x8_t)v170);
      int16x8_t v329 = vaddq_s16((int16x8_t)v170, v321);
      int64x2_t v330 = (int64x2_t)vshlq_u64((uint64x2_t)v262, v308);
      *(int32x2_t *)v321.i8 = vmovn_s64((int64x2_t)v262);
      *(int32x2_t *)v330.i8 = vmovn_s64(v330);
      int16x8_t v331 = (int16x8_t)vzip1q_s32((int32x4_t)v321, (int32x4_t)v330);
      int16x8_t v332 = (int16x8_t)vshlq_u32((uint32x4_t)v331, v320);
      *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
      *(int16x4_t *)v332.i8 = vmovn_s32((int32x4_t)v332);
      int16x8_t v333 = vshlq_s16(vshlq_s16(vzip1q_s16(v331, v332), v328), v329);
      int16x8_t v334 = (int16x8_t)vandq_s8(v169, v300);
      int16x8_t v335 = vsubq_s16(vshlq_s16(vshlq_s16(v327, v328), v329), v334);
      int16x8_t v336 = vsubq_s16(v333, v334);
      int32x2_t v337 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
      int32x2_t v338 = vzip1_s32(*(int32x2_t *)v218.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v218, v218, 8uLL));
      v275.i64[0] = v337.u32[0];
      v275.i64[1] = v337.u32[1];
      int64x2_t v339 = v275;
      v275.i64[0] = v338.u32[0];
      v275.i64[1] = v338.u32[1];
      int64x2_t v340 = (int64x2_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)vnegq_s64(v339));
      *(int32x2_t *)v214.i8 = vmovn_s64((int64x2_t)v214);
      *(int32x2_t *)v340.i8 = vmovn_s64(v340);
      int16x8_t v341 = (int16x8_t)vzip1q_s32((int32x4_t)v214, (int32x4_t)v340);
      int64x2_t v342 = (int64x2_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)vnegq_s64(v275));
      *(int32x2_t *)v205.i8 = vmovn_s64((int64x2_t)v205);
      *(int32x2_t *)v342.i8 = vmovn_s64(v342);
      int16x8_t v343 = (int16x8_t)vzip1q_s32((int32x4_t)v205, (int32x4_t)v342);
      int16x8_t v344 = (int16x8_t)vshlq_u32((uint32x4_t)v341, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v206.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v206, v206, 8uLL)))));
      int16x8_t v345 = (int16x8_t)vshlq_u32((uint32x4_t)v343, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v174.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v174, v174, 8uLL)))));
      *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
      *(int16x4_t *)v344.i8 = vmovn_s32((int32x4_t)v344);
      *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
      *(int16x4_t *)v345.i8 = vmovn_s32((int32x4_t)v345);
      int16x8_t v346 = vzip1q_s16(v341, v344);
      v344.i64[0] = 0x10001000100010;
      v344.i64[1] = 0x10001000100010;
      int16x8_t v347 = vzip1q_s16(v343, v345);
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      int16x8_t v348 = vaddq_s16((int16x8_t)vandq_s8(v297, v176), vshlq_s16(vshlq_s16(v346, vsubq_s16(v344, (int16x8_t)v206)), vaddq_s16((int16x8_t)v206, v345)));
      int16x8_t v349 = (int16x8_t)vandq_s8(v176, v300);
      v350.i64[0] = 0x1000100010001;
      v350.i64[1] = 0x1000100010001;
      int16x8_t v351 = vceqq_s16(v72, (int16x8_t)v350);
      int v352 = (unsigned __int16)vaddvq_s16(v351);
      int8x16_t v353 = (int8x16_t)vsubq_s16(v348, v349);
      int8x16_t v354 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v347, vsubq_s16(v344, (int16x8_t)v174)), vaddq_s16((int16x8_t)v174, v345)), v349);
      v351.i16[0] = v67 & 0xFFF;
      v351.i16[1] = (v67 >> 12) & 0xFFF;
      int16x8_t v355 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v351.i8, 0);
      if (v352)
      {
        int8x16_t v356 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v68, v350));
        int8x16_t v357 = v354;
        v357.i32[3] = v353.i32[0];
        int8x16_t v358 = v353;
        v358.i32[0] = v354.i32[3];
        v447.val[0] = vbslq_s8(v356, v358, v353);
        v447.val[1] = vbslq_s8(v356, v357, v354);
        v359.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
        v359.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7570), v356), (int16x8_t)v447.val[0]);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356));
        int8x16_t v353 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA7580), v356), (int16x8_t)v448.val[0]);
        int8x16_t v354 = (int8x16_t)vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA7590), v356), v302);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA75A0), v356), v303);
        int16x8_t v302 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75B0), v356), (int16x8_t)v448.val[0]);
        int16x8_t v303 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA75C0), v356), v324);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA7570), v356), v325);
        int16x8_t v324 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356), (int16x8_t)v448.val[0]);
        int16x8_t v325 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75D0), v356));
        v447.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA75E0), v356), v335);
        v447.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA7570), v356), v336);
        int16x8_t v335 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356), (int16x8_t)v447.val[0]);
        int16x8_t v336 = vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA75F0), v356));
      }
      int8x16_t v360 = (int8x16_t)vaddq_s16((int16x8_t)v353, v355);
      int8x16_t v361 = (int8x16_t)vaddq_s16((int16x8_t)v354, v355);
      int8x16_t v362 = (int8x16_t)vaddq_s16(v302, v355);
      int8x16_t v363 = (int8x16_t)vaddq_s16(v303, v355);
      int8x16_t v364 = (int8x16_t)vaddq_s16(v324, v355);
      int8x16_t v365 = (int8x16_t)vaddq_s16(v325, v355);
      int8x16_t v366 = (int8x16_t)vaddq_s16(v335, v355);
      int8x16_t v367 = (int8x16_t)vaddq_s16(v336, v355);
      v368.i64[0] = 0x10001000100010;
      v368.i64[1] = 0x10001000100010;
      int8x16_t v369 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v68, v368));
      int16x8_t v370 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v360, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v360);
      int16x8_t v371 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v361, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v361);
      int16x8_t v372 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v362, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v362);
      int16x8_t v373 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v363, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v363);
      int16x8_t v374 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v364, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v364);
      int16x8_t v375 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v365, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v365);
      int16x8_t v376 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v366, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v366);
      int16x8_t v377 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v367, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v367);
      int64x2_t v378 = (int64x2_t)vshlq_n_s16(v370, 4uLL);
      int64x2_t v379 = (int64x2_t)vshlq_n_s16(v371, 4uLL);
      int64x2_t v380 = (int64x2_t)vshlq_n_s16(v372, 4uLL);
      int64x2_t v381 = (int64x2_t)vshlq_n_s16(v374, 4uLL);
      int64x2_t v382 = (int64x2_t)vshlq_n_s16(v375, 4uLL);
      int32x4_t v383 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v378, v379);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v381, v382);
      int32x4_t v384 = (int64x2_t *)(a1 + 2 * a2);
      int64x2_t v385 = (int64x2_t)vshlq_n_s16(v373, 4uLL);
      int64x2_t v386 = (int64x2_t)vshlq_n_s16(v376, 4uLL);
      *int32x4_t v383 = vzip2q_s64(v378, v379);
      v383[1] = vzip2q_s64(v381, v382);
      int64x2_t v387 = (int64x2_t)vshlq_n_s16(v377, 4uLL);
      *int32x4_t v384 = vzip1q_s64(v380, v385);
      v384[1] = vzip1q_s64(v386, v387);
      uint64x2_t v388 = (int64x2_t *)((char *)v384 + a2);
      *uint64x2_t v388 = vzip2q_s64(v380, v385);
      v388[1] = vzip2q_s64(v386, v387);
      break;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int32x4_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int32x4_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *__int16 v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  uint64_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    unsigned int v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *uint64_t v31 = 0;
    unsigned int v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  uint64_t v9 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1, 64, a2, *a3, a4, a5, a6);
  uint64_t v12 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 32, 64, v9, a3[1], a4, v10, v11);
  uint64_t v15 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 256, 64, v12, a3[2], a4, v13, v14);
  uint64_t v18 = v15
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 288, 64, v15, a3[3], a4, v16, v17);
  uint64_t v21 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 512, 64, v18, a3[4], a4, v19, v20);
  uint64_t v24 = v21
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 544, 64, v21, a3[5], a4, v22, v23);
  uint64_t v27 = v24
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 768, 64, v24, a3[6], a4, v25, v26);
  unsigned int v30 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 800, 64, v27, v30, a4, v28, v29);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(uint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = a3[1];
  unint64_t v7 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v10 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v11 = (int16x8_t)vzip1q_s64(*a3, v9);
  int16x8_t v12 = (int16x8_t)vzip2q_s64(*a3, v9);
  int16x8_t v13 = (int16x8_t)vzip1q_s64(v8, v10);
  int64x2_t v15 = *v7;
  int64x2_t v16 = v7[1];
  int32x4_t v14 = (int64x2_t *)((char *)v7 + a4);
  int64x2_t v17 = v14[1];
  int16x8_t v18 = (int16x8_t)vzip2q_s64(v8, v10);
  int16x8_t v19 = vshrq_n_s16(v11, 4uLL);
  v20.i64[0] = 0x4000400040004;
  v20.i64[1] = 0x4000400040004;
  int8x16_t v21 = (int8x16_t)vshrq_n_s16(v12, 4uLL);
  int16x8_t v22 = vshrq_n_s16((int16x8_t)vzip1q_s64(v15, *v14), 4uLL);
  int16x8_t v23 = vshrq_n_s16((int16x8_t)vzip2q_s64(v15, *v14), 4uLL);
  int16x8_t v24 = vshrq_n_s16(v13, 4uLL);
  int16x8_t v25 = vshrq_n_s16(v18, 4uLL);
  int16x8_t v26 = vshrq_n_s16((int16x8_t)vzip1q_s64(v16, v17), 4uLL);
  int16x8_t v27 = vshrq_n_s16((int16x8_t)vzip2q_s64(v16, v17), 4uLL);
  int16x8_t v28 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 0);
  v29.i64[0] = 0x3000300030003;
  v29.i64[1] = 0x3000300030003;
  int8x16_t v402 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v28), 4uLL), v29);
  int8x16_t v404 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v21, v28), 4uLL), v29);
  int8x16_t v406 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v28), 4uLL), v29);
  int8x16_t v407 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v28), 4uLL), v29);
  int8x16_t v408 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v28), 4uLL), v29);
  int8x16_t v409 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v28), 4uLL), v29);
  int8x16_t v410 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v28), 4uLL), v29);
  int8x16_t v411 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v28), 4uLL), v29);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v402, (int16x8_t)v404), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v402, (int16x8_t)v404), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v32 = vpmaxq_s16(v30, v30);
  int16x8_t v33 = vpminq_s16(v31, v31);
  int16x8_t v34 = vpmaxq_s16(v32, v32);
  int16x8_t v35 = vpminq_s16(v33, v33);
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  v37.i64[0] = 0x8000800080008000;
  v37.i64[1] = 0x8000800080008000;
  int16x8_t v38 = vminq_s16(v35, v37);
  int16x8_t v39 = vzip1q_s16(v34, v35);
  v40.i64[0] = 0x10001000100010;
  v40.i64[1] = 0x10001000100010;
  int16x8_t v41 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v39)), (int8x16_t)vceqzq_s16(v39));
  int16x8_t v42 = vpmaxq_s16(v41, v41);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v406, (int16x8_t)v407), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v406, (int16x8_t)v407), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v45 = vpmaxq_s16(v43, v43);
  int16x8_t v46 = vpminq_s16(v44, v44);
  int16x8_t v47 = vpmaxq_s16(v45, v45);
  int16x8_t v48 = vpminq_s16(v46, v46);
  int16x8_t v49 = vmaxq_s16(vmaxq_s16(v34, v36), v47);
  int16x8_t v50 = vminq_s16(v38, v48);
  int16x8_t v51 = vzip1q_s16(v47, v48);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v51)), (int8x16_t)vceqzq_s16(v51));
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v408, (int16x8_t)v409), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v408, (int16x8_t)v409), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v56 = vpmaxq_s16(v54, v54);
  int16x8_t v57 = vpminq_s16(v55, v55);
  int16x8_t v58 = vpmaxq_s16(v56, v56);
  int16x8_t v59 = vpminq_s16(v57, v57);
  int16x8_t v60 = vmaxq_s16(v49, v58);
  int16x8_t v61 = vminq_s16(v50, v59);
  int16x8_t v62 = vzip1q_s16(v58, v59);
  int16x8_t v63 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int16x8_t v64 = vpmaxq_s16(v63, v63);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v410, (int16x8_t)v411), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v410, (int16x8_t)v411), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v67 = vpmaxq_s16(v65, v65);
  int16x8_t v68 = vpminq_s16(v66, v66);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int8x16_t v71 = (int8x16_t)vmaxq_s16(v60, v69);
  int16x8_t v72 = vminq_s16(v61, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  v70.i64[0] = -1;
  v70.i64[1] = -1;
  int16x8_t v75 = vpmaxq_s16(v74, v74);
  int8x16_t v76 = (int8x16_t)vmaxq_s16(vmaxq_s16(v42, v53), vmaxq_s16(v64, v75));
  int16x8_t v77 = vclzq_s16(vsubq_s16((int16x8_t)v71, v72));
  v38.i64[0] = 0xF000F000F000FLL;
  v38.i64[1] = 0xF000F000F000FLL;
  int16x8_t v78 = vsubq_s16(v38, v77);
  int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v40, v77);
  int8x16_t v80 = (int8x16_t)vsubq_s16(vshlq_s16(v70, v78), v72);
  int8x16_t v81 = (int8x16_t)vcgtq_s16((int16x8_t)v76, (int16x8_t)v79);
  int8x16_t v418 = vbslq_s8(v81, v79, v76);
  int8x16_t v419 = (int8x16_t)v72;
  int8x16_t v420 = v71;
  int8x16_t v421 = vandq_s8(v80, v81);
  v71.i64[0] = 0x8000800080008;
  v71.i64[1] = 0x8000800080008;
  int8x16_t v82 = vandq_s8(v81, v71);
  v83.i64[0] = 0x3000300030003;
  v83.i64[1] = 0x3000300030003;
  int16x8_t v84 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v42), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v53), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v64), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v87 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v418, v75), (int16x8_t)v83), (int16x8_t)0);
  int16x8_t v414 = vsubq_s16((int16x8_t)v418, v84);
  int16x8_t v415 = vsubq_s16((int16x8_t)v418, v85);
  int16x8_t v416 = vsubq_s16((int16x8_t)v418, v86);
  int16x8_t v417 = vsubq_s16((int16x8_t)v418, v87);
  int8x16_t v88 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v418), v83), v82), vbicq_s8(v20, (int8x16_t)vceqq_s16(vaddq_s16(v87, v86), vnegq_s16(vaddq_s16(v84, v85)))));
  int8x16_t v412 = (int8x16_t)v28;
  int8x16_t v413 = v88;
  if (vmaxvq_s16((int16x8_t)v418))
  {
    int16x8_t v398 = v22;
    int16x8_t v399 = v23;
    int16x8_t v400 = v24;
    int16x8_t v401 = v25;
    int16x8_t v395 = v26;
    int16x8_t v396 = v27;
    int8x16_t v89 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v402, (int16x8_t)vqtbl1q_s8(v402, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    v90.i64[0] = 0x4000400040004;
    v90.i64[1] = 0x4000400040004;
    int8x16_t v91 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v404, (int16x8_t)vqtbl1q_s8(v404, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v92 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v406, (int16x8_t)vqtbl1q_s8(v406, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v407, (int16x8_t)vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v408, (int16x8_t)vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v409, (int16x8_t)vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v410, (int16x8_t)vqtbl1q_s8(v410, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v411, (int16x8_t)vqtbl1q_s8(v411, (int8x16_t)xmmword_242EA76C0)), 4uLL), v29);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v89, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v89, (int16x8_t)v91), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vpmaxq_s16(v100, v100);
    int16x8_t v103 = vpminq_s16(v101, v101);
    int16x8_t v104 = vmaxq_s16(v102, v36);
    int16x8_t v105 = vminq_s16(v103, v37);
    int16x8_t v106 = vzip1q_s16(v102, v103);
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v106)), (int8x16_t)vceqzq_s16(v106));
    int16x8_t v108 = vpmaxq_s16(v107, v107);
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v92, (int16x8_t)v93), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v104, v113);
    int16x8_t v116 = vminq_s16(v105, v114);
    int16x8_t v117 = vzip1q_s16(v113, v114);
    int16x8_t v118 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v117)), (int8x16_t)vceqzq_s16(v117));
    int16x8_t v119 = vpmaxq_s16(v118, v118);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v94, (int16x8_t)v95), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int16x8_t v127 = vminq_s16(v116, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int16x8_t v131 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v132 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v96, (int16x8_t)v97), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v126, v135);
    int8x16_t v138 = (int8x16_t)vminq_s16(v127, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v40, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16(v108, v119), vmaxq_s16(v130, v141));
    int8x16_t v397 = (int8x16_t)v137;
    int16x8_t v143 = vclzq_s16(vsubq_s16(v137, (int16x8_t)v138));
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v40, v143);
    int8x16_t v145 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v142);
    v142.i64[0] = 0x18001800180018;
    v142.i64[1] = 0x18001800180018;
    int8x16_t v147 = vbslq_s8(v145, v142, v40);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v108), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v119), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v130), (int16x8_t)v83), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v146, v141), (int16x8_t)v83), (int16x8_t)0);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v146, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v146, v149);
    int8x16_t v154 = (int8x16_t)vsubq_s16((int16x8_t)v146, v150);
    int8x16_t v155 = (int8x16_t)vsubq_s16((int16x8_t)v146, v151);
    int8x16_t v156 = vbicq_s8(v90, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v90.i64[0] = 0x7000700070007;
    v90.i64[1] = 0x7000700070007;
    v157.i64[0] = 0x8000800080008;
    v157.i64[1] = 0x8000800080008;
    int8x16_t v158 = v418;
    int16x8_t v159 = (int16x8_t)vandq_s8(v88, v83);
    v160.i64[0] = 0x2000200020002;
    v160.i64[1] = 0x2000200020002;
    int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v159, v160), v40);
    int16x8_t v162 = v414;
    int16x8_t v163 = v415;
    int16x8_t v164 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v418, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v82, v157))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v157)), v161);
    int16x8_t v166 = v416;
    int16x8_t v165 = v417;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v164, v414, (int16x8_t)v90), vshlq_n_s16(vaddq_s16(vaddq_s16(v416, v415), v417), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v146, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v156, (int16x8_t)v156)), (int16x8_t)v152, (int16x8_t)v90), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v154, (int16x8_t)v153), (int16x8_t)v155), 3uLL))), 0);
    int v168 = (unsigned __int16)vaddvq_s16((int16x8_t)v167);
    BOOL v170 = a5 < 4 || a6 < 2;
    if (v168)
    {
      v171.i64[0] = 0x3000300030003;
      v171.i64[1] = 0x3000300030003;
      int8x16_t v402 = vbslq_s8(v167, v89, v402);
      int8x16_t v404 = vbslq_s8(v167, v91, v404);
      int8x16_t v172 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v146), v171), v147), v156);
      v173.i64[0] = 0xF000F000F000FLL;
      v173.i64[1] = 0xF000F000F000FLL;
      v171.i64[0] = -1;
      v171.i64[1] = -1;
      int8x16_t v406 = vbslq_s8(v167, v92, v406);
      int8x16_t v407 = vbslq_s8(v167, v93, v407);
      int8x16_t v408 = vbslq_s8(v167, v94, v408);
      int8x16_t v409 = vbslq_s8(v167, v95, v409);
      int8x16_t v410 = vbslq_s8(v167, v96, v410);
      int8x16_t v411 = vbslq_s8(v167, v97, v411);
      int16x8_t v162 = (int16x8_t)vbslq_s8(v167, v152, (int8x16_t)v414);
      int16x8_t v163 = (int16x8_t)vbslq_s8(v167, v153, (int8x16_t)v415);
      int16x8_t v414 = v162;
      int16x8_t v415 = v163;
      int16x8_t v166 = (int16x8_t)vbslq_s8(v167, v154, (int8x16_t)v416);
      int16x8_t v165 = (int16x8_t)vbslq_s8(v167, v155, (int8x16_t)v417);
      int16x8_t v416 = v166;
      int16x8_t v417 = v165;
      int8x16_t v420 = vbslq_s8(v167, v397, v420);
      int8x16_t v421 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v171, vsubq_s16(v173, v143)), (int16x8_t)v138), v145), v421);
      int8x16_t v158 = vbslq_s8(v167, v146, v418);
      int8x16_t v418 = v158;
      int8x16_t v419 = vbslq_s8(v167, v138, v419);
      int8x16_t v88 = vbslq_s8(v167, v172, v88);
      int8x16_t v412 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v412, (int16x8_t)vqtbl1q_s8(v412, (int8x16_t)xmmword_242EA76C0)), v412);
      int8x16_t v413 = v88;
    }
    int16x8_t v174 = v400;
    int16x8_t v175 = v398;
    if (!v170)
    {
      int16x8_t v176 = vsubq_s16(v19, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v177 = v399;
      v177.i32[3] = v21.i32[3];
      int16x8_t v178 = vsubq_s16((int16x8_t)v21, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v19.i8, (int8x16_t)xmmword_242EA7620));
      int16x8_t v179 = v401;
      v179.i32[3] = v21.i32[3];
      int16x8_t v180 = vsubq_s16(v400, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7640));
      int16x8_t v181 = vsubq_s16(v401, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v174.i8, (int8x16_t)xmmword_242EA7570));
      v422.val[0] = (int8x16_t)v395;
      v422.val[1] = (int8x16_t)v396;
      v422.val[1].i32[3] = v21.i32[3];
      int16x8_t v182 = vsubq_s16(v395, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7650));
      int16x8_t v183 = vsubq_s16(v396, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7570));
      v422.val[0] = (int8x16_t)v178;
      v422.val[0].i32[3] = v176.i32[0];
      v176.i32[0] = v178.i32[3];
      v184.i64[0] = 0x4000400040004;
      v184.i64[1] = 0x4000400040004;
      int16x8_t v185 = vshlq_n_s16((int16x8_t)v422.val[0], 4uLL);
      v422.val[0] = (int8x16_t)vshlq_n_s16(v180, 4uLL);
      v422.val[1] = (int8x16_t)vshlq_n_s16(v181, 4uLL);
      int16x8_t v186 = vshlq_n_s16(v182, 4uLL);
      int16x8_t v187 = vshlq_n_s16(v183, 4uLL);
      v188.i64[0] = 0x3000300030003;
      v188.i64[1] = 0x3000300030003;
      int8x16_t v189 = (int8x16_t)vshlq_s16(vshlq_n_s16(v176, 4uLL), v188);
      int8x16_t v190 = (int8x16_t)vshlq_s16(v185, v188);
      int8x16_t v191 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v398, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7590)), 4uLL), v188);
      int8x16_t v192 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v399, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v175.i8, (int8x16_t)xmmword_242EA7630)), 4uLL), v188);
      int8x16_t v193 = (int8x16_t)vshlq_s16((int16x8_t)v422.val[0], v188);
      int8x16_t v194 = (int8x16_t)vshlq_s16((int16x8_t)v422.val[1], v188);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v186, v188);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v187, v188);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      v422.val[1] = vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v190), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v197 = vmaxq_s16((int16x8_t)v422.val[0], v186);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v198 = vminq_s16((int16x8_t)v422.val[1], v186);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[1]);
      v422.val[1].i64[0] = 0x10001000100010;
      v422.val[1].i64[1] = 0x10001000100010;
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v199 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v200 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v191, (int16x8_t)v192), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v201 = vpminq_s16(v200, v200);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v202 = vpminq_s16(v201, v201);
      int16x8_t v203 = vmaxq_s16(v197, (int16x8_t)v422.val[0]);
      int16x8_t v204 = vminq_s16(v198, v202);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v202);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v205 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v206 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v207 = vpminq_s16(v206, v206);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v208 = vpminq_s16(v207, v207);
      int16x8_t v209 = vmaxq_s16(v203, (int16x8_t)v422.val[0]);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v208);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int16x8_t v210 = vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v195, (int16x8_t)v196), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v211 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v195, (int16x8_t)v196), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v212 = vpminq_s16(v211, v211);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v213 = vpminq_s16(v212, v212);
      int8x16_t v214 = (int8x16_t)vmaxq_s16(v209, (int16x8_t)v422.val[0]);
      int8x16_t v215 = (int8x16_t)vminq_s16(vminq_s16(v204, v208), v213);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], v213);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v422.val[1], vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      int8x16_t v216 = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[0] = (int8x16_t)vmaxq_s16(vmaxq_s16(v199, v205), vmaxq_s16(v210, (int16x8_t)v216));
      int16x8_t v217 = vclzq_s16(vsubq_s16((int16x8_t)v214, (int16x8_t)v215));
      int8x16_t v218 = (int8x16_t)vsubq_s16((int16x8_t)v422.val[1], v217);
      int8x16_t v219 = (int8x16_t)vcgtq_s16((int16x8_t)v422.val[0], (int16x8_t)v218);
      int8x16_t v220 = vbslq_s8(v219, v218, v422.val[0]);
      v221.i64[0] = 0x3000300030003;
      v221.i64[1] = 0x3000300030003;
      int16x8_t v222 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v199), v221), (int16x8_t)0);
      int16x8_t v223 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v205), v221), (int16x8_t)0);
      int16x8_t v224 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, v210), v221), (int16x8_t)0);
      int16x8_t v225 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v220, (int16x8_t)v216), v221), (int16x8_t)0);
      int8x16_t v226 = (int8x16_t)vsubq_s16((int16x8_t)v220, v222);
      int8x16_t v227 = (int8x16_t)vsubq_s16((int16x8_t)v220, v223);
      int8x16_t v228 = (int8x16_t)vsubq_s16((int16x8_t)v220, v224);
      int8x16_t v229 = (int8x16_t)vsubq_s16((int16x8_t)v220, v225);
      int8x16_t v230 = vbicq_s8(v184, (int8x16_t)vceqq_s16(vaddq_s16(v225, v224), vnegq_s16(vaddq_s16(v222, v223))));
      v231.i64[0] = 0x7000700070007;
      v231.i64[1] = 0x7000700070007;
      int16x8_t v232 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v218, v219), vaddq_s16((int16x8_t)v230, (int16x8_t)v230)), (int16x8_t)v226, v231), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v228, (int16x8_t)v227), (int16x8_t)v229), 3uLL));
      v216.i64[0] = 0x8000800080008;
      v216.i64[1] = 0x8000800080008;
      int8x16_t v88 = v413;
      int16x8_t v162 = v414;
      v233.i64[0] = 0x2000200020002;
      v233.i64[1] = 0x2000200020002;
      int16x8_t v234 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v413, (int8x16_t)v221), (int16x8_t)v233), v422.val[1]);
      int16x8_t v165 = v417;
      int8x16_t v158 = v418;
      int16x8_t v235 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v418, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v413, v216))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v216)), v234);
      int16x8_t v163 = v415;
      int16x8_t v166 = v416;
      int8x16_t v236 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(v235, v414, v231), vshlq_n_s16(vaddq_s16(vaddq_s16(v416, v415), v417), 3uLL)), v232), 0);
      if (vaddvq_s16((int16x8_t)v236))
      {
        v237.i64[0] = 0x9000900090009;
        v237.i64[1] = 0x9000900090009;
        int8x16_t v402 = vbslq_s8(v236, v189, v402);
        int8x16_t v404 = vbslq_s8(v236, v190, v404);
        v238.i64[0] = -1;
        v238.i64[1] = -1;
        int8x16_t v406 = vbslq_s8(v236, v191, v406);
        int8x16_t v407 = vbslq_s8(v236, v192, v407);
        v239.i64[0] = 0xF000F000F000FLL;
        v239.i64[1] = 0xF000F000F000FLL;
        int8x16_t v408 = vbslq_s8(v236, v193, v408);
        int8x16_t v409 = vbslq_s8(v236, v194, v409);
        int8x16_t v410 = vbslq_s8(v236, v195, v410);
        int8x16_t v411 = vbslq_s8(v236, v196, v411);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v236, v226, (int8x16_t)v414);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v236, v227, (int8x16_t)v415);
        int16x8_t v414 = v162;
        int16x8_t v415 = v163;
        int16x8_t v166 = (int16x8_t)vbslq_s8(v236, v228, (int8x16_t)v416);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v236, v229, (int8x16_t)v417);
        int16x8_t v416 = v166;
        int16x8_t v417 = v165;
        int8x16_t v420 = vbslq_s8(v236, v214, v420);
        int8x16_t v421 = vbslq_s8(v236, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v238, vsubq_s16(v239, v217)), (int16x8_t)v215), v219), v421);
        int8x16_t v158 = vbslq_s8(v236, v220, v418);
        int8x16_t v418 = v158;
        int8x16_t v419 = vbslq_s8(v236, v215, v419);
        int8x16_t v88 = vbslq_s8(v236, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v220), v233), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v219, v237), (int16x8_t)vmvnq_s8(v219))), v230), v413);
        int8x16_t v412 = vbslq_s8(v236, vextq_s8(v21, v21, 0xCuLL), v412);
        int8x16_t v413 = v88;
      }
    }
    int16x8_t v240 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v162));
    int8x16_t v403 = (int8x16_t)vaddq_s16(v240, (int16x8_t)v402);
    int8x16_t v405 = (int8x16_t)vaddq_s16((int16x8_t)v404, v240);
    int16x8_t v241 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v163));
    int8x16_t v406 = (int8x16_t)vaddq_s16((int16x8_t)v406, v241);
    int8x16_t v407 = (int8x16_t)vaddq_s16((int16x8_t)v407, v241);
    int16x8_t v242 = (int16x8_t)vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v166));
    int8x16_t v408 = (int8x16_t)vaddq_s16((int16x8_t)v408, v242);
    int8x16_t v409 = (int8x16_t)vaddq_s16((int16x8_t)v409, v242);
    int8x16_t v243 = vandq_s8(v421, (int8x16_t)vceqq_s16((int16x8_t)v158, v165));
    int8x16_t v410 = (int8x16_t)vaddq_s16((int16x8_t)v410, (int16x8_t)v243);
    int8x16_t v411 = (int8x16_t)vaddq_s16((int16x8_t)v411, (int16x8_t)v243);
    v243.i64[0] = 0x8000800080008;
    v243.i64[1] = 0x8000800080008;
    v244.i64[0] = 0x3000300030003;
    v244.i64[1] = 0x3000300030003;
    v245.i64[0] = 0x2000200020002;
    v245.i64[1] = 0x2000200020002;
    int8x16_t v246 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v88, v244), v245);
    v245.i64[0] = 0x10001000100010;
    v245.i64[1] = 0x10001000100010;
    int16x8_t v247 = (int16x8_t)vandq_s8(v246, (int8x16_t)v245);
    v245.i64[0] = 0x7000700070007;
    v245.i64[1] = 0x7000700070007;
    int16x8_t v248 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v158, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v88, v243))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v88, (int16x8_t)v88), v243)), v247), v162, v245), vshlq_n_s16(vaddq_s16(v166, vaddq_s16(v163, v165)), 3uLL));
    if ((unint64_t)(vpaddq_s16(v248, v248).i16[0] - 343) < 0xFFFFFFFFFFFFFE78)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint32x4_t *)a3, a4, a5, a6, a7);
      return 48;
    }
    else
    {
      int8x16_t v249 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v250 = 8 * (a1 & 7);
      if (v250) {
        uint64_t v251 = *v249 & ~(-1 << v250);
      }
      else {
        uint64_t v251 = 0;
      }
      *a2 = 0;
      uint64_t v254 = ((v158.i16[0] << 10) + 15360) & 0x3C00;
      if (!v158.i16[0]) {
        uint64_t v254 = 0;
      }
      if (v158.i16[1]) {
        uint64_t v255 = ((v158.u16[1] << 14) + 245760) & 0x3C000;
      }
      else {
        uint64_t v255 = 0;
      }
      unint64_t v256 = v254 | v255 | v88.i8[0] & 0x1F | (32 * (v88.i8[2] & 0x1Fu));
      unint64_t v257 = v412.i16[0] & 0xFFF | ((unint64_t)(v412.i16[1] & 0xFFF) << 12);
      uint64_t v258 = (v256 << v250) | v251;
      if (v250 >= 0x2E)
      {
        *int8x16_t v249 = v258;
        uint64_t v258 = v256 >> (-8 * (a1 & 7u));
      }
      unint64_t v259 = (v250 + 18) & 0x3A;
      unint64_t v260 = v258 | (v257 << v259);
      if (v259 >= 0x28)
      {
        *(void *)((char *)v249 + (((v250 + 18) >> 3) & 8)) = v260;
        unint64_t v260 = v257 >> -(char)v259;
      }
      unint64_t v261 = v250 + 42;
      int8x16_t v262 = (int8x16_t)vsubq_s16((int16x8_t)v418, v414);
      int8x16_t v263 = (int8x16_t)vsubq_s16((int16x8_t)v418, v415);
      int8x16_t v264 = (int8x16_t)vsubq_s16((int16x8_t)v418, v416);
      int8x16_t v265 = (int8x16_t)vsubq_s16((int16x8_t)v418, v417);
      *(uint8x8_t *)v262.i8 = vqmovn_u16((uint16x8_t)v262);
      *(uint8x8_t *)v263.i8 = vqmovn_u16((uint16x8_t)v263);
      *(uint8x8_t *)v264.i8 = vqmovn_u16((uint16x8_t)v264);
      *(uint8x8_t *)v265.i8 = vqmovn_u16((uint16x8_t)v265);
      v265.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v262, v263), (int16x8_t)vzip1q_s8(v264, v265)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v262, v263), (int16x8_t)vtrn2q_s8(v264, v265))).u64[0];
      v263.i64[0] = 0x202020202020202;
      v263.i64[1] = 0x202020202020202;
      int8x16_t v266 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v413.i8, (int8x8_t)0x4000400040004)))), v263);
      v263.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v263.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v264.i64[0] = -1;
      v264.i64[1] = -1;
      uint8x16_t v267 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v264, (uint8x16_t)vorrq_s8(v266, v263)), (int8x16_t)v265.u64[0]);
      int16x8_t v268 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v266.i8);
      uint16x8_t v269 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v267.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v268)), (int16x8_t)vmovl_high_u8(v267));
      uint16x8_t v270 = (uint16x8_t)vpaddq_s16(v268, (int16x8_t)vmovl_high_u8((uint8x16_t)v266));
      int32x4_t v271 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v270.i8);
      int32x4_t v272 = (int32x4_t)vmovl_high_u16(v270);
      int32x4_t v273 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v269.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v271)), (int32x4_t)vshlq_u32(vmovl_high_u16(v269), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v272)));
      int32x4_t v274 = vpaddq_s32(v271, v272);
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      uint64x2_t v276 = (uint64x2_t)v275;
      v275.i64[0] = v273.u32[2];
      v275.i64[1] = v273.u32[3];
      uint64x2_t v277 = (uint64x2_t)v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      int64x2_t v278 = v275;
      v275.i64[0] = v274.u32[2];
      v275.i64[1] = v274.u32[3];
      int64x2_t v279 = vpaddq_s64((int64x2_t)vshlq_u64(v276, (uint64x2_t)vzip1q_s64((int64x2_t)0, v278)), (int64x2_t)vshlq_u64(v277, (uint64x2_t)vzip1q_s64((int64x2_t)0, v275)));
      int64x2_t v280 = vpaddq_s64(v278, v275);
      uint64_t v281 = (v250 + 42) & 0x3A;
      unint64_t v282 = (v279.i64[0] << v281) | v260;
      if ((unint64_t)(v280.i64[0] + v281) >= 0x40)
      {
        *(void *)((char *)v249 + ((v261 >> 3) & 8)) = v282;
        unint64_t v282 = (unint64_t)v279.i64[0] >> -(char)v281;
      }
      unint64_t v283 = v280.i64[0] + v261;
      unint64_t v284 = v282 | (v279.i64[1] << v283);
      if ((v283 & 0x3F) + v280.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v284;
        unint64_t v284 = (unint64_t)v279.i64[1] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v284 = 0;
        }
      }
      unint64_t v285 = v283 + v280.i64[1];
      v286.i64[0] = 0x8000800080008;
      v286.i64[1] = 0x8000800080008;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      int16x8_t v288 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v413, v286), (int8x16_t)0, 0xCuLL), v418);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v290 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v287, (uint16x8_t)vaddq_s16(v288, v289)), v421);
      int32x4_t v291 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v288.i8);
      int32x4_t v292 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v291)), (int32x4_t)vmovl_high_u16(v290));
      int32x4_t v293 = vpaddq_s32(v291, (int32x4_t)vmovl_high_u16((uint16x8_t)v288));
      v294.i64[0] = v292.u32[0];
      v294.i64[1] = v292.u32[1];
      uint64x2_t v295 = (uint64x2_t)v294;
      v294.i64[0] = v292.u32[2];
      v294.i64[1] = v292.u32[3];
      uint64x2_t v296 = (uint64x2_t)v294;
      v294.i64[0] = v293.u32[0];
      v294.i64[1] = v293.u32[1];
      int64x2_t v297 = v294;
      v294.i64[0] = v293.u32[2];
      v294.i64[1] = v293.u32[3];
      int64x2_t v298 = vpaddq_s64((int64x2_t)vshlq_u64(v295, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)), (int64x2_t)vshlq_u64(v296, (uint64x2_t)vzip1q_s64((int64x2_t)0, v294)));
      int64x2_t v299 = vpaddq_s64(v297, v294);
      unint64_t v300 = (v298.i64[0] << v285) | v284;
      if (v299.i64[0] + (v285 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v300;
        unint64_t v300 = (unint64_t)v298.i64[0] >> -(v285 & 0x3F);
        if ((v285 & 0x3F) == 0) {
          unint64_t v300 = 0;
        }
      }
      unint64_t v301 = v299.i64[0] + v285;
      unint64_t v302 = v300 | (v298.i64[1] << v301);
      if ((v301 & 0x3F) + v299.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v301 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v298.i64[1] >> -(v301 & 0x3F);
        if ((v301 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      unint64_t v303 = v301 + v299.i64[1];
      int16x8_t v304 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v414, 0xCuLL);
      v305.i64[0] = 0xF000F000F000FLL;
      v305.i64[1] = 0xF000F000F000FLL;
      v306.i64[0] = -1;
      v306.i64[1] = -1;
      uint16x8_t v307 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v306, (uint16x8_t)vaddq_s16(v304, v305)), v403);
      int32x4_t v308 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v304.i8);
      int32x4_t v309 = (int32x4_t)vmovl_high_u16((uint16x8_t)v304);
      int32x4_t v310 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v307.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v308)), (int32x4_t)vshlq_u32(vmovl_high_u16(v307), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v309)));
      int32x4_t v311 = vpaddq_s32(v308, v309);
      v312.i64[0] = v310.u32[0];
      v312.i64[1] = v310.u32[1];
      uint64x2_t v313 = (uint64x2_t)v312;
      v312.i64[0] = v310.u32[2];
      v312.i64[1] = v310.u32[3];
      uint64x2_t v314 = (uint64x2_t)v312;
      v312.i64[0] = v311.u32[0];
      v312.i64[1] = v311.u32[1];
      int64x2_t v315 = v312;
      v312.i64[0] = v311.u32[2];
      v312.i64[1] = v311.u32[3];
      int64x2_t v316 = vpaddq_s64((int64x2_t)vshlq_u64(v313, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)), (int64x2_t)vshlq_u64(v314, (uint64x2_t)vzip1q_s64((int64x2_t)0, v312)));
      int64x2_t v317 = vpaddq_s64(v315, v312);
      unint64_t v318 = (v316.i64[0] << v303) | v302;
      if (v317.i64[0] + (v303 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v303 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v318;
        unint64_t v318 = (unint64_t)v316.i64[0] >> -(v303 & 0x3F);
        if ((v303 & 0x3F) == 0) {
          unint64_t v318 = 0;
        }
      }
      unint64_t v319 = v317.i64[0] + v303;
      unint64_t v320 = v318 | (v316.i64[1] << v319);
      if ((v319 & 0x3F) + v317.i64[1] >= 0x40)
      {
        *(void *)((char *)v249 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v320;
        unint64_t v320 = (unint64_t)v316.i64[1] >> -(v319 & 0x3F);
        if ((v319 & 0x3F) == 0) {
          unint64_t v320 = 0;
        }
      }
      unint64_t v321 = v319 + v317.i64[1];
      v322.i64[0] = 0xF000F000F000FLL;
      v322.i64[1] = 0xF000F000F000FLL;
      v323.i64[0] = -1;
      v323.i64[1] = -1;
      uint16x8_t v324 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v323, (uint16x8_t)vaddq_s16(v414, v322)), v405);
      int32x4_t v325 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v414.i8);
      int32x4_t v326 = (int32x4_t)vmovl_high_u16((uint16x8_t)v414);
      int32x4_t v327 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v324.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v325)), (int32x4_t)vshlq_u32(vmovl_high_u16(v324), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v326)));
      int32x4_t v328 = vpaddq_s32(v325, v326);
      v329.i64[0] = v327.u32[0];
      v329.i64[1] = v327.u32[1];
      uint64x2_t v330 = (uint64x2_t)v329;
      v329.i64[0] = v327.u32[2];
      v329.i64[1] = v327.u32[3];
      uint64x2_t v331 = (uint64x2_t)v329;
      v329.i64[0] = v328.u32[0];
      v329.i64[1] = v328.u32[1];
      int64x2_t v332 = v329;
      v329.i64[0] = v328.u32[2];
      v329.i64[1] = v328.u32[3];
      int64x2_t v333 = vpaddq_s64((int64x2_t)vshlq_u64(v330, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)), (int64x2_t)vshlq_u64(v331, (uint64x2_t)vzip1q_s64((int64x2_t)0, v329)));
      int64x2_t v334 = vpaddq_s64(v332, v329);
      unint64_t v335 = (v333.i64[0] << v321) | v320;
      if (v334.i64[0] + (v321 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v249 + ((v321 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v335;
        if ((v321 & 0x3F) != 0) {
          unint64_t v335 = (unint64_t)v333.i64[0] >> -(v321 & 0x3F);
        }
        else {
          unint64_t v335 = 0;
        }
      }
      uint64_t v336 = v334.i64[1];
      unint64_t v337 = v334.i64[0] + v321;
      uint64_t v338 = (v334.i64[0] + v321) & 0x3F;
      unint64_t v339 = v335 | (v333.i64[1] << v337);
      if ((unint64_t)(v338 + v334.i64[1]) >= 0x40)
      {
        *(void *)((char *)v249 + ((v337 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
        unint64_t v339 = (unint64_t)v333.i64[1] >> -(char)v338;
        if (!v338) {
          unint64_t v339 = 0;
        }
      }
      uint64_t v340 = 0;
      v341.i64[0] = 0xF000F000F000FLL;
      v341.i64[1] = 0xF000F000F000FLL;
      v342.i64[0] = -1;
      v342.i64[1] = -1;
      unint64_t v343 = v337 + v336;
      char v344 = 1;
      do
      {
        char v345 = v344;
        uint16x8_t v346 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v342, (uint16x8_t)vaddq_s16(v415, v341)), *(&v406 + v340));
        int32x4_t v347 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v415.i8);
        int32x4_t v348 = (int32x4_t)vmovl_high_u16((uint16x8_t)v415);
        int32x4_t v349 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v346.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)), (int32x4_t)vshlq_u32(vmovl_high_u16(v346), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)));
        int32x4_t v350 = vpaddq_s32(v347, v348);
        v351.i64[0] = v349.u32[0];
        v351.i64[1] = v349.u32[1];
        uint64x2_t v352 = (uint64x2_t)v351;
        v351.i64[0] = v349.u32[2];
        v351.i64[1] = v349.u32[3];
        uint64x2_t v353 = (uint64x2_t)v351;
        v351.i64[0] = v350.u32[0];
        v351.i64[1] = v350.u32[1];
        int64x2_t v354 = v351;
        v351.i64[0] = v350.u32[2];
        v351.i64[1] = v350.u32[3];
        int64x2_t v355 = vpaddq_s64((int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v354)), (int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v351)));
        int64x2_t v356 = vpaddq_s64(v354, v351);
        unint64_t v357 = (v355.i64[0] << v343) | v339;
        if (v356.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
          unint64_t v357 = (unint64_t)v355.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v357 = 0;
          }
        }
        unint64_t v358 = v356.i64[0] + v343;
        unint64_t v339 = v357 | (v355.i64[1] << v358);
        if ((v358 & 0x3F) + v356.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v355.i64[1] >> -(v358 & 0x3F);
          if ((v358 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v344 = 0;
        unint64_t v343 = v358 + v356.i64[1];
        uint64_t v340 = 1;
      }
      while ((v345 & 1) != 0);
      uint64_t v359 = 0;
      char v360 = 1;
      v361.i64[0] = 0xF000F000F000FLL;
      v361.i64[1] = 0xF000F000F000FLL;
      v362.i64[0] = -1;
      v362.i64[1] = -1;
      do
      {
        char v363 = v360;
        uint16x8_t v364 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v362, (uint16x8_t)vaddq_s16(v416, v361)), *(&v408 + v359));
        int32x4_t v365 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v416.i8);
        int32x4_t v366 = (int32x4_t)vmovl_high_u16((uint16x8_t)v416);
        int32x4_t v367 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v364.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v365)), (int32x4_t)vshlq_u32(vmovl_high_u16(v364), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v366)));
        int32x4_t v368 = vpaddq_s32(v365, v366);
        v369.i64[0] = v367.u32[0];
        v369.i64[1] = v367.u32[1];
        uint64x2_t v370 = (uint64x2_t)v369;
        v369.i64[0] = v367.u32[2];
        v369.i64[1] = v367.u32[3];
        uint64x2_t v371 = (uint64x2_t)v369;
        v369.i64[0] = v368.u32[0];
        v369.i64[1] = v368.u32[1];
        int64x2_t v372 = v369;
        v369.i64[0] = v368.u32[2];
        v369.i64[1] = v368.u32[3];
        int64x2_t v373 = vpaddq_s64((int64x2_t)vshlq_u64(v370, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)), (int64x2_t)vshlq_u64(v371, (uint64x2_t)vzip1q_s64((int64x2_t)0, v369)));
        int64x2_t v374 = vpaddq_s64(v372, v369);
        unint64_t v375 = (v373.i64[0] << v343) | v339;
        if (v374.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
          unint64_t v375 = (unint64_t)v373.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v375 = 0;
          }
        }
        unint64_t v376 = v374.i64[0] + v343;
        unint64_t v339 = v375 | (v373.i64[1] << v376);
        if ((v376 & 0x3F) + v374.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v373.i64[1] >> -(v376 & 0x3F);
          if ((v376 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v360 = 0;
        unint64_t v343 = v376 + v374.i64[1];
        uint64_t v359 = 1;
      }
      while ((v363 & 1) != 0);
      uint64_t v377 = 0;
      char v378 = 1;
      v379.i64[0] = 0xF000F000F000FLL;
      v379.i64[1] = 0xF000F000F000FLL;
      v380.i64[0] = -1;
      v380.i64[1] = -1;
      do
      {
        char v381 = v378;
        uint16x8_t v382 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v380, (uint16x8_t)vaddq_s16(v417, v379)), *(&v410 + v377));
        int32x4_t v383 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v417.i8);
        int32x4_t v384 = (int32x4_t)vmovl_high_u16((uint16x8_t)v417);
        int32x4_t v385 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v382.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v383)), (int32x4_t)vshlq_u32(vmovl_high_u16(v382), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v384)));
        int32x4_t v386 = vpaddq_s32(v383, v384);
        v387.i64[0] = v385.u32[0];
        v387.i64[1] = v385.u32[1];
        uint64x2_t v388 = (uint64x2_t)v387;
        v387.i64[0] = v385.u32[2];
        v387.i64[1] = v385.u32[3];
        uint64x2_t v389 = (uint64x2_t)v387;
        v387.i64[0] = v386.u32[0];
        v387.i64[1] = v386.u32[1];
        int64x2_t v390 = v387;
        v387.i64[0] = v386.u32[2];
        v387.i64[1] = v386.u32[3];
        int64x2_t v391 = vpaddq_s64((int64x2_t)vshlq_u64(v388, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)), (int64x2_t)vshlq_u64(v389, (uint64x2_t)vzip1q_s64((int64x2_t)0, v387)));
        int64x2_t v392 = vpaddq_s64(v390, v387);
        unint64_t v393 = (v391.i64[0] << v343) | v339;
        if (v392.i64[0] + (v343 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v393;
          unint64_t v393 = (unint64_t)v391.i64[0] >> -(v343 & 0x3F);
          if ((v343 & 0x3F) == 0) {
            unint64_t v393 = 0;
          }
        }
        unint64_t v394 = v392.i64[0] + v343;
        unint64_t v339 = v393 | (v391.i64[1] << v394);
        if ((v394 & 0x3F) + v392.i64[1] >= 0x40)
        {
          *(void *)((char *)v249 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
          unint64_t v339 = (unint64_t)v391.i64[1] >> -(v394 & 0x3F);
          if ((v394 & 0x3F) == 0) {
            unint64_t v339 = 0;
          }
        }
        char v378 = 0;
        unint64_t v343 = v394 + v392.i64[1];
        uint64_t v377 = 1;
      }
      while ((v381 & 1) != 0);
      if ((v343 & 0x3F) != 0) {
        *(void *)((char *)v249 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
      }
      unint64_t result = (v343 - v250 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    unsigned int v252 = ((unsigned __int32)a3->i32[0] >> 8) & 0xFFFFF000 | ((unsigned __int16)a3->i32[0] >> 4);
    *(unsigned char *)(a1 + 2) = HIBYTE(a3->i32[0]);
    *(_WORD *)a1 = v252;
    *a2 = 2;
    return 3;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(uint64_t a1, unsigned char *a2, uint32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v11 = a6;
  if (a5 > 3)
  {
    uint64_t v14 = a5 & 0xFC;
    if (a5 == v14)
    {
      uint64_t v15 = 0;
      int64x2_t v16 = &v64;
      do
      {
        int64x2_t v17 = (unsigned __int32 *)v16;
        int16x8_t v18 = a3;
        uint64_t v19 = a5;
        do
        {
          uint32x4_t v20 = *v18++;
          uint32x4_t v21 = vshrq_n_u32(v20, 4uLL);
          *(v17 - 8) = v21.i32[0] & 0xFFFF0FFF;
          *(v17 - 4) = v21.i32[1] & 0xFFFF0FFF;
          *int64x2_t v17 = v21.i32[2] & 0xFFFF0FFF;
          v17[4] = v21.i32[3] & 0xFFFF0FFF;
          v17 += 16;
          v19 -= 4;
        }
        while (v19);
        ++v15;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int64x2_t v16 = (long long *)((char *)v16 + 4);
      }
      while (v15 != a6);
    }
    else
    {
      uint64_t v22 = 0;
      int16x8_t v23 = &v62;
      int16x8_t v24 = &v64;
      do
      {
        int16x8_t v25 = (unsigned __int32 *)v24;
        int16x8_t v26 = a3;
        uint64_t v27 = a5 & 0xFC;
        do
        {
          uint32x4_t v28 = *v26++;
          uint32x4_t v29 = vshrq_n_u32(v28, 4uLL);
          *(v25 - 8) = v29.i32[0] & 0xFFFF0FFF;
          *(v25 - 4) = v29.i32[1] & 0xFFFF0FFF;
          *int16x8_t v25 = v29.i32[2] & 0xFFFF0FFF;
          v25[4] = v29.i32[3] & 0xFFFF0FFF;
          v25 += 16;
          v27 -= 4;
        }
        while (v27);
        uint64_t v30 = v14;
        uint64_t v31 = a5 - v14;
        do
        {
          LODWORD(v23[v30]) = ((unsigned __int32)a3->i32[v30] >> 4) & 0xFFF0FFF;
          ++v30;
          --v31;
        }
        while (v31);
        ++v22;
        a3 = (uint32x4_t *)((char *)a3 + a4);
        int16x8_t v24 = (long long *)((char *)v24 + 4);
        int16x8_t v23 = (long long *)((char *)v23 + 4);
      }
      while (v22 != a6);
    }
  }
  else
  {
    int16x8_t v12 = &a3->i32[2];
    int16x8_t v13 = (int *)&v63;
    do
    {
      *(v13 - 4) = (*(v12 - 2) >> 4) & 0xFFF0FFF;
      if (a5 != 1)
      {
        *int16x8_t v13 = (*(v12 - 1) >> 4) & 0xFFF0FFF;
        if (a5 != 2) {
          v13[4] = (*v12 >> 4) & 0xFFF0FFF;
        }
      }
      int16x8_t v12 = (__int32 *)((char *)v12 + a4);
      ++v13;
      --v11;
    }
    while (v11);
  }
  int v46 = (unsigned __int16)v62;
  int v47 = WORD1(v62);
  int v48 = (unsigned __int16)v63;
  int v49 = WORD1(v63);
  int v50 = WORD2(v62);
  int v51 = WORD3(v62);
  int v52 = WORD2(v63);
  int v53 = WORD3(v63);
  int v54 = (unsigned __int16)v64;
  int v55 = WORD1(v64);
  int v56 = (unsigned __int16)v65;
  int v57 = WORD1(v65);
  int v58 = WORD2(v64);
  int v59 = WORD3(v64);
  if (a5 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = a5;
  }
  if (a5 >= 4) {
    unsigned int v33 = a5 - 4;
  }
  else {
    unsigned int v33 = 0;
  }
  int v60 = WORD2(v65);
  int v61 = WORD3(v65);
  if (a6 >= 2) {
    unsigned int v34 = 2;
  }
  else {
    unsigned int v34 = a6;
  }
  if (a6 >= 2) {
    unsigned int v35 = a6 - 2;
  }
  else {
    unsigned int v35 = 0;
  }
  char v36 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v46, a7, v32, v34);
  int v46 = WORD4(v62);
  int v47 = WORD5(v62);
  int v48 = WORD4(v63);
  int v49 = WORD5(v63);
  int v50 = WORD6(v62);
  int v51 = HIWORD(v62);
  int v52 = WORD6(v63);
  int v53 = HIWORD(v63);
  int v54 = WORD4(v64);
  int v55 = WORD5(v64);
  int v56 = WORD4(v65);
  int v57 = WORD5(v65);
  int v58 = WORD6(v64);
  int v59 = HIWORD(v64);
  int v60 = WORD6(v65);
  int v61 = HIWORD(v65);
  if (a6 >= 4) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = v35;
  }
  int v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 12, (uint64_t)&v46, a7, v32, v37);
  int v46 = (unsigned __int16)v66;
  int v47 = WORD1(v66);
  int v48 = (unsigned __int16)v67;
  int v49 = WORD1(v67);
  int v50 = WORD2(v66);
  int v51 = WORD3(v66);
  int v52 = WORD2(v67);
  int v53 = WORD3(v67);
  int v54 = (unsigned __int16)v68;
  int v55 = WORD1(v68);
  int v56 = (unsigned __int16)v69;
  int v57 = WORD1(v69);
  int v58 = WORD2(v68);
  int v59 = WORD3(v68);
  if (a5 >= 8) {
    unsigned int v39 = 4;
  }
  else {
    unsigned int v39 = v33;
  }
  int v60 = WORD2(v69);
  int v61 = WORD3(v69);
  int v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v46, a7, v39, v34);
  int v46 = WORD4(v66);
  int v47 = WORD5(v66);
  int v48 = WORD4(v67);
  int v49 = WORD5(v67);
  int v50 = WORD6(v66);
  int v51 = HIWORD(v66);
  int v52 = WORD6(v67);
  int v53 = HIWORD(v67);
  int v54 = WORD4(v68);
  int v55 = WORD5(v68);
  int v56 = WORD4(v69);
  int v57 = WORD5(v69);
  int v58 = WORD6(v68);
  int v59 = HIWORD(v68);
  int v60 = WORD6(v69);
  int v61 = HIWORD(v69);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 36, (uint64_t)&v46, a7, v39, v37);
  if (v40) {
    char v42 = 4;
  }
  else {
    char v42 = 0;
  }
  if (v38) {
    char v43 = 2;
  }
  else {
    char v43 = 0;
  }
  if (result) {
    char v44 = -8;
  }
  else {
    char v44 = -16;
  }
  *a2 = v44 | v42 | v36 | v43;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v5 = 0;
  uint64_t v6 = 0;
  uint64_t v270 = *MEMORY[0x263EF8340];
  BOOL v7 = a5 < 2;
  BOOL v8 = a4 < 4 || a5 < 2;
  BOOL v235 = v8;
  BOOL v9 = a4 < 4 || a5 == 0;
  BOOL v234 = v9;
  BOOL v10 = a4 < 3 || a5 < 2;
  BOOL v233 = v10;
  BOOL v11 = a4 < 3 || a5 == 0;
  BOOL v232 = v11;
  if (a4) {
    BOOL v12 = a5 < 2;
  }
  else {
    BOOL v12 = 1;
  }
  if (a4 < 2) {
    BOOL v7 = 1;
  }
  BOOL v230 = v7;
  BOOL v231 = v12;
  BOOL v13 = a4 < 2 || a5 == 0;
  BOOL v229 = v13;
  do
  {
    uint64_t v14 = 0;
    char v15 = v5;
    unsigned int v16 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::compBits[v6];
    *(&v268 + v6) = v16;
    switch(v16)
    {
      case 2u:
        uint64_t v14 = 5;
        break;
      case 0xAu:
        uint64_t v14 = 1;
        break;
      case 0xCu:
        uint64_t v14 = 2;
        break;
      case 0x10u:
        uint64_t v14 = 3;
        break;
      case 0x20u:
        uint64_t v14 = 4;
        break;
      default:
        break;
    }
    uint64_t v17 = v6;
    *(int *)((char *)&v246 + v17 * 4) = v14;
    unsigned int v18 = 1 << (v16 - 1);
    v245[v17 + 2] = v18;
    uint64_t v19 = (unsigned int *)(a2 + 4 * v6);
    if (a3 == 1)
    {
      uint32x4_t v21 = (unsigned int *)((char *)&v249 + v17 * 4);
      if ((*v19 ^ v18) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *v19 ^ v18;
      }
      *uint32x4_t v21 = v20;
      if ((v19[2] ^ v18) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v19[2] ^ v18;
      }
      v21[2] = v22;
      if ((v19[4] ^ v18) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v19[4] ^ v18;
      }
      v21[4] = v23;
      if ((v19[6] ^ v18) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v19[6] ^ v18;
      }
      v21[6] = v24;
      if ((v19[8] ^ v18) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v19[8] ^ v18;
      }
      v21[8] = v25;
      if ((v19[10] ^ v18) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v19[10] ^ v18;
      }
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *v19 ^ v18;
      uint32x4_t v21 = (unsigned int *)((char *)&v249 + v17 * 4);
      *uint32x4_t v21 = v20;
      unsigned int v22 = v19[2] ^ v18;
      v21[2] = v22;
      unsigned int v23 = v19[4] ^ v18;
      v21[4] = v23;
      unsigned int v24 = v19[6] ^ v18;
      v21[6] = v24;
      unsigned int v25 = v19[8] ^ v18;
      v21[8] = v25;
      unsigned int v26 = v19[10] ^ v18;
      v21[10] = v26;
      unsigned int v27 = v19[12] ^ v18;
      v21[12] = v27;
      unsigned int v28 = v19[14] ^ v18;
    }
    else
    {
      unsigned int v20 = *v19;
      uint32x4_t v21 = (unsigned int *)((char *)&v249 + v17 * 4);
      *uint32x4_t v21 = *v19;
      unsigned int v22 = v19[2];
      v21[2] = v22;
      unsigned int v23 = v19[4];
      v21[4] = v23;
      unsigned int v24 = v19[6];
      v21[6] = v24;
      unsigned int v25 = v19[8];
      v21[8] = v25;
      unsigned int v26 = v19[10];
      v21[10] = v26;
      unsigned int v27 = v19[12];
      v21[12] = v27;
      unsigned int v28 = v19[14];
    }
    v21[14] = v28;
    uint32x4_t v29 = &v267[v17 + 2];
    v267[v6 + 2] = v20;
    v267[v6 + 4] = v20;
    v267[v6] = 0;
    if (v229)
    {
      unsigned int v30 = v20;
      if (v231) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v30 = v20;
      if (v22 < v20)
      {
        v267[v6] = 1;
        v267[v6 + 4] = v22;
        unsigned int v30 = v22;
      }
      if (v20 >= v22) {
        uint64_t v31 = &v267[v17 + 2];
      }
      else {
        uint64_t v31 = (unsigned int *)(&v251 + v6);
      }
      unsigned int v20 = *v31;
      *uint32x4_t v29 = *v31;
      if (v231)
      {
LABEL_58:
        if (v230) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v30)
    {
      v267[v6] = 2;
      v267[v6 + 4] = v23;
      unsigned int v30 = v23;
    }
    if (v20 >= v23) {
      unsigned int v32 = &v267[v17 + 2];
    }
    else {
      unsigned int v32 = (unsigned int *)(&v253 + v6);
    }
    unsigned int v20 = *v32;
    *uint32x4_t v29 = *v32;
    if (v230)
    {
LABEL_59:
      if (v232) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v30)
    {
      v267[v6] = 3;
      v267[v6 + 4] = v24;
      unsigned int v30 = v24;
    }
    if (v20 >= v24) {
      unsigned int v33 = &v267[v17 + 2];
    }
    else {
      unsigned int v33 = (unsigned int *)(&v255 + v6);
    }
    unsigned int v20 = *v33;
    *uint32x4_t v29 = *v33;
    if (v232)
    {
LABEL_60:
      if (v234) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v30)
    {
      v267[v6] = 4;
      v267[v6 + 4] = v25;
      unsigned int v30 = v25;
    }
    if (v20 >= v25) {
      unsigned int v34 = &v267[v17 + 2];
    }
    else {
      unsigned int v34 = (unsigned int *)(&v257 + v6);
    }
    unsigned int v20 = *v34;
    *uint32x4_t v29 = *v34;
    if (v234)
    {
LABEL_61:
      if (v233) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v30)
    {
      v267[v6] = 5;
      v267[v6 + 4] = v26;
      unsigned int v30 = v26;
    }
    if (v20 >= v26) {
      unsigned int v35 = &v267[v17 + 2];
    }
    else {
      unsigned int v35 = (unsigned int *)(&v259 + v6);
    }
    unsigned int v20 = *v35;
    *uint32x4_t v29 = *v35;
    if (v233)
    {
LABEL_62:
      if (v235) {
        goto LABEL_106;
      }
LABEL_100:
      if (v28 < v30)
      {
        v267[v6] = 7;
        v267[v6 + 4] = v28;
        unsigned int v30 = v28;
      }
      if (v20 >= v28) {
        unsigned int v37 = &v267[v17 + 2];
      }
      else {
        unsigned int v37 = (unsigned int *)(&v263 + v6);
      }
      unsigned int v20 = *v37;
      *uint32x4_t v29 = *v37;
      goto LABEL_106;
    }
LABEL_94:
    if (v27 < v30)
    {
      v267[v6] = 6;
      v267[v6 + 4] = v27;
      unsigned int v30 = v27;
    }
    if (v20 >= v27) {
      char v36 = &v267[v17 + 2];
    }
    else {
      char v36 = (unsigned int *)(&v261 + v6);
    }
    unsigned int v20 = *v36;
    *uint32x4_t v29 = *v36;
    if (!v235) {
      goto LABEL_100;
    }
LABEL_106:
    unsigned int v38 = __clz(v20 - v30);
    unsigned int v39 = 32 - v38;
    int v40 = 1;
    switch(v16)
    {
      case 2u:
        BOOL v41 = v38 == 31;
        goto LABEL_118;
      case 8u:
        break;
      case 0xAu:
        if (v38 - 29 < 3) {
          unsigned int v39 = 3;
        }
        goto LABEL_122;
      case 0xCu:
        if ((v38 & 0x3C) == 0x1C) {
          unsigned int v39 = 4;
        }
        int v40 = -2;
        break;
      case 0x10u:
        BOOL v41 = v20 == 0xFFFF && v38 == 31;
LABEL_118:
        if (v41) {
          unsigned int v39 = 2;
        }
        goto LABEL_122;
      case 0x20u:
        unsigned int v39 = (v39 & 1) + (v39 >> 1);
LABEL_122:
        int v40 = -1;
        break;
      default:
        int v40 = 0;
        break;
    }
    unsigned int v42 = (v39 + v40) & ~((int)(v39 + v40) >> 31);
    if (v20 == v30 && v16 - 8 <= 4 && v42 <= 2)
    {
      if (v30) {
        unsigned int v42 = v30 != ~(-1 << v16) || v16 > 0xB;
      }
      else {
        unsigned int v42 = 0;
      }
    }
    *(&v265 + v6) = v42;
    if ((a3 | 2) == 3)
    {
      BOOL v43 = 0;
      if (v20 >= v18 && v30 < v18) {
        BOOL v43 = kDQuadParamTable[160 * v14 + 8 + 10 * v42] == 0;
      }
    }
    else
    {
      BOOL v43 = 0;
    }
    if (v42 >= kDquadTransition[v14] || v43)
    {
      unsigned int v44 = kDQuadParamTable[160 * v14 + 4 + 10 * v42] - v43;
      if (v43) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v16 >= v44;
      unsigned int v46 = v16 - v44;
      BOOL v70 = v46 != 0 && v50;
      int v47 = v30 & ~(-1 << v46);
      if (!v70) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      unsigned int v49 = __clz(v48 + v20 - v30);
      BOOL v50 = v48 < 1 || v49 >= v38;
      if (v50)
      {
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v265 + v6) = ++v42;
        if (v16 != 32) {
          goto LABEL_22;
        }
      }
      if (kDquadMaxMode[v14] < v42) {
        unsigned int v42 = kDquadMaxMode[v14];
      }
      *(&v265 + v6) = v42;
    }
LABEL_22:
    char v5 = 1;
    uint64_t v6 = 1u;
  }
  while ((v15 & 1) == 0);
  int v51 = v246;
  int v52 = v247;
  unsigned int v54 = v265;
  unsigned int v53 = v266;
  BOOL v56 = v266 >= v265;
  BOOL v57 = v266 < v265;
  int v58 = kDQuadParamTable[160 * v247 + 6 + 10 * v266];
  int v243 = kDQuadParamTable[160 * v246 + 6 + 10 * v265];
  int v55 = v243;
  int v244 = v58;
  v245[0] = v243;
  v245[1] = v58;
  if (*(&v265 + v56) == *(&v265 + v57))
  {
    int v59 = v243;
  }
  else
  {
    int v60 = *(_DWORD *)((unint64_t)v245 | (4 * v57));
    int v59 = v243;
    if (v60 >= 1)
    {
      *(_DWORD *)((unint64_t)&v243 | (4 * v57)) = 0;
      *(_DWORD *)((unint64_t)&v243 | (4 * v56)) += v60;
      int v59 = v243;
    }
  }
  int v61 = &kDQuadParamTable[160 * v51 + 10 * v54];
  unint64_t v62 = *((void *)v61 + 1);
  unsigned int v64 = v61[4];
  unsigned int v63 = v61[5];
  if (a4) {
    BOOL v65 = a5 == 0;
  }
  else {
    BOOL v65 = 1;
  }
  int v66 = v65;
  int v228 = v66;
  unsigned int v241 = v64;
  unsigned int v239 = v63;
  int v67 = v59 - v55;
  if (v67 < 0)
  {
    if (kDQuadParamTable[160 * v51 + 7 + 10 * v54] < -v67)
    {
      unsigned int v239 = --v63;
      if (!kDQuadParamTable[160 * v51 + 8 + 10 * v54])
      {
        int v68 = -1;
LABEL_167:
        unsigned int v241 = v68 + v64;
      }
    }
  }
  else if (v67)
  {
    v63 += v67;
    unsigned int v239 = v63;
    int v68 = v67;
    goto LABEL_167;
  }
  BOOL v70 = v51 == 5 && v54 == 1 && v67 < 2;
  int v71 = v70;
  if (a3 == 4)
  {
    if (v51 == 3) {
      int v72 = 31744;
    }
    else {
      int v72 = 0;
    }
    if (v51 == 4) {
      int v73 = 2139095040;
    }
    else {
      int v73 = v72;
    }
    int v74 = 1 << (v268 - 1);
    if (v66)
    {
      if (v229) {
        goto LABEL_188;
      }
LABEL_355:
      if ((v73 & ~v251) == 0 || v251 == v74) {
        int v71 = 1;
      }
      if (!v231) {
        goto LABEL_362;
      }
LABEL_189:
      if (v230) {
        goto LABEL_190;
      }
LABEL_369:
      if ((v73 & ~v255) == 0 || v255 == v74) {
        int v71 = 1;
      }
      if (!v232) {
        goto LABEL_376;
      }
LABEL_191:
      if (v234) {
        goto LABEL_192;
      }
LABEL_383:
      if ((v73 & ~v259) == 0 || v259 == v74) {
        int v71 = 1;
      }
      if (!v233) {
        goto LABEL_390;
      }
LABEL_193:
      if (!v235) {
        goto LABEL_194;
      }
    }
    else
    {
      if ((v73 & ~v249) == 0 || v249 == v74) {
        int v71 = 1;
      }
      if (!v229) {
        goto LABEL_355;
      }
LABEL_188:
      if (v231) {
        goto LABEL_189;
      }
LABEL_362:
      if ((v73 & ~v253) == 0 || v253 == v74) {
        int v71 = 1;
      }
      if (!v230) {
        goto LABEL_369;
      }
LABEL_190:
      if (v232) {
        goto LABEL_191;
      }
LABEL_376:
      if ((v73 & ~v257) == 0 || v257 == v74) {
        int v71 = 1;
      }
      if (!v234) {
        goto LABEL_383;
      }
LABEL_192:
      if (v233) {
        goto LABEL_193;
      }
LABEL_390:
      if ((v73 & ~v261) == 0 || v261 == v74) {
        int v71 = 1;
      }
      if (!v235)
      {
LABEL_194:
        if ((v73 & ~v263) == 0 || v263 == v74) {
          int v71 = 1;
        }
      }
    }
  }
  BOOL v70 = v62 >> v63 > 0x40;
  int v76 = v66;
  if (v70) {
    int v76 = 1;
  }
  int v77 = v76 | v71;
  int16x8_t v78 = &kDQuadParamTable[160 * v52 + 10 * v53];
  unint64_t v79 = *((void *)v78 + 1);
  unsigned int v81 = v78[4];
  unsigned int v80 = v78[5];
  unsigned int v242 = v81;
  unsigned int v240 = v80;
  int v82 = v244 - v58;
  if (v244 - v58 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v53] < v58 - v244)
    {
      unsigned int v240 = --v80;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v53])
      {
        int v83 = -1;
LABEL_206:
        unsigned int v242 = v83 + v81;
      }
    }
  }
  else if (v244 != v58)
  {
    v80 += v82;
    unsigned int v240 = v80;
    int v83 = v244 - v58;
    goto LABEL_206;
  }
  if (v52 == 5 && v53 == 1 && v82 < 2) {
    int v77 = 1;
  }
  if (a3 == 4)
  {
    if (v52 == 3) {
      int v84 = 31744;
    }
    else {
      int v84 = 0;
    }
    if (v52 == 4) {
      int v84 = 2139095040;
    }
    int v85 = 1 << (v269 - 1);
    if (v228)
    {
      if (v229) {
        goto LABEL_221;
      }
LABEL_405:
      if ((v84 & ~v252) == 0 || v252 == v85) {
        int v77 = 1;
      }
      if (!v231) {
        goto LABEL_412;
      }
LABEL_222:
      if (v230) {
        goto LABEL_223;
      }
LABEL_419:
      if ((v84 & ~v256) == 0 || v256 == v85) {
        int v77 = 1;
      }
      if (!v232) {
        goto LABEL_426;
      }
LABEL_224:
      if (v234) {
        goto LABEL_225;
      }
LABEL_433:
      if ((v84 & ~v260) == 0 || v260 == v85) {
        int v77 = 1;
      }
      if (!v233) {
        goto LABEL_440;
      }
LABEL_226:
      if (!v235) {
        goto LABEL_227;
      }
    }
    else
    {
      if ((v84 & ~v250) == 0 || v250 == v85) {
        int v77 = 1;
      }
      if (!v229) {
        goto LABEL_405;
      }
LABEL_221:
      if (v231) {
        goto LABEL_222;
      }
LABEL_412:
      if ((v84 & ~v254) == 0 || v254 == v85) {
        int v77 = 1;
      }
      if (!v230) {
        goto LABEL_419;
      }
LABEL_223:
      if (v232) {
        goto LABEL_224;
      }
LABEL_426:
      if ((v84 & ~v258) == 0 || v258 == v85) {
        int v77 = 1;
      }
      if (!v234) {
        goto LABEL_433;
      }
LABEL_225:
      if (v233) {
        goto LABEL_226;
      }
LABEL_440:
      if ((v84 & ~v262) == 0 || v262 == v85) {
        int v77 = 1;
      }
      if (!v235)
      {
LABEL_227:
        if ((v84 & ~v264) == 0 || v264 == v85) {
          int v77 = 1;
        }
      }
    }
  }
  char v87 = 0;
  uint64_t v88 = 0;
  BOOL v70 = v79 >> v80 > 0x40;
  int v89 = v228;
  if (v70) {
    int v89 = 1;
  }
  int v225 = v89;
  int v226 = v77;
  uint64_t v238 = 0;
  uint64_t v237 = 0;
  memset(v236, 0, sizeof(v236));
  do
  {
    uint64_t v90 = 0;
    unsigned int v91 = 0;
    unsigned int v92 = *(&v268 + v88);
    if (v92 >= *(&v241 + v88)) {
      unsigned int v93 = *(&v241 + v88);
    }
    else {
      unsigned int v93 = *(&v268 + v88);
    }
    *(&v241 + v88) = v93;
    int8x16_t v94 = &kDQuadParamTable[160 * *(&v246 + v88) + 10 * *(&v265 + v88)];
    if (v94[5]) {
      unsigned int v95 = v92;
    }
    else {
      unsigned int v95 = 0;
    }
    if (v95 >= *(&v239 + v88)) {
      unsigned int v95 = *(&v239 + v88);
    }
    int v96 = v267[v88 + 4] & (-1 << (v92 - v93));
    int8x16_t v97 = &v249 + v88;
    int v98 = *v97 - v96;
    uint64_t v99 = 32 * v88;
    int16x8_t v100 = &v248[32 * v88];
    if (v228) {
      int v98 = 0;
    }
    int v101 = v97[2] - v96;
    if (v229) {
      int v101 = 0;
    }
    *int16x8_t v100 = v98;
    v100[1] = v101;
    int v102 = v97[4] - v96;
    if (v231) {
      int v102 = 0;
    }
    int v103 = v97[6] - v96;
    if (v230) {
      int v103 = 0;
    }
    v100[2] = v102;
    v100[3] = v103;
    int v104 = v97[8] - v96;
    if (v232) {
      int v104 = 0;
    }
    int v105 = v97[10] - v96;
    if (v234) {
      int v105 = 0;
    }
    v100[4] = v104;
    v100[5] = v105;
    int v106 = v97[12] - v96;
    if (v233) {
      int v106 = 0;
    }
    int v107 = v97[14] - v96;
    if (v235) {
      int v107 = 0;
    }
    v100[6] = v106;
    v100[7] = v107;
    char v108 = v87;
    *(&v239 + v88) = v95;
    unint64_t v109 = *((void *)v94 + 1);
    *((_DWORD *)&v238 + v88) = v96;
    unint64_t v110 = v109 >> v95;
    int v111 = ~(-1 << v92);
    if (v110 <= 1) {
      unint64_t v112 = 1;
    }
    else {
      unint64_t v112 = v110;
    }
    uint64_t v113 = 2 * v267[v88];
    do
    {
      if (v113 != v90)
      {
        if (v95) {
          unint64_t v114 = *(unsigned int *)&v248[v99] / v112;
        }
        else {
          LODWORD(v114) = 0;
        }
        int16x8_t v115 = (int *)v236 + 7 * v88 + v91;
        *int16x8_t v115 = v114;
        if (v110 >= 2)
        {
          unint64_t v116 = *(unsigned int *)&v248[v99];
          if (v116)
          {
            if (v116 / v112 * v112 == v116 && ((v116 / v112) & 1) != 0)
            {
              if (v96 || v114 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v118 = v97[v90], v119 = v245[v88 + 2], v118 != v119)
                  && ((a3 | 2) != 3 || v112 + v119 != v118))
                {
                  LODWORD(v114) = v114 - 1;
                  *int16x8_t v115 = v114;
                }
              }
              else
              {
                LODWORD(v114) = 1;
              }
            }
          }
        }
        if ((unint64_t)v114 >> v95 || v97[v90] == v111) {
          *int16x8_t v115 = ~(-1 << v95);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v90 + 1) >= a5
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v90) >= a4)
        {
          *int16x8_t v115 = 0;
        }
        ++v91;
      }
      v99 += 4;
      v90 += 2;
    }
    while (v90 != 16);
    char v87 = 1;
    uint64_t v88 = 1;
  }
  while ((v108 & 1) == 0);
  int16x8_t v121 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v122 = 8 * (a1 & 7);
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)a1 = 0;
  if ((v225 | v226) == 1)
  {
    uint64_t v123 = 0;
    uint64_t v124 = 0;
    unsigned int v125 = v268;
    unsigned int v126 = v269;
    uint64_t v127 = v268 - 6;
    uint64_t v128 = v269 - 6;
    uint64_t v129 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v130 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v123;
      BOOL v131 = v130[1] >= a5 || *v130 >= a4;
      char v132 = v131;
      if (v131)
      {
        unint64_t v133 = 0;
        if (v127 > 0x100) {
          goto LABEL_315;
        }
      }
      else
      {
        unint64_t v133 = (unint64_t)*(&v249 + 2 * v123) >> 6;
        if (v127 > 0x100) {
          goto LABEL_315;
        }
      }
      if (v125 != 6 && (unint64_t)(v129 - v122 + (v124 << 6) + v127) <= 0x60)
      {
        uint64_t v134 = 0;
        unint64_t v135 = v125 - 6;
        do
        {
          unint64_t v136 = 64 - v129;
          if (64 - v129 >= v135) {
            unint64_t v136 = v135;
          }
          v121[v124] |= ((v133 >> v134) & ~(-1 << v136)) << v129;
          v134 += v136;
          unint64_t v137 = v136 + v129;
          v124 += v137 >> 6;
          uint64_t v129 = v137 & 0x3F;
          v135 -= v136;
        }
        while (v135);
      }
LABEL_315:
      if (v132)
      {
        unint64_t v138 = 0;
        if (v128 <= 0x100) {
          goto LABEL_319;
        }
      }
      else
      {
        unint64_t v138 = (unint64_t)*(&v249 + 2 * v123 + 1) >> 6;
        if (v128 <= 0x100)
        {
LABEL_319:
          if (v126 != 6 && (unint64_t)(v129 - v122 + (v124 << 6) + v128) <= 0x60)
          {
            uint64_t v139 = 0;
            unint64_t v140 = v126 - 6;
            do
            {
              unint64_t v141 = 64 - v129;
              if (64 - v129 >= v140) {
                unint64_t v141 = v140;
              }
              v121[v124] |= ((v138 >> v139) & ~(-1 << v141)) << v129;
              v139 += v141;
              unint64_t v142 = v141 + v129;
              v124 += v142 >> 6;
              uint64_t v129 = v142 & 0x3F;
              v140 -= v141;
            }
            while (v140);
          }
        }
      }
      if (++v123 == 8) {
        return v225 | v226;
      }
    }
  }
  unsigned int v144 = v265;
  unsigned int v143 = v266;
  BOOL v145 = v265 < 4;
  char v146 = v265 - 3;
  if (v265 <= 3) {
    unint64_t v147 = v265;
  }
  else {
    unint64_t v147 = 0;
  }
  if (v265 < 3) {
    char v146 = 0;
  }
  unint64_t v148 = ((unint64_t)(v146 & 7) << v122) | *v121;
  *int16x8_t v121 = v148;
  uint64_t v149 = v122 | 3;
  if (v143 <= 3) {
    unint64_t v150 = v143;
  }
  else {
    unint64_t v150 = 0;
  }
  if ((unint64_t)(v149 - v122 - 94) >= 0xFFFFFFFFFFFFFF9FLL)
  {
    if (v143 <= 3) {
      uint64_t v151 = 0;
    }
    else {
      uint64_t v151 = ((_BYTE)v143 + 5) & 7;
    }
    *int16x8_t v121 = (v151 << v149) | v148;
    uint64_t v149 = v122 | 6;
  }
  if (v144 <= 3)
  {
    unint64_t v174 = (2 * v145);
    if (v149 - v122 + v174 <= 0x60)
    {
      uint64_t v152 = 0;
      uint64_t v175 = 0;
      unint64_t v176 = v174;
      do
      {
        unint64_t v177 = 64 - v149;
        if (64 - v149 >= v176) {
          unint64_t v177 = v176;
        }
        v121[v152] |= ((v147 >> v175) & ~(-1 << v177)) << v149;
        v175 += v177;
        unint64_t v178 = v177 + v149;
        v152 += v178 >> 6;
        uint64_t v149 = v178 & 0x3F;
        v176 -= v177;
      }
      while (v176);
    }
    else
    {
      uint64_t v152 = 0;
    }
    int v153 = v174 + 6;
    if (v143 > 3) {
      goto LABEL_455;
    }
LABEL_341:
    uint64_t v154 = 2 * (v143 < 4);
    if ((unint64_t)(v149 - v122 + (v152 << 6) + v154) <= 0x60)
    {
      uint64_t v155 = 0;
      unint64_t v156 = 2 * (v143 < 4);
      do
      {
        unint64_t v157 = 64 - v149;
        if (64 - v149 >= v156) {
          unint64_t v157 = v156;
        }
        v121[v152] |= ((v150 >> v155) & ~(-1 << v157)) << v149;
        v155 += v157;
        unint64_t v158 = v157 + v149;
        v152 += v158 >> 6;
        uint64_t v149 = v158 & 0x3F;
        v156 -= v157;
      }
      while (v156);
    }
    v153 += v154;
    unsigned int v159 = v268;
    if (!v144) {
      goto LABEL_465;
    }
LABEL_456:
    unsigned int v179 = v241;
    if (v241 <= 0x100 && v241 && v149 - v122 + (v152 << 6) + (unint64_t)v241 <= 0x60)
    {
      uint64_t v180 = 0;
      unint64_t v181 = v238 >> (v159 - v241);
      unint64_t v182 = v241;
      do
      {
        unint64_t v183 = 64 - v149;
        if (64 - v149 >= v182) {
          unint64_t v183 = v182;
        }
        v121[v152] |= ((v181 >> v180) & ~(-1 << v183)) << v149;
        v180 += v183;
        unint64_t v184 = v183 + v149;
        v152 += v184 >> 6;
        uint64_t v149 = v184 & 0x3F;
        v182 -= v183;
      }
      while (v182);
    }
    v153 += v179;
    unsigned int v185 = v269;
    if (!v143) {
      goto LABEL_521;
    }
LABEL_468:
    unsigned int v186 = v242;
    if (v242 <= 0x100 && v242 && v149 - v122 + (v152 << 6) + (unint64_t)v242 <= 0x60)
    {
      uint64_t v187 = 0;
      unint64_t v188 = (HIDWORD(v238) >> (v185 - v242));
      unint64_t v189 = v242;
      do
      {
        unint64_t v190 = 64 - v149;
        if (64 - v149 >= v189) {
          unint64_t v190 = v189;
        }
        v121[v152] |= ((v188 >> v187) & ~(-1 << v190)) << v149;
        v187 += v190;
        unint64_t v191 = v190 + v149;
        v152 += v191 >> 6;
        uint64_t v149 = v191 & 0x3F;
        v189 -= v190;
      }
      while (v189);
    }
    v153 += v186;
  }
  else
  {
    uint64_t v152 = 0;
    int v153 = 6;
    if (v143 <= 3) {
      goto LABEL_341;
    }
LABEL_455:
    unsigned int v159 = v268;
    if (v144) {
      goto LABEL_456;
    }
LABEL_465:
    if (v159 == 2 || v159 >= 0x10) {
      goto LABEL_456;
    }
    unsigned int v185 = v269;
    if (v143) {
      goto LABEL_468;
    }
LABEL_521:
    if (v185 == 2 || v185 >= 0x10) {
      goto LABEL_468;
    }
  }
  unint64_t v192 = v239;
  if (v239)
  {
    if ((unint64_t)(v149 - v122 + (v152 << 6) + 3) <= 0x60)
    {
      uint64_t v193 = 0;
      unint64_t v194 = v267[0];
      unint64_t v195 = 3;
      do
      {
        unint64_t v196 = 64 - v149;
        if (64 - v149 >= v195) {
          unint64_t v196 = v195;
        }
        v121[v152] |= ((v194 >> v193) & ~(-1 << v196)) << v149;
        v193 += v196;
        unint64_t v197 = v196 + v149;
        v152 += v197 >> 6;
        uint64_t v149 = v197 & 0x3F;
        v195 -= v196;
      }
      while (v195);
    }
    v153 += 3;
  }
  unint64_t v198 = v240;
  if (v240)
  {
    if ((unint64_t)(v149 - v122 + (v152 << 6) + 3) <= 0x60)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v267[1];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v149;
        if (64 - v149 >= v201) {
          unint64_t v202 = v201;
        }
        v121[v152] |= ((v200 >> v199) & ~(-1 << v202)) << v149;
        v199 += v202;
        unint64_t v203 = v202 + v149;
        v152 += v203 >> 6;
        uint64_t v149 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v153 += 3;
  }
  unsigned int v204 = 96 - v153;
  unsigned int v205 = (96 - v153) / 7u;
  unint64_t v206 = v204 % 7;
  if ((v206 - 257) >= 0xFFFFFF00 && v149 - v122 + (v152 << 6) + v206 <= 0x60)
  {
    do
    {
      unint64_t v207 = 64 - v149;
      if (64 - v149 >= v206) {
        unint64_t v207 = v206;
      }
      unint64_t v208 = v207 + v149;
      v152 += v208 >> 6;
      uint64_t v149 = v208 & 0x3F;
      v206 -= v207;
    }
    while (v206);
  }
  uint64_t v209 = 0;
  int v210 = v198 + v192;
  while (2)
  {
    if (v192 && v192 <= 0x100 && v149 - v122 + (v152 << 6) + v192 <= 0x60)
    {
      uint64_t v211 = 0;
      unint64_t v212 = *((unsigned int *)v236 + v209);
      unint64_t v213 = v192;
      do
      {
        unint64_t v214 = 64 - v149;
        if (64 - v149 >= v213) {
          unint64_t v214 = v213;
        }
        v121[v152] |= ((v212 >> v211) & ~(-1 << v214)) << v149;
        v211 += v214;
        unint64_t v215 = v214 + v149;
        v152 += v215 >> 6;
        uint64_t v149 = v215 & 0x3F;
        v213 -= v214;
      }
      while (v213);
    }
    if (v198)
    {
      if (v198 <= 0x100 && v149 - v122 + (v152 << 6) + v198 <= 0x60)
      {
        uint64_t v216 = 0;
        unint64_t v217 = *((unsigned int *)&v236[1] + v209 + 3);
        unint64_t v218 = v198;
        do
        {
          unint64_t v219 = 64 - v149;
          if (64 - v149 >= v218) {
            unint64_t v219 = v218;
          }
          v121[v152] |= ((v217 >> v216) & ~(-1 << v219)) << v149;
          v216 += v219;
          unint64_t v220 = v219 + v149;
          v152 += v220 >> 6;
          uint64_t v149 = v220 & 0x3F;
          v218 -= v219;
        }
        while (v218);
      }
      unint64_t v221 = v205 - v210;
      if (v205 != v210)
      {
LABEL_514:
        if (v221 <= 0x100 && v149 - v122 + (v152 << 6) + v221 <= 0x60)
        {
          do
          {
            unint64_t v222 = 64 - v149;
            if (64 - v149 >= v221) {
              unint64_t v222 = v221;
            }
            unint64_t v223 = v222 + v149;
            v152 += v223 >> 6;
            uint64_t v149 = v223 & 0x3F;
            v221 -= v222;
          }
          while (v221);
        }
      }
    }
    else
    {
      unint64_t v221 = v205 - v192;
      if (v205 != v192) {
        goto LABEL_514;
      }
    }
    if (++v209 != 7) {
      continue;
    }
    return v225 | v226;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = ((a3 & 0xFFFFFFFD) == 1) << 11;
  uint64_t result = v6;
  do
  {
    if ((unint64_t)(result - v6 + (v4 << 6) - 91) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      char v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 6;
      do
      {
        unint64_t v18 = 64 - result;
        if (64 - result >= v17) {
          unint64_t v18 = v17;
        }
        v15 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v18)) << v16;
        v16 += v18;
        unint64_t v19 = v18 + result;
        v4 += v19 >> 6;
        uint64_t result = v19 & 0x3F;
        v17 -= v18;
      }
      while (v17);
    }
    else
    {
      char v15 = 0;
    }
    int v20 = (v15 & 0x3F) << 6;
    if (a3 != 4)
    {
      BOOL v25 = v20 == 2048 && v7 == 1;
      if (!v25 && v20)
      {
        if (v20 == 4032) {
          int v20 = 4095;
        }
        else {
          v20 |= 32 - (v15 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 8 * v3) = v20 ^ v8;
    if ((unint64_t)(result - v6 + (v4 << 6) - 91) < 0xFFFFFFFFFFFFFF9FLL)
    {
      char v10 = 0;
    }
    else
    {
      char v10 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 6;
      do
      {
        unint64_t v23 = 64 - result;
        if (64 - result >= v22) {
          unint64_t v23 = v22;
        }
        v10 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v23)) << v21;
        v21 += v23;
        unint64_t v24 = v23 + result;
        v4 += v24 >> 6;
        uint64_t result = v24 & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    int v11 = (v10 & 0x3F) << 6;
    int v12 = (32 - (v10 & 1)) | v11;
    if (v11 == 4032) {
      int v12 = 4095;
    }
    if (v11 == 2048 && v7 == 1 || v11 == 0) {
      int v12 = v11;
    }
    if (a3 == 4) {
      int v12 = v11;
    }
    *(_DWORD *)(a2 + 8 * v3++ + 4) = v12 ^ v8;
  }
  while (v3 != 8);
  return result;
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v195 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x5D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v190[0] = 12;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v180 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v180 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::getDquadModeData(0, v12, v14, &v191);
  v194[0] = DquadModeData;
  v193[0] = 2;
  v190[1] = 12;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 95) >= 0xFFFFFFFFFFFFFF9FLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)6,(AGXTextureFootprint)3>::getDquadModeData(1, v11, v20, &v192);
  v194[1] = v24;
  v193[1] = 2;
  BOOL v26 = v24 < DquadModeData;
  unsigned int v27 = v24;
  int v28 = dword_242EA9688[10 * v24 + 6];
  int v187 = dword_242EA9688[10 * DquadModeData + 6];
  int v25 = v187;
  int v188 = v28;
  v189[0] = v187;
  v189[1] = v28;
  if (v194[v24 >= DquadModeData] == v194[v26])
  {
    int v29 = v187;
  }
  else
  {
    int v30 = *(_DWORD *)((unint64_t)v189 | (4 * v26));
    int v29 = v187;
    if (v30 >= 1)
    {
      *(_DWORD *)((unint64_t)&v187 | (4 * v26)) = 0;
      *(_DWORD *)((unint64_t)&v187 | (4 * (v24 >= DquadModeData))) += v30;
      int v29 = v187;
    }
  }
  uint64_t v31 = kDQuadParamTable;
  unsigned int v32 = &kDQuadParamTable[10 * DquadModeData];
  unsigned int v33 = v32[324];
  unsigned int v34 = v32[325];
  int v35 = v29 - v25;
  if (v35 >= 0)
  {
    unsigned int v36 = v34;
    if (!v35) {
      goto LABEL_37;
    }
    unsigned int v36 = v35 + v34;
    goto LABEL_32;
  }
  if (kDQuadParamTable[10 * DquadModeData + 327] >= -v35)
  {
    unsigned int v36 = v34;
  }
  else
  {
    unsigned int v36 = v34 - 1;
    if (!kDQuadParamTable[10 * DquadModeData + 328])
    {
      int v35 = -1;
LABEL_32:
      v33 += v35;
    }
  }
LABEL_37:
  if (v33 >= 0xC) {
    uint64_t v37 = 12;
  }
  else {
    uint64_t v37 = v33;
  }
  v186[0] = v37;
  if (v34) {
    LODWORD(v38) = 12;
  }
  else {
    LODWORD(v38) = 0;
  }
  if (v38 >= v36) {
    unint64_t v38 = v36;
  }
  else {
    unint64_t v38 = v38;
  }
  v185[0] = v38;
  unsigned int v39 = &kDQuadParamTable[10 * v24];
  LODWORD(v40) = v39[324];
  int v41 = v39[325];
  int v43 = v188 - v28;
  BOOL v42 = v188 == v28;
  if (v188 - v28 >= 0)
  {
    LODWORD(v44) = v41;
    if (v42) {
      goto LABEL_54;
    }
    LODWORD(v44) = v43 + v41;
    goto LABEL_49;
  }
  if (kDQuadParamTable[10 * v24 + 327] >= v28 - v188)
  {
    LODWORD(v44) = v41;
  }
  else
  {
    LODWORD(v44) = v41 - 1;
    if (!kDQuadParamTable[10 * v24 + 328])
    {
      int v43 = -1;
LABEL_49:
      LODWORD(v40) = v43 + v40;
    }
  }
LABEL_54:
  int v45 = v180 + v19;
  if (v40 >= 0xC) {
    uint64_t v40 = 12;
  }
  else {
    uint64_t v40 = v40;
  }
  v186[1] = v40;
  if (v41) {
    unsigned int v46 = 12;
  }
  else {
    unsigned int v46 = 0;
  }
  if (v46 >= v44) {
    unint64_t v44 = v44;
  }
  else {
    unint64_t v44 = v46;
  }
  v185[1] = v44;
  uint64_t v184 = 0;
  if (DquadModeData)
  {
    int v47 = 0;
    if (v37 && (unint64_t)(v10 - v6 + (v13 << 6) + v37) <= 0x60)
    {
      int v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = v37;
      do
      {
        unint64_t v50 = 64 - v10;
        if (64 - v10 >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v50)) << v48;
        v48 += v50;
        v13 += (v50 + v10) >> 6;
        uint64_t v10 = (v50 + v10) & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    LODWORD(v184) = v47 << (12 - v37);
    v45 += v37;
    if (v27)
    {
LABEL_71:
      int v51 = 0;
      if (v40 && (unint64_t)(v10 - v6 + (v13 << 6) + v40) <= 0x60)
      {
        int v51 = 0;
        uint64_t v52 = 0;
        unint64_t v53 = v40;
        do
        {
          unint64_t v54 = 64 - v10;
          if (64 - v10 >= v53) {
            unint64_t v54 = v53;
          }
          v51 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v54)) << v52;
          v52 += v54;
          v13 += (v54 + v10) >> 6;
          uint64_t v10 = (v54 + v10) & 0x3F;
          v53 -= v54;
        }
        while (v53);
      }
      HIDWORD(v184) = v51 << (12 - v40);
      v45 += v40;
      uint64_t v183 = 0;
      if (!v38) {
        goto LABEL_88;
      }
      goto LABEL_81;
    }
  }
  else
  {
    LODWORD(v184) = v191;
    if (v24) {
      goto LABEL_71;
    }
  }
  HIDWORD(v184) = v192;
  uint64_t v183 = 0;
  if (v38)
  {
LABEL_81:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v55 = 0;
      uint64_t v56 = 0;
      unint64_t v57 = 3;
      do
      {
        unint64_t v58 = 64 - v10;
        if (64 - v10 >= v57) {
          unint64_t v58 = v57;
        }
        v55 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v58)) << v56;
        v56 += v58;
        v13 += (v58 + v10) >> 6;
        uint64_t v10 = (v58 + v10) & 0x3F;
        v57 -= v58;
      }
      while (v57);
    }
    else
    {
      int v55 = 0;
    }
    LODWORD(v183) = v55;
    v45 += 3;
  }
LABEL_88:
  if (v44)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x60)
    {
      int v59 = 0;
      uint64_t v60 = 0;
      unint64_t v61 = 3;
      do
      {
        unint64_t v62 = 64 - v10;
        if (64 - v10 >= v61) {
          unint64_t v62 = v61;
        }
        v59 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v62)) << v60;
        v60 += v62;
        v13 += (v62 + v10) >> 6;
        uint64_t v10 = (v62 + v10) & 0x3F;
        v61 -= v62;
      }
      while (v61);
    }
    else
    {
      int v59 = 0;
    }
    HIDWORD(v183) = v59;
    v45 += 3;
  }
  uint64_t v63 = 0;
  unsigned int v64 = a3 & 0xFFFFFFFD;
  unsigned int v65 = 96 - v45;
  unsigned int v66 = (96 - v45) / 7u;
  unint64_t v67 = (v10 | (v13 << 6)) + v65 % 7;
  uint64_t v182 = 0;
  memset(v181, 0, sizeof(v181));
  do
  {
    unint64_t v69 = v67 >> 6;
    int64_t result = v67 & 0x3F;
    if (v38)
    {
      if (result - v6 + (v67 & 0xFFFFFFFFFFFFFFC0) + v38 <= 0x60)
      {
        int v71 = 0;
        uint64_t v72 = 0;
        unint64_t v73 = v38;
        do
        {
          unint64_t v74 = 64 - result;
          if (64 - result >= v73) {
            unint64_t v74 = v73;
          }
          v71 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v74)) << v72;
          v72 += v74;
          unint64_t v75 = v74 + result;
          v69 += v75 >> 6;
          int64_t result = v75 & 0x3F;
          v73 -= v74;
        }
        while (v73);
      }
      else
      {
        int v71 = 0;
      }
      *((_DWORD *)v181 + v63) = v71;
    }
    if (v44)
    {
      if (result - v6 + (v69 << 6) + v44 <= 0x60)
      {
        int v76 = 0;
        uint64_t v77 = 0;
        unint64_t v78 = v44;
        do
        {
          unint64_t v79 = 64 - result;
          if (64 - result >= v78) {
            unint64_t v79 = v78;
          }
          v76 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v79)) << v77;
          v77 += v79;
          unint64_t v80 = v79 + result;
          v69 += v80 >> 6;
          int64_t result = v80 & 0x3F;
          v78 -= v79;
        }
        while (v78);
      }
      else
      {
        int v76 = 0;
      }
      *((_DWORD *)&v181[1] + v63 + 3) = v76;
      int v68 = v44 + v38;
    }
    else
    {
      int v68 = v38;
    }
    unint64_t v67 = (result | (v69 << 6)) + v66 - v68;
    ++v63;
  }
  while (v63 != 7);
  char v81 = 0;
  uint64_t v82 = 0;
  do
  {
    char v87 = v81;
    unint64_t v88 = *(void *)&v31[160 * v193[v82] + 2 + 10 * v194[v82]];
    int v89 = v185[v82];
    if (v88 >> v89 <= 1) {
      unint64_t v90 = 1;
    }
    else {
      unint64_t v90 = v88 >> v89;
    }
    int v91 = v190[v82];
    unint64_t v92 = v90 >> 1;
    if (v90 >> 1 >= (unint64_t)(1 << (v91 - v186[v82])) >> 1) {
      unint64_t v93 = (unint64_t)(1 << (v91 - v186[v82])) >> 1;
    }
    else {
      unint64_t v93 = v90 >> 1;
    }
    unint64_t v94 = (1 << (v91 - 1));
    unint64_t v95 = v185[v82 - 2];
    unint64_t v96 = v94 - v95;
    unint64_t v97 = 1 << v91;
    int v98 = (1 << v91) - 1;
    if (v95) {
      unint64_t v99 = v93;
    }
    else {
      unint64_t v99 = 0;
    }
    BOOL v100 = v95 == v94;
    BOOL v101 = v91 == 16;
    if (v91 == 16) {
      unint64_t v102 = 31744;
    }
    else {
      unint64_t v102 = 2139095040;
    }
    if (v91 == 16) {
      unint64_t v103 = 64512;
    }
    else {
      unint64_t v103 = 4286578688;
    }
    unint64_t v104 = 2143289344;
    if (v101) {
      unint64_t v104 = 32256;
    }
    unint64_t v105 = 4290772992;
    if (v101) {
      unint64_t v105 = 65024;
    }
    unint64_t v106 = (v103 - 1);
    if (v89)
    {
      int64_t result = (int64_t)v31;
      unint64_t v107 = v88 + v95;
      uint64_t v108 = ~(-1 << v89);
      int v109 = *((_DWORD *)&v183 + v82);
      unint64_t v110 = v96 / v90;
      if (!v109)
      {
        uint64_t v118 = 0;
        unint64_t v113 = v99;
        BOOL v112 = v95 == v94;
        goto LABEL_181;
      }
      uint64_t v111 = *((unsigned int *)v181 + 7 * v82);
      BOOL v112 = v110 == v111;
      if (v95 | v111)
      {
        if (v107 >= v97 && v111 == v108)
        {
          uint64_t v118 = 1;
          unint64_t v113 = v97 - 1;
          goto LABEL_181;
        }
        unint64_t v113 = v92 + v90 * v111;
      }
      else
      {
        unint64_t v113 = 0;
      }
      uint64_t v118 = 1;
LABEL_181:
      unint64_t v119 = v113 + v95;
      unint64_t v120 = v119;
      if (a3 == 4)
      {
        BOOL v121 = v119 < v102 || v119 >= v104;
        unint64_t v120 = (v102 - 1);
        if (v121)
        {
          BOOL v122 = v119 < v104 || v119 >= v94;
          unint64_t v120 = v94;
          if (v122)
          {
            if (v119 < v105 && v119 >= v103) {
              unint64_t v120 = (v103 - 1);
            }
            else {
              unint64_t v120 = v119;
            }
          }
        }
      }
      if (v120 >= v97) {
        int v124 = v98;
      }
      else {
        int v124 = v120;
      }
      if (v112) {
        int v125 = 0;
      }
      else {
        int v125 = v124 ^ v94;
      }
      if (v64 != 1) {
        int v125 = v124;
      }
      *(_DWORD *)(a2 + 4 * v82) = v125;
      if (v109 == 1)
      {
        unint64_t v126 = v99;
        BOOL v127 = v95 == v94;
      }
      else
      {
        uint64_t v128 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v127 = v110 == v128;
        if (v95 | v128)
        {
          if (v107 < v97 || (unint64_t v126 = v97 - 1, v128 != v108)) {
            unint64_t v126 = v92 + v90 * v128;
          }
        }
        else
        {
          unint64_t v126 = 0;
        }
        ++v118;
      }
      unint64_t v129 = v126 + v95;
      unint64_t v130 = v129;
      if (a3 == 4)
      {
        BOOL v131 = v129 < v102 || v129 >= v104;
        unint64_t v130 = (v102 - 1);
        if (v131)
        {
          BOOL v132 = v129 < v104 || v129 >= v94;
          unint64_t v130 = v94;
          if (v132)
          {
            if (v129 < v105 && v129 >= v103) {
              unint64_t v130 = (v103 - 1);
            }
            else {
              unint64_t v130 = v129;
            }
          }
        }
      }
      if (v130 >= v97) {
        int v134 = v98;
      }
      else {
        int v134 = v130;
      }
      if (v127) {
        int v135 = 0;
      }
      else {
        int v135 = v134 ^ v94;
      }
      if (v64 != 1) {
        int v135 = v134;
      }
      *(_DWORD *)(a2 + 4 * v82 + 8) = v135;
      if (v109 == 2)
      {
        unint64_t v136 = v99;
        BOOL v137 = v95 == v94;
      }
      else
      {
        uint64_t v138 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v137 = v110 == v138;
        if (v95 | v138)
        {
          if (v107 < v97 || (unint64_t v136 = v97 - 1, v138 != v108)) {
            unint64_t v136 = v92 + v90 * v138;
          }
        }
        else
        {
          unint64_t v136 = 0;
        }
        ++v118;
      }
      unint64_t v139 = v136 + v95;
      unint64_t v140 = v139;
      if (a3 == 4)
      {
        if (v139 < v102 || (unint64_t v140 = (v102 - 1), v139 >= v104))
        {
          if (v139 < v104 || (unint64_t v140 = v94, v139 >= v94))
          {
            if (v139 < v105 && v139 >= v103) {
              unint64_t v140 = (v103 - 1);
            }
            else {
              unint64_t v140 = v139;
            }
          }
        }
      }
      if (v140 >= v97) {
        int v142 = v98;
      }
      else {
        int v142 = v140;
      }
      if (v137) {
        int v143 = 0;
      }
      else {
        int v143 = v142 ^ v94;
      }
      if (v64 != 1) {
        int v143 = v142;
      }
      *(_DWORD *)(a2 + 4 * v82 + 16) = v143;
      if (v109 == 3)
      {
        unint64_t v144 = v99;
        BOOL v145 = v95 == v94;
      }
      else
      {
        uint64_t v146 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v145 = v110 == v146;
        if (v95 | v146)
        {
          if (v107 < v97 || (unint64_t v144 = v97 - 1, v146 != v108)) {
            unint64_t v144 = v92 + v90 * v146;
          }
        }
        else
        {
          unint64_t v144 = 0;
        }
        ++v118;
      }
      unint64_t v147 = v144 + v95;
      unint64_t v148 = v147;
      if (a3 == 4)
      {
        if (v147 < v102 || (unint64_t v148 = (v102 - 1), v147 >= v104))
        {
          if (v147 < v104 || (unint64_t v148 = v94, v147 >= v94))
          {
            if (v147 < v105 && v147 >= v103) {
              unint64_t v148 = (v103 - 1);
            }
            else {
              unint64_t v148 = v147;
            }
          }
        }
      }
      if (v148 >= v97) {
        int v150 = v98;
      }
      else {
        int v150 = v148;
      }
      if (v145) {
        int v151 = 0;
      }
      else {
        int v151 = v150 ^ v94;
      }
      if (v64 != 1) {
        int v151 = v150;
      }
      *(_DWORD *)(a2 + 4 * v82 + 24) = v151;
      if (v109 == 4)
      {
        unint64_t v152 = v99;
        BOOL v153 = v95 == v94;
      }
      else
      {
        uint64_t v154 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v153 = v110 == v154;
        if (v95 | v154)
        {
          if (v107 < v97 || (unint64_t v152 = v97 - 1, v154 != v108)) {
            unint64_t v152 = v92 + v90 * v154;
          }
        }
        else
        {
          unint64_t v152 = 0;
        }
        ++v118;
      }
      unint64_t v155 = v152 + v95;
      unint64_t v156 = v155;
      if (a3 == 4)
      {
        if (v155 < v102 || (unint64_t v156 = (v102 - 1), v155 >= v104))
        {
          if (v155 < v104 || (unint64_t v156 = v94, v155 >= v94))
          {
            if (v155 < v105 && v155 >= v103) {
              unint64_t v156 = (v103 - 1);
            }
            else {
              unint64_t v156 = v155;
            }
          }
        }
      }
      if (v156 >= v97) {
        int v158 = v98;
      }
      else {
        int v158 = v156;
      }
      if (v153) {
        int v159 = 0;
      }
      else {
        int v159 = v158 ^ v94;
      }
      if (v64 != 1) {
        int v159 = v158;
      }
      *(_DWORD *)(a2 + 4 * v82 + 32) = v159;
      if (v109 == 5)
      {
        unint64_t v160 = v99;
        BOOL v161 = v95 == v94;
      }
      else
      {
        uint64_t v162 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v161 = v110 == v162;
        if (v95 | v162)
        {
          if (v107 < v97 || (unint64_t v160 = v97 - 1, v162 != v108)) {
            unint64_t v160 = v92 + v90 * v162;
          }
        }
        else
        {
          unint64_t v160 = 0;
        }
        ++v118;
      }
      unint64_t v163 = v160 + v95;
      unint64_t v164 = v163;
      if (a3 == 4)
      {
        if (v163 < v102 || (unint64_t v164 = (v102 - 1), v163 >= v104))
        {
          if (v163 < v104 || (unint64_t v164 = v94, v163 >= v94))
          {
            if (v163 < v105 && v163 >= v103) {
              unint64_t v164 = (v103 - 1);
            }
            else {
              unint64_t v164 = v163;
            }
          }
        }
      }
      if (v164 >= v97) {
        int v166 = v98;
      }
      else {
        int v166 = v164;
      }
      if (v161) {
        int v167 = 0;
      }
      else {
        int v167 = v166 ^ v94;
      }
      if (v64 != 1) {
        int v167 = v166;
      }
      *(_DWORD *)(a2 + 4 * v82 + 40) = v167;
      if (v109 == 6)
      {
        unint64_t v168 = v99;
        BOOL v169 = v95 == v94;
      }
      else
      {
        uint64_t v170 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v169 = v110 == v170;
        if (v95 | v170)
        {
          if (v107 < v97 || (unint64_t v168 = v97 - 1, v170 != v108)) {
            unint64_t v168 = v92 + v90 * v170;
          }
        }
        else
        {
          unint64_t v168 = 0;
        }
        ++v118;
      }
      unint64_t v171 = v168 + v95;
      unint64_t v172 = v171;
      if (a3 == 4)
      {
        if (v171 < v102 || (unint64_t v172 = (v102 - 1), v171 >= v104))
        {
          if (v171 < v104 || (unint64_t v172 = v94, v171 >= v94))
          {
            if (v171 < v105 && v171 >= v103) {
              unint64_t v172 = (v103 - 1);
            }
            else {
              unint64_t v172 = v171;
            }
          }
        }
      }
      if (v172 >= v97) {
        int v174 = v98;
      }
      else {
        int v174 = v172;
      }
      if (v169) {
        int v175 = 0;
      }
      else {
        int v175 = v174 ^ v94;
      }
      if (v64 != 1) {
        int v175 = v174;
      }
      *(_DWORD *)(a2 + 4 * v82 + 48) = v175;
      if (v109 != 7)
      {
        uint64_t v176 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v100 = v110 == v176;
        if (v95 | v176)
        {
          if (v107 >= v97 && v176 == v108) {
            unint64_t v99 = v97 - 1;
          }
          else {
            unint64_t v99 = v92 + v90 * v176;
          }
        }
        else
        {
          unint64_t v99 = 0;
        }
      }
      unint64_t v177 = v99 + v95;
      unint64_t v84 = v177;
      if (a3 == 4)
      {
        if (v177 < v102 || (unint64_t v84 = (v102 - 1), v177 >= v104))
        {
          if (v177 < v104 || (unint64_t v84 = v94, v177 >= v94))
          {
            if (v177 < v105 && v177 >= v103) {
              unint64_t v84 = (v103 - 1);
            }
            else {
              unint64_t v84 = v177;
            }
          }
        }
      }
      if (v84 >= v97) {
        int v85 = v98;
      }
      else {
        int v85 = v84;
      }
      int v86 = v85 ^ v94;
      if (v100) {
        int v86 = 0;
      }
      if (v64 == 1) {
        int v85 = v86;
      }
      uint64_t v31 = (_DWORD *)result;
      goto LABEL_130;
    }
    BOOL v115 = v104 <= v95 && v95 < v94;
    BOOL v117 = v95 >= v103 && v105 > v95;
    if (a3 == 4)
    {
      if (v95 < v102 || v104 <= v95)
      {
        if (v115)
        {
          if (v97 <= v94) {
            int v85 = v98;
          }
          else {
            int v85 = v94;
          }
        }
        else
        {
          if (v117) {
            unint64_t v95 = v106;
          }
          if (v95 >= v97) {
            int v85 = v98;
          }
          else {
            int v85 = v95;
          }
        }
      }
      else if (v97 <= (v102 - 1))
      {
        int v85 = v98;
      }
      else
      {
        int v85 = v102 - 1;
      }
    }
    else if (v97 <= v95)
    {
      int v85 = v98;
    }
    else
    {
      int v85 = v185[v82 - 2];
    }
    int v178 = v85 ^ v94;
    if (v90 > v96) {
      int v178 = 0;
    }
    if (v64 == 1) {
      int v85 = v178;
    }
    unsigned int v179 = (_DWORD *)(a2 + 4 * v82);
    *unsigned int v179 = v85;
    v179[2] = v85;
    v179[4] = v85;
    v179[6] = v85;
    v179[8] = v85;
    v179[10] = v85;
    v179[12] = v85;
LABEL_130:
    *(_DWORD *)(a2 + 4 * v82 + 56) = v85;
    char v81 = 1;
    uint64_t v82 = 1;
  }
  while ((v87 & 1) == 0);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int32x4_t a6, int32x4_t a7)
{
  uint64_t v446 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    long long v12 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    uint64_t v13 = (_OWORD *)(a1 + a2);
    *uint64_t v13 = 0u;
    v13[1] = 0u;
    char v14 = (_OWORD *)(a1 + 2 * a2);
    *char v14 = 0u;
    v14[1] = 0u;
    uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
LABEL_6:
    _OWORD *v15 = v12;
    v15[1] = v12;
    return result;
  }
  char v9 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v431, a5);
    }
    int v401 = HIDWORD(v431);
    __int16 v402 = v431;
    int v403 = v433;
    __int16 v404 = v432;
    int v417 = v435;
    __int16 v418 = v434;
    int v419 = v437;
    __int16 v420 = v436;
    int v397 = v439;
    __int16 v398 = v438;
    int v399 = v441;
    __int16 v400 = v440;
    int v415 = v443;
    __int16 v416 = v442;
    uint64_t v20 = a3 + 12;
    __int16 v413 = v444;
    int v414 = v445;
    if ((v9 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v20, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v20, (uint64_t)&v431, a5);
    }
    int v409 = HIDWORD(v431);
    __int16 v410 = v431;
    int v411 = v433;
    __int16 v412 = v432;
    int v425 = v435;
    __int16 v426 = v434;
    int v427 = v437;
    __int16 v428 = v436;
    int v405 = v439;
    __int16 v406 = v438;
    int v407 = v441;
    __int16 v408 = v440;
    int v423 = v443;
    __int16 v424 = v442;
    uint64_t v21 = a3 + 24;
    __int16 v421 = v444;
    int v422 = v445;
    if ((v9 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v431, a5);
    }
    __int16 v23 = v431;
    int v22 = HIDWORD(v431);
    __int16 v24 = v432;
    int v393 = v435;
    __int16 v394 = v434;
    __int16 v25 = v438;
    int v395 = v437;
    __int16 v396 = v436;
    int v26 = v439;
    __int16 v27 = v440;
    int v28 = v441;
    int v391 = v443;
    __int16 v392 = v442;
    uint64_t v29 = a3 + 36;
    __int16 v30 = v444;
    int v389 = v433;
    int v390 = v445;
    if ((v9 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v29, (uint64_t)&v431, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v29, (uint64_t)&v431, a5);
    }
    *(_DWORD *)a1 = (16 * (v402 & 0xFFF)) | (v401 << 20);
    *(_DWORD *)(a1 + 4) = (16 * (v404 & 0xFFF)) | (v403 << 20);
    *(_DWORD *)(a1 + 8) = (16 * (v398 & 0xFFF)) | (v397 << 20);
    *(_DWORD *)(a1 + 12) = (16 * (v400 & 0xFFF)) | (v399 << 20);
    *(_DWORD *)(a1 + 16) = (16 * (v23 & 0xFFF)) | (v22 << 20);
    *(_DWORD *)(a1 + 20) = (16 * (v24 & 0xFFF)) | (v389 << 20);
    *(_DWORD *)(a1 + 24) = (16 * (v25 & 0xFFF)) | (v26 << 20);
    *(_DWORD *)(a1 + 28) = (16 * (v27 & 0xFFF)) | (v28 << 20);
    uint64_t v31 = (int *)(a1 + a2);
    *uint64_t v31 = (16 * (v418 & 0xFFF)) | (v417 << 20);
    v31[1] = (16 * (v420 & 0xFFF)) | (v419 << 20);
    v31[2] = (16 * (v416 & 0xFFF)) | (v415 << 20);
    v31[3] = (16 * (v413 & 0xFFF)) | (v414 << 20);
    v31[4] = (16 * (v394 & 0xFFF)) | (v393 << 20);
    v31[5] = (16 * (v396 & 0xFFF)) | (v395 << 20);
    v31[6] = (16 * (v392 & 0xFFF)) | (v391 << 20);
    v31[7] = (16 * (v30 & 0xFFF)) | (v390 << 20);
    unsigned int v32 = (int *)(a1 + a2 + a2);
    *unsigned int v32 = (16 * (v410 & 0xFFF)) | (v409 << 20);
    v32[1] = (16 * (v412 & 0xFFF)) | (v411 << 20);
    v32[2] = (16 * (v406 & 0xFFF)) | (v405 << 20);
    v32[3] = (16 * (v408 & 0xFFF)) | (v407 << 20);
    int v33 = (16 * (v432 & 0xFFF)) | (v433 << 20);
    v32[4] = (16 * (v431 & 0xFFF)) | (HIDWORD(v431) << 20);
    v32[5] = v33;
    int v34 = (16 * (v440 & 0xFFF)) | (v441 << 20);
    v32[6] = (16 * (v438 & 0xFFF)) | (v439 << 20);
    v32[7] = v34;
    int v35 = (int *)((char *)v32 + a2);
    int *v35 = (16 * (v426 & 0xFFF)) | (v425 << 20);
    v35[1] = (16 * (v428 & 0xFFF)) | (v427 << 20);
    v35[2] = (16 * (v424 & 0xFFF)) | (v423 << 20);
    v35[3] = (16 * (v421 & 0xFFF)) | (v422 << 20);
    LODWORD(v32) = (16 * (v436 & 0xFFF)) | (v437 << 20);
    v35[4] = (16 * (v434 & 0xFFF)) | (v435 << 20);
    v35[5] = (int)v32;
    LODWORD(v32) = (16 * (v444 & 0xFFF)) | (v445 << 20);
    v35[6] = (16 * (v442 & 0xFFF)) | (v443 << 20);
    v35[7] = (int)v32;
    return 48;
  }
  switch(a4)
  {
    case 0x7Fu:
      int64x2_t v36 = *(int64x2_t *)a3;
      int64x2_t v37 = *(int64x2_t *)(a3 + 16);
      int64x2_t v38 = *(int64x2_t *)(a3 + 32);
      int64x2_t v39 = *(int64x2_t *)(a3 + 48);
      int64x2_t v40 = *(int64x2_t *)(a3 + 64);
      int64x2_t v41 = *(int64x2_t *)(a3 + 80);
      int64x2_t v42 = *(int64x2_t *)(a3 + 96);
      int64x2_t v43 = *(int64x2_t *)(a3 + 112);
      unint64_t v44 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a3, v37);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v40, v41);
      int v45 = (int64x2_t *)(a1 + 2 * a2);
      *unint64_t v44 = vzip2q_s64(v36, v37);
      v44[1] = vzip2q_s64(v40, v41);
      *int v45 = vzip1q_s64(v38, v39);
      v45[1] = vzip1q_s64(v42, v43);
      unsigned int v46 = (int64x2_t *)((char *)v45 + a2);
      *unsigned int v46 = vzip2q_s64(v38, v39);
      v46[1] = vzip2q_s64(v42, v43);
      return 128;
    case 0x5Fu:
      v47.i64[0] = 0xC000C000C000CLL;
      v47.i64[1] = 0xC000C000C000CLL;
      int8x16_t v48 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v47, v47));
      v47.i64[0] = vpaddq_s32((int32x4_t)v48, (int32x4_t)v48).u64[0];
      v49.i64[0] = v47.u32[0];
      v49.i64[1] = v47.u32[1];
      int64x2_t v50 = v49;
      unint64_t v51 = vaddvq_s64(v49);
      int64x2_t v52 = 0uLL;
      if (v51 <= 0x80)
      {
        int v85 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
        int32x2_t v86 = vzip1_s32(*(int32x2_t *)v48.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
        v87.i64[0] = v86.u32[0];
        v87.i64[1] = v86.u32[1];
        int64x2_t v88 = v87;
        int64x2_t v89 = vzip1q_s64((int64x2_t)0, v50);
        unint64_t v90 = 8 * (a3 & 7);
        unint64_t v91 = v51 + v90;
        int64x2_t v92 = vaddq_s64(v89, vdupq_n_s64(v90));
        int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v92)));
        if (v51 + v90 > 0x80) {
          int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v85[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v92)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v85[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v92))), v93);
        }
        uint64x2_t v94 = (uint64x2_t)vnegq_s64(v88);
        int64x2_t v95 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v94);
        *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
        *(int32x2_t *)v95.i8 = vmovn_s64(v95);
        unint64_t v96 = v91 & 0x3F;
        unint64_t v97 = (int64x2_t *)((char *)v85 + 8 * (v91 >> 6));
        int8x16_t v98 = (int8x16_t)vaddq_s64(v89, vdupq_n_s64(v96));
        unint64_t v99 = v51 + v91;
        int8x16_t v100 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v97, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97->i64[0], 0), (uint64x2_t)vnegq_s64((int64x2_t)v98)));
        if (v51 + v96 >= 0x81)
        {
          int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v97[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), (int64x2_t)v98)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v97[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), (int64x2_t)v98)));
          int8x16_t v100 = vorrq_s8(v98, v100);
        }
        int64x2_t v101 = (int64x2_t)vshlq_u64((uint64x2_t)v100, v94);
        *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v100);
        *(int32x2_t *)v101.i8 = vmovn_s64(v101);
        unint64_t v102 = v99 & 0x3F;
        unint64_t v103 = (int64x2_t *)((char *)v85 + 8 * (v99 >> 6));
        int64x2_t v104 = vaddq_s64(v89, vdupq_n_s64(v102));
        unint64_t v105 = v51 + v99;
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v103, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
        if (v51 + v102 > 0x80) {
          int8x16_t v106 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v103[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v103[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v106);
        }
        int16x8_t v107 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v95);
        int16x8_t v108 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v101);
        int64x2_t v109 = (int64x2_t)vshlq_u64((uint64x2_t)v106, v94);
        *(int32x2_t *)v95.i8 = vmovn_s64((int64x2_t)v106);
        *(int32x2_t *)v109.i8 = vmovn_s64(v109);
        int16x8_t v110 = (int16x8_t)vzip1q_s32((int32x4_t)v95, (int32x4_t)v109);
        unint64_t v111 = v105 & 0x3F;
        BOOL v112 = (int64x2_t *)((char *)v85 + 8 * (v105 >> 6));
        int64x2_t v113 = vaddq_s64(v89, vdupq_n_s64(v111));
        int8x16_t v114 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v113));
        unint64_t v115 = v51 + v105;
        int64x2_t v116 = vsubq_s64(vdupq_n_s64(0x40uLL), v113);
        int8x16_t v117 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)v116);
        int8x16_t v118 = vorrq_s8(v117, v114);
        if (v51 + v111 >= 0x81)
        {
          int64x2_t v119 = v112[1];
          uint64x2_t v120 = (uint64x2_t)vdupq_lane_s64(v119.i64[0], 0);
          int8x16_t v117 = (int8x16_t)vdupq_laneq_s64(v119, 1);
          int8x16_t v114 = (int8x16_t)vshlq_u64(v120, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v113));
          int64x2_t v116 = vdupq_n_s64(0xC0uLL);
          int8x16_t v118 = vorrq_s8(vorrq_s8(v114, (int8x16_t)vshlq_u64((uint64x2_t)v117, (uint64x2_t)vsubq_s64(v116, v113))), v118);
        }
        v121.i64[0] = 0x1000100010001;
        v121.i64[1] = 0x1000100010001;
        *(int16x4_t *)v117.i8 = vmovn_s32((int32x4_t)v107);
        *(int16x4_t *)v107.i8 = vshrn_n_s32((int32x4_t)v107, 0xCuLL);
        *(int16x4_t *)v114.i8 = vmovn_s32((int32x4_t)v108);
        *(int16x4_t *)v108.i8 = vshrn_n_s32((int32x4_t)v108, 0xCuLL);
        *(int16x4_t *)v116.i8 = vmovn_s32((int32x4_t)v110);
        *(int16x4_t *)v110.i8 = vshrn_n_s32((int32x4_t)v110, 0xCuLL);
        int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v118, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v118);
        *(int32x2_t *)v122.i8 = vmovn_s64(v122);
        int16x8_t v123 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v122);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v123);
        *(int16x4_t *)v123.i8 = vshrn_n_s32((int32x4_t)v123, 0xCuLL);
        unint64_t v124 = v115 & 0x3F;
        int v125 = (int64x2_t *)((char *)v85 + 8 * (v115 >> 6));
        int64x2_t v126 = vaddq_s64(v89, vdupq_n_s64(v124));
        unint64_t v127 = v51 + v115;
        int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v125, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
        if (v51 + v124 > 0x80) {
          int8x16_t v128 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v125[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v125[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), v128);
        }
        int16x8_t v129 = vshlq_n_s16(v121, 0xCuLL);
        v130.i64[0] = -1;
        v130.i64[1] = -1;
        int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v128, v94);
        *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
        *(int32x2_t *)v131.i8 = vmovn_s64(v131);
        int16x8_t v132 = (int16x8_t)vzip1q_s32((int32x4_t)v128, (int32x4_t)v131);
        *(int16x4_t *)v128.i8 = vmovn_s32((int32x4_t)v132);
        *(int16x4_t *)v132.i8 = vshrn_n_s32((int32x4_t)v132, 0xCuLL);
        unint64_t v133 = (int64x2_t *)((char *)v85 + 8 * (v127 >> 6));
        int64x2_t v134 = vaddq_s64(v89, vdupq_n_s64(v127 & 0x3F));
        unint64_t v135 = v51 + v127;
        int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
        if (v51 + (v127 & 0x3F) >= 0x81) {
          int8x16_t v136 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v134))), v136);
        }
        int8x16_t v137 = (int8x16_t)vaddq_s16(v129, v130);
        int8x16_t v138 = (int8x16_t)vzip1q_s16((int16x8_t)v117, v107);
        int8x16_t v139 = (int8x16_t)vzip1q_s16((int16x8_t)v114, v108);
        int8x16_t v140 = (int8x16_t)vzip1q_s16((int16x8_t)v116, v110);
        int8x16_t v141 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v123);
        int8x16_t v142 = (int8x16_t)vzip1q_s16((int16x8_t)v128, v132);
        int64x2_t v143 = (int64x2_t)vshlq_u64((uint64x2_t)v136, v94);
        *(int32x2_t *)v118.i8 = vmovn_s64((int64x2_t)v136);
        *(int32x2_t *)v143.i8 = vmovn_s64(v143);
        int16x8_t v144 = (int16x8_t)vzip1q_s32((int32x4_t)v118, (int32x4_t)v143);
        *(int16x4_t *)v118.i8 = vmovn_s32((int32x4_t)v144);
        *(int16x4_t *)v144.i8 = vshrn_n_s32((int32x4_t)v144, 0xCuLL);
        int8x16_t v145 = (int8x16_t)vzip1q_s16((int16x8_t)v118, v144);
        unint64_t v146 = v51 + v135;
        unint64_t v147 = v135 & 0x3F;
        int64x2_t v148 = vaddq_s64(v89, vdupq_n_s64(v147));
        uint64_t v149 = (int64x2_t *)((char *)v85 + 8 * (v135 >> 6));
        int8x16_t v150 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v149, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149->i64[0], 0), (uint64x2_t)vnegq_s64(v148)));
        if (v51 + v147 > 0x80) {
          int8x16_t v150 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v149[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v148)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v149[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v148))), v150);
        }
        int16x8_t v151 = (int16x8_t)vandq_s8(v138, v137);
        int16x8_t v152 = (int16x8_t)vandq_s8(v139, v137);
        int16x8_t v153 = (int16x8_t)vandq_s8(v140, v137);
        int16x8_t v154 = (int16x8_t)vandq_s8(v141, v137);
        int16x8_t v155 = (int16x8_t)vandq_s8(v142, v137);
        int16x8_t v156 = (int16x8_t)vandq_s8(v145, v137);
        int64x2_t v157 = (int64x2_t)vshlq_u64((uint64x2_t)v150, v94);
        *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
        *(int32x2_t *)v157.i8 = vmovn_s64(v157);
        int16x8_t v158 = (int16x8_t)vzip1q_s32((int32x4_t)v150, (int32x4_t)v157);
        *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v158);
        *(int16x4_t *)v158.i8 = vshrn_n_s32((int32x4_t)v158, 0xCuLL);
        int v159 = (int64x2_t *)((char *)v85 + 8 * (v146 >> 6));
        int64x2_t v160 = vaddq_s64(v89, vdupq_n_s64(v146 & 0x3F));
        int16x8_t v161 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16((int16x8_t)v150, v158), v137);
        int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v160)));
        if (v51 + (v146 & 0x3F) >= 0x81) {
          int8x16_t v162 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v160)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v159[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v160))), v162);
        }
        int64x2_t v54 = (int64x2_t)vshlq_n_s16(v151, 4uLL);
        int64x2_t v55 = (int64x2_t)vshlq_n_s16(v152, 4uLL);
        int64x2_t v57 = (int64x2_t)vshlq_n_s16(v153, 4uLL);
        int64x2_t v56 = (int64x2_t)vshlq_n_s16(v154, 4uLL);
        int64x2_t v52 = (int64x2_t)vshlq_n_s16(v155, 4uLL);
        int64x2_t v53 = (int64x2_t)vshlq_n_s16(v156, 4uLL);
        int64x2_t v163 = (int64x2_t)vshlq_u64((uint64x2_t)v162, v94);
        *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v162);
        *(int32x2_t *)v163.i8 = vmovn_s64(v163);
        int16x8_t v164 = (int16x8_t)vzip1q_s32((int32x4_t)v154, (int32x4_t)v163);
        *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v164);
        *(int16x4_t *)v164.i8 = vshrn_n_s32((int32x4_t)v164, 0xCuLL);
        int16x8_t v165 = (int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v154, v164), v137);
        int64x2_t v59 = (int64x2_t)vshlq_n_s16(v161, 4uLL);
        int64x2_t v58 = (int64x2_t)vshlq_n_s16(v165, 4uLL);
      }
      else
      {
        int64x2_t v53 = 0uLL;
        int64x2_t v54 = 0uLL;
        int64x2_t v55 = 0uLL;
        int64x2_t v56 = 0uLL;
        int64x2_t v57 = 0uLL;
        int64x2_t v58 = 0uLL;
        int64x2_t v59 = 0uLL;
      }
      int v166 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v54, v55);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v52, v53);
      int v167 = (int64x2_t *)(a1 + 2 * a2);
      *int v166 = vzip2q_s64(v54, v55);
      v166[1] = vzip2q_s64(v52, v53);
      *int v167 = vzip1q_s64(v57, v56);
      v167[1] = vzip1q_s64(v59, v58);
      unint64_t v168 = (int64x2_t *)((char *)v167 + a2);
      *unint64_t v168 = vzip2q_s64(v57, v56);
      v168[1] = vzip2q_s64(v59, v58);
      return 96;
    case 2u:
      int32x4_t v16 = vdupq_n_s32((*(_DWORD *)a3 << 8) & 0xFFF00000 | (16 * (*(_DWORD *)a3 & 0xFFF)));
      *(int32x4_t *)a1 = v16;
      *(int32x4_t *)(a1 + 16) = v16;
      unint64_t v17 = (int32x4_t *)(a1 + a2);
      *unint64_t v17 = v16;
      v17[1] = v16;
      unint64_t v18 = (int32x4_t *)(a1 + 2 * a2);
      *unint64_t v18 = v16;
      v18[1] = v16;
      int v19 = (int32x4_t *)(a1 + a2 + 2 * a2);
      *int v19 = v16;
      v19[1] = v16;
      return 3;
    default:
      unint64_t v60 = 8 * (a3 & 7);
      unint64_t v61 = a3 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = v60 + 18;
      uint64_t v63 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v60;
      if (v60 >= 0x2F) {
        v63 |= *(void *)(v61 + 8) << (-8 * (a3 & 7u));
      }
      a6.i32[0] = v63;
      a6.i32[1] = (unsigned __int16)v63 >> 5;
      *(int8x8_t *)a6.i8 = vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0x1F0000001FLL);
      *(int16x4_t *)a6.i8 = vmovn_s32(a6);
      a7.i32[0] = (unsigned __int16)v63 >> 10;
      a7.i32[1] = v63 >> 14;
      *(int32x2_t *)a7.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a7.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
      *(int16x4_t *)a7.i8 = vmovn_s32(a7);
      unint64_t v64 = v60 + 42;
      unint64_t v65 = v62 >> 6;
      unint64_t v66 = v62 & 0x3A;
      uint64_t v67 = *(void *)(v61 + 8 * v65) >> v66;
      if (v66 >= 0x29) {
        v67 |= *(void *)(v61 + 8 * v65 + 8) << -(char)v66;
      }
      int8x16_t v68 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
      int8x16_t v69 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a7.i8, 0);
      unint64_t v70 = (8 * (a3 & 7)) | 0x180;
      v71.i64[0] = 0x3000300030003;
      v71.i64[1] = 0x3000300030003;
      int16x8_t v72 = (int16x8_t)vandq_s8(v68, v71);
      int8x16_t v73 = vbicq_s8(v69, (int8x16_t)vceqq_s16(v72, (int16x8_t)v71));
      v71.i64[0] = 0x202020202020202;
      v71.i64[1] = 0x202020202020202;
      int8x16_t v74 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v68.i8, (int8x8_t)0x4000400040004)))), v71);
      if (vmaxvq_s8(v74) < 1)
      {
        int v84 = 0;
        v169.i64[0] = -1;
        v169.i64[1] = -1;
        int8x16_t v170 = v73;
        int8x16_t v171 = v73;
        int8x16_t v172 = v73;
        v173.i64[0] = -1;
        v173.i64[1] = -1;
        int8x16_t v174 = v73;
        v175.i64[0] = -1;
        v175.i64[1] = -1;
        v176.i64[0] = -1;
        v176.i64[1] = -1;
      }
      else
      {
        int8x16_t v75 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v74, v74));
        int8x16_t v76 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v75, (int16x8_t)v75));
        unint64_t v77 = vpaddq_s32((int32x4_t)v76, (int32x4_t)v76).u64[0];
        v78.i64[0] = v77;
        v78.i64[1] = HIDWORD(v77);
        int64x2_t v79 = v78;
        unint64_t v80 = vaddvq_s64(v78);
        unint64_t v81 = v64 + v80;
        if (v80 <= 0x80 && v70 >= v81)
        {
          unint64_t v177 = v64 & 0x3A;
          int64x2_t v178 = vaddq_s64(vdupq_n_s64(v177), vzip1q_s64((int64x2_t)0, v79));
          unsigned int v179 = (int64x2_t *)(v61 + ((v64 >> 3) & 8));
          int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v179, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179->i64[0], 0), (uint64x2_t)vnegq_s64(v178)));
          if (v177 + v80 < 0x81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = 0;
            int8x16_t v83 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v179[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v178)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v179[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v178))), v83);
          }
          unint64_t v64 = v81;
        }
        else
        {
          int8x16_t v83 = 0uLL;
          int v84 = 1;
        }
        int32x2_t v180 = vzip1_s32(*(int32x2_t *)v76.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL));
        v181.i64[0] = v180.u32[0];
        v181.i64[1] = v180.u32[1];
        int64x2_t v182 = (int64x2_t)vshlq_u64((uint64x2_t)v83, (uint64x2_t)vnegq_s64(v181));
        *(int32x2_t *)v83.i8 = vmovn_s64((int64x2_t)v83);
        *(int32x2_t *)v182.i8 = vmovn_s64(v182);
        int8x16_t v183 = (int8x16_t)vzip1q_s32((int32x4_t)v83, (int32x4_t)v182);
        int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v183, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v75.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v75, v75, 8uLL)))));
        *(int16x4_t *)v183.i8 = vmovn_s32((int32x4_t)v183);
        *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
        int16x8_t v185 = vzip1q_s16((int16x8_t)v183, v184);
        v183.i64[0] = 0x101010101010101;
        v183.i64[1] = 0x101010101010101;
        *(int8x8_t *)v186.i8 = vand_s8(vzip1_s8(vmovn_s16(v185), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v185, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v74.i8, *(int8x8_t *)v68.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v183, v74), (int8x8_t)-1));
        v186.i64[1] = v186.i64[0];
        *(int8x8_t *)v186.i8 = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
        *(int16x4_t *)v185.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 0);
        *(int16x4_t *)v183.i8 = vdup_lane_s16(*(int16x4_t *)v186.i8, 1);
        int8x8_t v187 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 2);
        int8x8_t v188 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v186.i8, 3);
        int8x16_t v174 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v185.i8);
        int8x16_t v172 = (int8x16_t)vsubw_s8((int16x8_t)v73, *(int8x8_t *)v183.i8);
        int8x16_t v171 = (int8x16_t)vsubw_s8((int16x8_t)v73, v187);
        int8x16_t v170 = (int8x16_t)vsubw_s8((int16x8_t)v73, v188);
        int8x16_t v176 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v185.i8));
        int8x16_t v175 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v183.i8));
        int8x16_t v173 = (int8x16_t)vmovl_s8(vceqz_s8(v187));
        int8x16_t v169 = (int8x16_t)vmovl_s8(vceqz_s8(v188));
      }
      v189.i64[0] = 0x8000800080008;
      v189.i64[1] = 0x8000800080008;
      int8x16_t v190 = 0uLL;
      int8x16_t v191 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v68, v189), (int8x16_t)0, 0xCuLL), v73);
      int8x16_t v192 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v191, (int16x8_t)v191));
      v189.i64[0] = vpaddq_s32((int32x4_t)v192, (int32x4_t)v192).u64[0];
      v193.i64[0] = v189.u32[0];
      v193.i64[1] = v189.u32[1];
      int64x2_t v194 = v193;
      unint64_t v195 = vaddvq_s64(v193);
      unint64_t v196 = v64 + v195;
      if (v195 <= 0x80 && v70 >= v196)
      {
        unint64_t v198 = v64 & 0x3F;
        int64x2_t v199 = vaddq_s64(vdupq_n_s64(v198), vzip1q_s64((int64x2_t)0, v194));
        unint64_t v200 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v190 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v200, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200->i64[0], 0), (uint64x2_t)vnegq_s64(v199)));
        if (v198 + v195 >= 0x81) {
          int8x16_t v190 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v200[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v199)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v200[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v199))), v190);
        }
        unint64_t v64 = v196;
      }
      else
      {
        int v84 = 1;
      }
      int v201 = v68.i8[0] & 3;
      if (v201 == 2)
      {
        BOOL v202 = v70 < v64 + 8;
        unint64_t v203 = v64 + 16;
        if (v70 >= v64 + 8) {
          v64 += 8;
        }
        if (v203 > v70 || v202) {
          int v84 = 1;
        }
        else {
          v64 += 8;
        }
      }
      int8x16_t v205 = 0uLL;
      int8x16_t v206 = vextq_s8((int8x16_t)0, v174, 0xCuLL);
      int8x16_t v207 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v206, (int16x8_t)v206));
      unint64_t v208 = vpaddq_s32((int32x4_t)v207, (int32x4_t)v207).u64[0];
      v209.i64[0] = v208;
      v209.i64[1] = HIDWORD(v208);
      int64x2_t v210 = v209;
      unint64_t v211 = vaddvq_s64(v209);
      unint64_t v212 = v64 + v211;
      if (v211 <= 0x80 && v70 >= v212)
      {
        unint64_t v215 = v64 & 0x3F;
        int64x2_t v216 = vaddq_s64(vdupq_n_s64(v215), vzip1q_s64((int64x2_t)0, v210));
        unint64_t v217 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v217, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217->i64[0], 0), (uint64x2_t)vnegq_s64(v216)));
        if (v215 + v211 >= 0x81) {
          int8x16_t v214 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v217[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v216)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v217[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v216))), v214);
        }
        unint64_t v64 = v212;
      }
      else
      {
        int v84 = 1;
        int8x16_t v214 = 0uLL;
      }
      int8x16_t v218 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v174, (int16x8_t)v174));
      unint64_t v219 = vpaddq_s32((int32x4_t)v218, (int32x4_t)v218).u64[0];
      v220.i64[0] = v219;
      v220.i64[1] = HIDWORD(v219);
      int64x2_t v221 = v220;
      unint64_t v222 = vaddvq_s64(v220);
      unint64_t v223 = v64 + v222;
      if (v222 <= 0x80 && v70 >= v223)
      {
        unint64_t v225 = v64 & 0x3F;
        int64x2_t v226 = vaddq_s64(vdupq_n_s64(v225), vzip1q_s64((int64x2_t)0, v221));
        int8x16_t v227 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v227, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227->i64[0], 0), (uint64x2_t)vnegq_s64(v226)));
        if (v225 + v222 >= 0x81) {
          int8x16_t v205 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v227[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v226)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v227[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v226))), v205);
        }
        unint64_t v64 = v223;
      }
      else
      {
        int v84 = 1;
      }
      int8x16_t v228 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v172, (int16x8_t)v172));
      unint64_t v229 = vpaddq_s32((int32x4_t)v228, (int32x4_t)v228).u64[0];
      v230.i64[0] = v229;
      v230.i64[1] = HIDWORD(v229);
      int64x2_t v231 = v230;
      unint64_t v232 = vaddvq_s64(v230);
      unint64_t v233 = v64 + v232;
      int8x16_t v234 = 0uLL;
      if (v232 <= 0x80 && v70 >= v233)
      {
        unint64_t v237 = v64 & 0x3F;
        int64x2_t v238 = vaddq_s64(vdupq_n_s64(v237), vzip1q_s64((int64x2_t)0, v231));
        unsigned int v239 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v236 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v239, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239->i64[0], 0), (uint64x2_t)vnegq_s64(v238)));
        if (v237 + v232 >= 0x81) {
          int8x16_t v236 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v239[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v238)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v239[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v238))), v236);
        }
        unint64_t v64 = v233;
      }
      else
      {
        int v84 = 1;
        int8x16_t v236 = 0uLL;
      }
      if (v232 > 0x80 || (unint64_t v240 = v64 + v232, v70 < v64 + v232))
      {
        int v84 = 1;
        unint64_t v240 = v64;
      }
      else
      {
        unint64_t v241 = v64 & 0x3F;
        int64x2_t v242 = vaddq_s64(vdupq_n_s64(v241), vzip1q_s64((int64x2_t)0, v231));
        int v243 = (int64x2_t *)(v61 + 8 * (v64 >> 6));
        int8x16_t v234 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v243, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243->i64[0], 0), (uint64x2_t)vnegq_s64(v242)));
        if (v241 + v232 >= 0x81) {
          int8x16_t v234 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v243[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v242)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v243[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v242))), v234);
        }
      }
      int8x16_t v244 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v171, (int16x8_t)v171));
      unint64_t v245 = vpaddq_s32((int32x4_t)v244, (int32x4_t)v244).u64[0];
      v246.i64[0] = v245;
      v246.i64[1] = HIDWORD(v245);
      int64x2_t v247 = v246;
      unint64_t v248 = vaddvq_s64(v246);
      int8x16_t v249 = 0uLL;
      if (v248 > 0x80 || (unint64_t v250 = v240 + v248, v70 < v240 + v248))
      {
        int v84 = 1;
        unint64_t v250 = v240;
        int8x16_t v253 = 0uLL;
      }
      else
      {
        int64x2_t v251 = vaddq_s64(vdupq_n_s64(v240 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v252 = (int64x2_t *)(v61 + 8 * (v240 >> 6));
        int8x16_t v253 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v252, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252->i64[0], 0), (uint64x2_t)vnegq_s64(v251)));
        if ((v240 & 0x3F) + v248 >= 0x81) {
          int8x16_t v253 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v252[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v251)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v252[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v251))), v253);
        }
      }
      if (v248 > 0x80 || (unint64_t v254 = v250 + v248, v70 < v250 + v248))
      {
        int v84 = 1;
        unint64_t v254 = v250;
      }
      else
      {
        int64x2_t v255 = vaddq_s64(vdupq_n_s64(v250 & 0x3F), vzip1q_s64((int64x2_t)0, v247));
        int v256 = (int64x2_t *)(v61 + 8 * (v250 >> 6));
        int8x16_t v249 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v256, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256->i64[0], 0), (uint64x2_t)vnegq_s64(v255)));
        if ((v250 & 0x3F) + v248 >= 0x81) {
          int8x16_t v249 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v256[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v255)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v256[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v255))), v249);
        }
      }
      int8x16_t v257 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v170, (int16x8_t)v170));
      unint64_t v258 = vpaddq_s32((int32x4_t)v257, (int32x4_t)v257).u64[0];
      v259.i64[0] = v258;
      v259.i64[1] = HIDWORD(v258);
      int64x2_t v260 = v259;
      unint64_t v261 = vaddvq_s64(v259);
      int8x16_t v262 = 0uLL;
      if (v261 > 0x80 || (unint64_t v263 = v254 + v261, v70 < v254 + v261))
      {
        int v84 = 1;
        unint64_t v263 = v254;
        int8x16_t v267 = 0uLL;
      }
      else
      {
        unint64_t v264 = v254 & 0x3F;
        int64x2_t v265 = vaddq_s64(vdupq_n_s64(v264), vzip1q_s64((int64x2_t)0, v260));
        unsigned int v266 = (int64x2_t *)(v61 + 8 * (v254 >> 6));
        int8x16_t v267 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v266, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266->i64[0], 0), (uint64x2_t)vnegq_s64(v265)));
        if (v264 + v261 >= 0x81) {
          int8x16_t v267 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v266[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v265)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v266[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v265))), v267);
        }
      }
      if (v261 > 0x80 || (unint64_t v268 = v263 + v261, v70 < v263 + v261))
      {
        int v84 = 1;
        unint64_t v268 = v263;
      }
      else
      {
        int64x2_t v269 = vaddq_s64(vdupq_n_s64(v263 & 0x3F), vzip1q_s64((int64x2_t)0, v260));
        uint64_t v270 = (int64x2_t *)(v61 + 8 * (v263 >> 6));
        int8x16_t v262 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v270, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270->i64[0], 0), (uint64x2_t)vnegq_s64(v269)));
        if ((v263 & 0x3F) + v261 >= 0x81) {
          int8x16_t v262 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v270[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v269)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v270[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v269))), v262);
        }
      }
      if (v84 || (uint64_t result = a4 + 1, v70 + 8 * result - v268 - 384 >= 9) || v201 == 2)
      {
        uint64_t result = 0;
        v431 |= 4095 << ((8 * &v431) & 0x20);
        long long v12 = 0uLL;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        int32x4_t v271 = (_OWORD *)(a1 + a2);
        *int32x4_t v271 = 0u;
        v271[1] = 0u;
        int32x4_t v272 = (_OWORD *)(a1 + 2 * a2);
        uint64_t v15 = (_OWORD *)(a1 + a2 + 2 * a2);
        *int32x4_t v272 = 0u;
        v272[1] = 0u;
        goto LABEL_6;
      }
      int32x2_t v273 = vzip1_s32(*(int32x2_t *)v192.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v192, v192, 8uLL));
      int32x2_t v274 = vzip1_s32(*(int32x2_t *)v228.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v228, v228, 8uLL));
      v275.i64[0] = v273.u32[0];
      v275.i64[1] = v273.u32[1];
      int64x2_t v276 = v275;
      v275.i64[0] = v274.u32[0];
      v275.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)vnegq_s64(v276);
      uint64x2_t v278 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v279 = (int64x2_t)vshlq_u64((uint64x2_t)v190, v277);
      *(int32x2_t *)v190.i8 = vmovn_s64((int64x2_t)v190);
      *(int32x2_t *)v279.i8 = vmovn_s64(v279);
      int16x8_t v280 = (int16x8_t)vzip1q_s32((int32x4_t)v190, (int32x4_t)v279);
      int64x2_t v281 = (int64x2_t)vshlq_u64((uint64x2_t)v236, v278);
      *(int32x2_t *)v236.i8 = vmovn_s64((int64x2_t)v236);
      *(int32x2_t *)v281.i8 = vmovn_s64(v281);
      int16x8_t v282 = (int16x8_t)vzip1q_s32((int32x4_t)v236, (int32x4_t)v281);
      int64x2_t v283 = (int64x2_t)vshlq_u64((uint64x2_t)v234, v278);
      *(int32x2_t *)v234.i8 = vmovn_s64((int64x2_t)v234);
      *(int32x2_t *)v283.i8 = vmovn_s64(v283);
      int16x8_t v284 = (int16x8_t)vzip1q_s32((int32x4_t)v234, (int32x4_t)v283);
      uint32x4_t v285 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v172.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v172, v172, 8uLL))));
      int16x8_t v286 = (int16x8_t)vshlq_u32((uint32x4_t)v280, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v191.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v191, v191, 8uLL)))));
      *(int16x4_t *)v280.i8 = vmovn_s32((int32x4_t)v280);
      *(int16x4_t *)v286.i8 = vmovn_s32((int32x4_t)v286);
      int16x8_t v287 = vzip1q_s16(v280, v286);
      int16x8_t v288 = (int16x8_t)vshlq_u32((uint32x4_t)v282, v285);
      int16x8_t v289 = (int16x8_t)vshlq_u32((uint32x4_t)v284, v285);
      *(int16x4_t *)v282.i8 = vmovn_s32((int32x4_t)v282);
      *(int16x4_t *)v288.i8 = vmovn_s32((int32x4_t)v288);
      *(int16x4_t *)v284.i8 = vmovn_s32((int32x4_t)v284);
      *(int16x4_t *)v289.i8 = vmovn_s32((int32x4_t)v289);
      int16x8_t v290 = vzip1q_s16(v282, v288);
      v288.i64[0] = 0x10001000100010;
      v288.i64[1] = 0x10001000100010;
      int16x8_t v291 = vzip1q_s16(v284, v289);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      int16x8_t v292 = vsubq_s16(v288, (int16x8_t)v191);
      int16x8_t v293 = vaddq_s16((int16x8_t)v191, v289);
      v289.i64[0] = 0x10001000100010;
      v289.i64[1] = 0x10001000100010;
      int16x8_t v294 = vshlq_s16(v287, v292);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      int16x8_t v295 = vsubq_s16(v289, (int16x8_t)v172);
      int16x8_t v296 = vaddq_s16((int16x8_t)v172, v292);
      int8x16_t v297 = (int8x16_t)vshlq_s16(v294, v293);
      int16x8_t v298 = vshlq_s16(vshlq_s16(v290, v295), v296);
      int16x8_t v299 = vshlq_s16(vshlq_s16(v291, v295), v296);
      int8x16_t v300 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v297.i8, 0);
      int16x8_t v301 = (int16x8_t)vandq_s8(v175, v300);
      int16x8_t v302 = vsubq_s16(v298, v301);
      int16x8_t v303 = vsubq_s16(v299, v301);
      *(int32x2_t *)v298.i8 = vzip1_s32(*(int32x2_t *)v244.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v244, v244, 8uLL));
      *(int32x2_t *)v299.i8 = vzip1_s32(*(int32x2_t *)v257.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v257, v257, 8uLL));
      v275.i64[0] = v298.u32[0];
      v275.i64[1] = v298.u32[1];
      int64x2_t v304 = v275;
      v275.i64[0] = v299.u32[0];
      v275.i64[1] = v299.u32[1];
      uint64x2_t v305 = (uint64x2_t)vnegq_s64(v304);
      int64x2_t v306 = (int64x2_t)vshlq_u64((uint64x2_t)v253, v305);
      *(int32x2_t *)v301.i8 = vmovn_s64((int64x2_t)v253);
      *(int32x2_t *)v306.i8 = vmovn_s64(v306);
      int16x8_t v307 = (int16x8_t)vzip1q_s32((int32x4_t)v301, (int32x4_t)v306);
      uint64x2_t v308 = (uint64x2_t)vnegq_s64(v275);
      int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v249, v305);
      *(int32x2_t *)v249.i8 = vmovn_s64((int64x2_t)v249);
      *(int32x2_t *)v309.i8 = vmovn_s64(v309);
      int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v249, (int32x4_t)v309);
      int64x2_t v311 = (int64x2_t)vshlq_u64((uint64x2_t)v267, v308);
      *(int32x2_t *)v253.i8 = vmovn_s64((int64x2_t)v267);
      *(int32x2_t *)v311.i8 = vmovn_s64(v311);
      uint32x4_t v312 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v171.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v171, v171, 8uLL))));
      int16x8_t v313 = (int16x8_t)vzip1q_s32((int32x4_t)v253, (int32x4_t)v311);
      int16x8_t v314 = (int16x8_t)vshlq_u32((uint32x4_t)v307, v312);
      int16x8_t v315 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v312);
      *(int16x4_t *)v307.i8 = vmovn_s32((int32x4_t)v307);
      *(int16x4_t *)v314.i8 = vmovn_s32((int32x4_t)v314);
      *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
      *(int16x4_t *)v315.i8 = vmovn_s32((int32x4_t)v315);
      int16x8_t v316 = vzip1q_s16(v307, v314);
      v314.i64[0] = 0x10001000100010;
      v314.i64[1] = 0x10001000100010;
      int16x8_t v317 = vzip1q_s16(v310, v315);
      v315.i64[0] = 0xF000F000F000FLL;
      v315.i64[1] = 0xF000F000F000FLL;
      int16x8_t v318 = vsubq_s16(v314, (int16x8_t)v171);
      int16x8_t v319 = vaddq_s16((int16x8_t)v171, v315);
      uint32x4_t v320 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v170.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v170, v170, 8uLL))));
      int16x8_t v321 = vshlq_s16(vshlq_s16(v316, v318), v319);
      int16x8_t v322 = vshlq_s16(vshlq_s16(v317, v318), v319);
      int16x8_t v323 = (int16x8_t)vandq_s8(v173, v300);
      int16x8_t v324 = vsubq_s16(v321, v323);
      int16x8_t v325 = vsubq_s16(v322, v323);
      int16x8_t v326 = (int16x8_t)vshlq_u32((uint32x4_t)v313, v320);
      *(int16x4_t *)v321.i8 = vmovn_s32((int32x4_t)v313);
      *(int16x4_t *)v326.i8 = vmovn_s32((int32x4_t)v326);
      v313.i64[0] = 0x10001000100010;
      v313.i64[1] = 0x10001000100010;
      int16x8_t v327 = vzip1q_s16(v321, v326);
      v321.i64[0] = 0xF000F000F000FLL;
      v321.i64[1] = 0xF000F000F000FLL;
      int16x8_t v328 = vsubq_s16(v313, (int16x8_t)v170);
      int16x8_t v329 = vaddq_s16((int16x8_t)v170, v321);
      int64x2_t v330 = (int64x2_t)vshlq_u64((uint64x2_t)v262, v308);
      *(int32x2_t *)v321.i8 = vmovn_s64((int64x2_t)v262);
      *(int32x2_t *)v330.i8 = vmovn_s64(v330);
      int16x8_t v331 = (int16x8_t)vzip1q_s32((int32x4_t)v321, (int32x4_t)v330);
      int16x8_t v332 = (int16x8_t)vshlq_u32((uint32x4_t)v331, v320);
      *(int16x4_t *)v331.i8 = vmovn_s32((int32x4_t)v331);
      *(int16x4_t *)v332.i8 = vmovn_s32((int32x4_t)v332);
      int16x8_t v333 = vshlq_s16(vshlq_s16(vzip1q_s16(v331, v332), v328), v329);
      int16x8_t v334 = (int16x8_t)vandq_s8(v169, v300);
      int16x8_t v335 = vsubq_s16(vshlq_s16(vshlq_s16(v327, v328), v329), v334);
      int16x8_t v336 = vsubq_s16(v333, v334);
      int32x2_t v337 = vzip1_s32(*(int32x2_t *)v207.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v207, v207, 8uLL));
      int32x2_t v338 = vzip1_s32(*(int32x2_t *)v218.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v218, v218, 8uLL));
      v275.i64[0] = v337.u32[0];
      v275.i64[1] = v337.u32[1];
      int64x2_t v339 = v275;
      v275.i64[0] = v338.u32[0];
      v275.i64[1] = v338.u32[1];
      int64x2_t v340 = (int64x2_t)vshlq_u64((uint64x2_t)v214, (uint64x2_t)vnegq_s64(v339));
      *(int32x2_t *)v214.i8 = vmovn_s64((int64x2_t)v214);
      *(int32x2_t *)v340.i8 = vmovn_s64(v340);
      int16x8_t v341 = (int16x8_t)vzip1q_s32((int32x4_t)v214, (int32x4_t)v340);
      int64x2_t v342 = (int64x2_t)vshlq_u64((uint64x2_t)v205, (uint64x2_t)vnegq_s64(v275));
      *(int32x2_t *)v205.i8 = vmovn_s64((int64x2_t)v205);
      *(int32x2_t *)v342.i8 = vmovn_s64(v342);
      int16x8_t v343 = (int16x8_t)vzip1q_s32((int32x4_t)v205, (int32x4_t)v342);
      int16x8_t v344 = (int16x8_t)vshlq_u32((uint32x4_t)v341, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v206.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v206, v206, 8uLL)))));
      int16x8_t v345 = (int16x8_t)vshlq_u32((uint32x4_t)v343, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v174.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v174, v174, 8uLL)))));
      *(int16x4_t *)v341.i8 = vmovn_s32((int32x4_t)v341);
      *(int16x4_t *)v344.i8 = vmovn_s32((int32x4_t)v344);
      *(int16x4_t *)v343.i8 = vmovn_s32((int32x4_t)v343);
      *(int16x4_t *)v345.i8 = vmovn_s32((int32x4_t)v345);
      int16x8_t v346 = vzip1q_s16(v341, v344);
      v344.i64[0] = 0x10001000100010;
      v344.i64[1] = 0x10001000100010;
      int16x8_t v347 = vzip1q_s16(v343, v345);
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      int16x8_t v348 = vaddq_s16((int16x8_t)vandq_s8(v297, v176), vshlq_s16(vshlq_s16(v346, vsubq_s16(v344, (int16x8_t)v206)), vaddq_s16((int16x8_t)v206, v345)));
      int16x8_t v349 = (int16x8_t)vandq_s8(v176, v300);
      v350.i64[0] = 0x1000100010001;
      v350.i64[1] = 0x1000100010001;
      int16x8_t v351 = vceqq_s16(v72, (int16x8_t)v350);
      int v352 = (unsigned __int16)vaddvq_s16(v351);
      int8x16_t v353 = (int8x16_t)vsubq_s16(v348, v349);
      int8x16_t v354 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v347, vsubq_s16(v344, (int16x8_t)v174)), vaddq_s16((int16x8_t)v174, v345)), v349);
      v351.i16[0] = v67 & 0xFFF;
      v351.i16[1] = (v67 >> 12) & 0xFFF;
      int16x8_t v355 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v351.i8, 0);
      if (v352)
      {
        int8x16_t v356 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v68, v350));
        int8x16_t v357 = v354;
        v357.i32[3] = v353.i32[0];
        int8x16_t v358 = v353;
        v358.i32[0] = v354.i32[3];
        v447.val[0] = vbslq_s8(v356, v358, v353);
        v447.val[1] = vbslq_s8(v356, v357, v354);
        v359.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
        v359.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA7570), v356), (int16x8_t)v447.val[0]);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356));
        int8x16_t v353 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA7580), v356), (int16x8_t)v448.val[0]);
        int8x16_t v354 = (int8x16_t)vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA7590), v356), v302);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v302.i8, (int8x16_t)xmmword_242EA75A0), v356), v303);
        int16x8_t v302 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75B0), v356), (int16x8_t)v448.val[0]);
        int16x8_t v303 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356));
        v448.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA75C0), v356), v324);
        v448.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v324.i8, (int8x16_t)xmmword_242EA7570), v356), v325);
        int16x8_t v324 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v448, v359), v356), (int16x8_t)v448.val[0]);
        int16x8_t v325 = vaddq_s16((int16x8_t)v448.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v448, (int8x16_t)xmmword_242EA75D0), v356));
        v447.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA75E0), v356), v335);
        v447.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v335.i8, (int8x16_t)xmmword_242EA7570), v356), v336);
        int16x8_t v335 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v447, v359), v356), (int16x8_t)v447.val[0]);
        int16x8_t v336 = vaddq_s16((int16x8_t)v447.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v447, (int8x16_t)xmmword_242EA75F0), v356));
      }
      int8x16_t v360 = (int8x16_t)vaddq_s16((int16x8_t)v353, v355);
      int8x16_t v361 = (int8x16_t)vaddq_s16((int16x8_t)v354, v355);
      int8x16_t v362 = (int8x16_t)vaddq_s16(v302, v355);
      int8x16_t v363 = (int8x16_t)vaddq_s16(v303, v355);
      int8x16_t v364 = (int8x16_t)vaddq_s16(v324, v355);
      int8x16_t v365 = (int8x16_t)vaddq_s16(v325, v355);
      int8x16_t v366 = (int8x16_t)vaddq_s16(v335, v355);
      int8x16_t v367 = (int8x16_t)vaddq_s16(v336, v355);
      v368.i64[0] = 0x10001000100010;
      v368.i64[1] = 0x10001000100010;
      int8x16_t v369 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v68, v368));
      int16x8_t v370 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v360, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v360);
      int16x8_t v371 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v361, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v361);
      int16x8_t v372 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v362, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v362);
      int16x8_t v373 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v363, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v363);
      int16x8_t v374 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v364, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v364);
      int16x8_t v375 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v365, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v365);
      int16x8_t v376 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v366, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v366);
      int16x8_t v377 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v367, (int8x16_t)xmmword_242EA76C0), v369), (int16x8_t)v367);
      int64x2_t v378 = (int64x2_t)vshlq_n_s16(v370, 4uLL);
      int64x2_t v379 = (int64x2_t)vshlq_n_s16(v371, 4uLL);
      int64x2_t v380 = (int64x2_t)vshlq_n_s16(v372, 4uLL);
      int64x2_t v381 = (int64x2_t)vshlq_n_s16(v374, 4uLL);
      int64x2_t v382 = (int64x2_t)vshlq_n_s16(v375, 4uLL);
      int32x4_t v383 = (int64x2_t *)(a1 + a2);
      *(int64x2_t *)a1 = vzip1q_s64(v378, v379);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(v381, v382);
      int32x4_t v384 = (int64x2_t *)(a1 + 2 * a2);
      int64x2_t v385 = (int64x2_t)vshlq_n_s16(v373, 4uLL);
      int64x2_t v386 = (int64x2_t)vshlq_n_s16(v376, 4uLL);
      *int32x4_t v383 = vzip2q_s64(v378, v379);
      v383[1] = vzip2q_s64(v381, v382);
      int64x2_t v387 = (int64x2_t)vshlq_n_s16(v377, 4uLL);
      *int32x4_t v384 = vzip1q_s64(v380, v385);
      v384[1] = vzip1q_s64(v386, v387);
      uint64x2_t v388 = (int64x2_t *)((char *)v384 + a2);
      *uint64x2_t v388 = vzip2q_s64(v380, v385);
      v388[1] = vzip2q_s64(v386, v387);
      break;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  uint64_t v11 = a3;
  uint64_t v13 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int32x4_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v16, v13 + 2, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int32x4_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  uint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *uint64_t v21 = 0;
    __int16 v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v20 + 32), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *__int16 v25 = 0;
LABEL_35:
  int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v26, (int64x2_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *int v26 = 0;
    __int16 v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v30, (int64x2_t *)((char *)v13 + 8 * a2 + 32), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *__int16 v30 = 0;
LABEL_49:
  uint64_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v31, (int64x2_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    int v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *uint64_t v31 = 0;
    int v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + 12 * a2 + 32), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int a4, int32x4_t a5, int32x4_t a6)
{
  uint64_t v9 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1, 64, a2, *a3, a4, a5, a6);
  uint64_t v12 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 32, 64, v9, a3[1], a4, v10, v11);
  uint64_t v15 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 256, 64, v12, a3[2], a4, v13, v14);
  uint64_t v18 = v15
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 288, 64, v15, a3[3], a4, v16, v17);
  uint64_t v21 = v18
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 512, 64, v18, a3[4], a4, v19, v20);
  uint64_t v24 = v21
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 544, 64, v21, a3[5], a4, v22, v23);
  uint64_t v27 = v24
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 768, 64, v24, a3[6], a4, v25, v26);
  unsigned int v30 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)6,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::decompressSubblock(a1 + 800, 64, v27, v30, a4, v28, v29);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::decompressMacroblock(_OWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1, 128, a2, *a3);
  uint64_t v6 = v5
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 4, 128, v5, a3[1]);
  uint64_t v7 = v6
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 32, 128, v6, a3[2]);
  uint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 36, 128, v7, a3[3]);
  uint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 64, 128, v8, a3[4]);
  uint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 68, 128, v9, a3[5]);
  uint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 96, 128, v10, a3[6]);
  signed int v12 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressSubblock(a1 + 100, 128, v11, v12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(uint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  int16x8_t v7 = a3[3];
  uint64_t v6 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v9 = *v6;
  int16x8_t v10 = v6[1];
  int16x8_t v11 = v6[2];
  int16x8_t v12 = v6[3];
  uint64_t v8 = (int16x8_t *)((char *)v6 + a4);
  int16x8_t v13 = vshrq_n_s16(*a3, 6uLL);
  int16x8_t v14 = vshrq_n_s16(v9, 6uLL);
  int16x8_t v15 = vshrq_n_s16(*v8, 6uLL);
  int16x8_t v16 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v17 = vshrq_n_s16(v8[1], 6uLL);
  int8x16_t v18 = (int8x16_t)vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v19 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v20 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v21 = vshrq_n_s16(v11, 6uLL);
  int16x8_t v22 = vshrq_n_s16(v8[2], 6uLL);
  int16x8_t v23 = vshrq_n_s16(v12, 6uLL);
  int16x8_t v24 = vshrq_n_s16(v8[3], 6uLL);
  int16x8_t v25 = (int16x8_t)vdupq_lane_s64(v13.i64[0], 0);
  int16x8_t v544 = v13;
  int16x8_t v545 = vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  int16x8_t v546 = vshrq_n_s16(a3[1], 6uLL);
  int8x16_t v547 = (int8x16_t)vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  v26.i64[0] = 0x5000500050005;
  v26.i64[1] = 0x5000500050005;
  int8x16_t v548 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v13, v25), 6uLL), v26);
  int8x16_t v549 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v545, v25), 6uLL), v26);
  int8x16_t v550 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v546, v25), 6uLL), v26);
  int8x16_t v551 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v547, v25), 6uLL), v26);
  int8x16_t v552 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v14, v25), 6uLL), v26);
  int8x16_t v553 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v15, v25), 6uLL), v26);
  int16x8_t v27 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v548, (int16x8_t)v549), (int16x8_t)v550), (int16x8_t)v551), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v28 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v548, (int16x8_t)v549), (int16x8_t)v550), (int16x8_t)v551), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v29 = vpmaxq_s16(v27, v27);
  int16x8_t v30 = vpminq_s16(v28, v28);
  int16x8_t v31 = vzip1q_s16(v29, v30);
  int8x16_t v32 = (int8x16_t)vceqzq_s16(v31);
  int16x8_t v33 = vclsq_s16(v31);
  v34.i64[0] = 0x10001000100010;
  v34.i64[1] = 0x10001000100010;
  int16x8_t v35 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, v33), v32);
  int8x16_t v554 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v16, v25), 6uLL), v26);
  int8x16_t v555 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v17, v25), 6uLL), v26);
  int8x16_t v556 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v18, v25), 6uLL), v26);
  int8x16_t v557 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v25), 6uLL), v26);
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  int16x8_t v37 = vmaxq_s16(v29, v36);
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  int16x8_t v38 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v552, (int16x8_t)v553), (int16x8_t)v554), (int16x8_t)v555), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v39 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v552, (int16x8_t)v553), (int16x8_t)v554), (int16x8_t)v555), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v40 = vpmaxq_s16(v38, v38);
  int16x8_t v41 = vpminq_s16(v39, v39);
  int16x8_t v42 = vmaxq_s16(v37, v40);
  int16x8_t v43 = vminq_s16(vminq_s16(v30, v36), v41);
  int16x8_t v44 = vzip1q_s16(v40, v41);
  int16x8_t v45 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, vclsq_s16(v44)), (int8x16_t)vceqzq_s16(v44));
  int16x8_t v541 = (int16x8_t)v18;
  int16x8_t v542 = v19;
  int16x8_t v543 = vshrq_n_s16(v7, 6uLL);
  int8x16_t v558 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v543, v25), 6uLL), v26);
  int8x16_t v559 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v25), 6uLL), v26);
  int16x8_t v46 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v556, (int16x8_t)v557), (int16x8_t)v558), (int16x8_t)v559), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v47 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v556, (int16x8_t)v557), (int16x8_t)v558), (int16x8_t)v559), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v48 = vpmaxq_s16(v46, v46);
  int16x8_t v49 = vpminq_s16(v47, v47);
  int16x8_t v50 = vmaxq_s16(v42, v48);
  int16x8_t v51 = vminq_s16(v43, v49);
  int16x8_t v52 = vzip1q_s16(v48, v49);
  int16x8_t v53 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, vclsq_s16(v52)), (int8x16_t)vceqzq_s16(v52));
  int8x16_t v560 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v25), 6uLL), v26);
  int8x16_t v561 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v25), 6uLL), v26);
  int8x16_t v564 = (int8x16_t)v25;
  int16x8_t v54 = vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v25), 6uLL), v26);
  int16x8_t v55 = vmaxq_s16(vmaxq_s16((int16x8_t)v560, (int16x8_t)v561), v54);
  int16x8_t v56 = vminq_s16(vminq_s16((int16x8_t)v560, (int16x8_t)v561), v54);
  int8x16_t v562 = (int8x16_t)v54;
  int8x16_t v563 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v25), 6uLL), v26);
  int16x8_t v57 = vpmaxq_s16(v35, v35);
  int16x8_t v58 = vpmaxq_s16(v45, v45);
  int16x8_t v59 = vpmaxq_s16(v53, v53);
  int8x16_t v60 = (int8x16_t)vminq_s16(v56, (int16x8_t)v563);
  int16x8_t v61 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v55, (int16x8_t)v563), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v62 = (int16x8_t)vqtbl1q_s8(v60, (int8x16_t)xmmword_242EA77B0);
  int16x8_t v63 = vpmaxq_s16(v61, v61);
  int16x8_t v64 = vpminq_s16(v62, v62);
  int16x8_t v65 = vmaxq_s16(v50, v63);
  int16x8_t v66 = vminq_s16(v51, v64);
  int16x8_t v67 = vzip1q_s16(v63, v64);
  int16x8_t v68 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, vclsq_s16(v67)), (int8x16_t)vceqzq_s16(v67));
  int16x8_t v69 = vpmaxq_s16(v68, v68);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(vmaxq_s16(v57, v58), vmaxq_s16(v59, v69));
  int16x8_t v71 = vclzq_s16(vsubq_s16(v65, v66));
  v35.i64[0] = 0xF000F000F000FLL;
  v35.i64[1] = 0xF000F000F000FLL;
  v33.i64[0] = -1;
  v33.i64[1] = -1;
  int8x16_t v571 = (int8x16_t)v66;
  int8x16_t v572 = (int8x16_t)v65;
  int8x16_t v72 = (int8x16_t)vsubq_s16((int16x8_t)v34, v71);
  int8x16_t v73 = (int8x16_t)vsubq_s16(vshlq_s16(v33, vsubq_s16(v35, v71)), v66);
  int8x16_t v74 = (int8x16_t)vcgtq_s16((int16x8_t)v70, (int16x8_t)v72);
  int16x8_t v75 = (int16x8_t)vbslq_s8(v74, v72, v70);
  int8x16_t v573 = vandq_s8(v73, v74);
  v70.i64[0] = 0x8000800080008;
  v70.i64[1] = 0x8000800080008;
  int8x16_t v76 = vorrq_s8((int8x16_t)0, vandq_s8(v74, v70));
  int16x8_t v77 = vsubq_s16(v75, v58);
  v78.i64[0] = 0x3000300030003;
  v78.i64[1] = 0x3000300030003;
  int16x8_t v79 = vmaxq_s16(vminq_s16(v77, (int16x8_t)v78), (int16x8_t)0);
  int16x8_t v80 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v59), (int16x8_t)v78), (int16x8_t)0);
  int16x8_t v567 = vsubq_s16(v75, v79);
  int16x8_t v568 = vsubq_s16(v75, v80);
  int16x8_t v81 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v69), (int16x8_t)v78), (int16x8_t)0);
  int16x8_t v569 = vsubq_s16(v75, v81);
  int8x16_t v570 = (int8x16_t)v75;
  int16x8_t v82 = vaddq_s16(v81, v80);
  int16x8_t v83 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v57), (int16x8_t)v78), (int16x8_t)0);
  v18.i64[0] = 0x4000400040004;
  v18.i64[1] = 0x4000400040004;
  int8x16_t v84 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v75), v78), v76), vbicq_s8(v18, (int8x16_t)vceqq_s16(v82, vnegq_s16(vaddq_s16(v83, v79)))));
  int8x16_t v565 = v84;
  int16x8_t v566 = vsubq_s16(v75, v83);
  if (vmaxvq_s16(v75))
  {
    int16x8_t v532 = v20;
    int16x8_t v533 = v17;
    int16x8_t v538 = v14;
    int16x8_t v539 = v15;
    int16x8_t v540 = v16;
    int16x8_t v534 = v24;
    int16x8_t v535 = v21;
    int16x8_t v536 = v22;
    int16x8_t v537 = v23;
    int8x16_t v530 = v76;
    v85.i64[0] = 0x8000800080008000;
    v85.i64[1] = 0x8000800080008000;
    v86.i64[0] = 0x8000800080008000;
    v86.i64[1] = 0x8000800080008000;
    int8x16_t v87 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v548, (int16x8_t)vqtbl1q_s8(v548, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v88 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v549, (int16x8_t)vqtbl1q_s8(v549, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int16x8_t v89 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v550, (int16x8_t)vqtbl1q_s8(v550, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int16x8_t v90 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v551, (int16x8_t)vqtbl1q_s8(v551, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int16x8_t v91 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v553, (int16x8_t)vqtbl1q_s8(v553, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v555, (int16x8_t)vqtbl1q_s8(v555, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v93 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v556, (int16x8_t)vqtbl1q_s8(v556, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v558, (int16x8_t)vqtbl1q_s8(v558, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    v95.i64[0] = 0x8000800080008;
    v95.i64[1] = 0x8000800080008;
    int8x16_t v96 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v557, (int16x8_t)vqtbl1q_s8(v557, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v97 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v561, (int16x8_t)vqtbl1q_s8(v561, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v98 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v559, (int16x8_t)vqtbl1q_s8(v559, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v99 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v562, (int16x8_t)vqtbl1q_s8(v562, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v100 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v554, (int16x8_t)vqtbl1q_s8(v554, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v101 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v563, (int16x8_t)vqtbl1q_s8(v563, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v102 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v552, (int16x8_t)vqtbl1q_s8(v552, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int8x16_t v103 = (int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v87, (int16x8_t)v88), v89), v90);
    int8x16_t v520 = (int8x16_t)v90;
    int8x16_t v522 = (int8x16_t)v89;
    int8x16_t v104 = (int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v87, (int16x8_t)v88), v89), v90);
    int8x16_t v105 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v560, (int16x8_t)vqtbl1q_s8(v560, (int8x16_t)xmmword_242EA77A0)), 6uLL), v26);
    int16x8_t v106 = (int16x8_t)vqtbl1q_s8(v103, (int8x16_t)xmmword_242EA77B0);
    int16x8_t v107 = (int16x8_t)vqtbl1q_s8(v104, (int8x16_t)xmmword_242EA77B0);
    int16x8_t v108 = vpmaxq_s16(v106, v106);
    int16x8_t v109 = vpminq_s16(v107, v107);
    int16x8_t v110 = vmaxq_s16(v108, v85);
    int16x8_t v111 = vminq_s16(v109, v86);
    int16x8_t v112 = vzip1q_s16(v108, v109);
    int16x8_t v113 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, vclsq_s16(v112)), (int8x16_t)vceqzq_s16(v112));
    int8x16_t v114 = (int8x16_t)vpmaxq_s16(v113, v113);
    int8x16_t v526 = (int8x16_t)v92;
    int8x16_t v528 = (int8x16_t)v91;
    int16x8_t v115 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v102, v91), (int16x8_t)v100), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v116 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v102, v91), (int16x8_t)v100), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v117 = vpmaxq_s16(v115, v115);
    int16x8_t v118 = vpminq_s16(v116, v116);
    int16x8_t v119 = vmaxq_s16(v110, v117);
    int16x8_t v120 = vminq_s16(v111, v118);
    int16x8_t v121 = vzip1q_s16(v117, v118);
    int16x8_t v122 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, vclsq_s16(v121)), (int8x16_t)vceqzq_s16(v121));
    int16x8_t v123 = vpmaxq_s16(v122, v122);
    int16x8_t v124 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v93, (int16x8_t)v96), (int16x8_t)v94), (int16x8_t)v98), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v125 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v93, (int16x8_t)v96), (int16x8_t)v94), (int16x8_t)v98), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v126 = vpmaxq_s16(v124, v124);
    int16x8_t v127 = vpminq_s16(v125, v125);
    int16x8_t v128 = vmaxq_s16(v119, v126);
    int16x8_t v129 = vminq_s16(v120, v127);
    int16x8_t v130 = vzip1q_s16(v126, v127);
    int16x8_t v131 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, vclsq_s16(v130)), (int8x16_t)vceqzq_s16(v130));
    int16x8_t v132 = vpmaxq_s16(v131, v131);
    int16x8_t v133 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v105, (int16x8_t)v97), (int16x8_t)v99), (int16x8_t)v101), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v134 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v105, (int16x8_t)v97), (int16x8_t)v99), (int16x8_t)v101), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v135 = vpmaxq_s16(v133, v133);
    int16x8_t v136 = vpminq_s16(v134, v134);
    int16x8_t v137 = vmaxq_s16(v128, v135);
    int16x8_t v138 = vminq_s16(v129, v136);
    int16x8_t v139 = vzip1q_s16(v135, v136);
    int16x8_t v140 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v34, vclsq_s16(v139)), (int8x16_t)vceqzq_s16(v139));
    int16x8_t v141 = vpmaxq_s16(v140, v140);
    int8x16_t v142 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v114, v123), vmaxq_s16(v132, v141));
    int8x16_t v524 = (int8x16_t)v137;
    int8x16_t v143 = (int8x16_t)v138;
    int16x8_t v144 = vclzq_s16(vsubq_s16(v137, v138));
    int8x16_t v145 = (int8x16_t)vsubq_s16((int16x8_t)v34, v144);
    int8x16_t v146 = (int8x16_t)vcgtq_s16((int16x8_t)v142, (int16x8_t)v145);
    int8x16_t v147 = vbslq_s8(v146, v145, v142);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, (int16x8_t)v114), (int16x8_t)v78), (int16x8_t)0);
    int16x8_t v149 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v123), (int16x8_t)v78), (int16x8_t)0);
    int16x8_t v150 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v132), (int16x8_t)v78), (int16x8_t)0);
    int16x8_t v151 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v147, v141), (int16x8_t)v78), (int16x8_t)0);
    v145.i64[0] = 0x4000400040004;
    v145.i64[1] = 0x4000400040004;
    int8x16_t v152 = vbicq_s8(v145, (int8x16_t)vceqq_s16(vaddq_s16(v151, v150), vnegq_s16(vaddq_s16(v148, v149))));
    v114.i64[0] = 0x18001800180018;
    v114.i64[1] = 0x18001800180018;
    int8x16_t v153 = vbslq_s8(v146, v114, v34);
    int8x16_t v514 = (int8x16_t)vsubq_s16((int16x8_t)v147, v149);
    int8x16_t v516 = (int8x16_t)vsubq_s16((int16x8_t)v147, v150);
    int8x16_t v518 = (int8x16_t)vsubq_s16((int16x8_t)v147, v151);
    v150.i64[0] = 0x7000700070007;
    v150.i64[1] = 0x7000700070007;
    int8x16_t v512 = (int8x16_t)vsubq_s16((int16x8_t)v147, v148);
    v145.i64[0] = 0x2000200020002;
    v145.i64[1] = 0x2000200020002;
    int16x8_t v154 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v84, v78), (int16x8_t)v145), v34);
    int16x8_t v156 = v569;
    int8x16_t v155 = v570;
    int16x8_t v157 = vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v570, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v530, v95))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v84, (int16x8_t)v84), v95)), v154);
    int16x8_t v159 = v566;
    int16x8_t v158 = v567;
    int16x8_t v160 = v568;
    int8x16_t v161 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(v157, v566, v150), vshlq_n_s16(vaddq_s16(vaddq_s16(v568, v567), v569), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v147, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v153 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v152, (int16x8_t)v152)), (int16x8_t)v512, v150), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v516, (int16x8_t)v514), (int16x8_t)v518), 3uLL))).i64[0], 0);
    int v162 = (unsigned __int16)vaddvq_s16((int16x8_t)v161);
    BOOL v164 = a5 < 4 || a6 < 2;
    if (v162)
    {
      v165.i64[0] = 0x3000300030003;
      v165.i64[1] = 0x3000300030003;
      int8x16_t v166 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v147), v165), v153), v152);
      v167.i64[0] = 0xF000F000F000FLL;
      v167.i64[1] = 0xF000F000F000FLL;
      int8x16_t v548 = vbslq_s8(v161, v87, v548);
      int8x16_t v549 = vbslq_s8(v161, v88, v549);
      v165.i64[0] = -1;
      v165.i64[1] = -1;
      int8x16_t v550 = vbslq_s8(v161, v522, v550);
      int8x16_t v551 = vbslq_s8(v161, v520, v551);
      int8x16_t v552 = vbslq_s8(v161, v102, v552);
      int8x16_t v553 = vbslq_s8(v161, v528, v553);
      int8x16_t v554 = vbslq_s8(v161, v100, v554);
      int8x16_t v555 = vbslq_s8(v161, v526, v555);
      int8x16_t v556 = vbslq_s8(v161, v93, v556);
      int8x16_t v557 = vbslq_s8(v161, v96, v557);
      int8x16_t v558 = vbslq_s8(v161, v94, v558);
      int8x16_t v559 = vbslq_s8(v161, v98, v559);
      int8x16_t v560 = vbslq_s8(v161, v105, v560);
      int8x16_t v561 = vbslq_s8(v161, v97, v561);
      int8x16_t v562 = vbslq_s8(v161, v99, v562);
      int8x16_t v563 = vbslq_s8(v161, v101, v563);
      int16x8_t v159 = (int16x8_t)vbslq_s8(v161, v512, (int8x16_t)v566);
      int16x8_t v158 = (int16x8_t)vbslq_s8(v161, v514, (int8x16_t)v567);
      int16x8_t v566 = v159;
      int16x8_t v567 = v158;
      int16x8_t v160 = (int16x8_t)vbslq_s8(v161, v516, (int8x16_t)v568);
      int16x8_t v156 = (int16x8_t)vbslq_s8(v161, v518, (int8x16_t)v569);
      int16x8_t v568 = v160;
      int16x8_t v569 = v156;
      int8x16_t v572 = vbslq_s8(v161, v524, v572);
      int8x16_t v573 = vbslq_s8(v161, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v165, vsubq_s16(v167, v144)), (int16x8_t)v143), v146), v573);
      int8x16_t v155 = vbslq_s8(v161, v147, v570);
      int8x16_t v570 = v155;
      int8x16_t v571 = vbslq_s8(v161, v143, v571);
      int8x16_t v84 = vbslq_s8(v161, v166, v565);
      int8x16_t v564 = vbslq_s8(v161, (int8x16_t)vsubq_s16((int16x8_t)v564, (int16x8_t)vqtbl1q_s8(v564, (int8x16_t)xmmword_242EA77A0)), v564);
      int8x16_t v565 = v84;
    }
    int16x8_t v168 = v538;
    int16x8_t v169 = v539;
    int16x8_t v170 = v540;
    int16x8_t v171 = v544;
    int16x8_t v172 = v545;
    int16x8_t v173 = v546;
    int8x16_t v174 = v547;
    if (!v164)
    {
      int16x8_t v175 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v171.i8, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v176 = vsubq_s16(v544, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v171.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v177 = vsubq_s16(v545, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v171.i8, (int8x16_t)xmmword_242EA7720));
      int16x8_t v178 = vsubq_s16(v546, v175);
      int16x8_t v179 = vsubq_s16((int16x8_t)v547, v175);
      uint64_t v180 = v533.i64[0];
      uint64_t v181 = v547.i64[1];
      int16x8_t v182 = vsubq_s16(v538, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v168.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v183 = vsubq_s16(v539, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v168.i8, (int8x16_t)xmmword_242EA7750));
      int8x16_t v184 = (int8x16_t)vsubq_s16(v540, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v168.i8, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v185 = vsubq_s16(v533, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v168.i8, (int8x16_t)xmmword_242EA7760));
      int16x8_t v186 = v541;
      int16x8_t v187 = v542;
      int16x8_t v188 = v543;
      v174.i64[0] = v532.i64[0];
      v174.i64[1] = v547.i64[1];
      int16x8_t v189 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)(&v174 - 3), (int8x16_t)xmmword_242EA7720);
      int16x8_t v190 = vsubq_s16(v541, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)(&v174 - 3), (int8x16_t)xmmword_242EA77D0));
      int16x8_t v191 = vsubq_s16(v542, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)(&v174 - 3), (int8x16_t)xmmword_242EA77E0));
      int16x8_t v192 = vsubq_s16(v543, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)(&v174 - 3), (int8x16_t)xmmword_242EA7710));
      int16x8_t v171 = v544;
      int16x8_t v172 = v545;
      int16x8_t v173 = v546;
      int8x16_t v174 = v547;
      v578.val[0] = (int8x16_t)v535;
      v578.val[1] = (int8x16_t)v536;
      v578.val[2] = (int8x16_t)v537;
      v578.val[3].i64[0] = v534.i64[0];
      v578.val[3].i64[1] = v547.i64[1];
      v193.i64[1] = v176.i64[1];
      v193.i64[0] = v179.i64[1];
      v179.i64[1] = v176.i64[0];
      int16x8_t v194 = vshlq_n_s16(v179, 6uLL);
      int16x8_t v195 = vshlq_n_s16(v182, 6uLL);
      int16x8_t v196 = vshlq_n_s16(v183, 6uLL);
      int16x8_t v197 = vshlq_n_s16(v185, 6uLL);
      int16x8_t v198 = vshlq_n_s16(v190, 6uLL);
      int16x8_t v199 = vshlq_n_s16(v191, 6uLL);
      int16x8_t v200 = vshlq_n_s16(v192, 6uLL);
      int16x8_t v201 = vshlq_n_s16(vsubq_s16(v532, v189), 6uLL);
      int16x8_t v202 = vshlq_n_s16(vsubq_s16(v535, (int16x8_t)vqtbl4q_s8(v578, (int8x16_t)xmmword_242EA77D0)), 6uLL);
      int16x8_t v203 = vshlq_n_s16(vsubq_s16(v536, (int16x8_t)vqtbl4q_s8(v578, (int8x16_t)xmmword_242EA7780)), 6uLL);
      int16x8_t v204 = vshlq_n_s16(vsubq_s16(v537, (int16x8_t)vqtbl4q_s8(v578, (int8x16_t)xmmword_242EA7710)), 6uLL);
      int16x8_t v205 = vshlq_n_s16(vsubq_s16(v534, (int16x8_t)vqtbl4q_s8(v578, (int8x16_t)xmmword_242EA7720)), 6uLL);
      v206.i64[0] = 0x5000500050005;
      v206.i64[1] = 0x5000500050005;
      int8x16_t v207 = (int8x16_t)vshlq_s16(vshlq_n_s16(v193, 6uLL), v206);
      int16x8_t v208 = vshlq_s16(vshlq_n_s16(v177, 6uLL), v206);
      int8x16_t v209 = (int8x16_t)vshlq_s16(vshlq_n_s16(v178, 6uLL), v206);
      int16x8_t v210 = vshlq_s16(v194, v206);
      int8x16_t v211 = (int8x16_t)vshlq_s16(v195, v206);
      int16x8_t v212 = vshlq_s16(v196, v206);
      int16x8_t v213 = vshlq_s16(v197, v206);
      int16x8_t v214 = vshlq_s16(v198, v206);
      int16x8_t v215 = vshlq_s16(v199, v206);
      int8x16_t v216 = (int8x16_t)vshlq_s16(v200, v206);
      int8x16_t v217 = (int8x16_t)vshlq_s16(vshlq_n_s16((int16x8_t)v184, 6uLL), v206);
      int16x8_t v218 = vshlq_s16(v201, v206);
      int8x16_t v219 = (int8x16_t)v208;
      int8x16_t v220 = (int8x16_t)vshlq_s16(v202, v206);
      int16x8_t v221 = vshlq_s16(v203, v206);
      int8x16_t v222 = (int8x16_t)v214;
      int8x16_t v223 = (int8x16_t)vshlq_s16(v204, v206);
      int16x8_t v224 = vshlq_s16(v205, v206);
      int8x16_t v531 = (int8x16_t)v210;
      int16x8_t v225 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v207, (int16x8_t)v219), (int16x8_t)v209), v210), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v207, (int16x8_t)v219), (int16x8_t)v209), v210), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v227 = vpmaxq_s16(v225, v225);
      int16x8_t v228 = vpminq_s16(v226, v226);
      v205.i64[0] = 0x8000800080008000;
      v205.i64[1] = 0x8000800080008000;
      int16x8_t v229 = vmaxq_s16(v227, v205);
      v214.i64[0] = 0x8000800080008000;
      v214.i64[1] = 0x8000800080008000;
      int16x8_t v230 = vminq_s16(v228, v214);
      int16x8_t v231 = vzip1q_s16(v227, v228);
      v184.i64[0] = 0x10001000100010;
      v184.i64[1] = 0x10001000100010;
      int16x8_t v232 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v184, vclsq_s16(v231)), (int8x16_t)vceqzq_s16(v231));
      int16x8_t v233 = vpmaxq_s16(v232, v232);
      int8x16_t v527 = (int8x16_t)v213;
      int8x16_t v529 = (int8x16_t)v212;
      int16x8_t v234 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v211, v212), (int16x8_t)v217), v213), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v211, v212), (int16x8_t)v217), v213), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = vpmaxq_s16(v234, v234);
      int16x8_t v237 = vpminq_s16(v235, v235);
      int16x8_t v238 = vmaxq_s16(v229, v236);
      int16x8_t v239 = vminq_s16(v230, v237);
      int16x8_t v240 = vzip1q_s16(v236, v237);
      int16x8_t v241 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v184, vclsq_s16(v240)), (int8x16_t)vceqzq_s16(v240));
      int16x8_t v242 = vpmaxq_s16(v241, v241);
      int8x16_t v523 = (int8x16_t)v218;
      int8x16_t v525 = (int8x16_t)v215;
      int16x8_t v243 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v222, v215), (int16x8_t)v216), v218), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v244 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v222, v215), (int16x8_t)v216), v218), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v245 = vpmaxq_s16(v243, v243);
      int16x8_t v246 = vpminq_s16(v244, v244);
      int16x8_t v247 = vmaxq_s16(v238, v245);
      int16x8_t v248 = vminq_s16(v239, v246);
      int16x8_t v249 = vzip1q_s16(v245, v246);
      int16x8_t v250 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v184, vclsq_s16(v249)), (int8x16_t)vceqzq_s16(v249));
      int16x8_t v251 = vpmaxq_s16(v250, v250);
      int8x16_t v519 = (int8x16_t)v224;
      int8x16_t v521 = (int8x16_t)v221;
      int16x8_t v252 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v220, v221), (int16x8_t)v223), v224), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v253 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v220, v221), (int16x8_t)v223), v224), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v254 = vpmaxq_s16(v252, v252);
      int16x8_t v255 = vpminq_s16(v253, v253);
      int8x16_t v256 = (int8x16_t)vmaxq_s16(v247, v254);
      int16x8_t v257 = vminq_s16(v248, v255);
      int16x8_t v258 = vzip1q_s16(v254, v255);
      int16x8_t v259 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v184, vclsq_s16(v258)), (int8x16_t)vceqzq_s16(v258));
      int16x8_t v260 = vpmaxq_s16(v259, v259);
      int8x16_t v261 = (int8x16_t)vmaxq_s16(vmaxq_s16(v233, v242), vmaxq_s16(v251, v260));
      int8x16_t v517 = (int8x16_t)v257;
      int16x8_t v262 = vclzq_s16(vsubq_s16((int16x8_t)v256, v257));
      int8x16_t v263 = (int8x16_t)vsubq_s16((int16x8_t)v184, v262);
      int8x16_t v264 = (int8x16_t)vcgtq_s16((int16x8_t)v261, (int16x8_t)v263);
      int8x16_t v265 = vbslq_s8(v264, v263, v261);
      v261.i64[0] = 0x3000300030003;
      v261.i64[1] = 0x3000300030003;
      int16x8_t v266 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v233), (int16x8_t)v261), (int16x8_t)0);
      int8x16_t v267 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v242), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v268 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v251), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v269 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v265, v260), (int16x8_t)v261), (int16x8_t)0);
      int16x8_t v270 = vsubq_s16((int16x8_t)v265, v266);
      int16x8_t v271 = vsubq_s16((int16x8_t)v265, (int16x8_t)v267);
      int16x8_t v272 = vsubq_s16((int16x8_t)v265, v269);
      int8x16_t v273 = (int8x16_t)vceqq_s16(vaddq_s16(v269, v268), vnegq_s16(vaddq_s16(v266, (int16x8_t)v267)));
      v267.i64[0] = 0x4000400040004;
      v267.i64[1] = 0x4000400040004;
      int8x16_t v274 = vbicq_s8(v267, v273);
      v269.i64[0] = 0x7000700070007;
      v269.i64[1] = 0x7000700070007;
      int8x16_t v513 = (int8x16_t)v272;
      int8x16_t v515 = (int8x16_t)v271;
      int8x16_t v510 = (int8x16_t)vsubq_s16((int16x8_t)v265, v268);
      int8x16_t v511 = (int8x16_t)v270;
      int16x8_t v275 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v263, v264), vaddq_s16((int16x8_t)v274, (int16x8_t)v274)), v270, v269), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v510, v271), v272), 3uLL));
      int8x16_t v84 = v565;
      int16x8_t v159 = v566;
      v276.i64[0] = 0x2000200020002;
      v276.i64[1] = 0x2000200020002;
      int16x8_t v277 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v565, v261), (int16x8_t)v276), v184);
      v261.i64[0] = 0x8000800080008;
      v261.i64[1] = 0x8000800080008;
      int16x8_t v156 = v569;
      int8x16_t v155 = v570;
      int16x8_t v158 = v567;
      int16x8_t v160 = v568;
      int8x16_t v278 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v570, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v565, v261))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v84, (int16x8_t)v84), v261)), v277), v566, v269), vshlq_n_s16(vaddq_s16(vaddq_s16(v568, v567), v569), 3uLL)), v275).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v278))
      {
        v279.i64[0] = 0x9000900090009;
        v279.i64[1] = 0x9000900090009;
        v280.i64[0] = 0xF000F000F000FLL;
        v280.i64[1] = 0xF000F000F000FLL;
        v281.i64[0] = -1;
        v281.i64[1] = -1;
        int16x8_t v159 = (int16x8_t)vbslq_s8(v278, v511, (int8x16_t)v566);
        int16x8_t v158 = (int16x8_t)vbslq_s8(v278, v515, (int8x16_t)v567);
        int16x8_t v160 = (int16x8_t)vbslq_s8(v278, v510, (int8x16_t)v568);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v278, v513, (int8x16_t)v569);
        int8x16_t v155 = vbslq_s8(v278, v265, v570);
        int8x16_t v84 = vbslq_s8(v278, vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v265), v276), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v264, v279), (int16x8_t)vmvnq_s8(v264))), v274), v565);
        int8x16_t v563 = vbslq_s8(v278, v519, v563);
        int8x16_t v564 = vbslq_s8(v278, vextq_s8(v547, v547, 8uLL), v564);
        int8x16_t v548 = vbslq_s8(v278, v207, v548);
        int8x16_t v549 = vbslq_s8(v278, v219, v549);
        int8x16_t v550 = vbslq_s8(v278, v209, v550);
        int8x16_t v551 = vbslq_s8(v278, v531, v551);
        int8x16_t v552 = vbslq_s8(v278, v211, v552);
        int8x16_t v553 = vbslq_s8(v278, v529, v553);
        int8x16_t v554 = vbslq_s8(v278, v217, v554);
        int8x16_t v555 = vbslq_s8(v278, v527, v555);
        int8x16_t v556 = vbslq_s8(v278, v222, v556);
        int8x16_t v557 = vbslq_s8(v278, v525, v557);
        int8x16_t v558 = vbslq_s8(v278, v216, v558);
        int8x16_t v559 = vbslq_s8(v278, v523, v559);
        int8x16_t v560 = vbslq_s8(v278, v220, v560);
        int8x16_t v561 = vbslq_s8(v278, v521, v561);
        int8x16_t v562 = vbslq_s8(v278, v223, v562);
        int8x16_t v571 = vbslq_s8(v278, v517, v571);
        int8x16_t v572 = vbslq_s8(v278, v256, v572);
        int8x16_t v573 = vbslq_s8(v278, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v281, vsubq_s16(v280, v262)), (int16x8_t)v517), v264), v573);
        int16x8_t v566 = v159;
        int16x8_t v567 = v158;
        int16x8_t v568 = v160;
        int16x8_t v569 = v156;
        int8x16_t v570 = v155;
        int8x16_t v565 = v84;
      }
      int16x8_t v168 = v538;
      int16x8_t v169 = v539;
      int16x8_t v170 = v540;
    }
    int16x8_t v282 = (int16x8_t)vandq_s8(v573, (int8x16_t)vceqq_s16((int16x8_t)v155, v159));
    int8x16_t v548 = (int8x16_t)vaddq_s16(v282, (int16x8_t)v548);
    int8x16_t v549 = (int8x16_t)vaddq_s16((int16x8_t)v549, v282);
    int8x16_t v550 = (int8x16_t)vaddq_s16((int16x8_t)v550, v282);
    int8x16_t v551 = (int8x16_t)vaddq_s16((int16x8_t)v551, v282);
    int16x8_t v283 = (int16x8_t)vandq_s8(v573, (int8x16_t)vceqq_s16((int16x8_t)v155, v158));
    int8x16_t v552 = (int8x16_t)vaddq_s16((int16x8_t)v552, v283);
    int8x16_t v553 = (int8x16_t)vaddq_s16((int16x8_t)v553, v283);
    int8x16_t v554 = (int8x16_t)vaddq_s16((int16x8_t)v554, v283);
    int8x16_t v555 = (int8x16_t)vaddq_s16((int16x8_t)v555, v283);
    int16x8_t v284 = (int16x8_t)vandq_s8(v573, (int8x16_t)vceqq_s16((int16x8_t)v155, v160));
    int8x16_t v556 = (int8x16_t)vaddq_s16((int16x8_t)v556, v284);
    int8x16_t v557 = (int8x16_t)vaddq_s16((int16x8_t)v557, v284);
    int8x16_t v558 = (int8x16_t)vaddq_s16((int16x8_t)v558, v284);
    int8x16_t v559 = (int8x16_t)vaddq_s16((int16x8_t)v559, v284);
    int8x16_t v285 = vandq_s8(v573, (int8x16_t)vceqq_s16((int16x8_t)v155, v156));
    int8x16_t v560 = (int8x16_t)vaddq_s16((int16x8_t)v560, (int16x8_t)v285);
    int8x16_t v561 = (int8x16_t)vaddq_s16((int16x8_t)v561, (int16x8_t)v285);
    int8x16_t v562 = (int8x16_t)vaddq_s16((int16x8_t)v562, (int16x8_t)v285);
    int8x16_t v563 = (int8x16_t)vaddq_s16((int16x8_t)v563, (int16x8_t)v285);
    v285.i64[0] = 0x8000800080008;
    v285.i64[1] = 0x8000800080008;
    v286.i64[0] = 0x3000300030003;
    v286.i64[1] = 0x3000300030003;
    v287.i64[0] = 0x2000200020002;
    v287.i64[1] = 0x2000200020002;
    int8x16_t v288 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v84, v286), v287);
    v287.i64[0] = 0x10001000100010;
    v287.i64[1] = 0x10001000100010;
    int16x8_t v289 = (int16x8_t)vandq_s8(v288, (int8x16_t)v287);
    v287.i64[0] = 0x7000700070007;
    v287.i64[1] = 0x7000700070007;
    int16x8_t v290 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v155, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v84, v285))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v84, (int16x8_t)v84), v285)), v289), v159, v287), vshlq_n_s16(vaddq_s16(v160, vaddq_s16(v158, v156)), 3uLL));
    int16x8_t v291 = vpaddq_s16(v290, v290);
    if ((unint64_t)(vpaddq_s16(v291, v291).i16[0] + 83) > 0x4FF)
    {
      v577[0] = v171;
      v577[1] = v172;
      v577[2] = v173;
      v577[3] = v174;
      v576[0] = v168;
      v576[1] = v169;
      v576[2] = v170;
      v576[3] = v533;
      v575[0] = v541;
      v575[1] = v542;
      v575[2] = v543;
      v575[3] = v532;
      v574[0] = v535;
      v574[1] = v536;
      int16x8_t v298 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v299 = 8 * (a1 & 7);
      v574[2] = v537;
      v574[3] = v534;
      if (v299) {
        uint64_t v300 = *v298 & ~(-1 << v299);
      }
      else {
        uint64_t v300 = 0;
      }
      uint64_t v455 = 0;
      uint64_t v456 = 0;
      v457.i64[0] = 0x5000500050005;
      v457.i64[1] = 0x5000500050005;
      v458.i64[0] = -1;
      v458.i64[1] = -1;
      int8x16_t v459 = (int8x16_t)vshlq_u16(v458, v457);
      v458.i64[0] = 0xA0000000ALL;
      v458.i64[1] = 0xA0000000ALL;
      int32x4_t v460 = vpaddq_s32((int32x4_t)v458, (int32x4_t)v458);
      v461.i64[0] = v460.u32[0];
      v461.i64[1] = v460.u32[1];
      int64x2_t v462 = v461;
      v461.i64[0] = v460.u32[2];
      v461.i64[1] = v460.u32[3];
      uint64x2_t v463 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v462);
      uint64x2_t v464 = (uint64x2_t)vzip1q_s64((int64x2_t)0, v461);
      int64x2_t v465 = vpaddq_s64(v462, v461);
      uint64_t v466 = vaddvq_s64(v465);
      uint64_t v467 = v465.i64[0] + v299;
      do
      {
        uint16x8_t v468 = (uint16x8_t)vandq_s8(v459, (int8x16_t)v577[v455]);
        int32x4_t v469 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v468.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v468), (uint32x4_t)xmmword_242EA7B80));
        v470.i64[0] = v469.u32[0];
        v470.i64[1] = v469.u32[1];
        uint64x2_t v471 = v470;
        v470.i64[0] = v469.u32[2];
        v470.i64[1] = v469.u32[3];
        int64x2_t v472 = vpaddq_s64((int64x2_t)vshlq_u64(v471, v463), (int64x2_t)vshlq_u64(v470, v464));
        uint64_t v473 = (v299 + v456) & 0x3F;
        unint64_t v474 = (v472.i64[0] << (v299 + v456)) | v300;
        if ((unint64_t)(v465.i64[0] + v473) >= 0x40)
        {
          *(void *)((char *)v298 + (((unint64_t)(v299 + v456) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v474;
          unint64_t v474 = (unint64_t)v472.i64[0] >> -(char)v473;
          if (!v473) {
            unint64_t v474 = 0;
          }
        }
        uint64_t v475 = (v467 + v456) & 0x3F;
        uint64_t v300 = v474 | (v472.i64[1] << (v467 + v456));
        if ((unint64_t)(v475 + v465.i64[1]) >= 0x40)
        {
          *(void *)((char *)v298 + (((unint64_t)(v467 + v456) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v300;
          uint64_t v300 = (unint64_t)v472.i64[1] >> -(char)v475;
          if (!v475) {
            uint64_t v300 = 0;
          }
        }
        v456 += v466;
        ++v455;
      }
      while (v455 != 4);
      uint64_t v476 = 0;
      uint64_t v477 = v465.i64[0] + v465.i64[1];
      uint64_t v478 = v465.i64[0] + v299;
      uint64_t v479 = v465.i64[0] + v465.i64[1] + v456;
      do
      {
        uint64_t v480 = v479;
        uint16x8_t v481 = (uint16x8_t)vandq_s8(v459, (int8x16_t)v576[v476]);
        int32x4_t v482 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v481.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v481), (uint32x4_t)xmmword_242EA7B80));
        v483.i64[0] = v482.u32[0];
        v483.i64[1] = v482.u32[1];
        uint64x2_t v484 = v483;
        v483.i64[0] = v482.u32[2];
        v483.i64[1] = v482.u32[3];
        int64x2_t v485 = vpaddq_s64((int64x2_t)vshlq_u64(v484, v463), (int64x2_t)vshlq_u64(v483, v464));
        uint64_t v486 = (v299 + v456) & 0x3F;
        unint64_t v487 = (v485.i64[0] << (v299 + v456)) | v300;
        if ((unint64_t)(v465.i64[0] + v486) >= 0x40)
        {
          *(void *)((char *)v298 + (((unint64_t)(v299 + v456) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v487;
          unint64_t v487 = (unint64_t)v485.i64[0] >> -(char)v486;
          if (!v486) {
            unint64_t v487 = 0;
          }
        }
        uint64_t v488 = ((_BYTE)v478 + (_BYTE)v456) & 0x3F;
        uint64_t v300 = v487 | (v485.i64[1] << (v478 + v456));
        if ((unint64_t)(v488 + v465.i64[1]) >= 0x40)
        {
          *(void *)((char *)v298 + (((unint64_t)(v478 + v456) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v300;
          uint64_t v300 = (unint64_t)v485.i64[1] >> -(char)v488;
          if ((((_BYTE)v478 + (_BYTE)v456) & 0x3F) == 0) {
            uint64_t v300 = 0;
          }
        }
        v479 += v477;
        v456 += v477;
        ++v476;
      }
      while (v476 != 4);
      uint64_t v489 = 0;
      uint64_t v490 = v465.i64[0] + v465.i64[1];
      uint64_t v491 = v465.i64[0] + v299;
      do
      {
        uint16x8_t v492 = (uint16x8_t)vandq_s8(v459, (int8x16_t)v575[v489]);
        int32x4_t v493 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v492.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v492), (uint32x4_t)xmmword_242EA7B80));
        v494.i64[0] = v493.u32[0];
        v494.i64[1] = v493.u32[1];
        uint64x2_t v495 = v494;
        v494.i64[0] = v493.u32[2];
        v494.i64[1] = v493.u32[3];
        int64x2_t v496 = vpaddq_s64((int64x2_t)vshlq_u64(v495, v463), (int64x2_t)vshlq_u64(v494, v464));
        uint64_t v497 = (v299 + v456) & 0x3F;
        unint64_t v498 = (v496.i64[0] << (v299 + v456)) | v300;
        if ((unint64_t)(v465.i64[0] + v497) >= 0x40)
        {
          *(void *)((char *)v298 + (((unint64_t)(v299 + v456) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v498;
          unint64_t v498 = (unint64_t)v496.i64[0] >> -(char)v497;
          if (!v497) {
            unint64_t v498 = 0;
          }
        }
        uint64_t v499 = (v491 + v456) & 0x3F;
        uint64_t v300 = v498 | (v496.i64[1] << (v491 + v456));
        if ((unint64_t)(v499 + v465.i64[1]) >= 0x40)
        {
          *(void *)((char *)v298 + (((unint64_t)(v491 + v456) >> 3) & 0x1FFFFFFFFFFFFFF8)) = v300;
          uint64_t v300 = (unint64_t)v496.i64[1] >> -(char)v499;
          if (!v499) {
            uint64_t v300 = 0;
          }
        }
        v480 += v490;
        v456 += v490;
        ++v489;
      }
      while (v489 != 4);
      uint64_t v500 = 0;
      uint64_t v501 = v465.i64[0] + v465.i64[1];
      unint64_t v502 = v299 + v480;
      unint64_t v503 = v502 + v465.i64[0];
      do
      {
        uint16x8_t v504 = (uint16x8_t)vandq_s8(v459, (int8x16_t)v574[v500]);
        int32x4_t v505 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v504.i8), (uint32x4_t)xmmword_242EA7B80), (int32x4_t)vshlq_u32(vmovl_high_u16(v504), (uint32x4_t)xmmword_242EA7B80));
        v506.i64[0] = v505.u32[0];
        v506.i64[1] = v505.u32[1];
        uint64x2_t v507 = v506;
        v506.i64[0] = v505.u32[2];
        v506.i64[1] = v505.u32[3];
        int64x2_t v508 = vpaddq_s64((int64x2_t)vshlq_u64(v507, v463), (int64x2_t)vshlq_u64(v506, v464));
        unint64_t v509 = (v508.i64[0] << v502) | v300;
        if (v465.i64[0] + (v502 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v298 + ((v502 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v509;
          unint64_t v509 = (unint64_t)v508.i64[0] >> -(v502 & 0x3F);
          if ((v502 & 0x3F) == 0) {
            unint64_t v509 = 0;
          }
        }
        uint64_t v300 = v509 | (v508.i64[1] << v503);
        if ((v503 & 0x3F) + v465.i64[1] >= 0x40)
        {
          *(void *)((char *)v298 + ((v503 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v300;
          uint64_t v300 = (unint64_t)v508.i64[1] >> -(v503 & 0x3F);
          if ((v503 & 0x3F) == 0) {
            uint64_t v300 = 0;
          }
        }
        ++v500;
        v502 += v501;
        v503 += v501;
      }
      while (v500 != 4);
      *a2 = -97;
      return 160;
    }
    else
    {
      int16x8_t v292 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v293 = 8 * (a1 & 7);
      if (v293) {
        uint64_t v294 = *v292 & ~(-1 << v293);
      }
      else {
        uint64_t v294 = 0;
      }
      *a2 = 0;
      uint64_t v301 = ((v155.u16[0] << 20) - 0x100000) & 0xF00000;
      v302.i32[0] = v84.u16[1];
      v302.i32[1] = v84.u16[2];
      int8x8_t v303 = vand_s8((int8x8_t)vshl_u32(v302, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v304 = v303.i32[1];
      __int32 v305 = v303.i32[0] | v84.i8[0] & 0x1F;
      if (!v155.i16[0]) {
        uint64_t v301 = 0;
      }
      unint64_t v306 = (unint64_t)((v155.i8[4] - 1) & 0xF) << 28;
      if (!v155.i16[2]) {
        unint64_t v306 = 0;
      }
      v307.i32[0] = v155.u16[3];
      v307.i32[1] = v155.u16[1];
      int32x2_t v308 = vceqz_s32((int32x2_t)vand_s8(v307, (int8x8_t)0xFFFF0000FFFFLL));
      v309.i64[0] = v308.i32[0];
      v309.i64[1] = v308.i32[1];
      int8x16_t v310 = (int8x16_t)v309;
      int8x8_t v311 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v307, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v309.i64[0] = v311.u32[0];
      v309.i64[1] = v311.u32[1];
      int8x16_t v312 = vbicq_s8((int8x16_t)vshlq_u64(v309, (uint64x2_t)xmmword_242EA77F0), v310);
      v310.i64[0] = v306;
      v310.i64[1] = v305 | v304 | ((unint64_t)(v84.i8[6] & 0x1F) << 15) | v301;
      int8x16_t v313 = vorrq_s8(v310, v312);
      uint64_t v314 = v564.i64[0];
      unint64_t v315 = vorrq_s8(v313, (int8x16_t)vdupq_laneq_s64((int64x2_t)v313, 1)).u64[0];
      unint64_t v316 = (v315 << v293) | v294;
      if (v293 >= 0x1C)
      {
        *int16x8_t v292 = v316;
        unint64_t v316 = v315 >> (-8 * (a1 & 7u));
      }
      v317.i64[0] = WORD1(v314);
      v317.i64[1] = WORD2(v314);
      v318.i64[0] = 0xFFFFLL;
      v318.i64[1] = 0xFFFFLL;
      int8x16_t v319 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v317, v318), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v320 = v319.i64[0] | v314 & 0x3FF | v319.i64[1] | ((unint64_t)(HIWORD(v314) & 0x3FF) << 30);
      unint64_t v321 = (v293 + 36) & 0x3C;
      unint64_t v322 = v316 | (v320 << v321);
      if (v321 >= 0x18)
      {
        *(void *)((char *)v292 + (((v293 + 36) >> 3) & 8)) = v322;
        unint64_t v322 = v320 >> -(char)v321;
      }
      unint64_t v323 = v293 + 76;
      int8x16_t v324 = (int8x16_t)vsubq_s16((int16x8_t)v570, v566);
      int8x16_t v325 = (int8x16_t)vsubq_s16((int16x8_t)v570, v567);
      int8x16_t v326 = (int8x16_t)vsubq_s16((int16x8_t)v570, v568);
      int8x16_t v327 = (int8x16_t)vsubq_s16((int16x8_t)v570, v569);
      *(uint8x8_t *)v324.i8 = vqmovn_u16((uint16x8_t)v324);
      *(uint8x8_t *)v325.i8 = vqmovn_u16((uint16x8_t)v325);
      *(uint8x8_t *)v326.i8 = vqmovn_u16((uint16x8_t)v326);
      *(uint8x8_t *)v327.i8 = vqmovn_u16((uint16x8_t)v327);
      int16x8_t v328 = (int16x8_t)vtrn1q_s8(v324, v325);
      int16x8_t v329 = (int16x8_t)vtrn2q_s8(v324, v325);
      int8x16_t v330 = vtrn1q_s8(v326, v327);
      int16x8_t v331 = (int16x8_t)vtrn2q_s8(v326, v327);
      int8x16_t v332 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v328, (int16x8_t)v330), (int32x4_t)vzip1q_s16(v329, v331)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v328, (int16x8_t)v330), (int32x4_t)vtrn2q_s16(v329, v331)));
      v330.i64[0] = 0x202020202020202;
      v330.i64[1] = 0x202020202020202;
      int8x16_t v333 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v565.i8, (int16x4_t)0x4000400040004)), v330);
      v330.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v330.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v326.i64[0] = -1;
      v326.i64[1] = -1;
      uint8x16_t v334 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v326, (uint8x16_t)vorrq_s8(v333, v330)), v332);
      int16x8_t v335 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v333.i8);
      int16x8_t v336 = (int16x8_t)vmovl_high_u8((uint8x16_t)v333);
      uint16x8_t v337 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v334.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v335)), (int16x8_t)vshlq_u16(vmovl_high_u8(v334), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v336)));
      uint16x8_t v338 = (uint16x8_t)vpaddq_s16(v335, v336);
      int32x4_t v339 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v338.i8);
      int32x4_t v340 = (int32x4_t)vmovl_high_u16(v338);
      int32x4_t v341 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v337.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v339)), (int32x4_t)vshlq_u32(vmovl_high_u16(v337), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v340)));
      int32x4_t v342 = vpaddq_s32(v339, v340);
      v343.i64[0] = v341.u32[0];
      v343.i64[1] = v341.u32[1];
      uint64x2_t v344 = (uint64x2_t)v343;
      v343.i64[0] = v341.u32[2];
      v343.i64[1] = v341.u32[3];
      uint64x2_t v345 = (uint64x2_t)v343;
      v343.i64[0] = v342.u32[0];
      v343.i64[1] = v342.u32[1];
      int64x2_t v346 = v343;
      v343.i64[0] = v342.u32[2];
      v343.i64[1] = v342.u32[3];
      int64x2_t v347 = vpaddq_s64((int64x2_t)vshlq_u64(v344, (uint64x2_t)vzip1q_s64((int64x2_t)0, v346)), (int64x2_t)vshlq_u64(v345, (uint64x2_t)vzip1q_s64((int64x2_t)0, v343)));
      int64x2_t v348 = vpaddq_s64(v346, v343);
      uint64_t v349 = (v293 + 76) & 0x3C;
      unint64_t v350 = (v347.i64[0] << v349) | v322;
      if ((unint64_t)(v348.i64[0] + v349) >= 0x40)
      {
        *(void *)((char *)v292 + ((v323 >> 3) & 0x18)) = v350;
        unint64_t v350 = (unint64_t)v347.i64[0] >> -(char)v349;
      }
      unint64_t v351 = v348.i64[0] + v323;
      unint64_t v352 = v350 | (v347.i64[1] << v351);
      if ((v351 & 0x3F) + v348.i64[1] >= 0x40)
      {
        *(void *)((char *)v292 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        unint64_t v352 = (unint64_t)v347.i64[1] >> -(v351 & 0x3F);
        if ((v351 & 0x3F) == 0) {
          unint64_t v352 = 0;
        }
      }
      unint64_t v353 = v351 + v348.i64[1];
      v354.i64[0] = 0x8000800080008;
      v354.i64[1] = 0x8000800080008;
      v355.i64[0] = -1;
      v355.i64[1] = -1;
      int16x8_t v356 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v565, v354), (int8x16_t)0, 8uLL), v570);
      v357.i64[0] = 0xF000F000F000FLL;
      v357.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v358 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v355, (uint16x8_t)vaddq_s16(v356, v357)), v573);
      int32x4_t v359 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v356.i8);
      int32x4_t v360 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v358.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v359)), (int32x4_t)vmovl_high_u16(v358));
      int32x4_t v361 = vpaddq_s32(v359, (int32x4_t)vmovl_high_u16((uint16x8_t)v356));
      v362.i64[0] = v360.u32[0];
      v362.i64[1] = v360.u32[1];
      uint64x2_t v363 = (uint64x2_t)v362;
      v362.i64[0] = v360.u32[2];
      v362.i64[1] = v360.u32[3];
      uint64x2_t v364 = (uint64x2_t)v362;
      v362.i64[0] = v361.u32[0];
      v362.i64[1] = v361.u32[1];
      int64x2_t v365 = v362;
      v362.i64[0] = v361.u32[2];
      v362.i64[1] = v361.u32[3];
      int64x2_t v366 = vpaddq_s64((int64x2_t)vshlq_u64(v363, (uint64x2_t)vzip1q_s64((int64x2_t)0, v365)), (int64x2_t)vshlq_u64(v364, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)));
      int64x2_t v367 = vpaddq_s64(v365, v362);
      unint64_t v368 = (v366.i64[0] << v353) | v352;
      if (v367.i64[0] + (v353 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v292 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v366.i64[0] >> -(v353 & 0x3F);
        if ((v353 & 0x3F) == 0) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v367.i64[0] + v353;
      unint64_t v370 = v368 | (v366.i64[1] << v369);
      if ((v369 & 0x3F) + v367.i64[1] >= 0x40)
      {
        *(void *)((char *)v292 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v370;
        unint64_t v370 = (unint64_t)v366.i64[1] >> -(v369 & 0x3F);
        if ((v369 & 0x3F) == 0) {
          unint64_t v370 = 0;
        }
      }
      unint64_t v371 = v369 + v367.i64[1];
      int16x8_t v372 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v566, 8uLL);
      v373.i64[0] = 0xF000F000F000FLL;
      v373.i64[1] = 0xF000F000F000FLL;
      v374.i64[0] = -1;
      v374.i64[1] = -1;
      uint16x8_t v375 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v374, (uint16x8_t)vaddq_s16(v372, v373)), v548);
      int32x4_t v376 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v372.i8);
      int32x4_t v377 = (int32x4_t)vmovl_high_u16((uint16x8_t)v372);
      int32x4_t v378 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v375.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v375), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)));
      int32x4_t v379 = vpaddq_s32(v376, v377);
      v380.i64[0] = v378.u32[0];
      v380.i64[1] = v378.u32[1];
      uint64x2_t v381 = (uint64x2_t)v380;
      v380.i64[0] = v378.u32[2];
      v380.i64[1] = v378.u32[3];
      uint64x2_t v382 = (uint64x2_t)v380;
      v380.i64[0] = v379.u32[0];
      v380.i64[1] = v379.u32[1];
      int64x2_t v383 = v380;
      v380.i64[0] = v379.u32[2];
      v380.i64[1] = v379.u32[3];
      int64x2_t v384 = vpaddq_s64((int64x2_t)vshlq_u64(v381, (uint64x2_t)vzip1q_s64((int64x2_t)0, v383)), (int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v380)));
      int64x2_t v385 = vpaddq_s64(v383, v380);
      unint64_t v386 = (v384.i64[0] << v371) | v370;
      if (v385.i64[0] + (v371 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v292 + ((v371 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v386;
        if ((v371 & 0x3F) != 0) {
          unint64_t v386 = (unint64_t)v384.i64[0] >> -(v371 & 0x3F);
        }
        else {
          unint64_t v386 = 0;
        }
      }
      unint64_t v387 = v385.i64[0] + v371;
      uint64_t v388 = (v385.i64[0] + v371) & 0x3F;
      unint64_t v389 = v386 | (v384.i64[1] << v387);
      if ((unint64_t)(v388 + v385.i64[1]) >= 0x40)
      {
        *(void *)((char *)v292 + ((v387 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
        unint64_t v389 = (unint64_t)v384.i64[1] >> -(char)v388;
        if (!v388) {
          unint64_t v389 = 0;
        }
      }
      unint64_t v390 = v387 + v385.i64[1];
      v391.i64[0] = 0xF000F000F000FLL;
      v391.i64[1] = 0xF000F000F000FLL;
      v392.i64[0] = -1;
      v392.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v394 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v392, (uint16x8_t)vaddq_s16(v566, v391)), *(int8x16_t *)((char *)&v548 + i));
        int32x4_t v395 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v566.i8);
        int32x4_t v396 = (int32x4_t)vmovl_high_u16((uint16x8_t)v566);
        int32x4_t v397 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v394.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v395)), (int32x4_t)vshlq_u32(vmovl_high_u16(v394), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v396)));
        int32x4_t v398 = vpaddq_s32(v395, v396);
        v399.i64[0] = v397.u32[0];
        v399.i64[1] = v397.u32[1];
        uint64x2_t v400 = (uint64x2_t)v399;
        v399.i64[0] = v397.u32[2];
        v399.i64[1] = v397.u32[3];
        uint64x2_t v401 = (uint64x2_t)v399;
        v399.i64[0] = v398.u32[0];
        v399.i64[1] = v398.u32[1];
        int64x2_t v402 = v399;
        v399.i64[0] = v398.u32[2];
        v399.i64[1] = v398.u32[3];
        int64x2_t v403 = vpaddq_s64((int64x2_t)vshlq_u64(v400, (uint64x2_t)vzip1q_s64((int64x2_t)0, v402)), (int64x2_t)vshlq_u64(v401, (uint64x2_t)vzip1q_s64((int64x2_t)0, v399)));
        int64x2_t v404 = vpaddq_s64(v402, v399);
        unint64_t v405 = (v403.i64[0] << v390) | v389;
        if (v404.i64[0] + (v390 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v292 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v405;
          unint64_t v405 = (unint64_t)v403.i64[0] >> -(v390 & 0x3F);
          if ((v390 & 0x3F) == 0) {
            unint64_t v405 = 0;
          }
        }
        unint64_t v406 = v404.i64[0] + v390;
        unint64_t v389 = v405 | (v403.i64[1] << v406);
        if ((v406 & 0x3F) + v404.i64[1] >= 0x40)
        {
          *(void *)((char *)v292 + ((v406 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
          unint64_t v389 = (unint64_t)v403.i64[1] >> -(v406 & 0x3F);
          if ((v406 & 0x3F) == 0) {
            unint64_t v389 = 0;
          }
        }
        unint64_t v390 = v406 + v404.i64[1];
      }
      uint64_t v407 = 0;
      v408.i64[0] = 0xF000F000F000FLL;
      v408.i64[1] = 0xF000F000F000FLL;
      v409.i64[0] = -1;
      v409.i64[1] = -1;
      do
      {
        uint16x8_t v410 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v409, (uint16x8_t)vaddq_s16(v567, v408)), *(int8x16_t *)((char *)&v552 + v407));
        int32x4_t v411 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v567.i8);
        int32x4_t v412 = (int32x4_t)vmovl_high_u16((uint16x8_t)v567);
        int32x4_t v413 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v410.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v411)), (int32x4_t)vshlq_u32(vmovl_high_u16(v410), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v412)));
        int32x4_t v414 = vpaddq_s32(v411, v412);
        v415.i64[0] = v413.u32[0];
        v415.i64[1] = v413.u32[1];
        uint64x2_t v416 = (uint64x2_t)v415;
        v415.i64[0] = v413.u32[2];
        v415.i64[1] = v413.u32[3];
        uint64x2_t v417 = (uint64x2_t)v415;
        v415.i64[0] = v414.u32[0];
        v415.i64[1] = v414.u32[1];
        int64x2_t v418 = v415;
        v415.i64[0] = v414.u32[2];
        v415.i64[1] = v414.u32[3];
        int64x2_t v419 = vpaddq_s64((int64x2_t)vshlq_u64(v416, (uint64x2_t)vzip1q_s64((int64x2_t)0, v418)), (int64x2_t)vshlq_u64(v417, (uint64x2_t)vzip1q_s64((int64x2_t)0, v415)));
        int64x2_t v420 = vpaddq_s64(v418, v415);
        unint64_t v421 = (v419.i64[0] << v390) | v389;
        if (v420.i64[0] + (v390 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v292 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v421;
          unint64_t v421 = (unint64_t)v419.i64[0] >> -(v390 & 0x3F);
          if ((v390 & 0x3F) == 0) {
            unint64_t v421 = 0;
          }
        }
        unint64_t v422 = v420.i64[0] + v390;
        unint64_t v389 = v421 | (v419.i64[1] << v422);
        if ((v422 & 0x3F) + v420.i64[1] >= 0x40)
        {
          *(void *)((char *)v292 + ((v422 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
          unint64_t v389 = (unint64_t)v419.i64[1] >> -(v422 & 0x3F);
          if ((v422 & 0x3F) == 0) {
            unint64_t v389 = 0;
          }
        }
        unint64_t v390 = v422 + v420.i64[1];
        v407 += 16;
      }
      while (v407 != 64);
      uint64_t v423 = 0;
      v424.i64[0] = 0xF000F000F000FLL;
      v424.i64[1] = 0xF000F000F000FLL;
      v425.i64[0] = -1;
      v425.i64[1] = -1;
      do
      {
        uint16x8_t v426 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v425, (uint16x8_t)vaddq_s16(v568, v424)), *(int8x16_t *)((char *)&v556 + v423));
        int32x4_t v427 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v568.i8);
        int32x4_t v428 = (int32x4_t)vmovl_high_u16((uint16x8_t)v568);
        int32x4_t v429 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v426.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v427)), (int32x4_t)vshlq_u32(vmovl_high_u16(v426), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v428)));
        int32x4_t v430 = vpaddq_s32(v427, v428);
        v431.i64[0] = v429.u32[0];
        v431.i64[1] = v429.u32[1];
        uint64x2_t v432 = (uint64x2_t)v431;
        v431.i64[0] = v429.u32[2];
        v431.i64[1] = v429.u32[3];
        uint64x2_t v433 = (uint64x2_t)v431;
        v431.i64[0] = v430.u32[0];
        v431.i64[1] = v430.u32[1];
        int64x2_t v434 = v431;
        v431.i64[0] = v430.u32[2];
        v431.i64[1] = v430.u32[3];
        int64x2_t v435 = vpaddq_s64((int64x2_t)vshlq_u64(v432, (uint64x2_t)vzip1q_s64((int64x2_t)0, v434)), (int64x2_t)vshlq_u64(v433, (uint64x2_t)vzip1q_s64((int64x2_t)0, v431)));
        int64x2_t v436 = vpaddq_s64(v434, v431);
        unint64_t v437 = (v435.i64[0] << v390) | v389;
        if (v436.i64[0] + (v390 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v292 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v437;
          unint64_t v437 = (unint64_t)v435.i64[0] >> -(v390 & 0x3F);
          if ((v390 & 0x3F) == 0) {
            unint64_t v437 = 0;
          }
        }
        unint64_t v438 = v436.i64[0] + v390;
        unint64_t v389 = v437 | (v435.i64[1] << v438);
        if ((v438 & 0x3F) + v436.i64[1] >= 0x40)
        {
          *(void *)((char *)v292 + ((v438 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
          unint64_t v389 = (unint64_t)v435.i64[1] >> -(v438 & 0x3F);
          if ((v438 & 0x3F) == 0) {
            unint64_t v389 = 0;
          }
        }
        unint64_t v390 = v438 + v436.i64[1];
        v423 += 16;
      }
      while (v423 != 64);
      uint64_t v439 = 0;
      v440.i64[0] = 0xF000F000F000FLL;
      v440.i64[1] = 0xF000F000F000FLL;
      v441.i64[0] = -1;
      v441.i64[1] = -1;
      do
      {
        uint16x8_t v442 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v441, (uint16x8_t)vaddq_s16(v569, v440)), *(int8x16_t *)((char *)&v560 + v439));
        int32x4_t v443 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v569.i8);
        int32x4_t v444 = (int32x4_t)vmovl_high_u16((uint16x8_t)v569);
        int32x4_t v445 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v442.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v443)), (int32x4_t)vshlq_u32(vmovl_high_u16(v442), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v444)));
        int32x4_t v446 = vpaddq_s32(v443, v444);
        v447.i64[0] = v445.u32[0];
        v447.i64[1] = v445.u32[1];
        uint64x2_t v448 = (uint64x2_t)v447;
        v447.i64[0] = v445.u32[2];
        v447.i64[1] = v445.u32[3];
        uint64x2_t v449 = (uint64x2_t)v447;
        v447.i64[0] = v446.u32[0];
        v447.i64[1] = v446.u32[1];
        int64x2_t v450 = v447;
        v447.i64[0] = v446.u32[2];
        v447.i64[1] = v446.u32[3];
        int64x2_t v451 = vpaddq_s64((int64x2_t)vshlq_u64(v448, (uint64x2_t)vzip1q_s64((int64x2_t)0, v450)), (int64x2_t)vshlq_u64(v449, (uint64x2_t)vzip1q_s64((int64x2_t)0, v447)));
        int64x2_t v452 = vpaddq_s64(v450, v447);
        unint64_t v453 = (v451.i64[0] << v390) | v389;
        if (v452.i64[0] + (v390 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v292 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v453;
          unint64_t v453 = (unint64_t)v451.i64[0] >> -(v390 & 0x3F);
          if ((v390 & 0x3F) == 0) {
            unint64_t v453 = 0;
          }
        }
        unint64_t v454 = v452.i64[0] + v390;
        unint64_t v389 = v453 | (v451.i64[1] << v454);
        if ((v454 & 0x3F) + v452.i64[1] >= 0x40)
        {
          *(void *)((char *)v292 + ((v454 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
          unint64_t v389 = (unint64_t)v451.i64[1] >> -(v454 & 0x3F);
          if ((v454 & 0x3F) == 0) {
            unint64_t v389 = 0;
          }
        }
        unint64_t v390 = v454 + v452.i64[1];
        v439 += 16;
      }
      while (v439 != 64);
      if ((v390 & 0x3F) != 0) {
        *(void *)((char *)v292 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
      }
      unint64_t result = (v390 - v293 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v295 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v296 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v295, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v295, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v296.i8 = vorr_s8(*(int8x8_t *)v296.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v296, v296, 8uLL));
    *(_DWORD *)a1 = v296.i32[0];
    *(unsigned char *)(a1 + 4) = v296.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4, int a5, int a6)
{
  uint64_t v9 = a3;
  int16x8_t v11 = (int16x8_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v12, v13);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  int16x8_t v14 = a4 + 1;
  if (a5 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 8;
  if (v16 >= 8) {
    int v17 = 8;
  }
  else {
    int v17 = v16;
  }
  if (v17 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 4, a2, v17, v13);
    v9 += result;
  }
  else
  {
    *int16x8_t v14 = 0;
  }
  uint64_t v18 = 4 * a2;
  int16x8_t v19 = a4 + 2;
  if (a6 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v12 && v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v19, (int16x8_t *)((char *)v11 + v18), a2, v12, v22);
    v9 += result;
    int16x8_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  else
  {
    *int16x8_t v19 = 0;
    int16x8_t v23 = a4 + 3;
    if (!v17) {
      goto LABEL_34;
    }
  }
  if (v22)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int16x8_t *)((char *)v11 + v18 + 64), a2, v17, v22);
    v9 += result;
    goto LABEL_35;
  }
LABEL_34:
  *int16x8_t v23 = 0;
LABEL_35:
  int16x8_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int16x8_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    v9 += result;
    int16x8_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  else
  {
    unsigned char *v24 = 0;
    int16x8_t v28 = a4 + 5;
    if (!v17) {
      goto LABEL_48;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int16x8_t *)((char *)v11 + 8 * a2 + 64), a2, v17, v27);
    v9 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v28 = 0;
LABEL_49:
  int16x8_t v29 = a4 + 6;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v29, (int16x8_t *)((char *)v11 + 12 * a2), a2, v12, v32);
    v9 += result;
    int16x8_t v33 = a4 + 7;
    if (!v17) {
      goto LABEL_64;
    }
  }
  else
  {
    *int16x8_t v29 = 0;
    int16x8_t v33 = a4 + 7;
    if (!v17)
    {
LABEL_64:
      unsigned char *v33 = 0;
      return result;
    }
  }
  if (!v32) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int16x8_t *)((char *)v11 + 12 * a2 + 64), a2, v17, v32);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  unsigned int v13 = (int16x8_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  unsigned int v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v16, v13 + 4, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *unsigned int v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  unsigned int v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v21, (int16x8_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    int v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *unsigned int v21 = 0;
    int v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v25, (int16x8_t *)((char *)v13 + v20 + 64), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *int v25 = 0;
LABEL_35:
  unsigned int v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v26, (int16x8_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    int v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *unsigned int v26 = 0;
    int v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v30, (int16x8_t *)((char *)v13 + 8 * a2 + 64), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int v30 = 0;
LABEL_49:
  unsigned int v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v31, (int16x8_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    int16x8_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *unsigned int v31 = 0;
    int16x8_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::compressSubblock(v11, v35, (int16x8_t *)((char *)v13 + 12 * a2 + 64), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)1>::decompressMacroblock(_OWORD *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1, 128, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 4, 128, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 32, 128, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 36, 128, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 64, 128, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 68, 128, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 96, 128, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)1>::decompressSubblock(a1 + 100, 128, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(unint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  unint64_t v7 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v9 = *v7;
  int16x8_t v10 = v7[1];
  int16x8_t v11 = v7[2];
  int16x8_t v12 = v7[3];
  unint64_t v8 = (int16x8_t *)((char *)v7 + a4);
  int16x8_t v13 = vshrq_n_s16(*a3, 6uLL);
  int16x8_t v14 = vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  int16x8_t v15 = vshrq_n_s16(a3[1], 6uLL);
  int16x8_t v16 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v17 = vshrq_n_s16(v9, 6uLL);
  int16x8_t v18 = vshrq_n_s16(*v8, 6uLL);
  int16x8_t v19 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v20 = vshrq_n_s16(v8[1], 6uLL);
  int16x8_t v21 = vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v22 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v23 = vshrq_n_s16(a3[3], 6uLL);
  int16x8_t v24 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v25 = vshrq_n_s16(v11, 6uLL);
  int16x8_t v26 = vshrq_n_s16(v8[2], 6uLL);
  int16x8_t v27 = vshrq_n_s16(v12, 6uLL);
  int16x8_t v28 = vshrq_n_s16(v8[3], 6uLL);
  int16x8_t v29 = (int16x8_t)vdupq_lane_s64(v13.i64[0], 0);
  v30.i64[0] = 0x5000500050005;
  v30.i64[1] = 0x5000500050005;
  int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v13, v29), 6uLL), v30);
  int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v14, v29), 6uLL), v30);
  int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v15, v29), 6uLL), v30);
  int8x16_t v472 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v16, v29), 6uLL), v30);
  int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v17, v29), 6uLL), v30);
  int8x16_t v474 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v29), 6uLL), v30);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v32 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  int16x8_t v35 = vzip1q_s16(v33, v34);
  int8x16_t v36 = (int8x16_t)vceqzq_s16(v35);
  int16x8_t v37 = vclsq_s16(v35);
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v38 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, v37), v36);
  int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v29), 6uLL), v30);
  int8x16_t v476 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v29), 6uLL), v30);
  int8x16_t v477 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v29), 6uLL), v30);
  int8x16_t v478 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v29), 6uLL), v30);
  v39.i64[0] = 0x8000800080008000;
  v39.i64[1] = 0x8000800080008000;
  int16x8_t v40 = vmaxq_s16(v33, v39);
  v41.i64[0] = 0x8000800080008000;
  v41.i64[1] = 0x8000800080008000;
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vmaxq_s16(v40, v44);
  int16x8_t v47 = vminq_s16(vminq_s16(v34, v41), v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int16x8_t v49 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v48)), (int8x16_t)vceqzq_s16(v48));
  int8x16_t v479 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v29), 6uLL), v30);
  int8x16_t v480 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v29), 6uLL), v30);
  int16x8_t v50 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v52 = vpmaxq_s16(v50, v50);
  int16x8_t v53 = vpminq_s16(v51, v51);
  int16x8_t v54 = vmaxq_s16(v46, v52);
  int16x8_t v55 = vminq_s16(v47, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int8x16_t v481 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v29), 6uLL), v30);
  int8x16_t v482 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v29), 6uLL), v30);
  int8x16_t v485 = (int8x16_t)v29;
  int8x16_t v483 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v29), 6uLL), v30);
  int8x16_t v484 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v28, v29), 6uLL), v30);
  int16x8_t v58 = vpmaxq_s16(v38, v38);
  int16x8_t v59 = vpmaxq_s16(v49, v49);
  int8x16_t v60 = (int8x16_t)vpmaxq_s16(v57, v57);
  int16x8_t v61 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v62 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v63 = vpmaxq_s16(v61, v61);
  int16x8_t v64 = vpminq_s16(v62, v62);
  int16x8_t v65 = vmaxq_s16(v54, v63);
  int16x8_t v66 = vminq_s16(v55, v64);
  int16x8_t v67 = vzip1q_s16(v63, v64);
  int16x8_t v68 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v67)), (int8x16_t)vceqzq_s16(v67));
  int16x8_t v69 = vpmaxq_s16(v68, v68);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(vmaxq_s16(v58, v59), vmaxq_s16((int16x8_t)v60, v69));
  int16x8_t v71 = vclzq_s16(vsubq_s16(v65, v66));
  v34.i64[0] = 0xF000F000F000FLL;
  v34.i64[1] = 0xF000F000F000FLL;
  v37.i64[0] = -1;
  v37.i64[1] = -1;
  int8x16_t v492 = (int8x16_t)v66;
  int8x16_t v493 = (int8x16_t)v65;
  int8x16_t v72 = (int8x16_t)vsubq_s16(v35, v71);
  int8x16_t v73 = (int8x16_t)vsubq_s16(vshlq_s16(v37, vsubq_s16(v34, v71)), v66);
  int8x16_t v74 = (int8x16_t)vcgtq_s16((int16x8_t)v70, (int16x8_t)v72);
  int16x8_t v75 = (int16x8_t)vbslq_s8(v74, v72, v70);
  int8x16_t v494 = vandq_s8(v73, v74);
  v73.i64[0] = 0x8000800080008;
  v73.i64[1] = 0x8000800080008;
  int8x16_t v76 = vorrq_s8((int8x16_t)0, vandq_s8(v74, v73));
  v70.i64[0] = 0x3000300030003;
  v70.i64[1] = 0x3000300030003;
  int16x8_t v77 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v59), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v78 = vmaxq_s16(vminq_s16(vsubq_s16(v75, (int16x8_t)v60), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v488 = vsubq_s16(v75, v77);
  int16x8_t v489 = vsubq_s16(v75, v78);
  int16x8_t v79 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v69), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v490 = vsubq_s16(v75, v79);
  int8x16_t v491 = (int8x16_t)v75;
  int16x8_t v80 = vaddq_s16(v79, v78);
  int16x8_t v81 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v58), (int16x8_t)v70), (int16x8_t)0);
  v60.i64[0] = 0x4000400040004;
  v60.i64[1] = 0x4000400040004;
  int8x16_t v82 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v75), v70), v76), vbicq_s8(v60, (int8x16_t)vceqq_s16(v80, vnegq_s16(vaddq_s16(v81, v77)))));
  int8x16_t v486 = v82;
  int16x8_t v487 = vsubq_s16(v75, v81);
  if (vmaxvq_s16(v75))
  {
    int16x8_t v467 = v20;
    int16x8_t v434 = v24;
    int16x8_t v435 = v28;
    int16x8_t v436 = v25;
    int16x8_t v437 = v26;
    int16x8_t v438 = v27;
    v439.val[0] = (int8x16_t)v13;
    v439.val[1] = (int8x16_t)v14;
    v439.val[2] = (int8x16_t)v15;
    v439.val[3] = (int8x16_t)v16;
    int8x16_t v465 = v76;
    int8x16_t v83 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v84 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v85 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v473, (int16x8_t)vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v86 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v474, (int16x8_t)vqtbl1q_s8(v474, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v87 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v475, (int16x8_t)vqtbl1q_s8(v475, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v88 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v476, (int16x8_t)vqtbl1q_s8(v476, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v89 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v477, (int16x8_t)vqtbl1q_s8(v477, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v90 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v478, (int16x8_t)vqtbl1q_s8(v478, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v91 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v479, (int16x8_t)vqtbl1q_s8(v479, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v480, (int16x8_t)vqtbl1q_s8(v480, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v93 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v481, (int16x8_t)vqtbl1q_s8(v481, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v482, (int16x8_t)vqtbl1q_s8(v482, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v483, (int16x8_t)vqtbl1q_s8(v483, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v96 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v484, (int16x8_t)vqtbl1q_s8(v484, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v444 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v472, (int16x8_t)vqtbl1q_s8(v472, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v445 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v471, (int16x8_t)vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v97 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v99 = vpmaxq_s16(v97, v97);
    int16x8_t v100 = vpminq_s16(v98, v98);
    v101.i64[0] = 0x8000800080008000;
    v101.i64[1] = 0x8000800080008000;
    int16x8_t v102 = vmaxq_s16(v99, v101);
    v103.i64[0] = 0x8000800080008000;
    v103.i64[1] = 0x8000800080008000;
    int16x8_t v104 = vminq_s16(v100, v103);
    int16x8_t v105 = vzip1q_s16(v99, v100);
    v106.i64[0] = 0x10001000100010;
    v106.i64[1] = 0x10001000100010;
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v105)), (int8x16_t)vceqzq_s16(v105));
    int8x16_t v108 = (int8x16_t)vpmaxq_s16(v107, v107);
    int8x16_t v451 = (int8x16_t)v87;
    int8x16_t v453 = (int8x16_t)v85;
    int8x16_t v448 = (int8x16_t)v88;
    int8x16_t v449 = (int8x16_t)v86;
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vmaxq_s16(v102, v111);
    int16x8_t v114 = vminq_s16(v104, v112);
    int16x8_t v115 = vzip1q_s16(v111, v112);
    v116.i64[0] = 0x10001000100010;
    v116.i64[1] = 0x10001000100010;
    int16x8_t v117 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v115)), (int8x16_t)vceqzq_s16(v115));
    int16x8_t v118 = vpmaxq_s16(v117, v117);
    int8x16_t v459 = (int8x16_t)v91;
    int8x16_t v461 = (int8x16_t)v89;
    int8x16_t v455 = (int8x16_t)v92;
    int8x16_t v457 = (int8x16_t)v90;
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v121 = vpmaxq_s16(v119, v119);
    int16x8_t v122 = vpminq_s16(v120, v120);
    int16x8_t v123 = vmaxq_s16(v113, v121);
    int16x8_t v124 = vminq_s16(v114, v122);
    int16x8_t v125 = vzip1q_s16(v121, v122);
    int16x8_t v126 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v125)), (int8x16_t)vceqzq_s16(v125));
    int16x8_t v127 = vpmaxq_s16(v126, v126);
    int8x16_t v463 = (int8x16_t)v96;
    int16x8_t v128 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v130 = vpmaxq_s16(v128, v128);
    int16x8_t v131 = vpminq_s16(v129, v129);
    int8x16_t v132 = (int8x16_t)vmaxq_s16(v123, v130);
    int16x8_t v133 = vminq_s16(v124, v131);
    int16x8_t v134 = vzip1q_s16(v130, v131);
    int16x8_t v135 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v134)), (int8x16_t)vceqzq_s16(v134));
    int16x8_t v136 = vpmaxq_s16(v135, v135);
    int8x16_t v137 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v108, v118), vmaxq_s16(v127, v136));
    int8x16_t v446 = (int8x16_t)v93;
    int8x16_t v447 = v132;
    int8x16_t v138 = (int8x16_t)v133;
    int16x8_t v139 = vclzq_s16(vsubq_s16((int16x8_t)v132, v133));
    int8x16_t v140 = (int8x16_t)vsubq_s16(v116, v139);
    int8x16_t v141 = (int8x16_t)vcgtq_s16((int16x8_t)v137, (int16x8_t)v140);
    int8x16_t v142 = vbslq_s8(v141, v140, v137);
    int16x8_t v143 = vsubq_s16((int16x8_t)v142, (int16x8_t)v108);
    v108.i64[0] = 0x3000300030003;
    v108.i64[1] = 0x3000300030003;
    int16x8_t v144 = vmaxq_s16(vminq_s16(v143, (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v145 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v118), (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v127), (int16x8_t)v108), (int16x8_t)0);
    v132.i64[0] = 0x3000300030003;
    v132.i64[1] = 0x3000300030003;
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v136), (int16x8_t)v108), (int16x8_t)0);
    v140.i64[0] = 0x4000400040004;
    v140.i64[1] = 0x4000400040004;
    int8x16_t v148 = vbicq_s8(v140, (int8x16_t)vceqq_s16(vaddq_s16(v147, v146), vnegq_s16(vaddq_s16(v144, v145))));
    v108.i64[0] = 0x18001800180018;
    v108.i64[1] = 0x18001800180018;
    int8x16_t v149 = vbslq_s8(v141, v108, (int8x16_t)v116);
    int8x16_t v441 = (int8x16_t)vsubq_s16((int16x8_t)v142, v145);
    int8x16_t v442 = (int8x16_t)vsubq_s16((int16x8_t)v142, v146);
    int8x16_t v443 = (int8x16_t)vsubq_s16((int16x8_t)v142, v147);
    v146.i64[0] = 0x7000700070007;
    v146.i64[1] = 0x7000700070007;
    int8x16_t v440 = (int8x16_t)vsubq_s16((int16x8_t)v142, v144);
    v108.i64[0] = 0x8000800080008;
    v108.i64[1] = 0x8000800080008;
    int16x8_t v150 = (int16x8_t)vandq_s8(v465, v108);
    int16x8_t v151 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v108);
    v140.i64[0] = 0x2000200020002;
    v140.i64[1] = 0x2000200020002;
    int16x8_t v152 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v132), (int16x8_t)v140), (int8x16_t)v116);
    int16x8_t v154 = v490;
    int8x16_t v153 = v491;
    int16x8_t v155 = v487;
    int16x8_t v156 = v488;
    int16x8_t v157 = vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16(v150)), v151), v152), v487, v146);
    int16x8_t v158 = v489;
    int8x16_t v159 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(v157, vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v142, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v149 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v148, (int16x8_t)v148)), (int16x8_t)v440, v146), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v442, (int16x8_t)v441), (int16x8_t)v443), 3uLL))).i64[0], 0);
    int v160 = (unsigned __int16)vaddvq_s16((int16x8_t)v159);
    BOOL v162 = a5 < 4 || a6 < 2;
    if (v160)
    {
      v163.i64[0] = 0x3000300030003;
      v163.i64[1] = 0x3000300030003;
      int8x16_t v164 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v142), v163), v149), v148);
      v165.i64[0] = 0xF000F000F000FLL;
      v165.i64[1] = 0xF000F000F000FLL;
      int8x16_t v469 = vbslq_s8(v159, v83, v469);
      int8x16_t v470 = vbslq_s8(v159, v84, v470);
      v163.i64[0] = -1;
      v163.i64[1] = -1;
      int8x16_t v471 = vbslq_s8(v159, v445, v471);
      int8x16_t v472 = vbslq_s8(v159, v444, v472);
      int8x16_t v473 = vbslq_s8(v159, v453, v473);
      int8x16_t v474 = vbslq_s8(v159, v449, v474);
      int8x16_t v475 = vbslq_s8(v159, v451, v475);
      int8x16_t v476 = vbslq_s8(v159, v448, v476);
      int8x16_t v477 = vbslq_s8(v159, v461, v477);
      int8x16_t v478 = vbslq_s8(v159, v457, v478);
      int8x16_t v479 = vbslq_s8(v159, v459, v479);
      int8x16_t v480 = vbslq_s8(v159, v455, v480);
      int8x16_t v481 = vbslq_s8(v159, v446, v481);
      int8x16_t v482 = vbslq_s8(v159, v94, v482);
      int8x16_t v483 = vbslq_s8(v159, v95, v483);
      int8x16_t v484 = vbslq_s8(v159, v463, v484);
      int16x8_t v155 = (int16x8_t)vbslq_s8(v159, v440, (int8x16_t)v487);
      int16x8_t v156 = (int16x8_t)vbslq_s8(v159, v441, (int8x16_t)v488);
      int16x8_t v487 = v155;
      int16x8_t v488 = v156;
      int16x8_t v158 = (int16x8_t)vbslq_s8(v159, v442, (int8x16_t)v489);
      int16x8_t v154 = (int16x8_t)vbslq_s8(v159, v443, (int8x16_t)v490);
      int16x8_t v489 = v158;
      int16x8_t v490 = v154;
      int8x16_t v493 = vbslq_s8(v159, v447, v493);
      int8x16_t v494 = vbslq_s8(v159, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v163, vsubq_s16(v165, v139)), (int16x8_t)v138), v141), v494);
      int8x16_t v153 = vbslq_s8(v159, v142, v491);
      int8x16_t v491 = v153;
      int8x16_t v492 = vbslq_s8(v159, v138, v492);
      int8x16_t v82 = vbslq_s8(v159, v164, v486);
      int8x16_t v485 = vbslq_s8(v159, (int8x16_t)vsubq_s16((int16x8_t)v485, (int16x8_t)vqtbl1q_s8(v485, (int8x16_t)xmmword_242EA77A0)), v485);
      int8x16_t v486 = v82;
    }
    if (!v162)
    {
      int16x8_t v166 = (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v167 = vsubq_s16((int16x8_t)v439.val[0], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7710));
      int16x8_t v168 = vsubq_s16((int16x8_t)v439.val[2], v166);
      int16x8_t v169 = vsubq_s16((int16x8_t)v439.val[3], v166);
      uint64_t v170 = v467.i64[0];
      uint64_t v171 = v439.val[3].i64[1];
      int16x8_t v172 = vsubq_s16(v17, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v173 = vsubq_s16(v18, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v174 = vsubq_s16(v19, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v175 = vsubq_s16(v467, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7760));
      uint64_t v176 = v434.i64[0];
      uint64_t v177 = v439.val[3].i64[1];
      int16x8_t v178 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v179 = vsubq_s16(v21, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v180 = vsubq_s16(v22, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v181 = vsubq_s16(v23, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v182 = vsubq_s16(v434, v178);
      v495.val[0] = (int8x16_t)v436;
      v495.val[1] = (int8x16_t)v437;
      v495.val[2] = (int8x16_t)v438;
      v495.val[3].i64[0] = v435.i64[0];
      v495.val[3].i64[1] = v439.val[3].i64[1];
      int16x8_t v183 = vsubq_s16(v436, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v184 = vsubq_s16(v437, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7780));
      int16x8_t v185 = vsubq_s16(v438, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7710));
      int16x8_t v186 = vsubq_s16(v435, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7720));
      v187.i64[1] = v167.i64[1];
      v187.i64[0] = v169.i64[1];
      v169.i64[1] = v167.i64[0];
      int16x8_t v188 = vshlq_n_s16(v169, 6uLL);
      int8x16_t v189 = (int8x16_t)vshlq_n_s16(v172, 6uLL);
      int16x8_t v190 = vshlq_n_s16(v173, 6uLL);
      int16x8_t v191 = vshlq_n_s16(v175, 6uLL);
      int16x8_t v192 = vshlq_n_s16(v179, 6uLL);
      v495.val[0] = (int8x16_t)vshlq_n_s16(v182, 6uLL);
      v495.val[1] = (int8x16_t)vshlq_n_s16(v184, 6uLL);
      v495.val[2].i64[0] = 0x5000500050005;
      v495.val[2].i64[1] = 0x5000500050005;
      int8x16_t v193 = (int8x16_t)vshlq_s16(vshlq_n_s16(v187, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v194 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v439.val[1], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v188, (int16x8_t)v495.val[2]);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v190, (int16x8_t)v495.val[2]);
      int16x8_t v197 = vshlq_s16(vshlq_n_s16(v174, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v198 = (int8x16_t)vshlq_s16(v191, (int16x8_t)v495.val[2]);
      int16x8_t v199 = vshlq_s16(v192, (int16x8_t)v495.val[2]);
      int8x16_t v200 = (int8x16_t)vshlq_s16(vshlq_n_s16(v180, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v201 = vshlq_s16(vshlq_n_s16(v181, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v202 = (int8x16_t)vshlq_s16((int16x8_t)v189, (int16x8_t)v495.val[2]);
      int8x16_t v203 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[0], (int16x8_t)v495.val[2]);
      v495.val[3] = (int8x16_t)vshlq_s16(vshlq_n_s16(v183, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v204 = (int8x16_t)vshlq_s16(vshlq_n_s16(v168, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v205 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[1], (int16x8_t)v495.val[2]);
      int16x8_t v206 = vshlq_s16(vshlq_n_s16(v185, 6uLL), (int16x8_t)v495.val[2]);
      v495.val[2] = (int8x16_t)vshlq_s16(vshlq_n_s16(v186, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v207 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v208 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v209 = vpmaxq_s16(v207, v207);
      int16x8_t v210 = vpminq_s16(v208, v208);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v211 = vmaxq_s16(v209, v186);
      v212.i64[0] = 0x8000800080008000;
      v212.i64[1] = 0x8000800080008000;
      int16x8_t v213 = vminq_s16(v210, v212);
      int16x8_t v214 = vzip1q_s16(v209, v210);
      v189.i64[0] = 0x10001000100010;
      v189.i64[1] = 0x10001000100010;
      int16x8_t v215 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v214)), (int8x16_t)vceqzq_s16(v214));
      int16x8_t v216 = vpmaxq_s16(v215, v215);
      int8x16_t v466 = (int8x16_t)v199;
      int8x16_t v468 = (int8x16_t)v197;
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v218 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v219 = vpmaxq_s16(v217, v217);
      int16x8_t v220 = vpminq_s16(v218, v218);
      int16x8_t v221 = vmaxq_s16(v211, v219);
      int16x8_t v222 = vminq_s16(v213, v220);
      int16x8_t v223 = vzip1q_s16(v219, v220);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int8x16_t v462 = v495.val[3];
      int8x16_t v464 = (int8x16_t)v201;
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int16x8_t v230 = vmaxq_s16(v221, v228);
      int16x8_t v231 = vminq_s16(v222, v229);
      int16x8_t v232 = vzip1q_s16(v228, v229);
      int16x8_t v233 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v232)), (int8x16_t)vceqzq_s16(v232));
      int16x8_t v234 = vpmaxq_s16(v233, v233);
      int8x16_t v458 = v495.val[2];
      int8x16_t v460 = (int8x16_t)v206;
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v237 = vpmaxq_s16(v235, v235);
      int16x8_t v238 = vpminq_s16(v236, v236);
      int16x8_t v239 = vmaxq_s16(v230, v237);
      int8x16_t v240 = (int8x16_t)vminq_s16(v231, v238);
      int16x8_t v241 = vzip1q_s16(v237, v238);
      int16x8_t v242 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v241)), (int8x16_t)vceqzq_s16(v241));
      int16x8_t v243 = vpmaxq_s16(v242, v242);
      int8x16_t v244 = (int8x16_t)vmaxq_s16(vmaxq_s16(v216, v225), vmaxq_s16(v234, v243));
      int8x16_t v456 = (int8x16_t)v239;
      int16x8_t v245 = vclzq_s16(vsubq_s16(v239, (int16x8_t)v240));
      int8x16_t v246 = (int8x16_t)vsubq_s16((int16x8_t)v189, v245);
      int8x16_t v247 = (int8x16_t)vcgtq_s16((int16x8_t)v244, (int16x8_t)v246);
      int8x16_t v248 = vbslq_s8(v247, v246, v244);
      v244.i64[0] = 0x3000300030003;
      v244.i64[1] = 0x3000300030003;
      int16x8_t v249 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v216), (int16x8_t)v244), (int16x8_t)0);
      int8x16_t v250 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v225), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v251 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v234), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v252 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v243), (int16x8_t)v244), (int16x8_t)0);
      v495.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v248, v249);
      int8x16_t v253 = (int8x16_t)vsubq_s16((int16x8_t)v248, (int16x8_t)v250);
      int16x8_t v254 = vsubq_s16((int16x8_t)v248, v251);
      v495.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v248, v252);
      int8x16_t v255 = (int8x16_t)vceqq_s16(vaddq_s16(v252, v251), vnegq_s16(vaddq_s16(v249, (int16x8_t)v250)));
      v250.i64[0] = 0x4000400040004;
      v250.i64[1] = 0x4000400040004;
      int8x16_t v256 = vbicq_s8(v250, v255);
      v252.i64[0] = 0x7000700070007;
      v252.i64[1] = 0x7000700070007;
      int8x16_t v450 = (int8x16_t)v254;
      int8x16_t v452 = v495.val[3];
      int8x16_t v454 = v495.val[2];
      int16x8_t v257 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v246, v247), vaddq_s16((int16x8_t)v256, (int16x8_t)v256)), (int16x8_t)v495.val[3], v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v254, (int16x8_t)v253), (int16x8_t)v495.val[2]), 3uLL));
      int8x16_t v82 = v486;
      int16x8_t v155 = v487;
      v258.i64[0] = 0x2000200020002;
      v258.i64[1] = 0x2000200020002;
      int16x8_t v259 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v486, v244), (int16x8_t)v258), v189);
      v244.i64[0] = 0x8000800080008;
      v244.i64[1] = 0x8000800080008;
      int16x8_t v154 = v490;
      int8x16_t v153 = v491;
      int16x8_t v156 = v488;
      int16x8_t v158 = v489;
      int8x16_t v260 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v486, v244))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v244)), v259), v487, v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), v257).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v260))
      {
        v261.i64[0] = 0x9000900090009;
        v261.i64[1] = 0x9000900090009;
        int8x16_t v262 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v248), v258), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v247, v261), (int16x8_t)vmvnq_s8(v247)));
        v261.i64[0] = -1;
        v261.i64[1] = -1;
        v263.i64[0] = 0xF000F000F000FLL;
        v263.i64[1] = 0xF000F000F000FLL;
        int16x8_t v155 = (int16x8_t)vbslq_s8(v260, v452, (int8x16_t)v487);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v260, v253, (int8x16_t)v488);
        int16x8_t v158 = (int16x8_t)vbslq_s8(v260, v450, (int8x16_t)v489);
        int16x8_t v154 = (int16x8_t)vbslq_s8(v260, v454, (int8x16_t)v490);
        int8x16_t v153 = vbslq_s8(v260, v248, v491);
        int8x16_t v82 = vbslq_s8(v260, vorrq_s8(v262, v256), v486);
        int8x16_t v484 = vbslq_s8(v260, v458, v484);
        int8x16_t v485 = vbslq_s8(v260, vextq_s8(v439.val[3], v439.val[3], 8uLL), v485);
        int8x16_t v469 = vbslq_s8(v260, v193, v469);
        int8x16_t v470 = vbslq_s8(v260, v194, v470);
        int8x16_t v471 = vbslq_s8(v260, v204, v471);
        int8x16_t v472 = vbslq_s8(v260, v195, v472);
        int8x16_t v473 = vbslq_s8(v260, v202, v473);
        int8x16_t v474 = vbslq_s8(v260, v196, v474);
        int8x16_t v475 = vbslq_s8(v260, v468, v475);
        int8x16_t v476 = vbslq_s8(v260, v198, v476);
        int8x16_t v477 = vbslq_s8(v260, v466, v477);
        int8x16_t v478 = vbslq_s8(v260, v200, v478);
        int8x16_t v479 = vbslq_s8(v260, v464, v479);
        int8x16_t v480 = vbslq_s8(v260, v203, v480);
        int8x16_t v481 = vbslq_s8(v260, v462, v481);
        int8x16_t v482 = vbslq_s8(v260, v205, v482);
        int8x16_t v483 = vbslq_s8(v260, v460, v483);
        int8x16_t v492 = vbslq_s8(v260, v240, v492);
        int8x16_t v493 = vbslq_s8(v260, v456, v493);
        int8x16_t v494 = vbslq_s8(v260, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v261, vsubq_s16(v263, v245)), (int16x8_t)v240), v247), v494);
        int16x8_t v487 = v155;
        int16x8_t v488 = v156;
        int16x8_t v489 = v158;
        int16x8_t v490 = v154;
        int8x16_t v491 = v153;
        int8x16_t v486 = v82;
      }
    }
    int16x8_t v264 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v155));
    int8x16_t v469 = (int8x16_t)vaddq_s16(v264, (int16x8_t)v469);
    int8x16_t v470 = (int8x16_t)vaddq_s16((int16x8_t)v470, v264);
    int8x16_t v471 = (int8x16_t)vaddq_s16((int16x8_t)v471, v264);
    int8x16_t v472 = (int8x16_t)vaddq_s16((int16x8_t)v472, v264);
    int16x8_t v265 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v156));
    int8x16_t v473 = (int8x16_t)vaddq_s16((int16x8_t)v473, v265);
    int8x16_t v474 = (int8x16_t)vaddq_s16((int16x8_t)v474, v265);
    int8x16_t v475 = (int8x16_t)vaddq_s16((int16x8_t)v475, v265);
    int8x16_t v476 = (int8x16_t)vaddq_s16((int16x8_t)v476, v265);
    int16x8_t v266 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v158));
    int8x16_t v477 = (int8x16_t)vaddq_s16((int16x8_t)v477, v266);
    int8x16_t v478 = (int8x16_t)vaddq_s16((int16x8_t)v478, v266);
    int8x16_t v479 = (int8x16_t)vaddq_s16((int16x8_t)v479, v266);
    int8x16_t v480 = (int8x16_t)vaddq_s16((int16x8_t)v480, v266);
    int8x16_t v267 = vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v154));
    int8x16_t v481 = (int8x16_t)vaddq_s16((int16x8_t)v481, (int16x8_t)v267);
    int8x16_t v482 = (int8x16_t)vaddq_s16((int16x8_t)v482, (int16x8_t)v267);
    int8x16_t v483 = (int8x16_t)vaddq_s16((int16x8_t)v483, (int16x8_t)v267);
    int8x16_t v484 = (int8x16_t)vaddq_s16((int16x8_t)v484, (int16x8_t)v267);
    v267.i64[0] = 0x8000800080008;
    v267.i64[1] = 0x8000800080008;
    v268.i64[0] = 0x3000300030003;
    v268.i64[1] = 0x3000300030003;
    v269.i64[0] = 0x2000200020002;
    v269.i64[1] = 0x2000200020002;
    int8x16_t v270 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v268), v269);
    v269.i64[0] = 0x10001000100010;
    v269.i64[1] = 0x10001000100010;
    int16x8_t v271 = (int16x8_t)vandq_s8(v270, (int8x16_t)v269);
    v269.i64[0] = 0x7000700070007;
    v269.i64[1] = 0x7000700070007;
    int16x8_t v272 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v153, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v82, v267))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v267)), v271), v155, v269), vshlq_n_s16(vaddq_s16(v158, vaddq_s16(v156, v154)), 3uLL));
    int16x8_t v273 = vpaddq_s16(v272, v272);
    if ((unint64_t)(vpaddq_s16(v273, v273).i16[0] - 693) < 0xFFFFFFFFFFFFFCF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(a1, a2, (uint64x2_t *)a3, a4, a5, a6, a7);
      return 96;
    }
    else
    {
      int8x16_t v274 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v275 = 8 * (a1 & 7);
      if (v275) {
        uint64_t v276 = *v274 & ~(-1 << v275);
      }
      else {
        uint64_t v276 = 0;
      }
      *a2 = 0;
      uint64_t v280 = ((v153.u16[0] << 20) - 0x100000) & 0xF00000;
      v281.i32[0] = v82.u16[1];
      v281.i32[1] = v82.u16[2];
      int8x8_t v282 = vand_s8((int8x8_t)vshl_u32(v281, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v283 = v282.i32[1];
      __int32 v284 = v282.i32[0] | v82.i8[0] & 0x1F;
      if (!v153.i16[0]) {
        uint64_t v280 = 0;
      }
      unint64_t v285 = (unint64_t)((v153.i8[4] - 1) & 0xF) << 28;
      if (!v153.i16[2]) {
        unint64_t v285 = 0;
      }
      v286.i32[0] = v153.u16[3];
      v286.i32[1] = v153.u16[1];
      int32x2_t v287 = vceqz_s32((int32x2_t)vand_s8(v286, (int8x8_t)0xFFFF0000FFFFLL));
      v288.i64[0] = v287.i32[0];
      v288.i64[1] = v287.i32[1];
      int8x16_t v289 = (int8x16_t)v288;
      int8x8_t v290 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v286, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v288.i64[0] = v290.u32[0];
      v288.i64[1] = v290.u32[1];
      int8x16_t v291 = vbicq_s8((int8x16_t)vshlq_u64(v288, (uint64x2_t)xmmword_242EA77F0), v289);
      v289.i64[0] = v285;
      v289.i64[1] = v284 | v283 | ((unint64_t)(v82.i8[6] & 0x1F) << 15) | v280;
      int8x16_t v292 = vorrq_s8(v289, v291);
      uint64_t v293 = v485.i64[0];
      unint64_t v294 = vorrq_s8(v292, (int8x16_t)vdupq_laneq_s64((int64x2_t)v292, 1)).u64[0];
      unint64_t v295 = (v294 << v275) | v276;
      if (v275 >= 0x1C)
      {
        *int8x16_t v274 = v295;
        unint64_t v295 = v294 >> (-8 * (a1 & 7u));
      }
      v296.i64[0] = WORD1(v293);
      v296.i64[1] = WORD2(v293);
      v297.i64[0] = 0xFFFFLL;
      v297.i64[1] = 0xFFFFLL;
      int8x16_t v298 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v296, v297), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v299 = v298.i64[0] | v293 & 0x3FF | v298.i64[1] | ((unint64_t)(HIWORD(v293) & 0x3FF) << 30);
      unint64_t v300 = (v275 + 36) & 0x3C;
      unint64_t v301 = v295 | (v299 << v300);
      if (v300 >= 0x18)
      {
        *(void *)((char *)v274 + (((v275 + 36) >> 3) & 8)) = v301;
        unint64_t v301 = v299 >> -(char)v300;
      }
      unint64_t v302 = v275 + 76;
      int8x16_t v303 = (int8x16_t)vsubq_s16((int16x8_t)v491, v487);
      int8x16_t v304 = (int8x16_t)vsubq_s16((int16x8_t)v491, v488);
      int8x16_t v305 = (int8x16_t)vsubq_s16((int16x8_t)v491, v489);
      int8x16_t v306 = (int8x16_t)vsubq_s16((int16x8_t)v491, v490);
      *(uint8x8_t *)v303.i8 = vqmovn_u16((uint16x8_t)v303);
      *(uint8x8_t *)v304.i8 = vqmovn_u16((uint16x8_t)v304);
      *(uint8x8_t *)v305.i8 = vqmovn_u16((uint16x8_t)v305);
      *(uint8x8_t *)v306.i8 = vqmovn_u16((uint16x8_t)v306);
      int16x8_t v307 = (int16x8_t)vtrn1q_s8(v303, v304);
      int16x8_t v308 = (int16x8_t)vtrn2q_s8(v303, v304);
      int8x16_t v309 = vtrn1q_s8(v305, v306);
      int16x8_t v310 = (int16x8_t)vtrn2q_s8(v305, v306);
      int8x16_t v311 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v307, (int16x8_t)v309), (int32x4_t)vzip1q_s16(v308, v310)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v307, (int16x8_t)v309), (int32x4_t)vtrn2q_s16(v308, v310)));
      v309.i64[0] = 0x202020202020202;
      v309.i64[1] = 0x202020202020202;
      int8x16_t v312 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v486.i8, (int16x4_t)0x4000400040004)), v309);
      v309.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v309.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v305.i64[0] = -1;
      v305.i64[1] = -1;
      uint8x16_t v313 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v305, (uint8x16_t)vorrq_s8(v312, v309)), v311);
      int16x8_t v314 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v312.i8);
      int16x8_t v315 = (int16x8_t)vmovl_high_u8((uint8x16_t)v312);
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v313.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)), (int16x8_t)vshlq_u16(vmovl_high_u8(v313), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v315)));
      uint16x8_t v317 = (uint16x8_t)vpaddq_s16(v314, v315);
      int32x4_t v318 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v317.i8);
      int32x4_t v319 = (int32x4_t)vmovl_high_u16(v317);
      int32x4_t v320 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v319)));
      int32x4_t v321 = vpaddq_s32(v318, v319);
      v322.i64[0] = v320.u32[0];
      v322.i64[1] = v320.u32[1];
      uint64x2_t v323 = (uint64x2_t)v322;
      v322.i64[0] = v320.u32[2];
      v322.i64[1] = v320.u32[3];
      uint64x2_t v324 = (uint64x2_t)v322;
      v322.i64[0] = v321.u32[0];
      v322.i64[1] = v321.u32[1];
      int64x2_t v325 = v322;
      v322.i64[0] = v321.u32[2];
      v322.i64[1] = v321.u32[3];
      int64x2_t v326 = vpaddq_s64((int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)), (int64x2_t)vshlq_u64(v324, (uint64x2_t)vzip1q_s64((int64x2_t)0, v322)));
      int64x2_t v327 = vpaddq_s64(v325, v322);
      uint64_t v328 = (v275 + 76) & 0x3C;
      unint64_t v329 = (v326.i64[0] << v328) | v301;
      if ((unint64_t)(v327.i64[0] + v328) >= 0x40)
      {
        *(void *)((char *)v274 + ((v302 >> 3) & 0x18)) = v329;
        unint64_t v329 = (unint64_t)v326.i64[0] >> -(char)v328;
      }
      unint64_t v330 = v327.i64[0] + v302;
      unint64_t v331 = v329 | (v326.i64[1] << v330);
      if ((v330 & 0x3F) + v327.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v326.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      unint64_t v332 = v330 + v327.i64[1];
      v333.i64[0] = 0x8000800080008;
      v333.i64[1] = 0x8000800080008;
      v334.i64[0] = -1;
      v334.i64[1] = -1;
      int16x8_t v335 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v486, v333), (int8x16_t)0, 8uLL), v491);
      v336.i64[0] = 0xF000F000F000FLL;
      v336.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v337 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v334, (uint16x8_t)vaddq_s16(v335, v336)), v494);
      int32x4_t v338 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v335.i8);
      int32x4_t v339 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v337.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v338)), (int32x4_t)vmovl_high_u16(v337));
      int32x4_t v340 = vpaddq_s32(v338, (int32x4_t)vmovl_high_u16((uint16x8_t)v335));
      v341.i64[0] = v339.u32[0];
      v341.i64[1] = v339.u32[1];
      uint64x2_t v342 = (uint64x2_t)v341;
      v341.i64[0] = v339.u32[2];
      v341.i64[1] = v339.u32[3];
      uint64x2_t v343 = (uint64x2_t)v341;
      v341.i64[0] = v340.u32[0];
      v341.i64[1] = v340.u32[1];
      int64x2_t v344 = v341;
      v341.i64[0] = v340.u32[2];
      v341.i64[1] = v340.u32[3];
      int64x2_t v345 = vpaddq_s64((int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)), (int64x2_t)vshlq_u64(v343, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)));
      int64x2_t v346 = vpaddq_s64(v344, v341);
      unint64_t v347 = (v345.i64[0] << v332) | v331;
      if (v346.i64[0] + (v332 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v345.i64[0] >> -(v332 & 0x3F);
        if ((v332 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346.i64[0] + v332;
      unint64_t v349 = v347 | (v345.i64[1] << v348);
      if ((v348 & 0x3F) + v346.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v345.i64[1] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348 + v346.i64[1];
      int16x8_t v351 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v487, 8uLL);
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      v353.i64[0] = -1;
      v353.i64[1] = -1;
      uint16x8_t v354 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v353, (uint16x8_t)vaddq_s16(v351, v352)), v469);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16((uint16x8_t)v351);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v354), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v350) | v349;
      if (v364.i64[0] + (v350 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        if ((v350 & 0x3F) != 0) {
          unint64_t v365 = (unint64_t)v363.i64[0] >> -(v350 & 0x3F);
        }
        else {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364.i64[0] + v350;
      uint64_t v367 = (v364.i64[0] + v350) & 0x3F;
      unint64_t v368 = v365 | (v363.i64[1] << v366);
      if ((unint64_t)(v367 + v364.i64[1]) >= 0x40)
      {
        *(void *)((char *)v274 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v363.i64[1] >> -(char)v367;
        if (!v367) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v366 + v364.i64[1];
      v370.i64[0] = 0xF000F000F000FLL;
      v370.i64[1] = 0xF000F000F000FLL;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v373 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v371, (uint16x8_t)vaddq_s16(v487, v370)), *(int8x16_t *)((char *)&v469 + i));
        int32x4_t v374 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v487.i8);
        int32x4_t v375 = (int32x4_t)vmovl_high_u16((uint16x8_t)v487);
        int32x4_t v376 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v374)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)));
        int32x4_t v377 = vpaddq_s32(v374, v375);
        v378.i64[0] = v376.u32[0];
        v378.i64[1] = v376.u32[1];
        uint64x2_t v379 = (uint64x2_t)v378;
        v378.i64[0] = v376.u32[2];
        v378.i64[1] = v376.u32[3];
        uint64x2_t v380 = (uint64x2_t)v378;
        v378.i64[0] = v377.u32[0];
        v378.i64[1] = v377.u32[1];
        int64x2_t v381 = v378;
        v378.i64[0] = v377.u32[2];
        v378.i64[1] = v377.u32[3];
        int64x2_t v382 = vpaddq_s64((int64x2_t)vshlq_u64(v379, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)), (int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)));
        int64x2_t v383 = vpaddq_s64(v381, v378);
        unint64_t v384 = (v382.i64[0] << v369) | v368;
        if (v383.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v382.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v383.i64[0] + v369;
        unint64_t v368 = v384 | (v382.i64[1] << v385);
        if ((v385 & 0x3F) + v383.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v382.i64[1] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v385 + v383.i64[1];
      }
      uint64_t v386 = 0;
      v387.i64[0] = 0xF000F000F000FLL;
      v387.i64[1] = 0xF000F000F000FLL;
      v388.i64[0] = -1;
      v388.i64[1] = -1;
      do
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v388, (uint16x8_t)vaddq_s16(v488, v387)), *(int8x16_t *)((char *)&v473 + v386));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v488.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v488);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v369) | v368;
        if (v399.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v369;
        unint64_t v368 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v401 + v399.i64[1];
        v386 += 16;
      }
      while (v386 != 64);
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v489, v403)), *(int8x16_t *)((char *)&v477 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v489.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v489);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v369) | v368;
        if (v415.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v369;
        unint64_t v368 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      uint64_t v418 = 0;
      v419.i64[0] = 0xF000F000F000FLL;
      v419.i64[1] = 0xF000F000F000FLL;
      v420.i64[0] = -1;
      v420.i64[1] = -1;
      do
      {
        uint16x8_t v421 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v420, (uint16x8_t)vaddq_s16(v490, v419)), *(int8x16_t *)((char *)&v481 + v418));
        int32x4_t v422 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v490.i8);
        int32x4_t v423 = (int32x4_t)vmovl_high_u16((uint16x8_t)v490);
        int32x4_t v424 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v421.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v422)), (int32x4_t)vshlq_u32(vmovl_high_u16(v421), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v423)));
        int32x4_t v425 = vpaddq_s32(v422, v423);
        v426.i64[0] = v424.u32[0];
        v426.i64[1] = v424.u32[1];
        uint64x2_t v427 = (uint64x2_t)v426;
        v426.i64[0] = v424.u32[2];
        v426.i64[1] = v424.u32[3];
        uint64x2_t v428 = (uint64x2_t)v426;
        v426.i64[0] = v425.u32[0];
        v426.i64[1] = v425.u32[1];
        int64x2_t v429 = v426;
        v426.i64[0] = v425.u32[2];
        v426.i64[1] = v425.u32[3];
        int64x2_t v430 = vpaddq_s64((int64x2_t)vshlq_u64(v427, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)), (int64x2_t)vshlq_u64(v428, (uint64x2_t)vzip1q_s64((int64x2_t)0, v426)));
        int64x2_t v431 = vpaddq_s64(v429, v426);
        unint64_t v432 = (v430.i64[0] << v369) | v368;
        if (v431.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v432;
          unint64_t v432 = (unint64_t)v430.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v432 = 0;
          }
        }
        unint64_t v433 = v431.i64[0] + v369;
        unint64_t v368 = v432 | (v430.i64[1] << v433);
        if ((v433 & 0x3F) + v431.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v433 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v430.i64[1] >> -(v433 & 0x3F);
          if ((v433 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v433 + v431.i64[1];
        v418 += 16;
      }
      while (v418 != 64);
      if ((v369 & 0x3F) != 0) {
        *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
      }
      unint64_t result = (v369 - v275 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v277 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v278 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v278.i8 = vorr_s8(*(int8x8_t *)v278.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL));
    *(_DWORD *)a1 = v278.i32[0];
    *(unsigned char *)(a1 + 4) = v278.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  long long v76 = 0u;
  long long v77 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  uint64_t v10 = a6;
  long long v66 = 0u;
  long long v67 = 0u;
  if (a5 > 3)
  {
    uint64_t v13 = a5 & 0xFC;
    if (a5 == v13)
    {
      uint64_t v14 = 0;
      int16x8_t v15 = a3 + 1;
      int16x8_t v16 = &v70;
      v17.i64[0] = 0xFC00FC00FC00FC00;
      v17.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        int16x8_t v18 = v16;
        int16x8_t v19 = v15;
        uint64_t v20 = a5;
        do
        {
          int8x16_t v21 = vandq_s8((int8x16_t)vshrq_n_u64(v19[-1], 6uLL), v17);
          int8x16_t v22 = vandq_s8((int8x16_t)vshrq_n_u64(*v19, 6uLL), v17);
          int16x8_t v23 = v18 + 2;
          *((void *)v18 - 8) = v21.i64[0];
          *((void *)v18 - 4) = v21.i64[1];
          *(void *)int16x8_t v18 = v22.i64[0];
          v18 += 8;
          *int16x8_t v23 = v22.i64[1];
          v19 += 2;
          v20 -= 4;
        }
        while (v20);
        ++v14;
        int16x8_t v15 = (uint64x2_t *)((char *)v15 + a4);
        int16x8_t v16 = (long long *)((char *)v16 + 8);
      }
      while (v14 != a6);
    }
    else
    {
      uint64_t v24 = 0;
      int16x8_t v25 = a3 + 1;
      int16x8_t v26 = &v70;
      int16x8_t v27 = (uint64_t *)((char *)&v66 + ((32 * a5) & 0x1F80));
      v28.i64[0] = 0xFC00FC00FC00FC00;
      v28.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        int16x8_t v29 = v26;
        int16x8_t v30 = v25;
        uint64_t v31 = a5 & 0xFC;
        do
        {
          int8x16_t v32 = vandq_s8((int8x16_t)vshrq_n_u64(v30[-1], 6uLL), v28);
          int8x16_t v33 = vandq_s8((int8x16_t)vshrq_n_u64(*v30, 6uLL), v28);
          int16x8_t v34 = v29 + 2;
          *((void *)v29 - 8) = v32.i64[0];
          *((void *)v29 - 4) = v32.i64[1];
          *(void *)int16x8_t v29 = v33.i64[0];
          v29 += 8;
          *int16x8_t v34 = v33.i64[1];
          v30 += 2;
          v31 -= 4;
        }
        while (v31);
        int16x8_t v35 = (unint64_t *)((char *)a3 + 8 * v13 + v24 * a4);
        int8x16_t v36 = v27;
        uint64_t v37 = a5 - v13;
        do
        {
          unint64_t v38 = *v35++;
          uint64_t *v36 = (v38 >> 6) & 0x3FF03FF03FF03FFLL;
          v36 += 4;
          --v37;
        }
        while (v37);
        ++v24;
        int16x8_t v25 = (uint64x2_t *)((char *)v25 + a4);
        int16x8_t v26 = (long long *)((char *)v26 + 8);
        ++v27;
      }
      while (v24 != v10);
    }
  }
  else
  {
    int16x8_t v11 = a3 + 1;
    int16x8_t v12 = (uint64_t *)&v68;
    do
    {
      *(v12 - 4) = ((unint64_t)v11[-1].i64[0] >> 6) & 0x3FF03FF03FF03FFLL;
      if (a5 != 1)
      {
        *int16x8_t v12 = ((unint64_t)v11[-1].i64[1] >> 6) & 0x3FF03FF03FF03FFLL;
        if (a5 != 2) {
          v12[4] = ((unint64_t)v11->i64[0] >> 6) & 0x3FF03FF03FF03FFLL;
        }
      }
      int16x8_t v11 = (uint64x2_t *)((char *)v11 + a4);
      ++v12;
      --v10;
    }
    while (v10);
  }
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v66);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v68);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v66 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v68 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v70);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v72);
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)((char *)&v70 + 8));
  uint32x4_t v40 = vmovl_u16(*(uint16x4_t *)((char *)&v72 + 8));
  if (a5 >= 4) {
    unsigned int v41 = 4;
  }
  else {
    unsigned int v41 = a5;
  }
  if (a5 >= 4) {
    unsigned int v42 = a5 - 4;
  }
  else {
    unsigned int v42 = 0;
  }
  if (a6 >= 2) {
    unsigned int v43 = 2;
  }
  else {
    unsigned int v43 = a6;
  }
  uint32x4_t v64 = v39;
  uint32x4_t v65 = v40;
  if (a6 >= 2) {
    unsigned int v44 = a6 - 2;
  }
  else {
    unsigned int v44 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v58, a7, v41, v43);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v67);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v69);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v67 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v69 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v71);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v73);
  uint32x4_t v64 = vmovl_u16(*(uint16x4_t *)((char *)&v71 + 8));
  uint32x4_t v65 = vmovl_u16(*(uint16x4_t *)((char *)&v73 + 8));
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v44;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v58, a7, v41, v47);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v74);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v76);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v74 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v76 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v78);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v80);
  uint32x4_t v49 = vmovl_u16(*(uint16x4_t *)((char *)&v78 + 8));
  uint32x4_t v50 = vmovl_u16(*(uint16x4_t *)((char *)&v80 + 8));
  if (a5 >= 8) {
    unsigned int v51 = 4;
  }
  else {
    unsigned int v51 = v42;
  }
  uint32x4_t v64 = v49;
  uint32x4_t v65 = v50;
  int v52 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v58, a7, v51, v43);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v75);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v77);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v75 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v77 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v79);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v81);
  uint32x4_t v64 = vmovl_u16(*(uint16x4_t *)((char *)&v79 + 8));
  uint32x4_t v65 = vmovl_u16(*(uint16x4_t *)((char *)&v81 + 8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(a1 + 72, (uint64_t)&v58, a7, v51, v47);
  if (v52) {
    char v54 = 4;
  }
  else {
    char v54 = 0;
  }
  if (v48) {
    char v55 = 2;
  }
  else {
    char v55 = 0;
  }
  if (result) {
    char v56 = -8;
  }
  else {
    char v56 = -16;
  }
  *a2 = v56 | v54 | v46 | v55;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v331 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v300 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v299 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v298 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v297 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v295 = v9;
  BOOL v296 = v14;
  BOOL v15 = a4 < 2 || a5 == 0;
  do
  {
    *(unsigned int *)((char *)&v327 + v8 * 4) = 10;
    v315[v8] = 1;
    *(_DWORD *)((char *)&v314[2] + v8 * 4) = 512;
    int16x8_t v23 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      int16x8_t v25 = &v317[v8];
      if ((*v23 ^ 0x200) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = *v23 ^ 0x200;
      }
      *int16x8_t v25 = v24;
      if ((v23[4] ^ 0x200) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v23[4] ^ 0x200;
      }
      v25[4] = v26;
      if ((v23[8] ^ 0x200) == 1) {
        unsigned int v27 = 0;
      }
      else {
        unsigned int v27 = v23[8] ^ 0x200;
      }
      v25[8] = v27;
      if ((v23[12] ^ 0x200) == 1) {
        unsigned int v28 = 0;
      }
      else {
        unsigned int v28 = v23[12] ^ 0x200;
      }
      v25[12] = v28;
      if ((v23[16] ^ 0x200) == 1) {
        unsigned int v29 = 0;
      }
      else {
        unsigned int v29 = v23[16] ^ 0x200;
      }
      v25[16] = v29;
      if ((v23[20] ^ 0x200) == 1) {
        unsigned int v30 = 0;
      }
      else {
        unsigned int v30 = v23[20] ^ 0x200;
      }
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x200;
      if (v31 == 1) {
        unsigned int v31 = 0;
      }
      v25[24] = v31;
      int v33 = v23[28] ^ 0x200;
      if (v33 == 1) {
        unsigned int v32 = 0;
      }
      else {
        unsigned int v32 = v33;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v24 = *v23 ^ 0x200;
      int16x8_t v25 = &v317[v8];
      *int16x8_t v25 = v24;
      unsigned int v26 = v23[4] ^ 0x200;
      v25[4] = v26;
      unsigned int v27 = v23[8] ^ 0x200;
      v25[8] = v27;
      unsigned int v28 = v23[12] ^ 0x200;
      v25[12] = v28;
      unsigned int v29 = v23[16] ^ 0x200;
      v25[16] = v29;
      unsigned int v30 = v23[20] ^ 0x200;
      v25[20] = v30;
      unsigned int v31 = v23[24] ^ 0x200;
      v25[24] = v31;
      unsigned int v32 = v23[28] ^ 0x200;
    }
    else
    {
      unsigned int v24 = *v23;
      int16x8_t v25 = &v317[v8];
      *int16x8_t v25 = *v23;
      unsigned int v26 = v23[4];
      v25[4] = v26;
      unsigned int v27 = v23[8];
      v25[8] = v27;
      unsigned int v28 = v23[12];
      v25[12] = v28;
      unsigned int v29 = v23[16];
      v25[16] = v29;
      unsigned int v30 = v23[20];
      v25[20] = v30;
      unsigned int v31 = v23[24];
      v25[24] = v31;
      unsigned int v32 = v23[28];
    }
    v25[28] = v32;
    int16x8_t v34 = &v322[v8 + 4];
    v322[v8 + 4] = v24;
    *(int *)((char *)&v323 + v8 * 4) = v24;
    v322[v8] = 0;
    unsigned int v35 = v24;
    if (v15)
    {
      if (v296) {
        goto LABEL_61;
      }
    }
    else
    {
      if (v26 < v24)
      {
        v322[v8] = 1;
        *(int *)((char *)&v323 + v8 * 4) = v26;
        unsigned int v35 = v26;
      }
      if (v24 >= v26) {
        int8x16_t v36 = &v322[v8 + 4];
      }
      else {
        int8x16_t v36 = &v317[v8 + 4];
      }
      unsigned int v24 = *v36;
      *int16x8_t v34 = *v36;
      if (v296)
      {
LABEL_61:
        if (v295) {
          goto LABEL_62;
        }
        goto LABEL_79;
      }
    }
    if (v27 < v35)
    {
      v322[v8] = 2;
      *(int *)((char *)&v323 + v8 * 4) = v27;
      unsigned int v35 = v27;
    }
    if (v24 >= v27) {
      uint64_t v37 = &v322[v8 + 4];
    }
    else {
      uint64_t v37 = &v317[v8 + 8];
    }
    unsigned int v24 = *v37;
    *int16x8_t v34 = *v37;
    if (v295)
    {
LABEL_62:
      if (v297) {
        goto LABEL_63;
      }
      goto LABEL_85;
    }
LABEL_79:
    if (v28 < v35)
    {
      v322[v8] = 3;
      *(int *)((char *)&v323 + v8 * 4) = v28;
      unsigned int v35 = v28;
    }
    if (v24 >= v28) {
      unint64_t v38 = &v322[v8 + 4];
    }
    else {
      unint64_t v38 = &v317[v8 + 12];
    }
    unsigned int v24 = *v38;
    *int16x8_t v34 = *v38;
    if (v297)
    {
LABEL_63:
      if (v299) {
        goto LABEL_64;
      }
      goto LABEL_91;
    }
LABEL_85:
    if (v29 < v35)
    {
      v322[v8] = 4;
      *(int *)((char *)&v323 + v8 * 4) = v29;
      unsigned int v35 = v29;
    }
    if (v24 >= v29) {
      uint32x4_t v39 = &v322[v8 + 4];
    }
    else {
      uint32x4_t v39 = &v317[v8 + 16];
    }
    unsigned int v24 = *v39;
    *int16x8_t v34 = *v39;
    if (v299)
    {
LABEL_64:
      if (v298) {
        goto LABEL_65;
      }
      goto LABEL_97;
    }
LABEL_91:
    if (v30 < v35)
    {
      v322[v8] = 5;
      *(int *)((char *)&v323 + v8 * 4) = v30;
      unsigned int v35 = v30;
    }
    if (v24 >= v30) {
      uint32x4_t v40 = &v322[v8 + 4];
    }
    else {
      uint32x4_t v40 = &v317[v8 + 20];
    }
    unsigned int v24 = *v40;
    *int16x8_t v34 = *v40;
    if (v298)
    {
LABEL_65:
      if (v300) {
        goto LABEL_108;
      }
LABEL_103:
      if (v32 < v35)
      {
        v322[v8] = 7;
        *(int *)((char *)&v323 + v8 * 4) = v32;
        unsigned int v35 = v32;
      }
      unsigned int v42 = &v317[v8 + 28];
      if (v24 >= v32) {
        unsigned int v42 = &v322[v8 + 4];
      }
      unsigned int v24 = *v42;
      *int16x8_t v34 = *v42;
      goto LABEL_108;
    }
LABEL_97:
    if (v31 < v35)
    {
      v322[v8] = 6;
      *(int *)((char *)&v323 + v8 * 4) = v31;
      unsigned int v35 = v31;
    }
    if (v24 >= v31) {
      unsigned int v41 = &v322[v8 + 4];
    }
    else {
      unsigned int v41 = &v317[v8 + 24];
    }
    unsigned int v24 = *v41;
    *int16x8_t v34 = *v41;
    if (!v300) {
      goto LABEL_103;
    }
LABEL_108:
    unsigned int v43 = __clz(v24 - v35);
    int v44 = 32 - v43;
    if ((int)(32 - v43) <= 1) {
      int v44 = 1;
    }
    unsigned int v45 = v44 - 1;
    if (v43 - 29 < 3) {
      unsigned int v45 = 2;
    }
    if (v35) {
      BOOL v46 = v35 == 1023;
    }
    else {
      BOOL v46 = 1;
    }
    int v47 = !v46;
    if (v45 < 3 && v24 == v35) {
      unsigned int v45 = v47;
    }
    *(unsigned int *)((char *)&v318 + v8 * 4) = v45;
    if ((a3 | 2) != 3)
    {
      BOOL v49 = 0;
LABEL_129:
      if (v45 <= 5) {
        goto LABEL_130;
      }
      goto LABEL_21;
    }
    BOOL v49 = 0;
    if (v24 >= 0x200)
    {
      if (v35 <= 0x1FF)
      {
        BOOL v49 = kDQuadParamTable[10 * v45 + 168] == 0;
        if (v45 <= 5) {
          goto LABEL_130;
        }
        goto LABEL_21;
      }
      goto LABEL_129;
    }
    if (v45 <= 5)
    {
LABEL_130:
      if (!v49) {
        goto LABEL_31;
      }
    }
LABEL_21:
    int v16 = kDQuadParamTable[10 * v45 + 164] - v49;
    unsigned int v17 = v16 + 1;
    if (v49) {
      int v18 = 0;
    }
    else {
      int v18 = -2;
    }
    int v19 = v35 & ~(-1 << (9 - v16));
    if (v17 >= 0xA) {
      int v19 = 0;
    }
    int v20 = v19 + v18;
    unsigned int v21 = __clz(v20 + v24 - v35);
    if (v20 >= 1 && v21 < v43) {
      *(unsigned int *)((char *)&v318 + v8 * 4) = v45 + 1;
    }
LABEL_31:
    ++v8;
  }
  while (v8 != 4);
  v314[0] = 0;
  v314[1] = 0;
  v313[0] = 0;
  v313[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v315, &v318, v314, v313);
  unint64_t v50 = 0;
  int v51 = 0;
  if (a4) {
    BOOL v52 = a5 == 0;
  }
  else {
    BOOL v52 = 1;
  }
  int v53 = v52;
  while (2)
  {
    uint64_t v55 = v315[v50 / 4];
    int v56 = *(unsigned int *)((char *)&v318 + v50);
    int16x8_t v57 = &kDQuadParamTable[160 * v55 + 10 * v56];
    int v58 = *((_DWORD *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)2>::getDquadExtraBitScale(AGX::AppleCompressionGen2::DQuadFmtId)::kDQuadBitTable
          + 4 * v55
          + 2);
    int v59 = v57[5];
    unsigned int v60 = v57[4] + v58;
    *(unsigned int *)((char *)&v309 + v50) = v60;
    int v61 = v59 + v58;
    *(unsigned int *)((char *)&v305 + v50) = v61;
    unint64_t v62 = *((void *)v57 + 1);
    int v63 = *(_DWORD *)((char *)v313 + v50) - *(_DWORD *)((char *)v314 + v50);
    if (v63 < 0)
    {
      if (kDQuadParamTable[160 * v55 + 7 + 10 * v56] < *(_DWORD *)((char *)v314 + v50)
                                                                    - *(_DWORD *)((char *)v313 + v50))
      {
        *(unsigned int *)((char *)&v305 + v50) = --v61;
        if (!kDQuadParamTable[160 * v55 + 8 + 10 * v56])
        {
          int v64 = -1;
LABEL_147:
          *(unsigned int *)((char *)&v309 + v50) = v64 + v60;
        }
      }
    }
    else if (v63)
    {
      v61 += v63;
      *(unsigned int *)((char *)&v305 + v50) = v61;
      int v64 = v63;
      goto LABEL_147;
    }
    if (v55 == 5)
    {
      int v65 = (v63 < 2) | v51;
      if (v56 == 1) {
        int v51 = v65;
      }
    }
    if (a3 == 4)
    {
      if (v55 == 3) {
        int v66 = 31744;
      }
      else {
        int v66 = 0;
      }
      if (v55 == 4) {
        int v67 = 2139095040;
      }
      else {
        int v67 = v66;
      }
      int v68 = 1 << (*(unsigned int *)((char *)&v327 + v50) - 1);
      if (v53)
      {
        if (v15) {
          goto LABEL_162;
        }
LABEL_176:
        unsigned int v72 = v317[v50 / 4 + 4];
        BOOL v74 = (v67 & ~v72) == 0 || v72 == v68;
        v51 |= v74;
        if (!v296) {
          goto LABEL_183;
        }
LABEL_163:
        if (v295) {
          goto LABEL_164;
        }
LABEL_190:
        unsigned int v78 = v317[v50 / 4 + 12];
        BOOL v80 = (v67 & ~v78) == 0 || v78 == v68;
        v51 |= v80;
        if (!v297) {
          goto LABEL_197;
        }
LABEL_165:
        if (v299) {
          goto LABEL_166;
        }
LABEL_204:
        unsigned int v84 = v317[v50 / 4 + 20];
        BOOL v86 = (v67 & ~v84) == 0 || v84 == v68;
        v51 |= v86;
        if (!v298) {
          goto LABEL_211;
        }
LABEL_167:
        if (!v300) {
          goto LABEL_218;
        }
      }
      else
      {
        unsigned int v69 = v317[v50 / 4];
        BOOL v71 = (v67 & ~v69) == 0 || v69 == v68;
        v51 |= v71;
        if (!v15) {
          goto LABEL_176;
        }
LABEL_162:
        if (v296) {
          goto LABEL_163;
        }
LABEL_183:
        unsigned int v75 = v317[v50 / 4 + 8];
        BOOL v77 = (v67 & ~v75) == 0 || v75 == v68;
        v51 |= v77;
        if (!v295) {
          goto LABEL_190;
        }
LABEL_164:
        if (v297) {
          goto LABEL_165;
        }
LABEL_197:
        unsigned int v81 = v317[v50 / 4 + 16];
        BOOL v83 = (v67 & ~v81) == 0 || v81 == v68;
        v51 |= v83;
        if (!v299) {
          goto LABEL_204;
        }
LABEL_166:
        if (v298) {
          goto LABEL_167;
        }
LABEL_211:
        unsigned int v87 = v317[v50 / 4 + 24];
        BOOL v89 = (v67 & ~v87) == 0 || v87 == v68;
        v51 |= v89;
        if (!v300)
        {
LABEL_218:
          unsigned int v90 = v317[v50 / 4 + 28];
          BOOL v92 = (v67 & ~v90) == 0 || v90 == v68;
          v51 |= v92;
        }
      }
    }
    if (v62 >> v61 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)19,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v50
                                       + 32))
      int v54 = 1;
    else {
      int v54 = v53;
    }
    v51 |= v54;
    v50 += 4;
    if (v50 != 16) {
      continue;
    }
    break;
  }
  uint64_t v93 = 0;
  uint64_t v303 = 0;
  uint64_t v304 = 0;
  memset(v302, 0, sizeof(v302));
  int8x16_t v94 = v317;
  int8x16_t v95 = v316;
  do
  {
    uint64_t v96 = 0;
    unsigned int v97 = 0;
    unsigned int v98 = *(&v327 + v93);
    if (v98 >= *(&v309 + v93)) {
      unsigned int v99 = *(&v309 + v93);
    }
    else {
      unsigned int v99 = *(&v327 + v93);
    }
    *(&v309 + v93) = v99;
    int16x8_t v100 = &kDQuadParamTable[160 * v315[v93] + 10 * *(&v318 + v93)];
    unsigned int v101 = *(&v305 + v93);
    if (v100[5]) {
      unsigned int v102 = v98;
    }
    else {
      unsigned int v102 = 0;
    }
    if (v102 < v101) {
      unsigned int v101 = v102;
    }
    int v103 = *(&v323 + v93) & (-1 << (v98 - v99));
    int16x8_t v104 = &v317[v93];
    int v105 = *v104 - v103;
    int16x8_t v106 = &v316[2 * v93];
    if (v53) {
      int v105 = 0;
    }
    int v107 = v104[4] - v103;
    if (v15) {
      int v107 = 0;
    }
    *int16x8_t v106 = v105;
    v106[1] = v107;
    int v108 = v104[8] - v103;
    if (v296) {
      int v108 = 0;
    }
    int v109 = v104[12] - v103;
    if (v295) {
      int v109 = 0;
    }
    v106[2] = v108;
    v106[3] = v109;
    int v110 = v104[16] - v103;
    if (v297) {
      int v110 = 0;
    }
    int v111 = v104[20] - v103;
    if (v299) {
      int v111 = 0;
    }
    v106[4] = v110;
    v106[5] = v111;
    uint64_t v112 = -1 << v98;
    *(&v305 + v93) = v101;
    unint64_t v113 = *((void *)v100 + 1);
    *((_DWORD *)&v303 + v93) = v103;
    unint64_t v114 = v113 >> v101;
    int v115 = v104[24] - v103;
    if (v298) {
      int v115 = 0;
    }
    int v116 = v104[28] - v103;
    if (v300) {
      int v116 = 0;
    }
    v106[6] = v115;
    v106[7] = v116;
    if (v114 <= 1) {
      unint64_t v117 = 1;
    }
    else {
      unint64_t v117 = v114;
    }
    uint64_t v118 = 4 * v322[v93];
    int16x8_t v119 = &byte_242EA911D;
    do
    {
      if (v118 != v96)
      {
        if (v101) {
          unint64_t v120 = *(unsigned int *)((char *)v95 + v96) / v117;
        }
        else {
          LODWORD(v120) = 0;
        }
        int16x8_t v121 = (int *)v302 + 7 * v93 + v97;
        *int16x8_t v121 = v120;
        if (v114 >= 2)
        {
          unint64_t v122 = *(unsigned int *)((char *)v95 + v96);
          if (v122)
          {
            if (v122 / v117 * v117 == v122 && ((v122 / v117) & 1) != 0)
            {
              if (v103 || v120 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v124 = v94[v96], v125 = *((unsigned int *)&v314[2] + v93), v124 != v125)
                  && ((a3 | 2) != 3 || v117 + v125 != v124))
                {
                  LODWORD(v120) = v120 - 1;
                  *int16x8_t v121 = v120;
                }
              }
              else
              {
                LODWORD(v120) = 1;
              }
            }
          }
        }
        if ((unint64_t)v120 >> v101 || v94[v96] == ~v112) {
          *int16x8_t v121 = ~(-1 << v101);
        }
        if (*v119 >= a5 || *(v119 - 1) >= a4) {
          *int16x8_t v121 = 0;
        }
        ++v97;
      }
      v96 += 4;
      v119 += 2;
    }
    while (v96 != 32);
    ++v93;
    v95 += 2;
    ++v94;
  }
  while (v93 != 4);
  int16x8_t v126 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v127 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v51)
  {
    uint64_t v128 = 0;
    uint64_t v129 = 0;
    unsigned int v130 = v327;
    unsigned int v131 = v328;
    uint64_t v132 = v327 - 4;
    uint64_t v133 = v328 - 4;
    unsigned int v135 = v329;
    unsigned int v134 = v330;
    uint64_t v136 = v329 - 4;
    uint64_t v137 = v330 - 4;
    uint64_t v138 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v139 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v128;
      BOOL v140 = v139[1] >= a5 || *v139 >= a4;
      char v141 = v140;
      if (v140)
      {
        unint64_t v142 = 0;
        if (v132 > 0x100) {
          goto LABEL_303;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)v317[4 * v128] >> 4;
        if (v132 > 0x100) {
          goto LABEL_303;
        }
      }
      if (v130 != 4 && (unint64_t)(v138 - v127 + (v129 << 6) + v132) <= 0xC0)
      {
        uint64_t v143 = 0;
        unint64_t v144 = v130 - 4;
        do
        {
          unint64_t v145 = 64 - v138;
          if (64 - v138 >= v144) {
            unint64_t v145 = v144;
          }
          v126[v129] |= ((v142 >> v143) & ~(-1 << v145)) << v138;
          v143 += v145;
          unint64_t v146 = v145 + v138;
          v129 += v146 >> 6;
          uint64_t v138 = v146 & 0x3F;
          v144 -= v145;
        }
        while (v144);
      }
LABEL_303:
      if (v141)
      {
        unint64_t v147 = 0;
        if (v133 > 0x100) {
          goto LABEL_313;
        }
      }
      else
      {
        unint64_t v147 = (unint64_t)v317[4 * v128 + 1] >> 4;
        if (v133 > 0x100) {
          goto LABEL_313;
        }
      }
      if (v131 != 4 && (unint64_t)(v138 - v127 + (v129 << 6) + v133) <= 0xC0)
      {
        uint64_t v148 = 0;
        unint64_t v149 = v131 - 4;
        do
        {
          unint64_t v150 = 64 - v138;
          if (64 - v138 >= v149) {
            unint64_t v150 = v149;
          }
          v126[v129] |= ((v147 >> v148) & ~(-1 << v150)) << v138;
          v148 += v150;
          unint64_t v151 = v150 + v138;
          v129 += v151 >> 6;
          uint64_t v138 = v151 & 0x3F;
          v149 -= v150;
        }
        while (v149);
      }
LABEL_313:
      if (v141)
      {
        unint64_t v152 = 0;
        if (v136 > 0x100) {
          goto LABEL_323;
        }
      }
      else
      {
        unint64_t v152 = (unint64_t)v317[4 * v128 + 2] >> 4;
        if (v136 > 0x100) {
          goto LABEL_323;
        }
      }
      if (v135 != 4 && (unint64_t)(v138 - v127 + (v129 << 6) + v136) <= 0xC0)
      {
        uint64_t v153 = 0;
        unint64_t v154 = v135 - 4;
        do
        {
          unint64_t v155 = 64 - v138;
          if (64 - v138 >= v154) {
            unint64_t v155 = v154;
          }
          v126[v129] |= ((v152 >> v153) & ~(-1 << v155)) << v138;
          v153 += v155;
          unint64_t v156 = v155 + v138;
          v129 += v156 >> 6;
          uint64_t v138 = v156 & 0x3F;
          v154 -= v155;
        }
        while (v154);
      }
LABEL_323:
      if (v141)
      {
        unint64_t v157 = 0;
        if (v137 <= 0x100) {
          goto LABEL_327;
        }
      }
      else
      {
        unint64_t v157 = (unint64_t)v317[4 * v128 + 3] >> 4;
        if (v137 <= 0x100)
        {
LABEL_327:
          if (v134 != 4 && (unint64_t)(v138 - v127 + (v129 << 6) + v137) <= 0xC0)
          {
            uint64_t v158 = 0;
            unint64_t v159 = v134 - 4;
            do
            {
              unint64_t v160 = 64 - v138;
              if (64 - v138 >= v159) {
                unint64_t v160 = v159;
              }
              v126[v129] |= ((v157 >> v158) & ~(-1 << v160)) << v138;
              v158 += v160;
              unint64_t v161 = v160 + v138;
              v129 += v161 >> 6;
              uint64_t v138 = v161 & 0x3F;
              v159 -= v160;
            }
            while (v159);
          }
        }
      }
      if (++v128 == 8) {
        return v51 & 1;
      }
    }
  }
  unsigned int v162 = v318;
  char v163 = v323 | v318;
  if (v323 | v318)
  {
    char v163 = v318 - 2;
    if (v318 > 2)
    {
      unsigned int v166 = 0;
      unsigned int v165 = 0;
      char v164 = 1;
    }
    else
    {
      char v163 = 0;
      char v164 = 0;
      unsigned int v165 = v318 + 1;
      unsigned int v166 = 2;
    }
  }
  else
  {
    unsigned int v165 = 0;
    char v164 = 0;
    unsigned int v166 = 2;
  }
  unint64_t v167 = ((unint64_t)(v163 & 7) << v127) | *v126;
  void *v126 = v167;
  uint64_t v168 = v127 | 3;
  unsigned int v169 = v319;
  char v170 = v324 | v319;
  if (v324 | v319)
  {
    if (v319 < 3)
    {
      char v170 = 0;
      char v171 = 0;
      unsigned int v172 = v319 + 1;
      goto LABEL_343;
    }
    unsigned int v173 = 0;
    unsigned int v172 = 0;
    char v170 = v319 - 2;
    char v171 = 1;
  }
  else
  {
    unsigned int v172 = 0;
    char v171 = 0;
LABEL_343:
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v168 - v127) <= 0xBD)
  {
    void *v126 = ((unint64_t)(v170 & 7) << v168) | v167;
    uint64_t v168 = v127 | 6;
  }
  unsigned int v174 = v320;
  if (v325 | v320)
  {
    if (v320 < 3)
    {
      unsigned int v175 = 0;
      char v176 = 0;
      unsigned int v301 = v320 + 1;
      goto LABEL_351;
    }
    unsigned int v177 = 0;
    unsigned int v301 = 0;
    unsigned int v175 = v320 - 2;
    char v176 = 1;
  }
  else
  {
    unsigned int v175 = 0;
    unsigned int v301 = 0;
    char v176 = 0;
LABEL_351:
    unsigned int v177 = 2;
  }
  if ((unint64_t)(v168 - v127 - 190) >= 0xFFFFFFFFFFFFFF3FLL)
  {
    uint64_t v178 = 0;
    uint64_t v179 = 0;
    unint64_t v180 = 3;
    do
    {
      unint64_t v181 = 64 - v168;
      if (64 - v168 >= v180) {
        unint64_t v181 = v180;
      }
      v126[v178] |= (((unint64_t)v175 >> v179) & ~(-1 << v181)) << v168;
      v179 += v181;
      unint64_t v182 = v181 + v168;
      v178 += v182 >> 6;
      uint64_t v168 = v182 & 0x3F;
      v180 -= v181;
    }
    while (v180);
  }
  else
  {
    uint64_t v178 = 0;
  }
  unsigned int v183 = v321;
  int v184 = v326 | v321;
  LODWORD(v185) = v321 - 2;
  if (v321 >= 3)
  {
    unsigned int v186 = 0;
  }
  else
  {
    LODWORD(v185) = 0;
    unsigned int v186 = 2;
  }
  if (v321 < 3) {
    unsigned int v187 = v321 + 1;
  }
  else {
    unsigned int v187 = 0;
  }
  BOOL v188 = v184 == 0;
  if (v184) {
    unint64_t v185 = v185;
  }
  else {
    unint64_t v185 = 0;
  }
  if (v184) {
    uint64_t v189 = v186;
  }
  else {
    uint64_t v189 = 2;
  }
  if (v188) {
    unint64_t v190 = 0;
  }
  else {
    unint64_t v190 = v187;
  }
  BOOL v191 = !v188 && v321 >= 3;
  if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
  {
    uint64_t v192 = 0;
    unint64_t v193 = 3;
    do
    {
      unint64_t v194 = 64 - v168;
      if (64 - v168 >= v193) {
        unint64_t v194 = v193;
      }
      v126[v178] |= ((v185 >> v192) & ~(-1 << v194)) << v168;
      v192 += v194;
      unint64_t v195 = v194 + v168;
      v178 += v195 >> 6;
      uint64_t v168 = v195 & 0x3F;
      v193 -= v194;
    }
    while (v193);
  }
  if (v164)
  {
    int v196 = 12;
    if (v171) {
      goto LABEL_397;
    }
LABEL_391:
    unint64_t v201 = v173;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v173 <= 0xC0)
    {
      uint64_t v202 = 0;
      do
      {
        unint64_t v203 = 64 - v168;
        if (64 - v168 >= v201) {
          unint64_t v203 = v201;
        }
        v126[v178] |= (((unint64_t)v172 >> v202) & ~(-1 << v203)) << v168;
        v202 += v203;
        unint64_t v204 = v203 + v168;
        v178 += v204 >> 6;
        uint64_t v168 = v204 & 0x3F;
        v201 -= v203;
      }
      while (v201);
    }
    v196 += v173;
  }
  else
  {
    unint64_t v197 = v166;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v166 <= 0xC0)
    {
      uint64_t v198 = 0;
      do
      {
        unint64_t v199 = 64 - v168;
        if (64 - v168 >= v197) {
          unint64_t v199 = v197;
        }
        v126[v178] |= (((unint64_t)v165 >> v198) & ~(-1 << v199)) << v168;
        v198 += v199;
        unint64_t v200 = v199 + v168;
        v178 += v200 >> 6;
        uint64_t v168 = v200 & 0x3F;
        v197 -= v199;
      }
      while (v197);
    }
    int v196 = v166 | 0xC;
    if ((v171 & 1) == 0) {
      goto LABEL_391;
    }
  }
LABEL_397:
  if (v176)
  {
    if (v191) {
      goto LABEL_399;
    }
LABEL_407:
    if ((unint64_t)(v168 - v127 + (v178 << 6) + v189) <= 0xC0)
    {
      uint64_t v210 = 0;
      unint64_t v211 = v189;
      do
      {
        unint64_t v212 = 64 - v168;
        if (64 - v168 >= v211) {
          unint64_t v212 = v211;
        }
        v126[v178] |= ((v190 >> v210) & ~(-1 << v212)) << v168;
        v210 += v212;
        unint64_t v213 = v212 + v168;
        v178 += v213 >> 6;
        uint64_t v168 = v213 & 0x3F;
        v211 -= v212;
      }
      while (v211);
    }
    v196 += v189;
    unsigned int v205 = v327;
    if (!v162) {
      goto LABEL_413;
    }
LABEL_417:
    unsigned int v215 = v309;
    if (v309 <= 0x100 && v309 && v168 - v127 + (v178 << 6) + (unint64_t)v309 <= 0xC0)
    {
      uint64_t v216 = 0;
      unint64_t v217 = v303 >> (v205 - v309);
      unint64_t v218 = v309;
      do
      {
        unint64_t v219 = 64 - v168;
        if (64 - v168 >= v218) {
          unint64_t v219 = v218;
        }
        v126[v178] |= ((v217 >> v216) & ~(-1 << v219)) << v168;
        v216 += v219;
        unint64_t v220 = v219 + v168;
        v178 += v220 >> 6;
        uint64_t v168 = v220 & 0x3F;
        v218 -= v219;
      }
      while (v218);
    }
    v196 += v215;
    unsigned int v214 = v328;
    if (v169) {
      goto LABEL_425;
    }
LABEL_526:
    if (v214 == 2 || v214 >= 0x10) {
      goto LABEL_425;
    }
  }
  else
  {
    unint64_t v206 = v177;
    if (v168 - v127 + (v178 << 6) + (unint64_t)v177 <= 0xC0)
    {
      uint64_t v207 = 0;
      do
      {
        unint64_t v208 = 64 - v168;
        if (64 - v168 >= v206) {
          unint64_t v208 = v206;
        }
        v126[v178] |= (((unint64_t)v301 >> v207) & ~(-1 << v208)) << v168;
        v207 += v208;
        unint64_t v209 = v208 + v168;
        v178 += v209 >> 6;
        uint64_t v168 = v209 & 0x3F;
        v206 -= v208;
      }
      while (v206);
    }
    v196 += v177;
    if (!v191) {
      goto LABEL_407;
    }
LABEL_399:
    unsigned int v205 = v327;
    if (v162) {
      goto LABEL_417;
    }
LABEL_413:
    if (v205 == 2 || v205 >= 0x10) {
      goto LABEL_417;
    }
    unsigned int v214 = v328;
    if (!v169) {
      goto LABEL_526;
    }
LABEL_425:
    unsigned int v221 = v310;
    if (v310 <= 0x100 && v310 && v168 - v127 + (v178 << 6) + (unint64_t)v310 <= 0xC0)
    {
      uint64_t v222 = 0;
      unint64_t v223 = (HIDWORD(v303) >> (v214 - v310));
      unint64_t v224 = v310;
      do
      {
        unint64_t v225 = 64 - v168;
        if (64 - v168 >= v224) {
          unint64_t v225 = v224;
        }
        v126[v178] |= ((v223 >> v222) & ~(-1 << v225)) << v168;
        v222 += v225;
        unint64_t v226 = v225 + v168;
        v178 += v226 >> 6;
        uint64_t v168 = v226 & 0x3F;
        v224 -= v225;
      }
      while (v224);
    }
    v196 += v221;
  }
  if (v174 || v329 == 2 || v329 >= 0x10)
  {
    unsigned int v227 = v311;
    if (v311 <= 0x100 && v311 && v168 - v127 + (v178 << 6) + (unint64_t)v311 <= 0xC0)
    {
      uint64_t v228 = 0;
      unint64_t v229 = v304 >> (v329 - v311);
      unint64_t v230 = v311;
      do
      {
        unint64_t v231 = 64 - v168;
        if (64 - v168 >= v230) {
          unint64_t v231 = v230;
        }
        v126[v178] |= ((v229 >> v228) & ~(-1 << v231)) << v168;
        v228 += v231;
        unint64_t v232 = v231 + v168;
        v178 += v232 >> 6;
        uint64_t v168 = v232 & 0x3F;
        v230 -= v231;
      }
      while (v230);
    }
    v196 += v227;
  }
  if (v183 || v330 == 2 || v330 >= 0x10)
  {
    unsigned int v233 = v312;
    if (v312 <= 0x100 && v312 && v168 - v127 + (v178 << 6) + (unint64_t)v312 <= 0xC0)
    {
      uint64_t v234 = 0;
      unint64_t v235 = (HIDWORD(v304) >> (v330 - v312));
      unint64_t v236 = v312;
      do
      {
        unint64_t v237 = 64 - v168;
        if (64 - v168 >= v236) {
          unint64_t v237 = v236;
        }
        v126[v178] |= ((v235 >> v234) & ~(-1 << v237)) << v168;
        v234 += v237;
        unint64_t v238 = v237 + v168;
        v178 += v238 >> 6;
        uint64_t v168 = v238 & 0x3F;
        v236 -= v237;
      }
      while (v236);
    }
    v196 += v233;
  }
  unint64_t v239 = v305;
  if (v305)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v240 = 0;
      unint64_t v241 = v322[0];
      unint64_t v242 = 3;
      do
      {
        unint64_t v243 = 64 - v168;
        if (64 - v168 >= v242) {
          unint64_t v243 = v242;
        }
        v126[v178] |= ((v241 >> v240) & ~(-1 << v243)) << v168;
        v240 += v243;
        unint64_t v244 = v243 + v168;
        v178 += v244 >> 6;
        uint64_t v168 = v244 & 0x3F;
        v242 -= v243;
      }
      while (v242);
    }
    v196 += 3;
  }
  unint64_t v245 = v306;
  if (v306)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v246 = 0;
      unint64_t v247 = v322[1];
      unint64_t v248 = 3;
      do
      {
        unint64_t v249 = 64 - v168;
        if (64 - v168 >= v248) {
          unint64_t v249 = v248;
        }
        v126[v178] |= ((v247 >> v246) & ~(-1 << v249)) << v168;
        v246 += v249;
        unint64_t v250 = v249 + v168;
        v178 += v250 >> 6;
        uint64_t v168 = v250 & 0x3F;
        v248 -= v249;
      }
      while (v248);
    }
    v196 += 3;
  }
  unint64_t v251 = v307;
  if (v307)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v252 = 0;
      unint64_t v253 = v322[2];
      unint64_t v254 = 3;
      do
      {
        unint64_t v255 = 64 - v168;
        if (64 - v168 >= v254) {
          unint64_t v255 = v254;
        }
        v126[v178] |= ((v253 >> v252) & ~(-1 << v255)) << v168;
        v252 += v255;
        unint64_t v256 = v255 + v168;
        v178 += v256 >> 6;
        uint64_t v168 = v256 & 0x3F;
        v254 -= v255;
      }
      while (v254);
    }
    v196 += 3;
  }
  unint64_t v257 = v308;
  if (v308)
  {
    if ((unint64_t)(v168 - v127 + (v178 << 6) + 3) <= 0xC0)
    {
      uint64_t v258 = 0;
      unint64_t v259 = v322[3];
      unint64_t v260 = 3;
      do
      {
        unint64_t v261 = 64 - v168;
        if (64 - v168 >= v260) {
          unint64_t v261 = v260;
        }
        v126[v178] |= ((v259 >> v258) & ~(-1 << v261)) << v168;
        v258 += v261;
        unint64_t v262 = v261 + v168;
        v178 += v262 >> 6;
        uint64_t v168 = v262 & 0x3F;
        v260 -= v261;
      }
      while (v260);
    }
    v196 += 3;
  }
  unsigned int v263 = 192 - v196;
  unsigned int v264 = (192 - v196) / 7u;
  unint64_t v265 = v263 % 7;
  if ((v265 - 257) >= 0xFFFFFF00 && v168 - v127 + (v178 << 6) + v265 <= 0xC0)
  {
    do
    {
      unint64_t v266 = 64 - v168;
      if (64 - v168 >= v265) {
        unint64_t v266 = v265;
      }
      unint64_t v267 = v266 + v168;
      v178 += v267 >> 6;
      uint64_t v168 = v267 & 0x3F;
      v265 -= v266;
    }
    while (v265);
  }
  uint64_t v268 = 0;
  while (2)
  {
    if (v239 && v239 <= 0x100 && v168 - v127 + (v178 << 6) + v239 <= 0xC0)
    {
      uint64_t v269 = 0;
      unint64_t v270 = *((unsigned int *)v302 + v268);
      unint64_t v271 = v239;
      do
      {
        unint64_t v272 = 64 - v168;
        if (64 - v168 >= v271) {
          unint64_t v272 = v271;
        }
        v126[v178] |= ((v270 >> v269) & ~(-1 << v272)) << v168;
        v269 += v272;
        unint64_t v273 = v272 + v168;
        v178 += v273 >> 6;
        uint64_t v168 = v273 & 0x3F;
        v271 -= v272;
      }
      while (v271);
    }
    if (!v245)
    {
      int v279 = v239;
      if (!v251) {
        goto LABEL_510;
      }
      goto LABEL_503;
    }
    if (v245 <= 0x100 && v168 - v127 + (v178 << 6) + v245 <= 0xC0)
    {
      uint64_t v274 = 0;
      unint64_t v275 = *((unsigned int *)&v302[1] + v268 + 3);
      unint64_t v276 = v245;
      do
      {
        unint64_t v277 = 64 - v168;
        if (64 - v168 >= v276) {
          unint64_t v277 = v276;
        }
        v126[v178] |= ((v275 >> v274) & ~(-1 << v277)) << v168;
        v274 += v277;
        unint64_t v278 = v277 + v168;
        v178 += v278 >> 6;
        uint64_t v168 = v278 & 0x3F;
        v276 -= v277;
      }
      while (v276);
    }
    int v279 = v245 + v239;
    if (v251)
    {
LABEL_503:
      if (v251 <= 0x100 && v168 - v127 + (v178 << 6) + v251 <= 0xC0)
      {
        uint64_t v280 = 0;
        unint64_t v281 = *((unsigned int *)&v302[3] + v268 + 2);
        unint64_t v282 = v251;
        do
        {
          unint64_t v283 = 64 - v168;
          if (64 - v168 >= v282) {
            unint64_t v283 = v282;
          }
          v126[v178] |= ((v281 >> v280) & ~(-1 << v283)) << v168;
          v280 += v283;
          unint64_t v284 = v283 + v168;
          v178 += v284 >> 6;
          uint64_t v168 = v284 & 0x3F;
          v282 -= v283;
        }
        while (v282);
      }
      v279 += v251;
    }
LABEL_510:
    if (v257)
    {
      if (v257 <= 0x100 && v168 - v127 + (v178 << 6) + v257 <= 0xC0)
      {
        uint64_t v285 = 0;
        unint64_t v286 = *((unsigned int *)&v302[5] + v268 + 1);
        unint64_t v287 = v257;
        do
        {
          unint64_t v288 = 64 - v168;
          if (64 - v168 >= v287) {
            unint64_t v288 = v287;
          }
          v126[v178] |= ((v286 >> v285) & ~(-1 << v288)) << v168;
          v285 += v288;
          unint64_t v289 = v288 + v168;
          v178 += v289 >> 6;
          uint64_t v168 = v289 & 0x3F;
          v287 -= v288;
        }
        while (v287);
      }
      v279 += v257;
    }
    unint64_t v290 = v264 - v279;
    if (v290 && v290 <= 0x100 && v168 - v127 + (v178 << 6) + v290 <= 0xC0)
    {
      do
      {
        unint64_t v291 = 64 - v168;
        if (64 - v168 >= v290) {
          unint64_t v291 = v290;
        }
        unint64_t v292 = v291 + v168;
        v178 += v292 >> 6;
        uint64_t v168 = v292 & 0x3F;
        v290 -= v291;
      }
      while (v290);
    }
    if (++v268 != 7) {
      continue;
    }
    return v51 & 1;
  }
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(unint64_t result, uint64_t a2, int a3)
{
  unint64_t v3 = result & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = 8 * (result & 7);
  unsigned int v5 = a3 & 0xFFFFFFFD;
  int v6 = ((a3 & 0xFFFFFFFD) == 1) << 9;
  if (a3 == 4)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 8 * (result & 7);
    while ((unint64_t)(v9 - v4 + (v8 << 6) - 187) >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v11 = 0;
      uint64_t v12 = 0;
      unint64_t v13 = 6;
      do
      {
        unint64_t v14 = 64 - v9;
        if (64 - v9 >= v13) {
          unint64_t v14 = v13;
        }
        v11 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v14)) << v12;
        v12 += v14;
        unint64_t v15 = v14 + v9;
        v8 += v15 >> 6;
        uint64_t v9 = v15 & 0x3F;
        v13 -= v14;
      }
      while (v13);
      uint64_t result = 16 * v7;
      *(_DWORD *)(a2 + 16 * v7) = (16 * (v11 & 0x3F)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 187) < 0xFFFFFFFFFFFFFF3FLL) {
        goto LABEL_4;
      }
      char v16 = 0;
      uint64_t v17 = 0;
      unint64_t v18 = 6;
      do
      {
        unint64_t v19 = 64 - v9;
        if (64 - v9 >= v18) {
          unint64_t v19 = v18;
        }
        v16 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v19)) << v17;
        v17 += v19;
        unint64_t v20 = v19 + v9;
        v8 += v20 >> 6;
        uint64_t v9 = v20 & 0x3F;
        v18 -= v19;
      }
      while (v18);
      uint64_t result = a2 + 16 * v7;
      *(_DWORD *)(result + 4) = (16 * (v16 & 0x3F)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 187) >= 0xFFFFFFFFFFFFFF3FLL)
      {
        char v21 = 0;
        uint64_t v22 = 0;
        unint64_t v23 = 6;
        do
        {
          unint64_t v24 = 64 - v9;
          if (64 - v9 >= v23) {
            unint64_t v24 = v23;
          }
          v21 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v24)) << v22;
          v22 += v24;
          unint64_t v25 = v24 + v9;
          v8 += v25 >> 6;
          uint64_t v9 = v25 & 0x3F;
          v23 -= v24;
        }
        while (v23);
        uint64_t result = a2 + 16 * v7;
        *(_DWORD *)(result + 8) = (16 * (v21 & 0x3F)) ^ v6;
        if ((unint64_t)(v9 - v4 + (v8 << 6) - 187) >= 0xFFFFFFFFFFFFFF3FLL)
        {
          char v10 = 0;
          uint64_t v26 = 0;
          uint64_t result = 6;
          do
          {
            unint64_t v27 = 64 - v9;
            if (64 - v9 >= result) {
              unint64_t v27 = result;
            }
            v10 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v27)) << v26;
            v26 += v27;
            unint64_t v28 = v27 + v9;
            v8 += v28 >> 6;
            uint64_t v9 = v28 & 0x3F;
            result -= v27;
          }
          while (result);
        }
        else
        {
          char v10 = 0;
        }
        goto LABEL_6;
      }
LABEL_5:
      char v10 = 0;
      *(_DWORD *)(a2 + 16 * v7 + 8) = v6;
LABEL_6:
      *(_DWORD *)(a2 + 16 * v7++ + 12) = (16 * (v10 & 0x3F)) ^ v6;
      if (v7 == 8) {
        return result;
      }
    }
    *(_DWORD *)(a2 + 16 * v7) = v6;
LABEL_4:
    *(_DWORD *)(a2 + 16 * v7 + 4) = v6;
    goto LABEL_5;
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t result = 8 * (result & 7);
  do
  {
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 6;
      do
      {
        unint64_t v34 = 64 - result;
        if (64 - result >= v33) {
          unint64_t v34 = v33;
        }
        v31 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v34)) << v32;
        v32 += v34;
        unint64_t v35 = v34 + result;
        v30 += v35 >> 6;
        uint64_t result = v35 & 0x3F;
        v33 -= v34;
      }
      while (v33);
    }
    else
    {
      char v31 = 0;
    }
    int v36 = 16 * (v31 & 0x3F);
    BOOL v37 = v36 == 512 && v5 == 1;
    if (!v37 && v36)
    {
      if (v36 == 1008) {
        int v36 = 1023;
      }
      else {
        v36 |= 8 - (v31 & 1);
      }
    }
    *(_DWORD *)(a2 + 16 * v29) = v36 ^ v6;
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v38 = 0;
      uint64_t v39 = 0;
      unint64_t v40 = 6;
      do
      {
        unint64_t v41 = 64 - result;
        if (64 - result >= v40) {
          unint64_t v41 = v40;
        }
        v38 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v41)) << v39;
        v39 += v41;
        unint64_t v42 = v41 + result;
        v30 += v42 >> 6;
        uint64_t result = v42 & 0x3F;
        v40 -= v41;
      }
      while (v40);
    }
    else
    {
      char v38 = 0;
    }
    int v43 = 16 * (v38 & 0x3F);
    if ((v43 != 512 || v5 != 1) && v43 != 0)
    {
      int v46 = (8 - (v38 & 1)) | v43;
      if (v43 == 1008) {
        int v43 = 1023;
      }
      else {
        int v43 = v46;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 4) = v43 ^ v6;
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 6;
      do
      {
        unint64_t v50 = 64 - result;
        if (64 - result >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v50)) << v48;
        v48 += v50;
        unint64_t v51 = v50 + result;
        v30 += v51 >> 6;
        uint64_t result = v51 & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    else
    {
      char v47 = 0;
    }
    int v52 = 16 * (v47 & 0x3F);
    if ((v52 != 512 || v5 != 1) && v52 != 0)
    {
      int v55 = (8 - (v47 & 1)) | v52;
      if (v52 == 1008) {
        int v52 = 1023;
      }
      else {
        int v52 = v55;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 8) = v52 ^ v6;
    if (result - v4 + (v30 << 6) - 187 >= 0xFFFFFFFFFFFFFF3FLL)
    {
      char v56 = 0;
      uint64_t v57 = 0;
      unint64_t v58 = 6;
      do
      {
        unint64_t v59 = 64 - result;
        if (64 - result >= v58) {
          unint64_t v59 = v58;
        }
        v56 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v59)) << v57;
        v57 += v59;
        unint64_t v60 = v59 + result;
        v30 += v60 >> 6;
        uint64_t result = v60 & 0x3F;
        v58 -= v59;
      }
      while (v58);
    }
    else
    {
      char v56 = 0;
    }
    int v61 = 16 * (v56 & 0x3F);
    if ((v61 != 512 || v5 != 1) && v61 != 0)
    {
      int v64 = (8 - (v56 & 1)) | v61;
      if (v61 == 1008) {
        int v61 = 1023;
      }
      else {
        int v61 = v64;
      }
    }
    *(_DWORD *)(a2 + 16 * v29++ + 12) = v61 ^ v6;
  }
  while (v29 != 8);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v279 = *MEMORY[0x263EF8340];
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = 8 * (a1 & 7);
  unint64_t v6 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (v6 >> v5) & 7;
  uint64_t v8 = v5 | 3;
  uint64_t v9 = (v6 >> (v5 | 3u)) & 7;
  if ((v5 | 3uLL) - v5 <= 0xBD) {
    uint64_t v10 = ((8 * (a1 & 7)) | 6) - v5;
  }
  else {
    uint64_t v10 = v8 - v5;
  }
  if ((unint64_t)(v8 - v5) <= 0xBD) {
    uint64_t v11 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v11 = (8 * (a1 & 7)) | 3;
  }
  if ((unint64_t)(v8 - v5) <= 0xBD) {
    int v12 = v9;
  }
  else {
    int v12 = 0;
  }
  int v258 = v12;
  if ((unint64_t)(v10 - 190) >= 0xFFFFFFFFFFFFFF3FLL)
  {
    uint64_t v15 = 0;
    int v13 = 0;
    uint64_t v17 = 0;
    unint64_t v18 = 3;
    do
    {
      unint64_t v19 = 64 - v11;
      if (64 - v11 >= v18) {
        unint64_t v19 = v18;
      }
      v13 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v19)) << v17);
      v17 += v19;
      v15 += (v19 + v11) >> 6;
      uint64_t v11 = (v19 + v11) & 0x3F;
      v18 -= v19;
    }
    while (v18);
    uint64_t v14 = v15 << 6;
    uint64_t v10 = v11 - v5;
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v16 = 0;
      uint64_t v20 = 0;
      unint64_t v21 = 3;
      do
      {
        unint64_t v22 = 64 - v11;
        if (64 - v11 >= v21) {
          unint64_t v22 = v21;
        }
        v16 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v22)) << v20);
        v20 += v22;
        v15 += (v22 + v11) >> 6;
        uint64_t v11 = (v22 + v11) & 0x3F;
        v21 -= v22;
      }
      while (v21);
      uint64_t v14 = v15 << 6;
      uint64_t v10 = v11 - v5;
    }
    else
    {
      int v16 = 0;
    }
  }
  else
  {
    int v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    int v16 = 0;
  }
  memset_pattern16(&__b, &unk_242EA8890, 0x10uLL);
  char v23 = 0;
  unint64_t v24 = 2 * (v7 == 0);
  int v261 = 2 * (v7 == 0);
  if (v7)
  {
    int v26 = v258;
    int v256 = 0;
    unsigned int v28 = v7 + 2;
  }
  else
  {
    if (v10 + v14 + v24 > 0xC0)
    {
      int v26 = v258;
    }
    else
    {
      char v23 = 0;
      uint64_t v25 = 0;
      int v26 = v258;
      do
      {
        unint64_t v27 = 64 - v11;
        if (64 - v11 >= v24) {
          unint64_t v27 = v24;
        }
        v23 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v27)) << v25;
        v25 += v27;
        v15 += (v27 + v11) >> 6;
        uint64_t v11 = (v27 + v11) & 0x3F;
        v24 -= v27;
      }
      while (v24);
    }
    unsigned int v29 = v23 & 3;
    if (v29 == 3)
    {
      int v256 = 0;
      unsigned int v28 = 2;
    }
    else
    {
      uint64_t v30 = 4 * v29;
      int v256 = *(_DWORD *)((char *)&unk_242EAA170 + v30);
      unsigned int v28 = *(_DWORD *)((char *)&unk_242EAA17C + v30);
    }
  }
  char v31 = 0;
  v278[0] = v28;
  v277[0] = 1;
  unint64_t v32 = 2 * (v26 == 0);
  int v260 = 2 * (v26 == 0);
  if (!v26 && v11 - v5 + (v15 << 6) + v32 <= 0xC0)
  {
    char v31 = 0;
    uint64_t v33 = 0;
    do
    {
      unint64_t v34 = 64 - v11;
      if (64 - v11 >= v32) {
        unint64_t v34 = v32;
      }
      v31 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v34)) << v33;
      v33 += v34;
      v15 += (v34 + v11) >> 6;
      uint64_t v11 = (v34 + v11) & 0x3F;
      v32 -= v34;
    }
    while (v32);
  }
  if (v26)
  {
    int v255 = 0;
    unsigned int v35 = v26 + 2;
  }
  else
  {
    unsigned int v36 = v31 & 3;
    if (v36 == 3)
    {
      int v255 = 0;
      unsigned int v35 = 2;
    }
    else
    {
      uint64_t v37 = 4 * v36;
      int v255 = *(_DWORD *)((char *)&unk_242EAA170 + v37);
      unsigned int v35 = *(_DWORD *)((char *)&unk_242EAA17C + v37);
    }
  }
  char v38 = 0;
  v278[1] = v35;
  v277[1] = 1;
  unint64_t v39 = 2 * (v13 == 0);
  int v259 = 2 * (v13 == 0);
  if (!v13 && v11 - v5 + (v15 << 6) + v39 <= 0xC0)
  {
    char v38 = 0;
    uint64_t v40 = 0;
    do
    {
      unint64_t v41 = 64 - v11;
      if (64 - v11 >= v39) {
        unint64_t v41 = v39;
      }
      v38 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v41)) << v40;
      v40 += v41;
      v15 += (v41 + v11) >> 6;
      uint64_t v11 = (v41 + v11) & 0x3F;
      v39 -= v41;
    }
    while (v39);
  }
  if ((v13 & 7) != 0)
  {
    int v254 = 0;
    int v42 = (v13 & 7) + 2;
  }
  else
  {
    unsigned int v43 = v38 & 3;
    if (v43 == 3)
    {
      int v254 = 0;
      int v42 = 2;
    }
    else
    {
      uint64_t v44 = 4 * v43;
      int v254 = *(_DWORD *)((char *)&unk_242EAA170 + v44);
      int v42 = *(_DWORD *)((char *)&unk_242EAA17C + v44);
    }
  }
  char v45 = 0;
  v278[2] = v42;
  v277[2] = 1;
  uint64_t v46 = 2 * (v16 == 0);
  if (!v16 && (unint64_t)(v11 - v5 + (v15 << 6) + v46) <= 0xC0)
  {
    char v45 = 0;
    uint64_t v47 = 0;
    unint64_t v48 = 2 * (v16 == 0);
    do
    {
      unint64_t v49 = 64 - v11;
      if (64 - v11 >= v48) {
        unint64_t v49 = v48;
      }
      v45 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v49)) << v47;
      v47 += v49;
      v15 += (v49 + v11) >> 6;
      uint64_t v11 = (v49 + v11) & 0x3F;
      v48 -= v49;
    }
    while (v48);
  }
  if ((v16 & 7) != 0)
  {
    unsigned int v50 = v28;
    int v253 = 0;
    int v51 = (v16 & 7) + 2;
  }
  else
  {
    unsigned int v52 = v45 & 3;
    unsigned int v50 = v28;
    if (v52 == 3)
    {
      int v253 = 0;
      int v51 = 2;
    }
    else
    {
      uint64_t v53 = 4 * v52;
      int v253 = *(_DWORD *)((char *)&unk_242EAA170 + v53);
      int v51 = *(_DWORD *)((char *)&unk_242EAA17C + v53);
    }
  }
  int v54 = v51;
  v278[3] = v51;
  v277[3] = 1;
  uint64_t v271 = 0;
  uint64_t v272 = 0;
  uint64_t v269 = 0;
  uint64_t v270 = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v277, v278, &v271, &v269);
  unsigned int v55 = v50;
  char v56 = &kDQuadParamTable[10 * v50];
  unsigned int v57 = v56[164] + 1;
  unsigned int v58 = v56[165];
  unsigned int v59 = v58 + 1;
  int v60 = v269 - v271;
  if ((int)v269 - (int)v271 >= 0)
  {
    unsigned int v61 = v35;
    int v62 = v42;
    int v63 = v261;
    if (!v60) {
      goto LABEL_76;
    }
    v59 += v60;
    goto LABEL_71;
  }
  unsigned int v64 = v50;
  int v65 = kDQuadParamTable[10 * v50 + 167];
  unsigned int v61 = v35;
  int v62 = v42;
  if (v65 < (int)v271 - (int)v269)
  {
    if (!kDQuadParamTable[10 * v64 + 168])
    {
      int v60 = -1;
      unsigned int v59 = v58;
      int v63 = v261;
LABEL_71:
      v57 += v60;
      goto LABEL_76;
    }
    unsigned int v59 = v58;
  }
  int v63 = v261;
LABEL_76:
  int v66 = v63 | 0xC;
  if (__b >= v57) {
    unint64_t v67 = v57;
  }
  else {
    unint64_t v67 = __b;
  }
  v268[0] = v67;
  if (v58) {
    LODWORD(v68) = __b;
  }
  else {
    LODWORD(v68) = 0;
  }
  if (v68 >= v59) {
    unint64_t v68 = v59;
  }
  else {
    unint64_t v68 = v68;
  }
  v267[0] = v68;
  unsigned int v69 = &kDQuadParamTable[10 * v61];
  unsigned int v70 = v69[164] + 1;
  unsigned int v71 = v69[165];
  unsigned int v72 = v71 + 1;
  int v73 = HIDWORD(v269) - HIDWORD(v271);
  if (HIDWORD(v269) - HIDWORD(v271) >= 0)
  {
    if (!v73) {
      goto LABEL_92;
    }
    v72 += v73;
    goto LABEL_88;
  }
  if (kDQuadParamTable[10 * v61 + 167] < HIDWORD(v271) - HIDWORD(v269))
  {
    if (!kDQuadParamTable[10 * v61 + 168])
    {
      int v73 = -1;
      unsigned int v72 = v71;
LABEL_88:
      v70 += v73;
      goto LABEL_92;
    }
    unsigned int v72 = v71;
  }
LABEL_92:
  int v74 = v66 + v260;
  if (v274 >= v70) {
    unint64_t v75 = v70;
  }
  else {
    unint64_t v75 = v274;
  }
  v268[1] = v75;
  if (v71) {
    LODWORD(v76) = v274;
  }
  else {
    LODWORD(v76) = 0;
  }
  if (v76 >= v72) {
    unint64_t v76 = v72;
  }
  else {
    unint64_t v76 = v76;
  }
  v267[1] = v76;
  BOOL v77 = &kDQuadParamTable[10 * v62];
  unsigned int v78 = v77[164] + 1;
  unsigned int v79 = v77[165];
  unsigned int v80 = v79 + 1;
  int v81 = v270 - v272;
  if ((int)v270 - (int)v272 >= 0)
  {
    if (!v81) {
      goto LABEL_108;
    }
    v80 += v81;
    goto LABEL_104;
  }
  if (kDQuadParamTable[10 * v62 + 167] < (int)v272 - (int)v270)
  {
    if (!kDQuadParamTable[10 * v62 + 168])
    {
      int v81 = -1;
      unsigned int v80 = v79;
LABEL_104:
      v78 += v81;
      goto LABEL_108;
    }
    unsigned int v80 = v79;
  }
LABEL_108:
  int v82 = v74 + v259;
  if (v275 >= v78) {
    unint64_t v83 = v78;
  }
  else {
    unint64_t v83 = v275;
  }
  v268[2] = v83;
  if (v79) {
    unsigned int v84 = v275;
  }
  else {
    unsigned int v84 = 0;
  }
  if (v84 >= v80) {
    unint64_t v85 = v80;
  }
  else {
    unint64_t v85 = v84;
  }
  v267[2] = v85;
  BOOL v86 = &kDQuadParamTable[10 * v54];
  LODWORD(v87) = v86[164] + 1;
  unsigned int v88 = v86[165];
  unsigned int v89 = v88 + 1;
  int v90 = HIDWORD(v270) - HIDWORD(v272);
  if (HIDWORD(v270) - HIDWORD(v272) >= 0)
  {
    if (!v90) {
      goto LABEL_124;
    }
    v89 += v90;
    goto LABEL_120;
  }
  if (kDQuadParamTable[10 * v54 + 167] < HIDWORD(v272) - HIDWORD(v270))
  {
    if (!kDQuadParamTable[10 * v54 + 168])
    {
      int v90 = -1;
      unsigned int v89 = v88;
LABEL_120:
      LODWORD(v87) = v90 + v87;
      goto LABEL_124;
    }
    unsigned int v89 = v88;
  }
LABEL_124:
  if (v276 >= v87) {
    unint64_t v87 = v87;
  }
  else {
    unint64_t v87 = v276;
  }
  v268[3] = v87;
  if (v88) {
    LODWORD(v91) = v276;
  }
  else {
    LODWORD(v91) = 0;
  }
  if (v91 >= v89) {
    unint64_t v91 = v89;
  }
  else {
    unint64_t v91 = v91;
  }
  v267[3] = v91;
  int v92 = v82 + v46;
  uint64_t v265 = 0;
  uint64_t v266 = 0;
  if (v55 || __b - 8 > 4)
  {
    if (v67 <= 0x20)
    {
      int v93 = 0;
      if (v67 && v11 - v5 + (v15 << 6) + v67 <= 0xC0)
      {
        int v93 = 0;
        uint64_t v94 = 0;
        unint64_t v95 = v67;
        do
        {
          unint64_t v96 = 64 - v11;
          if (64 - v11 >= v95) {
            unint64_t v96 = v95;
          }
          v93 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v96)) << v94;
          v94 += v96;
          unint64_t v97 = v96 + v11;
          v15 += v97 >> 6;
          uint64_t v11 = v97 & 0x3F;
          v95 -= v96;
        }
        while (v95);
      }
    }
    else
    {
      int v93 = 0;
    }
    LODWORD(v265) = v93 << (__b - v67);
    v92 += v67;
    if (v61)
    {
LABEL_149:
      if (v75 <= 0x20)
      {
        int v98 = 0;
        if (v75 && v11 - v5 + (v15 << 6) + v75 <= 0xC0)
        {
          int v98 = 0;
          uint64_t v99 = 0;
          unint64_t v100 = v75;
          do
          {
            unint64_t v101 = 64 - v11;
            if (64 - v11 >= v100) {
              unint64_t v101 = v100;
            }
            v98 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v101)) << v99;
            v99 += v101;
            v15 += (v101 + v11) >> 6;
            uint64_t v11 = (v101 + v11) & 0x3F;
            v100 -= v101;
          }
          while (v100);
        }
      }
      else
      {
        int v98 = 0;
      }
      HIDWORD(v265) = v98 << (v274 - v75);
      v92 += v75;
      if (v62) {
        goto LABEL_161;
      }
      goto LABEL_158;
    }
  }
  else
  {
    LODWORD(v265) = v256;
    if (v61) {
      goto LABEL_149;
    }
  }
  if (v274 - 8 >= 5) {
    goto LABEL_149;
  }
  HIDWORD(v265) = v255;
  if (v62) {
    goto LABEL_161;
  }
LABEL_158:
  if (v275 - 8 < 5)
  {
    LODWORD(v266) = v254;
    if (v54) {
      goto LABEL_173;
    }
    goto LABEL_170;
  }
LABEL_161:
  if (v83 <= 0x20)
  {
    int v102 = 0;
    if (v83 && v11 - v5 + (v15 << 6) + v83 <= 0xC0)
    {
      int v102 = 0;
      uint64_t v103 = 0;
      unint64_t v104 = v83;
      do
      {
        unint64_t v105 = 64 - v11;
        if (64 - v11 >= v104) {
          unint64_t v105 = v104;
        }
        v102 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v105)) << v103;
        v103 += v105;
        v15 += (v105 + v11) >> 6;
        uint64_t v11 = (v105 + v11) & 0x3F;
        v104 -= v105;
      }
      while (v104);
    }
  }
  else
  {
    int v102 = 0;
  }
  LODWORD(v266) = v102 << (v275 - v83);
  v92 += v83;
  if (v54)
  {
LABEL_173:
    if (v87 <= 0x20)
    {
      int v107 = 0;
      if (v87)
      {
        uint64_t v106 = a2;
        if (v11 - v5 + (v15 << 6) + v87 <= 0xC0)
        {
          int v107 = 0;
          uint64_t v108 = 0;
          unint64_t v109 = v87;
          do
          {
            unint64_t v110 = 64 - v11;
            if (64 - v11 >= v109) {
              unint64_t v110 = v109;
            }
            v107 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v110)) << v108;
            v108 += v110;
            v15 += (v110 + v11) >> 6;
            uint64_t v11 = (v110 + v11) & 0x3F;
            v109 -= v110;
          }
          while (v109);
        }
LABEL_183:
        HIDWORD(v266) = v107 << (v276 - v87);
        v92 += v87;
        uint64_t v263 = 0;
        uint64_t v264 = 0;
        if (v68) {
          goto LABEL_184;
        }
        goto LABEL_191;
      }
    }
    else
    {
      int v107 = 0;
    }
    uint64_t v106 = a2;
    goto LABEL_183;
  }
LABEL_170:
  if (v276 - 8 >= 5) {
    goto LABEL_173;
  }
  HIDWORD(v266) = v253;
  uint64_t v106 = a2;
  uint64_t v263 = 0;
  uint64_t v264 = 0;
  if (v68)
  {
LABEL_184:
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v111 = 0;
      uint64_t v112 = 0;
      unint64_t v113 = 3;
      do
      {
        unint64_t v114 = 64 - v11;
        if (64 - v11 >= v113) {
          unint64_t v114 = v113;
        }
        v111 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v114)) << v112;
        v112 += v114;
        v15 += (v114 + v11) >> 6;
        uint64_t v11 = (v114 + v11) & 0x3F;
        v113 -= v114;
      }
      while (v113);
    }
    else
    {
      int v111 = 0;
    }
    LODWORD(v263) = v111;
    v92 += 3;
  }
LABEL_191:
  if (v76)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v115 = 0;
      uint64_t v116 = 0;
      unint64_t v117 = 3;
      do
      {
        unint64_t v118 = 64 - v11;
        if (64 - v11 >= v117) {
          unint64_t v118 = v117;
        }
        v115 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v118)) << v116;
        v116 += v118;
        v15 += (v118 + v11) >> 6;
        uint64_t v11 = (v118 + v11) & 0x3F;
        v117 -= v118;
      }
      while (v117);
    }
    else
    {
      int v115 = 0;
    }
    HIDWORD(v263) = v115;
    v92 += 3;
  }
  if (v85)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v119 = 0;
      uint64_t v120 = 0;
      unint64_t v121 = 3;
      do
      {
        unint64_t v122 = 64 - v11;
        if (64 - v11 >= v121) {
          unint64_t v122 = v121;
        }
        v119 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v122)) << v120;
        v120 += v122;
        v15 += (v122 + v11) >> 6;
        uint64_t v11 = (v122 + v11) & 0x3F;
        v121 -= v122;
      }
      while (v121);
    }
    else
    {
      int v119 = 0;
    }
    LODWORD(v264) = v119;
    v92 += 3;
  }
  if (v91)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0xC0)
    {
      int v123 = 0;
      uint64_t v124 = 0;
      unint64_t v125 = 3;
      do
      {
        unint64_t v126 = 64 - v11;
        if (64 - v11 >= v125) {
          unint64_t v126 = v125;
        }
        v123 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v126)) << v124;
        v124 += v126;
        v15 += (v126 + v11) >> 6;
        uint64_t v11 = (v126 + v11) & 0x3F;
        v125 -= v126;
      }
      while (v125);
    }
    else
    {
      int v123 = 0;
    }
    HIDWORD(v264) = v123;
    v92 += 3;
  }
  uint64_t v127 = 0;
  unsigned int v128 = a3 & 0xFFFFFFFD;
  unsigned int v129 = 192 - v92;
  unsigned int v130 = (192 - v92) / 7u;
  unint64_t v131 = (v11 | (v15 << 6)) + v129 % 7;
  memset(v262, 0, sizeof(v262));
  do
  {
    unint64_t v134 = v131 >> 6;
    unint64_t v135 = v131 & 0x3F;
    if (v68)
    {
      if (v68 <= 0x20 && v135 - v5 + (v131 & 0xFFFFFFFFFFFFFFC0) + v68 <= 0xC0)
      {
        int v136 = 0;
        uint64_t v137 = 0;
        unint64_t v138 = v68;
        do
        {
          unint64_t v139 = 64 - v135;
          if (64 - v135 >= v138) {
            unint64_t v139 = v138;
          }
          v136 |= (unint64_t)((*(void *)(v4 + 8 * v134) >> v135) & ~(-1 << v139)) << v137;
          v137 += v139;
          unint64_t v140 = v139 + v135;
          v134 += v140 >> 6;
          unint64_t v135 = v140 & 0x3F;
          v138 -= v139;
        }
        while (v138);
      }
      else
      {
        int v136 = 0;
      }
      *((_DWORD *)v262 + v127) = v136;
    }
    if (!v76)
    {
      int v133 = v68;
      if (!v85) {
        goto LABEL_247;
      }
LABEL_239:
      if (v85 <= 0x20 && v135 - v5 + (v134 << 6) + v85 <= 0xC0)
      {
        int v146 = 0;
        uint64_t v147 = 0;
        unint64_t v148 = v85;
        do
        {
          unint64_t v149 = 64 - v135;
          if (64 - v135 >= v148) {
            unint64_t v149 = v148;
          }
          v146 |= (unint64_t)((*(void *)(v4 + 8 * v134) >> v135) & ~(-1 << v149)) << v147;
          v147 += v149;
          unint64_t v150 = v149 + v135;
          v134 += v150 >> 6;
          unint64_t v135 = v150 & 0x3F;
          v148 -= v149;
        }
        while (v148);
      }
      else
      {
        int v146 = 0;
      }
      *((_DWORD *)&v262[3] + v127 + 2) = v146;
      v133 += v85;
      goto LABEL_247;
    }
    if (v76 <= 0x20 && v135 - v5 + (v134 << 6) + v76 <= 0xC0)
    {
      int v141 = 0;
      uint64_t v142 = 0;
      unint64_t v143 = v76;
      do
      {
        unint64_t v144 = 64 - v135;
        if (64 - v135 >= v143) {
          unint64_t v144 = v143;
        }
        v141 |= (unint64_t)((*(void *)(v4 + 8 * v134) >> v135) & ~(-1 << v144)) << v142;
        v142 += v144;
        unint64_t v145 = v144 + v135;
        v134 += v145 >> 6;
        unint64_t v135 = v145 & 0x3F;
        v143 -= v144;
      }
      while (v143);
    }
    else
    {
      int v141 = 0;
    }
    *((_DWORD *)&v262[1] + v127 + 3) = v141;
    int v133 = v76 + v68;
    if (v85) {
      goto LABEL_239;
    }
LABEL_247:
    if (v91)
    {
      if (v91 > 0x20 || v135 - v5 + (v134 << 6) + v91 > 0xC0)
      {
        int v132 = 0;
      }
      else
      {
        int v132 = 0;
        uint64_t v151 = 0;
        unint64_t v152 = v91;
        do
        {
          unint64_t v153 = 64 - v135;
          if (64 - v135 >= v152) {
            unint64_t v153 = v152;
          }
          v132 |= (unint64_t)((*(void *)(v4 + 8 * v134) >> v135) & ~(-1 << v153)) << v151;
          v151 += v153;
          unint64_t v154 = v153 + v135;
          v134 += v154 >> 6;
          unint64_t v135 = v154 & 0x3F;
          v152 -= v153;
        }
        while (v152);
      }
      *((_DWORD *)&v262[5] + v127 + 1) = v132;
      v133 += v91;
    }
    unint64_t v131 = (v135 | (v134 << 6)) + v130 - v133;
    ++v127;
  }
  while (v127 != 7);
  unint64_t v155 = 0;
  uint64_t v156 = 0;
  uint64_t v157 = v106 + 112;
  do
  {
    unint64_t v162 = *(void *)&kDQuadParamTable[160 * v277[v155 / 4] + 2 + 10 * v278[v155 / 4]];
    int v163 = v267[v155 / 4];
    unint64_t v164 = v162 >> v163;
    if (v162 >> v163 <= 1) {
      unint64_t v164 = 1;
    }
    int v165 = *(unsigned int *)((char *)&__b + v155);
    unint64_t v166 = v164 >> 1;
    unint64_t v167 = (unint64_t)(1 << (v165 - v268[v155 / 4])) >> 1;
    if (v164 >> 1 < v167) {
      unint64_t v167 = v164 >> 1;
    }
    unint64_t v168 = (1 << (v165 - 1));
    unint64_t v169 = *(unsigned int *)((char *)&v265 + v155);
    unint64_t v170 = v168 - v169;
    unint64_t v171 = 1 << v165;
    int v172 = (1 << v165) - 1;
    if (v169) {
      unint64_t v173 = v167;
    }
    else {
      unint64_t v173 = 0;
    }
    BOOL v174 = v169 == v168;
    BOOL v175 = v165 == 16;
    if (v165 == 16) {
      unint64_t result = 31744;
    }
    else {
      unint64_t result = 2139095040;
    }
    if (v165 == 16) {
      unint64_t v177 = 64512;
    }
    else {
      unint64_t v177 = 4286578688;
    }
    unint64_t v178 = 2143289344;
    if (v175) {
      unint64_t v178 = 32256;
    }
    unint64_t v179 = 4290772992;
    if (v175) {
      unint64_t v179 = 65024;
    }
    unint64_t v180 = (v177 - 1);
    if (v163)
    {
      unint64_t v181 = v162 + v169;
      uint64_t v182 = ~(-1 << v163);
      int v183 = *(_DWORD *)((char *)&v263 + v155);
      unint64_t v184 = v170 / v164;
      if (!v183)
      {
        uint64_t v193 = 0;
        unint64_t v187 = v173;
        BOOL v186 = v169 == v168;
        goto LABEL_318;
      }
      uint64_t v185 = *(unsigned int *)((char *)v262 + v156);
      BOOL v186 = v184 == v185;
      if (v169 | v185)
      {
        if (v181 >= v171 && v185 == v182)
        {
          uint64_t v193 = 1;
          unint64_t v187 = v171 - 1;
          goto LABEL_318;
        }
        unint64_t v187 = v166 + v164 * v185;
      }
      else
      {
        unint64_t v187 = 0;
      }
      uint64_t v193 = 1;
LABEL_318:
      unint64_t v194 = v187 + v169;
      unint64_t v195 = v194;
      if (a3 == 4)
      {
        BOOL v196 = v194 < result || v194 >= v178;
        unint64_t v195 = (result - 1);
        if (v196)
        {
          BOOL v197 = v194 < v178 || v194 >= v168;
          unint64_t v195 = v168;
          if (v197)
          {
            if (v194 < v179 && v194 >= v177) {
              unint64_t v195 = (v177 - 1);
            }
            else {
              unint64_t v195 = v194;
            }
          }
        }
      }
      if (v195 >= v171) {
        int v199 = v172;
      }
      else {
        int v199 = v195;
      }
      if (v186) {
        int v200 = 0;
      }
      else {
        int v200 = v199 ^ v168;
      }
      if (v128 != 1) {
        int v200 = v199;
      }
      *(_DWORD *)(v157 + v155 - 112) = v200;
      if (v183 == 1)
      {
        unint64_t v201 = v173;
        BOOL v202 = v169 == v168;
      }
      else
      {
        uint64_t v203 = *(unsigned int *)(((unint64_t)v262 | (4 * v193)) + v156);
        BOOL v202 = v184 == v203;
        if (v169 | v203)
        {
          if (v181 < v171 || (unint64_t v201 = v171 - 1, v203 != v182)) {
            unint64_t v201 = v166 + v164 * v203;
          }
        }
        else
        {
          unint64_t v201 = 0;
        }
        ++v193;
      }
      unint64_t v204 = v201 + v169;
      unint64_t v205 = v204;
      if (a3 == 4)
      {
        BOOL v206 = v204 < result || v204 >= v178;
        unint64_t v205 = (result - 1);
        if (v206)
        {
          if (v204 < v178 || (unint64_t v205 = v168, v204 >= v168))
          {
            if (v204 < v179 && v204 >= v177) {
              unint64_t v205 = (v177 - 1);
            }
            else {
              unint64_t v205 = v204;
            }
          }
        }
      }
      if (v205 >= v171) {
        int v208 = v172;
      }
      else {
        int v208 = v205;
      }
      if (v202) {
        int v209 = 0;
      }
      else {
        int v209 = v208 ^ v168;
      }
      if (v128 != 1) {
        int v209 = v208;
      }
      *(_DWORD *)(v157 + v155 - 96) = v209;
      if (v183 == 2)
      {
        unint64_t v210 = v173;
        BOOL v211 = v169 == v168;
      }
      else
      {
        uint64_t v212 = *(unsigned int *)(((unint64_t)v262 | (4 * v193)) + v156);
        BOOL v211 = v184 == v212;
        if (v169 | v212)
        {
          if (v181 < v171 || (unint64_t v210 = v171 - 1, v212 != v182)) {
            unint64_t v210 = v166 + v164 * v212;
          }
        }
        else
        {
          unint64_t v210 = 0;
        }
        ++v193;
      }
      unint64_t v213 = v210 + v169;
      unint64_t v214 = v213;
      if (a3 == 4)
      {
        if (v213 < result || (unint64_t v214 = (result - 1), v213 >= v178))
        {
          if (v213 < v178 || (unint64_t v214 = v168, v213 >= v168))
          {
            if (v213 < v179 && v213 >= v177) {
              unint64_t v214 = (v177 - 1);
            }
            else {
              unint64_t v214 = v213;
            }
          }
        }
      }
      if (v214 >= v171) {
        int v216 = v172;
      }
      else {
        int v216 = v214;
      }
      if (v211) {
        int v217 = 0;
      }
      else {
        int v217 = v216 ^ v168;
      }
      if (v128 != 1) {
        int v217 = v216;
      }
      *(_DWORD *)(v157 + v155 - 80) = v217;
      if (v183 == 3)
      {
        unint64_t v218 = v173;
        BOOL v219 = v169 == v168;
      }
      else
      {
        uint64_t v220 = *(unsigned int *)((char *)v262 + 4 * v193 + v156);
        BOOL v219 = v184 == v220;
        if (v169 | v220)
        {
          if (v181 < v171 || (unint64_t v218 = v171 - 1, v220 != v182)) {
            unint64_t v218 = v166 + v164 * v220;
          }
        }
        else
        {
          unint64_t v218 = 0;
        }
        ++v193;
      }
      unint64_t v221 = v218 + v169;
      unint64_t v222 = v221;
      if (a3 == 4)
      {
        if (v221 < result || (unint64_t v222 = (result - 1), v221 >= v178))
        {
          if (v221 < v178 || (unint64_t v222 = v168, v221 >= v168))
          {
            if (v221 < v179 && v221 >= v177) {
              unint64_t v222 = (v177 - 1);
            }
            else {
              unint64_t v222 = v221;
            }
          }
        }
      }
      if (v222 >= v171) {
        int v224 = v172;
      }
      else {
        int v224 = v222;
      }
      if (v219) {
        int v225 = 0;
      }
      else {
        int v225 = v224 ^ v168;
      }
      if (v128 != 1) {
        int v225 = v224;
      }
      *(_DWORD *)(v157 + v155 - 64) = v225;
      if (v183 == 4)
      {
        unint64_t v226 = v173;
        BOOL v227 = v169 == v168;
      }
      else
      {
        uint64_t v228 = *(unsigned int *)((char *)v262 + 4 * v193 + v156);
        BOOL v227 = v184 == v228;
        if (v169 | v228)
        {
          if (v181 < v171 || (unint64_t v226 = v171 - 1, v228 != v182)) {
            unint64_t v226 = v166 + v164 * v228;
          }
        }
        else
        {
          unint64_t v226 = 0;
        }
        ++v193;
      }
      unint64_t v229 = v226 + v169;
      unint64_t v230 = v229;
      if (a3 == 4)
      {
        if (v229 < result || (unint64_t v230 = (result - 1), v229 >= v178))
        {
          if (v229 < v178 || (unint64_t v230 = v168, v229 >= v168))
          {
            if (v229 < v179 && v229 >= v177) {
              unint64_t v230 = (v177 - 1);
            }
            else {
              unint64_t v230 = v229;
            }
          }
        }
      }
      if (v230 >= v171) {
        int v232 = v172;
      }
      else {
        int v232 = v230;
      }
      if (v227) {
        int v233 = 0;
      }
      else {
        int v233 = v232 ^ v168;
      }
      if (v128 != 1) {
        int v233 = v232;
      }
      *(_DWORD *)(v157 + v155 - 48) = v233;
      if (v183 == 5)
      {
        unint64_t v234 = v173;
        BOOL v235 = v169 == v168;
      }
      else
      {
        uint64_t v236 = *(unsigned int *)((char *)v262 + 4 * v193 + v156);
        BOOL v235 = v184 == v236;
        if (v169 | v236)
        {
          if (v181 < v171 || (unint64_t v234 = v171 - 1, v236 != v182)) {
            unint64_t v234 = v166 + v164 * v236;
          }
        }
        else
        {
          unint64_t v234 = 0;
        }
        ++v193;
      }
      unint64_t v237 = v234 + v169;
      unint64_t v238 = v237;
      if (a3 == 4)
      {
        if (v237 < result || (unint64_t v238 = (result - 1), v237 >= v178))
        {
          if (v237 < v178 || (unint64_t v238 = v168, v237 >= v168))
          {
            if (v237 < v179 && v237 >= v177) {
              unint64_t v238 = (v177 - 1);
            }
            else {
              unint64_t v238 = v237;
            }
          }
        }
      }
      if (v238 >= v171) {
        int v240 = v172;
      }
      else {
        int v240 = v238;
      }
      if (v235) {
        int v241 = 0;
      }
      else {
        int v241 = v240 ^ v168;
      }
      if (v128 != 1) {
        int v241 = v240;
      }
      *(_DWORD *)(v157 + v155 - 32) = v241;
      if (v183 == 6)
      {
        unint64_t v242 = v173;
        BOOL v243 = v169 == v168;
      }
      else
      {
        uint64_t v244 = *(unsigned int *)((char *)v262 + 4 * v193 + v156);
        BOOL v243 = v184 == v244;
        if (v169 | v244)
        {
          if (v181 < v171 || (unint64_t v242 = v171 - 1, v244 != v182)) {
            unint64_t v242 = v166 + v164 * v244;
          }
        }
        else
        {
          unint64_t v242 = 0;
        }
        ++v193;
      }
      unint64_t v245 = v242 + v169;
      unint64_t v246 = v245;
      if (a3 == 4)
      {
        if (v245 < result || (unint64_t v246 = (result - 1), v245 >= v178))
        {
          if (v245 < v178 || (unint64_t v246 = v168, v245 >= v168))
          {
            if (v245 < v179 && v245 >= v177) {
              unint64_t v246 = (v177 - 1);
            }
            else {
              unint64_t v246 = v245;
            }
          }
        }
      }
      if (v246 >= v171) {
        int v248 = v172;
      }
      else {
        int v248 = v246;
      }
      if (v243) {
        int v249 = 0;
      }
      else {
        int v249 = v248 ^ v168;
      }
      if (v128 != 1) {
        int v249 = v248;
      }
      *(_DWORD *)(v157 + v155 - 16) = v249;
      if (v183 != 7)
      {
        uint64_t v250 = *(unsigned int *)((char *)v262 + 4 * v193 + v156);
        BOOL v174 = v184 == v250;
        if (v169 | v250)
        {
          if (v181 >= v171 && v250 == v182) {
            unint64_t v173 = v171 - 1;
          }
          else {
            unint64_t v173 = v166 + v164 * v250;
          }
        }
        else
        {
          unint64_t v173 = 0;
        }
      }
      unint64_t v251 = v173 + v169;
      unint64_t v159 = v173 + v169;
      if (a3 == 4)
      {
        if (v251 < result || (unint64_t v159 = (result - 1), v251 >= v178))
        {
          if (v251 < v178 || (unint64_t v159 = v168, v251 >= v168))
          {
            if (v251 < v179 && v251 >= v177) {
              unint64_t v159 = (v177 - 1);
            }
            else {
              unint64_t v159 = v173 + v169;
            }
          }
        }
      }
      if (v159 >= v171) {
        int v160 = v172;
      }
      else {
        int v160 = v159;
      }
      int v161 = v160 ^ v168;
      if (v174) {
        int v161 = 0;
      }
      if (v128 == 1) {
        int v160 = v161;
      }
      goto LABEL_269;
    }
    BOOL v189 = v178 <= v169 && v169 < v168;
    BOOL v191 = v169 >= v177 && v179 > v169;
    if (a3 == 4)
    {
      if (v169 < result || v178 <= v169)
      {
        if (v189)
        {
          if (v171 <= v168) {
            LODWORD(v192) = v172;
          }
          else {
            LODWORD(v192) = v168;
          }
        }
        else
        {
          if (v191) {
            unint64_t v192 = v180;
          }
          else {
            unint64_t v192 = *(unsigned int *)((char *)&v265 + v155);
          }
          if (v192 >= v171) {
            LODWORD(v192) = v172;
          }
        }
      }
      else if (v171 <= (result - 1))
      {
        LODWORD(v192) = v172;
      }
      else
      {
        LODWORD(v192) = result - 1;
      }
    }
    else if (v171 <= v169)
    {
      LODWORD(v192) = v172;
    }
    else
    {
      LODWORD(v192) = *(_DWORD *)((char *)&v265 + v155);
    }
    if (v164 <= v170) {
      int v160 = v192 ^ v168;
    }
    else {
      int v160 = 0;
    }
    if (v128 != 1) {
      int v160 = v192;
    }
    uint64_t v252 = v157 + v155;
    *(_DWORD *)(v252 - 112) = v160;
    *(_DWORD *)(v252 - 96) = v160;
    *(_DWORD *)(v252 - 80) = v160;
    *(_DWORD *)(v252 - 64) = v160;
    *(_DWORD *)(v252 - 48) = v160;
    *(_DWORD *)(v252 - 32) = v160;
    *(_DWORD *)(v252 - 16) = v160;
LABEL_269:
    *(_DWORD *)(v157 + v155) = v160;
    v156 += 28;
    v155 += 4;
  }
  while (v156 != 112);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(_OWORD *a1, uint64_t a2, unint64_t a3, unsigned int a4, int a5)
{
  uint64_t v618 = *MEMORY[0x263EF8340];
  if (!a4)
  {
    uint64_t result = 0;
    a1[2] = 0u;
    a1[3] = 0u;
    *a1 = 0u;
    a1[1] = 0u;
    int v12 = (_OWORD *)((char *)a1 + a2);
    v12[2] = 0u;
    v12[3] = 0u;
    *int v12 = 0u;
    v12[1] = 0u;
    int v13 = (_OWORD *)((char *)a1 + 2 * a2);
    v13[2] = 0u;
    v13[3] = 0u;
    *int v13 = 0u;
    v13[1] = 0u;
    uint64_t v14 = (_OWORD *)((char *)a1 + 2 * a2 + a2);
    v14[2] = 0u;
    v14[3] = 0u;
    *uint64_t v14 = 0u;
    v14[1] = 0u;
    return result;
  }
  char v8 = a4;
  if (a4 >= 0xF0)
  {
    if (a4) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v591, a5);
    }
    *(int16x4_t *)v599.i8 = vmovn_s32(v591);
    v599.u64[1] = (unint64_t)vmovn_s32(v593);
    *(int16x4_t *)v601.i8 = vmovn_s32(v592);
    v601.u64[1] = (unint64_t)vmovn_s32(v594);
    v603[0] = vmovn_s32(v595);
    v603[1] = vmovn_s32(v597);
    unint64_t v21 = a3 + 24;
    v604[0] = vmovn_s32(v596);
    v604[1] = vmovn_s32(v598);
    if ((v8 & 2) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v21, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v21, (uint64_t)&v591, a5);
    }
    *(int16x4_t *)v600.i8 = vmovn_s32(v591);
    v600.u64[1] = (unint64_t)vmovn_s32(v593);
    *(int16x4_t *)v602.i8 = vmovn_s32(v592);
    v602.u64[1] = (unint64_t)vmovn_s32(v594);
    v603[2] = vmovn_s32(v595);
    v603[3] = vmovn_s32(v597);
    unint64_t v22 = a3 + 48;
    v604[2] = vmovn_s32(v596);
    v604[3] = vmovn_s32(v598);
    if ((v8 & 4) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v22, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v22, (uint64_t)&v591, a5);
    }
    v605[0] = vmovn_s32(v591);
    v605[1] = vmovn_s32(v593);
    v606[0] = vmovn_s32(v592);
    v606[1] = vmovn_s32(v594);
    *(int16x4_t *)v607.i8 = vmovn_s32(v595);
    v607.u64[1] = (unint64_t)vmovn_s32(v597);
    unint64_t v23 = a3 + 72;
    *(int16x4_t *)v609.i8 = vmovn_s32(v596);
    v609.u64[1] = (unint64_t)vmovn_s32(v598);
    if ((v8 & 8) != 0) {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockFallback(v23, (uint64_t)&v591, a5);
    }
    else {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressLossyCompressedSubblockDQuad(v23, (uint64_t)&v591, a5);
    }
    v605[2] = vmovn_s32(v591);
    v605[3] = vmovn_s32(v593);
    v606[2] = vmovn_s32(v592);
    v606[3] = vmovn_s32(v594);
    *(int16x4_t *)v608.i8 = vmovn_s32(v595);
    v608.u64[1] = (unint64_t)vmovn_s32(v597);
    unint64_t v24 = (unint64_t *)(a1 + 2);
    unint64_t v25 = -32;
    *(int16x4_t *)v610.i8 = vmovn_s32(v596);
    v610.u64[1] = (unint64_t)vmovn_s32(v598);
    do
    {
      unint64_t v26 = (((unint64_t)(v603[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v603[v25 / 8]) << 22) | ((unint64_t)WORD2(v603[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v603[v25 / 8]) << 54);
      *(v24 - 4) = (((unint64_t)(v601.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v601.u16[v25 / 2 + 1] << 22) | ((unint64_t)v601.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v601.u16[v25 / 2 + 3] << 54);
      *(v24 - 3) = v26;
      unint64_t v27 = (((unint64_t)(v605[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v605[v25 / 8]) << 22) | ((unint64_t)WORD2(v605[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v605[v25 / 8]) << 54);
      *(v24 - 2) = (((unint64_t)(v604[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v604[v25 / 8]) << 22) | ((unint64_t)WORD2(v604[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v604[v25 / 8]) << 54);
      *(v24 - 1) = v27;
      unint64_t v28 = (((unint64_t)(v607.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v607.u16[v25 / 2 + 1] << 22) | ((unint64_t)v607.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v607.u16[v25 / 2 + 3] << 54);
      unint64_t *v24 = (((unint64_t)(v606[v25 / 8] & 0x3FF) << 6) | ((unint64_t)WORD1(v606[v25 / 8]) << 22) | ((unint64_t)WORD2(v606[v25 / 8]) << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)HIWORD(v606[v25 / 8]) << 54);
      v24[1] = v28;
      unint64_t v29 = (((unint64_t)(v611.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v611.u16[v25 / 2 + 1] << 22) | ((unint64_t)v611.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v611.u16[v25 / 2 + 3] << 54);
      v24[2] = (((unint64_t)(v609.i16[v25 / 2] & 0x3FF) << 6) | ((unint64_t)v609.u16[v25 / 2 + 1] << 22) | ((unint64_t)v609.u16[v25 / 2 + 2] << 38)) & 0xFFC0FFC0FFC0 | ((unint64_t)v609.u16[v25 / 2 + 3] << 54);
      v24[3] = v29;
      unint64_t v24 = (unint64_t *)((char *)v24 + a2);
      v25 += 8;
    }
    while (v25);
    return 96;
  }
  if (a4 != 159)
  {
    if (a4 == 4)
    {
      uint64x2_t v15 = (uint64x2_t)vld1q_dup_f64((const double *)a3);
      int8x16_t v16 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v15, (uint64x2_t)xmmword_242EA7AE0), (int8x16_t)xmmword_242EA7B10), vandq_s8((int8x16_t)vshlq_u64(v15, (uint64x2_t)xmmword_242EA7AF0), (int8x16_t)xmmword_242EA7B00));
      int64x2_t v17 = vdupq_n_s64(*(void *)&vorr_s8(*(int8x8_t *)v16.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL)));
      *a1 = v17;
      a1[1] = v17;
      a1[2] = v17;
      a1[3] = v17;
      unint64_t v18 = (int64x2_t *)((char *)a1 + a2);
      *unint64_t v18 = v17;
      v18[1] = v17;
      v18[2] = v17;
      v18[3] = v17;
      unint64_t v19 = (int64x2_t *)((char *)a1 + 2 * a2);
      *unint64_t v19 = v17;
      v19[1] = v17;
      v19[2] = v17;
      v19[3] = v17;
      uint64_t v20 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
      *uint64_t v20 = v17;
      v20[1] = v17;
      v20[2] = v17;
      v20[3] = v17;
      return 5;
    }
    v592.i8[8] = 0;
    v591.i64[0] = 8 * (a3 & 7);
    v591.i64[1] = a3 & 0xFFFFFFFFFFFFFFF8;
    v592.i64[0] = v591.i64[0] | 0x300;
    uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)19,AGX::AppleCompressionGen2::Vec<short>>((uint64_t)&v612, (uint64_t)v617, (uint64_t)&v611, (unint64_t *)&v591, a4);
    v53.i64[0] = 0x3000300030003;
    v53.i64[1] = 0x3000300030003;
    int8x16_t v54 = v612;
    int16x8_t v55 = (int16x8_t)vandq_s8(v612, v53);
    int8x16_t v56 = vbicq_s8(v617[0], (int8x16_t)vceqq_s16(v55, (int16x8_t)v53));
    v617[0] = v56;
    int16x8_t v613 = (int16x8_t)v56;
    int16x8_t v614 = (int16x8_t)v56;
    int16x8_t v615 = (int16x8_t)v56;
    int16x8_t v616 = (int16x8_t)v56;
    v57.i64[0] = 0x202020202020202;
    v57.i64[1] = 0x202020202020202;
    int8x16_t v58 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v612.i8, (int16x4_t)0x4000400040004)), v57);
    unint64_t v59 = v591.i64[0];
    int16x8_t v589 = v55;
    if (vmaxvq_s8(v58) < 1)
    {
      v231.i64[0] = -1;
      v231.i64[1] = -1;
      int8x16_t v587 = v231;
      int8x16_t v588 = v231;
      int8x16_t v585 = v231;
      int8x16_t v586 = v231;
    }
    else
    {
      int8x16_t v60 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v58, v58));
      int8x16_t v61 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v60, (int16x8_t)v60));
      unint64_t v62 = vpaddq_s32((int32x4_t)v61, (int32x4_t)v61).u64[0];
      v63.i64[0] = v62;
      v63.i64[1] = HIDWORD(v62);
      int64x2_t v64 = v63;
      unint64_t v65 = vaddvq_s64(v63);
      unint64_t v66 = v65;
      unint64_t v67 = v591.i64[0] + v65;
      if (v592.i64[0]) {
        BOOL v68 = v592.i64[0] >= v67;
      }
      else {
        BOOL v68 = 1;
      }
      int v69 = !v68;
      if (v65 <= 0x80 && v69 == 0)
      {
        v52.i64[0] = 63;
        int v232 = (int64x2_t *)(v591.i64[1] + 8 * ((unint64_t)v591.i64[0] >> 6));
        int64x2_t v233 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v591.u64[0], v52).i64[0], 0), vzip1q_s64((int64x2_t)0, v64));
        int8x16_t v71 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v232, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v233)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v232->i64[0], 0), (uint64x2_t)vnegq_s64(v233)));
        if ((v591.i8[0] & 0x3F) + v66 >= 0x81) {
          int8x16_t v71 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v232[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v233)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v232[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v233))), v71);
        }
        v591.i64[0] = v67;
        unint64_t v59 = v67;
      }
      else
      {
        v592.i8[8] = 1;
        int8x16_t v71 = 0uLL;
      }
      int32x2_t v234 = vzip1_s32(*(int32x2_t *)v61.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL));
      v235.i64[0] = v234.u32[0];
      v235.i64[1] = v234.u32[1];
      int64x2_t v236 = (int64x2_t)vshlq_u64((uint64x2_t)v71, (uint64x2_t)vnegq_s64(v235));
      *(int32x2_t *)v71.i8 = vmovn_s64((int64x2_t)v71);
      *(int32x2_t *)v236.i8 = vmovn_s64(v236);
      int16x8_t v237 = (int16x8_t)vzip1q_s32((int32x4_t)v71, (int32x4_t)v236);
      int16x8_t v238 = (int16x8_t)vshlq_u32((uint32x4_t)v237, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v60.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL)))));
      *(int16x4_t *)v237.i8 = vmovn_s32((int32x4_t)v237);
      *(int16x4_t *)v238.i8 = vmovn_s32((int32x4_t)v238);
      int8x16_t v239 = (int8x16_t)vzip1q_s16(v237, v238);
      int8x16_t v240 = (int8x16_t)vshlq_u16((uint16x8_t)v239, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v58.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL)))));
      *(int8x8_t *)v239.i8 = vmovn_s16((int16x8_t)v239);
      *(int8x8_t *)v240.i8 = vmovn_s16((int16x8_t)v240);
      int8x16_t v241 = vzip1q_s8(v239, v240);
      v240.i64[0] = 0x101010101010101;
      v240.i64[1] = 0x101010101010101;
      int8x16_t v242 = vshlq_s8(v240, v58);
      v240.i64[0] = -1;
      v240.i64[1] = -1;
      int32x4_t v243 = (int32x4_t)vqtbl1q_s8(vandq_s8(v241, vaddq_s8(v242, v240)), (int8x16_t)xmmword_242EA7560);
      *(int32x2_t *)v241.i8 = vdup_lane_s32(*(int32x2_t *)v243.i8, 0);
      *(int32x2_t *)v240.i8 = vdup_lane_s32(*(int32x2_t *)v243.i8, 1);
      int8x8_t v244 = (int8x8_t)vdupq_laneq_s32(v243, 2).u64[0];
      v243.i64[0] = vdupq_laneq_s32(v243, 3).u64[0];
      int16x8_t v613 = vsubw_s8(v613, *(int8x8_t *)v241.i8);
      int16x8_t v614 = vsubw_s8(v614, *(int8x8_t *)v240.i8);
      int16x8_t v615 = vsubw_s8(v615, v244);
      int16x8_t v616 = vsubw_s8(v616, *(int8x8_t *)v243.i8);
      int8x16_t v587 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v241.i8));
      int8x16_t v585 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v240.i8));
      int8x16_t v586 = (int8x16_t)vmovl_s8(vceqz_s8(v244));
      int8x16_t v588 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v243.i8));
    }
    v245.i64[0] = 0x8000800080008;
    v245.i64[1] = 0x8000800080008;
    int8x16_t v246 = 0uLL;
    int8x16_t v247 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v612, v245), (int8x16_t)0, 8uLL), v56);
    int8x16_t v248 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v247, (int16x8_t)v247));
    unint64_t v249 = vpaddq_s32((int32x4_t)v248, (int32x4_t)v248).u64[0];
    v250.i64[0] = v249;
    v250.i64[1] = HIDWORD(v249);
    int64x2_t v251 = v250;
    unint64_t v252 = vaddvq_s64(v250);
    if (v592.i64[0]) {
      BOOL v253 = v592.i64[0] >= v59 + v252;
    }
    else {
      BOOL v253 = 1;
    }
    int v254 = !v253;
    if (v252 <= 0x80 && v254 == 0)
    {
      int64x2_t v256 = vaddq_s64(vdupq_n_s64(v59 & 0x3F), vzip1q_s64((int64x2_t)0, v251));
      unint64_t v257 = (int64x2_t *)(v591.i64[1] + 8 * (v59 >> 6));
      int8x16_t v246 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v257, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v256)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v257->i64[0], 0), (uint64x2_t)vnegq_s64(v256)));
      if ((v59 & 0x3F) + v252 >= 0x81) {
        int8x16_t v246 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v257[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v256)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v257[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v256))), v246);
      }
      v59 += v252;
    }
    else
    {
      v592.i8[8] = 1;
    }
    int v258 = v612.i8[0] & 3;
    if (v258 != 2) {
      goto LABEL_98;
    }
    unint64_t v259 = v59 + 8;
    if (v592.i64[0])
    {
      if (v592.i64[0] >= v259)
      {
        unint64_t v260 = v59 + 16;
        v59 += 8;
      }
      else
      {
        v592.i8[8] = 1;
        unint64_t v260 = v59 + 8;
      }
      if (v592.i64[0] < v260)
      {
        v592.i8[8] = 1;
LABEL_98:
        int8x16_t v261 = 0uLL;
        int8x16_t v262 = vextq_s8((int8x16_t)0, (int8x16_t)v613, 8uLL);
        int8x16_t v263 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v262, (int16x8_t)v262));
        unint64_t v264 = vpaddq_s32((int32x4_t)v263, (int32x4_t)v263).u64[0];
        v265.i64[0] = v264;
        v265.i64[1] = HIDWORD(v264);
        int64x2_t v266 = v265;
        unint64_t v267 = vaddvq_s64(v265);
        unint64_t v268 = v59 + v267;
        if (v592.i64[0]) {
          BOOL v269 = v592.i64[0] >= v268;
        }
        else {
          BOOL v269 = 1;
        }
        int v270 = !v269;
        if (v267 > 0x80 || v270)
        {
          int v275 = 1;
          uint64_t v273 = v591.i64[1];
        }
        else
        {
          unint64_t v271 = v59 & 0x3F;
          int64x2_t v272 = vaddq_s64(vdupq_n_s64(v271), vzip1q_s64((int64x2_t)0, v266));
          uint64_t v273 = v591.i64[1];
          unsigned int v274 = (int64x2_t *)(v591.i64[1] + 8 * (v59 >> 6));
          int8x16_t v261 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v274, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v272)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v274->i64[0], 0), (uint64x2_t)vnegq_s64(v272)));
          if (v271 + v267 >= 0x81) {
            int8x16_t v261 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v274[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v272)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v274[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v272))), v261);
          }
          int v275 = v592.u8[8];
          unint64_t v59 = v268;
        }
        v276.i64[0] = 0xF000F000F000FLL;
        v276.i64[1] = 0xF000F000F000FLL;
        v277.i64[0] = 0x10001000100010;
        v277.i64[1] = 0x10001000100010;
        int8x16_t v278 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v613, v613));
        unint64_t v279 = vpaddq_s32((int32x4_t)v278, (int32x4_t)v278).u64[0];
        v280.i64[0] = v279;
        v280.i64[1] = HIDWORD(v279);
        int64x2_t v281 = v280;
        unint64_t v282 = vaddvq_s64(v280);
        unint64_t v283 = v282;
        unint64_t v284 = v59 + v282;
        if (v592.i64[0]) {
          BOOL v285 = v592.i64[0] >= v284;
        }
        else {
          BOOL v285 = 1;
        }
        char v286 = !v285;
        int8x16_t v287 = 0uLL;
        if (v282 > 0x80 || (v286 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v284 = v59;
          int8x16_t v291 = 0uLL;
        }
        else
        {
          unint64_t v288 = v59 & 0x3F;
          int64x2_t v289 = vaddq_s64(vdupq_n_s64(v288), vzip1q_s64((int64x2_t)0, v281));
          unint64_t v290 = (int64x2_t *)(v273 + 8 * (v59 >> 6));
          int8x16_t v291 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v290, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v289)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v290->i64[0], 0), (uint64x2_t)vnegq_s64(v289)));
          if (v288 + v283 >= 0x81) {
            int8x16_t v291 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v290[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v289)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v290[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v289))), v291);
          }
        }
        int32x2_t v292 = vzip1_s32(*(int32x2_t *)v278.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL));
        v293.i64[0] = v292.u32[0];
        v293.i64[1] = v292.u32[1];
        uint64x2_t v294 = (uint64x2_t)vnegq_s64(v293);
        int64x2_t v295 = (int64x2_t)vshlq_u64((uint64x2_t)v291, v294);
        *(int32x2_t *)v291.i8 = vmovn_s64((int64x2_t)v291);
        *(int32x2_t *)v295.i8 = vmovn_s64(v295);
        int16x8_t v296 = (int16x8_t)vzip1q_s32((int32x4_t)v291, (int32x4_t)v295);
        uint32x4_t v297 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v613.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v613, (int8x16_t)v613, 8uLL))));
        int16x8_t v298 = (int16x8_t)vshlq_u32((uint32x4_t)v296, v297);
        *(int16x4_t *)v296.i8 = vmovn_s32((int32x4_t)v296);
        *(int16x4_t *)v298.i8 = vmovn_s32((int32x4_t)v298);
        int16x8_t v299 = vzip1q_s16(v296, v298);
        int16x8_t v300 = vaddq_s16(v613, v276);
        int16x8_t v301 = vsubq_s16((int16x8_t)v277, v613);
        int16x8_t v302 = vshlq_s16(vshlq_s16(v299, v301), v300);
        int16x8_t v600 = v302;
        unint64_t v303 = v284 + v283;
        if (v592.i64[0]) {
          BOOL v304 = v592.i64[0] >= v303;
        }
        else {
          BOOL v304 = 1;
        }
        char v305 = !v304;
        if (v283 > 0x80 || (v305 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v303 = v284;
        }
        else
        {
          unint64_t v306 = v284 & 0x3F;
          int64x2_t v307 = vaddq_s64(vdupq_n_s64(v306), vzip1q_s64((int64x2_t)0, v281));
          unsigned int v308 = (int64x2_t *)(v273 + 8 * (v284 >> 6));
          int8x16_t v287 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v308, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v307)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v308->i64[0], 0), (uint64x2_t)vnegq_s64(v307)));
          if (v306 + v283 >= 0x81) {
            int8x16_t v287 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v308[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v307)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v308[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v307))), v287);
          }
        }
        int64x2_t v309 = (int64x2_t)vshlq_u64((uint64x2_t)v287, v294);
        *(int32x2_t *)v287.i8 = vmovn_s64((int64x2_t)v287);
        *(int32x2_t *)v309.i8 = vmovn_s64(v309);
        int16x8_t v310 = (int16x8_t)vzip1q_s32((int32x4_t)v287, (int32x4_t)v309);
        int16x8_t v311 = (int16x8_t)vshlq_u32((uint32x4_t)v310, v297);
        *(int16x4_t *)v310.i8 = vmovn_s32((int32x4_t)v310);
        *(int16x4_t *)v311.i8 = vmovn_s32((int32x4_t)v311);
        int16x8_t v312 = vshlq_s16(vshlq_s16(vzip1q_s16(v310, v311), v301), v300);
        int16x8_t v601 = v312;
        unint64_t v313 = v303 + v283;
        if (v592.i64[0]) {
          BOOL v314 = v592.i64[0] >= v313;
        }
        else {
          BOOL v314 = 1;
        }
        char v315 = !v314;
        int8x16_t v316 = 0uLL;
        if (v283 > 0x80 || (v315 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v313 = v303;
          int8x16_t v320 = 0uLL;
        }
        else
        {
          unint64_t v317 = v303 & 0x3F;
          int64x2_t v318 = vaddq_s64(vdupq_n_s64(v317), vzip1q_s64((int64x2_t)0, v281));
          unsigned int v319 = (int64x2_t *)(v273 + 8 * (v303 >> 6));
          int8x16_t v320 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v319, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v318)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v319->i64[0], 0), (uint64x2_t)vnegq_s64(v318)));
          if (v317 + v283 >= 0x81) {
            int8x16_t v320 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v319[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v318)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v319[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v318))), v320);
          }
        }
        int64x2_t v321 = (int64x2_t)vshlq_u64((uint64x2_t)v320, v294);
        *(int32x2_t *)v320.i8 = vmovn_s64((int64x2_t)v320);
        *(int32x2_t *)v321.i8 = vmovn_s64(v321);
        int16x8_t v322 = (int16x8_t)vzip1q_s32((int32x4_t)v320, (int32x4_t)v321);
        int16x8_t v323 = (int16x8_t)vshlq_u32((uint32x4_t)v322, v297);
        *(int16x4_t *)v322.i8 = vmovn_s32((int32x4_t)v322);
        *(int16x4_t *)v323.i8 = vmovn_s32((int32x4_t)v323);
        int16x8_t v324 = vshlq_s16(vshlq_s16(vzip1q_s16(v322, v323), v301), v300);
        int16x8_t v602 = v324;
        int8x16_t v325 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v614, v614));
        v322.i64[0] = vpaddq_s32((int32x4_t)v325, (int32x4_t)v325).u64[0];
        v326.i64[0] = v322.u32[0];
        v326.i64[1] = v322.u32[1];
        int64x2_t v327 = v326;
        unint64_t v328 = vaddvq_s64(v326);
        unint64_t v329 = v328;
        unint64_t v330 = v313 + v328;
        if (v592.i64[0]) {
          BOOL v331 = v592.i64[0] >= v330;
        }
        else {
          BOOL v331 = 1;
        }
        char v332 = !v331;
        if (v328 > 0x80 || (v332 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v330 = v313;
        }
        else
        {
          unint64_t v333 = v313 & 0x3F;
          int64x2_t v334 = vaddq_s64(vdupq_n_s64(v333), vzip1q_s64((int64x2_t)0, v327));
          int16x8_t v335 = (int64x2_t *)(v273 + 8 * (v313 >> 6));
          int8x16_t v316 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v335, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v334)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v335->i64[0], 0), (uint64x2_t)vnegq_s64(v334)));
          if (v333 + v329 >= 0x81) {
            int8x16_t v316 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v335[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v334)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v335[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v334))), v316);
          }
        }
        unint64_t v336 = v330 + v329;
        if (v592.i64[0]) {
          BOOL v337 = v592.i64[0] >= v336;
        }
        else {
          BOOL v337 = 1;
        }
        char v338 = !v337;
        int8x16_t v339 = 0uLL;
        if (v329 > 0x80 || (v338 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v336 = v330;
          int8x16_t v343 = 0uLL;
        }
        else
        {
          unint64_t v340 = v330 & 0x3F;
          int64x2_t v341 = vaddq_s64(vdupq_n_s64(v340), vzip1q_s64((int64x2_t)0, v327));
          uint64x2_t v342 = (int64x2_t *)(v273 + 8 * (v330 >> 6));
          int8x16_t v343 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v342, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v341)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v342->i64[0], 0), (uint64x2_t)vnegq_s64(v341)));
          if (v340 + v329 >= 0x81) {
            int8x16_t v343 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v342[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v341)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v342[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v341))), v343);
          }
        }
        unint64_t v344 = v336 + v329;
        if (v592.i64[0]) {
          BOOL v345 = v592.i64[0] >= v344;
        }
        else {
          BOOL v345 = 1;
        }
        char v346 = !v345;
        if (v329 > 0x80 || (v346 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v344 = v336;
        }
        else
        {
          int64x2_t v347 = vaddq_s64(vdupq_n_s64(v336 & 0x3F), vzip1q_s64((int64x2_t)0, v327));
          unint64_t v348 = (int64x2_t *)(v273 + 8 * (v336 >> 6));
          int8x16_t v339 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v348, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v347)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v348->i64[0], 0), (uint64x2_t)vnegq_s64(v347)));
          if ((v336 & 0x3F) + v329 >= 0x81) {
            int8x16_t v339 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v348[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v347)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v348[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v347))), v339);
          }
        }
        unint64_t v349 = v344 + v329;
        if (v592.i64[0]) {
          BOOL v350 = v592.i64[0] >= v349;
        }
        else {
          BOOL v350 = 1;
        }
        char v351 = !v350;
        int8x16_t v352 = 0uLL;
        if (v329 > 0x80 || (v351 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v349 = v344;
          int8x16_t v355 = 0uLL;
        }
        else
        {
          int64x2_t v353 = vaddq_s64(vdupq_n_s64(v344 & 0x3F), vzip1q_s64((int64x2_t)0, v327));
          uint16x8_t v354 = (int64x2_t *)(v273 + 8 * (v344 >> 6));
          int8x16_t v355 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v354, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v353)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v354->i64[0], 0), (uint64x2_t)vnegq_s64(v353)));
          if ((v344 & 0x3F) + v329 >= 0x81) {
            int8x16_t v355 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v354[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v353)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v354[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v353))), v355);
          }
        }
        int8x16_t v356 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v615, v615));
        unint64_t v357 = vpaddq_s32((int32x4_t)v356, (int32x4_t)v356).u64[0];
        v358.i64[0] = v357;
        v358.i64[1] = HIDWORD(v357);
        int64x2_t v359 = v358;
        unint64_t v360 = vaddvq_s64(v358);
        unint64_t v361 = v360;
        unint64_t v362 = v349 + v360;
        if (v592.i64[0]) {
          BOOL v363 = v592.i64[0] >= v362;
        }
        else {
          BOOL v363 = 1;
        }
        char v364 = !v363;
        if (v360 > 0x80 || (v364 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v362 = v349;
        }
        else
        {
          unint64_t v365 = v349 & 0x3F;
          int64x2_t v366 = vaddq_s64(vdupq_n_s64(v365), vzip1q_s64((int64x2_t)0, v359));
          uint64_t v367 = (int64x2_t *)(v273 + 8 * (v349 >> 6));
          int8x16_t v352 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v367, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v366)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v367->i64[0], 0), (uint64x2_t)vnegq_s64(v366)));
          if (v365 + v361 >= 0x81) {
            int8x16_t v352 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v367[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v366)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v367[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v366))), v352);
          }
        }
        unint64_t v368 = v362 + v361;
        if (v592.i64[0]) {
          BOOL v369 = v592.i64[0] >= v368;
        }
        else {
          BOOL v369 = 1;
        }
        char v370 = !v369;
        int8x16_t v371 = 0uLL;
        if (v361 > 0x80 || (v370 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v368 = v362;
          int8x16_t v375 = 0uLL;
        }
        else
        {
          unint64_t v372 = v362 & 0x3F;
          int64x2_t v373 = vaddq_s64(vdupq_n_s64(v372), vzip1q_s64((int64x2_t)0, v359));
          int32x4_t v374 = (int64x2_t *)(v273 + 8 * (v362 >> 6));
          int8x16_t v375 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v374, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v373)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v374->i64[0], 0), (uint64x2_t)vnegq_s64(v373)));
          if (v372 + v361 >= 0x81) {
            int8x16_t v375 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v374[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v373)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v374[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v373))), v375);
          }
        }
        unint64_t v376 = v368 + v361;
        if (v592.i64[0]) {
          BOOL v377 = v592.i64[0] >= v376;
        }
        else {
          BOOL v377 = 1;
        }
        char v378 = !v377;
        if (v361 > 0x80 || (v378 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v376 = v368;
        }
        else
        {
          unint64_t v379 = v368 & 0x3F;
          int64x2_t v380 = vaddq_s64(vdupq_n_s64(v379), vzip1q_s64((int64x2_t)0, v359));
          int64x2_t v381 = (int64x2_t *)(v273 + 8 * (v368 >> 6));
          int8x16_t v371 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v381, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v380)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v381->i64[0], 0), (uint64x2_t)vnegq_s64(v380)));
          if (v379 + v361 >= 0x81) {
            int8x16_t v371 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v381[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v380)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v381[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v380))), v371);
          }
        }
        unint64_t v382 = v376 + v361;
        if (v592.i64[0]) {
          BOOL v383 = v592.i64[0] >= v382;
        }
        else {
          BOOL v383 = 1;
        }
        char v384 = !v383;
        int8x16_t v385 = 0uLL;
        if (v361 > 0x80 || (v384 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v382 = v376;
          int8x16_t v389 = 0uLL;
        }
        else
        {
          unint64_t v386 = v376 & 0x3F;
          int64x2_t v387 = vaddq_s64(vdupq_n_s64(v386), vzip1q_s64((int64x2_t)0, v359));
          uint16x8_t v388 = (int64x2_t *)(v273 + 8 * (v376 >> 6));
          int8x16_t v389 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v388, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v387)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v388->i64[0], 0), (uint64x2_t)vnegq_s64(v387)));
          if (v386 + v361 >= 0x81) {
            int8x16_t v389 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v388[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v387)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v388[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v387))), v389);
          }
        }
        int8x16_t v390 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v616, v616));
        unint64_t v391 = vpaddq_s32((int32x4_t)v390, (int32x4_t)v390).u64[0];
        v392.i64[0] = v391;
        v392.i64[1] = HIDWORD(v391);
        int64x2_t v393 = v392;
        unint64_t v394 = vaddvq_s64(v392);
        unint64_t v395 = v394;
        unint64_t v396 = v382 + v394;
        if (v592.i64[0]) {
          BOOL v397 = v592.i64[0] >= v396;
        }
        else {
          BOOL v397 = 1;
        }
        char v398 = !v397;
        if (v394 > 0x80 || (v398 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v396 = v382;
        }
        else
        {
          unint64_t v399 = v382 & 0x3F;
          int64x2_t v400 = vaddq_s64(vdupq_n_s64(v399), vzip1q_s64((int64x2_t)0, v393));
          unint64_t v401 = (int64x2_t *)(v273 + 8 * (v382 >> 6));
          int8x16_t v385 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v401, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v400)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v401->i64[0], 0), (uint64x2_t)vnegq_s64(v400)));
          if (v399 + v395 >= 0x81) {
            int8x16_t v385 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v401[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v400)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v401[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v400))), v385);
          }
        }
        unint64_t v402 = v396 + v395;
        if (v592.i64[0]) {
          BOOL v403 = v592.i64[0] >= v402;
        }
        else {
          BOOL v403 = 1;
        }
        char v404 = !v403;
        int8x16_t v405 = 0uLL;
        if (v395 > 0x80 || (v404 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v402 = v396;
          int8x16_t v409 = 0uLL;
        }
        else
        {
          unint64_t v406 = v396 & 0x3F;
          int64x2_t v407 = vaddq_s64(vdupq_n_s64(v406), vzip1q_s64((int64x2_t)0, v393));
          int32x4_t v408 = (int64x2_t *)(v273 + 8 * (v396 >> 6));
          int64x2_t v277 = vnegq_s64(v407);
          int8x16_t v409 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v408, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v407)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v408->i64[0], 0), (uint64x2_t)v277));
          if (v406 + v395 >= 0x81)
          {
            int64x2_t v277 = vdupq_n_s64(0xC0uLL);
            int8x16_t v409 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v408[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v407)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v408[1], 1), (uint64x2_t)vsubq_s64(v277, v407))), v409);
          }
        }
        unint64_t v410 = v402 + v395;
        if (v592.i64[0]) {
          BOOL v411 = v592.i64[0] >= v410;
        }
        else {
          BOOL v411 = 1;
        }
        char v412 = !v411;
        if (v395 > 0x80 || (v412 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v410 = v402;
        }
        else
        {
          unint64_t v413 = v402 & 0x3F;
          int64x2_t v414 = vaddq_s64(vdupq_n_s64(v413), vzip1q_s64((int64x2_t)0, v393));
          int64x2_t v415 = (int64x2_t *)(v273 + 8 * (v402 >> 6));
          int64x2_t v277 = vsubq_s64(vdupq_n_s64(0x40uLL), v414);
          int8x16_t v405 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v415, 1), (uint64x2_t)v277), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v415->i64[0], 0), (uint64x2_t)vnegq_s64(v414)));
          if (v413 + v395 >= 0x81)
          {
            int64x2_t v277 = vdupq_n_s64(0xC0uLL);
            int8x16_t v405 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v415[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v414)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v415[1], 1), (uint64x2_t)vsubq_s64(v277, v414))), v405);
          }
        }
        unint64_t v416 = v410 + v395;
        if (v592.i64[0]) {
          BOOL v417 = v592.i64[0] >= v416;
        }
        else {
          BOOL v417 = 1;
        }
        char v418 = !v417;
        int8x16_t v419 = 0uLL;
        if (v395 > 0x80 || (v418 & 1) != 0)
        {
          int v275 = 1;
          unint64_t v416 = v410;
        }
        else
        {
          int64x2_t v420 = vaddq_s64(vdupq_n_s64(v410 & 0x3F), vzip1q_s64((int64x2_t)0, v393));
          uint16x8_t v421 = (int64x2_t *)(v273 + 8 * (v410 >> 6));
          int64x2_t v277 = vdupq_n_s64(0x40uLL);
          int8x16_t v419 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v421, 1), (uint64x2_t)vsubq_s64(v277, v420)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v421->i64[0], 0), (uint64x2_t)vnegq_s64(v420)));
          if ((v410 & 0x3F) + v395 >= 0x81)
          {
            int64x2_t v277 = vdupq_n_s64(0xC0uLL);
            int8x16_t v419 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v421[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v420)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v421[1], 1), (uint64x2_t)vsubq_s64(v277, v420))), v419);
          }
        }
        if (v275 || v592.i64[0] + 8 * result - v416 - 768 >= 9 || v258 == 2)
        {
          uint64_t result = 0;
          int64x2_t v422 = vdupq_n_s64(0xFFFFF003FFuLL);
          *a1 = v422;
          a1[1] = v422;
          a1[2] = v422;
          a1[3] = v422;
          int32x4_t v423 = (int64x2_t *)((char *)a1 + a2);
          *int32x4_t v423 = v422;
          v423[1] = v422;
          v423[2] = v422;
          v423[3] = v422;
          int32x4_t v424 = (int64x2_t *)((char *)a1 + 2 * a2);
          *int32x4_t v424 = v422;
          v424[1] = v422;
          v424[2] = v422;
          v424[3] = v422;
          int32x4_t v425 = (int64x2_t *)((char *)a1 + 2 * a2 + a2);
          int64x2_t *v425 = v422;
          v425[1] = v422;
          v425[2] = v422;
          v425[3] = v422;
        }
        else
        {
          int32x2_t v426 = vzip1_s32(*(int32x2_t *)v248.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v248, v248, 8uLL));
          int32x2_t v427 = vzip1_s32(*(int32x2_t *)v263.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v263, v263, 8uLL));
          *(int32x2_t *)v248.i8 = vzip1_s32(*(int32x2_t *)v325.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v325, v325, 8uLL));
          int32x2_t v428 = vzip1_s32(*(int32x2_t *)v356.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v356, v356, 8uLL));
          int32x4_t v429 = (int32x4_t)vextq_s8(v390, v390, 8uLL);
          int32x2_t v430 = vzip1_s32(*(int32x2_t *)v390.i8, *(int32x2_t *)v429.i8);
          v431.i64[0] = v426.u32[0];
          v431.i64[1] = v426.u32[1];
          int64x2_t v432 = (int64x2_t)vshlq_u64((uint64x2_t)v246, (uint64x2_t)vnegq_s64(v431));
          *(int32x2_t *)v246.i8 = vmovn_s64((int64x2_t)v246);
          *(int32x2_t *)v432.i8 = vmovn_s64(v432);
          int16x8_t v433 = (int16x8_t)vzip1q_s32((int32x4_t)v246, (int32x4_t)v432);
          v431.i64[0] = v427.u32[0];
          v431.i64[1] = v427.u32[1];
          int64x2_t v434 = (int64x2_t)vshlq_u64((uint64x2_t)v261, (uint64x2_t)vnegq_s64(v431));
          *(int32x2_t *)v429.i8 = vmovn_s64((int64x2_t)v261);
          *(int32x2_t *)v434.i8 = vmovn_s64(v434);
          int32x4_t v435 = vzip1q_s32(v429, (int32x4_t)v434);
          v431.i64[0] = v248.u32[0];
          v431.i64[1] = v248.u32[1];
          int32x4_t v436 = (int32x4_t)vnegq_s64(v431);
          int64x2_t v437 = (int64x2_t)vshlq_u64((uint64x2_t)v316, (uint64x2_t)v436);
          *(int32x2_t *)v277.i8 = vmovn_s64((int64x2_t)v316);
          *(int32x2_t *)v437.i8 = vmovn_s64(v437);
          int16x8_t v438 = (int16x8_t)vzip1q_s32((int32x4_t)v277, (int32x4_t)v437);
          int64x2_t v439 = (int64x2_t)vshlq_u64((uint64x2_t)v343, (uint64x2_t)v436);
          *(int32x2_t *)v248.i8 = vmovn_s64((int64x2_t)v343);
          *(int32x2_t *)v439.i8 = vmovn_s64(v439);
          int16x8_t v440 = (int16x8_t)vzip1q_s32((int32x4_t)v248, (int32x4_t)v439);
          int64x2_t v441 = (int64x2_t)vshlq_u64((uint64x2_t)v339, (uint64x2_t)v436);
          *(int32x2_t *)v248.i8 = vmovn_s64((int64x2_t)v339);
          *(int32x2_t *)v441.i8 = vmovn_s64(v441);
          int16x8_t v442 = (int16x8_t)vzip1q_s32((int32x4_t)v248, (int32x4_t)v441);
          v431.i64[0] = v428.u32[0];
          v431.i64[1] = v428.u32[1];
          int64x2_t v443 = v431;
          v431.i64[0] = v430.u32[0];
          v431.i64[1] = v430.u32[1];
          int32x4_t v444 = (int32x4_t)vnegq_s64(v443);
          int64x2_t v445 = (int64x2_t)vshlq_u64((uint64x2_t)v355, (uint64x2_t)v436);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v355);
          *(int32x2_t *)v445.i8 = vmovn_s64(v445);
          int16x8_t v446 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v445);
          int64x2_t v447 = (int64x2_t)vshlq_u64((uint64x2_t)v352, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v352);
          *(int32x2_t *)v447.i8 = vmovn_s64(v447);
          int16x8_t v448 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v447);
          int64x2_t v449 = (int64x2_t)vshlq_u64((uint64x2_t)v375, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v375);
          *(int32x2_t *)v449.i8 = vmovn_s64(v449);
          int16x8_t v450 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v449);
          int64x2_t v451 = (int64x2_t)vshlq_u64((uint64x2_t)v371, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v371);
          *(int32x2_t *)v451.i8 = vmovn_s64(v451);
          int16x8_t v452 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v451);
          uint64x2_t v453 = (uint64x2_t)vnegq_s64(v431);
          int64x2_t v454 = (int64x2_t)vshlq_u64((uint64x2_t)v389, (uint64x2_t)v444);
          *(int32x2_t *)v436.i8 = vmovn_s64((int64x2_t)v389);
          *(int32x2_t *)v454.i8 = vmovn_s64(v454);
          int16x8_t v455 = (int16x8_t)vzip1q_s32(v436, (int32x4_t)v454);
          int64x2_t v456 = (int64x2_t)vshlq_u64((uint64x2_t)v385, v453);
          *(int32x2_t *)v444.i8 = vmovn_s64((int64x2_t)v385);
          *(int32x2_t *)v456.i8 = vmovn_s64(v456);
          int16x8_t v457 = (int16x8_t)vzip1q_s32(v444, (int32x4_t)v456);
          int64x2_t v458 = (int64x2_t)vshlq_u64((uint64x2_t)v409, v453);
          *(int32x2_t *)v409.i8 = vmovn_s64((int64x2_t)v409);
          *(int32x2_t *)v458.i8 = vmovn_s64(v458);
          int16x8_t v459 = (int16x8_t)vzip1q_s32((int32x4_t)v409, (int32x4_t)v458);
          int64x2_t v460 = (int64x2_t)vshlq_u64((uint64x2_t)v405, v453);
          *(int32x2_t *)v458.i8 = vmovn_s64((int64x2_t)v405);
          *(int32x2_t *)v460.i8 = vmovn_s64(v460);
          int16x8_t v461 = (int16x8_t)vzip1q_s32((int32x4_t)v458, (int32x4_t)v460);
          int16x8_t v462 = (int16x8_t)vshlq_u32((uint32x4_t)v433, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v247.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v247, v247, 8uLL)))));
          *(int16x4_t *)v433.i8 = vmovn_s32((int32x4_t)v433);
          *(int16x4_t *)v462.i8 = vmovn_s32((int32x4_t)v462);
          int16x8_t v463 = vzip1q_s16(v433, v462);
          uint32x4_t v464 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v614.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v614, (int8x16_t)v614, 8uLL))));
          int16x8_t v465 = (int16x8_t)vshlq_u32((uint32x4_t)v435, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v262.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v262, v262, 8uLL)))));
          *(int16x4_t *)v355.i8 = vmovn_s32(v435);
          *(int16x4_t *)v465.i8 = vmovn_s32((int32x4_t)v465);
          int16x8_t v466 = vzip1q_s16((int16x8_t)v355, v465);
          int16x8_t v467 = (int16x8_t)vshlq_u32((uint32x4_t)v438, v464);
          *(int16x4_t *)v438.i8 = vmovn_s32((int32x4_t)v438);
          *(int16x4_t *)v467.i8 = vmovn_s32((int32x4_t)v467);
          int16x8_t v468 = vzip1q_s16(v438, v467);
          int16x8_t v469 = (int16x8_t)vshlq_u32((uint32x4_t)v440, v464);
          *(int16x4_t *)v440.i8 = vmovn_s32((int32x4_t)v440);
          *(int16x4_t *)v469.i8 = vmovn_s32((int32x4_t)v469);
          int16x8_t v470 = vzip1q_s16(v440, v469);
          int16x8_t v471 = (int16x8_t)vshlq_u32((uint32x4_t)v442, v464);
          *(int16x4_t *)v442.i8 = vmovn_s32((int32x4_t)v442);
          *(int16x4_t *)v471.i8 = vmovn_s32((int32x4_t)v471);
          int16x8_t v472 = vzip1q_s16(v442, v471);
          uint32x4_t v473 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v615.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v615, (int8x16_t)v615, 8uLL))));
          int16x8_t v474 = (int16x8_t)vshlq_u32((uint32x4_t)v446, v464);
          *(int16x4_t *)v446.i8 = vmovn_s32((int32x4_t)v446);
          *(int16x4_t *)v474.i8 = vmovn_s32((int32x4_t)v474);
          int16x8_t v475 = vzip1q_s16(v446, v474);
          int16x8_t v476 = (int16x8_t)vshlq_u32((uint32x4_t)v448, v473);
          *(int16x4_t *)v448.i8 = vmovn_s32((int32x4_t)v448);
          *(int16x4_t *)v476.i8 = vmovn_s32((int32x4_t)v476);
          int16x8_t v477 = vzip1q_s16(v448, v476);
          int16x8_t v478 = (int16x8_t)vshlq_u32((uint32x4_t)v450, v473);
          *(int16x4_t *)v450.i8 = vmovn_s32((int32x4_t)v450);
          *(int16x4_t *)v478.i8 = vmovn_s32((int32x4_t)v478);
          int16x8_t v479 = vzip1q_s16(v450, v478);
          int16x8_t v480 = (int16x8_t)vshlq_u32((uint32x4_t)v452, v473);
          *(int16x4_t *)v452.i8 = vmovn_s32((int32x4_t)v452);
          *(int16x4_t *)v480.i8 = vmovn_s32((int32x4_t)v480);
          int16x8_t v481 = vzip1q_s16(v452, v480);
          uint32x4_t v482 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v616.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v616, (int8x16_t)v616, 8uLL))));
          int16x8_t v483 = (int16x8_t)vshlq_u32((uint32x4_t)v455, v473);
          *(int16x4_t *)v455.i8 = vmovn_s32((int32x4_t)v455);
          *(int16x4_t *)v483.i8 = vmovn_s32((int32x4_t)v483);
          int16x8_t v484 = vzip1q_s16(v455, v483);
          int16x8_t v485 = (int16x8_t)vshlq_u32((uint32x4_t)v457, v482);
          *(int16x4_t *)v457.i8 = vmovn_s32((int32x4_t)v457);
          *(int16x4_t *)v485.i8 = vmovn_s32((int32x4_t)v485);
          int16x8_t v486 = vzip1q_s16(v457, v485);
          int16x8_t v487 = (int16x8_t)vshlq_u32((uint32x4_t)v459, v482);
          *(int16x4_t *)v459.i8 = vmovn_s32((int32x4_t)v459);
          *(int16x4_t *)v487.i8 = vmovn_s32((int32x4_t)v487);
          int16x8_t v488 = vzip1q_s16(v459, v487);
          int16x8_t v489 = (int16x8_t)vshlq_u32((uint32x4_t)v461, v482);
          *(int16x4_t *)v461.i8 = vmovn_s32((int32x4_t)v461);
          *(int16x4_t *)v489.i8 = vmovn_s32((int32x4_t)v489);
          int16x8_t v490 = vzip1q_s16(v461, v489);
          v489.i64[0] = 0x10001000100010;
          v489.i64[1] = 0x10001000100010;
          int16x8_t v491 = vsubq_s16(v489, (int16x8_t)v247);
          v492.i64[0] = 0xF000F000F000FLL;
          v492.i64[1] = 0xF000F000F000FLL;
          int16x8_t v493 = vaddq_s16((int16x8_t)v247, v492);
          int16x8_t v494 = vshlq_s16(v463, v491);
          v491.i64[0] = 0x10001000100010;
          v491.i64[1] = 0x10001000100010;
          int16x8_t v495 = vsubq_s16(v491, (int16x8_t)v262);
          int16x8_t v496 = vaddq_s16((int16x8_t)v262, v492);
          v492.i64[0] = 0x10001000100010;
          v492.i64[1] = 0x10001000100010;
          int16x8_t v497 = vshlq_s16(v466, v495);
          v495.i64[0] = 0xF000F000F000FLL;
          v495.i64[1] = 0xF000F000F000FLL;
          int16x8_t v498 = vsubq_s16(v492, v614);
          int16x8_t v499 = vaddq_s16(v614, v495);
          v495.i64[0] = 0x10001000100010;
          v495.i64[1] = 0x10001000100010;
          int16x8_t v500 = vshlq_s16(v468, v498);
          int16x8_t v501 = vshlq_s16(v470, v498);
          int16x8_t v502 = vshlq_s16(v472, v498);
          int16x8_t v503 = vshlq_s16(v475, v498);
          v498.i64[0] = 0xF000F000F000FLL;
          v498.i64[1] = 0xF000F000F000FLL;
          int16x8_t v504 = vsubq_s16(v495, v615);
          int16x8_t v505 = vaddq_s16(v615, v498);
          v498.i64[0] = 0x10001000100010;
          v498.i64[1] = 0x10001000100010;
          int16x8_t v506 = vshlq_s16(v477, v504);
          int16x8_t v507 = vshlq_s16(v479, v504);
          int16x8_t v508 = vshlq_s16(v481, v504);
          int16x8_t v509 = vshlq_s16(v484, v504);
          v504.i64[0] = 0xF000F000F000FLL;
          v504.i64[1] = 0xF000F000F000FLL;
          int16x8_t v510 = vsubq_s16(v498, v616);
          int16x8_t v511 = vaddq_s16(v616, v504);
          int8x16_t v512 = (int8x16_t)vshlq_s16(v494, v493);
          int16x8_t v513 = vshlq_s16(v497, v496);
          int16x8_t v514 = vshlq_s16(v500, v499);
          int16x8_t v515 = vshlq_s16(v501, v499);
          int16x8_t v516 = vshlq_s16(v502, v499);
          int16x8_t v517 = vshlq_s16(v503, v499);
          int16x8_t v518 = vshlq_s16(v506, v505);
          int16x8_t v519 = vshlq_s16(v507, v505);
          int16x8_t v520 = vshlq_s16(v508, v505);
          int16x8_t v521 = vshlq_s16(v509, v505);
          int64x2_t v522 = (int64x2_t)vshlq_u64((uint64x2_t)v419, v453);
          *(int32x2_t *)v419.i8 = vmovn_s64((int64x2_t)v419);
          *(int32x2_t *)v522.i8 = vmovn_s64(v522);
          int16x8_t v523 = (int16x8_t)vzip1q_s32((int32x4_t)v419, (int32x4_t)v522);
          int16x8_t v524 = vshlq_s16(vshlq_s16(v486, v510), v511);
          int16x8_t v525 = vshlq_s16(vshlq_s16(v488, v510), v511);
          int16x8_t v526 = vshlq_s16(vshlq_s16(v490, v510), v511);
          int16x8_t v527 = (int16x8_t)vshlq_u32((uint32x4_t)v523, v482);
          *(int16x4_t *)v523.i8 = vmovn_s32((int32x4_t)v523);
          *(int16x4_t *)v527.i8 = vmovn_s32((int32x4_t)v527);
          int16x8_t v528 = vshlq_s16(vshlq_s16(vzip1q_s16(v523, v527), v510), v511);
          int16x8_t v529 = vaddq_s16((int16x8_t)vandq_s8(v512, v587), v513);
          int8x16_t v530 = (int8x16_t)vdupq_lane_s64(v512.i64[0], 0);
          int16x8_t v531 = (int16x8_t)vandq_s8(v585, v530);
          int16x8_t v532 = vsubq_s16(v514, v531);
          int16x8_t v533 = vsubq_s16(v515, v531);
          int16x8_t v534 = vsubq_s16(v516, v531);
          int16x8_t v535 = vsubq_s16(v517, v531);
          int16x8_t v536 = (int16x8_t)vandq_s8(v586, v530);
          int16x8_t v537 = vsubq_s16(v518, v536);
          int16x8_t v538 = vsubq_s16(v519, v536);
          int16x8_t v539 = (int16x8_t)vandq_s8(v587, v530);
          int16x8_t v540 = vsubq_s16(v520, v536);
          int16x8_t v541 = vsubq_s16(v521, v536);
          v542.i64[0] = 0x1000100010001;
          v542.i64[1] = 0x1000100010001;
          int16x8_t v543 = vsubq_s16(v302, v539);
          int16x8_t v544 = vsubq_s16(v312, v539);
          int16x8_t v545 = (int16x8_t)vandq_s8(v588, v530);
          int16x8_t v546 = vsubq_s16(v524, v545);
          int16x8_t v547 = vsubq_s16(v525, v545);
          int16x8_t v548 = vsubq_s16(v526, v545);
          int16x8_t v549 = vsubq_s16(v528, v545);
          int8x16_t v550 = (int8x16_t)vsubq_s16(v324, v539);
          int8x16_t v551 = (int8x16_t)vsubq_s16(v529, v539);
          int16x8_t v599 = v529;
          int8x16_t v607 = (int8x16_t)v546;
          int8x16_t v608 = (int8x16_t)v547;
          int8x16_t v609 = (int8x16_t)v548;
          int8x16_t v610 = (int8x16_t)v549;
          if (vaddvq_s16(vceqq_s16(v589, (int16x8_t)v542)))
          {
            int8x16_t v552 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v612, v542));
            v553.i64[1] = v551.i64[1];
            v553.i64[0] = v550.i64[1];
            v554.i64[0] = v550.i64[0];
            v554.i64[1] = v551.i64[0];
            int16x8_t v555 = (int16x8_t)vbslq_s8(v552, v553, v551);
            int16x8_t v556 = (int16x8_t)vbslq_s8(v552, v554, v550);
            v557.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
            v557.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
            int16x8_t v558 = (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v543 - 1), v557), v552);
            v621.val[0] = (int8x16_t)vaddq_s16(v555, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v543 - 1), (int8x16_t)xmmword_242EA7710), v552));
            v621.val[1] = (int8x16_t)vaddq_s16(v543, (int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)(&v543 - 1), (int8x16_t)xmmword_242EA7720), v552));
            v621.val[2] = (int8x16_t)vaddq_s16(v544, v558);
            v621.val[3] = (int8x16_t)vaddq_s16(v556, v558);
            int16x8_t v559 = (int16x8_t)vandq_s8(vqtbl4q_s8(v621, v557), v552);
            int8x16_t v551 = (int8x16_t)vaddq_s16((int16x8_t)v621.val[0], (int16x8_t)vandq_s8(vqtbl4q_s8(v621, (int8x16_t)xmmword_242EA7730), v552));
            int16x8_t v543 = vaddq_s16((int16x8_t)v621.val[1], (int16x8_t)vandq_s8(vqtbl4q_s8(v621, (int8x16_t)xmmword_242EA7740), v552));
            int16x8_t v599 = (int16x8_t)v551;
            int16x8_t v600 = v543;
            int16x8_t v544 = vaddq_s16((int16x8_t)v621.val[2], v559);
            int8x16_t v550 = (int8x16_t)vaddq_s16((int16x8_t)v621.val[3], v559);
            v619.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, (int8x16_t)xmmword_242EA7710), v552), v532);
            v619.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, (int8x16_t)xmmword_242EA7750), v552), v533);
            v619.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, v557), v552), v534);
            v619.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v532.i8, (int8x16_t)xmmword_242EA7760), v552), v535);
            v621.val[3] = vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7730), v552);
            int16x8_t v560 = (int16x8_t)vandq_s8(vqtbl4q_s8(v619, v557), v552);
            int16x8_t v532 = vaddq_s16((int16x8_t)v621.val[3], (int16x8_t)v619.val[0]);
            int16x8_t v533 = vaddq_s16((int16x8_t)v619.val[1], (int16x8_t)v621.val[3]);
            int16x8_t v534 = vaddq_s16((int16x8_t)v619.val[2], v560);
            int16x8_t v535 = vaddq_s16((int16x8_t)v619.val[3], v560);
            v619.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA74D0), v552), v537);
            v619.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA75A0), v552), v538);
            v619.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA7710), v552), v540);
            v619.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(*(int8x16x4_t *)v537.i8, (int8x16_t)xmmword_242EA7720), v552), v541);
            v621.val[3] = vandq_s8(vqtbl4q_s8(v619, v557), v552);
            int16x8_t v537 = vaddq_s16((int16x8_t)v619.val[0], (int16x8_t)v621.val[3]);
            int16x8_t v538 = vaddq_s16((int16x8_t)v619.val[1], (int16x8_t)v621.val[3]);
            int16x8_t v540 = vaddq_s16((int16x8_t)v619.val[2], (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA75D0), v552));
            int16x8_t v541 = vaddq_s16((int16x8_t)v619.val[3], (int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7770), v552));
            v619.val[0] = v607;
            v619.val[1] = v608;
            int8x16_t v54 = v612;
            v619.val[2] = v609;
            v619.val[3] = v610;
            v620.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA74D0), v552), (int16x8_t)v607);
            v620.val[1] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7780), v552), (int16x8_t)v608);
            int16x8_t v601 = v544;
            int16x8_t v602 = (int16x8_t)v550;
            v620.val[2] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7710), v552), (int16x8_t)v609);
            v620.val[3] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl4q_s8(v619, (int8x16_t)xmmword_242EA7720), v552), (int16x8_t)v610);
            int16x8_t v561 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, v557), v552);
            int16x8_t v562 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA75D0), v552);
            int16x8_t v563 = (int16x8_t)vandq_s8(vqtbl4q_s8(v620, (int8x16_t)xmmword_242EA7790), v552);
            int16x8_t v546 = vaddq_s16((int16x8_t)v620.val[0], v561);
            int16x8_t v547 = vaddq_s16((int16x8_t)v620.val[1], v561);
            int16x8_t v548 = vaddq_s16((int16x8_t)v620.val[2], v562);
            int16x8_t v549 = vaddq_s16((int16x8_t)v620.val[3], v563);
          }
          int8x16_t v564 = (int8x16_t)vaddq_s16(v611, (int16x8_t)v551);
          int8x16_t v565 = (int8x16_t)vaddq_s16(v543, v611);
          int8x16_t v566 = (int8x16_t)vaddq_s16(v544, v611);
          int8x16_t v567 = (int8x16_t)vaddq_s16((int16x8_t)v550, v611);
          int8x16_t v568 = (int8x16_t)vaddq_s16(v532, v611);
          int8x16_t v569 = (int8x16_t)vaddq_s16(v533, v611);
          int8x16_t v570 = (int8x16_t)vaddq_s16(v534, v611);
          int8x16_t v571 = (int8x16_t)vaddq_s16(v535, v611);
          int8x16_t v572 = (int8x16_t)vaddq_s16(v537, v611);
          int8x16_t v573 = (int8x16_t)vaddq_s16(v538, v611);
          int8x16_t v574 = (int8x16_t)vaddq_s16(v540, v611);
          int8x16_t v575 = (int8x16_t)vaddq_s16(v541, v611);
          int8x16_t v576 = (int8x16_t)vaddq_s16(v546, v611);
          int8x16_t v577 = (int8x16_t)vaddq_s16(v547, v611);
          int8x16_t v578 = (int8x16_t)vaddq_s16(v548, v611);
          int8x16_t v579 = (int8x16_t)vaddq_s16(v549, v611);
          v580.i64[0] = 0x10001000100010;
          v580.i64[1] = 0x10001000100010;
          int8x16_t v581 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v54, v580));
          v582 = (int16x8_t *)((char *)a1 + a2);
          *a1 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v564, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v564), 6uLL);
          a1[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v566, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v566), 6uLL);
          a1[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v572, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v572), 6uLL);
          a1[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v574, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v574), 6uLL);
          v583 = (int16x8_t *)((char *)a1 + 2 * a2);
          int16x8_t *v582 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v565, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v565), 6uLL);
          v582[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v567, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v567), 6uLL);
          v582[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v573, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v573), 6uLL);
          v582[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v575, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v575), 6uLL);
          int16x8_t *v583 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v568, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v568), 6uLL);
          v583[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v570, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v570), 6uLL);
          v583[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v576, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v576), 6uLL);
          v583[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v578, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v578), 6uLL);
          v584 = (int16x8_t *)((char *)v583 + a2);
          int16x8_t *v584 = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v569, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v569), 6uLL);
          v584[1] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v571, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v571), 6uLL);
          v584[2] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v577, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v577), 6uLL);
          v584[3] = vshlq_n_s16(vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v579, (int8x16_t)xmmword_242EA77A0), v581), (int16x8_t)v579), 6uLL);
        }
        return result;
      }
      unint64_t v259 = v59;
    }
    unint64_t v59 = v259 + 8;
    goto LABEL_98;
  }
  v30.i64[0] = 0xA000A000A000ALL;
  v30.i64[1] = 0xA000A000A000ALL;
  int8x16_t v31 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v30, v30));
  v30.i64[0] = vpaddq_s32((int32x4_t)v31, (int32x4_t)v31).u64[0];
  v32.i64[0] = v30.u32[0];
  v32.i64[1] = v30.u32[1];
  int64x2_t v33 = v32;
  unint64_t v34 = vaddvq_s64(v32);
  unint64_t v35 = v34;
  int16x8_t v36 = 0uLL;
  if (v34 <= 0x80)
  {
    unsigned int v72 = (int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8);
    int64x2_t v73 = vzip1q_s64((int64x2_t)0, v33);
    unint64_t v74 = 8 * (a3 & 7);
    unint64_t v75 = v34 + v74;
    int64x2_t v76 = vaddq_s64(v73, vdupq_n_s64(v74));
    int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*(int64x2_t *)(a3 & 0xFFFFFFFFFFFFFFF8), 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v76)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(*(void *)(a3 & 0xFFFFFFFFFFFFFFF8), 0), (uint64x2_t)vnegq_s64(v76)));
    if (v75 > 0x80) {
      int8x16_t v77 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v76)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v76))), v77);
    }
    unint64_t v78 = v75 & 0x3F;
    unsigned int v79 = (int64x2_t *)((char *)v72 + 8 * (v75 >> 6));
    int64x2_t v80 = vaddq_s64(v73, vdupq_n_s64(v78));
    unint64_t v81 = v35 + v75;
    int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v80)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v80)));
    if (v35 + v78 >= 0x81) {
      int8x16_t v82 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v80)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v80))), v82);
    }
    unint64_t v83 = v81 & 0x3F;
    unsigned int v84 = (int64x2_t *)((char *)v72 + 8 * (v81 >> 6));
    int64x2_t v85 = vaddq_s64(v73, vdupq_n_s64(v83));
    unint64_t v86 = v35 + v81;
    int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v84, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v85)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v84->i64[0], 0), (uint64x2_t)vnegq_s64(v85)));
    if (v35 + v83 >= 0x81) {
      int8x16_t v87 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v84[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v85)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v84[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v85))), v87);
    }
    int32x2_t v88 = (int32x2_t)vextq_s8(v31, v31, 8uLL).u64[0];
    unint64_t v89 = v86 & 0x3F;
    int v90 = (int64x2_t *)((char *)v72 + 8 * (v86 >> 6));
    int64x2_t v91 = vaddq_s64(v73, vdupq_n_s64(v89));
    unint64_t v92 = v35 + v86;
    int8x16_t v93 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
    if (v35 + v89 >= 0x81) {
      int8x16_t v93 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), v93);
    }
    unint64_t v94 = v92 & 0x3F;
    unint64_t v95 = (int64x2_t *)((char *)v72 + 8 * (v92 >> 6));
    int64x2_t v96 = vaddq_s64(v73, vdupq_n_s64(v94));
    unint64_t v97 = v35 + v92;
    int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v95, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v96)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95->i64[0], 0), (uint64x2_t)vnegq_s64(v96)));
    if (v35 + v94 > 0x80) {
      int8x16_t v98 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v95[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v96)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v95[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v96))), v98);
    }
    int32x2_t v99 = vzip1_s32(*(int32x2_t *)v31.i8, v88);
    unint64_t v100 = v97 & 0x3F;
    unint64_t v101 = (int64x2_t *)((char *)v72 + 8 * (v97 >> 6));
    int64x2_t v102 = vaddq_s64(v73, vdupq_n_s64(v100));
    unint64_t v103 = v35 + v97;
    int8x16_t v104 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v101, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v101->i64[0], 0), (uint64x2_t)vnegq_s64(v102)));
    if (v35 + v100 >= 0x81) {
      int8x16_t v104 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v101[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v102)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v101[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v102))), v104);
    }
    v105.i64[0] = v99.u32[0];
    v105.i64[1] = v99.u32[1];
    int64x2_t v106 = v105;
    unint64_t v107 = v103 & 0x3F;
    uint64_t v108 = (int64x2_t *)((char *)v72 + 8 * (v103 >> 6));
    int64x2_t v109 = vaddq_s64(v73, vdupq_n_s64(v107));
    unint64_t v110 = v35 + v103;
    int8x16_t v111 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v108, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v108->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
    if (v35 + v107 >= 0x81) {
      int8x16_t v111 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v108[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v108[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), v111);
    }
    uint64x2_t v112 = (uint64x2_t)vnegq_s64(v106);
    unint64_t v113 = v110 & 0x3F;
    unint64_t v114 = (int64x2_t *)((char *)v72 + 8 * (v110 >> 6));
    int64x2_t v115 = vaddq_s64(v73, vdupq_n_s64(v113));
    unint64_t v116 = v35 + v110;
    int8x16_t v117 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v114, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v115)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v114->i64[0], 0), (uint64x2_t)vnegq_s64(v115)));
    if (v35 + v113 >= 0x81) {
      int8x16_t v117 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v114[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v115)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v114[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v115))), v117);
    }
    int64x2_t v118 = (int64x2_t)vshlq_u64((uint64x2_t)v77, v112);
    int64x2_t v119 = (int64x2_t)vshlq_u64((uint64x2_t)v82, v112);
    int64x2_t v120 = (int64x2_t)vshlq_u64((uint64x2_t)v87, v112);
    int64x2_t v121 = (int64x2_t)vshlq_u64((uint64x2_t)v93, v112);
    int64x2_t v122 = (int64x2_t)vshlq_u64((uint64x2_t)v98, v112);
    int64x2_t v123 = (int64x2_t)vshlq_u64((uint64x2_t)v104, v112);
    int64x2_t v124 = (int64x2_t)vshlq_u64((uint64x2_t)v111, v112);
    int64x2_t v125 = (int64x2_t)vshlq_u64((uint64x2_t)v117, v112);
    unint64_t v126 = v116 & 0x3F;
    uint64_t v127 = (int64x2_t *)((char *)v72 + 8 * (v116 >> 6));
    int64x2_t v128 = vaddq_s64(v73, vdupq_n_s64(v126));
    unint64_t v129 = v35 + v116;
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v128)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v128)));
    if (v35 + v126 > 0x80) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v128)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v128))), v130);
    }
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v118.i8 = vmovn_s64(v118);
    *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v82);
    *(int32x2_t *)v119.i8 = vmovn_s64(v119);
    *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
    *(int32x2_t *)v120.i8 = vmovn_s64(v120);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    *(int32x2_t *)v121.i8 = vmovn_s64(v121);
    *(int32x2_t *)v98.i8 = vmovn_s64((int64x2_t)v98);
    *(int32x2_t *)v122.i8 = vmovn_s64(v122);
    *(int32x2_t *)v104.i8 = vmovn_s64((int64x2_t)v104);
    *(int32x2_t *)v123.i8 = vmovn_s64(v123);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    *(int32x2_t *)v124.i8 = vmovn_s64(v124);
    *(int32x2_t *)v117.i8 = vmovn_s64((int64x2_t)v117);
    *(int32x2_t *)v125.i8 = vmovn_s64(v125);
    int64x2_t v131 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v112);
    *(int32x2_t *)v130.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v131.i8 = vmovn_s64(v131);
    unint64_t v132 = v129 & 0x3F;
    int v133 = (int64x2_t *)((char *)v72 + 8 * (v129 >> 6));
    int64x2_t v134 = vaddq_s64(v73, vdupq_n_s64(v132));
    unint64_t v135 = v35 + v129;
    int8x16_t v136 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v134));
    int8x16_t v137 = vorrq_s8(v136, (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v134)));
    if (v35 + v132 >= 0x81)
    {
      int64x2_t v138 = v133[1];
      uint64x2_t v139 = (uint64x2_t)vdupq_lane_s64(v138.i64[0], 0);
      int8x16_t v136 = (int8x16_t)vdupq_laneq_s64(v138, 1);
      int64x2_t v5 = vdupq_n_s64(0xC0uLL);
      int8x16_t v137 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64(v139, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v134)), (int8x16_t)vshlq_u64((uint64x2_t)v136, (uint64x2_t)vsubq_s64(v5, v134))), v137);
    }
    *(int32x2_t *)v136.i8 = vmovn_s64((int64x2_t)v137);
    *(int32x2_t *)v5.i8 = vmovn_s64((int64x2_t)vshlq_u64((uint64x2_t)v137, v112));
    unint64_t v140 = (int64x2_t *)((char *)v72 + 8 * (v135 >> 6));
    int64x2_t v141 = vaddq_s64(v73, vdupq_n_s64(v135 & 0x3F));
    unint64_t v142 = v35 + v135;
    int8x16_t v143 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v141)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v141)));
    if (v35 + (v135 & 0x3F) >= 0x81) {
      int8x16_t v143 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v141)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v141))), v143);
    }
    int32x4_t v144 = vzip1q_s32((int32x4_t)v77, (int32x4_t)v118);
    int32x4_t v145 = vzip1q_s32((int32x4_t)v82, (int32x4_t)v119);
    int16x8_t v146 = (int16x8_t)vzip1q_s32((int32x4_t)v87, (int32x4_t)v120);
    int16x8_t v147 = (int16x8_t)vzip1q_s32((int32x4_t)v93, (int32x4_t)v121);
    int16x8_t v148 = (int16x8_t)vzip1q_s32((int32x4_t)v98, (int32x4_t)v122);
    int16x8_t v149 = (int16x8_t)vzip1q_s32((int32x4_t)v104, (int32x4_t)v123);
    int16x8_t v150 = (int16x8_t)vzip1q_s32((int32x4_t)v111, (int32x4_t)v124);
    int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v117, (int32x4_t)v125);
    int16x8_t v152 = (int16x8_t)vzip1q_s32((int32x4_t)v130, (int32x4_t)v131);
    int16x8_t v153 = (int16x8_t)vzip1q_s32((int32x4_t)v136, (int32x4_t)v5);
    int64x2_t v154 = (int64x2_t)vshlq_u64((uint64x2_t)v143, v112);
    *(int32x2_t *)v82.i8 = vmovn_s64((int64x2_t)v143);
    *(int32x2_t *)v154.i8 = vmovn_s64(v154);
    int16x8_t v155 = (int16x8_t)vzip1q_s32((int32x4_t)v82, (int32x4_t)v154);
    unint64_t v156 = v35 + v142;
    unint64_t v157 = v142 & 0x3F;
    int64x2_t v158 = vaddq_s64(v73, vdupq_n_s64(v157));
    unint64_t v159 = (int64x2_t *)((char *)v72 + 8 * (v142 >> 6));
    int64x2_t v160 = vdupq_n_s64(0x40uLL);
    int8x16_t v161 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v159->i64[0], 0), (uint64x2_t)vnegq_s64(v158));
    int64x2_t v162 = vsubq_s64(v160, v158);
    int8x16_t v163 = (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v159, 1), (uint64x2_t)v162);
    int8x16_t v164 = vorrq_s8(v163, v161);
    if (v35 + v157 >= 0x81)
    {
      int64x2_t v165 = v159[1];
      uint64x2_t v166 = (uint64x2_t)vdupq_lane_s64(v165.i64[0], 0);
      int8x16_t v163 = (int8x16_t)vdupq_laneq_s64(v165, 1);
      int8x16_t v161 = (int8x16_t)vshlq_u64(v166, (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v158));
      int64x2_t v162 = vdupq_n_s64(0xC0uLL);
      int8x16_t v164 = vorrq_s8(vorrq_s8(v161, (int8x16_t)vshlq_u64((uint64x2_t)v163, (uint64x2_t)vsubq_s64(v162, v158))), v164);
    }
    v167.i64[0] = 0x1000100010001;
    v167.i64[1] = 0x1000100010001;
    *(int16x4_t *)v161.i8 = vmovn_s32(v144);
    *(int16x4_t *)v162.i8 = vshrn_n_s32(v144, 0xAuLL);
    *(int16x4_t *)v160.i8 = vmovn_s32(v145);
    *(int16x4_t *)v104.i8 = vshrn_n_s32(v145, 0xAuLL);
    *(int16x4_t *)v111.i8 = vmovn_s32((int32x4_t)v146);
    *(int16x4_t *)v146.i8 = vshrn_n_s32((int32x4_t)v146, 0xAuLL);
    *(int16x4_t *)v163.i8 = vmovn_s32((int32x4_t)v147);
    int16x8_t v590 = (int16x8_t)v163;
    *(int16x4_t *)v147.i8 = vshrn_n_s32((int32x4_t)v147, 0xAuLL);
    *(int16x4_t *)v120.i8 = vmovn_s32((int32x4_t)v148);
    *(int16x4_t *)v148.i8 = vshrn_n_s32((int32x4_t)v148, 0xAuLL);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v149);
    *(int16x4_t *)v149.i8 = vshrn_n_s32((int32x4_t)v149, 0xAuLL);
    *(int16x4_t *)v124.i8 = vmovn_s32((int32x4_t)v150);
    *(int16x4_t *)v117.i8 = vshrn_n_s32((int32x4_t)v150, 0xAuLL);
    *(int16x4_t *)v125.i8 = vmovn_s32((int32x4_t)v151);
    *(int16x4_t *)v130.i8 = vshrn_n_s32((int32x4_t)v151, 0xAuLL);
    *(int16x4_t *)v131.i8 = vmovn_s32((int32x4_t)v152);
    *(int16x4_t *)v152.i8 = vshrn_n_s32((int32x4_t)v152, 0xAuLL);
    *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v153);
    *(int16x4_t *)v153.i8 = vshrn_n_s32((int32x4_t)v153, 0xAuLL);
    *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v155);
    *(int16x4_t *)v155.i8 = vshrn_n_s32((int32x4_t)v155, 0xAuLL);
    int64x2_t v168 = (int64x2_t)vshlq_u64((uint64x2_t)v164, v112);
    *(int32x2_t *)v144.i8 = vmovn_s64((int64x2_t)v164);
    *(int32x2_t *)v168.i8 = vmovn_s64(v168);
    int16x8_t v169 = (int16x8_t)vzip1q_s32(v144, (int32x4_t)v168);
    *(int16x4_t *)v168.i8 = vmovn_s32((int32x4_t)v169);
    *(int16x4_t *)v169.i8 = vshrn_n_s32((int32x4_t)v169, 0xAuLL);
    unint64_t v170 = v156 & 0x3F;
    unint64_t v171 = (int64x2_t *)((char *)v72 + 8 * (v156 >> 6));
    int64x2_t v172 = vaddq_s64(v73, vdupq_n_s64(v170));
    unint64_t v173 = v35 + v156;
    int8x16_t v174 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v171, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v172)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v171->i64[0], 0), (uint64x2_t)vnegq_s64(v172)));
    if (v35 + v170 > 0x80) {
      int8x16_t v174 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v171[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v172)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v171[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v172))), v174);
    }
    int16x8_t v175 = vshlq_n_s16(v167, 0xAuLL);
    int64x2_t v176 = (int64x2_t)vshlq_u64((uint64x2_t)v174, v112);
    *(int32x2_t *)v174.i8 = vmovn_s64((int64x2_t)v174);
    *(int32x2_t *)v176.i8 = vmovn_s64(v176);
    int16x8_t v177 = (int16x8_t)vzip1q_s32((int32x4_t)v174, (int32x4_t)v176);
    *(int16x4_t *)v174.i8 = vmovn_s32((int32x4_t)v177);
    *(int16x4_t *)v177.i8 = vshrn_n_s32((int32x4_t)v177, 0xAuLL);
    unint64_t v178 = (int64x2_t *)((char *)v72 + 8 * (v173 >> 6));
    int64x2_t v179 = vaddq_s64(v73, vdupq_n_s64(v173 & 0x3F));
    unint64_t v180 = v35 + v173;
    int8x16_t v181 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v178, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v179)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178->i64[0], 0), (uint64x2_t)vnegq_s64(v179)));
    if (v35 + (v173 & 0x3F) >= 0x81) {
      int8x16_t v181 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v178[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v179)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v178[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v179))), v181);
    }
    v182.i64[0] = -1;
    v182.i64[1] = -1;
    int8x16_t v183 = (int8x16_t)vaddq_s16(v175, v182);
    int8x16_t v184 = (int8x16_t)vzip1q_s16((int16x8_t)v161, (int16x8_t)v162);
    int8x16_t v185 = (int8x16_t)vzip1q_s16((int16x8_t)v160, (int16x8_t)v104);
    int8x16_t v186 = (int8x16_t)vzip1q_s16((int16x8_t)v111, v146);
    int8x16_t v187 = (int8x16_t)vzip1q_s16(v590, v147);
    int8x16_t v188 = (int8x16_t)vzip1q_s16((int16x8_t)v120, v148);
    int8x16_t v189 = (int8x16_t)vzip1q_s16((int16x8_t)v122, v149);
    int8x16_t v190 = (int8x16_t)vzip1q_s16((int16x8_t)v124, (int16x8_t)v117);
    int8x16_t v191 = (int8x16_t)vzip1q_s16((int16x8_t)v125, (int16x8_t)v130);
    int8x16_t v192 = (int8x16_t)vzip1q_s16((int16x8_t)v131, v152);
    int8x16_t v193 = (int8x16_t)vzip1q_s16(v151, v153);
    int8x16_t v194 = (int8x16_t)vzip1q_s16(v150, v155);
    int8x16_t v195 = (int8x16_t)vzip1q_s16((int16x8_t)v168, v169);
    int8x16_t v196 = (int8x16_t)vzip1q_s16((int16x8_t)v174, v177);
    int64x2_t v197 = (int64x2_t)vshlq_u64((uint64x2_t)v181, v112);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v181);
    *(int32x2_t *)v197.i8 = vmovn_s64(v197);
    int16x8_t v198 = (int16x8_t)vzip1q_s32((int32x4_t)v111, (int32x4_t)v197);
    *(int16x4_t *)v111.i8 = vmovn_s32((int32x4_t)v198);
    *(int16x4_t *)v198.i8 = vshrn_n_s32((int32x4_t)v198, 0xAuLL);
    int8x16_t v199 = (int8x16_t)vzip1q_s16((int16x8_t)v111, v198);
    unint64_t v200 = v35 + v180;
    unint64_t v201 = v180 & 0x3F;
    int64x2_t v202 = vaddq_s64(v73, vdupq_n_s64(v201));
    uint64_t v203 = (int64x2_t *)((char *)v72 + 8 * (v180 >> 6));
    int8x16_t v204 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v203, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v202)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v203->i64[0], 0), (uint64x2_t)vnegq_s64(v202)));
    if (v35 + v201 >= 0x81) {
      int8x16_t v204 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v203[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v202)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v203[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v202))), v204);
    }
    int16x8_t v205 = (int16x8_t)vandq_s8(v184, v183);
    int16x8_t v206 = (int16x8_t)vandq_s8(v185, v183);
    int16x8_t v207 = (int16x8_t)vandq_s8(v186, v183);
    int16x8_t v208 = (int16x8_t)vandq_s8(v187, v183);
    int16x8_t v209 = (int16x8_t)vandq_s8(v188, v183);
    int16x8_t v210 = (int16x8_t)vandq_s8(v189, v183);
    int16x8_t v211 = (int16x8_t)vandq_s8(v190, v183);
    int16x8_t v212 = (int16x8_t)vandq_s8(v191, v183);
    int16x8_t v213 = (int16x8_t)vandq_s8(v192, v183);
    int16x8_t v214 = (int16x8_t)vandq_s8(v193, v183);
    int16x8_t v215 = (int16x8_t)vandq_s8(v194, v183);
    int16x8_t v216 = (int16x8_t)vandq_s8(v195, v183);
    int16x8_t v217 = (int16x8_t)vandq_s8(v196, v183);
    int16x8_t v218 = (int16x8_t)vandq_s8(v199, v183);
    int64x2_t v219 = (int64x2_t)vshlq_u64((uint64x2_t)v204, v112);
    *(int32x2_t *)v187.i8 = vmovn_s64((int64x2_t)v204);
    *(int32x2_t *)v219.i8 = vmovn_s64(v219);
    int16x8_t v220 = (int16x8_t)vzip1q_s32((int32x4_t)v187, (int32x4_t)v219);
    *(int16x4_t *)v187.i8 = vmovn_s32((int32x4_t)v220);
    *(int16x4_t *)v220.i8 = vshrn_n_s32((int32x4_t)v220, 0xAuLL);
    int8x16_t v221 = (int8x16_t)vzip1q_s16((int16x8_t)v187, v220);
    unint64_t v222 = (int64x2_t *)((char *)v72 + 8 * (v200 >> 6));
    int64x2_t v223 = vaddq_s64(v73, vdupq_n_s64(v200 & 0x3F));
    int16x8_t v224 = (int16x8_t)vandq_s8(v221, v183);
    int8x16_t v225 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v222, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v223)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222->i64[0], 0), (uint64x2_t)vnegq_s64(v223)));
    if (v35 + (v200 & 0x3F) >= 0x81) {
      int8x16_t v225 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v222[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v223)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v222[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v223))), v225);
    }
    int16x8_t v47 = vshlq_n_s16(v209, 6uLL);
    int16x8_t v46 = vshlq_n_s16(v210, 6uLL);
    int16x8_t v45 = vshlq_n_s16(v211, 6uLL);
    int16x8_t v44 = vshlq_n_s16(v212, 6uLL);
    int16x8_t v36 = vshlq_n_s16(v213, 6uLL);
    int16x8_t v37 = vshlq_n_s16(v214, 6uLL);
    int16x8_t v38 = vshlq_n_s16(v215, 6uLL);
    int16x8_t v39 = vshlq_n_s16(v216, 6uLL);
    int64x2_t v226 = (int64x2_t)vshlq_u64((uint64x2_t)v225, v112);
    *(int32x2_t *)v215.i8 = vmovn_s64((int64x2_t)v225);
    *(int32x2_t *)v226.i8 = vmovn_s64(v226);
    int16x8_t v227 = (int16x8_t)vzip1q_s32((int32x4_t)v215, (int32x4_t)v226);
    *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v227);
    *(int16x4_t *)v227.i8 = vshrn_n_s32((int32x4_t)v227, 0xAuLL);
    int16x8_t v51 = vshlq_n_s16(v217, 6uLL);
    int16x8_t v50 = vshlq_n_s16(v218, 6uLL);
    int16x8_t v49 = vshlq_n_s16(v224, 6uLL);
    int16x8_t v48 = vshlq_n_s16((int16x8_t)vandq_s8((int8x16_t)vzip1q_s16(v215, v227), v183), 6uLL);
    int16x8_t v40 = vshlq_n_s16(v205, 6uLL);
    int16x8_t v41 = vshlq_n_s16(v206, 6uLL);
    int16x8_t v42 = vshlq_n_s16(v207, 6uLL);
    int16x8_t v43 = vshlq_n_s16(v208, 6uLL);
  }
  else
  {
    int16x8_t v37 = 0uLL;
    int16x8_t v38 = 0uLL;
    int16x8_t v39 = 0uLL;
    int16x8_t v40 = 0uLL;
    int16x8_t v41 = 0uLL;
    int16x8_t v42 = 0uLL;
    int16x8_t v43 = 0uLL;
    int16x8_t v44 = 0uLL;
    int16x8_t v45 = 0uLL;
    int16x8_t v46 = 0uLL;
    int16x8_t v47 = 0uLL;
    int16x8_t v48 = 0uLL;
    int16x8_t v49 = 0uLL;
    int16x8_t v50 = 0uLL;
    int16x8_t v51 = 0uLL;
  }
  uint64_t v228 = (int16x8_t *)((char *)a1 + a2);
  *a1 = v40;
  a1[1] = v42;
  a1[2] = v36;
  a1[3] = v38;
  unint64_t v229 = (int16x8_t *)((char *)a1 + 2 * a2);
  *uint64_t v228 = v41;
  v228[1] = v43;
  v228[2] = v37;
  v228[3] = v39;
  *unint64_t v229 = v47;
  v229[1] = v45;
  v229[2] = v51;
  v229[3] = v49;
  unint64_t v230 = (int16x8_t *)((char *)v229 + a2);
  uint64_t result = 160;
  *unint64_t v230 = v46;
  v230[1] = v44;
  v230[2] = v50;
  v230[3] = v48;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  int v13 = (int16x8_t *)result;
  if (a5 >= 8) {
    unsigned int v14 = 8;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int8x16_t v16 = a4 + 1;
  if (a5 <= 8) {
    int v17 = 8;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 8;
  if (v18 >= 8) {
    int v19 = 8;
  }
  else {
    int v19 = v18;
  }
  if (v19 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v16, v13 + 4, a2, v19, v15, a7);
    v11 += result;
  }
  else
  {
    *int8x16_t v16 = 0;
  }
  uint64_t v20 = 4 * a2;
  unint64_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v21, (int16x8_t *)((char *)v13 + v20), a2, v14, v24, a7);
    v11 += result;
    unint64_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  else
  {
    *unint64_t v21 = 0;
    unint64_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_34;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v25, (int16x8_t *)((char *)v13 + v20 + 64), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_35;
  }
LABEL_34:
  *unint64_t v25 = 0;
LABEL_35:
  unint64_t v26 = a4 + 4;
  if (a6 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v14 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v26, (int16x8_t *)((char *)v13 + 8 * a2), a2, v14, v29, a7);
    v11 += result;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  else
  {
    *unint64_t v26 = 0;
    int16x8_t v30 = a4 + 5;
    if (!v19) {
      goto LABEL_48;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v30, (int16x8_t *)((char *)v13 + 8 * a2 + 64), a2, v19, v29, a7);
    v11 += result;
    goto LABEL_49;
  }
LABEL_48:
  *int16x8_t v30 = 0;
LABEL_49:
  int8x16_t v31 = a4 + 6;
  if (a6 <= 12) {
    int v32 = 12;
  }
  else {
    int v32 = a6;
  }
  unsigned int v33 = v32 - 12;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v14 && v34)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v31, (int16x8_t *)((char *)v13 + 12 * a2), a2, v14, v34, a7);
    v11 += result;
    unint64_t v35 = a4 + 7;
    if (!v19) {
      goto LABEL_64;
    }
  }
  else
  {
    *int8x16_t v31 = 0;
    unint64_t v35 = a4 + 7;
    if (!v19)
    {
LABEL_64:
      unsigned char *v35 = 0;
      return result;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::compressSubblock(v11, v35, (int16x8_t *)((char *)v13 + 12 * a2 + 64), a2, v19, v34, a7);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressMacroblock(_OWORD *a1, unint64_t a2, unsigned __int8 *a3, int a4)
{
  unint64_t v7 = a2
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1, 128, a2, *a3, a4);
  unint64_t v8 = v7
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 4, 128, v7, a3[1], a4);
  unint64_t v9 = v8
     + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 32, 128, v8, a3[2], a4);
  unint64_t v10 = v9
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 36, 128, v9, a3[3], a4);
  unint64_t v11 = v10
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 64, 128, v10, a3[4], a4);
  unint64_t v12 = v11
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 68, 128, v11, a3[5], a4);
  unint64_t v13 = v12
      + AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 96, 128, v12, a3[6], a4);
  unsigned int v14 = a3[7];

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)2>::decompressSubblock(a1 + 100, 128, v13, v14, a4);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  unint64_t v7 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v9 = *v7;
  int16x8_t v10 = v7[1];
  int16x8_t v11 = v7[2];
  int16x8_t v12 = v7[3];
  unint64_t v8 = (int16x8_t *)((char *)v7 + a4);
  int16x8_t v13 = vshrq_n_s16(*a3, 6uLL);
  int16x8_t v14 = vshrq_n_s16(*(int16x8_t *)((char *)a3 + a4), 6uLL);
  int16x8_t v15 = vshrq_n_s16(a3[1], 6uLL);
  int16x8_t v16 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[1] + a4), 6uLL);
  int16x8_t v17 = vshrq_n_s16(v9, 6uLL);
  int16x8_t v18 = vshrq_n_s16(*v8, 6uLL);
  int16x8_t v19 = vshrq_n_s16(v10, 6uLL);
  int16x8_t v20 = vshrq_n_s16(v8[1], 6uLL);
  int16x8_t v21 = vshrq_n_s16(a3[2], 6uLL);
  int16x8_t v22 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[2] + a4), 6uLL);
  int16x8_t v23 = vshrq_n_s16(a3[3], 6uLL);
  int16x8_t v24 = vshrq_n_s16(*(int16x8_t *)((char *)&a3[3] + a4), 6uLL);
  int16x8_t v25 = vshrq_n_s16(v11, 6uLL);
  int16x8_t v26 = vshrq_n_s16(v8[2], 6uLL);
  int16x8_t v27 = vshrq_n_s16(v12, 6uLL);
  int16x8_t v28 = vshrq_n_s16(v8[3], 6uLL);
  int16x8_t v29 = (int16x8_t)vdupq_lane_s64(v13.i64[0], 0);
  v30.i64[0] = 0x5000500050005;
  v30.i64[1] = 0x5000500050005;
  int8x16_t v469 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v13, v29), 6uLL), v30);
  int8x16_t v470 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v14, v29), 6uLL), v30);
  int8x16_t v471 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v15, v29), 6uLL), v30);
  int8x16_t v472 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v16, v29), 6uLL), v30);
  int8x16_t v473 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v17, v29), 6uLL), v30);
  int8x16_t v474 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v18, v29), 6uLL), v30);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v32 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v469, (int16x8_t)v470), (int16x8_t)v471), (int16x8_t)v472), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  int16x8_t v35 = vzip1q_s16(v33, v34);
  int8x16_t v36 = (int8x16_t)vceqzq_s16(v35);
  int16x8_t v37 = vclsq_s16(v35);
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v38 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, v37), v36);
  int8x16_t v475 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v19, v29), 6uLL), v30);
  int8x16_t v476 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v20, v29), 6uLL), v30);
  int8x16_t v477 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v21, v29), 6uLL), v30);
  int8x16_t v478 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v22, v29), 6uLL), v30);
  v39.i64[0] = 0x8000800080008000;
  v39.i64[1] = 0x8000800080008000;
  int16x8_t v40 = vmaxq_s16(v33, v39);
  v41.i64[0] = 0x8000800080008000;
  v41.i64[1] = 0x8000800080008000;
  int16x8_t v42 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v473, (int16x8_t)v474), (int16x8_t)v475), (int16x8_t)v476), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v44 = vpmaxq_s16(v42, v42);
  int16x8_t v45 = vpminq_s16(v43, v43);
  int16x8_t v46 = vmaxq_s16(v40, v44);
  int16x8_t v47 = vminq_s16(vminq_s16(v34, v41), v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int16x8_t v49 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v48)), (int8x16_t)vceqzq_s16(v48));
  int8x16_t v479 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v23, v29), 6uLL), v30);
  int8x16_t v480 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v24, v29), 6uLL), v30);
  int16x8_t v50 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v51 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v477, (int16x8_t)v478), (int16x8_t)v479), (int16x8_t)v480), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v52 = vpmaxq_s16(v50, v50);
  int16x8_t v53 = vpminq_s16(v51, v51);
  int16x8_t v54 = vmaxq_s16(v46, v52);
  int16x8_t v55 = vminq_s16(v47, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int8x16_t v481 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v25, v29), 6uLL), v30);
  int8x16_t v482 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v26, v29), 6uLL), v30);
  int8x16_t v485 = (int8x16_t)v29;
  int8x16_t v483 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v27, v29), 6uLL), v30);
  int8x16_t v484 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16(v28, v29), 6uLL), v30);
  int16x8_t v58 = vpmaxq_s16(v38, v38);
  int16x8_t v59 = vpmaxq_s16(v49, v49);
  int8x16_t v60 = (int8x16_t)vpmaxq_s16(v57, v57);
  int16x8_t v61 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v62 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v481, (int16x8_t)v482), (int16x8_t)v483), (int16x8_t)v484), (int8x16_t)xmmword_242EA77B0);
  int16x8_t v63 = vpmaxq_s16(v61, v61);
  int16x8_t v64 = vpminq_s16(v62, v62);
  int16x8_t v65 = vmaxq_s16(v54, v63);
  int16x8_t v66 = vminq_s16(v55, v64);
  int16x8_t v67 = vzip1q_s16(v63, v64);
  int16x8_t v68 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v67)), (int8x16_t)vceqzq_s16(v67));
  int16x8_t v69 = vpmaxq_s16(v68, v68);
  int8x16_t v70 = (int8x16_t)vmaxq_s16(vmaxq_s16(v58, v59), vmaxq_s16((int16x8_t)v60, v69));
  int16x8_t v71 = vclzq_s16(vsubq_s16(v65, v66));
  v34.i64[0] = 0xF000F000F000FLL;
  v34.i64[1] = 0xF000F000F000FLL;
  v37.i64[0] = -1;
  v37.i64[1] = -1;
  int8x16_t v492 = (int8x16_t)v66;
  int8x16_t v493 = (int8x16_t)v65;
  int8x16_t v72 = (int8x16_t)vsubq_s16(v35, v71);
  int8x16_t v73 = (int8x16_t)vsubq_s16(vshlq_s16(v37, vsubq_s16(v34, v71)), v66);
  int8x16_t v74 = (int8x16_t)vcgtq_s16((int16x8_t)v70, (int16x8_t)v72);
  int16x8_t v75 = (int16x8_t)vbslq_s8(v74, v72, v70);
  int8x16_t v494 = vandq_s8(v73, v74);
  v73.i64[0] = 0x8000800080008;
  v73.i64[1] = 0x8000800080008;
  int8x16_t v76 = vorrq_s8((int8x16_t)0, vandq_s8(v74, v73));
  v70.i64[0] = 0x3000300030003;
  v70.i64[1] = 0x3000300030003;
  int16x8_t v77 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v59), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v78 = vmaxq_s16(vminq_s16(vsubq_s16(v75, (int16x8_t)v60), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v488 = vsubq_s16(v75, v77);
  int16x8_t v489 = vsubq_s16(v75, v78);
  int16x8_t v79 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v69), (int16x8_t)v70), (int16x8_t)0);
  int16x8_t v490 = vsubq_s16(v75, v79);
  int8x16_t v491 = (int8x16_t)v75;
  int16x8_t v80 = vaddq_s16(v79, v78);
  int16x8_t v81 = vmaxq_s16(vminq_s16(vsubq_s16(v75, v58), (int16x8_t)v70), (int16x8_t)0);
  v60.i64[0] = 0x4000400040004;
  v60.i64[1] = 0x4000400040004;
  int8x16_t v82 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v75), v70), v76), vbicq_s8(v60, (int8x16_t)vceqq_s16(v80, vnegq_s16(vaddq_s16(v81, v77)))));
  int8x16_t v486 = v82;
  int16x8_t v487 = vsubq_s16(v75, v81);
  if (vmaxvq_s16(v75))
  {
    int16x8_t v467 = v20;
    int16x8_t v434 = v24;
    int16x8_t v435 = v28;
    int16x8_t v436 = v25;
    int16x8_t v437 = v26;
    int16x8_t v438 = v27;
    v439.val[0] = (int8x16_t)v13;
    v439.val[1] = (int8x16_t)v14;
    v439.val[2] = (int8x16_t)v15;
    v439.val[3] = (int8x16_t)v16;
    int8x16_t v465 = v76;
    int8x16_t v83 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v469, (int16x8_t)vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v84 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v470, (int16x8_t)vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v85 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v473, (int16x8_t)vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v86 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v474, (int16x8_t)vqtbl1q_s8(v474, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v87 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v475, (int16x8_t)vqtbl1q_s8(v475, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v88 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v476, (int16x8_t)vqtbl1q_s8(v476, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v89 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v477, (int16x8_t)vqtbl1q_s8(v477, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v90 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v478, (int16x8_t)vqtbl1q_s8(v478, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v91 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v479, (int16x8_t)vqtbl1q_s8(v479, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v92 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v480, (int16x8_t)vqtbl1q_s8(v480, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v93 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v481, (int16x8_t)vqtbl1q_s8(v481, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v94 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v482, (int16x8_t)vqtbl1q_s8(v482, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v95 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v483, (int16x8_t)vqtbl1q_s8(v483, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v96 = vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v484, (int16x8_t)vqtbl1q_s8(v484, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v444 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v472, (int16x8_t)vqtbl1q_s8(v472, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int8x16_t v445 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v471, (int16x8_t)vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA77A0)), 6uLL), v30);
    int16x8_t v97 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v83, (int16x8_t)v84), (int16x8_t)v445), (int16x8_t)v444), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v99 = vpmaxq_s16(v97, v97);
    int16x8_t v100 = vpminq_s16(v98, v98);
    v101.i64[0] = 0x8000800080008000;
    v101.i64[1] = 0x8000800080008000;
    int16x8_t v102 = vmaxq_s16(v99, v101);
    v103.i64[0] = 0x8000800080008000;
    v103.i64[1] = 0x8000800080008000;
    int16x8_t v104 = vminq_s16(v100, v103);
    int16x8_t v105 = vzip1q_s16(v99, v100);
    v106.i64[0] = 0x10001000100010;
    v106.i64[1] = 0x10001000100010;
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v105)), (int8x16_t)vceqzq_s16(v105));
    int8x16_t v108 = (int8x16_t)vpmaxq_s16(v107, v107);
    int8x16_t v451 = (int8x16_t)v87;
    int8x16_t v453 = (int8x16_t)v85;
    int8x16_t v448 = (int8x16_t)v88;
    int8x16_t v449 = (int8x16_t)v86;
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v85, v86), v87), v88), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vmaxq_s16(v102, v111);
    int16x8_t v114 = vminq_s16(v104, v112);
    int16x8_t v115 = vzip1q_s16(v111, v112);
    v116.i64[0] = 0x10001000100010;
    v116.i64[1] = 0x10001000100010;
    int16x8_t v117 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v106, vclsq_s16(v115)), (int8x16_t)vceqzq_s16(v115));
    int16x8_t v118 = vpmaxq_s16(v117, v117);
    int8x16_t v459 = (int8x16_t)v91;
    int8x16_t v461 = (int8x16_t)v89;
    int8x16_t v455 = (int8x16_t)v92;
    int8x16_t v457 = (int8x16_t)v90;
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v89, v90), v91), v92), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v121 = vpmaxq_s16(v119, v119);
    int16x8_t v122 = vpminq_s16(v120, v120);
    int16x8_t v123 = vmaxq_s16(v113, v121);
    int16x8_t v124 = vminq_s16(v114, v122);
    int16x8_t v125 = vzip1q_s16(v121, v122);
    int16x8_t v126 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v125)), (int8x16_t)vceqzq_s16(v125));
    int16x8_t v127 = vpmaxq_s16(v126, v126);
    int8x16_t v463 = (int8x16_t)v96;
    int16x8_t v128 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v93, (int16x8_t)v94), (int16x8_t)v95), v96), (int8x16_t)xmmword_242EA77B0);
    int16x8_t v130 = vpmaxq_s16(v128, v128);
    int16x8_t v131 = vpminq_s16(v129, v129);
    int8x16_t v132 = (int8x16_t)vmaxq_s16(v123, v130);
    int16x8_t v133 = vminq_s16(v124, v131);
    int16x8_t v134 = vzip1q_s16(v130, v131);
    int16x8_t v135 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v116, vclsq_s16(v134)), (int8x16_t)vceqzq_s16(v134));
    int16x8_t v136 = vpmaxq_s16(v135, v135);
    int8x16_t v137 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v108, v118), vmaxq_s16(v127, v136));
    int8x16_t v446 = (int8x16_t)v93;
    int8x16_t v447 = v132;
    int8x16_t v138 = (int8x16_t)v133;
    int16x8_t v139 = vclzq_s16(vsubq_s16((int16x8_t)v132, v133));
    int8x16_t v140 = (int8x16_t)vsubq_s16(v116, v139);
    int8x16_t v141 = (int8x16_t)vcgtq_s16((int16x8_t)v137, (int16x8_t)v140);
    int8x16_t v142 = vbslq_s8(v141, v140, v137);
    int16x8_t v143 = vsubq_s16((int16x8_t)v142, (int16x8_t)v108);
    v108.i64[0] = 0x3000300030003;
    v108.i64[1] = 0x3000300030003;
    int16x8_t v144 = vmaxq_s16(vminq_s16(v143, (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v145 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v118), (int16x8_t)v108), (int16x8_t)0);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v127), (int16x8_t)v108), (int16x8_t)0);
    v132.i64[0] = 0x3000300030003;
    v132.i64[1] = 0x3000300030003;
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v142, v136), (int16x8_t)v108), (int16x8_t)0);
    v140.i64[0] = 0x4000400040004;
    v140.i64[1] = 0x4000400040004;
    int8x16_t v148 = vbicq_s8(v140, (int8x16_t)vceqq_s16(vaddq_s16(v147, v146), vnegq_s16(vaddq_s16(v144, v145))));
    v108.i64[0] = 0x18001800180018;
    v108.i64[1] = 0x18001800180018;
    int8x16_t v149 = vbslq_s8(v141, v108, (int8x16_t)v116);
    int8x16_t v441 = (int8x16_t)vsubq_s16((int16x8_t)v142, v145);
    int8x16_t v442 = (int8x16_t)vsubq_s16((int16x8_t)v142, v146);
    int8x16_t v443 = (int8x16_t)vsubq_s16((int16x8_t)v142, v147);
    v146.i64[0] = 0x7000700070007;
    v146.i64[1] = 0x7000700070007;
    int8x16_t v440 = (int8x16_t)vsubq_s16((int16x8_t)v142, v144);
    v108.i64[0] = 0x8000800080008;
    v108.i64[1] = 0x8000800080008;
    int16x8_t v150 = (int16x8_t)vandq_s8(v465, v108);
    int16x8_t v151 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v108);
    v140.i64[0] = 0x2000200020002;
    v140.i64[1] = 0x2000200020002;
    int16x8_t v152 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v132), (int16x8_t)v140), (int8x16_t)v116);
    int16x8_t v154 = v490;
    int8x16_t v153 = v491;
    int16x8_t v155 = v487;
    int16x8_t v156 = v488;
    int16x8_t v157 = vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16(v150)), v151), v152), v487, v146);
    int16x8_t v158 = v489;
    int8x16_t v159 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(v157, vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vbicq_s8(v142, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v149 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), vaddq_s16((int16x8_t)v148, (int16x8_t)v148)), (int16x8_t)v440, v146), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v442, (int16x8_t)v441), (int16x8_t)v443), 3uLL))).i64[0], 0);
    int v160 = (unsigned __int16)vaddvq_s16((int16x8_t)v159);
    BOOL v162 = a5 < 4 || a6 < 2;
    if (v160)
    {
      v163.i64[0] = 0x3000300030003;
      v163.i64[1] = 0x3000300030003;
      int8x16_t v164 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v142), v163), v149), v148);
      v165.i64[0] = 0xF000F000F000FLL;
      v165.i64[1] = 0xF000F000F000FLL;
      int8x16_t v469 = vbslq_s8(v159, v83, v469);
      int8x16_t v470 = vbslq_s8(v159, v84, v470);
      v163.i64[0] = -1;
      v163.i64[1] = -1;
      int8x16_t v471 = vbslq_s8(v159, v445, v471);
      int8x16_t v472 = vbslq_s8(v159, v444, v472);
      int8x16_t v473 = vbslq_s8(v159, v453, v473);
      int8x16_t v474 = vbslq_s8(v159, v449, v474);
      int8x16_t v475 = vbslq_s8(v159, v451, v475);
      int8x16_t v476 = vbslq_s8(v159, v448, v476);
      int8x16_t v477 = vbslq_s8(v159, v461, v477);
      int8x16_t v478 = vbslq_s8(v159, v457, v478);
      int8x16_t v479 = vbslq_s8(v159, v459, v479);
      int8x16_t v480 = vbslq_s8(v159, v455, v480);
      int8x16_t v481 = vbslq_s8(v159, v446, v481);
      int8x16_t v482 = vbslq_s8(v159, v94, v482);
      int8x16_t v483 = vbslq_s8(v159, v95, v483);
      int8x16_t v484 = vbslq_s8(v159, v463, v484);
      int16x8_t v155 = (int16x8_t)vbslq_s8(v159, v440, (int8x16_t)v487);
      int16x8_t v156 = (int16x8_t)vbslq_s8(v159, v441, (int8x16_t)v488);
      int16x8_t v487 = v155;
      int16x8_t v488 = v156;
      int16x8_t v158 = (int16x8_t)vbslq_s8(v159, v442, (int8x16_t)v489);
      int16x8_t v154 = (int16x8_t)vbslq_s8(v159, v443, (int8x16_t)v490);
      int16x8_t v489 = v158;
      int16x8_t v490 = v154;
      int8x16_t v493 = vbslq_s8(v159, v447, v493);
      int8x16_t v494 = vbslq_s8(v159, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v163, vsubq_s16(v165, v139)), (int16x8_t)v138), v141), v494);
      int8x16_t v153 = vbslq_s8(v159, v142, v491);
      int8x16_t v491 = v153;
      int8x16_t v492 = vbslq_s8(v159, v138, v492);
      int8x16_t v82 = vbslq_s8(v159, v164, v486);
      int8x16_t v485 = vbslq_s8(v159, (int8x16_t)vsubq_s16((int16x8_t)v485, (int16x8_t)vqtbl1q_s8(v485, (int8x16_t)xmmword_242EA77A0)), v485);
      int8x16_t v486 = v82;
    }
    if (!v162)
    {
      int16x8_t v166 = (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA77C0);
      int16x8_t v167 = vsubq_s16((int16x8_t)v439.val[0], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7710));
      int16x8_t v168 = vsubq_s16((int16x8_t)v439.val[2], v166);
      int16x8_t v169 = vsubq_s16((int16x8_t)v439.val[3], v166);
      uint64_t v170 = v467.i64[0];
      uint64_t v171 = v439.val[3].i64[1];
      int16x8_t v172 = vsubq_s16(v17, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v173 = vsubq_s16(v18, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7750));
      int16x8_t v174 = vsubq_s16(v19, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA77C0));
      int16x8_t v175 = vsubq_s16(v467, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v17.i8, (int8x16_t)xmmword_242EA7760));
      uint64_t v176 = v434.i64[0];
      uint64_t v177 = v439.val[3].i64[1];
      int16x8_t v178 = (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7720);
      int16x8_t v179 = vsubq_s16(v21, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v180 = vsubq_s16(v22, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA77E0));
      int16x8_t v181 = vsubq_s16(v23, (int16x8_t)vqtbl4q_s8(*(int8x16x4_t *)v21.i8, (int8x16_t)xmmword_242EA7710));
      int16x8_t v182 = vsubq_s16(v434, v178);
      v495.val[0] = (int8x16_t)v436;
      v495.val[1] = (int8x16_t)v437;
      v495.val[2] = (int8x16_t)v438;
      v495.val[3].i64[0] = v435.i64[0];
      v495.val[3].i64[1] = v439.val[3].i64[1];
      int16x8_t v183 = vsubq_s16(v436, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA77D0));
      int16x8_t v184 = vsubq_s16(v437, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7780));
      int16x8_t v185 = vsubq_s16(v438, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7710));
      int16x8_t v186 = vsubq_s16(v435, (int16x8_t)vqtbl4q_s8(v495, (int8x16_t)xmmword_242EA7720));
      v187.i64[1] = v167.i64[1];
      v187.i64[0] = v169.i64[1];
      v169.i64[1] = v167.i64[0];
      int16x8_t v188 = vshlq_n_s16(v169, 6uLL);
      int8x16_t v189 = (int8x16_t)vshlq_n_s16(v172, 6uLL);
      int16x8_t v190 = vshlq_n_s16(v173, 6uLL);
      int16x8_t v191 = vshlq_n_s16(v175, 6uLL);
      int16x8_t v192 = vshlq_n_s16(v179, 6uLL);
      v495.val[0] = (int8x16_t)vshlq_n_s16(v182, 6uLL);
      v495.val[1] = (int8x16_t)vshlq_n_s16(v184, 6uLL);
      v495.val[2].i64[0] = 0x5000500050005;
      v495.val[2].i64[1] = 0x5000500050005;
      int8x16_t v193 = (int8x16_t)vshlq_s16(vshlq_n_s16(v187, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v194 = (int8x16_t)vshlq_s16(vshlq_n_s16(vsubq_s16((int16x8_t)v439.val[1], (int16x8_t)vqtbl4q_s8(v439, (int8x16_t)xmmword_242EA7720)), 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v195 = (int8x16_t)vshlq_s16(v188, (int16x8_t)v495.val[2]);
      int8x16_t v196 = (int8x16_t)vshlq_s16(v190, (int16x8_t)v495.val[2]);
      int16x8_t v197 = vshlq_s16(vshlq_n_s16(v174, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v198 = (int8x16_t)vshlq_s16(v191, (int16x8_t)v495.val[2]);
      int16x8_t v199 = vshlq_s16(v192, (int16x8_t)v495.val[2]);
      int8x16_t v200 = (int8x16_t)vshlq_s16(vshlq_n_s16(v180, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v201 = vshlq_s16(vshlq_n_s16(v181, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v202 = (int8x16_t)vshlq_s16((int16x8_t)v189, (int16x8_t)v495.val[2]);
      int8x16_t v203 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[0], (int16x8_t)v495.val[2]);
      v495.val[3] = (int8x16_t)vshlq_s16(vshlq_n_s16(v183, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v204 = (int8x16_t)vshlq_s16(vshlq_n_s16(v168, 6uLL), (int16x8_t)v495.val[2]);
      int8x16_t v205 = (int8x16_t)vshlq_s16((int16x8_t)v495.val[1], (int16x8_t)v495.val[2]);
      int16x8_t v206 = vshlq_s16(vshlq_n_s16(v185, 6uLL), (int16x8_t)v495.val[2]);
      v495.val[2] = (int8x16_t)vshlq_s16(vshlq_n_s16(v186, 6uLL), (int16x8_t)v495.val[2]);
      int16x8_t v207 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v208 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v193, (int16x8_t)v194), (int16x8_t)v204), (int16x8_t)v195), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v209 = vpmaxq_s16(v207, v207);
      int16x8_t v210 = vpminq_s16(v208, v208);
      v186.i64[0] = 0x8000800080008000;
      v186.i64[1] = 0x8000800080008000;
      int16x8_t v211 = vmaxq_s16(v209, v186);
      v212.i64[0] = 0x8000800080008000;
      v212.i64[1] = 0x8000800080008000;
      int16x8_t v213 = vminq_s16(v210, v212);
      int16x8_t v214 = vzip1q_s16(v209, v210);
      v189.i64[0] = 0x10001000100010;
      v189.i64[1] = 0x10001000100010;
      int16x8_t v215 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v214)), (int8x16_t)vceqzq_s16(v214));
      int16x8_t v216 = vpmaxq_s16(v215, v215);
      int8x16_t v466 = (int8x16_t)v199;
      int8x16_t v468 = (int8x16_t)v197;
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v218 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v202, (int16x8_t)v196), v197), (int16x8_t)v198), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v219 = vpmaxq_s16(v217, v217);
      int16x8_t v220 = vpminq_s16(v218, v218);
      int16x8_t v221 = vmaxq_s16(v211, v219);
      int16x8_t v222 = vminq_s16(v213, v220);
      int16x8_t v223 = vzip1q_s16(v219, v220);
      int16x8_t v224 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v223)), (int8x16_t)vceqzq_s16(v223));
      int16x8_t v225 = vpmaxq_s16(v224, v224);
      int8x16_t v462 = v495.val[3];
      int8x16_t v464 = (int8x16_t)v201;
      int16x8_t v226 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v227 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16(v199, (int16x8_t)v200), v201), (int16x8_t)v203), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v228 = vpmaxq_s16(v226, v226);
      int16x8_t v229 = vpminq_s16(v227, v227);
      int16x8_t v230 = vmaxq_s16(v221, v228);
      int16x8_t v231 = vminq_s16(v222, v229);
      int16x8_t v232 = vzip1q_s16(v228, v229);
      int16x8_t v233 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v232)), (int8x16_t)vceqzq_s16(v232));
      int16x8_t v234 = vpmaxq_s16(v233, v233);
      int8x16_t v458 = v495.val[2];
      int8x16_t v460 = (int8x16_t)v206;
      int16x8_t v235 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(vmaxq_s16(vmaxq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v236 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(vminq_s16(vminq_s16((int16x8_t)v495.val[3], (int16x8_t)v205), v206), (int16x8_t)v495.val[2]), (int8x16_t)xmmword_242EA77B0);
      int16x8_t v237 = vpmaxq_s16(v235, v235);
      int16x8_t v238 = vpminq_s16(v236, v236);
      int16x8_t v239 = vmaxq_s16(v230, v237);
      int8x16_t v240 = (int8x16_t)vminq_s16(v231, v238);
      int16x8_t v241 = vzip1q_s16(v237, v238);
      int16x8_t v242 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v189, vclsq_s16(v241)), (int8x16_t)vceqzq_s16(v241));
      int16x8_t v243 = vpmaxq_s16(v242, v242);
      int8x16_t v244 = (int8x16_t)vmaxq_s16(vmaxq_s16(v216, v225), vmaxq_s16(v234, v243));
      int8x16_t v456 = (int8x16_t)v239;
      int16x8_t v245 = vclzq_s16(vsubq_s16(v239, (int16x8_t)v240));
      int8x16_t v246 = (int8x16_t)vsubq_s16((int16x8_t)v189, v245);
      int8x16_t v247 = (int8x16_t)vcgtq_s16((int16x8_t)v244, (int16x8_t)v246);
      int8x16_t v248 = vbslq_s8(v247, v246, v244);
      v244.i64[0] = 0x3000300030003;
      v244.i64[1] = 0x3000300030003;
      int16x8_t v249 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v216), (int16x8_t)v244), (int16x8_t)0);
      int8x16_t v250 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v225), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v251 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v234), (int16x8_t)v244), (int16x8_t)0);
      int16x8_t v252 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v248, v243), (int16x8_t)v244), (int16x8_t)0);
      v495.val[3] = (int8x16_t)vsubq_s16((int16x8_t)v248, v249);
      int8x16_t v253 = (int8x16_t)vsubq_s16((int16x8_t)v248, (int16x8_t)v250);
      int16x8_t v254 = vsubq_s16((int16x8_t)v248, v251);
      v495.val[2] = (int8x16_t)vsubq_s16((int16x8_t)v248, v252);
      int8x16_t v255 = (int8x16_t)vceqq_s16(vaddq_s16(v252, v251), vnegq_s16(vaddq_s16(v249, (int16x8_t)v250)));
      v250.i64[0] = 0x4000400040004;
      v250.i64[1] = 0x4000400040004;
      int8x16_t v256 = vbicq_s8(v250, v255);
      v252.i64[0] = 0x7000700070007;
      v252.i64[1] = 0x7000700070007;
      int8x16_t v450 = (int8x16_t)v254;
      int8x16_t v452 = v495.val[3];
      int8x16_t v454 = v495.val[2];
      int16x8_t v257 = vaddq_s16(vmlaq_s16(vaddq_s16((int16x8_t)vandq_s8(v246, v247), vaddq_s16((int16x8_t)v256, (int16x8_t)v256)), (int16x8_t)v495.val[3], v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v254, (int16x8_t)v253), (int16x8_t)v495.val[2]), 3uLL));
      int8x16_t v82 = v486;
      int16x8_t v155 = v487;
      v258.i64[0] = 0x2000200020002;
      v258.i64[1] = 0x2000200020002;
      int16x8_t v259 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v486, v244), (int16x8_t)v258), v189);
      v244.i64[0] = 0x8000800080008;
      v244.i64[1] = 0x8000800080008;
      int16x8_t v154 = v490;
      int8x16_t v153 = v491;
      int16x8_t v156 = v488;
      int16x8_t v158 = v489;
      int8x16_t v260 = (int8x16_t)vdupq_lane_s64(vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v491, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v486, v244))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v244)), v259), v487, v252), vshlq_n_s16(vaddq_s16(vaddq_s16(v489, v488), v490), 3uLL)), v257).i64[0], 0);
      if (vaddvq_s16((int16x8_t)v260))
      {
        v261.i64[0] = 0x9000900090009;
        v261.i64[1] = 0x9000900090009;
        int8x16_t v262 = vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v248), v258), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v247, v261), (int16x8_t)vmvnq_s8(v247)));
        v261.i64[0] = -1;
        v261.i64[1] = -1;
        v263.i64[0] = 0xF000F000F000FLL;
        v263.i64[1] = 0xF000F000F000FLL;
        int16x8_t v155 = (int16x8_t)vbslq_s8(v260, v452, (int8x16_t)v487);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v260, v253, (int8x16_t)v488);
        int16x8_t v158 = (int16x8_t)vbslq_s8(v260, v450, (int8x16_t)v489);
        int16x8_t v154 = (int16x8_t)vbslq_s8(v260, v454, (int8x16_t)v490);
        int8x16_t v153 = vbslq_s8(v260, v248, v491);
        int8x16_t v82 = vbslq_s8(v260, vorrq_s8(v262, v256), v486);
        int8x16_t v484 = vbslq_s8(v260, v458, v484);
        int8x16_t v485 = vbslq_s8(v260, vextq_s8(v439.val[3], v439.val[3], 8uLL), v485);
        int8x16_t v469 = vbslq_s8(v260, v193, v469);
        int8x16_t v470 = vbslq_s8(v260, v194, v470);
        int8x16_t v471 = vbslq_s8(v260, v204, v471);
        int8x16_t v472 = vbslq_s8(v260, v195, v472);
        int8x16_t v473 = vbslq_s8(v260, v202, v473);
        int8x16_t v474 = vbslq_s8(v260, v196, v474);
        int8x16_t v475 = vbslq_s8(v260, v468, v475);
        int8x16_t v476 = vbslq_s8(v260, v198, v476);
        int8x16_t v477 = vbslq_s8(v260, v466, v477);
        int8x16_t v478 = vbslq_s8(v260, v200, v478);
        int8x16_t v479 = vbslq_s8(v260, v464, v479);
        int8x16_t v480 = vbslq_s8(v260, v203, v480);
        int8x16_t v481 = vbslq_s8(v260, v462, v481);
        int8x16_t v482 = vbslq_s8(v260, v205, v482);
        int8x16_t v483 = vbslq_s8(v260, v460, v483);
        int8x16_t v492 = vbslq_s8(v260, v240, v492);
        int8x16_t v493 = vbslq_s8(v260, v456, v493);
        int8x16_t v494 = vbslq_s8(v260, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v261, vsubq_s16(v263, v245)), (int16x8_t)v240), v247), v494);
        int16x8_t v487 = v155;
        int16x8_t v488 = v156;
        int16x8_t v489 = v158;
        int16x8_t v490 = v154;
        int8x16_t v491 = v153;
        int8x16_t v486 = v82;
      }
    }
    int16x8_t v264 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v155));
    int8x16_t v469 = (int8x16_t)vaddq_s16(v264, (int16x8_t)v469);
    int8x16_t v470 = (int8x16_t)vaddq_s16((int16x8_t)v470, v264);
    int8x16_t v471 = (int8x16_t)vaddq_s16((int16x8_t)v471, v264);
    int8x16_t v472 = (int8x16_t)vaddq_s16((int16x8_t)v472, v264);
    int16x8_t v265 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v156));
    int8x16_t v473 = (int8x16_t)vaddq_s16((int16x8_t)v473, v265);
    int8x16_t v474 = (int8x16_t)vaddq_s16((int16x8_t)v474, v265);
    int8x16_t v475 = (int8x16_t)vaddq_s16((int16x8_t)v475, v265);
    int8x16_t v476 = (int8x16_t)vaddq_s16((int16x8_t)v476, v265);
    int16x8_t v266 = (int16x8_t)vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v158));
    int8x16_t v477 = (int8x16_t)vaddq_s16((int16x8_t)v477, v266);
    int8x16_t v478 = (int8x16_t)vaddq_s16((int16x8_t)v478, v266);
    int8x16_t v479 = (int8x16_t)vaddq_s16((int16x8_t)v479, v266);
    int8x16_t v480 = (int8x16_t)vaddq_s16((int16x8_t)v480, v266);
    int8x16_t v267 = vandq_s8(v494, (int8x16_t)vceqq_s16((int16x8_t)v153, v154));
    int8x16_t v481 = (int8x16_t)vaddq_s16((int16x8_t)v481, (int16x8_t)v267);
    int8x16_t v482 = (int8x16_t)vaddq_s16((int16x8_t)v482, (int16x8_t)v267);
    int8x16_t v483 = (int8x16_t)vaddq_s16((int16x8_t)v483, (int16x8_t)v267);
    int8x16_t v484 = (int8x16_t)vaddq_s16((int16x8_t)v484, (int16x8_t)v267);
    v267.i64[0] = 0x8000800080008;
    v267.i64[1] = 0x8000800080008;
    v268.i64[0] = 0x3000300030003;
    v268.i64[1] = 0x3000300030003;
    v269.i64[0] = 0x2000200020002;
    v269.i64[1] = 0x2000200020002;
    int8x16_t v270 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v82, v268), v269);
    v269.i64[0] = 0x10001000100010;
    v269.i64[1] = 0x10001000100010;
    int16x8_t v271 = (int16x8_t)vandq_s8(v270, (int8x16_t)v269);
    v269.i64[0] = 0x7000700070007;
    v269.i64[1] = 0x7000700070007;
    int16x8_t v272 = vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v153, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v82, v267))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v82, (int16x8_t)v82), v267)), v271), v155, v269), vshlq_n_s16(vaddq_s16(v158, vaddq_s16(v156, v154)), 3uLL));
    int16x8_t v273 = vpaddq_s16(v272, v272);
    if ((unint64_t)(vpaddq_s16(v273, v273).i16[0] - 693) < 0xFFFFFFFFFFFFFCF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64x2_t *)a3, a4, a5, a6, a7);
      return 96;
    }
    else
    {
      unsigned int v274 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v275 = 8 * (a1 & 7);
      if (v275) {
        uint64_t v276 = *v274 & ~(-1 << v275);
      }
      else {
        uint64_t v276 = 0;
      }
      *a2 = 0;
      uint64_t v280 = ((v153.u16[0] << 20) - 0x100000) & 0xF00000;
      v281.i32[0] = v82.u16[1];
      v281.i32[1] = v82.u16[2];
      int8x8_t v282 = vand_s8((int8x8_t)vshl_u32(v281, (uint32x2_t)0xA00000005), (int8x8_t)0x7C00000003E0);
      __int32 v283 = v282.i32[1];
      __int32 v284 = v282.i32[0] | v82.i8[0] & 0x1F;
      if (!v153.i16[0]) {
        uint64_t v280 = 0;
      }
      unint64_t v285 = (unint64_t)((v153.i8[4] - 1) & 0xF) << 28;
      if (!v153.i16[2]) {
        unint64_t v285 = 0;
      }
      v286.i32[0] = v153.u16[3];
      v286.i32[1] = v153.u16[1];
      int32x2_t v287 = vceqz_s32((int32x2_t)vand_s8(v286, (int8x8_t)0xFFFF0000FFFFLL));
      v288.i64[0] = v287.i32[0];
      v288.i64[1] = v287.i32[1];
      int8x16_t v289 = (int8x16_t)v288;
      int8x8_t v290 = vand_s8((int8x8_t)vadd_s32((int32x2_t)v286, (int32x2_t)-1), (int8x8_t)0xF0000000FLL);
      v288.i64[0] = v290.u32[0];
      v288.i64[1] = v290.u32[1];
      int8x16_t v291 = vbicq_s8((int8x16_t)vshlq_u64(v288, (uint64x2_t)xmmword_242EA77F0), v289);
      v289.i64[0] = v285;
      v289.i64[1] = v284 | v283 | ((unint64_t)(v82.i8[6] & 0x1F) << 15) | v280;
      int8x16_t v292 = vorrq_s8(v289, v291);
      uint64_t v293 = v485.i64[0];
      unint64_t v294 = vorrq_s8(v292, (int8x16_t)vdupq_laneq_s64((int64x2_t)v292, 1)).u64[0];
      unint64_t v295 = (v294 << v275) | v276;
      if (v275 >= 0x1C)
      {
        *unsigned int v274 = v295;
        unint64_t v295 = v294 >> (-8 * (a1 & 7u));
      }
      v296.i64[0] = WORD1(v293);
      v296.i64[1] = WORD2(v293);
      v297.i64[0] = 0xFFFFLL;
      v297.i64[1] = 0xFFFFLL;
      int8x16_t v298 = vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v296, v297), (uint64x2_t)xmmword_242EA7B20), (int8x16_t)xmmword_242EA7B30);
      unint64_t v299 = v298.i64[0] | v293 & 0x3FF | v298.i64[1] | ((unint64_t)(HIWORD(v293) & 0x3FF) << 30);
      unint64_t v300 = (v275 + 36) & 0x3C;
      unint64_t v301 = v295 | (v299 << v300);
      if (v300 >= 0x18)
      {
        *(void *)((char *)v274 + (((v275 + 36) >> 3) & 8)) = v301;
        unint64_t v301 = v299 >> -(char)v300;
      }
      unint64_t v302 = v275 + 76;
      int8x16_t v303 = (int8x16_t)vsubq_s16((int16x8_t)v491, v487);
      int8x16_t v304 = (int8x16_t)vsubq_s16((int16x8_t)v491, v488);
      int8x16_t v305 = (int8x16_t)vsubq_s16((int16x8_t)v491, v489);
      int8x16_t v306 = (int8x16_t)vsubq_s16((int16x8_t)v491, v490);
      *(uint8x8_t *)v303.i8 = vqmovn_u16((uint16x8_t)v303);
      *(uint8x8_t *)v304.i8 = vqmovn_u16((uint16x8_t)v304);
      *(uint8x8_t *)v305.i8 = vqmovn_u16((uint16x8_t)v305);
      *(uint8x8_t *)v306.i8 = vqmovn_u16((uint16x8_t)v306);
      int16x8_t v307 = (int16x8_t)vtrn1q_s8(v303, v304);
      int16x8_t v308 = (int16x8_t)vtrn2q_s8(v303, v304);
      int8x16_t v309 = vtrn1q_s8(v305, v306);
      int16x8_t v310 = (int16x8_t)vtrn2q_s8(v305, v306);
      int8x16_t v311 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v307, (int16x8_t)v309), (int32x4_t)vzip1q_s16(v308, v310)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v307, (int16x8_t)v309), (int32x4_t)vtrn2q_s16(v308, v310)));
      v309.i64[0] = 0x202020202020202;
      v309.i64[1] = 0x202020202020202;
      int8x16_t v312 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16(*(int16x4_t *)v486.i8, (int16x4_t)0x4000400040004)), v309);
      v309.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v309.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v305.i64[0] = -1;
      v305.i64[1] = -1;
      uint8x16_t v313 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v305, (uint8x16_t)vorrq_s8(v312, v309)), v311);
      int16x8_t v314 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v312.i8);
      int16x8_t v315 = (int16x8_t)vmovl_high_u8((uint8x16_t)v312);
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v313.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)), (int16x8_t)vshlq_u16(vmovl_high_u8(v313), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v315)));
      uint16x8_t v317 = (uint16x8_t)vpaddq_s16(v314, v315);
      int32x4_t v318 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v317.i8);
      int32x4_t v319 = (int32x4_t)vmovl_high_u16(v317);
      int32x4_t v320 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v319)));
      int32x4_t v321 = vpaddq_s32(v318, v319);
      v322.i64[0] = v320.u32[0];
      v322.i64[1] = v320.u32[1];
      uint64x2_t v323 = (uint64x2_t)v322;
      v322.i64[0] = v320.u32[2];
      v322.i64[1] = v320.u32[3];
      uint64x2_t v324 = (uint64x2_t)v322;
      v322.i64[0] = v321.u32[0];
      v322.i64[1] = v321.u32[1];
      int64x2_t v325 = v322;
      v322.i64[0] = v321.u32[2];
      v322.i64[1] = v321.u32[3];
      int64x2_t v326 = vpaddq_s64((int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)), (int64x2_t)vshlq_u64(v324, (uint64x2_t)vzip1q_s64((int64x2_t)0, v322)));
      int64x2_t v327 = vpaddq_s64(v325, v322);
      uint64_t v328 = (v275 + 76) & 0x3C;
      unint64_t v329 = (v326.i64[0] << v328) | v301;
      if ((unint64_t)(v327.i64[0] + v328) >= 0x40)
      {
        *(void *)((char *)v274 + ((v302 >> 3) & 0x18)) = v329;
        unint64_t v329 = (unint64_t)v326.i64[0] >> -(char)v328;
      }
      unint64_t v330 = v327.i64[0] + v302;
      unint64_t v331 = v329 | (v326.i64[1] << v330);
      if ((v330 & 0x3F) + v327.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v326.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      unint64_t v332 = v330 + v327.i64[1];
      v333.i64[0] = 0x8000800080008;
      v333.i64[1] = 0x8000800080008;
      v334.i64[0] = -1;
      v334.i64[1] = -1;
      int16x8_t v335 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v486, v333), (int8x16_t)0, 8uLL), v491);
      v336.i64[0] = 0xF000F000F000FLL;
      v336.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v337 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v334, (uint16x8_t)vaddq_s16(v335, v336)), v494);
      int32x4_t v338 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v335.i8);
      int32x4_t v339 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v337.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v338)), (int32x4_t)vmovl_high_u16(v337));
      int32x4_t v340 = vpaddq_s32(v338, (int32x4_t)vmovl_high_u16((uint16x8_t)v335));
      v341.i64[0] = v339.u32[0];
      v341.i64[1] = v339.u32[1];
      uint64x2_t v342 = (uint64x2_t)v341;
      v341.i64[0] = v339.u32[2];
      v341.i64[1] = v339.u32[3];
      uint64x2_t v343 = (uint64x2_t)v341;
      v341.i64[0] = v340.u32[0];
      v341.i64[1] = v340.u32[1];
      int64x2_t v344 = v341;
      v341.i64[0] = v340.u32[2];
      v341.i64[1] = v340.u32[3];
      int64x2_t v345 = vpaddq_s64((int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)), (int64x2_t)vshlq_u64(v343, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)));
      int64x2_t v346 = vpaddq_s64(v344, v341);
      unint64_t v347 = (v345.i64[0] << v332) | v331;
      if (v346.i64[0] + (v332 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v345.i64[0] >> -(v332 & 0x3F);
        if ((v332 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346.i64[0] + v332;
      unint64_t v349 = v347 | (v345.i64[1] << v348);
      if ((v348 & 0x3F) + v346.i64[1] >= 0x40)
      {
        *(void *)((char *)v274 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v345.i64[1] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348 + v346.i64[1];
      int16x8_t v351 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v487, 8uLL);
      v352.i64[0] = 0xF000F000F000FLL;
      v352.i64[1] = 0xF000F000F000FLL;
      v353.i64[0] = -1;
      v353.i64[1] = -1;
      uint16x8_t v354 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v353, (uint16x8_t)vaddq_s16(v351, v352)), v469);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16((uint16x8_t)v351);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8), (int32x4_t)vshlq_u32(vmovl_high_u16(v354), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v350) | v349;
      if (v364.i64[0] + (v350 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v274 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        if ((v350 & 0x3F) != 0) {
          unint64_t v365 = (unint64_t)v363.i64[0] >> -(v350 & 0x3F);
        }
        else {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364.i64[0] + v350;
      uint64_t v367 = (v364.i64[0] + v350) & 0x3F;
      unint64_t v368 = v365 | (v363.i64[1] << v366);
      if ((unint64_t)(v367 + v364.i64[1]) >= 0x40)
      {
        *(void *)((char *)v274 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v363.i64[1] >> -(char)v367;
        if (!v367) {
          unint64_t v368 = 0;
        }
      }
      unint64_t v369 = v366 + v364.i64[1];
      v370.i64[0] = 0xF000F000F000FLL;
      v370.i64[1] = 0xF000F000F000FLL;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      for (uint64_t i = 16; i != 64; i += 16)
      {
        uint16x8_t v373 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v371, (uint16x8_t)vaddq_s16(v487, v370)), *(int8x16_t *)((char *)&v469 + i));
        int32x4_t v374 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v487.i8);
        int32x4_t v375 = (int32x4_t)vmovl_high_u16((uint16x8_t)v487);
        int32x4_t v376 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v374)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)));
        int32x4_t v377 = vpaddq_s32(v374, v375);
        v378.i64[0] = v376.u32[0];
        v378.i64[1] = v376.u32[1];
        uint64x2_t v379 = (uint64x2_t)v378;
        v378.i64[0] = v376.u32[2];
        v378.i64[1] = v376.u32[3];
        uint64x2_t v380 = (uint64x2_t)v378;
        v378.i64[0] = v377.u32[0];
        v378.i64[1] = v377.u32[1];
        int64x2_t v381 = v378;
        v378.i64[0] = v377.u32[2];
        v378.i64[1] = v377.u32[3];
        int64x2_t v382 = vpaddq_s64((int64x2_t)vshlq_u64(v379, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)), (int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)));
        int64x2_t v383 = vpaddq_s64(v381, v378);
        unint64_t v384 = (v382.i64[0] << v369) | v368;
        if (v383.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v382.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v383.i64[0] + v369;
        unint64_t v368 = v384 | (v382.i64[1] << v385);
        if ((v385 & 0x3F) + v383.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v382.i64[1] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v385 + v383.i64[1];
      }
      uint64_t v386 = 0;
      v387.i64[0] = 0xF000F000F000FLL;
      v387.i64[1] = 0xF000F000F000FLL;
      v388.i64[0] = -1;
      v388.i64[1] = -1;
      do
      {
        uint16x8_t v389 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v388, (uint16x8_t)vaddq_s16(v488, v387)), *(int8x16_t *)((char *)&v473 + v386));
        int32x4_t v390 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v488.i8);
        int32x4_t v391 = (int32x4_t)vmovl_high_u16((uint16x8_t)v488);
        int32x4_t v392 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v390)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)));
        int32x4_t v393 = vpaddq_s32(v390, v391);
        v394.i64[0] = v392.u32[0];
        v394.i64[1] = v392.u32[1];
        uint64x2_t v395 = (uint64x2_t)v394;
        v394.i64[0] = v392.u32[2];
        v394.i64[1] = v392.u32[3];
        uint64x2_t v396 = (uint64x2_t)v394;
        v394.i64[0] = v393.u32[0];
        v394.i64[1] = v393.u32[1];
        int64x2_t v397 = v394;
        v394.i64[0] = v393.u32[2];
        v394.i64[1] = v393.u32[3];
        int64x2_t v398 = vpaddq_s64((int64x2_t)vshlq_u64(v395, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)), (int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)));
        int64x2_t v399 = vpaddq_s64(v397, v394);
        unint64_t v400 = (v398.i64[0] << v369) | v368;
        if (v399.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v400;
          unint64_t v400 = (unint64_t)v398.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v400 = 0;
          }
        }
        unint64_t v401 = v399.i64[0] + v369;
        unint64_t v368 = v400 | (v398.i64[1] << v401);
        if ((v401 & 0x3F) + v399.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v398.i64[1] >> -(v401 & 0x3F);
          if ((v401 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v401 + v399.i64[1];
        v386 += 16;
      }
      while (v386 != 64);
      uint64_t v402 = 0;
      v403.i64[0] = 0xF000F000F000FLL;
      v403.i64[1] = 0xF000F000F000FLL;
      v404.i64[0] = -1;
      v404.i64[1] = -1;
      do
      {
        uint16x8_t v405 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v404, (uint16x8_t)vaddq_s16(v489, v403)), *(int8x16_t *)((char *)&v477 + v402));
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v489.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16((uint16x8_t)v489);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v405.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v405), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v369) | v368;
        if (v415.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v369;
        unint64_t v368 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v417 + v415.i64[1];
        v402 += 16;
      }
      while (v402 != 64);
      uint64_t v418 = 0;
      v419.i64[0] = 0xF000F000F000FLL;
      v419.i64[1] = 0xF000F000F000FLL;
      v420.i64[0] = -1;
      v420.i64[1] = -1;
      do
      {
        uint16x8_t v421 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v420, (uint16x8_t)vaddq_s16(v490, v419)), *(int8x16_t *)((char *)&v481 + v418));
        int32x4_t v422 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v490.i8);
        int32x4_t v423 = (int32x4_t)vmovl_high_u16((uint16x8_t)v490);
        int32x4_t v424 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v421.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v422)), (int32x4_t)vshlq_u32(vmovl_high_u16(v421), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v423)));
        int32x4_t v425 = vpaddq_s32(v422, v423);
        v426.i64[0] = v424.u32[0];
        v426.i64[1] = v424.u32[1];
        uint64x2_t v427 = (uint64x2_t)v426;
        v426.i64[0] = v424.u32[2];
        v426.i64[1] = v424.u32[3];
        uint64x2_t v428 = (uint64x2_t)v426;
        v426.i64[0] = v425.u32[0];
        v426.i64[1] = v425.u32[1];
        int64x2_t v429 = v426;
        v426.i64[0] = v425.u32[2];
        v426.i64[1] = v425.u32[3];
        int64x2_t v430 = vpaddq_s64((int64x2_t)vshlq_u64(v427, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)), (int64x2_t)vshlq_u64(v428, (uint64x2_t)vzip1q_s64((int64x2_t)0, v426)));
        int64x2_t v431 = vpaddq_s64(v429, v426);
        unint64_t v432 = (v430.i64[0] << v369) | v368;
        if (v431.i64[0] + (v369 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v432;
          unint64_t v432 = (unint64_t)v430.i64[0] >> -(v369 & 0x3F);
          if ((v369 & 0x3F) == 0) {
            unint64_t v432 = 0;
          }
        }
        unint64_t v433 = v431.i64[0] + v369;
        unint64_t v368 = v432 | (v430.i64[1] << v433);
        if ((v433 & 0x3F) + v431.i64[1] >= 0x40)
        {
          *(void *)((char *)v274 + ((v433 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
          unint64_t v368 = (unint64_t)v430.i64[1] >> -(v433 & 0x3F);
          if ((v433 & 0x3F) == 0) {
            unint64_t v368 = 0;
          }
        }
        unint64_t v369 = v433 + v431.i64[1];
        v418 += 16;
      }
      while (v418 != 64);
      if ((v369 & 0x3F) != 0) {
        *(void *)((char *)v274 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
      }
      unint64_t result = (v369 - v275 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    uint64x2_t v277 = (uint64x2_t)vld1q_dup_f64((const double *)a3->i64);
    int8x16_t v278 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B40), (int8x16_t)xmmword_242EA7B70), vandq_s8((int8x16_t)vshlq_u64(v277, (uint64x2_t)xmmword_242EA7B50), (int8x16_t)xmmword_242EA7B60));
    *(int8x8_t *)v278.i8 = vorr_s8(*(int8x8_t *)v278.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v278, v278, 8uLL));
    *(_DWORD *)a1 = v278.i32[0];
    *(unsigned char *)(a1 + 4) = v278.i8[4];
    *a2 = 4;
    return 5;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  long long v76 = 0u;
  long long v77 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  uint64_t v10 = a6;
  long long v66 = 0u;
  long long v67 = 0u;
  if (a5 > 3)
  {
    uint64_t v13 = a5 & 0xFC;
    if (a5 == v13)
    {
      uint64_t v14 = 0;
      int16x8_t v15 = a3 + 1;
      int16x8_t v16 = &v70;
      v17.i64[0] = 0xFC00FC00FC00FC00;
      v17.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        int16x8_t v18 = v16;
        int16x8_t v19 = v15;
        uint64_t v20 = a5;
        do
        {
          int8x16_t v21 = vandq_s8((int8x16_t)vshrq_n_u64(v19[-1], 6uLL), v17);
          int8x16_t v22 = vandq_s8((int8x16_t)vshrq_n_u64(*v19, 6uLL), v17);
          int16x8_t v23 = v18 + 2;
          *((void *)v18 - 8) = v21.i64[0];
          *((void *)v18 - 4) = v21.i64[1];
          *(void *)int16x8_t v18 = v22.i64[0];
          v18 += 8;
          *int16x8_t v23 = v22.i64[1];
          v19 += 2;
          v20 -= 4;
        }
        while (v20);
        ++v14;
        int16x8_t v15 = (uint64x2_t *)((char *)v15 + a4);
        int16x8_t v16 = (long long *)((char *)v16 + 8);
      }
      while (v14 != a6);
    }
    else
    {
      uint64_t v24 = 0;
      int16x8_t v25 = a3 + 1;
      int16x8_t v26 = &v70;
      int16x8_t v27 = (uint64_t *)((char *)&v66 + ((32 * a5) & 0x1F80));
      v28.i64[0] = 0xFC00FC00FC00FC00;
      v28.i64[1] = 0xFC00FC00FC00FC00;
      do
      {
        int16x8_t v29 = v26;
        int16x8_t v30 = v25;
        uint64_t v31 = a5 & 0xFC;
        do
        {
          int8x16_t v32 = vandq_s8((int8x16_t)vshrq_n_u64(v30[-1], 6uLL), v28);
          int8x16_t v33 = vandq_s8((int8x16_t)vshrq_n_u64(*v30, 6uLL), v28);
          int16x8_t v34 = v29 + 2;
          *((void *)v29 - 8) = v32.i64[0];
          *((void *)v29 - 4) = v32.i64[1];
          *(void *)int16x8_t v29 = v33.i64[0];
          v29 += 8;
          *int16x8_t v34 = v33.i64[1];
          v30 += 2;
          v31 -= 4;
        }
        while (v31);
        int16x8_t v35 = (unint64_t *)((char *)a3 + 8 * v13 + v24 * a4);
        int8x16_t v36 = v27;
        uint64_t v37 = a5 - v13;
        do
        {
          unint64_t v38 = *v35++;
          uint64_t *v36 = (v38 >> 6) & 0x3FF03FF03FF03FFLL;
          v36 += 4;
          --v37;
        }
        while (v37);
        ++v24;
        int16x8_t v25 = (uint64x2_t *)((char *)v25 + a4);
        int16x8_t v26 = (long long *)((char *)v26 + 8);
        ++v27;
      }
      while (v24 != v10);
    }
  }
  else
  {
    int16x8_t v11 = a3 + 1;
    int16x8_t v12 = (uint64_t *)&v68;
    do
    {
      *(v12 - 4) = ((unint64_t)v11[-1].i64[0] >> 6) & 0x3FF03FF03FF03FFLL;
      if (a5 != 1)
      {
        *int16x8_t v12 = ((unint64_t)v11[-1].i64[1] >> 6) & 0x3FF03FF03FF03FFLL;
        if (a5 != 2) {
          v12[4] = ((unint64_t)v11->i64[0] >> 6) & 0x3FF03FF03FF03FFLL;
        }
      }
      int16x8_t v11 = (uint64x2_t *)((char *)v11 + a4);
      ++v12;
      --v10;
    }
    while (v10);
  }
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v66);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v68);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v66 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v68 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v70);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v72);
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)((char *)&v70 + 8));
  uint32x4_t v40 = vmovl_u16(*(uint16x4_t *)((char *)&v72 + 8));
  if (a5 >= 4) {
    unsigned int v41 = 4;
  }
  else {
    unsigned int v41 = a5;
  }
  if (a5 >= 4) {
    unsigned int v42 = a5 - 4;
  }
  else {
    unsigned int v42 = 0;
  }
  if (a6 >= 2) {
    unsigned int v43 = 2;
  }
  else {
    unsigned int v43 = a6;
  }
  uint32x4_t v64 = v39;
  uint32x4_t v65 = v40;
  if (a6 >= 2) {
    unsigned int v44 = a6 - 2;
  }
  else {
    unsigned int v44 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v58, a7, v41, v43);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v67);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v69);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v67 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v69 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v71);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v73);
  uint32x4_t v64 = vmovl_u16(*(uint16x4_t *)((char *)&v71 + 8));
  uint32x4_t v65 = vmovl_u16(*(uint16x4_t *)((char *)&v73 + 8));
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v44;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v58, a7, v41, v47);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v74);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v76);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v74 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v76 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v78);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v80);
  uint32x4_t v49 = vmovl_u16(*(uint16x4_t *)((char *)&v78 + 8));
  uint32x4_t v50 = vmovl_u16(*(uint16x4_t *)((char *)&v80 + 8));
  if (a5 >= 8) {
    unsigned int v51 = 4;
  }
  else {
    unsigned int v51 = v42;
  }
  uint32x4_t v64 = v49;
  uint32x4_t v65 = v50;
  int v52 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v58, a7, v51, v43);
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)&v75);
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)&v77);
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)((char *)&v75 + 8));
  uint32x4_t v61 = vmovl_u16(*(uint16x4_t *)((char *)&v77 + 8));
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)&v79);
  uint32x4_t v63 = vmovl_u16(*(uint16x4_t *)&v81);
  uint32x4_t v64 = vmovl_u16(*(uint16x4_t *)((char *)&v79 + 8));
  uint32x4_t v65 = vmovl_u16(*(uint16x4_t *)((char *)&v81 + 8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 72, (uint64_t)&v58, a7, v51, v47);
  if (v52) {
    char v54 = 4;
  }
  else {
    char v54 = 0;
  }
  if (v48) {
    char v55 = 2;
  }
  else {
    char v55 = 0;
  }
  if (result) {
    char v56 = -8;
  }
  else {
    char v56 = -16;
  }
  *a2 = v56 | v54 | v46 | v55;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)19,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)1,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v331 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v298 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v297 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v296 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v295 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v293 = v9;
  BOOL v294 = v14;
  BOOL v15 = a4 < 2 || a5 == 0;
  do
  {
    *(unsigned int *)((char *)&v327 + v8 * 4) = 10;
    v315[v8] = 1;
    *(_DWORD *)((char *)&v314[2] + v8 * 4) = 512;
    int8x16_t v22 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      uint64_t v24 = &v317[v8];
      if ((*v22 ^ 0x200) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = *v22 ^ 0x200;
      }
      unsigned int *v24 = v23;
      if ((v22[4] ^ 0x200) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v22[4] ^ 0x200;
      }
      v24[4] = v25;
      if ((v22[8] ^ 0x200) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v22[8] ^ 0x200;
      }
      v24[8] = v26;
      if ((v22[12] ^ 0x200) == 1) {
        unsigned int v27 = 0;
      }
      else {
        unsigned int v27 = v22[12] ^ 0x200;
      }
      v24[12] = v27;
      if ((v22[16] ^ 0x200) == 1) {
        unsigned int v28 = 0;
      }
      else {
        unsigned int v28 = v22[16] ^ 0x200;
      }
      v24[16] = v28;
      if ((v22[20] ^ 0x200) == 1) {
        unsigned int v29 = 0;
      }
      else {
        unsigned int v29 = v22[20] ^ 0x200;
      }
      v24[20] = v29;
      unsigned int v30 = v22[24] ^ 0x200;
      if (v30 == 1) {
        unsigned int v30 = 0;
      }
      v24[24] = v30;
      int v32 = v22[28] ^ 0x200;
      if (v32 == 1) {
        unsigned int v31 = 0;
      }
      else {
        unsigned int v31 = v32;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v23 = *v22 ^ 0x200;
      uint64_t v24 = &v317[v8];
      unsigned int *v24 = v23;
      unsigned int v25 = v22[4] ^ 0x200;
      v24[4] = v25;
      unsigned int v26 = v22[8] ^ 0x200;
      v24[8] = v26;
      unsigned int v27 = v22[12] ^ 0x200;
      v24[12] = v27;
      unsigned int v28 = v22[16] ^ 0x200;
      v24[16] = v28;
      unsigned int v29 = v22[20] ^ 0x200;
      v24[20] = v29;
      unsigned int v30 = v22[24] ^ 0x200;
      v24[24] = v30;
      unsigned int v31 = v22[28] ^ 0x200;
    }
    else
    {
      unsigned int v23 = *v22;
      uint64_t v24 = &v317[v8];
      unsigned int *v24 = *v22;
      unsigned int v25 = v22[4];
      v24[4] = v25;
      unsigned int v26 = v22[8];
      v24[8] = v26;
      unsigned int v27 = v22[12];
      v24[12] = v27;
      unsigned int v28 = v22[16];
      v24[16] = v28;
      unsigned int v29 = v22[20];
      v24[20] = v29;
      unsigned int v30 = v22[24];
      v24[24] = v30;
      unsigned int v31 = v22[28];
    }
    v24[28] = v31;
    int8x16_t v33 = &v322[v8 + 4];
    v322[v8 + 4] = v23;
    *(int *)((char *)&v323 + v8 * 4) = v23;
    v322[v8] = 0;
    unsigned int v34 = v23;
    if (v15)
    {
      if (v294) {
        goto LABEL_62;
      }
    }
    else
    {
      if (v25 < v23)
      {
        v322[v8] = 1;
        *(int *)((char *)&v323 + v8 * 4) = v25;
        unsigned int v34 = v25;
      }
      if (v23 >= v25) {
        int16x8_t v35 = &v322[v8 + 4];
      }
      else {
        int16x8_t v35 = &v317[v8 + 4];
      }
      unsigned int v23 = *v35;
      unsigned int *v33 = v23;
      if (v294)
      {
LABEL_62:
        if (v293) {
          goto LABEL_63;
        }
        goto LABEL_80;
      }
    }
    if (v26 < v34)
    {
      v322[v8] = 2;
      *(int *)((char *)&v323 + v8 * 4) = v26;
      unsigned int v34 = v26;
    }
    if (v23 >= v26) {
      int8x16_t v36 = &v322[v8 + 4];
    }
    else {
      int8x16_t v36 = &v317[v8 + 8];
    }
    unsigned int v23 = *v36;
    unsigned int *v33 = *v36;
    if (v293)
    {
LABEL_63:
      if (v295) {
        goto LABEL_64;
      }
      goto LABEL_86;
    }
LABEL_80:
    if (v27 < v34)
    {
      v322[v8] = 3;
      *(int *)((char *)&v323 + v8 * 4) = v27;
      unsigned int v34 = v27;
    }
    if (v23 >= v27) {
      uint64_t v37 = &v322[v8 + 4];
    }
    else {
      uint64_t v37 = &v317[v8 + 12];
    }
    unsigned int v23 = *v37;
    unsigned int *v33 = *v37;
    if (v295)
    {
LABEL_64:
      if (v297) {
        goto LABEL_65;
      }
      goto LABEL_92;
    }
LABEL_86:
    if (v28 < v34)
    {
      v322[v8] = 4;
      *(int *)((char *)&v323 + v8 * 4) = v28;
      unsigned int v34 = v28;
    }
    if (v23 >= v28) {
      unint64_t v38 = &v322[v8 + 4];
    }
    else {
      unint64_t v38 = &v317[v8 + 16];
    }
    unsigned int v23 = *v38;
    unsigned int *v33 = *v38;
    if (v297)
    {
LABEL_65:
      if (v296) {
        goto LABEL_66;
      }
      goto LABEL_98;
    }
LABEL_92:
    if (v29 < v34)
    {
      v322[v8] = 5;
      *(int *)((char *)&v323 + v8 * 4) = v29;
      unsigned int v34 = v29;
    }
    if (v23 >= v29) {
      uint32x4_t v39 = &v322[v8 + 4];
    }
    else {
      uint32x4_t v39 = &v317[v8 + 20];
    }
    unsigned int v23 = *v39;
    unsigned int *v33 = *v39;
    if (v296)
    {
LABEL_66:
      if (v298) {
        goto LABEL_109;
      }
LABEL_104:
      if (v31 < v34)
      {
        v322[v8] = 7;
        *(int *)((char *)&v323 + v8 * 4) = v31;
        unsigned int v34 = v31;
      }
      unsigned int v41 = &v317[v8 + 28];
      if (v23 >= v31) {
        unsigned int v41 = &v322[v8 + 4];
      }
      unsigned int v23 = *v41;
      unsigned int *v33 = *v41;
      goto LABEL_109;
    }
LABEL_98:
    if (v30 < v34)
    {
      v322[v8] = 6;
      *(int *)((char *)&v323 + v8 * 4) = v30;
      unsigned int v34 = v30;
    }
    if (v23 >= v30) {
      uint32x4_t v40 = &v322[v8 + 4];
    }
    else {
      uint32x4_t v40 = &v317[v8 + 24];
    }
    unsigned int v23 = *v40;
    unsigned int *v33 = *v40;
    if (!v298) {
      goto LABEL_104;
    }
LABEL_109:
    unsigned int v42 = __clz(v23 - v34);
    int v43 = 32 - v42;
    if ((int)(32 - v42) <= 1) {
      int v43 = 1;
    }
    unsigned int v44 = v43 - 1;
    if (v42 - 29 < 3) {
      unsigned int v44 = 2;
    }
    if (v34) {
      BOOL v45 = v34 == 1023;
    }
    else {
      BOOL v45 = 1;
    }
    int v46 = !v45;
    if (v44 < 3 && v23 == v34) {
      unsigned int v44 = v46;
    }
    *(unsigned int *)((char *)&v318 + v8 * 4) = v44;
    if ((a3 | 2) == 3)
    {
      BOOL v48 = 0;
      if (v23 >= 0x200 && v34 <= 0x1FF) {
        BOOL v48 = kDQuadParamTable[10 * v44 + 168] == 0;
      }
      if (v44 <= 5)
      {
LABEL_131:
        if (!v48) {
          goto LABEL_32;
        }
      }
    }
    else
    {
      BOOL v48 = 0;
      if (v44 <= 5) {
        goto LABEL_131;
      }
    }
    unsigned int v16 = kDQuadParamTable[10 * v44 + 164] - v48;
    if (v48) {
      int v17 = 0;
    }
    else {
      int v17 = -2;
    }
    if (v16 >= 0xA) {
      int v18 = 0;
    }
    else {
      int v18 = v34 & ~(-1 << (10 - v16));
    }
    int v19 = v18 + v17;
    unsigned int v20 = __clz(v19 + v23 - v34);
    if (v19 >= 1 && v20 < v42) {
      *(unsigned int *)((char *)&v318 + v8 * 4) = v44 + 1;
    }
LABEL_32:
    ++v8;
  }
  while (v8 != 4);
  v314[0] = 0;
  v314[1] = 0;
  v313[0] = 0;
  v313[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v315, &v318, v314, v313);
  int v49 = 0;
  if (a4) {
    BOOL v50 = a5 == 0;
  }
  else {
    BOOL v50 = 1;
  }
  int v51 = v50;
  unint64_t v52 = 0x30u;
  while (2)
  {
    int v54 = *(_DWORD *)((char *)v313 + v52);
    unsigned int v55 = v317[v52 / 4 + 20];
    char v56 = &kDQuadParamTable[160 * v54 + 10 * v55];
    unint64_t v57 = *((void *)v56 + 1);
    int v59 = v56[4];
    int v58 = v56[5];
    *(_DWORD *)((char *)&v302 + v52) = v59;
    uint32x4_t v60 = (char *)&v305 + v52;
    *(_DWORD *)((char *)&v301 + v52) = v58;
    int v61 = *(_DWORD *)((char *)&v303 + v52) - *(unsigned int *)((char *)&v305 + v52);
    if (v61 < 0)
    {
      if (kDQuadParamTable[160 * v54 + 7 + 10 * v55] < (signed int)(*(unsigned int *)((char *)&v305 + v52)
                                                                   - *(_DWORD *)((char *)&v303 + v52)))
      {
        *((_DWORD *)v60 - 12) = --v58;
        if (!kDQuadParamTable[160 * v54 + 8 + 10 * v55])
        {
          int v62 = -1;
LABEL_147:
          *(_DWORD *)((char *)&v302 + v52) = v62 + v59;
        }
      }
    }
    else if (v61)
    {
      v58 += v61;
      *((_DWORD *)v60 - 12) = v58;
      int v62 = v61;
      goto LABEL_147;
    }
    if (v54 == 5)
    {
      int v63 = (v61 < 2) | v49;
      if (v55 == 1) {
        int v49 = v63;
      }
    }
    if (a3 == 4)
    {
      if (v54 == 3) {
        int v64 = 31744;
      }
      else {
        int v64 = 0;
      }
      if (v54 == 4) {
        int v65 = 2139095040;
      }
      else {
        int v65 = v64;
      }
      int v66 = 1 << (v322[v52 / 4] - 1);
      if (v51)
      {
        if (v15) {
          goto LABEL_162;
        }
LABEL_176:
        int v70 = *(_DWORD *)((char *)&v316[6] + v52);
        BOOL v72 = (v65 & ~v70) == 0 || v70 == v66;
        v49 |= v72;
        if (!v294) {
          goto LABEL_183;
        }
LABEL_163:
        if (v293) {
          goto LABEL_164;
        }
LABEL_190:
        unsigned int v76 = v317[v52 / 4];
        BOOL v78 = (v65 & ~v76) == 0 || v76 == v66;
        v49 |= v78;
        if (!v295) {
          goto LABEL_197;
        }
LABEL_165:
        if (v297) {
          goto LABEL_166;
        }
LABEL_204:
        unsigned int v82 = v317[v52 / 4 + 8];
        BOOL v84 = (v65 & ~v82) == 0 || v82 == v66;
        v49 |= v84;
        if (!v296) {
          goto LABEL_211;
        }
LABEL_167:
        if (!v298) {
          goto LABEL_218;
        }
      }
      else
      {
        int v67 = *(_DWORD *)((char *)&v316[5] + v52);
        BOOL v69 = (v65 & ~v67) == 0 || v67 == v66;
        v49 |= v69;
        if (!v15) {
          goto LABEL_176;
        }
LABEL_162:
        if (v294) {
          goto LABEL_163;
        }
LABEL_183:
        int v73 = *(_DWORD *)((char *)&v316[7] + v52);
        BOOL v75 = (v65 & ~v73) == 0 || v73 == v66;
        v49 |= v75;
        if (!v293) {
          goto LABEL_190;
        }
LABEL_164:
        if (v295) {
          goto LABEL_165;
        }
LABEL_197:
        unsigned int v79 = v317[v52 / 4 + 4];
        BOOL v81 = (v65 & ~v79) == 0 || v79 == v66;
        v49 |= v81;
        if (!v297) {
          goto LABEL_204;
        }
LABEL_166:
        if (v296) {
          goto LABEL_167;
        }
LABEL_211:
        unsigned int v85 = v317[v52 / 4 + 12];
        BOOL v87 = (v65 & ~v85) == 0 || v85 == v66;
        v49 |= v87;
        if (!v298)
        {
LABEL_218:
          unsigned int v88 = v317[v52 / 4 + 16];
          BOOL v90 = (v65 & ~v88) == 0 || v88 == v66;
          v49 |= v90;
        }
      }
    }
    if (v57 >> v58 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)19,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v52))
      int v53 = 1;
    else {
      int v53 = v51;
    }
    v49 |= v53;
    v52 += 4;
    if (v52 != 64) {
      continue;
    }
    break;
  }
  uint64_t v91 = 0;
  uint64_t v303 = 0;
  uint64_t v304 = 0;
  long long v301 = 0u;
  long long v302 = 0u;
  memset(v300, 0, sizeof(v300));
  int16x8_t v92 = v317;
  int16x8_t v93 = v316;
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v327 + v91);
    if (v96 >= *(&v309 + v91)) {
      unsigned int v97 = *(&v309 + v91);
    }
    else {
      unsigned int v97 = *(&v327 + v91);
    }
    *(&v309 + v91) = v97;
    int16x8_t v98 = &kDQuadParamTable[160 * v315[v91] + 10 * *(&v318 + v91)];
    unsigned int v99 = *(&v305 + v91);
    if (v98[5]) {
      unsigned int v100 = v96;
    }
    else {
      unsigned int v100 = 0;
    }
    if (v100 < v99) {
      unsigned int v99 = v100;
    }
    int v101 = *(&v323 + v91) & (-1 << (v96 - v97));
    int16x8_t v102 = &v317[v91];
    int v103 = *v102 - v101;
    int16x8_t v104 = &v316[2 * v91];
    if (v51) {
      int v103 = 0;
    }
    int v105 = v102[4] - v101;
    if (v15) {
      int v105 = 0;
    }
    *int16x8_t v104 = v103;
    v104[1] = v105;
    int v106 = v102[8] - v101;
    if (v294) {
      int v106 = 0;
    }
    int v107 = v102[12] - v101;
    if (v293) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v102[16] - v101;
    if (v295) {
      int v108 = 0;
    }
    int v109 = v102[20] - v101;
    if (v297) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    uint64_t v110 = -1 << v96;
    *(&v305 + v91) = v99;
    unint64_t v111 = *((void *)v98 + 1);
    *((_DWORD *)&v303 + v91) = v101;
    unint64_t v112 = v111 >> v99;
    int v113 = v102[24] - v101;
    if (v296) {
      int v113 = 0;
    }
    int v114 = v102[28] - v101;
    if (v298) {
      int v114 = 0;
    }
    v104[6] = v113;
    v104[7] = v114;
    if (v112 <= 1) {
      unint64_t v115 = 1;
    }
    else {
      unint64_t v115 = v112;
    }
    uint64_t v116 = 4 * v322[v91];
    int16x8_t v117 = &byte_242EA911D;
    do
    {
      if (v116 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)((char *)v93 + v94) / v115;
        }
        else {
          LODWORD(v118) = 0;
        }
        int16x8_t v119 = (int *)v300 + 7 * v91 + v95;
        *int16x8_t v119 = v118;
        if (v112 >= 2)
        {
          unint64_t v120 = *(unsigned int *)((char *)v93 + v94);
          if (v120)
          {
            if (v120 / v115 * v115 == v120 && ((v120 / v115) & 1) != 0)
            {
              if (v101 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v92[v94], v123 = *((unsigned int *)&v314[2] + v91), v122 != v123)
                  && ((a3 | 2) != 3 || v115 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  *int16x8_t v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v92[v94] == ~v110) {
          *int16x8_t v119 = ~(-1 << v99);
        }
        if (*v117 >= a5 || *(v117 - 1) >= a4) {
          *int16x8_t v119 = 0;
        }
        ++v95;
      }
      v94 += 4;
      v117 += 2;
    }
    while (v94 != 32);
    ++v91;
    v93 += 2;
    ++v92;
  }
  while (v91 != 4);
  int16x8_t v124 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v125 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v49)
  {
    uint64_t v126 = 0;
    uint64_t v127 = 0;
    unsigned int v128 = v327;
    unsigned int v129 = v328;
    uint64_t v130 = v327 - 4;
    uint64_t v131 = v328 - 4;
    unsigned int v133 = v329;
    unsigned int v132 = v330;
    uint64_t v134 = v329 - 4;
    uint64_t v135 = v330 - 4;
    uint64_t v136 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v137 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v126;
      BOOL v138 = v137[1] >= a5 || *v137 >= a4;
      char v139 = v138;
      if (v138)
      {
        unint64_t v140 = 0;
        if (v130 > 0x100) {
          goto LABEL_303;
        }
      }
      else
      {
        unint64_t v140 = (unint64_t)v317[4 * v126] >> 4;
        if (v130 > 0x100) {
          goto LABEL_303;
        }
      }
      if (v128 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v130) <= 0xC0)
      {
        uint64_t v141 = 0;
        unint64_t v142 = v128 - 4;
        do
        {
          unint64_t v143 = 64 - v136;
          if (64 - v136 >= v142) {
            unint64_t v143 = v142;
          }
          v124[v127] |= ((v140 >> v141) & ~(-1 << v143)) << v136;
          v141 += v143;
          unint64_t v144 = v143 + v136;
          v127 += v144 >> 6;
          uint64_t v136 = v144 & 0x3F;
          v142 -= v143;
        }
        while (v142);
      }
LABEL_303:
      if (v139)
      {
        unint64_t v145 = 0;
        if (v131 > 0x100) {
          goto LABEL_313;
        }
      }
      else
      {
        unint64_t v145 = (unint64_t)v317[4 * v126 + 1] >> 4;
        if (v131 > 0x100) {
          goto LABEL_313;
        }
      }
      if (v129 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v131) <= 0xC0)
      {
        uint64_t v146 = 0;
        unint64_t v147 = v129 - 4;
        do
        {
          unint64_t v148 = 64 - v136;
          if (64 - v136 >= v147) {
            unint64_t v148 = v147;
          }
          v124[v127] |= ((v145 >> v146) & ~(-1 << v148)) << v136;
          v146 += v148;
          unint64_t v149 = v148 + v136;
          v127 += v149 >> 6;
          uint64_t v136 = v149 & 0x3F;
          v147 -= v148;
        }
        while (v147);
      }
LABEL_313:
      if (v139)
      {
        unint64_t v150 = 0;
        if (v134 > 0x100) {
          goto LABEL_323;
        }
      }
      else
      {
        unint64_t v150 = (unint64_t)v317[4 * v126 + 2] >> 4;
        if (v134 > 0x100) {
          goto LABEL_323;
        }
      }
      if (v133 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v134) <= 0xC0)
      {
        uint64_t v151 = 0;
        unint64_t v152 = v133 - 4;
        do
        {
          unint64_t v153 = 64 - v136;
          if (64 - v136 >= v152) {
            unint64_t v153 = v152;
          }
          v124[v127] |= ((v150 >> v151) & ~(-1 << v153)) << v136;
          v151 += v153;
          unint64_t v154 = v153 + v136;
          v127 += v154 >> 6;
          uint64_t v136 = v154 & 0x3F;
          v152 -= v153;
        }
        while (v152);
      }
LABEL_323:
      if (v139)
      {
        unint64_t v155 = 0;
        if (v135 <= 0x100) {
          goto LABEL_327;
        }
      }
      else
      {
        unint64_t v155 = (unint64_t)v317[4 * v126 + 3] >> 4;
        if (v135 <= 0x100)
        {
LABEL_327:
          if (v132 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v135) <= 0xC0)
          {
            uint64_t v156 = 0;
            unint64_t v157 = v132 - 4;
            do
            {
              unint64_t v158 = 64 - v136;
              if (64 - v136 >= v157) {
                unint64_t v158 = v157;
              }
              v124[v127] |= ((v155 >> v156) & ~(-1 << v158)) << v136;
              v156 += v158;
              unint64_t v159 = v158 + v136;
              v127 += v159 >> 6;
              uint64_t v136 = v159 & 0x3F;
              v157 -= v158;
            }
            while (v157);
          }
        }
      }
      if (++v126 == 8) {
        return v49 & 1;
      }
    }
  }
  unsigned int v160 = v318;
  char v161 = v323 | v318;
  if (v323 | v318)
  {
    char v161 = v318 - 2;
    if (v318 > 2)
    {
      unsigned int v164 = 0;
      unsigned int v163 = 0;
      char v162 = 1;
    }
    else
    {
      char v161 = 0;
      char v162 = 0;
      unsigned int v163 = v318 + 1;
      unsigned int v164 = 2;
    }
  }
  else
  {
    unsigned int v163 = 0;
    char v162 = 0;
    unsigned int v164 = 2;
  }
  unint64_t v165 = ((unint64_t)(v161 & 7) << v125) | *v124;
  *int16x8_t v124 = v165;
  uint64_t v166 = v125 | 3;
  unsigned int v167 = v319;
  char v168 = v324 | v319;
  if (v324 | v319)
  {
    if (v319 < 3)
    {
      char v168 = 0;
      char v169 = 0;
      unsigned int v170 = v319 + 1;
      goto LABEL_343;
    }
    unsigned int v171 = 0;
    unsigned int v170 = 0;
    char v168 = v319 - 2;
    char v169 = 1;
  }
  else
  {
    unsigned int v170 = 0;
    char v169 = 0;
LABEL_343:
    unsigned int v171 = 2;
  }
  if ((unint64_t)(v166 - v125) <= 0xBD)
  {
    *int16x8_t v124 = ((unint64_t)(v168 & 7) << v166) | v165;
    uint64_t v166 = v125 | 6;
  }
  unsigned int v172 = v320;
  if (v325 | v320)
  {
    if (v320 < 3)
    {
      unsigned int v173 = 0;
      char v174 = 0;
      unsigned int v299 = v320 + 1;
      goto LABEL_351;
    }
    unsigned int v175 = 0;
    unsigned int v299 = 0;
    unsigned int v173 = v320 - 2;
    char v174 = 1;
  }
  else
  {
    unsigned int v173 = 0;
    unsigned int v299 = 0;
    char v174 = 0;
LABEL_351:
    unsigned int v175 = 2;
  }
  if ((unint64_t)(v166 - v125 - 190) >= 0xFFFFFFFFFFFFFF3FLL)
  {
    uint64_t v176 = 0;
    uint64_t v177 = 0;
    unint64_t v178 = 3;
    do
    {
      unint64_t v179 = 64 - v166;
      if (64 - v166 >= v178) {
        unint64_t v179 = v178;
      }
      v124[v176] |= (((unint64_t)v173 >> v177) & ~(-1 << v179)) << v166;
      v177 += v179;
      unint64_t v180 = v179 + v166;
      v176 += v180 >> 6;
      uint64_t v166 = v180 & 0x3F;
      v178 -= v179;
    }
    while (v178);
  }
  else
  {
    uint64_t v176 = 0;
  }
  unsigned int v181 = v321;
  int v182 = v326 | v321;
  LODWORD(v183) = v321 - 2;
  if (v321 >= 3)
  {
    unsigned int v184 = 0;
  }
  else
  {
    LODWORD(v183) = 0;
    unsigned int v184 = 2;
  }
  if (v321 < 3) {
    unsigned int v185 = v321 + 1;
  }
  else {
    unsigned int v185 = 0;
  }
  BOOL v186 = v182 == 0;
  if (v182) {
    unint64_t v183 = v183;
  }
  else {
    unint64_t v183 = 0;
  }
  if (v182) {
    uint64_t v187 = v184;
  }
  else {
    uint64_t v187 = 2;
  }
  if (v186) {
    unint64_t v188 = 0;
  }
  else {
    unint64_t v188 = v185;
  }
  BOOL v189 = !v186 && v321 >= 3;
  if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0xC0)
  {
    uint64_t v190 = 0;
    unint64_t v191 = 3;
    do
    {
      unint64_t v192 = 64 - v166;
      if (64 - v166 >= v191) {
        unint64_t v192 = v191;
      }
      v124[v176] |= ((v183 >> v190) & ~(-1 << v192)) << v166;
      v190 += v192;
      unint64_t v193 = v192 + v166;
      v176 += v193 >> 6;
      uint64_t v166 = v193 & 0x3F;
      v191 -= v192;
    }
    while (v191);
  }
  if (v162)
  {
    int v194 = 12;
    if (v169) {
      goto LABEL_397;
    }
LABEL_391:
    unint64_t v199 = v171;
    if (v166 - v125 + (v176 << 6) + (unint64_t)v171 <= 0xC0)
    {
      uint64_t v200 = 0;
      do
      {
        unint64_t v201 = 64 - v166;
        if (64 - v166 >= v199) {
          unint64_t v201 = v199;
        }
        v124[v176] |= (((unint64_t)v170 >> v200) & ~(-1 << v201)) << v166;
        v200 += v201;
        unint64_t v202 = v201 + v166;
        v176 += v202 >> 6;
        uint64_t v166 = v202 & 0x3F;
        v199 -= v201;
      }
      while (v199);
    }
    v194 += v171;
  }
  else
  {
    unint64_t v195 = v164;
    if (v166 - v125 + (v176 << 6) + (unint64_t)v164 <= 0xC0)
    {
      uint64_t v196 = 0;
      do
      {
        unint64_t v197 = 64 - v166;
        if (64 - v166 >= v195) {
          unint64_t v197 = v195;
        }
        v124[v176] |= (((unint64_t)v163 >> v196) & ~(-1 << v197)) << v166;
        v196 += v197;
        unint64_t v198 = v197 + v166;
        v176 += v198 >> 6;
        uint64_t v166 = v198 & 0x3F;
        v195 -= v197;
      }
      while (v195);
    }
    int v194 = v164 | 0xC;
    if ((v169 & 1) == 0) {
      goto LABEL_391;
    }
  }
LABEL_397:
  if (v174)
  {
    if (v189) {
      goto LABEL_399;
    }
LABEL_407:
    if ((unint64_t)(v166 - v125 + (v176 << 6) + v187) <= 0xC0)
    {
      uint64_t v208 = 0;
      unint64_t v209 = v187;
      do
      {
        unint64_t v210 = 64 - v166;
        if (64 - v166 >= v209) {
          unint64_t v210 = v209;
        }
        v124[v176] |= ((v188 >> v208) & ~(-1 << v210)) << v166;
        v208 += v210;
        unint64_t v211 = v210 + v166;
        v176 += v211 >> 6;
        uint64_t v166 = v211 & 0x3F;
        v209 -= v210;
      }
      while (v209);
    }
    v194 += v187;
    unsigned int v203 = v327;
    if (!v160) {
      goto LABEL_413;
    }
LABEL_417:
    unsigned int v213 = v309;
    if (v309 <= 0x100 && v309 && v166 - v125 + (v176 << 6) + (unint64_t)v309 <= 0xC0)
    {
      uint64_t v214 = 0;
      unint64_t v215 = v303 >> (v203 - v309);
      unint64_t v216 = v309;
      do
      {
        unint64_t v217 = 64 - v166;
        if (64 - v166 >= v216) {
          unint64_t v217 = v216;
        }
        v124[v176] |= ((v215 >> v214) & ~(-1 << v217)) << v166;
        v214 += v217;
        unint64_t v218 = v217 + v166;
        v176 += v218 >> 6;
        uint64_t v166 = v218 & 0x3F;
        v216 -= v217;
      }
      while (v216);
    }
    v194 += v213;
    unsigned int v212 = v328;
    if (v167) {
      goto LABEL_425;
    }
LABEL_526:
    if (v212 == 2 || v212 >= 0x10) {
      goto LABEL_425;
    }
  }
  else
  {
    unint64_t v204 = v175;
    if (v166 - v125 + (v176 << 6) + (unint64_t)v175 <= 0xC0)
    {
      uint64_t v205 = 0;
      do
      {
        unint64_t v206 = 64 - v166;
        if (64 - v166 >= v204) {
          unint64_t v206 = v204;
        }
        v124[v176] |= (((unint64_t)v299 >> v205) & ~(-1 << v206)) << v166;
        v205 += v206;
        unint64_t v207 = v206 + v166;
        v176 += v207 >> 6;
        uint64_t v166 = v207 & 0x3F;
        v204 -= v206;
      }
      while (v204);
    }
    v194 += v175;
    if (!v189) {
      goto LABEL_407;
    }
LABEL_399:
    unsigned int v203 = v327;
    if (v160) {
      goto LABEL_417;
    }
LABEL_413:
    if (v203 == 2 || v203 >= 0x10) {
      goto LABEL_417;
    }
    unsigned int v212 = v328;
    if (!v167) {
      goto LABEL_526;
    }
LABEL_425:
    unsigned int v219 = v310;
    if (v310 <= 0x100 && v310 && v166 - v125 + (v176 << 6) + (unint64_t)v310 <= 0xC0)
    {
      uint64_t v220 = 0;
      unint64_t v221 = (HIDWORD(v303) >> (v212 - v310));
      unint64_t v222 = v310;
      do
      {
        unint64_t v223 = 64 - v166;
        if (64 - v166 >= v222) {
          unint64_t v223 = v222;
        }
        v124[v176] |= ((v221 >> v220) & ~(-1 << v223)) << v166;
        v220 += v223;
        unint64_t v224 = v223 + v166;
        v176 += v224 >> 6;
        uint64_t v166 = v224 & 0x3F;
        v222 -= v223;
      }
      while (v222);
    }
    v194 += v219;
  }
  if (v172 || v329 == 2 || v329 >= 0x10)
  {
    unsigned int v225 = v311;
    if (v311 <= 0x100 && v311 && v166 - v125 + (v176 << 6) + (unint64_t)v311 <= 0xC0)
    {
      uint64_t v226 = 0;
      unint64_t v227 = v304 >> (v329 - v311);
      unint64_t v228 = v311;
      do
      {
        unint64_t v229 = 64 - v166;
        if (64 - v166 >= v228) {
          unint64_t v229 = v228;
        }
        v124[v176] |= ((v227 >> v226) & ~(-1 << v229)) << v166;
        v226 += v229;
        unint64_t v230 = v229 + v166;
        v176 += v230 >> 6;
        uint64_t v166 = v230 & 0x3F;
        v228 -= v229;
      }
      while (v228);
    }
    v194 += v225;
  }
  if (v181 || v330 == 2 || v330 >= 0x10)
  {
    unsigned int v231 = v312;
    if (v312 <= 0x100 && v312 && v166 - v125 + (v176 << 6) + (unint64_t)v312 <= 0xC0)
    {
      uint64_t v232 = 0;
      unint64_t v233 = (HIDWORD(v304) >> (v330 - v312));
      unint64_t v234 = v312;
      do
      {
        unint64_t v235 = 64 - v166;
        if (64 - v166 >= v234) {
          unint64_t v235 = v234;
        }
        v124[v176] |= ((v233 >> v232) & ~(-1 << v235)) << v166;
        v232 += v235;
        unint64_t v236 = v235 + v166;
        v176 += v236 >> 6;
        uint64_t v166 = v236 & 0x3F;
        v234 -= v235;
      }
      while (v234);
    }
    v194 += v231;
  }
  unint64_t v237 = v305;
  if (v305)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0xC0)
    {
      uint64_t v238 = 0;
      unint64_t v239 = v322[0];
      unint64_t v240 = 3;
      do
      {
        unint64_t v241 = 64 - v166;
        if (64 - v166 >= v240) {
          unint64_t v241 = v240;
        }
        v124[v176] |= ((v239 >> v238) & ~(-1 << v241)) << v166;
        v238 += v241;
        unint64_t v242 = v241 + v166;
        v176 += v242 >> 6;
        uint64_t v166 = v242 & 0x3F;
        v240 -= v241;
      }
      while (v240);
    }
    v194 += 3;
  }
  unint64_t v243 = v306;
  if (v306)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0xC0)
    {
      uint64_t v244 = 0;
      unint64_t v245 = v322[1];
      unint64_t v246 = 3;
      do
      {
        unint64_t v247 = 64 - v166;
        if (64 - v166 >= v246) {
          unint64_t v247 = v246;
        }
        v124[v176] |= ((v245 >> v244) & ~(-1 << v247)) << v166;
        v244 += v247;
        unint64_t v248 = v247 + v166;
        v176 += v248 >> 6;
        uint64_t v166 = v248 & 0x3F;
        v246 -= v247;
      }
      while (v246);
    }
    v194 += 3;
  }
  unint64_t v249 = v307;
  if (v307)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0xC0)
    {
      uint64_t v250 = 0;
      unint64_t v251 = v322[2];
      unint64_t v252 = 3;
      do
      {
        unint64_t v253 = 64 - v166;
        if (64 - v166 >= v252) {
          unint64_t v253 = v252;
        }
        v124[v176] |= ((v251 >> v250) & ~(-1 << v253)) << v166;
        v250 += v253;
        unint64_t v254 = v253 + v166;
        v176 += v254 >> 6;
        uint64_t v166 = v254 & 0x3F;
        v252 -= v253;
      }
      while (v252);
    }
    v194 += 3;
  }
  unint64_t v255 = v308;
  if (v308)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0xC0)
    {
      uint64_t v256 = 0;
      unint64_t v257 = v322[3];
      unint64_t v258 = 3;
      do
      {
        unint64_t v259 = 64 - v166;
        if (64 - v166 >= v258) {
          unint64_t v259 = v258;
        }
        v124[v176] |= ((v257 >> v256) & ~(-1 << v259)) << v166;
        v256 += v259;
        unint64_t v260 = v259 + v166;
        v176 += v260 >> 6;
        uint64_t v166 = v260 & 0x3F;
        v258 -= v259;
      }
      while (v258);
    }
    v194 += 3;
  }
  unsigned int v261 = 192 - v194;
  unsigned int v262 = (192 - v194) / 7u;
  unint64_t v263 = v261 % 7;
  if ((v263 - 257) >= 0xFFFFFF00 && v166 - v125 + (v176 << 6) + v263 <= 0xC0)
  {
    do
    {
      unint64_t v264 = 64 - v166;
      if (64 - v166 >= v263) {
        unint64_t v264 = v263;
      }
      unint64_t v265 = v264 + v166;
      v176 += v265 >> 6;
      uint64_t v166 = v265 & 0x3F;
      v263 -= v264;
    }
    while (v263);
  }
  uint64_t v266 = 0;
  while (2)
  {
    if (v237 && v237 <= 0x100 && v166 - v125 + (v176 << 6) + v237 <= 0xC0)
    {
      uint64_t v267 = 0;
      unint64_t v268 = *((unsigned int *)v300 + v266);
      unint64_t v269 = v237;
      do
      {
        unint64_t v270 = 64 - v166;
        if (64 - v166 >= v269) {
          unint64_t v270 = v269;
        }
        v124[v176] |= ((v268 >> v267) & ~(-1 << v270)) << v166;
        v267 += v270;
        unint64_t v271 = v270 + v166;
        v176 += v271 >> 6;
        uint64_t v166 = v271 & 0x3F;
        v269 -= v270;
      }
      while (v269);
    }
    if (!v243)
    {
      int v277 = v237;
      if (!v249) {
        goto LABEL_510;
      }
      goto LABEL_503;
    }
    if (v243 <= 0x100 && v166 - v125 + (v176 << 6) + v243 <= 0xC0)
    {
      uint64_t v272 = 0;
      unint64_t v273 = *((unsigned int *)&v300[1] + v266 + 3);
      unint64_t v274 = v243;
      do
      {
        unint64_t v275 = 64 - v166;
        if (64 - v166 >= v274) {
          unint64_t v275 = v274;
        }
        v124[v176] |= ((v273 >> v272) & ~(-1 << v275)) << v166;
        v272 += v275;
        unint64_t v276 = v275 + v166;
        v176 += v276 >> 6;
        uint64_t v166 = v276 & 0x3F;
        v274 -= v275;
      }
      while (v274);
    }
    int v277 = v243 + v237;
    if (v249)
    {
LABEL_503:
      if (v249 <= 0x100 && v166 - v125 + (v176 << 6) + v249 <= 0xC0)
      {
        uint64_t v278 = 0;
        unint64_t v279 = *((unsigned int *)&v300[3] + v266 + 2);
        unint64_t v280 = v249;
        do
        {
          unint64_t v281 = 64 - v166;
          if (64 - v166 >= v280) {
            unint64_t v281 = v280;
          }
          v124[v176] |= ((v279 >> v278) & ~(-1 << v281)) << v166;
          v278 += v281;
          unint64_t v282 = v281 + v166;
          v176 += v282 >> 6;
          uint64_t v166 = v282 & 0x3F;
          v280 -= v281;
        }
        while (v280);
      }
      v277 += v249;
    }
LABEL_510:
    if (v255)
    {
      if (v255 <= 0x100 && v166 - v125 + (v176 << 6) + v255 <= 0xC0)
      {
        uint64_t v283 = 0;
        unint64_t v284 = *((unsigned int *)&v301 + v266 + 1);
        unint64_t v285 = v255;
        do
        {
          unint64_t v286 = 64 - v166;
          if (64 - v166 >= v285) {
            unint64_t v286 = v285;
          }
          v124[v176] |= ((v284 >> v283) & ~(-1 << v286)) << v166;
          v283 += v286;
          unint64_t v287 = v286 + v166;
          v176 += v287 >> 6;
          uint64_t v166 = v287 & 0x3F;
          v285 -= v286;
        }
        while (v285);
      }
      v277 += v255;
    }
    unint64_t v288 = v262 - v277;
    if (v288 && v288 <= 0x100 && v166 - v125 + (v176 << 6) + v288 <= 0xC0)
    {
      do
      {
        unint64_t v289 = 64 - v166;
        if (64 - v166 >= v288) {
          unint64_t v289 = v288;
        }
        unint64_t v290 = v289 + v166;
        v176 += v290 >> 6;
        uint64_t v166 = v290 & 0x3F;
        v288 -= v289;
      }
      while (v288);
    }
    if (++v266 != 7) {
      continue;
    }
    return v49 & 1;
  }
}