uint64_t std::vector<char const*>::~vector[abi:nn180100](uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(void *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4 = 8 * (a3 & 7);
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v4 + 12;
  unint64_t v7 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v4;
  if (v4 >= 0x35) {
    v7 |= *(void *)(v5 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v8 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v9 = vdupq_n_s8(((a4 >> 5) | (8 * v7)) & 0xF);
  v10.i64[0] = 0x303030303030303;
  v10.i64[1] = 0x303030303030303;
  int8x16_t v11 = vandq_s8(v9, v10);
  int8x16_t v12 = vbicq_s8(vdupq_n_s8(((v7 >> 1) & 7) + 1), vceqq_s8(v11, v10));
  v10.i64[0] = 0x202020202020202;
  v10.i64[1] = 0x202020202020202;
  int8x16_t v13 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)0x4000400040004)))), v10);
  if (vmaxvq_s8(v13) < 1)
  {
    int v23 = 0;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int8x16_t v25 = v12;
    int8x16_t v26 = v12;
    int8x16_t v27 = v12;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    int8x16_t v29 = v12;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
  }
  else
  {
    int16x8_t v14 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v13, v13));
    int32x4_t v15 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v14, v14));
    unint64_t v16 = vpaddq_s32(v15, v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19 + v6;
    if (v19 <= 0x80 && v8 >= v20)
    {
      int64x2_t v32 = vaddq_s64(vzip1q_s64((int64x2_t)0, v18), vdupq_n_s64(v6 & 0x3C));
      v33 = (int64x2_t *)(v5 + ((v6 >> 3) & 8));
      int32x4_t v22 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v33, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33->i64[0], 0), (uint64x2_t)vnegq_s64(v32)));
      if (v19 + (v6 & 0x3C) < 0x81)
      {
        int v23 = 0;
      }
      else
      {
        int v23 = 0;
        int32x4_t v22 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v33[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), (int8x16_t)v22);
      }
      unint64_t v6 = v20;
    }
    else
    {
      int32x4_t v22 = 0uLL;
      int v23 = 1;
    }
    int32x2_t v34 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL));
    v35.i64[0] = v34.u32[0];
    v35.i64[1] = v34.u32[1];
    int32x4_t v36 = (int32x4_t)vshlq_u64((uint64x2_t)v22, (uint64x2_t)vnegq_s64(v35));
    *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v22);
    *(int32x2_t *)v36.i8 = vmovn_s64((int64x2_t)v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s32(v22, v36);
    int16x8_t v38 = (int16x8_t)vshlq_u32((uint32x4_t)v37, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL)))));
    *(int16x4_t *)v37.i8 = vmovn_s32((int32x4_t)v37);
    *(int16x4_t *)v38.i8 = vmovn_s32((int32x4_t)v38);
    int16x8_t v39 = vzip1q_s16(v37, v38);
    *(int8x8_t *)v39.i8 = vzip1_s8(vmovn_s16(v39), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v39, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v9.i8))))));
    v37.i64[0] = 0x101010101010101;
    v37.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8((int8x16_t)v37, v13);
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v40.i64[0] = vandq_s8((int8x16_t)v39, vaddq_s8(v40, (int8x16_t)v37)).u64[0];
    int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
    int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 1);
    int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 2);
    int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 3);
    int8x16_t v29 = vsubq_s8(v12, v41);
    int8x16_t v27 = vsubq_s8(v12, v42);
    int8x16_t v26 = vsubq_s8(v12, v43);
    int8x16_t v25 = vsubq_s8(v12, v44);
    int8x16_t v31 = vceqzq_s8(v41);
    int8x16_t v30 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v24 = vceqzq_s8(v44);
  }
  v45.i64[0] = 0x707070707070707;
  v45.i64[1] = 0x707070707070707;
  int32x4_t v46 = 0uLL;
  int8x16_t v47 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v9, v45), (int8x16_t)0, 0xFuLL), v12);
  int16x8_t v48 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v47, v47));
  int32x4_t v49 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v48, v48));
  unint64_t v50 = vpaddq_s32(v49, v49).u64[0];
  v51.i64[0] = v50;
  v51.i64[1] = HIDWORD(v50);
  int64x2_t v52 = v51;
  unint64_t v53 = vaddvq_s64(v51);
  unint64_t v54 = v53 + v6;
  if (v53 <= 0x80 && v8 >= v54)
  {
    unint64_t v56 = v6 & 0x3F;
    int64x2_t v57 = vaddq_s64(vzip1q_s64((int64x2_t)0, v52), vdupq_n_s64(v56));
    v58 = (int64x2_t *)(v5 + 8 * (v6 >> 6));
    int32x4_t v46 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v58, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58->i64[0], 0), (uint64x2_t)vnegq_s64(v57)));
    if (v53 + v56 >= 0x81) {
      int32x4_t v46 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v58[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v57))), (int8x16_t)v46);
    }
    unint64_t v6 = v54;
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v59 = vandq_s8(v29, (int8x16_t)xmmword_242EA7380);
  int v60 = (a4 >> 5) & 3;
  if (v60 != 2)
  {
    unsigned int v64 = 0;
    unsigned int v62 = 0;
    unint64_t v65 = v6;
    goto LABEL_34;
  }
  unint64_t v61 = v6 + 4;
  if (v8 < v6 + 4)
  {
    unsigned int v62 = 0;
    unint64_t v61 = v6;
LABEL_33:
    unsigned int v64 = 0;
    int v23 = 1;
    unint64_t v65 = v61;
    goto LABEL_34;
  }
  uint64_t v66 = *(void *)(v5 + 8 * (v6 >> 6)) >> v6;
  if ((v6 & 0x3F) >= 0x3D) {
    v66 |= *(void *)(v5 + 8 * (v6 >> 6) + 8) << -(v6 & 0x3F);
  }
  unint64_t v65 = v6 + 8;
  unsigned int v62 = (int)(v66 << 28) >> 28;
  if (v8 < v6 + 8) {
    goto LABEL_33;
  }
  uint64_t v63 = *(void *)(v5 + 8 * (v61 >> 6)) >> v61;
  if ((v61 & 0x3F) >= 0x3D) {
    v63 |= *(void *)(v5 + 8 * (v61 >> 6) + 8) << -(v61 & 0x3F);
  }
  unsigned int v64 = (int)(v63 << 28) >> 28;
LABEL_34:
  int8x16_t v67 = vandq_s8(v27, (int8x16_t)xmmword_242EA7390);
  v59.i8[0] = 0;
  int16x8_t v68 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v65;
  int32x4_t v75 = 0uLL;
  if (v73 <= 0x80 && v8 >= v74)
  {
    unint64_t v78 = v65 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v78));
    v80 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v73 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v65 = v74;
  }
  else
  {
    int v23 = 1;
    int32x4_t v77 = 0uLL;
  }
  int8x16_t v81 = vandq_s8(v26, (int8x16_t)xmmword_242EA7390);
  int16x8_t v82 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int32x4_t v83 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v82, v82));
  unint64_t v84 = vpaddq_s32(v83, v83).u64[0];
  v85.i64[0] = v84;
  v85.i64[1] = HIDWORD(v84);
  int64x2_t v86 = v85;
  unint64_t v87 = vaddvq_s64(v85);
  if (v87 < 0x81)
  {
    int32x2_t v88 = vzip1_s32(*(int32x2_t *)v83.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL));
    v89.i64[0] = v88.u32[0];
    v89.i64[1] = v88.u32[1];
    int64x2_t v90 = v89;
    int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v82.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v82, (int8x16_t)v82, 8uLL)));
    int16x8_t v92 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)));
    unint64_t v93 = v87 + v65;
    if (v8 >= v87 + v65)
    {
      unint64_t v94 = v65 & 0x3F;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v86), vdupq_n_s64(v94));
      v96 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v75 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v87 + v94 >= 0x81) {
        int32x4_t v75 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), (int8x16_t)v75);
      }
      unint64_t v65 = v93;
    }
    else
    {
      int v23 = 1;
    }
    int32x4_t v97 = (int32x4_t)vshlq_u64((uint64x2_t)v75, (uint64x2_t)vnegq_s64(v90));
    *(int32x2_t *)v75.i8 = vmovn_s64((int64x2_t)v75);
    *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
    int16x8_t v98 = (int16x8_t)vzip1q_s32(v75, v97);
    int16x8_t v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32(v91));
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    int16x8_t v100 = vzip1q_s16(v98, v99);
    int16x8_t v101 = (int16x8_t)vshlq_u16((uint16x8_t)v100, (uint16x8_t)vnegq_s16(v92));
    *(int8x8_t *)v100.i8 = vmovn_s16(v100);
    *(int8x8_t *)v101.i8 = vmovn_s16(v101);
    int32x4_t v75 = (int32x4_t)vzip1q_s8((int8x16_t)v100, (int8x16_t)v101);
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v102 = vandq_s8(v25, (int8x16_t)xmmword_242EA7390);
  int16x8_t v103 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v81, v81));
  int32x4_t v104 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v103, v103));
  unint64_t v105 = vpaddq_s32(v104, v104).u64[0];
  v106.i64[0] = v105;
  v106.i64[1] = HIDWORD(v105);
  int64x2_t v107 = v106;
  unint64_t v108 = vaddvq_s64(v106);
  if (v108 <= 0x80)
  {
    int32x2_t v110 = vzip1_s32(*(int32x2_t *)v104.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v104, (int8x16_t)v104, 8uLL));
    v111.i64[0] = v110.u32[0];
    v111.i64[1] = v110.u32[1];
    int64x2_t v112 = v111;
    int32x4_t v113 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v103.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v103, (int8x16_t)v103, 8uLL)));
    int16x8_t v114 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
    unint64_t v115 = v108 + v65;
    if (v8 >= v108 + v65)
    {
      unint64_t v117 = v65 & 0x3F;
      int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v107), vdupq_n_s64(v117));
      v119 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
      if (v108 + v117 >= 0x81) {
        int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v116);
      }
      unint64_t v65 = v115;
    }
    else
    {
      int32x4_t v116 = 0uLL;
      int v23 = 1;
    }
    int32x4_t v120 = (int32x4_t)vshlq_u64((uint64x2_t)v116, (uint64x2_t)vnegq_s64(v112));
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v120.i8 = vmovn_s64((int64x2_t)v120);
    int16x8_t v121 = (int16x8_t)vzip1q_s32(v116, v120);
    int16x8_t v122 = (int16x8_t)vshlq_u32((uint32x4_t)v121, (uint32x4_t)vnegq_s32(v113));
    *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v121);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v122);
    int16x8_t v123 = vzip1q_s16(v121, v122);
    int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)v123, (uint16x8_t)vnegq_s16(v114));
    *(int8x8_t *)v123.i8 = vmovn_s16(v123);
    *(int8x8_t *)v124.i8 = vmovn_s16(v124);
    int8x16_t v109 = vzip1q_s8((int8x16_t)v123, (int8x16_t)v124);
  }
  else
  {
    int v23 = 1;
    int8x16_t v109 = 0uLL;
  }
  int16x8_t v125 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v102, v102));
  int32x4_t v126 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v125, v125));
  unint64_t v127 = vpaddq_s32(v126, v126).u64[0];
  v128.i64[0] = v127;
  v128.i64[1] = HIDWORD(v127);
  int64x2_t v129 = v128;
  unint64_t v130 = vaddvq_s64(v128);
  if (v130 > 0x80 || v8 < v130 + v65) {
    goto LABEL_64;
  }
  int64x2_t v131 = vaddq_s64(vzip1q_s64((int64x2_t)0, v129), vdupq_n_s64(v65 & 0x3F));
  v132 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
  int64x2_t v133 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
  if (v130 + (v65 & 0x3F) >= 0x81) {
    int64x2_t v133 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), (int8x16_t)v133);
  }
  if (v23 || (uint64_t v134 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v134) - (v130 + v65) >= 9))
  {
LABEL_64:
    uint64_t v134 = 0;
    v191 |= 255 << (8 * ((&v191 + 7) & 7u));
    *a1 = 0;
    *(void *)((char *)a1 + a2) = 0;
    *(void *)((char *)a1 + 2 * a2) = 0;
    *(void *)((char *)a1 + 3 * a2) = 0;
  }
  else
  {
    int32x2_t v136 = vzip1_s32(*(int32x2_t *)v49.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL));
    int32x2_t v137 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v138.i64[0] = v136.u32[0];
    v138.i64[1] = v136.u32[1];
    int64x2_t v139 = v138;
    v138.i64[0] = v137.u32[0];
    v138.i64[1] = v137.u32[1];
    int32x4_t v140 = (int32x4_t)vshlq_u64((uint64x2_t)v46, (uint64x2_t)vnegq_s64(v139));
    int32x4_t v141 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v46.i8 = vmovn_s64((int64x2_t)v46);
    *(int32x2_t *)v140.i8 = vmovn_s64((int64x2_t)v140);
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v141);
    int16x8_t v142 = (int16x8_t)vzip1q_s32(v46, v140);
    int16x8_t v143 = (int16x8_t)vzip1q_s32(v77, v141);
    int16x8_t v144 = (int16x8_t)vshlq_u32((uint32x4_t)v142, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v48.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v48, (int8x16_t)v48, 8uLL)))));
    int16x8_t v145 = (int16x8_t)vshlq_u32((uint32x4_t)v143, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v142.i8 = vmovn_s32((int32x4_t)v142);
    *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
    *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
    *(int16x4_t *)v145.i8 = vmovn_s32((int32x4_t)v145);
    int16x8_t v146 = vzip1q_s16(v142, v144);
    int16x8_t v147 = vzip1q_s16(v143, v145);
    int16x8_t v148 = (int16x8_t)vshlq_u16((uint16x8_t)v146, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    int16x8_t v149 = (int16x8_t)vshlq_u16((uint16x8_t)v147, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v146.i8 = vmovn_s16(v146);
    *(int8x8_t *)v148.i8 = vmovn_s16(v148);
    *(int8x8_t *)v147.i8 = vmovn_s16(v147);
    *(int8x8_t *)v149.i8 = vmovn_s16(v149);
    v150.i64[0] = 0x808080808080808;
    v150.i64[1] = 0x808080808080808;
    v151.i64[0] = 0x808080808080808;
    v151.i64[1] = 0x808080808080808;
    unint64_t v152 = v7 >> 4;
    int8x16_t v153 = vzip1q_s8((int8x16_t)v146, (int8x16_t)v148);
    v148.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v148.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v154 = vzip1q_s8((int8x16_t)v147, (int8x16_t)v149);
    v149.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v149.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v155 = vsubq_s8(v151, v67);
    *(int32x2_t *)v143.i8 = vzip1_s32(*(int32x2_t *)v126.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v126, (int8x16_t)v126, 8uLL));
    v156.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v156.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v157.i64[0] = 0x808080808080808;
    v157.i64[1] = 0x808080808080808;
    int32x4_t v158 = (int32x4_t)vaddq_s8(v67, (int8x16_t)v149);
    v138.i64[0] = v143.u32[0];
    v138.i64[1] = v143.u32[1];
    int8x16_t v159 = vshlq_s8(vshlq_s8(v153, vsubq_s8(v150, v47)), vaddq_s8(v47, (int8x16_t)v148));
    int8x16_t v160 = vshlq_s8(vshlq_s8(v154, vsubq_s8(v151, v59)), vaddq_s8(v59, (int8x16_t)v149));
    int8x16_t v161 = vshlq_s8(vshlq_s8((int8x16_t)v75, v155), (int8x16_t)v158);
    int8x16_t v162 = vshlq_s8(vshlq_s8(v109, vsubq_s8(v151, v81)), vaddq_s8(v81, (int8x16_t)v149));
    int32x4_t v163 = (int32x4_t)vshlq_u64((uint64x2_t)v133, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v158.i8 = vmovn_s64(v133);
    *(int32x2_t *)v163.i8 = vmovn_s64((int64x2_t)v163);
    int16x8_t v164 = (int16x8_t)vzip1q_s32(v158, v163);
    int16x8_t v165 = (int16x8_t)vshlq_u32((uint32x4_t)v164, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v125.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125, 8uLL)))));
    *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
    *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
    int16x8_t v166 = vzip1q_s16(v164, v165);
    int16x8_t v167 = (int16x8_t)vshlq_u16((uint16x8_t)v166, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v102.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL)))));
    *(int8x8_t *)v166.i8 = vmovn_s16(v166);
    *(int8x8_t *)v167.i8 = vmovn_s16(v167);
    int8x16_t v168 = vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v166, (int8x16_t)v167), vsubq_s8(v157, v102)), vaddq_s8(v102, v156));
    if (v60 == 2)
    {
      v169.i64[0] = 0xFFFF0000FFFF0000;
      v169.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v170 = vmlaq_s8(vandq_s8(vdupq_n_s8(v64), v169), vdupq_n_s8(v62), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v160 = vaddq_s8(v160, v170);
      int8x16_t v161 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v64), v170), v161);
      int8x16_t v162 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62), v170), v162);
      int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62 + 2 * v64), v170), v168);
    }
    int8x8_t v171 = (int8x8_t)vdupq_n_s8(v152).u64[0];
    int8x16_t v172 = vaddq_s8(vandq_s8(v159, v31), v160);
    int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v159.i8, 0);
    int8x16_t v174 = vsubq_s8(v172, vandq_s8(v173, v31));
    int8x16_t v175 = vsubq_s8(v161, vandq_s8(v173, v30));
    int8x16_t v176 = vsubq_s8(v162, vandq_s8(v173, v28));
    int8x16_t v177 = vsubq_s8(v168, vandq_s8(v173, v24));
    v178.i64[0] = 0x101010101010101;
    v178.i64[1] = 0x101010101010101;
    if (vaddlvq_s8(vceqq_s8(v11, v178)))
    {
      int8x16_t v179 = v174;
      v179.i8[0] = v174.i8[7];
      v179.i8[7] = v174.i8[0];
      int8x16_t v180 = vnegq_s8(vandq_s8(v9, v178));
      int8x16_t v181 = vbslq_s8(v180, v179, v174);
      int8x16_t v182 = vaddq_s8(vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73B0), v180), v181);
      v174.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73C0), v180), v182).u64[0];
      int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA73D0), v180), v175);
      v175.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA73E0), v180), v183).u64[0];
      int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA73F0), v180), v176);
      v176.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA7400), v180), v184).u64[0];
      int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7410), v180), v177);
      v177.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA7420), v180), v185).u64[0];
    }
    int16x4_t v186 = (int16x4_t)vadd_s8(v171, *(int8x8_t *)v174.i8);
    int16x4_t v187 = (int16x4_t)vadd_s8(*(int8x8_t *)v176.i8, v171);
    *a1 = vuzp1_s16(v186, v187);
    *(int16x4_t *)((char *)a1 + a2) = vuzp2_s16(v186, v187);
    v188 = (int16x4_t *)((char *)a1 + 2 * a2);
    int16x4_t v189 = (int16x4_t)vadd_s8(*(int8x8_t *)v175.i8, v171);
    int16x4_t v190 = (int16x4_t)vadd_s8(*(int8x8_t *)v177.i8, v171);
    int16x4_t *v188 = vuzp1_s16(v189, v190);
    *(int16x4_t *)((char *)v188 + a2) = vuzp2_s16(v189, v190);
  }
  return v134;
}

int16x4_t *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(int16x4_t *result, uint64_t a2, int16x4_t *a3, char *a4, int a5, int a6)
{
  char v6 = 0;
  uint64_t v7 = 2 * a2;
  if (a5 >= 8) {
    int v8 = 8;
  }
  else {
    int v8 = a5;
  }
  if (a6 >= 4) {
    int v9 = 4;
  }
  else {
    int v9 = a6;
  }
  if (v8 && v9)
  {
    int16x4_t v10 = *(int16x4_t *)((char *)result + a2);
    int16x4_t v11 = vzip1_s16(*result, v10);
    int16x4_t v12 = vzip2_s16(*result, v10);
    int16x4_t v13 = *(int16x4_t *)((char *)result + 2 * a2);
    int16x4_t v14 = *(int16x4_t *)((char *)result + v7 + a2);
    *a3 = v11;
    a3[1] = vzip1_s16(v13, v14);
    a3[2] = v12;
    a3[3] = vzip2_s16(v13, v14);
    a3 += 4;
    char v6 = 31;
  }
  char v15 = 0;
  uint64_t v16 = 4 * a2;
  *a4 = v6;
  if (a6 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a6;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    unsigned int v18 = 4;
  }
  if (v8 && v18)
  {
    int16x4_t v19 = *(int16x4_t *)((char *)result + 4 * a2);
    int16x4_t v20 = *(int16x4_t *)((char *)result + v16 + a2);
    int16x4_t v21 = vzip1_s16(v19, v20);
    int16x4_t v22 = vzip2_s16(v19, v20);
    int v23 = (int16x4_t *)((char *)result + v16 + v7);
    int16x4_t v24 = *(int16x4_t *)((char *)v23 + a2);
    int16x4_t v25 = vzip1_s16(*v23, v24);
    int16x4_t v26 = vzip2_s16(*v23, v24);
    *a3 = v21;
    a3[1] = v25;
    a3[2] = v22;
    a3[3] = v26;
    a3 += 4;
    char v15 = 31;
  }
  char v27 = 0;
  a4[1] = v15;
  if (a5 <= 8) {
    int v28 = 8;
  }
  else {
    int v28 = a5;
  }
  unsigned int v29 = v28 - 8;
  if (v29 >= 8) {
    int v30 = 8;
  }
  else {
    int v30 = v29;
  }
  if (v30 && v9)
  {
    int16x4_t v31 = result[1];
    int16x4_t v32 = *(int16x4_t *)((char *)result + a2 + 8);
    int16x4_t v33 = vzip1_s16(v31, v32);
    int16x4_t v34 = vzip2_s16(v31, v32);
    int64x2_t v35 = (int16x4_t *)((char *)result + v7 + 8);
    int16x4_t v36 = *(int16x4_t *)((char *)v35 + a2);
    int16x4_t v37 = vzip1_s16(*v35, v36);
    int16x4_t v38 = vzip2_s16(*v35, v36);
    *a3 = v33;
    a3[1] = v37;
    a3[2] = v34;
    a3[3] = v38;
    a3 += 4;
    char v27 = 31;
  }
  char v39 = 0;
  a4[2] = v27;
  if (v30 && v18)
  {
    int8x16_t v40 = (int16x4_t *)((char *)result + v16);
    int16x4_t v41 = v40[1];
    int16x4_t v42 = *(int16x4_t *)((char *)++v40 + a2);
    int16x4_t v43 = vzip1_s16(v41, v42);
    int16x4_t v44 = vzip2_s16(v41, v42);
    uint8x16_t v45 = (int16x4_t *)((char *)v40 + v7);
    int16x4_t v46 = *(int16x4_t *)((char *)v45 + a2);
    int16x4_t v47 = vzip1_s16(*v45, v46);
    int16x4_t v48 = vzip2_s16(*v45, v46);
    *a3 = v43;
    a3[1] = v47;
    a3[2] = v44;
    a3[3] = v48;
    a3 += 4;
    char v39 = 31;
  }
  char v49 = 0;
  a4[3] = v39;
  if (a6 <= 8) {
    int v50 = 8;
  }
  else {
    int v50 = a6;
  }
  unsigned int v51 = v50 - 8;
  if (v51 >= 4) {
    unsigned int v51 = 4;
  }
  if (v8 && v51)
  {
    int64x2_t v52 = &result[a2];
    int16x4_t v53 = *(int16x4_t *)((char *)v52 + a2);
    int16x4_t v54 = vzip1_s16(*v52, v53);
    int16x4_t v55 = vzip2_s16(*v52, v53);
    unint64_t v56 = (int16x4_t *)((char *)v52 + v7);
    int16x4_t v57 = *(int16x4_t *)((char *)v56 + a2);
    int16x4_t v58 = vzip1_s16(*v56, v57);
    int16x4_t v59 = vzip2_s16(*v56, v57);
    *a3 = v54;
    a3[1] = v58;
    a3[2] = v55;
    a3[3] = v59;
    a3 += 4;
    char v49 = 31;
  }
  char v60 = 0;
  a4[4] = v49;
  if (a6 <= 12) {
    int v61 = 12;
  }
  else {
    int v61 = a6;
  }
  unsigned int v62 = v61 - 12;
  if (v62 >= 4) {
    int v63 = 4;
  }
  else {
    int v63 = v62;
  }
  if (v8 && v63)
  {
    unsigned int v64 = (int16x4_t *)((char *)result + 12 * a2);
    int16x4_t v65 = *(int16x4_t *)((char *)v64 + a2);
    int16x4_t v66 = vzip1_s16(*v64, v65);
    int16x4_t v67 = vzip2_s16(*v64, v65);
    int16x8_t v68 = (int16x4_t *)((char *)v64 + v7);
    int16x4_t v69 = *(int16x4_t *)((char *)v68 + a2);
    int16x4_t v70 = vzip1_s16(*v68, v69);
    int16x4_t v71 = vzip2_s16(*v68, v69);
    *a3 = v66;
    a3[1] = v70;
    a3[2] = v67;
    a3[3] = v71;
    a3 += 4;
    char v60 = 31;
  }
  char v72 = 0;
  a4[5] = v60;
  if (v30 && v51)
  {
    unint64_t v73 = &result[a2];
    int16x4_t v74 = v73[1];
    int16x4_t v75 = *(int16x4_t *)((char *)++v73 + a2);
    int16x4_t v76 = vzip1_s16(v74, v75);
    int16x4_t v77 = vzip2_s16(v74, v75);
    unint64_t v78 = (int16x4_t *)((char *)v73 + v7);
    int16x4_t v79 = *(int16x4_t *)((char *)v78 + a2);
    int16x4_t v80 = vzip1_s16(*v78, v79);
    int16x4_t v81 = vzip2_s16(*v78, v79);
    *a3 = v76;
    a3[1] = v80;
    a3[2] = v77;
    a3[3] = v81;
    a3 += 4;
    char v72 = 31;
  }
  char v82 = 0;
  a4[6] = v72;
  if (v30 && v63)
  {
    int32x4_t v83 = (int16x4_t *)((char *)result + 12 * a2);
    int16x4_t v84 = v83[1];
    int16x4_t v85 = *(int16x4_t *)((char *)++v83 + a2);
    int16x4_t v86 = vzip1_s16(v84, v85);
    int16x4_t v87 = vzip2_s16(v84, v85);
    int32x2_t v88 = (int16x4_t *)((char *)v83 + v7);
    int16x4_t v89 = *(int16x4_t *)((char *)v88 + a2);
    int16x4_t v90 = vzip1_s16(*v88, v89);
    int16x4_t v91 = vzip2_s16(*v88, v89);
    *a3 = v86;
    a3[1] = v90;
    a3[2] = v87;
    a3[3] = v91;
    char v82 = 31;
  }
  a4[7] = v82;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(int8x8_t *a1, int8x8_t *a2, unsigned __int8 *a3)
{
  unsigned int v6 = *a3;
  if (v6 == 96)
  {
    int8x8_t v8 = vdup_lane_s8(*a2, 0);
    *a1 = v8;
    a1[2] = v8;
    a1[4] = v8;
    a1[6] = v8;
    uint64_t v7 = 1;
  }
  else if (v6 == 31)
  {
    int16x4_t v9 = (int16x4_t)*a2;
    int16x4_t v10 = (int16x4_t)a2[1];
    int16x4_t v11 = (int16x4_t)a2[2];
    int16x4_t v12 = (int16x4_t)a2[3];
    *a1 = (int8x8_t)vuzp1_s16((int16x4_t)*a2, v11);
    a1[2] = (int8x8_t)vuzp2_s16(v9, v11);
    a1[4] = (int8x8_t)vuzp1_s16(v10, v12);
    a1[6] = (int8x8_t)vuzp2_s16(v10, v12);
    uint64_t v7 = 32;
  }
  else if (*a3)
  {
    uint64_t v7 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(a1, 16, (uint64_t)a2, v6);
  }
  else
  {
    uint64_t v7 = 0;
    *a1 = 0;
    a1[2] = 0;
    a1[4] = 0;
    a1[6] = 0;
  }
  int16x4_t v13 = (int8x8_t *)((char *)a2 + v7);
  unsigned int v14 = a3[1];
  if (a3[1])
  {
    if (v14 == 96)
    {
      int8x8_t v20 = vdup_lane_s8(*v13, 0);
      a1[8] = v20;
      a1[10] = v20;
      a1[12] = v20;
      a1[14] = v20;
      uint64_t v19 = 1;
    }
    else if (v14 == 31)
    {
      int16x4_t v15 = (int16x4_t)*v13;
      int16x4_t v16 = (int16x4_t)v13[1];
      int16x4_t v17 = (int16x4_t)v13[2];
      int16x4_t v18 = (int16x4_t)v13[3];
      a1[8] = (int8x8_t)vuzp1_s16((int16x4_t)*v13, v17);
      a1[10] = (int8x8_t)vuzp2_s16(v15, v17);
      a1[12] = (int8x8_t)vuzp1_s16(v16, v18);
      a1[14] = (int8x8_t)vuzp2_s16(v16, v18);
      uint64_t v19 = 32;
    }
    else
    {
      uint64_t v19 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(&a1[8], 16, (uint64_t)v13, v14);
    }
  }
  else
  {
    uint64_t v19 = 0;
    a1[8] = 0;
    a1[10] = 0;
    a1[12] = 0;
    a1[14] = 0;
  }
  int16x4_t v21 = (int8x8_t *)((char *)v13 + v19);
  unsigned int v22 = a3[2];
  if (a3[2])
  {
    if (v22 == 96)
    {
      int8x8_t v28 = vdup_lane_s8(*v21, 0);
      a1[1] = v28;
      a1[3] = v28;
      a1[5] = v28;
      a1[7] = v28;
      uint64_t v27 = 1;
    }
    else if (v22 == 31)
    {
      int16x4_t v23 = (int16x4_t)*v21;
      int16x4_t v24 = (int16x4_t)v21[1];
      int16x4_t v25 = (int16x4_t)v21[2];
      int16x4_t v26 = (int16x4_t)v21[3];
      a1[1] = (int8x8_t)vuzp1_s16((int16x4_t)*v21, v25);
      a1[3] = (int8x8_t)vuzp2_s16(v23, v25);
      a1[5] = (int8x8_t)vuzp1_s16(v24, v26);
      a1[7] = (int8x8_t)vuzp2_s16(v24, v26);
      uint64_t v27 = 32;
    }
    else
    {
      uint64_t v27 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(&a1[1], 16, (uint64_t)v21, v22);
    }
  }
  else
  {
    uint64_t v27 = 0;
    a1[1] = 0;
    a1[3] = 0;
    a1[5] = 0;
    a1[7] = 0;
  }
  unsigned int v29 = (int8x8_t *)((char *)v21 + v27);
  unsigned int v30 = a3[3];
  if (a3[3])
  {
    if (v30 == 96)
    {
      int8x8_t v36 = vdup_lane_s8(*v29, 0);
      a1[9] = v36;
      a1[11] = v36;
      a1[13] = v36;
      a1[15] = v36;
      uint64_t v35 = 1;
    }
    else if (v30 == 31)
    {
      int16x4_t v31 = (int16x4_t)*v29;
      int16x4_t v32 = (int16x4_t)v29[1];
      int16x4_t v33 = (int16x4_t)v29[2];
      int16x4_t v34 = (int16x4_t)v29[3];
      a1[9] = (int8x8_t)vuzp1_s16((int16x4_t)*v29, v33);
      a1[11] = (int8x8_t)vuzp2_s16(v31, v33);
      a1[13] = (int8x8_t)vuzp1_s16(v32, v34);
      a1[15] = (int8x8_t)vuzp2_s16(v32, v34);
      uint64_t v35 = 32;
    }
    else
    {
      uint64_t v35 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(&a1[9], 16, (uint64_t)v29, v30);
    }
  }
  else
  {
    uint64_t v35 = 0;
    a1[9] = 0;
    a1[11] = 0;
    a1[13] = 0;
    a1[15] = 0;
  }
  int16x4_t v37 = (int8x8_t *)((char *)v29 + v35);
  unsigned int v38 = a3[4];
  if (a3[4])
  {
    if (v38 == 96)
    {
      int8x8_t v44 = vdup_lane_s8(*v37, 0);
      a1[16] = v44;
      a1[18] = v44;
      a1[20] = v44;
      a1[22] = v44;
      uint64_t v43 = 1;
    }
    else if (v38 == 31)
    {
      int16x4_t v39 = (int16x4_t)*v37;
      int16x4_t v40 = (int16x4_t)v37[1];
      int16x4_t v41 = (int16x4_t)v37[2];
      int16x4_t v42 = (int16x4_t)v37[3];
      a1[16] = (int8x8_t)vuzp1_s16((int16x4_t)*v37, v41);
      a1[18] = (int8x8_t)vuzp2_s16(v39, v41);
      a1[20] = (int8x8_t)vuzp1_s16(v40, v42);
      a1[22] = (int8x8_t)vuzp2_s16(v40, v42);
      uint64_t v43 = 32;
    }
    else
    {
      uint64_t v43 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(&a1[16], 16, (uint64_t)v37, v38);
    }
  }
  else
  {
    uint64_t v43 = 0;
    a1[16] = 0;
    a1[18] = 0;
    a1[20] = 0;
    a1[22] = 0;
  }
  uint8x16_t v45 = (int8x8_t *)((char *)v37 + v43);
  unsigned int v46 = a3[5];
  if (a3[5])
  {
    if (v46 == 96)
    {
      int8x8_t v52 = vdup_lane_s8(*v45, 0);
      a1[24] = v52;
      a1[26] = v52;
      a1[28] = v52;
      a1[30] = v52;
      uint64_t v51 = 1;
    }
    else if (v46 == 31)
    {
      int16x4_t v47 = (int16x4_t)*v45;
      int16x4_t v48 = (int16x4_t)v45[1];
      int16x4_t v49 = (int16x4_t)v45[2];
      int16x4_t v50 = (int16x4_t)v45[3];
      a1[24] = (int8x8_t)vuzp1_s16((int16x4_t)*v45, v49);
      a1[26] = (int8x8_t)vuzp2_s16(v47, v49);
      a1[28] = (int8x8_t)vuzp1_s16(v48, v50);
      a1[30] = (int8x8_t)vuzp2_s16(v48, v50);
      uint64_t v51 = 32;
    }
    else
    {
      uint64_t v51 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(&a1[24], 16, (uint64_t)v45, v46);
    }
  }
  else
  {
    uint64_t v51 = 0;
    a1[24] = 0;
    a1[26] = 0;
    a1[28] = 0;
    a1[30] = 0;
  }
  int16x4_t v53 = (int8x8_t *)((char *)v45 + v51);
  unsigned int v54 = a3[6];
  if (!a3[6])
  {
    uint64_t result = 0;
    a1[17] = 0;
    a1[19] = 0;
    a1[21] = 0;
    a1[23] = 0;
    unsigned int v60 = a3[7];
    if (!a3[7]) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
  if (v54 == 96)
  {
    int8x8_t v61 = vdup_lane_s8(*v53, 0);
    a1[17] = v61;
    a1[19] = v61;
    a1[21] = v61;
    a1[23] = v61;
    uint64_t result = 1;
    unsigned int v60 = a3[7];
    if (a3[7]) {
      goto LABEL_51;
    }
    goto LABEL_55;
  }
  if (v54 != 31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(&a1[17], 16, (uint64_t)v53, v54);
    unsigned int v60 = a3[7];
    if (a3[7]) {
      goto LABEL_51;
    }
LABEL_55:
    a1[25] = 0;
    a1[27] = 0;
    a1[29] = 0;
    a1[31] = 0;
    return result;
  }
  int16x4_t v55 = (int16x4_t)*v53;
  int16x4_t v56 = (int16x4_t)v53[1];
  int16x4_t v57 = (int16x4_t)v53[2];
  int16x4_t v58 = (int16x4_t)v53[3];
  a1[17] = (int8x8_t)vuzp1_s16((int16x4_t)*v53, v57);
  a1[19] = (int8x8_t)vuzp2_s16(v55, v57);
  a1[21] = (int8x8_t)vuzp1_s16(v56, v58);
  a1[23] = (int8x8_t)vuzp2_s16(v56, v58);
  uint64_t result = 32;
  unsigned int v60 = a3[7];
  if (!a3[7]) {
    goto LABEL_55;
  }
LABEL_51:
  unsigned int v62 = (int8x8_t *)((char *)v53 + result);
  if (v60 == 96)
  {
    int16x4_t v67 = (int16x4_t)vdup_lane_s8(*v62, 0);
    a1[25] = (int8x8_t)v67;
    a1[27] = (int8x8_t)v67;
    a1[29] = (int8x8_t)v67;
    goto LABEL_57;
  }
  if (v60 == 31)
  {
    int16x4_t v63 = (int16x4_t)*v62;
    int16x4_t v64 = (int16x4_t)v62[1];
    int16x4_t v65 = (int16x4_t)v62[2];
    int16x4_t v66 = (int16x4_t)v62[3];
    a1[25] = (int8x8_t)vuzp1_s16((int16x4_t)*v62, v65);
    a1[27] = (int8x8_t)vuzp2_s16(v63, v65);
    a1[29] = (int8x8_t)vuzp1_s16(v64, v66);
    int16x4_t v67 = vuzp2_s16(v64, v66);
LABEL_57:
    a1[31] = (int8x8_t)v67;
    return result;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(&a1[25], 16, (uint64_t)v62, v60);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int8x8_t *a1, char *a2, int16x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, double a7, double a8, int8x8_t a9, int8x8_t a10)
{
  int16x4_t v11 = *(int16x4_t *)((char *)a3 + a4);
  int8x8_t v12 = (int8x8_t)vzip1_s16(*a3, v11);
  int16x4_t v13 = vzip2_s16(*a3, v11);
  *(int8x8_t *)v14.i8 = v12;
  v14.u64[1] = (unint64_t)v12;
  *(int16x4_t *)v15.i8 = v13;
  v15.u64[1] = (unint64_t)v13;
  int16x4_t v16 = (int16x4_t *)((char *)a3 + 2 * a4);
  int16x4_t v17 = *(int16x4_t *)((char *)v16 + a4);
  int16x4_t v18 = vzip1_s16(*v16, v17);
  int16x4_t v19 = vzip2_s16(*v16, v17);
  *(int16x4_t *)v20.i8 = v18;
  v20.u64[1] = (unint64_t)v18;
  *(int16x4_t *)v21.i8 = v19;
  v21.u64[1] = (unint64_t)v19;
  int8x16_t v22 = vdupq_lane_s8(v12, 0);
  int8x16_t v23 = vsubq_s8(v14, v22);
  int8x16_t v24 = vsubq_s8(v20, v22);
  int8x16_t v25 = vsubq_s8(v15, v22);
  int8x16_t v26 = vsubq_s8(v21, v22);
  a9.i8[0] = vmaxvq_s8(v23);
  a10.i8[0] = vminvq_s8(v23);
  int8x16_t v27 = vdupq_lane_s8(a9, 0);
  int8x16_t v28 = vdupq_lane_s8(a10, 0);
  v29.i64[0] = 0x8080808080808080;
  v29.i64[1] = 0x8080808080808080;
  int8x16_t v30 = vmaxq_s8(v27, v29);
  v29.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v29.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v31 = vminq_s8(v28, v29);
  int8x16_t v32 = vzip1q_s8(v27, v28);
  int8x16_t v33 = vceqzq_s8(v32);
  int8x16_t v34 = vclsq_s8(v32);
  v35.i64[0] = 0x808080808080808;
  v35.i64[1] = 0x808080808080808;
  int8x16_t v36 = vsubq_s8(v35, v34);
  int8x16_t v37 = vbicq_s8(v36, v33);
  v36.i8[0] = vmaxvq_s8(v24);
  v10.i8[0] = vminvq_s8(v24);
  int8x16_t v38 = vdupq_lane_s8(*(int8x8_t *)v36.i8, 0);
  int8x16_t v39 = vdupq_lane_s8(v10, 0);
  int8x16_t v40 = vpmaxq_s8(v37, v37);
  int8x16_t v41 = vmaxq_s8(v30, v38);
  int8x16_t v42 = vminq_s8(v31, v39);
  int8x16_t v43 = vzip1q_s8(v38, v39);
  int8x16_t v44 = vceqzq_s8(v43);
  int8x16_t v45 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v43)), v44);
  int8x16_t v46 = vpmaxq_s8(v45, v45);
  v44.i8[0] = vmaxvq_s8(v25);
  int8x16_t v47 = vdupq_lane_s8(*(int8x8_t *)v44.i8, 0);
  v38.i8[0] = vminvq_s8(v25);
  int8x16_t v48 = vdupq_lane_s8(*(int8x8_t *)v38.i8, 0);
  int8x16_t v49 = vmaxq_s8(v41, v47);
  int8x16_t v50 = vminq_s8(v42, v48);
  int8x16_t v51 = vzip1q_s8(v47, v48);
  int8x16_t v52 = vceqzq_s8(v51);
  int8x16_t v53 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v51)), v52);
  int8x16_t v54 = vpmaxq_s8(v53, v53);
  v52.i8[0] = vmaxvq_s8(v26);
  v48.i8[0] = vminvq_s8(v26);
  int8x16_t v55 = vdupq_lane_s8(*(int8x8_t *)v52.i8, 0);
  int8x16_t v56 = vdupq_lane_s8(*(int8x8_t *)v48.i8, 0);
  int8x16_t v57 = vmaxq_s8(v49, v55);
  int8x16_t v58 = vminq_s8(v50, v56);
  int8x16_t v59 = vzip1q_s8(v55, v56);
  int8x16_t v60 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v59)), vceqzq_s8(v59));
  int8x16_t v61 = vpmaxq_s8(v60, v60);
  int8x16_t v62 = vmaxq_s8(vmaxq_s8(v40, v46), vmaxq_s8(v54, v61));
  int8x16_t v63 = vclzq_s8(vsubq_s8(v57, v58));
  int8x16_t v64 = vsubq_s8(v35, v63);
  int8x16_t v65 = vcgtq_s8(v62, v64);
  int8x16_t v66 = vbslq_s8(v65, v64, v62);
  if (vmaxvq_s8(v66))
  {
    char v67 = 0;
    unint64_t v68 = 0;
    v69.i64[0] = -1;
    v69.i64[1] = -1;
    v70.i64[0] = 0x707070707070707;
    v70.i64[1] = 0x707070707070707;
    int8x16_t v71 = vandq_s8(vsubq_s8(vshlq_s8(v69, vsubq_s8(v70, v63)), v58), v65);
    int8x16_t v72 = vandq_s8(v65, v35);
    v73.i64[0] = 0x303030303030303;
    v73.i64[1] = 0x303030303030303;
    int8x16_t v74 = vorrq_s8(vandq_s8(vceqzq_s8(v66), v73), v72);
    int8x16_t v75 = vmaxq_s8(vminq_s8(vsubq_s8(v66, v40), v73), (int8x16_t)0);
    int8x16_t v76 = vmaxq_s8(vminq_s8(vsubq_s8(v66, v46), v73), (int8x16_t)0);
    int8x16_t v77 = vmaxq_s8(vminq_s8(vsubq_s8(v66, v54), v73), (int8x16_t)0);
    int8x16_t v78 = vmaxq_s8(vminq_s8(vsubq_s8(v66, v61), v73), (int8x16_t)0);
    int8x16_t v79 = vsubq_s8(v66, v75);
    int8x16_t v80 = vsubq_s8(v66, v76);
    int8x16_t v81 = vsubq_s8(v66, v77);
    int8x16_t v82 = vsubq_s8(v66, v78);
    int8x16_t v83 = vceqq_s8(vaddq_s8(v78, v77), vnegq_s8(vaddq_s8(v75, v76)));
    v76.i64[0] = 0x404040404040404;
    v76.i64[1] = 0x404040404040404;
    int8x16_t v84 = vorrq_s8(vbicq_s8(v76, v83), v74);
    if (a5 >= 4 && a6 >= 2)
    {
      int16x4_t v394 = v18;
      int16x4_t v395 = v19;
      int8x8_t v396 = v12;
      int16x4_t v397 = v13;
      int8x16_t v398 = v71;
      v85.i32[0] = v12.u8[2];
      v85.i32[1] = v12.u8[1];
      int32x2_t v86 = vshl_n_s32(vsub_s32(v85, vdup_n_s32(v12.u8[0])), 0x1CuLL);
      int v87 = v86.i32[1] >> 28;
      int8x8_t v88 = (int8x8_t)vshl_s32(v86, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v89 = v86.i32[0];
      v90.i64[0] = 0xFFFF0000FFFF0000;
      v90.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v91 = vmlaq_s8(vandq_s8(vdupq_n_s8(v86.i32[0] >> 28), v90), vdupq_n_s8(v86.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v92 = v80;
      int8x16_t v93 = vsubq_s8(v23, v91);
      int8x16_t v94 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v88.i32[0]), v24), v91);
      int8x16_t v95 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v88.i32[1]), v25), v91);
      int8x16_t v96 = vaddq_s8(vdupq_n_s8(-v88.i32[0] - v88.i32[1]), v26);
      int8x16_t v97 = vsubq_s8(v96, v91);
      v96.i8[0] = vmaxvq_s8(v93);
      v88.i8[0] = vminvq_s8(v93);
      int8x16_t v98 = vdupq_lane_s8(*(int8x8_t *)v96.i8, 0);
      int8x16_t v99 = vdupq_lane_s8(v88, 0);
      v100.i64[0] = 0x8080808080808080;
      v100.i64[1] = 0x8080808080808080;
      int8x16_t v101 = vmaxq_s8(v98, v100);
      v100.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v100.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v102 = vminq_s8(v99, v100);
      int8x16_t v103 = vzip1q_s8(v98, v99);
      int8x16_t v104 = vceqzq_s8(v103);
      v105.i64[0] = 0x808080808080808;
      v105.i64[1] = 0x808080808080808;
      int8x16_t v106 = vbicq_s8(vsubq_s8(v105, vclsq_s8(v103)), v104);
      int8x16_t v107 = vpmaxq_s8(v106, v106);
      v106.i8[0] = vmaxvq_s8(v94);
      v104.i8[0] = vminvq_s8(v94);
      int8x16_t v108 = vdupq_lane_s8(*(int8x8_t *)v106.i8, 0);
      int8x16_t v109 = vdupq_lane_s8(*(int8x8_t *)v104.i8, 0);
      int8x16_t v110 = vmaxq_s8(v101, v108);
      int8x16_t v111 = vminq_s8(v102, v109);
      int8x16_t v112 = vzip1q_s8(v108, v109);
      int8x16_t v113 = vceqzq_s8(v112);
      int8x16_t v114 = vbicq_s8(vsubq_s8(v105, vclsq_s8(v112)), v113);
      int8x16_t v115 = vpmaxq_s8(v114, v114);
      v114.i8[0] = vmaxvq_s8(v95);
      v113.i8[0] = vminvq_s8(v95);
      int8x16_t v116 = vdupq_lane_s8(*(int8x8_t *)v114.i8, 0);
      int8x16_t v117 = vdupq_lane_s8(*(int8x8_t *)v113.i8, 0);
      int8x16_t v118 = vmaxq_s8(v110, v116);
      int8x16_t v119 = vminq_s8(v111, v117);
      int8x16_t v120 = vzip1q_s8(v116, v117);
      int8x16_t v121 = vceqzq_s8(v120);
      int8x16_t v122 = vbicq_s8(vsubq_s8(v105, vclsq_s8(v120)), v121);
      int8x16_t v123 = vpmaxq_s8(v122, v122);
      v122.i8[0] = vmaxvq_s8(v97);
      v121.i8[0] = vminvq_s8(v97);
      int8x16_t v124 = vdupq_lane_s8(*(int8x8_t *)v122.i8, 0);
      int8x16_t v125 = vdupq_lane_s8(*(int8x8_t *)v121.i8, 0);
      int8x16_t v126 = vmaxq_s8(v118, v124);
      int8x16_t v392 = v25;
      int8x16_t v393 = v24;
      int8x16_t v127 = vminq_s8(v119, v125);
      int8x16_t v128 = vzip1q_s8(v124, v125);
      int8x16_t v129 = vbicq_s8(vsubq_s8(v105, vclsq_s8(v128)), vceqzq_s8(v128));
      int8x16_t v130 = vpmaxq_s8(v129, v129);
      int16x8_t v131 = (int16x8_t)vmaxq_s8(vmaxq_s8(v107, v115), vmaxq_s8(v123, v130));
      int8x16_t v132 = vclzq_s8(vsubq_s8(v126, v127));
      int8x16_t v133 = vsubq_s8(v105, v132);
      int8x16_t v134 = vcgtq_s8((int8x16_t)v131, v133);
      int8x16_t v135 = vbslq_s8(v134, v133, (int8x16_t)v131);
      v136.i64[0] = 0x202020202020202;
      v136.i64[1] = 0x202020202020202;
      v131.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v131.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v137 = vbslq_s8(v134, (int8x16_t)v131, v136);
      v131.i64[0] = 0x101010101010101;
      v131.i64[1] = 0x101010101010101;
      int8x16_t v138 = vmaxq_s8(v135, (int8x16_t)v131);
      int8x16_t v139 = vsubq_s8(v138, v107);
      v107.i64[0] = 0x303030303030303;
      v107.i64[1] = 0x303030303030303;
      int8x16_t v140 = v26;
      int8x16_t v141 = vmaxq_s8(vminq_s8(v139, v107), (int8x16_t)0);
      int8x16_t v142 = v81;
      int8x16_t v143 = vmaxq_s8(vminq_s8(vsubq_s8(v138, v115), v107), (int8x16_t)0);
      int8x16_t v144 = vmaxq_s8(vminq_s8(vsubq_s8(v138, v123), v107), (int8x16_t)0);
      int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v138, v130), v107), (int8x16_t)0);
      int8x16_t v146 = vsubq_s8(v138, v141);
      int8x16_t v147 = vsubq_s8(v138, v143);
      int8x16_t v148 = vsubq_s8(v138, v144);
      int8x16_t v149 = vsubq_s8(v138, v145);
      int8x16_t v150 = vceqq_s8(vaddq_s8(v145, v144), vnegq_s8(vaddq_s8(v141, v143)));
      v144.i64[0] = 0x404040404040404;
      v144.i64[1] = 0x404040404040404;
      int8x16_t v151 = vorrq_s8(vbicq_s8(v144, v150), v137);
      v131.i64[0] = 0x8000800080008;
      v131.i64[1] = 0x8000800080008;
      int16x8_t v399 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v142.i8, *(int8x8_t *)v92.i8), *(int8x8_t *)v82.i8), 3uLL);
      v152.i64[0] = 0x2000200020002;
      v152.i64[1] = 0x2000200020002;
      int8x16_t v153 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(v399, *(int8x8_t *)v79.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v66.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v84.i8))), (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v84.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v152), (int8x16_t)v131)),
                                                  vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v148.i8, *(int8x8_t *)v147.i8), *(int8x8_t *)v149.i8), 3uLL), *(int8x8_t *)v146.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v151.i8, *(int8x8_t *)v151.i8), (int8x8_t)0x808080808080808)), (uint8x8_t)vbic_s8(*(int8x8_t *)v138.i8,
                                                                              (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v151.i8))), v131))), 0);
      v150.i16[0] = vaddlvq_s8(v153);
      unint64_t v68 = v87 & 0xF | HIBYTE(v89);
      int v154 = v150.u16[0];
      if (v150.i16[0])
      {
        v155.i64[0] = 0x707070707070707;
        v155.i64[1] = 0x707070707070707;
        int8x16_t v156 = vsubq_s8(v155, v132);
        v157.i64[0] = -1;
        v157.i64[1] = -1;
        int8x16_t v158 = vsubq_s8(vshlq_s8(v157, v156), v127);
        int8x16_t v159 = vbslq_s8(v153, v93, v23);
        int8x16_t v24 = vbslq_s8(v153, v94, v393);
        int8x16_t v26 = vbslq_s8(v153, v97, v140);
        int8x16_t v142 = vbslq_s8(v153, v148, v142);
        int8x16_t v82 = vbslq_s8(v153, v149, v82);
        int8x16_t v71 = vbslq_s8(v153, vandq_s8(v158, v134), v398);
        int8x16_t v66 = vbslq_s8(v153, v138, v66);
        int8x16_t v84 = vbslq_s8(v153, v151, v84);
        int8x16_t v389 = vbslq_s8(v153, v146, v79);
        int16x8_t v160 = vmull_s8(*(int8x8_t *)v389.i8, (int8x8_t)0x707070707070707);
        int8x16_t v390 = vbslq_s8(v153, v147, v92);
        int8x16_t v391 = v159;
        int16x8_t v399 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v142.i8, *(int8x8_t *)v390.i8), *(int8x8_t *)v82.i8), 3uLL);
        int8x16_t v25 = vbslq_s8(v153, v95, v392);
      }
      else
      {
        int8x16_t v390 = v92;
        int8x16_t v391 = v23;
        int8x16_t v389 = v79;
        int16x8_t v160 = vmull_s8(*(int8x8_t *)v79.i8, (int8x8_t)0x707070707070707);
        int8x16_t v26 = v140;
        int8x16_t v25 = v392;
        int8x16_t v24 = v393;
        int8x16_t v71 = v398;
      }
      int8x16_t v81 = v142;
      v163.i64[0] = 0x808080808080808;
      v163.i64[1] = 0x808080808080808;
      v164.i64[0] = 0x8000800080008;
      v164.i64[1] = 0x8000800080008;
      v165.i64[0] = 0x303030303030303;
      v165.i64[1] = 0x303030303030303;
      v166.i64[0] = 0x202020202020202;
      v166.i64[1] = 0x202020202020202;
      v167.i64[0] = 0x8080808080808080;
      v167.i64[1] = 0x8080808080808080;
      v168.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v168.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v169 = v20;
      v169.i8[7] = v14.i8[7];
      int8x16_t v170 = vsubq_s8(v14, vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7430));
      int8x16_t v171 = vsubq_s8(v20, vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7440));
      int8x16_t v172 = v15;
      v172.i8[7] = v14.i8[7];
      int8x16_t v173 = vsubq_s8(v15, vqtbl1q_s8(v172, (int8x16_t)xmmword_242EA7450));
      int8x16_t v174 = v21;
      v174.i8[7] = v14.i8[7];
      int8x16_t v175 = vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7460);
      int8x16_t v176 = vsubq_s8(v21, v175);
      int8x16_t v177 = v170;
      v177.i8[0] = v170.i8[7];
      v177.i8[7] = v170.i8[0];
      v170.i8[0] = vmaxvq_s8(v177);
      v175.i8[0] = vminvq_s8(v177);
      int8x16_t v178 = vdupq_lane_s8(*(int8x8_t *)v170.i8, 0);
      int8x16_t v179 = vdupq_lane_s8(*(int8x8_t *)v175.i8, 0);
      int8x16_t v180 = vmaxq_s8(v178, v167);
      int8x16_t v181 = vminq_s8(v179, v168);
      int8x16_t v182 = vzip1q_s8(v178, v179);
      int8x16_t v183 = vceqzq_s8(v182);
      int8x16_t v184 = vbicq_s8(vsubq_s8(v163, vclsq_s8(v182)), v183);
      int8x16_t v185 = vpmaxq_s8(v184, v184);
      v183.i8[0] = vmaxvq_s8(v171);
      v168.i8[0] = vminvq_s8(v171);
      int8x16_t v186 = vdupq_lane_s8(*(int8x8_t *)v183.i8, 0);
      int8x16_t v187 = vdupq_lane_s8(*(int8x8_t *)v168.i8, 0);
      int8x16_t v188 = vmaxq_s8(v180, v186);
      int8x16_t v189 = vminq_s8(v181, v187);
      int8x16_t v190 = vzip1q_s8(v186, v187);
      int8x16_t v191 = vbicq_s8(vsubq_s8(v163, vclsq_s8(v190)), vceqzq_s8(v190));
      int8x16_t v192 = vpmaxq_s8(v191, v191);
      v191.i8[0] = vmaxvq_s8(v173);
      v148.i8[0] = vminvq_s8(v173);
      int8x16_t v193 = vdupq_lane_s8(*(int8x8_t *)v191.i8, 0);
      int8x16_t v194 = vdupq_lane_s8(*(int8x8_t *)v148.i8, 0);
      int8x16_t v195 = vmaxq_s8(v188, v193);
      int8x16_t v196 = vminq_s8(v189, v194);
      int8x16_t v197 = vzip1q_s8(v193, v194);
      int8x16_t v198 = vbicq_s8(vsubq_s8(v163, vclsq_s8(v197)), vceqzq_s8(v197));
      int8x16_t v199 = vpmaxq_s8(v198, v198);
      v198.i8[0] = vmaxvq_s8(v176);
      v149.i8[0] = vminvq_s8(v176);
      int8x16_t v200 = vdupq_lane_s8(*(int8x8_t *)v198.i8, 0);
      int8x16_t v201 = vdupq_lane_s8(*(int8x8_t *)v149.i8, 0);
      int8x16_t v202 = vmaxq_s8(v195, v200);
      int8x16_t v203 = vminq_s8(v196, v201);
      int8x16_t v204 = vzip1q_s8(v200, v201);
      int8x16_t v205 = vbicq_s8(vsubq_s8(v163, vclsq_s8(v204)), vceqzq_s8(v204));
      int8x16_t v206 = vpmaxq_s8(v205, v205);
      int8x16_t v207 = vmaxq_s8(vmaxq_s8(v185, v192), vmaxq_s8(v199, v206));
      int8x16_t v208 = vclzq_s8(vsubq_s8(v202, v203));
      int8x16_t v209 = vsubq_s8(v163, v208);
      int8x16_t v210 = vcgtq_s8(v207, v209);
      int8x16_t v211 = vbslq_s8(v210, v209, v207);
      v207.i64[0] = 0x909090909090909;
      v207.i64[1] = 0x909090909090909;
      int8x16_t v212 = vorrq_s8(vandq_s8(vceqzq_s8(v211), v166), vsubq_s8(vandq_s8(v210, v207), vmvnq_s8(v210)));
      int8x16_t v213 = vmaxq_s8(vminq_s8(vsubq_s8(v211, v185), v165), (int8x16_t)0);
      int8x16_t v214 = vmaxq_s8(vminq_s8(vsubq_s8(v211, v192), v165), (int8x16_t)0);
      int8x16_t v215 = vmaxq_s8(vminq_s8(vsubq_s8(v211, v199), v165), (int8x16_t)0);
      int8x16_t v216 = vmaxq_s8(vminq_s8(vsubq_s8(v211, v206), v165), (int8x16_t)0);
      int8x16_t v217 = vsubq_s8(v211, v213);
      int8x16_t v218 = vsubq_s8(v211, v214);
      int8x16_t v219 = vsubq_s8(v211, v215);
      int8x16_t v220 = vsubq_s8(v211, v216);
      v221.i64[0] = 0x404040404040404;
      v221.i64[1] = 0x404040404040404;
      int8x16_t v222 = vorrq_s8(v212, vbicq_s8(v221, vceqq_s8(vaddq_s8(v216, v215), vnegq_s8(vaddq_s8(v213, v214)))));
      v214.i64[0] = 0x3000300030003;
      v214.i64[1] = 0x3000300030003;
      int8x16_t v223 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
      v221.i64[0] = 0x2000200020002;
      v221.i64[1] = 0x2000200020002;
      int8x16_t v224 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v66.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v223, v164))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v164)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v223, v214), (int16x8_t)v221), v164), v160)), v399), vaddw_s8(
                                                    (int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v219.i8, *(int8x8_t *)v218.i8), *(int8x8_t *)v220.i8), 3uLL), *(int8x8_t *)v217.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v222.i8, *(int8x8_t *)v222.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v211.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808,
                                                                  *(uint8x8_t *)v222.i8))))),
               0);
      v213.i16[0] = vaddlvq_s8(v224);
      int v225 = v213.u16[0];
      if (v213.i16[0])
      {
        v226.i64[0] = 0x707070707070707;
        v226.i64[1] = 0x707070707070707;
        int8x16_t v227 = vsubq_s8(v226, v208);
        v228.i64[0] = -1;
        v228.i64[1] = -1;
        v22.i8[0] = vbslq_s8(v224, vextq_s8(v14, v14, 0xFuLL), v22).u8[0];
        int8x16_t v23 = vbslq_s8(v224, v177, v391);
        int8x16_t v24 = vbslq_s8(v224, v171, v24);
        int8x16_t v25 = vbslq_s8(v224, v173, v25);
        int8x16_t v26 = vbslq_s8(v224, v176, v26);
        int8x16_t v79 = vbslq_s8(v224, v217, v389);
        int8x16_t v80 = vbslq_s8(v224, v218, v390);
        int8x16_t v81 = vbslq_s8(v224, v219, v81);
        int8x16_t v82 = vbslq_s8(v224, v220, v82);
        int8x16_t v71 = vbslq_s8(v224, vandq_s8(vsubq_s8(vshlq_s8(v228, v227), v203), v210), v71);
        int8x16_t v66 = vbslq_s8(v224, v211, v66);
        int8x16_t v84 = vbslq_s8(v224, v222, v84);
      }
      else
      {
        int8x16_t v80 = v390;
        int8x16_t v23 = v391;
        int8x16_t v79 = v389;
      }
      int8x8_t v12 = v396;
      int16x4_t v13 = v397;
      int16x4_t v18 = v394;
      int16x4_t v19 = v395;
      if (v154) {
        BOOL v229 = v225 == 0;
      }
      else {
        BOOL v229 = 0;
      }
      char v67 = v229;
    }
    int8x16_t v230 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
    v231.i64[0] = 0x8000800080008;
    v231.i64[1] = 0x8000800080008;
    v232.i64[0] = 0x3000300030003;
    v232.i64[1] = 0x3000300030003;
    v233.i64[0] = 0x2000200020002;
    v233.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(7 * v79.i8[0]
                                    + 8 * vaddq_s8(v81, vaddq_s8(v80, v82)).i8[0]
                                    + ((2 * v230.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v66.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v230, v231))).u16[0]+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v230, v232), v233), v231).u16[0])+ 19) >= 0x100)
    {
      *a1 = v12;
      a1[1] = (int8x8_t)v18;
      char v161 = 31;
      unint64_t v162 = 32;
      a1[2] = (int8x8_t)v13;
      a1[3] = (int8x8_t)v19;
    }
    else
    {
      v234 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v235 = 8 * (a1 & 7);
      if (v235) {
        uint64_t v236 = *v234 & ~(-1 << v235);
      }
      else {
        uint64_t v236 = 0;
      }
      int8x16_t v237 = vextq_s8(v79, (int8x16_t)0, 8uLL);
      int8x16_t v238 = vextq_s8(v80, (int8x16_t)0, 8uLL);
      int8x16_t v239 = vextq_s8(v81, (int8x16_t)0, 8uLL);
      int8x16_t v240 = vextq_s8(v82, (int8x16_t)0, 8uLL);
      if (v66.i8[0]) {
        int v241 = (16 * v66.i8[0] + 112) & 0x70;
      }
      else {
        int v241 = 0;
      }
      *a2 = 32 * v84.i8[0];
      unint64_t v242 = (v84.i8[0] & 8 | v241 & 0xFFFF807F | ((unint64_t)v22.u8[0] << 7)) >> 3;
      unint64_t v243 = (v242 << v235) | v236;
      if (v235 >= 0x34)
      {
        void *v234 = v243;
        unint64_t v243 = v242 >> (-8 * (a1 & 7u));
      }
      int8x16_t v244 = vdupq_lane_s8(*(int8x8_t *)v66.i8, 0);
      unint64_t v245 = v235 + 12;
      v246.i64[0] = 0x202020202020202;
      v246.i64[1] = 0x202020202020202;
      int8x16_t v247 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8), (int8x8_t)0x4000400040004)))), v246);
      v246.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v246.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v248.i64[0] = -1;
      v248.i64[1] = -1;
      uint8x16_t v249 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v248, (uint8x16_t)vorrq_s8(v247, v246)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v244, vzip1q_s8(v237, v238)), (int16x8_t)vsubq_s8(v244, vzip1q_s8(v239, v240))).u32[0]);
      int16x8_t v250 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v247.i8);
      uint16x8_t v251 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v249.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v250)), (int16x8_t)vmovl_high_u8(v249));
      uint16x8_t v252 = (uint16x8_t)vpaddq_s16(v250, (int16x8_t)vmovl_high_u8((uint8x16_t)v247));
      int32x4_t v253 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v252.i8);
      int32x4_t v254 = (int32x4_t)vmovl_high_u16(v252);
      int32x4_t v255 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v251.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v253)), (int32x4_t)vshlq_u32(vmovl_high_u16(v251), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v254)));
      int32x4_t v256 = vpaddq_s32(v253, v254);
      v257.i64[0] = v255.u32[0];
      v257.i64[1] = v255.u32[1];
      uint64x2_t v258 = (uint64x2_t)v257;
      v257.i64[0] = v255.u32[2];
      v257.i64[1] = v255.u32[3];
      uint64x2_t v259 = (uint64x2_t)v257;
      v257.i64[0] = v256.u32[0];
      v257.i64[1] = v256.u32[1];
      int64x2_t v260 = v257;
      v257.i64[0] = v256.u32[2];
      v257.i64[1] = v256.u32[3];
      int64x2_t v261 = vpaddq_s64((int64x2_t)vshlq_u64(v258, (uint64x2_t)vzip1q_s64((int64x2_t)0, v260)), (int64x2_t)vshlq_u64(v259, (uint64x2_t)vzip1q_s64((int64x2_t)0, v257)));
      int64x2_t v262 = vpaddq_s64(v260, v257);
      uint64_t v263 = (v235 + 12) & 0x3C;
      unint64_t v264 = (v261.i64[0] << v263) | v243;
      if ((unint64_t)(v262.i64[0] + v263) >= 0x40)
      {
        *(void *)((char *)v234 + ((v245 >> 3) & 8)) = v264;
        unint64_t v264 = (unint64_t)v261.i64[0] >> -(char)v263;
      }
      unint64_t v265 = v262.i64[0] + v245;
      uint64_t v266 = (v262.i64[0] + v245) & 0x3F;
      unint64_t v267 = v264 | (v261.i64[1] << (v262.i8[0] + v245));
      if ((unint64_t)(v266 + v262.i64[1]) >= 0x40)
      {
        *(void *)((char *)v234 + ((v265 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v267;
        unint64_t v267 = (unint64_t)v261.i64[1] >> -(char)v266;
        if (!v266) {
          unint64_t v267 = 0;
        }
      }
      int8x16_t v268 = vceqq_s8(v66, v79);
      unint64_t v269 = v265 + v262.i64[1];
      v270.i64[0] = 0x808080808080808;
      v270.i64[1] = 0x808080808080808;
      v271.i64[0] = -1;
      v271.i64[1] = -1;
      int8x16_t v272 = vandq_s8(vextq_s8(vtstq_s8(v84, v270), (int8x16_t)0, 0xFuLL), v66);
      v273.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v273.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v274 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v271, (uint8x16_t)vaddq_s8(v272, v273)), v71);
      int16x8_t v275 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v272.i8);
      uint16x8_t v276 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v274.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v275)), (int16x8_t)vmovl_high_u8(v274));
      uint16x8_t v277 = (uint16x8_t)vpaddq_s16(v275, (int16x8_t)vmovl_high_u8((uint8x16_t)v272));
      int32x4_t v278 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v277.i8);
      int32x4_t v279 = (int32x4_t)vmovl_high_u16(v277);
      int32x4_t v280 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v276.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)), (int32x4_t)vshlq_u32(vmovl_high_u16(v276), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v279)));
      int32x4_t v281 = vpaddq_s32(v278, v279);
      v282.i64[0] = v280.u32[0];
      v282.i64[1] = v280.u32[1];
      uint64x2_t v283 = (uint64x2_t)v282;
      v282.i64[0] = v280.u32[2];
      v282.i64[1] = v280.u32[3];
      uint64x2_t v284 = (uint64x2_t)v282;
      v282.i64[0] = v281.u32[0];
      v282.i64[1] = v281.u32[1];
      int64x2_t v285 = v282;
      v282.i64[0] = v281.u32[2];
      v282.i64[1] = v281.u32[3];
      int64x2_t v286 = vpaddq_s64((int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v285)), (int64x2_t)vshlq_u64(v284, (uint64x2_t)vzip1q_s64((int64x2_t)0, v282)));
      int64x2_t v287 = vpaddq_s64(v285, v282);
      unint64_t v288 = (v286.i64[0] << v269) | v267;
      if (v287.i64[0] + (v269 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v234 + ((v269 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v288;
        unint64_t v288 = (unint64_t)v286.i64[0] >> -(v269 & 0x3F);
        if ((v269 & 0x3F) == 0) {
          unint64_t v288 = 0;
        }
      }
      int8x16_t v289 = vandq_s8(v71, v268);
      unint64_t v290 = v287.i64[0] + v269;
      unint64_t v291 = v288 | (v286.i64[1] << v290);
      if ((v290 & 0x3F) + v287.i64[1] >= 0x40)
      {
        *(void *)((char *)v234 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
        unint64_t v291 = (unint64_t)v286.i64[1] >> -(v290 & 0x3F);
        if ((v290 & 0x3F) == 0) {
          unint64_t v291 = 0;
        }
      }
      int8x16_t v292 = vceqq_s8(v66, v80);
      int8x16_t v293 = vaddq_s8(v289, v23);
      unint64_t v294 = v290 + v287.i64[1];
      if (v67)
      {
        v291 |= v68 << v294;
        if ((v294 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v234 + ((v294 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v291;
          unint64_t v291 = v68 >> -(v294 & 0x3F);
        }
        v294 += 8;
      }
      int8x16_t v295 = vandq_s8(v71, v292);
      int16x8_t v296 = (int16x8_t)vmovl_high_u8((uint8x16_t)v237);
      v237.i8[0] = 0;
      v297.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v297.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v298.i64[0] = -1;
      v298.i64[1] = -1;
      uint8x16_t v299 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v298, (uint8x16_t)vaddq_s8(v237, v297)), v293);
      int16x8_t v300 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v237.i8);
      uint16x8_t v301 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v299.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v300)), (int16x8_t)vshlq_u16(vmovl_high_u8(v299), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v296)));
      uint16x8_t v302 = (uint16x8_t)vpaddq_s16(v300, v296);
      int32x4_t v303 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v302.i8);
      int32x4_t v304 = (int32x4_t)vmovl_high_u16(v302);
      int32x4_t v305 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v301.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)), (int32x4_t)vshlq_u32(vmovl_high_u16(v301), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v304)));
      int32x4_t v306 = vpaddq_s32(v303, v304);
      v307.i64[0] = v305.u32[0];
      v307.i64[1] = v305.u32[1];
      uint64x2_t v308 = (uint64x2_t)v307;
      v307.i64[0] = v305.u32[2];
      v307.i64[1] = v305.u32[3];
      uint64x2_t v309 = (uint64x2_t)v307;
      v307.i64[0] = v306.u32[0];
      v307.i64[1] = v306.u32[1];
      int64x2_t v310 = v307;
      v307.i64[0] = v306.u32[2];
      v307.i64[1] = v306.u32[3];
      int64x2_t v311 = vpaddq_s64((int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v310)), (int64x2_t)vshlq_u64(v309, (uint64x2_t)vzip1q_s64((int64x2_t)0, v307)));
      int64x2_t v312 = vpaddq_s64(v310, v307);
      unint64_t v313 = (v311.i64[0] << v294) | v291;
      if (v312.i64[0] + (v294 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v234 + ((v294 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v313;
        unint64_t v313 = (unint64_t)v311.i64[0] >> -(v294 & 0x3F);
        if ((v294 & 0x3F) == 0) {
          unint64_t v313 = 0;
        }
      }
      int8x16_t v314 = vceqq_s8(v66, v81);
      int8x16_t v315 = vaddq_s8(v24, v295);
      unint64_t v316 = v312.i64[0] + v294;
      uint64_t v317 = (v312.i64[0] + v294) & 0x3F;
      unint64_t v318 = v313 | (v311.i64[1] << v316);
      if ((v316 & 0x3F) + v312.i64[1] >= 0x40)
      {
        *(void *)((char *)v234 + ((v316 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v318;
        unint64_t v318 = (unint64_t)v311.i64[1] >> -(char)v317;
        if (!v317) {
          unint64_t v318 = 0;
        }
      }
      int8x16_t v319 = vandq_s8(v71, v314);
      unint64_t v320 = v316 + v312.i64[1];
      v321.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v321.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v322.i64[0] = -1;
      v322.i64[1] = -1;
      uint8x16_t v323 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v322, (uint8x16_t)vaddq_s8(v238, v321)), v315);
      int16x8_t v324 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v238.i8);
      int16x8_t v325 = (int16x8_t)vmovl_high_u8((uint8x16_t)v238);
      uint16x8_t v326 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v323.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v324)), (int16x8_t)vshlq_u16(vmovl_high_u8(v323), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v325)));
      uint16x8_t v327 = (uint16x8_t)vpaddq_s16(v324, v325);
      int32x4_t v328 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v327.i8);
      int32x4_t v329 = (int32x4_t)vmovl_high_u16(v327);
      int32x4_t v330 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v326.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)), (int32x4_t)vshlq_u32(vmovl_high_u16(v326), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)));
      int32x4_t v331 = vpaddq_s32(v328, v329);
      v332.i64[0] = v330.u32[0];
      v332.i64[1] = v330.u32[1];
      uint64x2_t v333 = (uint64x2_t)v332;
      v332.i64[0] = v330.u32[2];
      v332.i64[1] = v330.u32[3];
      uint64x2_t v334 = (uint64x2_t)v332;
      v332.i64[0] = v331.u32[0];
      v332.i64[1] = v331.u32[1];
      int64x2_t v335 = v332;
      v332.i64[0] = v331.u32[2];
      v332.i64[1] = v331.u32[3];
      int64x2_t v336 = vpaddq_s64((int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)), (int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)));
      int64x2_t v337 = vpaddq_s64(v335, v332);
      unint64_t v338 = (v336.i64[0] << v320) | v318;
      if (v337.i64[0] + (v320 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v234 + ((v320 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v338;
        unint64_t v338 = (unint64_t)v336.i64[0] >> -(v320 & 0x3F);
        if ((v320 & 0x3F) == 0) {
          unint64_t v338 = 0;
        }
      }
      int8x16_t v339 = vceqq_s8(v66, v82);
      int8x16_t v340 = vaddq_s8(v25, v319);
      unint64_t v341 = v337.i64[0] + v320;
      unint64_t v342 = v338 | (v336.i64[1] << v341);
      if ((v341 & 0x3F) + v337.i64[1] >= 0x40)
      {
        *(void *)((char *)v234 + ((v341 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
        unint64_t v342 = (unint64_t)v336.i64[1] >> -(v341 & 0x3F);
        if ((v341 & 0x3F) == 0) {
          unint64_t v342 = 0;
        }
      }
      int8x16_t v343 = vandq_s8(v71, v339);
      unint64_t v344 = v341 + v337.i64[1];
      v345.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v345.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v346.i64[0] = -1;
      v346.i64[1] = -1;
      uint8x16_t v347 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v346, (uint8x16_t)vaddq_s8(v239, v345)), v340);
      int16x8_t v348 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v239.i8);
      int16x8_t v349 = (int16x8_t)vmovl_high_u8((uint8x16_t)v239);
      uint16x8_t v350 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v347.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v348)), (int16x8_t)vshlq_u16(vmovl_high_u8(v347), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v349)));
      uint16x8_t v351 = (uint16x8_t)vpaddq_s16(v348, v349);
      int32x4_t v352 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
      int32x4_t v353 = (int32x4_t)vmovl_high_u16(v351);
      int32x4_t v354 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v350.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v352)), (int32x4_t)vshlq_u32(vmovl_high_u16(v350), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v353)));
      int32x4_t v355 = vpaddq_s32(v352, v353);
      v356.i64[0] = v354.u32[0];
      v356.i64[1] = v354.u32[1];
      uint64x2_t v357 = (uint64x2_t)v356;
      v356.i64[0] = v354.u32[2];
      v356.i64[1] = v354.u32[3];
      uint64x2_t v358 = (uint64x2_t)v356;
      v356.i64[0] = v355.u32[0];
      v356.i64[1] = v355.u32[1];
      int64x2_t v359 = v356;
      v356.i64[0] = v355.u32[2];
      v356.i64[1] = v355.u32[3];
      int64x2_t v360 = vpaddq_s64((int64x2_t)vshlq_u64(v357, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)), (int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v356)));
      int64x2_t v361 = vpaddq_s64(v359, v356);
      unint64_t v362 = (v360.i64[0] << v344) | v342;
      if (v361.i64[0] + (v344 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v234 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v362;
        unint64_t v362 = (unint64_t)v360.i64[0] >> -(v344 & 0x3F);
        if ((v344 & 0x3F) == 0) {
          unint64_t v362 = 0;
        }
      }
      int8x16_t v363 = vaddq_s8(v26, v343);
      unint64_t v364 = v361.i64[0] + v344;
      unint64_t v365 = v362 | (v360.i64[1] << v364);
      if ((v364 & 0x3F) + v361.i64[1] >= 0x40)
      {
        *(void *)((char *)v234 + ((v364 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v360.i64[1] >> -(v364 & 0x3F);
        if ((v364 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364 + v361.i64[1];
      v367.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v367.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v368.i64[0] = -1;
      v368.i64[1] = -1;
      uint8x16_t v369 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v368, (uint8x16_t)vaddq_s8(v240, v367)), v363);
      int16x8_t v370 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v240.i8);
      int16x8_t v371 = (int16x8_t)vmovl_high_u8((uint8x16_t)v240);
      uint16x8_t v372 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v369.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v370)), (int16x8_t)vshlq_u16(vmovl_high_u8(v369), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v371)));
      uint16x8_t v373 = (uint16x8_t)vpaddq_s16(v370, v371);
      int32x4_t v374 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v373.i8);
      int32x4_t v375 = (int32x4_t)vmovl_high_u16(v373);
      int32x4_t v376 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v372.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v374)), (int32x4_t)vshlq_u32(vmovl_high_u16(v372), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)));
      int32x4_t v377 = vpaddq_s32(v374, v375);
      v378.i64[0] = v376.u32[0];
      v378.i64[1] = v376.u32[1];
      uint64x2_t v379 = (uint64x2_t)v378;
      v378.i64[0] = v376.u32[2];
      v378.i64[1] = v376.u32[3];
      uint64x2_t v380 = (uint64x2_t)v378;
      v378.i64[0] = v377.u32[0];
      v378.i64[1] = v377.u32[1];
      int64x2_t v381 = v378;
      v378.i64[0] = v377.u32[2];
      v378.i64[1] = v377.u32[3];
      int64x2_t v382 = vpaddq_s64((int64x2_t)vshlq_u64(v379, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)), (int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)));
      int64x2_t v383 = vpaddq_s64(v381, v378);
      unint64_t v384 = (v382.i64[0] << v366) | v365;
      if (v383.i64[0] + (v366 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v234 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
        if ((v366 & 0x3F) != 0) {
          unint64_t v384 = (unint64_t)v382.i64[0] >> -(v366 & 0x3F);
        }
        else {
          unint64_t v384 = 0;
        }
      }
      unint64_t v385 = v383.i64[0] + v366;
      unint64_t v386 = v384 | (v382.i64[1] << v385);
      if ((v385 & 0x3F) + v383.i64[1] >= 0x40)
      {
        *(void *)((char *)v234 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v386;
        unint64_t v386 = (unint64_t)v382.i64[1] >> -(v385 & 0x3F);
        if ((v385 & 0x3F) == 0) {
          unint64_t v386 = 0;
        }
      }
      unint64_t v387 = v385 + v383.i64[1];
      if ((v387 & 0x3F) != 0) {
        *(void *)((char *)v234 + ((v387 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v386;
      }
      unint64_t v162 = (v387 - v235 + 7) >> 3;
      char v161 = *a2 | (v162 - 1);
    }
  }
  else
  {
    a1->i8[0] = a3->i8[0];
    char v161 = 96;
    unint64_t v162 = 1;
  }
  *a2 = v161;
  return v162;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x8_t *a3, char *a4, int a5, int a6, double a7, double a8, int8x8_t a9, int8x8_t a10)
{
  int16x4_t v13 = a3;
  int8x16_t v15 = (int16x4_t *)result;
  if (a5 >= 8) {
    unsigned int v16 = 8;
  }
  else {
    unsigned int v16 = a5;
  }
  if (a6 >= 4) {
    unsigned int v17 = 4;
  }
  else {
    unsigned int v17 = a6;
  }
  if (v16 && v17)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x4_t *)result, a2, v16, v17, a7, a8, a9, a10);
    int16x4_t v13 = (int8x8_t *)((char *)v13 + result);
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v18 = 4 * a2;
  int16x4_t v19 = a4 + 1;
  if (a6 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v16 && v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v19, (int16x4_t *)((char *)v15 + v18), a2, v16, v22, a7, a8, a9, a10);
    int16x4_t v13 = (int8x8_t *)((char *)v13 + result);
  }
  else
  {
    *int16x4_t v19 = 0;
  }
  int8x16_t v23 = a4 + 2;
  if (a5 <= 8) {
    int v24 = 8;
  }
  else {
    int v24 = a5;
  }
  unsigned int v25 = v24 - 8;
  if (v25 >= 8) {
    int v26 = 8;
  }
  else {
    int v26 = v25;
  }
  if (v26 && v17)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v23, v15 + 1, a2, v26, v17, a7, a8, a9, a10);
    int16x4_t v13 = (int8x8_t *)((char *)v13 + result);
    int8x16_t v27 = a4 + 3;
  }
  else
  {
    *int8x16_t v23 = 0;
    int8x16_t v27 = a4 + 3;
    if (!v26) {
      goto LABEL_33;
    }
  }
  if (v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v27, (int16x4_t *)((char *)v15 + v18 + 8), a2, v26, v22, a7, a8, a9, a10);
    int16x4_t v13 = (int8x8_t *)((char *)v13 + result);
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v27 = 0;
LABEL_34:
  int8x16_t v28 = a4 + 4;
  if (a6 <= 8) {
    int v29 = 8;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 8;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v16 && v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v28, &v15[a2], a2, v16, v31, a7, a8, a9, a10);
    int16x4_t v13 = (int8x8_t *)((char *)v13 + result);
  }
  else
  {
    *int8x16_t v28 = 0;
  }
  int8x16_t v32 = a4 + 5;
  if (a6 <= 12) {
    int v33 = 12;
  }
  else {
    int v33 = a6;
  }
  unsigned int v34 = v33 - 12;
  if (v34 >= 4) {
    int v35 = 4;
  }
  else {
    int v35 = v34;
  }
  if (v16 && v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v32, (int16x4_t *)((char *)v15 + 12 * a2), a2, v16, v35, a7, a8, a9, a10);
    int16x4_t v13 = (int8x8_t *)((char *)v13 + result);
    int8x16_t v36 = a4 + 6;
    if (!v26) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v32 = 0;
    int8x16_t v36 = a4 + 6;
    if (!v26) {
      goto LABEL_57;
    }
  }
  if (v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v36, &v15[a2 + 1], a2, v26, v31, a7, a8, a9, a10);
    int16x4_t v13 = (int8x8_t *)((char *)v13 + result);
    int8x16_t v37 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v36 = 0;
  int8x16_t v37 = a4 + 7;
  if (!v26)
  {
LABEL_62:
    *int8x16_t v37 = 0;
    return result;
  }
LABEL_58:
  if (!v35) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v37, (int16x4_t *)((char *)v15 + 12 * a2 + 8), a2, v26, v35, a7, a8, a9, a10);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int32x2_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4 = 8 * (a3 & 7);
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v4 + 12;
  unint64_t v7 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v4;
  if (v4 >= 0x35) {
    v7 |= *(void *)(v5 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v8 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v9 = vdupq_n_s8(((a4 >> 5) | (8 * v7)) & 0xF);
  v10.i64[0] = 0x303030303030303;
  v10.i64[1] = 0x303030303030303;
  int8x16_t v11 = vandq_s8(v9, v10);
  int8x16_t v12 = vbicq_s8(vdupq_n_s8(((v7 >> 1) & 7) + 1), vceqq_s8(v11, v10));
  v10.i64[0] = 0x202020202020202;
  v10.i64[1] = 0x202020202020202;
  int8x16_t v13 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)0x4000400040004)))), v10);
  if (vmaxvq_s8(v13) < 1)
  {
    int v23 = 0;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int8x16_t v25 = v12;
    int8x16_t v26 = v12;
    int8x16_t v27 = v12;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    int8x16_t v29 = v12;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
  }
  else
  {
    int16x8_t v14 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v13, v13));
    int32x4_t v15 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v14, v14));
    unint64_t v16 = vpaddq_s32(v15, v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19 + v6;
    if (v19 <= 0x80 && v8 >= v20)
    {
      int64x2_t v32 = vaddq_s64(vzip1q_s64((int64x2_t)0, v18), vdupq_n_s64(v6 & 0x3C));
      int v33 = (int64x2_t *)(v5 + ((v6 >> 3) & 8));
      int32x4_t v22 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v33, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33->i64[0], 0), (uint64x2_t)vnegq_s64(v32)));
      if (v19 + (v6 & 0x3C) < 0x81)
      {
        int v23 = 0;
      }
      else
      {
        int v23 = 0;
        int32x4_t v22 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v33[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), (int8x16_t)v22);
      }
      unint64_t v6 = v20;
    }
    else
    {
      int32x4_t v22 = 0uLL;
      int v23 = 1;
    }
    int32x2_t v34 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL));
    v35.i64[0] = v34.u32[0];
    v35.i64[1] = v34.u32[1];
    int32x4_t v36 = (int32x4_t)vshlq_u64((uint64x2_t)v22, (uint64x2_t)vnegq_s64(v35));
    *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v22);
    *(int32x2_t *)v36.i8 = vmovn_s64((int64x2_t)v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s32(v22, v36);
    int16x8_t v38 = (int16x8_t)vshlq_u32((uint32x4_t)v37, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL)))));
    *(int16x4_t *)v37.i8 = vmovn_s32((int32x4_t)v37);
    *(int16x4_t *)v38.i8 = vmovn_s32((int32x4_t)v38);
    int16x8_t v39 = vzip1q_s16(v37, v38);
    *(int8x8_t *)v39.i8 = vzip1_s8(vmovn_s16(v39), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v39, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v9.i8))))));
    v37.i64[0] = 0x101010101010101;
    v37.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8((int8x16_t)v37, v13);
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v40.i64[0] = vandq_s8((int8x16_t)v39, vaddq_s8(v40, (int8x16_t)v37)).u64[0];
    int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
    int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 1);
    int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 2);
    int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 3);
    int8x16_t v29 = vsubq_s8(v12, v41);
    int8x16_t v27 = vsubq_s8(v12, v42);
    int8x16_t v26 = vsubq_s8(v12, v43);
    int8x16_t v25 = vsubq_s8(v12, v44);
    int8x16_t v31 = vceqzq_s8(v41);
    int8x16_t v30 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v24 = vceqzq_s8(v44);
  }
  v45.i64[0] = 0x707070707070707;
  v45.i64[1] = 0x707070707070707;
  int32x4_t v46 = 0uLL;
  int8x16_t v47 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v9, v45), (int8x16_t)0, 0xFuLL), v12);
  int16x8_t v48 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v47, v47));
  int32x4_t v49 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v48, v48));
  unint64_t v50 = vpaddq_s32(v49, v49).u64[0];
  v51.i64[0] = v50;
  v51.i64[1] = HIDWORD(v50);
  int64x2_t v52 = v51;
  unint64_t v53 = vaddvq_s64(v51);
  unint64_t v54 = v53 + v6;
  if (v53 <= 0x80 && v8 >= v54)
  {
    unint64_t v56 = v6 & 0x3F;
    int64x2_t v57 = vaddq_s64(vzip1q_s64((int64x2_t)0, v52), vdupq_n_s64(v56));
    int8x16_t v58 = (int64x2_t *)(v5 + 8 * (v6 >> 6));
    int32x4_t v46 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v58, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58->i64[0], 0), (uint64x2_t)vnegq_s64(v57)));
    if (v53 + v56 >= 0x81) {
      int32x4_t v46 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v58[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v57))), (int8x16_t)v46);
    }
    unint64_t v6 = v54;
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v59 = vandq_s8(v29, (int8x16_t)xmmword_242EA7380);
  int v60 = (a4 >> 5) & 3;
  if (v60 != 2)
  {
    unsigned int v64 = 0;
    unsigned int v62 = 0;
    unint64_t v65 = v6;
    goto LABEL_34;
  }
  unint64_t v61 = v6 + 4;
  if (v8 < v6 + 4)
  {
    unsigned int v62 = 0;
    unint64_t v61 = v6;
LABEL_33:
    unsigned int v64 = 0;
    int v23 = 1;
    unint64_t v65 = v61;
    goto LABEL_34;
  }
  uint64_t v66 = *(void *)(v5 + 8 * (v6 >> 6)) >> v6;
  if ((v6 & 0x3F) >= 0x3D) {
    v66 |= *(void *)(v5 + 8 * (v6 >> 6) + 8) << -(v6 & 0x3F);
  }
  unint64_t v65 = v6 + 8;
  unsigned int v62 = (int)(v66 << 28) >> 28;
  if (v8 < v6 + 8) {
    goto LABEL_33;
  }
  uint64_t v63 = *(void *)(v5 + 8 * (v61 >> 6)) >> v61;
  if ((v61 & 0x3F) >= 0x3D) {
    v63 |= *(void *)(v5 + 8 * (v61 >> 6) + 8) << -(v61 & 0x3F);
  }
  unsigned int v64 = (int)(v63 << 28) >> 28;
LABEL_34:
  int8x16_t v67 = vandq_s8(v27, (int8x16_t)xmmword_242EA7390);
  v59.i8[0] = 0;
  int16x8_t v68 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v65;
  int32x4_t v75 = 0uLL;
  if (v73 <= 0x80 && v8 >= v74)
  {
    unint64_t v78 = v65 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v78));
    int8x16_t v80 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v73 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v65 = v74;
  }
  else
  {
    int v23 = 1;
    int32x4_t v77 = 0uLL;
  }
  int8x16_t v81 = vandq_s8(v26, (int8x16_t)xmmword_242EA7390);
  int16x8_t v82 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int32x4_t v83 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v82, v82));
  unint64_t v84 = vpaddq_s32(v83, v83).u64[0];
  v85.i64[0] = v84;
  v85.i64[1] = HIDWORD(v84);
  int64x2_t v86 = v85;
  unint64_t v87 = vaddvq_s64(v85);
  if (v87 < 0x81)
  {
    int32x2_t v88 = vzip1_s32(*(int32x2_t *)v83.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL));
    v89.i64[0] = v88.u32[0];
    v89.i64[1] = v88.u32[1];
    int64x2_t v90 = v89;
    int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v82.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v82, (int8x16_t)v82, 8uLL)));
    int16x8_t v92 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)));
    unint64_t v93 = v87 + v65;
    if (v8 >= v87 + v65)
    {
      unint64_t v94 = v65 & 0x3F;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v86), vdupq_n_s64(v94));
      int8x16_t v96 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v75 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v87 + v94 >= 0x81) {
        int32x4_t v75 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), (int8x16_t)v75);
      }
      unint64_t v65 = v93;
    }
    else
    {
      int v23 = 1;
    }
    int32x4_t v97 = (int32x4_t)vshlq_u64((uint64x2_t)v75, (uint64x2_t)vnegq_s64(v90));
    *(int32x2_t *)v75.i8 = vmovn_s64((int64x2_t)v75);
    *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
    int16x8_t v98 = (int16x8_t)vzip1q_s32(v75, v97);
    int16x8_t v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32(v91));
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    int16x8_t v100 = vzip1q_s16(v98, v99);
    int16x8_t v101 = (int16x8_t)vshlq_u16((uint16x8_t)v100, (uint16x8_t)vnegq_s16(v92));
    *(int8x8_t *)v100.i8 = vmovn_s16(v100);
    *(int8x8_t *)v101.i8 = vmovn_s16(v101);
    int32x4_t v75 = (int32x4_t)vzip1q_s8((int8x16_t)v100, (int8x16_t)v101);
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v102 = vandq_s8(v25, (int8x16_t)xmmword_242EA7390);
  int16x8_t v103 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v81, v81));
  int32x4_t v104 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v103, v103));
  unint64_t v105 = vpaddq_s32(v104, v104).u64[0];
  v106.i64[0] = v105;
  v106.i64[1] = HIDWORD(v105);
  int64x2_t v107 = v106;
  unint64_t v108 = vaddvq_s64(v106);
  if (v108 <= 0x80)
  {
    int32x2_t v110 = vzip1_s32(*(int32x2_t *)v104.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v104, (int8x16_t)v104, 8uLL));
    v111.i64[0] = v110.u32[0];
    v111.i64[1] = v110.u32[1];
    int64x2_t v112 = v111;
    int32x4_t v113 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v103.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v103, (int8x16_t)v103, 8uLL)));
    int16x8_t v114 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
    unint64_t v115 = v108 + v65;
    if (v8 >= v108 + v65)
    {
      unint64_t v117 = v65 & 0x3F;
      int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v107), vdupq_n_s64(v117));
      int8x16_t v119 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
      if (v108 + v117 >= 0x81) {
        int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v116);
      }
      unint64_t v65 = v115;
    }
    else
    {
      int32x4_t v116 = 0uLL;
      int v23 = 1;
    }
    int32x4_t v120 = (int32x4_t)vshlq_u64((uint64x2_t)v116, (uint64x2_t)vnegq_s64(v112));
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v120.i8 = vmovn_s64((int64x2_t)v120);
    int16x8_t v121 = (int16x8_t)vzip1q_s32(v116, v120);
    int16x8_t v122 = (int16x8_t)vshlq_u32((uint32x4_t)v121, (uint32x4_t)vnegq_s32(v113));
    *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v121);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v122);
    int16x8_t v123 = vzip1q_s16(v121, v122);
    int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)v123, (uint16x8_t)vnegq_s16(v114));
    *(int8x8_t *)v123.i8 = vmovn_s16(v123);
    *(int8x8_t *)v124.i8 = vmovn_s16(v124);
    int8x16_t v109 = vzip1q_s8((int8x16_t)v123, (int8x16_t)v124);
  }
  else
  {
    int v23 = 1;
    int8x16_t v109 = 0uLL;
  }
  int16x8_t v125 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v102, v102));
  int32x4_t v126 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v125, v125));
  unint64_t v127 = vpaddq_s32(v126, v126).u64[0];
  v128.i64[0] = v127;
  v128.i64[1] = HIDWORD(v127);
  int64x2_t v129 = v128;
  unint64_t v130 = vaddvq_s64(v128);
  if (v130 > 0x80 || v8 < v130 + v65) {
    goto LABEL_64;
  }
  int64x2_t v131 = vaddq_s64(vzip1q_s64((int64x2_t)0, v129), vdupq_n_s64(v65 & 0x3F));
  int8x16_t v132 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
  int64x2_t v133 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
  if (v130 + (v65 & 0x3F) >= 0x81) {
    int64x2_t v133 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), (int8x16_t)v133);
  }
  if (v23 || (uint64_t v134 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v134) - (v130 + v65) >= 9))
  {
LABEL_64:
    uint64_t v134 = 0;
    v191 |= 255 << (8 * ((&v191 + 7) & 7u));
    a1->i32[0] = 0;
    *(__int32 *)((char *)a1->i32 + a2) = 0;
    *(__int32 *)((char *)a1->i32 + 2 * a2) = 0;
    *(__int32 *)((char *)a1->i32 + 3 * a2) = 0;
  }
  else
  {
    int32x2_t v136 = vzip1_s32(*(int32x2_t *)v49.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL));
    int32x2_t v137 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v138.i64[0] = v136.u32[0];
    v138.i64[1] = v136.u32[1];
    int64x2_t v139 = v138;
    v138.i64[0] = v137.u32[0];
    v138.i64[1] = v137.u32[1];
    int32x4_t v140 = (int32x4_t)vshlq_u64((uint64x2_t)v46, (uint64x2_t)vnegq_s64(v139));
    int32x4_t v141 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v46.i8 = vmovn_s64((int64x2_t)v46);
    *(int32x2_t *)v140.i8 = vmovn_s64((int64x2_t)v140);
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v141);
    int16x8_t v142 = (int16x8_t)vzip1q_s32(v46, v140);
    int16x8_t v143 = (int16x8_t)vzip1q_s32(v77, v141);
    int16x8_t v144 = (int16x8_t)vshlq_u32((uint32x4_t)v142, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v48.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v48, (int8x16_t)v48, 8uLL)))));
    int16x8_t v145 = (int16x8_t)vshlq_u32((uint32x4_t)v143, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v142.i8 = vmovn_s32((int32x4_t)v142);
    *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
    *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
    *(int16x4_t *)v145.i8 = vmovn_s32((int32x4_t)v145);
    int16x8_t v146 = vzip1q_s16(v142, v144);
    int16x8_t v147 = vzip1q_s16(v143, v145);
    int16x8_t v148 = (int16x8_t)vshlq_u16((uint16x8_t)v146, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    int16x8_t v149 = (int16x8_t)vshlq_u16((uint16x8_t)v147, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v146.i8 = vmovn_s16(v146);
    *(int8x8_t *)v148.i8 = vmovn_s16(v148);
    *(int8x8_t *)v147.i8 = vmovn_s16(v147);
    *(int8x8_t *)v149.i8 = vmovn_s16(v149);
    v150.i64[0] = 0x808080808080808;
    v150.i64[1] = 0x808080808080808;
    v151.i64[0] = 0x808080808080808;
    v151.i64[1] = 0x808080808080808;
    unint64_t v152 = v7 >> 4;
    int8x16_t v153 = vzip1q_s8((int8x16_t)v146, (int8x16_t)v148);
    v148.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v148.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v154 = vzip1q_s8((int8x16_t)v147, (int8x16_t)v149);
    v149.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v149.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v155 = vsubq_s8(v151, v67);
    *(int32x2_t *)v143.i8 = vzip1_s32(*(int32x2_t *)v126.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v126, (int8x16_t)v126, 8uLL));
    v156.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v156.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v157.i64[0] = 0x808080808080808;
    v157.i64[1] = 0x808080808080808;
    int32x4_t v158 = (int32x4_t)vaddq_s8(v67, (int8x16_t)v149);
    v138.i64[0] = v143.u32[0];
    v138.i64[1] = v143.u32[1];
    int8x16_t v159 = vshlq_s8(vshlq_s8(v153, vsubq_s8(v150, v47)), vaddq_s8(v47, (int8x16_t)v148));
    int8x16_t v160 = vshlq_s8(vshlq_s8(v154, vsubq_s8(v151, v59)), vaddq_s8(v59, (int8x16_t)v149));
    int8x16_t v161 = vshlq_s8(vshlq_s8((int8x16_t)v75, v155), (int8x16_t)v158);
    int8x16_t v162 = vshlq_s8(vshlq_s8(v109, vsubq_s8(v151, v81)), vaddq_s8(v81, (int8x16_t)v149));
    int32x4_t v163 = (int32x4_t)vshlq_u64((uint64x2_t)v133, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v158.i8 = vmovn_s64(v133);
    *(int32x2_t *)v163.i8 = vmovn_s64((int64x2_t)v163);
    int16x8_t v164 = (int16x8_t)vzip1q_s32(v158, v163);
    int16x8_t v165 = (int16x8_t)vshlq_u32((uint32x4_t)v164, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v125.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125, 8uLL)))));
    *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
    *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
    int16x8_t v166 = vzip1q_s16(v164, v165);
    int16x8_t v167 = (int16x8_t)vshlq_u16((uint16x8_t)v166, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v102.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL)))));
    *(int8x8_t *)v166.i8 = vmovn_s16(v166);
    *(int8x8_t *)v167.i8 = vmovn_s16(v167);
    int8x16_t v168 = vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v166, (int8x16_t)v167), vsubq_s8(v157, v102)), vaddq_s8(v102, v156));
    if (v60 == 2)
    {
      v169.i64[0] = 0xFFFF0000FFFF0000;
      v169.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v170 = vmlaq_s8(vandq_s8(vdupq_n_s8(v64), v169), vdupq_n_s8(v62), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v160 = vaddq_s8(v160, v170);
      int8x16_t v161 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v64), v170), v161);
      int8x16_t v162 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62), v170), v162);
      int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62 + 2 * v64), v170), v168);
    }
    int8x8_t v171 = (int8x8_t)vdupq_n_s8(v152).u64[0];
    int8x16_t v172 = vaddq_s8(vandq_s8(v159, v31), v160);
    int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v159.i8, 0);
    int8x16_t v174 = vsubq_s8(v172, vandq_s8(v173, v31));
    int8x16_t v175 = vsubq_s8(v161, vandq_s8(v173, v30));
    int8x16_t v176 = vsubq_s8(v162, vandq_s8(v173, v28));
    int8x16_t v177 = vsubq_s8(v168, vandq_s8(v173, v24));
    v178.i64[0] = 0x101010101010101;
    v178.i64[1] = 0x101010101010101;
    if (vaddlvq_s8(vceqq_s8(v11, v178)))
    {
      int8x16_t v179 = v174;
      v179.i8[0] = v174.i8[7];
      v179.i8[7] = v174.i8[0];
      int8x16_t v180 = vnegq_s8(vandq_s8(v9, v178));
      int8x16_t v181 = vbslq_s8(v180, v179, v174);
      int8x16_t v182 = vaddq_s8(vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73B0), v180), v181);
      v174.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73C0), v180), v182).u64[0];
      int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA73D0), v180), v175);
      v175.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA73E0), v180), v183).u64[0];
      int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA73F0), v180), v176);
      v176.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA7400), v180), v184).u64[0];
      int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7410), v180), v177);
      v177.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA7420), v180), v185).u64[0];
    }
    int32x2_t v186 = (int32x2_t)vadd_s8(v171, *(int8x8_t *)v174.i8);
    int32x2_t v187 = (int32x2_t)vadd_s8(*(int8x8_t *)v175.i8, v171);
    *a1 = vzip1_s32(v186, v187);
    *(int32x2_t *)((char *)a1 + a2) = vzip2_s32(v186, v187);
    int8x16_t v188 = (int32x2_t *)((char *)a1 + 2 * a2);
    int32x2_t v189 = (int32x2_t)vadd_s8(*(int8x8_t *)v176.i8, v171);
    int32x2_t v190 = (int32x2_t)vadd_s8(*(int8x8_t *)v177.i8, v171);
    int32x2_t *v188 = vzip1_s32(v189, v190);
    *(int32x2_t *)((char *)v188 + a2) = vzip2_s32(v189, v190);
  }
  return v134;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int8x16_t *a1, char *a2, int32x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, double a7, double a8, int8x8_t a9, int8x8_t a10)
{
  int32x2_t v12 = *(int32x2_t *)((char *)a3 + a4);
  *(int32x2_t *)v13.i8 = vzip1_s32(*a3, v12);
  *(int32x2_t *)v14.i8 = vzip2_s32(*a3, v12);
  v13.i64[1] = v13.i64[0];
  v14.i64[1] = v14.i64[0];
  int32x4_t v15 = (int32x2_t *)((char *)a3 + 2 * a4);
  int32x2_t v16 = *(int32x2_t *)((char *)v15 + a4);
  *(int32x2_t *)v17.i8 = vzip1_s32(*v15, v16);
  *(int32x2_t *)v18.i8 = vzip2_s32(*v15, v16);
  v17.i64[1] = v17.i64[0];
  v18.i64[1] = v18.i64[0];
  int8x16_t v19 = vdupq_lane_s8(*(int8x8_t *)v13.i8, 0);
  int8x16_t v20 = vsubq_s8(v13, v19);
  int8x16_t v21 = vsubq_s8(v14, v19);
  int8x16_t v22 = vsubq_s8(v17, v19);
  int8x16_t v23 = vsubq_s8(v18, v19);
  a9.i8[0] = vmaxvq_s8(v20);
  a10.i8[0] = vminvq_s8(v20);
  int8x16_t v24 = vdupq_lane_s8(a9, 0);
  int8x16_t v25 = vdupq_lane_s8(a10, 0);
  v26.i64[0] = 0x8080808080808080;
  v26.i64[1] = 0x8080808080808080;
  int8x16_t v27 = vmaxq_s8(v24, v26);
  v26.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v26.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v28 = vminq_s8(v25, v26);
  int8x16_t v29 = vzip1q_s8(v24, v25);
  int8x16_t v30 = vceqzq_s8(v29);
  int8x16_t v31 = vclsq_s8(v29);
  v32.i64[0] = 0x808080808080808;
  v32.i64[1] = 0x808080808080808;
  int8x16_t v33 = vsubq_s8(v32, v31);
  int8x16_t v34 = vbicq_s8(v33, v30);
  v33.i8[0] = vmaxvq_s8(v21);
  v10.i8[0] = vminvq_s8(v21);
  int8x16_t v35 = vdupq_lane_s8(*(int8x8_t *)v33.i8, 0);
  int8x16_t v36 = vdupq_lane_s8(v10, 0);
  int8x16_t v37 = vpmaxq_s8(v34, v34);
  int8x16_t v38 = vmaxq_s8(v27, v35);
  int8x16_t v39 = vminq_s8(v28, v36);
  int8x16_t v40 = vzip1q_s8(v35, v36);
  int8x16_t v41 = vceqzq_s8(v40);
  int8x16_t v42 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v40)), v41);
  int8x16_t v43 = vpmaxq_s8(v42, v42);
  v41.i8[0] = vmaxvq_s8(v22);
  int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v41.i8, 0);
  v35.i8[0] = vminvq_s8(v22);
  int8x16_t v45 = vdupq_lane_s8(*(int8x8_t *)v35.i8, 0);
  int8x16_t v46 = vmaxq_s8(v38, v44);
  int8x16_t v47 = vminq_s8(v39, v45);
  int8x16_t v48 = vzip1q_s8(v44, v45);
  int8x16_t v49 = vceqzq_s8(v48);
  int8x16_t v50 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v48)), v49);
  int8x16_t v51 = vpmaxq_s8(v50, v50);
  v49.i8[0] = vmaxvq_s8(v23);
  v45.i8[0] = vminvq_s8(v23);
  int8x16_t v52 = vdupq_lane_s8(*(int8x8_t *)v49.i8, 0);
  int8x16_t v53 = vdupq_lane_s8(*(int8x8_t *)v45.i8, 0);
  int8x16_t v54 = vmaxq_s8(v46, v52);
  int8x16_t v55 = vminq_s8(v47, v53);
  int8x16_t v56 = vzip1q_s8(v52, v53);
  int8x16_t v57 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v56)), vceqzq_s8(v56));
  int8x16_t v58 = vpmaxq_s8(v57, v57);
  int8x16_t v59 = vmaxq_s8(vmaxq_s8(v37, v43), vmaxq_s8(v51, v58));
  int8x16_t v60 = vclzq_s8(vsubq_s8(v54, v55));
  int8x16_t v61 = vsubq_s8(v32, v60);
  int8x16_t v62 = vcgtq_s8(v59, v61);
  int8x16_t v63 = vbslq_s8(v62, v61, v59);
  if (vmaxvq_s8(v63))
  {
    char v64 = 0;
    unint64_t v65 = 0;
    v66.i64[0] = -1;
    v66.i64[1] = -1;
    v67.i64[0] = 0x707070707070707;
    v67.i64[1] = 0x707070707070707;
    int8x16_t v68 = vandq_s8(vsubq_s8(vshlq_s8(v66, vsubq_s8(v67, v60)), v55), v62);
    int8x16_t v69 = vandq_s8(v62, v32);
    v70.i64[0] = 0x303030303030303;
    v70.i64[1] = 0x303030303030303;
    int8x16_t v71 = vorrq_s8(vandq_s8(vceqzq_s8(v63), v70), v69);
    int8x16_t v72 = vmaxq_s8(vminq_s8(vsubq_s8(v63, v37), v70), (int8x16_t)0);
    int8x16_t v73 = vmaxq_s8(vminq_s8(vsubq_s8(v63, v43), v70), (int8x16_t)0);
    int8x16_t v74 = vmaxq_s8(vminq_s8(vsubq_s8(v63, v51), v70), (int8x16_t)0);
    int8x16_t v75 = vmaxq_s8(vminq_s8(vsubq_s8(v63, v58), v70), (int8x16_t)0);
    int8x16_t v76 = vsubq_s8(v63, v72);
    int8x16_t v77 = vsubq_s8(v63, v73);
    int8x16_t v78 = vsubq_s8(v63, v74);
    int8x16_t v79 = vsubq_s8(v63, v75);
    int8x16_t v80 = vceqq_s8(vaddq_s8(v75, v74), vnegq_s8(vaddq_s8(v72, v73)));
    v73.i64[0] = 0x404040404040404;
    v73.i64[1] = 0x404040404040404;
    int8x16_t v81 = vorrq_s8(vbicq_s8(v73, v80), v71);
    if (a5 >= 2 && a6 >= 2)
    {
      int8x16_t v387 = v68;
      v82.i32[0] = v13.u8[2];
      v82.i32[1] = v13.u8[1];
      int32x2_t v83 = vshl_n_s32(vsub_s32(v82, vdup_n_s32(v13.u8[0])), 0x1CuLL);
      int v84 = v83.i32[1] >> 28;
      int8x8_t v85 = (int8x8_t)vshl_s32(v83, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v86 = v83.i32[0];
      v87.i64[0] = 0xFFFF0000FFFF0000;
      v87.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v88 = vmlaq_s8(vandq_s8(vdupq_n_s8(v83.i32[0] >> 28), v87), vdupq_n_s8(v83.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v89 = vsubq_s8(v20, v88);
      int8x16_t v90 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v85.i32[0]), v21), v88);
      int8x16_t v91 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v85.i32[1]), v22), v88);
      int8x16_t v92 = vaddq_s8(vdupq_n_s8(-v85.i32[0] - v85.i32[1]), v23);
      int8x16_t v93 = vsubq_s8(v92, v88);
      v92.i8[0] = vmaxvq_s8(v89);
      int8x16_t v383 = v89;
      v85.i8[0] = vminvq_s8(v89);
      int8x16_t v94 = vdupq_lane_s8(*(int8x8_t *)v92.i8, 0);
      int8x16_t v95 = vdupq_lane_s8(v85, 0);
      v89.i64[0] = 0x8080808080808080;
      v89.i64[1] = 0x8080808080808080;
      int8x16_t v96 = vmaxq_s8(v94, v89);
      v89.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v89.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v386 = v21;
      int8x16_t v97 = v79;
      int8x16_t v98 = vminq_s8(v95, v89);
      int8x16_t v99 = vzip1q_s8(v94, v95);
      int8x16_t v100 = vceqzq_s8(v99);
      v101.i64[0] = 0x808080808080808;
      v101.i64[1] = 0x808080808080808;
      int8x16_t v102 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v99)), v100);
      int8x16_t v103 = vpmaxq_s8(v102, v102);
      v100.i8[0] = vmaxvq_s8(v90);
      v66.i8[0] = vminvq_s8(v90);
      int8x16_t v104 = vdupq_lane_s8(*(int8x8_t *)v100.i8, 0);
      int8x16_t v105 = vdupq_lane_s8(*(int8x8_t *)v66.i8, 0);
      int8x16_t v106 = vmaxq_s8(v96, v104);
      int8x16_t v107 = vminq_s8(v98, v105);
      int8x16_t v108 = vzip1q_s8(v104, v105);
      int8x16_t v109 = vceqzq_s8(v108);
      int8x16_t v110 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v108)), v109);
      int8x16_t v111 = vpmaxq_s8(v110, v110);
      v109.i8[0] = vmaxvq_s8(v91);
      v68.i8[0] = vminvq_s8(v91);
      int8x16_t v112 = vdupq_lane_s8(*(int8x8_t *)v109.i8, 0);
      int8x16_t v113 = vdupq_lane_s8(*(int8x8_t *)v68.i8, 0);
      int8x16_t v114 = vmaxq_s8(v106, v112);
      int8x16_t v115 = vminq_s8(v107, v113);
      int8x16_t v116 = vzip1q_s8(v112, v113);
      int8x16_t v117 = vceqzq_s8(v116);
      int8x16_t v118 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v116)), v117);
      int8x16_t v119 = vpmaxq_s8(v118, v118);
      v117.i8[0] = vmaxvq_s8(v93);
      v11.i8[0] = vminvq_s8(v93);
      int8x16_t v120 = vdupq_lane_s8(*(int8x8_t *)v117.i8, 0);
      int8x16_t v121 = vdupq_lane_s8(v11, 0);
      int8x16_t v122 = vminq_s8(v115, v121);
      int8x16_t v123 = vzip1q_s8(v120, v121);
      int8x16_t v124 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v123)), vceqzq_s8(v123));
      int8x16_t v125 = vpmaxq_s8(v124, v124);
      int16x8_t v126 = (int16x8_t)vmaxq_s8(vmaxq_s8(v103, v111), vmaxq_s8(v119, v125));
      int8x16_t v127 = vclzq_s8(vsubq_s8(vmaxq_s8(v114, v120), v122));
      int8x16_t v128 = vsubq_s8(v101, v127);
      int8x16_t v129 = vcgtq_s8((int8x16_t)v126, v128);
      int8x16_t v130 = vbslq_s8(v129, v128, (int8x16_t)v126);
      v101.i64[0] = 0x202020202020202;
      v101.i64[1] = 0x202020202020202;
      v126.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v126.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v131 = v78;
      int8x16_t v132 = vbslq_s8(v129, (int8x16_t)v126, v101);
      v126.i64[0] = 0x101010101010101;
      v126.i64[1] = 0x101010101010101;
      int8x16_t v133 = vmaxq_s8(v130, (int8x16_t)v126);
      v126.i64[0] = 0x303030303030303;
      v126.i64[1] = 0x303030303030303;
      int8x16_t v134 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v103), (int8x16_t)v126), (int8x16_t)0);
      int8x16_t v135 = v23;
      int16x8_t v136 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v133, v111), (int8x16_t)v126), (int8x16_t)0);
      int8x16_t v137 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v119), (int8x16_t)v126), (int8x16_t)0);
      int8x16_t v138 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v125), (int8x16_t)v126), (int8x16_t)0);
      int8x16_t v139 = vsubq_s8(v133, v134);
      int8x16_t v140 = vsubq_s8(v133, (int8x16_t)v136);
      int8x16_t v141 = vsubq_s8(v133, v137);
      int8x16_t v142 = vsubq_s8(v133, v138);
      int8x16_t v143 = vceqq_s8(vaddq_s8(v138, v137), vnegq_s8(vaddq_s8(v134, (int8x16_t)v136)));
      v134.i64[0] = 0x404040404040404;
      v134.i64[1] = 0x404040404040404;
      int8x16_t v144 = vorrq_s8(vbicq_s8(v134, v143), v132);
      v126.i64[0] = 0x8000800080008;
      v126.i64[1] = 0x8000800080008;
      int16x8_t v385 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v131.i8, *(int8x8_t *)v77.i8), *(int8x8_t *)v97.i8), 3uLL);
      v136.i64[0] = 0x2000200020002;
      v136.i64[1] = 0x2000200020002;
      int8x16_t v145 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(v385, *(int8x8_t *)v76.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v63.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v81.i8))), (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v81.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v81.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v136), (int8x16_t)v126)),
                                                  vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v141.i8, *(int8x8_t *)v140.i8), *(int8x8_t *)v142.i8), 3uLL), *(int8x8_t *)v139.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v144.i8, *(int8x8_t *)v144.i8), (int8x8_t)0x808080808080808)), (uint8x8_t)vbic_s8(*(int8x8_t *)v133.i8,
                                                                              (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v144.i8))), v126))), 0);
      v143.i16[0] = vaddlvq_s8(v145);
      unint64_t v65 = v84 & 0xF | HIBYTE(v86);
      int v146 = v143.u16[0];
      if (v143.i16[0])
      {
        v147.i64[0] = 0x707070707070707;
        v147.i64[1] = 0x707070707070707;
        int8x16_t v148 = vsubq_s8(v147, v127);
        v149.i64[0] = -1;
        v149.i64[1] = -1;
        int8x16_t v380 = vbslq_s8(v145, v383, v20);
        int8x16_t v384 = vbslq_s8(v145, v91, v22);
        int8x16_t v23 = vbslq_s8(v145, v93, v135);
        int8x16_t v386 = vbslq_s8(v145, v90, v386);
        int8x16_t v387 = vbslq_s8(v145, vandq_s8(vsubq_s8(vshlq_s8(v149, v148), v122), v129), v387);
        int8x16_t v63 = vbslq_s8(v145, v133, v63);
        int8x16_t v81 = vbslq_s8(v145, v144, v81);
        int8x16_t v378 = vbslq_s8(v145, v139, v76);
        int8x16_t v379 = vbslq_s8(v145, v140, v77);
        int16x8_t v150 = vmull_s8(*(int8x8_t *)v378.i8, (int8x8_t)0x707070707070707);
        int8x16_t v381 = vbslq_s8(v145, v141, v131);
        int8x16_t v382 = vbslq_s8(v145, v142, v97);
        int16x8_t v385 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v381.i8, *(int8x8_t *)v379.i8), *(int8x8_t *)v382.i8), 3uLL);
      }
      else
      {
        int8x16_t v379 = v77;
        int8x16_t v380 = v20;
        int8x16_t v381 = v131;
        int8x16_t v382 = v97;
        int8x16_t v384 = v22;
        int8x16_t v378 = v76;
        int16x8_t v150 = vmull_s8(*(int8x8_t *)v76.i8, (int8x8_t)0x707070707070707);
        int8x16_t v23 = v135;
      }
      v153.i64[0] = 0x808080808080808;
      v153.i64[1] = 0x808080808080808;
      v154.i64[0] = 0x8000800080008;
      v154.i64[1] = 0x8000800080008;
      v155.i64[0] = 0x303030303030303;
      v155.i64[1] = 0x303030303030303;
      v156.i64[0] = 0x202020202020202;
      v156.i64[1] = 0x202020202020202;
      v157.i64[0] = 0x8080808080808080;
      v157.i64[1] = 0x8080808080808080;
      v158.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v158.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v159 = v14;
      v159.i8[7] = v13.i8[7];
      int8x16_t v160 = vsubq_s8(v13, vqtbl1q_s8(v13, (int8x16_t)xmmword_242EA7430));
      int8x16_t v161 = vsubq_s8(v14, vqtbl1q_s8(v159, (int8x16_t)xmmword_242EA7440));
      int8x16_t v162 = v17;
      v162.i8[7] = v13.i8[7];
      int8x16_t v163 = vsubq_s8(v17, vqtbl1q_s8(v162, (int8x16_t)xmmword_242EA7450));
      int8x16_t v164 = v18;
      v164.i8[7] = v13.i8[7];
      int8x16_t v165 = vqtbl1q_s8(v164, (int8x16_t)xmmword_242EA7460);
      int8x16_t v166 = vsubq_s8(v18, v165);
      int8x16_t v167 = v160;
      v167.i8[0] = v160.i8[7];
      v167.i8[7] = v160.i8[0];
      v160.i8[0] = vmaxvq_s8(v167);
      v165.i8[0] = vminvq_s8(v167);
      int8x16_t v168 = vdupq_lane_s8(*(int8x8_t *)v160.i8, 0);
      int8x16_t v169 = vdupq_lane_s8(*(int8x8_t *)v165.i8, 0);
      int8x16_t v170 = vmaxq_s8(v168, v157);
      int8x16_t v171 = vminq_s8(v169, v158);
      int8x16_t v172 = vzip1q_s8(v168, v169);
      int8x16_t v173 = vceqzq_s8(v172);
      int8x16_t v174 = vbicq_s8(vsubq_s8(v153, vclsq_s8(v172)), v173);
      int8x16_t v175 = vpmaxq_s8(v174, v174);
      v173.i8[0] = vmaxvq_s8(v161);
      v145.i8[0] = vminvq_s8(v161);
      int8x16_t v176 = vdupq_lane_s8(*(int8x8_t *)v173.i8, 0);
      int8x16_t v177 = vdupq_lane_s8(*(int8x8_t *)v145.i8, 0);
      int8x16_t v178 = vmaxq_s8(v170, v176);
      int8x16_t v179 = vminq_s8(v171, v177);
      int8x16_t v180 = vzip1q_s8(v176, v177);
      int8x16_t v181 = vbicq_s8(vsubq_s8(v153, vclsq_s8(v180)), vceqzq_s8(v180));
      int8x16_t v182 = vpmaxq_s8(v181, v181);
      v181.i8[0] = vmaxvq_s8(v163);
      v141.i8[0] = vminvq_s8(v163);
      int8x16_t v183 = vdupq_lane_s8(*(int8x8_t *)v181.i8, 0);
      int8x16_t v184 = vdupq_lane_s8(*(int8x8_t *)v141.i8, 0);
      int8x16_t v185 = vmaxq_s8(v178, v183);
      int8x16_t v186 = vminq_s8(v179, v184);
      int8x16_t v187 = vzip1q_s8(v183, v184);
      int8x16_t v188 = vbicq_s8(vsubq_s8(v153, vclsq_s8(v187)), vceqzq_s8(v187));
      int8x16_t v189 = vpmaxq_s8(v188, v188);
      v188.i8[0] = vmaxvq_s8(v166);
      v129.i8[0] = vminvq_s8(v166);
      int8x16_t v190 = vdupq_lane_s8(*(int8x8_t *)v188.i8, 0);
      int8x16_t v191 = vdupq_lane_s8(*(int8x8_t *)v129.i8, 0);
      int8x16_t v192 = vmaxq_s8(v185, v190);
      int8x16_t v193 = vminq_s8(v186, v191);
      int8x16_t v194 = vzip1q_s8(v190, v191);
      int8x16_t v195 = vbicq_s8(vsubq_s8(v153, vclsq_s8(v194)), vceqzq_s8(v194));
      int8x16_t v196 = vpmaxq_s8(v195, v195);
      int8x16_t v197 = vmaxq_s8(vmaxq_s8(v175, v182), vmaxq_s8(v189, v196));
      int8x16_t v198 = vclzq_s8(vsubq_s8(v192, v193));
      int8x16_t v199 = vsubq_s8(v153, v198);
      int8x16_t v200 = vcgtq_s8(v197, v199);
      int8x16_t v201 = vbslq_s8(v200, v199, v197);
      v199.i64[0] = 0x909090909090909;
      v199.i64[1] = 0x909090909090909;
      int8x16_t v202 = vorrq_s8(vandq_s8(vceqzq_s8(v201), v156), vsubq_s8(vandq_s8(v200, v199), vmvnq_s8(v200)));
      int8x16_t v203 = vmaxq_s8(vminq_s8(vsubq_s8(v201, v175), v155), (int8x16_t)0);
      int8x16_t v204 = vmaxq_s8(vminq_s8(vsubq_s8(v201, v182), v155), (int8x16_t)0);
      int8x16_t v205 = vmaxq_s8(vminq_s8(vsubq_s8(v201, v189), v155), (int8x16_t)0);
      int8x16_t v206 = vmaxq_s8(vminq_s8(vsubq_s8(v201, v196), v155), (int8x16_t)0);
      int8x16_t v207 = vsubq_s8(v201, v203);
      int8x16_t v208 = vsubq_s8(v201, v204);
      int8x16_t v209 = vsubq_s8(v201, v205);
      int8x16_t v210 = vsubq_s8(v201, v206);
      v211.i64[0] = 0x404040404040404;
      v211.i64[1] = 0x404040404040404;
      int8x16_t v212 = vorrq_s8(v202, vbicq_s8(v211, vceqq_s8(vaddq_s8(v206, v205), vnegq_s8(vaddq_s8(v203, v204)))));
      v206.i64[0] = 0x3000300030003;
      v206.i64[1] = 0x3000300030003;
      int8x16_t v213 = (int8x16_t)vmovl_s8(*(int8x8_t *)v81.i8);
      v211.i64[0] = 0x2000200020002;
      v211.i64[1] = 0x2000200020002;
      int8x16_t v214 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v63.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v213, v154))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v81.i8, 1uLL), v154)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v213, v206), (int16x8_t)v211), v154), v150)), v385), vaddw_s8(
                                                    (int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v209.i8, *(int8x8_t *)v208.i8), *(int8x8_t *)v210.i8), 3uLL), *(int8x8_t *)v207.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v212.i8, *(int8x8_t *)v212.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v201.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808,
                                                                  *(uint8x8_t *)v212.i8))))),
               0);
      v203.i16[0] = vaddlvq_s8(v214);
      int v215 = v203.u16[0];
      if (v203.i16[0])
      {
        v216.i64[0] = 0x707070707070707;
        v216.i64[1] = 0x707070707070707;
        int8x16_t v217 = vsubq_s8(v216, v198);
        v218.i64[0] = -1;
        v218.i64[1] = -1;
        v19.i8[0] = vbslq_s8(v214, vextq_s8(v13, v13, 0xFuLL), v19).u8[0];
        int8x16_t v20 = vbslq_s8(v214, v167, v380);
        int8x16_t v21 = vbslq_s8(v214, v161, v386);
        int8x16_t v22 = vbslq_s8(v214, v163, v384);
        int8x16_t v23 = vbslq_s8(v214, v166, v23);
        int8x16_t v76 = vbslq_s8(v214, v207, v378);
        int8x16_t v77 = vbslq_s8(v214, v208, v379);
        int8x16_t v78 = vbslq_s8(v214, v209, v381);
        int8x16_t v79 = vbslq_s8(v214, v210, v382);
        int8x16_t v68 = vbslq_s8(v214, vandq_s8(vsubq_s8(vshlq_s8(v218, v217), v193), v200), v387);
        int8x16_t v63 = vbslq_s8(v214, v201, v63);
        int8x16_t v81 = vbslq_s8(v214, v212, v81);
      }
      else
      {
        int8x16_t v79 = v382;
        int8x16_t v22 = v384;
        int8x16_t v21 = v386;
        int8x16_t v68 = v387;
        int8x16_t v20 = v380;
        int8x16_t v78 = v381;
        int8x16_t v76 = v378;
        int8x16_t v77 = v379;
      }
      if (v146) {
        BOOL v219 = v215 == 0;
      }
      else {
        BOOL v219 = 0;
      }
      char v64 = v219;
    }
    int8x16_t v220 = (int8x16_t)vmovl_s8(*(int8x8_t *)v81.i8);
    v221.i64[0] = 0x8000800080008;
    v221.i64[1] = 0x8000800080008;
    v222.i64[0] = 0x3000300030003;
    v222.i64[1] = 0x3000300030003;
    v223.i64[0] = 0x2000200020002;
    v223.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(7 * v76.i8[0]
                                    + 8 * vaddq_s8(v78, vaddq_s8(v77, v79)).i8[0]
                                    + ((2 * v220.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v63.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v220, v221))).u16[0]+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v220, v222), v223), v221).u16[0])+ 19) >= 0x100)
    {
      v13.i64[1] = v14.i64[0];
      v17.i64[1] = v18.i64[0];
      *a1 = v13;
      a1[1] = v17;
      char v151 = 31;
      unint64_t result = 32;
    }
    else
    {
      int8x16_t v224 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v225 = 8 * (a1 & 7);
      if (v225) {
        uint64_t v226 = *v224 & ~(-1 << v225);
      }
      else {
        uint64_t v226 = 0;
      }
      int8x16_t v227 = vextq_s8(v76, (int8x16_t)0, 8uLL);
      int8x16_t v228 = vextq_s8(v77, (int8x16_t)0, 8uLL);
      int8x16_t v229 = vextq_s8(v78, (int8x16_t)0, 8uLL);
      int8x16_t v230 = vextq_s8(v79, (int8x16_t)0, 8uLL);
      if (v63.i8[0]) {
        int v231 = (16 * v63.i8[0] + 112) & 0x70;
      }
      else {
        int v231 = 0;
      }
      *a2 = 32 * v81.i8[0];
      unint64_t v232 = (v81.i8[0] & 8 | v231 & 0xFFFF807F | ((unint64_t)v19.u8[0] << 7)) >> 3;
      unint64_t v233 = (v232 << v225) | v226;
      if (v225 >= 0x34)
      {
        *int8x16_t v224 = v233;
        unint64_t v233 = v232 >> (-8 * (a1 & 7u));
      }
      int8x16_t v234 = vdupq_lane_s8(*(int8x8_t *)v63.i8, 0);
      unint64_t v235 = v225 + 12;
      v236.i64[0] = 0x202020202020202;
      v236.i64[1] = 0x202020202020202;
      int8x16_t v237 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v81.i8), (int8x8_t)0x4000400040004)))), v236);
      v236.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v236.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v238.i64[0] = -1;
      v238.i64[1] = -1;
      uint8x16_t v239 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v238, (uint8x16_t)vorrq_s8(v237, v236)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v234, vzip1q_s8(v227, v228)), (int16x8_t)vsubq_s8(v234, vzip1q_s8(v229, v230))).u32[0]);
      int16x8_t v240 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v237.i8);
      uint16x8_t v241 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v239.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v240)), (int16x8_t)vmovl_high_u8(v239));
      uint16x8_t v242 = (uint16x8_t)vpaddq_s16(v240, (int16x8_t)vmovl_high_u8((uint8x16_t)v237));
      int32x4_t v243 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v242.i8);
      int32x4_t v244 = (int32x4_t)vmovl_high_u16(v242);
      int32x4_t v245 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v241.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v243)), (int32x4_t)vshlq_u32(vmovl_high_u16(v241), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v244)));
      int32x4_t v246 = vpaddq_s32(v243, v244);
      v247.i64[0] = v245.u32[0];
      v247.i64[1] = v245.u32[1];
      uint64x2_t v248 = (uint64x2_t)v247;
      v247.i64[0] = v245.u32[2];
      v247.i64[1] = v245.u32[3];
      uint64x2_t v249 = (uint64x2_t)v247;
      v247.i64[0] = v246.u32[0];
      v247.i64[1] = v246.u32[1];
      int64x2_t v250 = v247;
      v247.i64[0] = v246.u32[2];
      v247.i64[1] = v246.u32[3];
      int64x2_t v251 = vpaddq_s64((int64x2_t)vshlq_u64(v248, (uint64x2_t)vzip1q_s64((int64x2_t)0, v250)), (int64x2_t)vshlq_u64(v249, (uint64x2_t)vzip1q_s64((int64x2_t)0, v247)));
      int64x2_t v252 = vpaddq_s64(v250, v247);
      uint64_t v253 = (v225 + 12) & 0x3C;
      unint64_t v254 = (v251.i64[0] << v253) | v233;
      if ((unint64_t)(v252.i64[0] + v253) >= 0x40)
      {
        *(void *)((char *)v224 + ((v235 >> 3) & 8)) = v254;
        unint64_t v254 = (unint64_t)v251.i64[0] >> -(char)v253;
      }
      unint64_t v255 = v252.i64[0] + v235;
      uint64_t v256 = (v252.i64[0] + v235) & 0x3F;
      unint64_t v257 = v254 | (v251.i64[1] << (v252.i8[0] + v235));
      if ((unint64_t)(v256 + v252.i64[1]) >= 0x40)
      {
        *(void *)((char *)v224 + ((v255 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v257;
        unint64_t v257 = (unint64_t)v251.i64[1] >> -(char)v256;
        if (!v256) {
          unint64_t v257 = 0;
        }
      }
      int8x16_t v258 = vceqq_s8(v63, v76);
      unint64_t v259 = v255 + v252.i64[1];
      v260.i64[0] = 0x808080808080808;
      v260.i64[1] = 0x808080808080808;
      v261.i64[0] = -1;
      v261.i64[1] = -1;
      int8x16_t v262 = vandq_s8(vextq_s8(vtstq_s8(v81, v260), (int8x16_t)0, 0xFuLL), v63);
      v263.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v263.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v264 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v261, (uint8x16_t)vaddq_s8(v262, v263)), v68);
      int16x8_t v265 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v262.i8);
      uint16x8_t v266 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v264.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v265)), (int16x8_t)vmovl_high_u8(v264));
      uint16x8_t v267 = (uint16x8_t)vpaddq_s16(v265, (int16x8_t)vmovl_high_u8((uint8x16_t)v262));
      int32x4_t v268 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v267.i8);
      int32x4_t v269 = (int32x4_t)vmovl_high_u16(v267);
      int32x4_t v270 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v266.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v268)), (int32x4_t)vshlq_u32(vmovl_high_u16(v266), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v269)));
      int32x4_t v271 = vpaddq_s32(v268, v269);
      v272.i64[0] = v270.u32[0];
      v272.i64[1] = v270.u32[1];
      uint64x2_t v273 = (uint64x2_t)v272;
      v272.i64[0] = v270.u32[2];
      v272.i64[1] = v270.u32[3];
      uint64x2_t v274 = (uint64x2_t)v272;
      v272.i64[0] = v271.u32[0];
      v272.i64[1] = v271.u32[1];
      int64x2_t v275 = v272;
      v272.i64[0] = v271.u32[2];
      v272.i64[1] = v271.u32[3];
      int64x2_t v276 = vpaddq_s64((int64x2_t)vshlq_u64(v273, (uint64x2_t)vzip1q_s64((int64x2_t)0, v275)), (int64x2_t)vshlq_u64(v274, (uint64x2_t)vzip1q_s64((int64x2_t)0, v272)));
      int64x2_t v277 = vpaddq_s64(v275, v272);
      unint64_t v278 = (v276.i64[0] << v259) | v257;
      if (v277.i64[0] + (v259 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v224 + ((v259 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v278;
        unint64_t v278 = (unint64_t)v276.i64[0] >> -(v259 & 0x3F);
        if ((v259 & 0x3F) == 0) {
          unint64_t v278 = 0;
        }
      }
      int8x16_t v279 = vandq_s8(v68, v258);
      unint64_t v280 = v277.i64[0] + v259;
      unint64_t v281 = v278 | (v276.i64[1] << v280);
      if ((v280 & 0x3F) + v277.i64[1] >= 0x40)
      {
        *(void *)((char *)v224 + ((v280 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v281;
        unint64_t v281 = (unint64_t)v276.i64[1] >> -(v280 & 0x3F);
        if ((v280 & 0x3F) == 0) {
          unint64_t v281 = 0;
        }
      }
      int8x16_t v282 = vceqq_s8(v63, v77);
      int8x16_t v283 = vaddq_s8(v279, v20);
      unint64_t v284 = v280 + v277.i64[1];
      if (v64)
      {
        v281 |= v65 << v284;
        if ((v284 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v224 + ((v284 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v281;
          unint64_t v281 = v65 >> -(v284 & 0x3F);
        }
        v284 += 8;
      }
      int8x16_t v285 = vandq_s8(v68, v282);
      int16x8_t v286 = (int16x8_t)vmovl_high_u8((uint8x16_t)v227);
      v227.i8[0] = 0;
      v287.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v287.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v288.i64[0] = -1;
      v288.i64[1] = -1;
      uint8x16_t v289 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v288, (uint8x16_t)vaddq_s8(v227, v287)), v283);
      int16x8_t v290 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v227.i8);
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v289.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v290)), (int16x8_t)vshlq_u16(vmovl_high_u8(v289), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v286)));
      uint16x8_t v292 = (uint16x8_t)vpaddq_s16(v290, v286);
      int32x4_t v293 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v292.i8);
      int32x4_t v294 = (int32x4_t)vmovl_high_u16(v292);
      int32x4_t v295 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v291.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)), (int32x4_t)vshlq_u32(vmovl_high_u16(v291), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v294)));
      int32x4_t v296 = vpaddq_s32(v293, v294);
      v297.i64[0] = v295.u32[0];
      v297.i64[1] = v295.u32[1];
      uint64x2_t v298 = (uint64x2_t)v297;
      v297.i64[0] = v295.u32[2];
      v297.i64[1] = v295.u32[3];
      uint64x2_t v299 = (uint64x2_t)v297;
      v297.i64[0] = v296.u32[0];
      v297.i64[1] = v296.u32[1];
      int64x2_t v300 = v297;
      v297.i64[0] = v296.u32[2];
      v297.i64[1] = v296.u32[3];
      int64x2_t v301 = vpaddq_s64((int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v300)), (int64x2_t)vshlq_u64(v299, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)));
      int64x2_t v302 = vpaddq_s64(v300, v297);
      unint64_t v303 = (v301.i64[0] << v284) | v281;
      if (v302.i64[0] + (v284 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v224 + ((v284 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v303;
        unint64_t v303 = (unint64_t)v301.i64[0] >> -(v284 & 0x3F);
        if ((v284 & 0x3F) == 0) {
          unint64_t v303 = 0;
        }
      }
      int8x16_t v304 = vceqq_s8(v63, v78);
      int8x16_t v305 = vaddq_s8(v21, v285);
      unint64_t v306 = v302.i64[0] + v284;
      uint64_t v307 = (v302.i64[0] + v284) & 0x3F;
      unint64_t v308 = v303 | (v301.i64[1] << v306);
      if ((v306 & 0x3F) + v302.i64[1] >= 0x40)
      {
        *(void *)((char *)v224 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v308;
        unint64_t v308 = (unint64_t)v301.i64[1] >> -(char)v307;
        if (!v307) {
          unint64_t v308 = 0;
        }
      }
      int8x16_t v309 = vandq_s8(v68, v304);
      unint64_t v310 = v306 + v302.i64[1];
      v311.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v311.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v312.i64[0] = -1;
      v312.i64[1] = -1;
      uint8x16_t v313 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v312, (uint8x16_t)vaddq_s8(v228, v311)), v305);
      int16x8_t v314 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v228.i8);
      int16x8_t v315 = (int16x8_t)vmovl_high_u8((uint8x16_t)v228);
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v313.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)), (int16x8_t)vshlq_u16(vmovl_high_u8(v313), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v315)));
      uint16x8_t v317 = (uint16x8_t)vpaddq_s16(v314, v315);
      int32x4_t v318 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v317.i8);
      int32x4_t v319 = (int32x4_t)vmovl_high_u16(v317);
      int32x4_t v320 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v319)));
      int32x4_t v321 = vpaddq_s32(v318, v319);
      v322.i64[0] = v320.u32[0];
      v322.i64[1] = v320.u32[1];
      uint64x2_t v323 = (uint64x2_t)v322;
      v322.i64[0] = v320.u32[2];
      v322.i64[1] = v320.u32[3];
      uint64x2_t v324 = (uint64x2_t)v322;
      v322.i64[0] = v321.u32[0];
      v322.i64[1] = v321.u32[1];
      int64x2_t v325 = v322;
      v322.i64[0] = v321.u32[2];
      v322.i64[1] = v321.u32[3];
      int64x2_t v326 = vpaddq_s64((int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)), (int64x2_t)vshlq_u64(v324, (uint64x2_t)vzip1q_s64((int64x2_t)0, v322)));
      int64x2_t v327 = vpaddq_s64(v325, v322);
      unint64_t v328 = (v326.i64[0] << v310) | v308;
      if (v327.i64[0] + (v310 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v224 + ((v310 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v328;
        unint64_t v328 = (unint64_t)v326.i64[0] >> -(v310 & 0x3F);
        if ((v310 & 0x3F) == 0) {
          unint64_t v328 = 0;
        }
      }
      int8x16_t v329 = vceqq_s8(v63, v79);
      int8x16_t v330 = vaddq_s8(v22, v309);
      unint64_t v331 = v327.i64[0] + v310;
      unint64_t v332 = v328 | (v326.i64[1] << v331);
      if ((v331 & 0x3F) + v327.i64[1] >= 0x40)
      {
        *(void *)((char *)v224 + ((v331 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v332;
        unint64_t v332 = (unint64_t)v326.i64[1] >> -(v331 & 0x3F);
        if ((v331 & 0x3F) == 0) {
          unint64_t v332 = 0;
        }
      }
      int8x16_t v333 = vandq_s8(v68, v329);
      unint64_t v334 = v331 + v327.i64[1];
      v335.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v335.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v336.i64[0] = -1;
      v336.i64[1] = -1;
      uint8x16_t v337 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v336, (uint8x16_t)vaddq_s8(v229, v335)), v330);
      int16x8_t v338 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v229.i8);
      int16x8_t v339 = (int16x8_t)vmovl_high_u8((uint8x16_t)v229);
      uint16x8_t v340 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v337.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v338)), (int16x8_t)vshlq_u16(vmovl_high_u8(v337), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v339)));
      uint16x8_t v341 = (uint16x8_t)vpaddq_s16(v338, v339);
      int32x4_t v342 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v341.i8);
      int32x4_t v343 = (int32x4_t)vmovl_high_u16(v341);
      int32x4_t v344 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v340.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)), (int32x4_t)vshlq_u32(vmovl_high_u16(v340), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v343)));
      int32x4_t v345 = vpaddq_s32(v342, v343);
      v346.i64[0] = v344.u32[0];
      v346.i64[1] = v344.u32[1];
      uint64x2_t v347 = (uint64x2_t)v346;
      v346.i64[0] = v344.u32[2];
      v346.i64[1] = v344.u32[3];
      uint64x2_t v348 = (uint64x2_t)v346;
      v346.i64[0] = v345.u32[0];
      v346.i64[1] = v345.u32[1];
      int64x2_t v349 = v346;
      v346.i64[0] = v345.u32[2];
      v346.i64[1] = v345.u32[3];
      int64x2_t v350 = vpaddq_s64((int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)), (int64x2_t)vshlq_u64(v348, (uint64x2_t)vzip1q_s64((int64x2_t)0, v346)));
      int64x2_t v351 = vpaddq_s64(v349, v346);
      unint64_t v352 = (v350.i64[0] << v334) | v332;
      if (v351.i64[0] + (v334 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v224 + ((v334 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        unint64_t v352 = (unint64_t)v350.i64[0] >> -(v334 & 0x3F);
        if ((v334 & 0x3F) == 0) {
          unint64_t v352 = 0;
        }
      }
      int8x16_t v353 = vaddq_s8(v23, v333);
      unint64_t v354 = v351.i64[0] + v334;
      unint64_t v355 = v352 | (v350.i64[1] << v354);
      if ((v354 & 0x3F) + v351.i64[1] >= 0x40)
      {
        *(void *)((char *)v224 + ((v354 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v355;
        unint64_t v355 = (unint64_t)v350.i64[1] >> -(v354 & 0x3F);
        if ((v354 & 0x3F) == 0) {
          unint64_t v355 = 0;
        }
      }
      unint64_t v356 = v354 + v351.i64[1];
      v357.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v357.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v358.i64[0] = -1;
      v358.i64[1] = -1;
      uint8x16_t v359 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v358, (uint8x16_t)vaddq_s8(v230, v357)), v353);
      int16x8_t v360 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v230.i8);
      int16x8_t v361 = (int16x8_t)vmovl_high_u8((uint8x16_t)v230);
      uint16x8_t v362 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v359.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v360)), (int16x8_t)vshlq_u16(vmovl_high_u8(v359), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v361)));
      uint16x8_t v363 = (uint16x8_t)vpaddq_s16(v360, v361);
      int32x4_t v364 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v363.i8);
      int32x4_t v365 = (int32x4_t)vmovl_high_u16(v363);
      int32x4_t v366 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v362.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)), (int32x4_t)vshlq_u32(vmovl_high_u16(v362), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v365)));
      int32x4_t v367 = vpaddq_s32(v364, v365);
      v368.i64[0] = v366.u32[0];
      v368.i64[1] = v366.u32[1];
      uint64x2_t v369 = (uint64x2_t)v368;
      v368.i64[0] = v366.u32[2];
      v368.i64[1] = v366.u32[3];
      uint64x2_t v370 = (uint64x2_t)v368;
      v368.i64[0] = v367.u32[0];
      v368.i64[1] = v367.u32[1];
      int64x2_t v371 = v368;
      v368.i64[0] = v367.u32[2];
      v368.i64[1] = v367.u32[3];
      int64x2_t v372 = vpaddq_s64((int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v371)), (int64x2_t)vshlq_u64(v370, (uint64x2_t)vzip1q_s64((int64x2_t)0, v368)));
      int64x2_t v373 = vpaddq_s64(v371, v368);
      unint64_t v374 = (v372.i64[0] << v356) | v355;
      if (v373.i64[0] + (v356 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v224 + ((v356 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v374;
        if ((v356 & 0x3F) != 0) {
          unint64_t v374 = (unint64_t)v372.i64[0] >> -(v356 & 0x3F);
        }
        else {
          unint64_t v374 = 0;
        }
      }
      unint64_t v375 = v373.i64[0] + v356;
      unint64_t v376 = v374 | (v372.i64[1] << v375);
      if ((v375 & 0x3F) + v373.i64[1] >= 0x40)
      {
        *(void *)((char *)v224 + ((v375 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
        unint64_t v376 = (unint64_t)v372.i64[1] >> -(v375 & 0x3F);
        if ((v375 & 0x3F) == 0) {
          unint64_t v376 = 0;
        }
      }
      unint64_t v377 = v375 + v373.i64[1];
      if ((v377 & 0x3F) != 0) {
        *(void *)((char *)v224 + ((v377 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
      }
      unint64_t result = (v377 - v225 + 7) >> 3;
      char v151 = *a2 | (result - 1);
    }
  }
  else
  {
    a1->i8[0] = a3->i8[0];
    char v151 = 96;
    unint64_t result = 1;
  }
  *a2 = v151;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x16_t *a3, char *a4, int a5, int a6, double a7, double a8, int8x8_t a9, int8x8_t a10)
{
  int8x16_t v13 = a3;
  int32x4_t v15 = (int32x2_t *)result;
  if (a5 >= 4) {
    unsigned int v16 = 4;
  }
  else {
    unsigned int v16 = a5;
  }
  if (a6 >= 4) {
    unsigned int v17 = 4;
  }
  else {
    unsigned int v17 = a6;
  }
  if (v16 && v17)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int32x2_t *)result, a2, v16, v17, a7, a8, a9, a10);
    int8x16_t v13 = (int8x16_t *)((char *)v13 + result);
  }
  else
  {
    *a4 = 0;
  }
  int8x16_t v18 = a4 + 1;
  if (a5 <= 4) {
    int v19 = 4;
  }
  else {
    int v19 = a5;
  }
  unsigned int v20 = v19 - 4;
  if (v20 >= 4) {
    int v21 = 4;
  }
  else {
    int v21 = v20;
  }
  if (v21) {
    BOOL v22 = v17 == 0;
  }
  else {
    BOOL v22 = 1;
  }
  if (v22)
  {
    *int8x16_t v18 = 0;
  }
  else
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v18, v15 + 1, a2, v21, v17, a7, a8, a9, a10);
    int8x16_t v13 = (int8x16_t *)((char *)v13 + result);
  }
  uint64_t v23 = 4 * a2;
  int8x16_t v24 = a4 + 2;
  if (a6 <= 4) {
    int v25 = 4;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 4;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v16 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v24, (int32x2_t *)((char *)v15 + v23), a2, v16, v27, a7, a8, a9, a10);
    int8x16_t v13 = (int8x16_t *)((char *)v13 + result);
    int8x16_t v28 = a4 + 3;
    if (!v21) {
      goto LABEL_36;
    }
  }
  else
  {
    *int8x16_t v24 = 0;
    int8x16_t v28 = a4 + 3;
    if (!v21) {
      goto LABEL_36;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v28, (int32x2_t *)((char *)v15 + v23 + 8), a2, v21, v27, a7, a8, a9, a10);
    int8x16_t v13 = (int8x16_t *)((char *)v13 + result);
    goto LABEL_37;
  }
LABEL_36:
  *int8x16_t v28 = 0;
LABEL_37:
  int8x16_t v29 = a4 + 4;
  if (a5 <= 8) {
    int v30 = 8;
  }
  else {
    int v30 = a5;
  }
  unsigned int v31 = v30 - 8;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v32 && v17)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v29, v15 + 2, a2, v32, v17, a7, a8, a9, a10);
    int8x16_t v13 = (int8x16_t *)((char *)v13 + result);
  }
  else
  {
    *int8x16_t v29 = 0;
  }
  int8x16_t v33 = a4 + 5;
  if (a5 <= 12) {
    int v34 = 12;
  }
  else {
    int v34 = a5;
  }
  unsigned int v35 = v34 - 12;
  if (v35 >= 4) {
    int v36 = 4;
  }
  else {
    int v36 = v35;
  }
  if (v36 && v17)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v33, v15 + 3, a2, v36, v17, a7, a8, a9, a10);
    int8x16_t v13 = (int8x16_t *)((char *)v13 + result);
    int8x16_t v37 = a4 + 6;
    if (!v32) {
      goto LABEL_61;
    }
  }
  else
  {
    char *v33 = 0;
    int8x16_t v37 = a4 + 6;
    if (!v32) {
      goto LABEL_61;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v37, (int32x2_t *)((char *)v15 + v23 + 16), a2, v32, v27, a7, a8, a9, a10);
    int8x16_t v13 = (int8x16_t *)((char *)v13 + result);
    int8x16_t v38 = a4 + 7;
    if (!v36) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *int8x16_t v37 = 0;
  int8x16_t v38 = a4 + 7;
  if (!v36)
  {
LABEL_66:
    *int8x16_t v38 = 0;
    return result;
  }
LABEL_62:
  if (!v27) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v38, (int32x2_t *)((char *)v15 + v23 + 24), a2, v36, v27, a7, a8, a9, a10);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4 = 8 * (a3 & 7);
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v4 + 12;
  unint64_t v7 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v4;
  if (v4 >= 0x35) {
    v7 |= *(void *)(v5 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v8 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v9 = vdupq_n_s8(((a4 >> 5) | (8 * v7)) & 0xF);
  v10.i64[0] = 0x303030303030303;
  v10.i64[1] = 0x303030303030303;
  int8x16_t v11 = vandq_s8(v9, v10);
  int8x16_t v12 = vbicq_s8(vdupq_n_s8(((v7 >> 1) & 7) + 1), vceqq_s8(v11, v10));
  v10.i64[0] = 0x202020202020202;
  v10.i64[1] = 0x202020202020202;
  int8x16_t v13 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)0x4000400040004)))), v10);
  if (vmaxvq_s8(v13) < 1)
  {
    int v23 = 0;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int8x16_t v25 = v12;
    int8x16_t v26 = v12;
    int8x16_t v27 = v12;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    int8x16_t v29 = v12;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
  }
  else
  {
    int16x8_t v14 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v13, v13));
    int32x4_t v15 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v14, v14));
    unint64_t v16 = vpaddq_s32(v15, v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19 + v6;
    if (v19 <= 0x80 && v8 >= v20)
    {
      int64x2_t v32 = vaddq_s64(vzip1q_s64((int64x2_t)0, v18), vdupq_n_s64(v6 & 0x3C));
      int8x16_t v33 = (int64x2_t *)(v5 + ((v6 >> 3) & 8));
      int32x4_t v22 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v33, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33->i64[0], 0), (uint64x2_t)vnegq_s64(v32)));
      if (v19 + (v6 & 0x3C) < 0x81)
      {
        int v23 = 0;
      }
      else
      {
        int v23 = 0;
        int32x4_t v22 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v33[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), (int8x16_t)v22);
      }
      unint64_t v6 = v20;
    }
    else
    {
      int32x4_t v22 = 0uLL;
      int v23 = 1;
    }
    int32x2_t v34 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL));
    v35.i64[0] = v34.u32[0];
    v35.i64[1] = v34.u32[1];
    int32x4_t v36 = (int32x4_t)vshlq_u64((uint64x2_t)v22, (uint64x2_t)vnegq_s64(v35));
    *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v22);
    *(int32x2_t *)v36.i8 = vmovn_s64((int64x2_t)v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s32(v22, v36);
    int16x8_t v38 = (int16x8_t)vshlq_u32((uint32x4_t)v37, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL)))));
    *(int16x4_t *)v37.i8 = vmovn_s32((int32x4_t)v37);
    *(int16x4_t *)v38.i8 = vmovn_s32((int32x4_t)v38);
    int16x8_t v39 = vzip1q_s16(v37, v38);
    *(int8x8_t *)v39.i8 = vzip1_s8(vmovn_s16(v39), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v39, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v9.i8))))));
    v37.i64[0] = 0x101010101010101;
    v37.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8((int8x16_t)v37, v13);
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v40.i64[0] = vandq_s8((int8x16_t)v39, vaddq_s8(v40, (int8x16_t)v37)).u64[0];
    int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
    int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 1);
    int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 2);
    int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 3);
    int8x16_t v29 = vsubq_s8(v12, v41);
    int8x16_t v27 = vsubq_s8(v12, v42);
    int8x16_t v26 = vsubq_s8(v12, v43);
    int8x16_t v25 = vsubq_s8(v12, v44);
    int8x16_t v31 = vceqzq_s8(v41);
    int8x16_t v30 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v24 = vceqzq_s8(v44);
  }
  v45.i64[0] = 0x707070707070707;
  v45.i64[1] = 0x707070707070707;
  int32x4_t v46 = 0uLL;
  int8x16_t v47 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v9, v45), (int8x16_t)0, 0xFuLL), v12);
  int16x8_t v48 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v47, v47));
  int32x4_t v49 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v48, v48));
  unint64_t v50 = vpaddq_s32(v49, v49).u64[0];
  v51.i64[0] = v50;
  v51.i64[1] = HIDWORD(v50);
  int64x2_t v52 = v51;
  unint64_t v53 = vaddvq_s64(v51);
  unint64_t v54 = v53 + v6;
  if (v53 <= 0x80 && v8 >= v54)
  {
    unint64_t v56 = v6 & 0x3F;
    int64x2_t v57 = vaddq_s64(vzip1q_s64((int64x2_t)0, v52), vdupq_n_s64(v56));
    int8x16_t v58 = (int64x2_t *)(v5 + 8 * (v6 >> 6));
    int32x4_t v46 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v58, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58->i64[0], 0), (uint64x2_t)vnegq_s64(v57)));
    if (v53 + v56 >= 0x81) {
      int32x4_t v46 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v58[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v57))), (int8x16_t)v46);
    }
    unint64_t v6 = v54;
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v59 = vandq_s8(v29, (int8x16_t)xmmword_242EA7380);
  int v60 = (a4 >> 5) & 3;
  if (v60 != 2)
  {
    unsigned int v64 = 0;
    unsigned int v62 = 0;
    unint64_t v65 = v6;
    goto LABEL_34;
  }
  unint64_t v61 = v6 + 4;
  if (v8 < v6 + 4)
  {
    unsigned int v62 = 0;
    unint64_t v61 = v6;
LABEL_33:
    unsigned int v64 = 0;
    int v23 = 1;
    unint64_t v65 = v61;
    goto LABEL_34;
  }
  uint64_t v66 = *(void *)(v5 + 8 * (v6 >> 6)) >> v6;
  if ((v6 & 0x3F) >= 0x3D) {
    v66 |= *(void *)(v5 + 8 * (v6 >> 6) + 8) << -(v6 & 0x3F);
  }
  unint64_t v65 = v6 + 8;
  unsigned int v62 = (int)(v66 << 28) >> 28;
  if (v8 < v6 + 8) {
    goto LABEL_33;
  }
  uint64_t v63 = *(void *)(v5 + 8 * (v61 >> 6)) >> v61;
  if ((v61 & 0x3F) >= 0x3D) {
    v63 |= *(void *)(v5 + 8 * (v61 >> 6) + 8) << -(v61 & 0x3F);
  }
  unsigned int v64 = (int)(v63 << 28) >> 28;
LABEL_34:
  int8x16_t v67 = vandq_s8(v27, (int8x16_t)xmmword_242EA7390);
  v59.i8[0] = 0;
  int16x8_t v68 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v65;
  int32x4_t v75 = 0uLL;
  if (v73 <= 0x80 && v8 >= v74)
  {
    unint64_t v78 = v65 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v78));
    int8x16_t v80 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v73 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v65 = v74;
  }
  else
  {
    int v23 = 1;
    int32x4_t v77 = 0uLL;
  }
  int8x16_t v81 = vandq_s8(v26, (int8x16_t)xmmword_242EA7390);
  int16x8_t v82 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int32x4_t v83 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v82, v82));
  unint64_t v84 = vpaddq_s32(v83, v83).u64[0];
  v85.i64[0] = v84;
  v85.i64[1] = HIDWORD(v84);
  int64x2_t v86 = v85;
  unint64_t v87 = vaddvq_s64(v85);
  if (v87 < 0x81)
  {
    int32x2_t v88 = vzip1_s32(*(int32x2_t *)v83.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL));
    v89.i64[0] = v88.u32[0];
    v89.i64[1] = v88.u32[1];
    int64x2_t v90 = v89;
    int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v82.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v82, (int8x16_t)v82, 8uLL)));
    int16x8_t v92 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)));
    unint64_t v93 = v87 + v65;
    if (v8 >= v87 + v65)
    {
      unint64_t v94 = v65 & 0x3F;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v86), vdupq_n_s64(v94));
      int8x16_t v96 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v75 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v87 + v94 >= 0x81) {
        int32x4_t v75 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), (int8x16_t)v75);
      }
      unint64_t v65 = v93;
    }
    else
    {
      int v23 = 1;
    }
    int32x4_t v97 = (int32x4_t)vshlq_u64((uint64x2_t)v75, (uint64x2_t)vnegq_s64(v90));
    *(int32x2_t *)v75.i8 = vmovn_s64((int64x2_t)v75);
    *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
    int16x8_t v98 = (int16x8_t)vzip1q_s32(v75, v97);
    int16x8_t v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32(v91));
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    int16x8_t v100 = vzip1q_s16(v98, v99);
    int16x8_t v101 = (int16x8_t)vshlq_u16((uint16x8_t)v100, (uint16x8_t)vnegq_s16(v92));
    *(int8x8_t *)v100.i8 = vmovn_s16(v100);
    *(int8x8_t *)v101.i8 = vmovn_s16(v101);
    int32x4_t v75 = (int32x4_t)vzip1q_s8((int8x16_t)v100, (int8x16_t)v101);
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v102 = vandq_s8(v25, (int8x16_t)xmmword_242EA7390);
  int16x8_t v103 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v81, v81));
  int32x4_t v104 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v103, v103));
  unint64_t v105 = vpaddq_s32(v104, v104).u64[0];
  v106.i64[0] = v105;
  v106.i64[1] = HIDWORD(v105);
  int64x2_t v107 = v106;
  unint64_t v108 = vaddvq_s64(v106);
  if (v108 <= 0x80)
  {
    int32x2_t v110 = vzip1_s32(*(int32x2_t *)v104.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v104, (int8x16_t)v104, 8uLL));
    v111.i64[0] = v110.u32[0];
    v111.i64[1] = v110.u32[1];
    int64x2_t v112 = v111;
    int32x4_t v113 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v103.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v103, (int8x16_t)v103, 8uLL)));
    int16x8_t v114 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
    unint64_t v115 = v108 + v65;
    if (v8 >= v108 + v65)
    {
      unint64_t v117 = v65 & 0x3F;
      int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v107), vdupq_n_s64(v117));
      int8x16_t v119 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
      if (v108 + v117 >= 0x81) {
        int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v116);
      }
      unint64_t v65 = v115;
    }
    else
    {
      int32x4_t v116 = 0uLL;
      int v23 = 1;
    }
    int32x4_t v120 = (int32x4_t)vshlq_u64((uint64x2_t)v116, (uint64x2_t)vnegq_s64(v112));
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v120.i8 = vmovn_s64((int64x2_t)v120);
    int16x8_t v121 = (int16x8_t)vzip1q_s32(v116, v120);
    int16x8_t v122 = (int16x8_t)vshlq_u32((uint32x4_t)v121, (uint32x4_t)vnegq_s32(v113));
    *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v121);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v122);
    int16x8_t v123 = vzip1q_s16(v121, v122);
    int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)v123, (uint16x8_t)vnegq_s16(v114));
    *(int8x8_t *)v123.i8 = vmovn_s16(v123);
    *(int8x8_t *)v124.i8 = vmovn_s16(v124);
    int8x16_t v109 = vzip1q_s8((int8x16_t)v123, (int8x16_t)v124);
  }
  else
  {
    int v23 = 1;
    int8x16_t v109 = 0uLL;
  }
  int16x8_t v125 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v102, v102));
  int32x4_t v126 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v125, v125));
  unint64_t v127 = vpaddq_s32(v126, v126).u64[0];
  v128.i64[0] = v127;
  v128.i64[1] = HIDWORD(v127);
  int64x2_t v129 = v128;
  unint64_t v130 = vaddvq_s64(v128);
  if (v130 > 0x80 || v8 < v130 + v65) {
    goto LABEL_64;
  }
  int64x2_t v131 = vaddq_s64(vzip1q_s64((int64x2_t)0, v129), vdupq_n_s64(v65 & 0x3F));
  int8x16_t v132 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
  int64x2_t v133 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
  if (v130 + (v65 & 0x3F) >= 0x81) {
    int64x2_t v133 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), (int8x16_t)v133);
  }
  if (v23 || (uint64_t v134 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v134) - (v130 + v65) >= 9))
  {
LABEL_64:
    uint64_t v134 = 0;
    v187 |= 255 << (8 * ((&v187 + 7) & 7u));
    *a1 = 0;
    *(_DWORD *)((char *)a1 + a2) = 0;
  }
  else
  {
    int32x2_t v136 = vzip1_s32(*(int32x2_t *)v49.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL));
    int32x2_t v137 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v138.i64[0] = v136.u32[0];
    v138.i64[1] = v136.u32[1];
    int64x2_t v139 = v138;
    v138.i64[0] = v137.u32[0];
    v138.i64[1] = v137.u32[1];
    int32x4_t v140 = (int32x4_t)vshlq_u64((uint64x2_t)v46, (uint64x2_t)vnegq_s64(v139));
    int32x4_t v141 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v46.i8 = vmovn_s64((int64x2_t)v46);
    *(int32x2_t *)v140.i8 = vmovn_s64((int64x2_t)v140);
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v141);
    int16x8_t v142 = (int16x8_t)vzip1q_s32(v46, v140);
    int16x8_t v143 = (int16x8_t)vzip1q_s32(v77, v141);
    int16x8_t v144 = (int16x8_t)vshlq_u32((uint32x4_t)v142, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v48.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v48, (int8x16_t)v48, 8uLL)))));
    int16x8_t v145 = (int16x8_t)vshlq_u32((uint32x4_t)v143, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v142.i8 = vmovn_s32((int32x4_t)v142);
    *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
    *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
    *(int16x4_t *)v145.i8 = vmovn_s32((int32x4_t)v145);
    int16x8_t v146 = vzip1q_s16(v142, v144);
    int16x8_t v147 = vzip1q_s16(v143, v145);
    int16x8_t v148 = (int16x8_t)vshlq_u16((uint16x8_t)v146, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    int16x8_t v149 = (int16x8_t)vshlq_u16((uint16x8_t)v147, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v146.i8 = vmovn_s16(v146);
    *(int8x8_t *)v148.i8 = vmovn_s16(v148);
    *(int8x8_t *)v147.i8 = vmovn_s16(v147);
    *(int8x8_t *)v149.i8 = vmovn_s16(v149);
    v150.i64[0] = 0x808080808080808;
    v150.i64[1] = 0x808080808080808;
    v151.i64[0] = 0x808080808080808;
    v151.i64[1] = 0x808080808080808;
    unint64_t v152 = v7 >> 4;
    int8x16_t v153 = vzip1q_s8((int8x16_t)v146, (int8x16_t)v148);
    v148.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v148.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v154 = vzip1q_s8((int8x16_t)v147, (int8x16_t)v149);
    v149.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v149.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v155 = vsubq_s8(v151, v67);
    *(int32x2_t *)v143.i8 = vzip1_s32(*(int32x2_t *)v126.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v126, (int8x16_t)v126, 8uLL));
    v156.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v156.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v157.i64[0] = 0x808080808080808;
    v157.i64[1] = 0x808080808080808;
    int32x4_t v158 = (int32x4_t)vaddq_s8(v67, (int8x16_t)v149);
    v138.i64[0] = v143.u32[0];
    v138.i64[1] = v143.u32[1];
    int8x16_t v159 = vshlq_s8(vshlq_s8(v153, vsubq_s8(v150, v47)), vaddq_s8(v47, (int8x16_t)v148));
    int8x16_t v160 = vshlq_s8(vshlq_s8(v154, vsubq_s8(v151, v59)), vaddq_s8(v59, (int8x16_t)v149));
    int8x16_t v161 = vshlq_s8(vshlq_s8((int8x16_t)v75, v155), (int8x16_t)v158);
    int8x16_t v162 = vshlq_s8(vshlq_s8(v109, vsubq_s8(v151, v81)), vaddq_s8(v81, (int8x16_t)v149));
    int32x4_t v163 = (int32x4_t)vshlq_u64((uint64x2_t)v133, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v158.i8 = vmovn_s64(v133);
    *(int32x2_t *)v163.i8 = vmovn_s64((int64x2_t)v163);
    int16x8_t v164 = (int16x8_t)vzip1q_s32(v158, v163);
    int16x8_t v165 = (int16x8_t)vshlq_u32((uint32x4_t)v164, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v125.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125, 8uLL)))));
    *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
    *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
    int16x8_t v166 = vzip1q_s16(v164, v165);
    int16x8_t v167 = (int16x8_t)vshlq_u16((uint16x8_t)v166, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v102.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL)))));
    *(int8x8_t *)v166.i8 = vmovn_s16(v166);
    *(int8x8_t *)v167.i8 = vmovn_s16(v167);
    int8x16_t v168 = vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v166, (int8x16_t)v167), vsubq_s8(v157, v102)), vaddq_s8(v102, v156));
    if (v60 == 2)
    {
      v169.i64[0] = 0xFFFF0000FFFF0000;
      v169.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v170 = vmlaq_s8(vandq_s8(vdupq_n_s8(v64), v169), vdupq_n_s8(v62), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v160 = vaddq_s8(v160, v170);
      int8x16_t v161 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v64), v170), v161);
      int8x16_t v162 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62), v170), v162);
      int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62 + 2 * v64), v170), v168);
    }
    int8x8_t v171 = (int8x8_t)vdupq_n_s8(v152).u64[0];
    int8x16_t v172 = vaddq_s8(vandq_s8(v159, v31), v160);
    int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v159.i8, 0);
    int8x16_t v174 = vsubq_s8(v172, vandq_s8(v173, v31));
    int8x16_t v175 = vsubq_s8(v161, vandq_s8(v173, v30));
    int8x16_t v176 = vsubq_s8(v162, vandq_s8(v173, v28));
    int8x16_t v177 = vsubq_s8(v168, vandq_s8(v173, v24));
    v178.i64[0] = 0x101010101010101;
    v178.i64[1] = 0x101010101010101;
    if (vaddlvq_s8(vceqq_s8(v11, v178)))
    {
      int8x16_t v179 = v174;
      v179.i8[0] = v174.i8[7];
      v179.i8[7] = v174.i8[0];
      int8x16_t v180 = vnegq_s8(vandq_s8(v9, v178));
      int8x16_t v181 = vbslq_s8(v180, v179, v174);
      int8x16_t v182 = vaddq_s8(vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73B0), v180), v181);
      v174.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73C0), v180), v182).u64[0];
      int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA73D0), v180), v175);
      v175.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA73E0), v180), v183).u64[0];
      int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA73F0), v180), v176);
      v176.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA7400), v180), v184).u64[0];
      int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7410), v180), v177);
      v177.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA7420), v180), v185).u64[0];
    }
    *(int8x8_t *)&long long v186 = vadd_s8(v171, *(int8x8_t *)v174.i8);
    *((int8x8_t *)&v186 + 1) = vadd_s8(*(int8x8_t *)v176.i8, v171);
    *(_OWORD *)a1 = v186;
    *(int8x8_t *)&long long v186 = vadd_s8(*(int8x8_t *)v175.i8, v171);
    *((int8x8_t *)&v186 + 1) = vadd_s8(*(int8x8_t *)v177.i8, v171);
    *(_OWORD *)((char *)a1 + a2) = v186;
  }
  return v134;
}

void *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(void *result, uint64_t a2, void *a3, char *a4, int a5, int a6)
{
  char v6 = 0;
  if (a5 >= 4) {
    int v7 = 4;
  }
  else {
    int v7 = a5;
  }
  if (a6 >= 2) {
    int v8 = 2;
  }
  else {
    int v8 = a6;
  }
  if (v7 && v8)
  {
    uint64_t v9 = result[1];
    uint64_t v10 = *(void *)((char *)result + a2);
    uint64_t v11 = *(void *)((char *)result + a2 + 8);
    *a3 = *result;
    a3[1] = v10;
    a3[2] = v9;
    a3[3] = v11;
    a3 += 4;
    char v6 = 31;
  }
  char v12 = 0;
  uint64_t v13 = 2 * a2;
  *a4 = v6;
  if (a6 <= 2) {
    int v14 = 2;
  }
  else {
    int v14 = a6;
  }
  unsigned int v15 = v14 - 2;
  if (v15 >= 2) {
    unsigned int v15 = 2;
  }
  if (v7 && v15)
  {
    uint64_t v16 = *(void *)((char *)result + v13 + 8);
    int64x2_t v17 = (void *)((char *)result + v13 + a2);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    *a3 = *(void *)((char *)result + 2 * a2);
    a3[1] = v18;
    a3[2] = v16;
    a3[3] = v19;
    a3 += 4;
    char v12 = 31;
  }
  char v20 = 0;
  a4[1] = v12;
  if (a5 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v8)
  {
    uint64_t v24 = result[3];
    int8x16_t v25 = (void *)((char *)result + a2 + 16);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    *a3 = result[2];
    a3[1] = v26;
    a3[2] = v24;
    a3[3] = v27;
    a3 += 4;
    char v20 = 31;
  }
  char v28 = 0;
  a4[2] = v20;
  if (v23 && v15)
  {
    int8x16_t v29 = (char *)result + v13;
    uint64_t v30 = *((void *)v29 + 2);
    uint64_t v31 = *((void *)v29 + 3);
    int64x2_t v32 = &v29[a2 + 16];
    uint64_t v33 = *(void *)v32;
    uint64_t v34 = *((void *)v32 + 1);
    *a3 = v30;
    a3[1] = v33;
    a3[2] = v31;
    a3[3] = v34;
    a3 += 4;
    char v28 = 31;
  }
  char v35 = 0;
  a4[3] = v28;
  if (a6 <= 4) {
    int v36 = 4;
  }
  else {
    int v36 = a6;
  }
  unsigned int v37 = v36 - 4;
  if (v37 >= 2) {
    unsigned int v37 = 2;
  }
  if (v7 && v37)
  {
    int16x8_t v38 = (void *)((char *)result + 4 * a2);
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    int8x16_t v41 = (uint64_t *)((char *)v38 + a2);
    uint64_t v42 = *v41;
    uint64_t v43 = v41[1];
    *a3 = v39;
    a3[1] = v42;
    a3[2] = v40;
    a3[3] = v43;
    a3 += 4;
    char v35 = 31;
  }
  char v44 = 0;
  a4[4] = v35;
  if (a6 <= 6) {
    int v45 = 6;
  }
  else {
    int v45 = a6;
  }
  unsigned int v46 = v45 - 6;
  if (v46 >= 2) {
    int v47 = 2;
  }
  else {
    int v47 = v46;
  }
  if (v7 && v47)
  {
    int16x8_t v48 = (void *)((char *)result + 6 * a2);
    uint64_t v49 = *v48;
    uint64_t v50 = v48[1];
    int64x2_t v51 = (uint64_t *)((char *)v48 + a2);
    uint64_t v52 = *v51;
    uint64_t v53 = v51[1];
    *a3 = v49;
    a3[1] = v52;
    a3[2] = v50;
    a3[3] = v53;
    a3 += 4;
    char v44 = 31;
  }
  char v54 = 0;
  a4[5] = v44;
  if (v23 && v37)
  {
    int8x16_t v55 = (char *)result + 4 * a2;
    uint64_t v56 = *((void *)v55 + 2);
    uint64_t v57 = *((void *)v55 + 3);
    int8x16_t v58 = &v55[a2 + 16];
    uint64_t v59 = *(void *)v58;
    uint64_t v60 = *((void *)v58 + 1);
    *a3 = v56;
    a3[1] = v59;
    a3[2] = v57;
    a3[3] = v60;
    a3 += 4;
    char v54 = 31;
  }
  char v61 = 0;
  a4[6] = v54;
  if (v23 && v47)
  {
    unsigned int v62 = (char *)result + 6 * a2;
    uint64_t v63 = *((void *)v62 + 2);
    uint64_t v64 = *((void *)v62 + 3);
    unint64_t v65 = &v62[a2 + 16];
    uint64_t v66 = *(void *)v65;
    uint64_t v67 = *((void *)v65 + 1);
    *a3 = v63;
    a3[1] = v66;
    a3[2] = v64;
    a3[3] = v67;
    char v61 = 31;
  }
  a4[7] = v61;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(int8x16_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned int v6 = *a3;
  if (v6 == 96)
  {
    int8x16_t v8 = vld1q_dup_s8((const char *)a2);
    *a1 = v8;
    a1[2] = v8;
    uint64_t v7 = 1;
  }
  else if (v6 == 31)
  {
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void *)(a2 + 24);
    a1->i64[0] = *(void *)a2;
    a1->i64[1] = v10;
    a1[2].i64[0] = v9;
    a1[2].i64[1] = v11;
    uint64_t v7 = 32;
  }
  else if (*a3)
  {
    uint64_t v7 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(a1, 32, a2, v6);
  }
  else
  {
    uint64_t v7 = 0;
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    a1[2].i64[0] = 0;
    a1[2].i64[1] = 0;
  }
  uint64_t v12 = a2 + v7;
  uint64_t v13 = a1 + 4;
  unsigned int v14 = a3[1];
  if (a3[1])
  {
    if (v14 == 96)
    {
      int8x16_t v19 = vld1q_dup_s8((const char *)v12);
      a1[4] = v19;
      a1[6] = v19;
      uint64_t v18 = 1;
    }
    else if (v14 == 31)
    {
      uint64_t v15 = *(void *)(v12 + 8);
      uint64_t v16 = *(void *)(v12 + 16);
      uint64_t v17 = *(void *)(v12 + 24);
      a1[4].i64[0] = *(void *)v12;
      a1[4].i64[1] = v16;
      a1[6].i64[0] = v15;
      a1[6].i64[1] = v17;
      uint64_t v18 = 32;
    }
    else
    {
      uint64_t v18 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v13, 32, v12, v14);
    }
  }
  else
  {
    uint64_t v18 = 0;
    v13->i64[0] = 0;
    a1[4].i64[1] = 0;
    a1[6].i64[0] = 0;
    a1[6].i64[1] = 0;
  }
  uint64_t v20 = v12 + v18;
  int v21 = a1 + 1;
  unsigned int v22 = a3[2];
  if (a3[2])
  {
    if (v22 == 96)
    {
      int8x16_t v27 = vld1q_dup_s8((const char *)v20);
      a1[1] = v27;
      a1[3] = v27;
      uint64_t v26 = 1;
    }
    else if (v22 == 31)
    {
      uint64_t v23 = *(void *)(v20 + 8);
      uint64_t v24 = *(void *)(v20 + 16);
      uint64_t v25 = *(void *)(v20 + 24);
      a1[1].i64[0] = *(void *)v20;
      a1[1].i64[1] = v24;
      a1[3].i64[0] = v23;
      a1[3].i64[1] = v25;
      uint64_t v26 = 32;
    }
    else
    {
      uint64_t v26 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v21, 32, v20, v22);
    }
  }
  else
  {
    uint64_t v26 = 0;
    v21->i64[0] = 0;
    a1[1].i64[1] = 0;
    a1[3].i64[0] = 0;
    a1[3].i64[1] = 0;
  }
  uint64_t v28 = v20 + v26;
  int8x16_t v29 = a1 + 5;
  unsigned int v30 = a3[3];
  if (a3[3])
  {
    if (v30 == 96)
    {
      int8x16_t v35 = vld1q_dup_s8((const char *)v28);
      a1[5] = v35;
      a1[7] = v35;
      uint64_t v34 = 1;
    }
    else if (v30 == 31)
    {
      uint64_t v31 = *(void *)(v28 + 8);
      uint64_t v32 = *(void *)(v28 + 16);
      uint64_t v33 = *(void *)(v28 + 24);
      a1[5].i64[0] = *(void *)v28;
      a1[5].i64[1] = v32;
      a1[7].i64[0] = v31;
      a1[7].i64[1] = v33;
      uint64_t v34 = 32;
    }
    else
    {
      uint64_t v34 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v29, 32, v28, v30);
    }
  }
  else
  {
    uint64_t v34 = 0;
    v29->i64[0] = 0;
    a1[5].i64[1] = 0;
    a1[7].i64[0] = 0;
    a1[7].i64[1] = 0;
  }
  uint64_t v36 = v28 + v34;
  unsigned int v37 = a1 + 8;
  unsigned int v38 = a3[4];
  if (a3[4])
  {
    if (v38 == 96)
    {
      int8x16_t v43 = vld1q_dup_s8((const char *)v36);
      a1[8] = v43;
      a1[10] = v43;
      uint64_t v42 = 1;
    }
    else if (v38 == 31)
    {
      uint64_t v39 = *(void *)(v36 + 8);
      uint64_t v40 = *(void *)(v36 + 16);
      uint64_t v41 = *(void *)(v36 + 24);
      a1[8].i64[0] = *(void *)v36;
      a1[8].i64[1] = v40;
      a1[10].i64[0] = v39;
      a1[10].i64[1] = v41;
      uint64_t v42 = 32;
    }
    else
    {
      uint64_t v42 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v37, 32, v36, v38);
    }
  }
  else
  {
    uint64_t v42 = 0;
    v37->i64[0] = 0;
    a1[8].i64[1] = 0;
    a1[10].i64[0] = 0;
    a1[10].i64[1] = 0;
  }
  uint64_t v44 = v36 + v42;
  int v45 = a1 + 12;
  unsigned int v46 = a3[5];
  if (a3[5])
  {
    if (v46 == 96)
    {
      int8x16_t v51 = vld1q_dup_s8((const char *)v44);
      a1[12] = v51;
      a1[14] = v51;
      uint64_t v50 = 1;
    }
    else if (v46 == 31)
    {
      uint64_t v47 = *(void *)(v44 + 8);
      uint64_t v48 = *(void *)(v44 + 16);
      uint64_t v49 = *(void *)(v44 + 24);
      a1[12].i64[0] = *(void *)v44;
      a1[12].i64[1] = v48;
      a1[14].i64[0] = v47;
      a1[14].i64[1] = v49;
      uint64_t v50 = 32;
    }
    else
    {
      uint64_t v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v45, 32, v44, v46);
    }
  }
  else
  {
    uint64_t v50 = 0;
    v45->i64[0] = 0;
    a1[12].i64[1] = 0;
    a1[14].i64[0] = 0;
    a1[14].i64[1] = 0;
  }
  uint64_t v52 = v44 + v50;
  unsigned int v53 = a3[6];
  if (a3[6])
  {
    if (v53 == 96)
    {
      int8x16_t v58 = vld1q_dup_s8((const char *)v52);
      a1[9] = v58;
      a1[11] = v58;
      uint64_t result = 1;
    }
    else if (v53 == 31)
    {
      uint64_t v54 = *(void *)(v52 + 8);
      uint64_t v55 = *(void *)(v52 + 16);
      uint64_t v56 = *(void *)(v52 + 24);
      a1[9].i64[0] = *(void *)v52;
      a1[9].i64[1] = v55;
      a1[11].i64[0] = v54;
      a1[11].i64[1] = v56;
      uint64_t result = 32;
    }
    else
    {
      uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)a1[9].i32, 32, v52, v53);
    }
  }
  else
  {
    uint64_t result = 0;
    a1[9].i64[0] = 0;
    a1[9].i64[1] = 0;
    a1[11].i64[0] = 0;
    a1[11].i64[1] = 0;
  }
  unsigned int v59 = a3[7];
  if (a3[7])
  {
    uint64_t v60 = v52 + result;
    if (v59 == 96)
    {
      int8x16_t v64 = vld1q_dup_s8((const char *)v60);
      a1[13] = v64;
      a1[15] = v64;
    }
    else if (v59 == 31)
    {
      uint64_t v61 = *(void *)(v60 + 8);
      uint64_t v62 = *(void *)(v60 + 16);
      uint64_t v63 = *(void *)(v60 + 24);
      a1[13].i64[0] = *(void *)v60;
      a1[13].i64[1] = v62;
      a1[15].i64[0] = v61;
      a1[15].i64[1] = v63;
    }
    else
    {
      return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)a1[13].i32, 32, v60, v59);
    }
  }
  else
  {
    a1[13].i64[0] = 0;
    a1[13].i64[1] = 0;
    a1[15].i64[0] = 0;
    a1[15].i64[1] = 0;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int8x8_t *a1, char *a2, int8x8_t *a3, uint64_t a4, unsigned int a5, double a6, double a7, int8x8_t a8, int8x8_t a9)
{
  int8x8_t v11 = *a3;
  uint64_t v10 = (uint64_t)a3[1];
  *(int8x8_t *)v12.i8 = *a3;
  v12.u64[1] = (unint64_t)*a3;
  v13.i64[0] = v10;
  v13.i64[1] = v10;
  uint64_t v15 = *(uint64_t *)((char *)a3 + a4);
  uint64_t v14 = *(uint64_t *)((char *)&a3[1] + a4);
  v16.i64[0] = v15;
  v16.i64[1] = v15;
  v17.i64[0] = v14;
  v17.i64[1] = v14;
  int8x16_t v18 = vdupq_lane_s8(*a3, 0);
  int8x16_t v19 = vsubq_s8(v12, v18);
  int8x16_t v20 = vsubq_s8(v16, v18);
  int8x16_t v21 = vsubq_s8(v13, v18);
  int8x16_t v22 = vsubq_s8(v17, v18);
  a8.i8[0] = vmaxvq_s8(v19);
  a9.i8[0] = vminvq_s8(v19);
  int8x16_t v23 = vdupq_lane_s8(a8, 0);
  int8x16_t v24 = vdupq_lane_s8(a9, 0);
  v25.i64[0] = 0x8080808080808080;
  v25.i64[1] = 0x8080808080808080;
  int8x16_t v26 = vmaxq_s8(v23, v25);
  v25.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v25.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v27 = vminq_s8(v24, v25);
  int8x16_t v28 = vzip1q_s8(v23, v24);
  int8x16_t v29 = vceqzq_s8(v28);
  int8x16_t v30 = vclsq_s8(v28);
  v31.i64[0] = 0x808080808080808;
  v31.i64[1] = 0x808080808080808;
  int8x16_t v32 = vsubq_s8(v31, v30);
  int8x16_t v33 = vbicq_s8(v32, v29);
  v32.i8[0] = vmaxvq_s8(v20);
  v9.i8[0] = vminvq_s8(v20);
  int8x16_t v34 = vdupq_lane_s8(*(int8x8_t *)v32.i8, 0);
  int8x16_t v35 = vdupq_lane_s8(v9, 0);
  int8x16_t v36 = vpmaxq_s8(v33, v33);
  int8x16_t v37 = vmaxq_s8(v26, v34);
  int8x16_t v38 = vminq_s8(v27, v35);
  int8x16_t v39 = vzip1q_s8(v34, v35);
  int8x16_t v40 = vceqzq_s8(v39);
  int8x16_t v41 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v39)), v40);
  int8x16_t v42 = vpmaxq_s8(v41, v41);
  v40.i8[0] = vmaxvq_s8(v21);
  int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
  v34.i8[0] = vminvq_s8(v21);
  int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v34.i8, 0);
  int8x16_t v45 = vmaxq_s8(v37, v43);
  int8x16_t v46 = vminq_s8(v38, v44);
  int8x16_t v47 = vzip1q_s8(v43, v44);
  int8x16_t v48 = vceqzq_s8(v47);
  int8x16_t v49 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v47)), v48);
  int8x16_t v50 = vpmaxq_s8(v49, v49);
  v48.i8[0] = vmaxvq_s8(v22);
  v44.i8[0] = vminvq_s8(v22);
  int8x16_t v51 = vdupq_lane_s8(*(int8x8_t *)v48.i8, 0);
  int8x16_t v52 = vdupq_lane_s8(*(int8x8_t *)v44.i8, 0);
  int8x16_t v53 = vmaxq_s8(v45, v51);
  int8x16_t v54 = vminq_s8(v46, v52);
  int8x16_t v55 = vzip1q_s8(v51, v52);
  int8x16_t v56 = vbicq_s8(vsubq_s8(v31, vclsq_s8(v55)), vceqzq_s8(v55));
  int8x16_t v57 = vpmaxq_s8(v56, v56);
  int8x16_t v58 = vmaxq_s8(vmaxq_s8(v36, v42), vmaxq_s8(v50, v57));
  int8x16_t v59 = vclzq_s8(vsubq_s8(v53, v54));
  int8x16_t v60 = vsubq_s8(v31, v59);
  int8x16_t v61 = vcgtq_s8(v58, v60);
  int8x16_t v62 = vbslq_s8(v61, v60, v58);
  if (vmaxvq_s8(v62))
  {
    v63.i64[0] = -1;
    v63.i64[1] = -1;
    v64.i64[0] = 0x707070707070707;
    v64.i64[1] = 0x707070707070707;
    int8x16_t v65 = vandq_s8(vsubq_s8(vshlq_s8(v63, vsubq_s8(v64, v59)), v54), v61);
    int8x16_t v66 = vandq_s8(v61, v31);
    v67.i64[0] = 0x303030303030303;
    v67.i64[1] = 0x303030303030303;
    int8x16_t v68 = vorrq_s8(vandq_s8(vceqzq_s8(v62), v67), v66);
    int8x16_t v69 = vmaxq_s8(vminq_s8(vsubq_s8(v62, v36), v67), (int8x16_t)0);
    int8x16_t v70 = vmaxq_s8(vminq_s8(vsubq_s8(v62, v42), v67), (int8x16_t)0);
    int8x16_t v71 = vmaxq_s8(vminq_s8(vsubq_s8(v62, v50), v67), (int8x16_t)0);
    int8x16_t v72 = vmaxq_s8(vminq_s8(vsubq_s8(v62, v57), v67), (int8x16_t)0);
    int8x16_t v73 = vsubq_s8(v62, v69);
    int8x16_t v74 = vsubq_s8(v62, v70);
    int8x16_t v75 = vsubq_s8(v62, v71);
    int8x16_t v76 = vsubq_s8(v62, v72);
    int8x16_t v77 = vceqq_s8(vaddq_s8(v72, v71), vnegq_s8(vaddq_s8(v69, v70)));
    v70.i64[0] = 0x404040404040404;
    v70.i64[1] = 0x404040404040404;
    int8x16_t v78 = vorrq_s8(vbicq_s8(v70, v77), v68);
    if (a5 >= 2)
    {
      int8x16_t v390 = v65;
      v83.i32[0] = v12.u8[2];
      v83.i32[1] = v12.u8[1];
      int32x2_t v84 = vshl_n_s32(vsub_s32(v83, vdup_n_s32(v12.u8[0])), 0x1CuLL);
      int v85 = v84.i32[1] >> 28;
      int8x8_t v86 = (int8x8_t)vshl_s32(v84, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v87 = v84.i32[0];
      v88.i64[0] = 0xFFFF0000FFFF0000;
      v88.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v89 = vmlaq_s8(vandq_s8(vdupq_n_s8(v84.i32[0] >> 28), v88), vdupq_n_s8(v84.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v90 = v74;
      int8x16_t v91 = vsubq_s8(v19, v89);
      int8x16_t v92 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v86.i32[0]), v20), v89);
      int8x16_t v93 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v86.i32[1]), v21), v89);
      int8x16_t v94 = vaddq_s8(vdupq_n_s8(-v86.i32[0] - v86.i32[1]), v22);
      int8x16_t v95 = vsubq_s8(v94, v89);
      v94.i8[0] = vmaxvq_s8(v91);
      v86.i8[0] = vminvq_s8(v91);
      int8x16_t v96 = vdupq_lane_s8(*(int8x8_t *)v94.i8, 0);
      int8x16_t v97 = vdupq_lane_s8(v86, 0);
      v98.i64[0] = 0x8080808080808080;
      v98.i64[1] = 0x8080808080808080;
      int8x16_t v99 = vmaxq_s8(v96, v98);
      v98.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v98.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v100 = vminq_s8(v97, v98);
      int8x16_t v101 = vzip1q_s8(v96, v97);
      int8x16_t v102 = vceqzq_s8(v101);
      v103.i64[0] = 0x808080808080808;
      v103.i64[1] = 0x808080808080808;
      int8x16_t v104 = vbicq_s8(vsubq_s8(v103, vclsq_s8(v101)), v102);
      int8x16_t v105 = vpmaxq_s8(v104, v104);
      v104.i8[0] = vmaxvq_s8(v92);
      v102.i8[0] = vminvq_s8(v92);
      int8x16_t v106 = vdupq_lane_s8(*(int8x8_t *)v104.i8, 0);
      int8x16_t v107 = vdupq_lane_s8(*(int8x8_t *)v102.i8, 0);
      int8x16_t v108 = vmaxq_s8(v99, v106);
      int8x16_t v109 = vminq_s8(v100, v107);
      int8x16_t v110 = vzip1q_s8(v106, v107);
      int8x16_t v111 = vceqzq_s8(v110);
      int8x16_t v112 = vbicq_s8(vsubq_s8(v103, vclsq_s8(v110)), v111);
      int8x16_t v113 = vpmaxq_s8(v112, v112);
      v112.i8[0] = vmaxvq_s8(v93);
      v111.i8[0] = vminvq_s8(v93);
      int8x16_t v114 = vdupq_lane_s8(*(int8x8_t *)v112.i8, 0);
      int8x16_t v115 = vdupq_lane_s8(*(int8x8_t *)v111.i8, 0);
      int8x16_t v116 = vmaxq_s8(v108, v114);
      int8x16_t v117 = vminq_s8(v109, v115);
      int8x16_t v118 = vzip1q_s8(v114, v115);
      int8x16_t v119 = vceqzq_s8(v118);
      int8x16_t v120 = vbicq_s8(vsubq_s8(v103, vclsq_s8(v118)), v119);
      int8x16_t v121 = vpmaxq_s8(v120, v120);
      v120.i8[0] = vmaxvq_s8(v95);
      v119.i8[0] = vminvq_s8(v95);
      int8x16_t v122 = vdupq_lane_s8(*(int8x8_t *)v120.i8, 0);
      int8x16_t v123 = vdupq_lane_s8(*(int8x8_t *)v119.i8, 0);
      int8x16_t v124 = vmaxq_s8(v116, v122);
      int8x16_t v388 = v21;
      int8x16_t v389 = v20;
      int8x16_t v125 = vminq_s8(v117, v123);
      int8x16_t v126 = vzip1q_s8(v122, v123);
      int8x16_t v127 = vbicq_s8(vsubq_s8(v103, vclsq_s8(v126)), vceqzq_s8(v126));
      int8x16_t v128 = vpmaxq_s8(v127, v127);
      int16x8_t v129 = (int16x8_t)vmaxq_s8(vmaxq_s8(v105, v113), vmaxq_s8(v121, v128));
      int8x16_t v130 = vclzq_s8(vsubq_s8(v124, v125));
      int8x16_t v131 = vsubq_s8(v103, v130);
      int8x16_t v132 = vcgtq_s8((int8x16_t)v129, v131);
      int8x16_t v133 = vbslq_s8(v132, v131, (int8x16_t)v129);
      v134.i64[0] = 0x202020202020202;
      v134.i64[1] = 0x202020202020202;
      v129.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v129.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v135 = vbslq_s8(v132, (int8x16_t)v129, v134);
      v129.i64[0] = 0x101010101010101;
      v129.i64[1] = 0x101010101010101;
      int8x16_t v136 = vmaxq_s8(v133, (int8x16_t)v129);
      int8x16_t v137 = vsubq_s8(v136, v105);
      v105.i64[0] = 0x303030303030303;
      v105.i64[1] = 0x303030303030303;
      int8x16_t v138 = v22;
      int8x16_t v139 = vmaxq_s8(vminq_s8(v137, v105), (int8x16_t)0);
      int8x16_t v140 = v75;
      int8x16_t v141 = vmaxq_s8(vminq_s8(vsubq_s8(v136, v113), v105), (int8x16_t)0);
      int8x16_t v142 = vmaxq_s8(vminq_s8(vsubq_s8(v136, v121), v105), (int8x16_t)0);
      int8x16_t v143 = vmaxq_s8(vminq_s8(vsubq_s8(v136, v128), v105), (int8x16_t)0);
      int8x16_t v144 = vsubq_s8(v136, v139);
      int8x16_t v145 = vsubq_s8(v136, v141);
      int8x16_t v146 = vsubq_s8(v136, v142);
      int8x16_t v147 = vsubq_s8(v136, v143);
      int8x16_t v148 = vceqq_s8(vaddq_s8(v143, v142), vnegq_s8(vaddq_s8(v139, v141)));
      v142.i64[0] = 0x404040404040404;
      v142.i64[1] = 0x404040404040404;
      int8x16_t v149 = vorrq_s8(vbicq_s8(v142, v148), v135);
      v129.i64[0] = 0x8000800080008;
      v129.i64[1] = 0x8000800080008;
      int16x8_t v391 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v140.i8, *(int8x8_t *)v90.i8), *(int8x8_t *)v76.i8), 3uLL);
      v150.i64[0] = 0x2000200020002;
      v150.i64[1] = 0x2000200020002;
      int8x16_t v151 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(v391, *(int8x8_t *)v73.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v62.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v78.i8))), (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v78.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v78.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v150), (int8x16_t)v129)),
                                                  vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v146.i8, *(int8x8_t *)v145.i8), *(int8x8_t *)v147.i8), 3uLL), *(int8x8_t *)v144.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v149.i8, *(int8x8_t *)v149.i8), (int8x8_t)0x808080808080808)), (uint8x8_t)vbic_s8(*(int8x8_t *)v136.i8,
                                                                              (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v149.i8))), v129))), 0);
      v148.i16[0] = vaddlvq_s8(v151);
      unint64_t v79 = v85 & 0xF | HIBYTE(v87);
      int v152 = v148.u16[0];
      if (v148.i16[0])
      {
        v153.i64[0] = 0x707070707070707;
        v153.i64[1] = 0x707070707070707;
        int8x16_t v154 = vsubq_s8(v153, v130);
        v155.i64[0] = -1;
        v155.i64[1] = -1;
        int8x16_t v156 = vsubq_s8(vshlq_s8(v155, v154), v125);
        int8x16_t v157 = vbslq_s8(v151, v91, v19);
        int8x16_t v20 = vbslq_s8(v151, v92, v389);
        int8x16_t v22 = vbslq_s8(v151, v95, v138);
        int8x16_t v140 = vbslq_s8(v151, v146, v140);
        int8x16_t v76 = vbslq_s8(v151, v147, v76);
        int8x16_t v65 = vbslq_s8(v151, vandq_s8(v156, v132), v390);
        int8x16_t v62 = vbslq_s8(v151, v136, v62);
        int8x16_t v78 = vbslq_s8(v151, v149, v78);
        int8x16_t v385 = vbslq_s8(v151, v144, v73);
        int16x8_t v158 = vmull_s8(*(int8x8_t *)v385.i8, (int8x8_t)0x707070707070707);
        int8x16_t v386 = vbslq_s8(v151, v145, v90);
        int8x16_t v387 = v157;
        int16x8_t v391 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v140.i8, *(int8x8_t *)v386.i8), *(int8x8_t *)v76.i8), 3uLL);
        int8x16_t v21 = vbslq_s8(v151, v93, v388);
      }
      else
      {
        int8x16_t v386 = v90;
        int8x16_t v387 = v19;
        int8x16_t v385 = v73;
        int16x8_t v158 = vmull_s8(*(int8x8_t *)v73.i8, (int8x8_t)0x707070707070707);
        int8x16_t v22 = v138;
        int8x16_t v21 = v388;
        int8x16_t v20 = v389;
        int8x16_t v65 = v390;
      }
      int8x16_t v75 = v140;
      v159.i64[0] = 0x808080808080808;
      v159.i64[1] = 0x808080808080808;
      v160.i64[0] = 0x8000800080008;
      v160.i64[1] = 0x8000800080008;
      v161.i64[0] = 0x303030303030303;
      v161.i64[1] = 0x303030303030303;
      v162.i64[0] = 0x202020202020202;
      v162.i64[1] = 0x202020202020202;
      v163.i64[0] = 0x8080808080808080;
      v163.i64[1] = 0x8080808080808080;
      v164.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v164.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v165 = v16;
      v165.i8[7] = v12.i8[7];
      int8x16_t v166 = vsubq_s8(v12, vqtbl1q_s8(v12, (int8x16_t)xmmword_242EA7430));
      int8x16_t v167 = vsubq_s8(v16, vqtbl1q_s8(v165, (int8x16_t)xmmword_242EA7440));
      int8x16_t v168 = v13;
      v168.i8[7] = v12.i8[7];
      int8x16_t v169 = vsubq_s8(v13, vqtbl1q_s8(v168, (int8x16_t)xmmword_242EA7450));
      int8x16_t v170 = v17;
      v170.i8[7] = v12.i8[7];
      int8x16_t v171 = vqtbl1q_s8(v170, (int8x16_t)xmmword_242EA7460);
      int8x16_t v172 = vsubq_s8(v17, v171);
      int8x16_t v173 = v166;
      v173.i8[0] = v166.i8[7];
      v173.i8[7] = v166.i8[0];
      v166.i8[0] = vmaxvq_s8(v173);
      v171.i8[0] = vminvq_s8(v173);
      int8x16_t v174 = vdupq_lane_s8(*(int8x8_t *)v166.i8, 0);
      int8x16_t v175 = vdupq_lane_s8(*(int8x8_t *)v171.i8, 0);
      int8x16_t v176 = vmaxq_s8(v174, v163);
      int8x16_t v177 = vminq_s8(v175, v164);
      int8x16_t v178 = vzip1q_s8(v174, v175);
      int8x16_t v179 = vceqzq_s8(v178);
      int8x16_t v180 = vbicq_s8(vsubq_s8(v159, vclsq_s8(v178)), v179);
      int8x16_t v181 = vpmaxq_s8(v180, v180);
      v179.i8[0] = vmaxvq_s8(v167);
      v164.i8[0] = vminvq_s8(v167);
      int8x16_t v182 = vdupq_lane_s8(*(int8x8_t *)v179.i8, 0);
      int8x16_t v183 = vdupq_lane_s8(*(int8x8_t *)v164.i8, 0);
      int8x16_t v184 = vmaxq_s8(v176, v182);
      int8x16_t v185 = vminq_s8(v177, v183);
      int8x16_t v186 = vzip1q_s8(v182, v183);
      int8x16_t v187 = vbicq_s8(vsubq_s8(v159, vclsq_s8(v186)), vceqzq_s8(v186));
      int8x16_t v188 = vpmaxq_s8(v187, v187);
      v187.i8[0] = vmaxvq_s8(v169);
      v146.i8[0] = vminvq_s8(v169);
      int8x16_t v189 = vdupq_lane_s8(*(int8x8_t *)v187.i8, 0);
      int8x16_t v190 = vdupq_lane_s8(*(int8x8_t *)v146.i8, 0);
      int8x16_t v191 = vmaxq_s8(v184, v189);
      int8x16_t v192 = vminq_s8(v185, v190);
      int8x16_t v193 = vzip1q_s8(v189, v190);
      int8x16_t v194 = vbicq_s8(vsubq_s8(v159, vclsq_s8(v193)), vceqzq_s8(v193));
      int8x16_t v195 = vpmaxq_s8(v194, v194);
      v194.i8[0] = vmaxvq_s8(v172);
      v147.i8[0] = vminvq_s8(v172);
      int8x16_t v196 = vdupq_lane_s8(*(int8x8_t *)v194.i8, 0);
      int8x16_t v197 = vdupq_lane_s8(*(int8x8_t *)v147.i8, 0);
      int8x16_t v198 = vmaxq_s8(v191, v196);
      int8x16_t v199 = vminq_s8(v192, v197);
      int8x16_t v200 = vzip1q_s8(v196, v197);
      int8x16_t v201 = vbicq_s8(vsubq_s8(v159, vclsq_s8(v200)), vceqzq_s8(v200));
      int8x16_t v202 = vpmaxq_s8(v201, v201);
      int8x16_t v203 = vmaxq_s8(vmaxq_s8(v181, v188), vmaxq_s8(v195, v202));
      int8x16_t v204 = vclzq_s8(vsubq_s8(v198, v199));
      int8x16_t v205 = vsubq_s8(v159, v204);
      int8x16_t v206 = vcgtq_s8(v203, v205);
      int8x16_t v207 = vbslq_s8(v206, v205, v203);
      v203.i64[0] = 0x909090909090909;
      v203.i64[1] = 0x909090909090909;
      int8x16_t v208 = vorrq_s8(vandq_s8(vceqzq_s8(v207), v162), vsubq_s8(vandq_s8(v206, v203), vmvnq_s8(v206)));
      int8x16_t v209 = vmaxq_s8(vminq_s8(vsubq_s8(v207, v181), v161), (int8x16_t)0);
      int8x16_t v210 = vmaxq_s8(vminq_s8(vsubq_s8(v207, v188), v161), (int8x16_t)0);
      int8x16_t v211 = vmaxq_s8(vminq_s8(vsubq_s8(v207, v195), v161), (int8x16_t)0);
      int8x16_t v212 = vmaxq_s8(vminq_s8(vsubq_s8(v207, v202), v161), (int8x16_t)0);
      int8x16_t v213 = vsubq_s8(v207, v209);
      int8x16_t v214 = vsubq_s8(v207, v210);
      int8x16_t v215 = vsubq_s8(v207, v211);
      int8x16_t v216 = vsubq_s8(v207, v212);
      v217.i64[0] = 0x404040404040404;
      v217.i64[1] = 0x404040404040404;
      int8x16_t v218 = vorrq_s8(v208, vbicq_s8(v217, vceqq_s8(vaddq_s8(v212, v211), vnegq_s8(vaddq_s8(v209, v210)))));
      v210.i64[0] = 0x3000300030003;
      v210.i64[1] = 0x3000300030003;
      int8x16_t v219 = (int8x16_t)vmovl_s8(*(int8x8_t *)v78.i8);
      v217.i64[0] = 0x2000200020002;
      v217.i64[1] = 0x2000200020002;
      int8x16_t v220 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v62.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v219, v160))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v78.i8, 1uLL), v160)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v219, v210), (int16x8_t)v217), v160), v158)), v391), vaddw_s8(
                                                    (int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v215.i8, *(int8x8_t *)v214.i8), *(int8x8_t *)v216.i8), 3uLL), *(int8x8_t *)v213.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v218.i8, *(int8x8_t *)v218.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v207.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808,
                                                                  *(uint8x8_t *)v218.i8))))),
               0);
      v209.i16[0] = vaddlvq_s8(v220);
      int v221 = v209.u16[0];
      if (v209.i16[0])
      {
        v222.i64[0] = 0x707070707070707;
        v222.i64[1] = 0x707070707070707;
        int8x16_t v223 = vsubq_s8(v222, v204);
        v224.i64[0] = -1;
        v224.i64[1] = -1;
        v18.i8[0] = vbslq_s8(v220, vextq_s8(v12, v12, 0xFuLL), v18).u8[0];
        int8x16_t v19 = vbslq_s8(v220, v173, v387);
        int8x16_t v20 = vbslq_s8(v220, v167, v20);
        int8x16_t v21 = vbslq_s8(v220, v169, v21);
        int8x16_t v22 = vbslq_s8(v220, v172, v22);
        int8x16_t v73 = vbslq_s8(v220, v213, v385);
        int8x16_t v74 = vbslq_s8(v220, v214, v386);
        int8x16_t v75 = vbslq_s8(v220, v215, v75);
        int8x16_t v76 = vbslq_s8(v220, v216, v76);
        int8x16_t v65 = vbslq_s8(v220, vandq_s8(vsubq_s8(vshlq_s8(v224, v223), v199), v206), v65);
        int8x16_t v62 = vbslq_s8(v220, v207, v62);
        int8x16_t v78 = vbslq_s8(v220, v218, v78);
      }
      else
      {
        int8x16_t v74 = v386;
        int8x16_t v19 = v387;
        int8x16_t v73 = v385;
      }
      int8x8_t v11 = *a3;
      uint64_t v10 = (uint64_t)a3[1];
      uint64_t v15 = *(uint64_t *)((char *)a3 + a4);
      uint64_t v14 = *(uint64_t *)((char *)&a3[1] + a4);
      if (v152) {
        BOOL v225 = v221 == 0;
      }
      else {
        BOOL v225 = 0;
      }
      char v80 = v225;
    }
    else
    {
      unint64_t v79 = 0;
      char v80 = 0;
    }
    int8x16_t v226 = (int8x16_t)vmovl_s8(*(int8x8_t *)v78.i8);
    v227.i64[0] = 0x8000800080008;
    v227.i64[1] = 0x8000800080008;
    v228.i64[0] = 0x3000300030003;
    v228.i64[1] = 0x3000300030003;
    v229.i64[0] = 0x2000200020002;
    v229.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(7 * v73.i8[0]
                                    + 8 * vaddq_s8(v75, vaddq_s8(v74, v76)).i8[0]
                                    + ((2 * v226.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v62.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v226, v227))).u16[0]+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v226, v228), v229), v227).u16[0])+ 19) >= 0x100)
    {
      *a1 = v11;
      a1[1] = (int8x8_t)v15;
      a1[2] = (int8x8_t)v10;
      char v81 = 31;
      unint64_t v82 = 32;
      a1[3] = (int8x8_t)v14;
    }
    else
    {
      int8x16_t v230 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v231 = 8 * (a1 & 7);
      if (v231) {
        uint64_t v232 = *v230 & ~(-1 << v231);
      }
      else {
        uint64_t v232 = 0;
      }
      int8x16_t v233 = vextq_s8(v73, (int8x16_t)0, 8uLL);
      int8x16_t v234 = vextq_s8(v74, (int8x16_t)0, 8uLL);
      int8x16_t v235 = vextq_s8(v75, (int8x16_t)0, 8uLL);
      int8x16_t v236 = vextq_s8(v76, (int8x16_t)0, 8uLL);
      if (v62.i8[0]) {
        int v237 = (16 * v62.i8[0] + 112) & 0x70;
      }
      else {
        int v237 = 0;
      }
      *a2 = 32 * v78.i8[0];
      unint64_t v238 = (v78.i8[0] & 8 | v237 & 0xFFFF807F | ((unint64_t)v18.u8[0] << 7)) >> 3;
      unint64_t v239 = (v238 << v231) | v232;
      if (v231 >= 0x34)
      {
        *int8x16_t v230 = v239;
        unint64_t v239 = v238 >> (-8 * (a1 & 7u));
      }
      int8x16_t v240 = vdupq_lane_s8(*(int8x8_t *)v62.i8, 0);
      unint64_t v241 = v231 + 12;
      v242.i64[0] = 0x202020202020202;
      v242.i64[1] = 0x202020202020202;
      int8x16_t v243 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v78.i8), (int8x8_t)0x4000400040004)))), v242);
      v242.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v242.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v244.i64[0] = -1;
      v244.i64[1] = -1;
      uint8x16_t v245 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v244, (uint8x16_t)vorrq_s8(v243, v242)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v240, vzip1q_s8(v233, v234)), (int16x8_t)vsubq_s8(v240, vzip1q_s8(v235, v236))).u32[0]);
      int16x8_t v246 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v243.i8);
      uint16x8_t v247 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v245.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v246)), (int16x8_t)vmovl_high_u8(v245));
      uint16x8_t v248 = (uint16x8_t)vpaddq_s16(v246, (int16x8_t)vmovl_high_u8((uint8x16_t)v243));
      int32x4_t v249 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v248.i8);
      int32x4_t v250 = (int32x4_t)vmovl_high_u16(v248);
      int32x4_t v251 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v247.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v249)), (int32x4_t)vshlq_u32(vmovl_high_u16(v247), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v250)));
      int32x4_t v252 = vpaddq_s32(v249, v250);
      v253.i64[0] = v251.u32[0];
      v253.i64[1] = v251.u32[1];
      uint64x2_t v254 = (uint64x2_t)v253;
      v253.i64[0] = v251.u32[2];
      v253.i64[1] = v251.u32[3];
      uint64x2_t v255 = (uint64x2_t)v253;
      v253.i64[0] = v252.u32[0];
      v253.i64[1] = v252.u32[1];
      int64x2_t v256 = v253;
      v253.i64[0] = v252.u32[2];
      v253.i64[1] = v252.u32[3];
      int64x2_t v257 = vpaddq_s64((int64x2_t)vshlq_u64(v254, (uint64x2_t)vzip1q_s64((int64x2_t)0, v256)), (int64x2_t)vshlq_u64(v255, (uint64x2_t)vzip1q_s64((int64x2_t)0, v253)));
      int64x2_t v258 = vpaddq_s64(v256, v253);
      uint64_t v259 = (v231 + 12) & 0x3C;
      unint64_t v260 = (v257.i64[0] << v259) | v239;
      if ((unint64_t)(v258.i64[0] + v259) >= 0x40)
      {
        *(void *)((char *)v230 + ((v241 >> 3) & 8)) = v260;
        unint64_t v260 = (unint64_t)v257.i64[0] >> -(char)v259;
      }
      unint64_t v261 = v258.i64[0] + v241;
      uint64_t v262 = (v258.i64[0] + v241) & 0x3F;
      unint64_t v263 = v260 | (v257.i64[1] << (v258.i8[0] + v241));
      if ((unint64_t)(v262 + v258.i64[1]) >= 0x40)
      {
        *(void *)((char *)v230 + ((v261 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v263;
        unint64_t v263 = (unint64_t)v257.i64[1] >> -(char)v262;
        if (!v262) {
          unint64_t v263 = 0;
        }
      }
      int8x16_t v264 = vceqq_s8(v62, v73);
      unint64_t v265 = v261 + v258.i64[1];
      v266.i64[0] = 0x808080808080808;
      v266.i64[1] = 0x808080808080808;
      v267.i64[0] = -1;
      v267.i64[1] = -1;
      int8x16_t v268 = vandq_s8(vextq_s8(vtstq_s8(v78, v266), (int8x16_t)0, 0xFuLL), v62);
      v269.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v269.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v270 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v267, (uint8x16_t)vaddq_s8(v268, v269)), v65);
      int16x8_t v271 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v268.i8);
      uint16x8_t v272 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v270.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v271)), (int16x8_t)vmovl_high_u8(v270));
      uint16x8_t v273 = (uint16x8_t)vpaddq_s16(v271, (int16x8_t)vmovl_high_u8((uint8x16_t)v268));
      int32x4_t v274 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v273.i8);
      int32x4_t v275 = (int32x4_t)vmovl_high_u16(v273);
      int32x4_t v276 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v272.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v274)), (int32x4_t)vshlq_u32(vmovl_high_u16(v272), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v275)));
      int32x4_t v277 = vpaddq_s32(v274, v275);
      v278.i64[0] = v276.u32[0];
      v278.i64[1] = v276.u32[1];
      uint64x2_t v279 = (uint64x2_t)v278;
      v278.i64[0] = v276.u32[2];
      v278.i64[1] = v276.u32[3];
      uint64x2_t v280 = (uint64x2_t)v278;
      v278.i64[0] = v277.u32[0];
      v278.i64[1] = v277.u32[1];
      int64x2_t v281 = v278;
      v278.i64[0] = v277.u32[2];
      v278.i64[1] = v277.u32[3];
      int64x2_t v282 = vpaddq_s64((int64x2_t)vshlq_u64(v279, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)), (int64x2_t)vshlq_u64(v280, (uint64x2_t)vzip1q_s64((int64x2_t)0, v278)));
      int64x2_t v283 = vpaddq_s64(v281, v278);
      unint64_t v284 = (v282.i64[0] << v265) | v263;
      if (v283.i64[0] + (v265 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v230 + ((v265 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v284;
        unint64_t v284 = (unint64_t)v282.i64[0] >> -(v265 & 0x3F);
        if ((v265 & 0x3F) == 0) {
          unint64_t v284 = 0;
        }
      }
      int8x16_t v285 = vandq_s8(v65, v264);
      unint64_t v286 = v283.i64[0] + v265;
      unint64_t v287 = v284 | (v282.i64[1] << v286);
      if ((v286 & 0x3F) + v283.i64[1] >= 0x40)
      {
        *(void *)((char *)v230 + ((v286 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
        unint64_t v287 = (unint64_t)v282.i64[1] >> -(v286 & 0x3F);
        if ((v286 & 0x3F) == 0) {
          unint64_t v287 = 0;
        }
      }
      int8x16_t v288 = vceqq_s8(v62, v74);
      int8x16_t v289 = vaddq_s8(v285, v19);
      unint64_t v290 = v286 + v283.i64[1];
      if (v80)
      {
        v287 |= v79 << v290;
        if ((v290 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v230 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
          unint64_t v287 = v79 >> -(v290 & 0x3F);
        }
        v290 += 8;
      }
      int8x16_t v291 = vandq_s8(v65, v288);
      int16x8_t v292 = (int16x8_t)vmovl_high_u8((uint8x16_t)v233);
      v233.i8[0] = 0;
      v293.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v293.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v294.i64[0] = -1;
      v294.i64[1] = -1;
      uint8x16_t v295 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v294, (uint8x16_t)vaddq_s8(v233, v293)), v289);
      int16x8_t v296 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v233.i8);
      uint16x8_t v297 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v295.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v296)), (int16x8_t)vshlq_u16(vmovl_high_u8(v295), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v292)));
      uint16x8_t v298 = (uint16x8_t)vpaddq_s16(v296, v292);
      int32x4_t v299 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v298.i8);
      int32x4_t v300 = (int32x4_t)vmovl_high_u16(v298);
      int32x4_t v301 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v297.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v299)), (int32x4_t)vshlq_u32(vmovl_high_u16(v297), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v300)));
      int32x4_t v302 = vpaddq_s32(v299, v300);
      v303.i64[0] = v301.u32[0];
      v303.i64[1] = v301.u32[1];
      uint64x2_t v304 = (uint64x2_t)v303;
      v303.i64[0] = v301.u32[2];
      v303.i64[1] = v301.u32[3];
      uint64x2_t v305 = (uint64x2_t)v303;
      v303.i64[0] = v302.u32[0];
      v303.i64[1] = v302.u32[1];
      int64x2_t v306 = v303;
      v303.i64[0] = v302.u32[2];
      v303.i64[1] = v302.u32[3];
      int64x2_t v307 = vpaddq_s64((int64x2_t)vshlq_u64(v304, (uint64x2_t)vzip1q_s64((int64x2_t)0, v306)), (int64x2_t)vshlq_u64(v305, (uint64x2_t)vzip1q_s64((int64x2_t)0, v303)));
      int64x2_t v308 = vpaddq_s64(v306, v303);
      unint64_t v309 = (v307.i64[0] << v290) | v287;
      if (v308.i64[0] + (v290 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v230 + ((v290 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v309;
        unint64_t v309 = (unint64_t)v307.i64[0] >> -(v290 & 0x3F);
        if ((v290 & 0x3F) == 0) {
          unint64_t v309 = 0;
        }
      }
      int8x16_t v310 = vceqq_s8(v62, v75);
      int8x16_t v311 = vaddq_s8(v20, v291);
      unint64_t v312 = v308.i64[0] + v290;
      uint64_t v313 = (v308.i64[0] + v290) & 0x3F;
      unint64_t v314 = v309 | (v307.i64[1] << v312);
      if ((v312 & 0x3F) + v308.i64[1] >= 0x40)
      {
        *(void *)((char *)v230 + ((v312 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v314;
        unint64_t v314 = (unint64_t)v307.i64[1] >> -(char)v313;
        if (!v313) {
          unint64_t v314 = 0;
        }
      }
      int8x16_t v315 = vandq_s8(v65, v310);
      unint64_t v316 = v312 + v308.i64[1];
      v317.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v317.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v318.i64[0] = -1;
      v318.i64[1] = -1;
      uint8x16_t v319 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v318, (uint8x16_t)vaddq_s8(v234, v317)), v311);
      int16x8_t v320 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v234.i8);
      int16x8_t v321 = (int16x8_t)vmovl_high_u8((uint8x16_t)v234);
      uint16x8_t v322 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v319.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v320)), (int16x8_t)vshlq_u16(vmovl_high_u8(v319), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v321)));
      uint16x8_t v323 = (uint16x8_t)vpaddq_s16(v320, v321);
      int32x4_t v324 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v323.i8);
      int32x4_t v325 = (int32x4_t)vmovl_high_u16(v323);
      int32x4_t v326 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v322.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v324)), (int32x4_t)vshlq_u32(vmovl_high_u16(v322), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v325)));
      int32x4_t v327 = vpaddq_s32(v324, v325);
      v328.i64[0] = v326.u32[0];
      v328.i64[1] = v326.u32[1];
      uint64x2_t v329 = (uint64x2_t)v328;
      v328.i64[0] = v326.u32[2];
      v328.i64[1] = v326.u32[3];
      uint64x2_t v330 = (uint64x2_t)v328;
      v328.i64[0] = v327.u32[0];
      v328.i64[1] = v327.u32[1];
      int64x2_t v331 = v328;
      v328.i64[0] = v327.u32[2];
      v328.i64[1] = v327.u32[3];
      int64x2_t v332 = vpaddq_s64((int64x2_t)vshlq_u64(v329, (uint64x2_t)vzip1q_s64((int64x2_t)0, v331)), (int64x2_t)vshlq_u64(v330, (uint64x2_t)vzip1q_s64((int64x2_t)0, v328)));
      int64x2_t v333 = vpaddq_s64(v331, v328);
      unint64_t v334 = (v332.i64[0] << v316) | v314;
      if (v333.i64[0] + (v316 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v230 + ((v316 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v334;
        unint64_t v334 = (unint64_t)v332.i64[0] >> -(v316 & 0x3F);
        if ((v316 & 0x3F) == 0) {
          unint64_t v334 = 0;
        }
      }
      int8x16_t v335 = vceqq_s8(v62, v76);
      int8x16_t v336 = vaddq_s8(v21, v315);
      unint64_t v337 = v333.i64[0] + v316;
      unint64_t v338 = v334 | (v332.i64[1] << v337);
      if ((v337 & 0x3F) + v333.i64[1] >= 0x40)
      {
        *(void *)((char *)v230 + ((v337 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v338;
        unint64_t v338 = (unint64_t)v332.i64[1] >> -(v337 & 0x3F);
        if ((v337 & 0x3F) == 0) {
          unint64_t v338 = 0;
        }
      }
      int8x16_t v339 = vandq_s8(v65, v335);
      unint64_t v340 = v337 + v333.i64[1];
      v341.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v341.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v342.i64[0] = -1;
      v342.i64[1] = -1;
      uint8x16_t v343 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v342, (uint8x16_t)vaddq_s8(v235, v341)), v336);
      int16x8_t v344 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v235.i8);
      int16x8_t v345 = (int16x8_t)vmovl_high_u8((uint8x16_t)v235);
      uint16x8_t v346 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v343.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v344)), (int16x8_t)vshlq_u16(vmovl_high_u8(v343), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v345)));
      uint16x8_t v347 = (uint16x8_t)vpaddq_s16(v344, v345);
      int32x4_t v348 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v347.i8);
      int32x4_t v349 = (int32x4_t)vmovl_high_u16(v347);
      int32x4_t v350 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v346.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)), (int32x4_t)vshlq_u32(vmovl_high_u16(v346), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v349)));
      int32x4_t v351 = vpaddq_s32(v348, v349);
      v352.i64[0] = v350.u32[0];
      v352.i64[1] = v350.u32[1];
      uint64x2_t v353 = (uint64x2_t)v352;
      v352.i64[0] = v350.u32[2];
      v352.i64[1] = v350.u32[3];
      uint64x2_t v354 = (uint64x2_t)v352;
      v352.i64[0] = v351.u32[0];
      v352.i64[1] = v351.u32[1];
      int64x2_t v355 = v352;
      v352.i64[0] = v351.u32[2];
      v352.i64[1] = v351.u32[3];
      int64x2_t v356 = vpaddq_s64((int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v355)), (int64x2_t)vshlq_u64(v354, (uint64x2_t)vzip1q_s64((int64x2_t)0, v352)));
      int64x2_t v357 = vpaddq_s64(v355, v352);
      unint64_t v358 = (v356.i64[0] << v340) | v338;
      if (v357.i64[0] + (v340 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v230 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v358;
        unint64_t v358 = (unint64_t)v356.i64[0] >> -(v340 & 0x3F);
        if ((v340 & 0x3F) == 0) {
          unint64_t v358 = 0;
        }
      }
      int8x16_t v359 = vaddq_s8(v22, v339);
      unint64_t v360 = v357.i64[0] + v340;
      unint64_t v361 = v358 | (v356.i64[1] << v360);
      if ((v360 & 0x3F) + v357.i64[1] >= 0x40)
      {
        *(void *)((char *)v230 + ((v360 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v361;
        unint64_t v361 = (unint64_t)v356.i64[1] >> -(v360 & 0x3F);
        if ((v360 & 0x3F) == 0) {
          unint64_t v361 = 0;
        }
      }
      unint64_t v362 = v360 + v357.i64[1];
      v363.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v363.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v364.i64[0] = -1;
      v364.i64[1] = -1;
      uint8x16_t v365 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v364, (uint8x16_t)vaddq_s8(v236, v363)), v359);
      int16x8_t v366 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v236.i8);
      int16x8_t v367 = (int16x8_t)vmovl_high_u8((uint8x16_t)v236);
      uint16x8_t v368 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v365.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v366)), (int16x8_t)vshlq_u16(vmovl_high_u8(v365), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v367)));
      uint16x8_t v369 = (uint16x8_t)vpaddq_s16(v366, v367);
      int32x4_t v370 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v369.i8);
      int32x4_t v371 = (int32x4_t)vmovl_high_u16(v369);
      int32x4_t v372 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v368.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v370)), (int32x4_t)vshlq_u32(vmovl_high_u16(v368), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v371)));
      int32x4_t v373 = vpaddq_s32(v370, v371);
      v374.i64[0] = v372.u32[0];
      v374.i64[1] = v372.u32[1];
      uint64x2_t v375 = (uint64x2_t)v374;
      v374.i64[0] = v372.u32[2];
      v374.i64[1] = v372.u32[3];
      uint64x2_t v376 = (uint64x2_t)v374;
      v374.i64[0] = v373.u32[0];
      v374.i64[1] = v373.u32[1];
      int64x2_t v377 = v374;
      v374.i64[0] = v373.u32[2];
      v374.i64[1] = v373.u32[3];
      int64x2_t v378 = vpaddq_s64((int64x2_t)vshlq_u64(v375, (uint64x2_t)vzip1q_s64((int64x2_t)0, v377)), (int64x2_t)vshlq_u64(v376, (uint64x2_t)vzip1q_s64((int64x2_t)0, v374)));
      int64x2_t v379 = vpaddq_s64(v377, v374);
      unint64_t v380 = (v378.i64[0] << v362) | v361;
      if (v379.i64[0] + (v362 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v230 + ((v362 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v380;
        if ((v362 & 0x3F) != 0) {
          unint64_t v380 = (unint64_t)v378.i64[0] >> -(v362 & 0x3F);
        }
        else {
          unint64_t v380 = 0;
        }
      }
      unint64_t v381 = v379.i64[0] + v362;
      unint64_t v382 = v380 | (v378.i64[1] << v381);
      if ((v381 & 0x3F) + v379.i64[1] >= 0x40)
      {
        *(void *)((char *)v230 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v382;
        unint64_t v382 = (unint64_t)v378.i64[1] >> -(v381 & 0x3F);
        if ((v381 & 0x3F) == 0) {
          unint64_t v382 = 0;
        }
      }
      unint64_t v383 = v381 + v379.i64[1];
      if ((v383 & 0x3F) != 0) {
        *(void *)((char *)v230 + ((v383 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v382;
      }
      unint64_t v82 = (v383 - v231 + 7) >> 3;
      char v81 = *a2 | (v82 - 1);
    }
  }
  else
  {
    a1->i8[0] = a3->i8[0];
    char v81 = 96;
    unint64_t v82 = 1;
  }
  *a2 = v81;
  return v82;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x8_t *a3, char *a4, int a5, int a6, double a7, double a8, int8x8_t a9, int8x8_t a10)
{
  int8x16_t v13 = a3;
  uint64_t v15 = (int8x8_t *)result;
  if (a5 >= 4) {
    unsigned int v16 = 4;
  }
  else {
    unsigned int v16 = a5;
  }
  if (a6 >= 2) {
    int v17 = 2;
  }
  else {
    int v17 = a6;
  }
  if (v16 && v17)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int8x8_t *)result, a2, v16, a7, a8, a9, a10);
    int8x16_t v13 = (int8x8_t *)((char *)v13 + result);
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v18 = 2 * a2;
  int8x16_t v19 = a4 + 1;
  if (a6 <= 2) {
    int v20 = 2;
  }
  else {
    int v20 = a6;
  }
  unsigned int v21 = v20 - 2;
  if (v21 >= 2) {
    int v22 = 2;
  }
  else {
    int v22 = v21;
  }
  if (v16 && v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v19, (int8x8_t *)((char *)v15 + v18), a2, v16, a7, a8, a9, a10);
    int8x16_t v13 = (int8x8_t *)((char *)v13 + result);
  }
  else
  {
    *int8x16_t v19 = 0;
  }
  int8x16_t v23 = a4 + 2;
  if (a5 <= 4) {
    int v24 = 4;
  }
  else {
    int v24 = a5;
  }
  unsigned int v25 = v24 - 4;
  if (v25 >= 4) {
    int v26 = 4;
  }
  else {
    int v26 = v25;
  }
  if (v26 && v17)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v23, v15 + 2, a2, v26, a7, a8, a9, a10);
    int8x16_t v13 = (int8x8_t *)((char *)v13 + result);
    int8x16_t v27 = a4 + 3;
  }
  else
  {
    *int8x16_t v23 = 0;
    int8x16_t v27 = a4 + 3;
    if (!v26) {
      goto LABEL_33;
    }
  }
  if (v22)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v27, (int8x8_t *)((char *)v15 + v18 + 16), a2, v26, a7, a8, a9, a10);
    int8x16_t v13 = (int8x8_t *)((char *)v13 + result);
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v27 = 0;
LABEL_34:
  int8x16_t v28 = a4 + 4;
  if (a6 <= 4) {
    int v29 = 4;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 4;
  if (v30 >= 2) {
    int v31 = 2;
  }
  else {
    int v31 = v30;
  }
  if (v16 && v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v28, (int8x8_t *)((char *)v15 + 4 * a2), a2, v16, a7, a8, a9, a10);
    int8x16_t v13 = (int8x8_t *)((char *)v13 + result);
  }
  else
  {
    *int8x16_t v28 = 0;
  }
  int8x16_t v32 = a4 + 5;
  if (a6 <= 6) {
    int v33 = 6;
  }
  else {
    int v33 = a6;
  }
  unsigned int v34 = v33 - 6;
  if (v34 >= 2) {
    int v35 = 2;
  }
  else {
    int v35 = v34;
  }
  if (v16 && v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v32, (int8x8_t *)((char *)v15 + 6 * a2), a2, v16, a7, a8, a9, a10);
    int8x16_t v13 = (int8x8_t *)((char *)v13 + result);
    int8x16_t v36 = a4 + 6;
    if (!v26) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v32 = 0;
    int8x16_t v36 = a4 + 6;
    if (!v26) {
      goto LABEL_57;
    }
  }
  if (v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v36, (int8x8_t *)((char *)v15 + 4 * a2 + 16), a2, v26, a7, a8, a9, a10);
    int8x16_t v13 = (int8x8_t *)((char *)v13 + result);
    int8x16_t v37 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v36 = 0;
  int8x16_t v37 = a4 + 7;
  if (!v26)
  {
LABEL_62:
    *int8x16_t v37 = 0;
    return result;
  }
LABEL_58:
  if (!v35) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v13, v37, (int8x8_t *)((char *)v15 + 6 * a2 + 16), a2, v26, a7, a8, a9, a10);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int16x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, int8x8_t a10, double a11, double a12, double a13, int8x8_t a14)
{
  int16x4_t v17 = *(int16x4_t *)((char *)a3 + a4);
  *(int16x4_t *)v18.i8 = vzip1_s16(*a3, v17);
  *(int16x4_t *)v19.i8 = vzip2_s16(*a3, v17);
  v18.i64[1] = v18.i64[0];
  v19.i64[1] = v19.i64[0];
  int v20 = (int16x4_t *)((char *)a3 + 2 * a4);
  int8x8_t v21 = (int8x8_t)*v20;
  int16x4_t v22 = *(int16x4_t *)((char *)v20 + a4);
  *(int16x4_t *)v23.i8 = vzip1_s16(*v20, v22);
  *(int16x4_t *)v24.i8 = vzip2_s16(*v20, v22);
  v23.i64[1] = v23.i64[0];
  v24.i64[1] = v24.i64[0];
  int8x16_t v25 = vdupq_lane_s8(*(int8x8_t *)v18.i8, 0);
  int8x16_t v26 = vsubq_s8(v18, v25);
  int8x16_t v27 = vsubq_s8(v23, v25);
  int8x16_t v28 = vsubq_s8(v19, v25);
  int8x16_t v29 = vsubq_s8(v24, v25);
  v21.i8[0] = vmaxvq_s8(v26);
  a10.i8[0] = vminvq_s8(v26);
  int8x16_t v30 = vdupq_lane_s8(v21, 0);
  int8x16_t v31 = vdupq_lane_s8(a10, 0);
  v32.i64[0] = 0x8080808080808080;
  v32.i64[1] = 0x8080808080808080;
  int8x16_t v33 = vmaxq_s8(v30, v32);
  v34.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v34.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v35 = vminq_s8(v31, v34);
  int8x16_t v36 = vzip1q_s8(v30, v31);
  int8x16_t v37 = vceqzq_s8(v36);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v36)), v37);
  v37.i8[0] = vmaxvq_s8(v27);
  a14.i8[0] = vminvq_s8(v27);
  int8x16_t v40 = vdupq_lane_s8(*(int8x8_t *)v37.i8, 0);
  int8x16_t v41 = vdupq_lane_s8(a14, 0);
  int8x16_t v42 = vpmaxq_s8(v39, v39);
  int8x16_t v43 = vmaxq_s8(v33, v40);
  int8x16_t v44 = vminq_s8(v35, v41);
  int8x16_t v45 = vzip1q_s8(v40, v41);
  int8x16_t v46 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v45)), vceqzq_s8(v45));
  int8x16_t v47 = vpmaxq_s8(v46, v46);
  v46.i8[0] = vmaxvq_s8(v28);
  int8x16_t v48 = vdupq_lane_s8(*(int8x8_t *)v46.i8, 0);
  v41.i8[0] = vminvq_s8(v28);
  int8x16_t v49 = vdupq_lane_s8(*(int8x8_t *)v41.i8, 0);
  int8x16_t v50 = vmaxq_s8(v43, v48);
  int8x16_t v51 = vminq_s8(v44, v49);
  int8x16_t v52 = vzip1q_s8(v48, v49);
  int8x16_t v53 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v52)), vceqzq_s8(v52));
  int8x16_t v54 = vpmaxq_s8(v53, v53);
  v53.i8[0] = vmaxvq_s8(v29);
  v14.i8[0] = vminvq_s8(v29);
  int8x16_t v55 = vdupq_lane_s8(*(int8x8_t *)v53.i8, 0);
  int8x16_t v56 = vdupq_lane_s8(v14, 0);
  int8x16_t v57 = vminq_s8(v51, v56);
  int8x16_t v58 = vzip1q_s8(v55, v56);
  int8x16_t v59 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v58)), vceqzq_s8(v58));
  int8x16_t v60 = vpmaxq_s8(v59, v59);
  int8x16_t v61 = vmaxq_s8(vmaxq_s8(v42, v47), vmaxq_s8(v54, v60));
  int8x16_t v62 = vclzq_s8(vsubq_s8(vmaxq_s8(v50, v55), v57));
  int8x16_t v63 = vsubq_s8(v38, v62);
  int8x16_t v64 = vcgtq_s8(v61, v63);
  int8x16_t v65 = vbslq_s8(v64, v63, v61);
  if (vmaxvq_s8(v65))
  {
    char v66 = 0;
    unint64_t v67 = 0;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    v69.i64[0] = 0x707070707070707;
    v69.i64[1] = 0x707070707070707;
    int8x16_t v70 = vandq_s8(vsubq_s8(vshlq_s8(v68, vsubq_s8(v69, v62)), v57), v64);
    v71.i64[0] = 0x303030303030303;
    v71.i64[1] = 0x303030303030303;
    int8x16_t v72 = vorrq_s8(vandq_s8(vceqzq_s8(v65), v71), vandq_s8(v64, v38));
    int8x16_t v73 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v42), v71), (int8x16_t)0);
    int8x16_t v74 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v47), v71), (int8x16_t)0);
    int8x16_t v75 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v54), v71), (int8x16_t)0);
    int8x16_t v76 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v60), v71), (int8x16_t)0);
    int8x16_t v77 = vsubq_s8(v65, v73);
    int8x16_t v78 = vsubq_s8(v65, v74);
    int8x16_t v79 = vsubq_s8(v65, v75);
    int8x16_t v80 = vsubq_s8(v65, v76);
    int8x16_t v81 = vceqq_s8(vaddq_s8(v76, v75), vnegq_s8(vaddq_s8(v73, v74)));
    v76.i64[0] = 0x404040404040404;
    v76.i64[1] = 0x404040404040404;
    int8x16_t v82 = vorrq_s8(vbicq_s8(v76, v81), v72);
    if (a5 >= 4 && a6 >= 2)
    {
      int8x16_t v383 = v70;
      v83.i32[0] = v18.u8[2];
      v83.i32[1] = v18.u8[1];
      int32x2_t v84 = vshl_n_s32(vsub_s32(v83, vdup_n_s32(v18.u8[0])), 0x1CuLL);
      int v85 = v84.i32[1] >> 28;
      int8x8_t v86 = (int8x8_t)vshl_s32(v84, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v87 = v84.i32[0];
      v88.i64[0] = 0xFFFF0000FFFF0000;
      v88.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v89 = vmlaq_s8(vandq_s8(vdupq_n_s8(v84.i32[0] >> 28), v88), vdupq_n_s8(v84.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v90 = vsubq_s8(v26, v89);
      int8x16_t v91 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v86.i32[0]), v27), v89);
      int8x16_t v92 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v86.i32[1]), v28), v89);
      int8x16_t v93 = vaddq_s8(vdupq_n_s8(-v86.i32[0] - v86.i32[1]), v29);
      int8x16_t v384 = v27;
      int8x16_t v94 = vsubq_s8(v93, v89);
      v93.i8[0] = vmaxvq_s8(v90);
      int8x16_t v381 = v90;
      v86.i8[0] = vminvq_s8(v90);
      int8x16_t v95 = vdupq_lane_s8(*(int8x8_t *)v93.i8, 0);
      int8x16_t v96 = vdupq_lane_s8(v86, 0);
      v90.i64[0] = 0x8080808080808080;
      v90.i64[1] = 0x8080808080808080;
      int8x16_t v97 = vmaxq_s8(v95, v90);
      v90.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v90.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v98 = vminq_s8(v96, v90);
      int8x16_t v99 = vzip1q_s8(v95, v96);
      int8x16_t v100 = vceqzq_s8(v99);
      v101.i64[0] = 0x808080808080808;
      v101.i64[1] = 0x808080808080808;
      int8x16_t v102 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v99)), v100);
      int8x16_t v103 = vpmaxq_s8(v102, v102);
      v100.i8[0] = vmaxvq_s8(v91);
      int8x16_t v104 = v79;
      int8x16_t v378 = v91;
      v79.i8[0] = vminvq_s8(v91);
      int8x16_t v105 = vdupq_lane_s8(*(int8x8_t *)v100.i8, 0);
      int8x16_t v106 = vdupq_lane_s8(*(int8x8_t *)v79.i8, 0);
      int8x16_t v107 = vmaxq_s8(v97, v105);
      int8x16_t v108 = vminq_s8(v98, v106);
      int8x16_t v109 = vzip1q_s8(v105, v106);
      int8x16_t v110 = vceqzq_s8(v109);
      int8x16_t v111 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v109)), v110);
      int8x16_t v112 = vpmaxq_s8(v111, v111);
      v110.i8[0] = vmaxvq_s8(v92);
      v15.i8[0] = vminvq_s8(v92);
      int8x16_t v113 = vdupq_lane_s8(*(int8x8_t *)v110.i8, 0);
      int8x16_t v114 = vdupq_lane_s8(v15, 0);
      int8x16_t v115 = vmaxq_s8(v107, v113);
      int8x16_t v116 = vminq_s8(v108, v114);
      int8x16_t v117 = vzip1q_s8(v113, v114);
      int8x16_t v118 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v117)), vceqzq_s8(v117));
      int8x16_t v119 = vpmaxq_s8(v118, v118);
      v118.i8[0] = vmaxvq_s8(v94);
      v16.i8[0] = vminvq_s8(v94);
      int8x16_t v120 = vdupq_lane_s8(*(int8x8_t *)v118.i8, 0);
      int8x16_t v121 = vdupq_lane_s8(v16, 0);
      int8x16_t v122 = vmaxq_s8(v115, v120);
      int8x16_t v123 = vminq_s8(v116, v121);
      int8x16_t v124 = vzip1q_s8(v120, v121);
      int8x16_t v125 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v124)), vceqzq_s8(v124));
      int8x16_t v126 = vpmaxq_s8(v125, v125);
      int8x16_t v127 = vmaxq_s8(vmaxq_s8(v103, v112), vmaxq_s8(v119, v126));
      int8x16_t v128 = vclzq_s8(vsubq_s8(v122, v123));
      int8x16_t v129 = vsubq_s8(v101, v128);
      int8x16_t v130 = vcgtq_s8(v127, v129);
      int8x16_t v131 = vbslq_s8(v130, v129, v127);
      v101.i64[0] = 0x202020202020202;
      v101.i64[1] = 0x202020202020202;
      v127.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v127.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v132 = v29;
      int8x16_t v133 = vbslq_s8(v130, v127, v101);
      v127.i64[0] = 0x101010101010101;
      v127.i64[1] = 0x101010101010101;
      int8x16_t v134 = vmaxq_s8(v131, v127);
      v101.i64[0] = 0x303030303030303;
      v101.i64[1] = 0x303030303030303;
      int8x16_t v135 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v103), v101), (int8x16_t)0);
      int8x16_t v136 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v112), v101), (int8x16_t)0);
      int8x16_t v137 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v119), v101), (int8x16_t)0);
      int8x16_t v138 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v126), v101), (int8x16_t)0);
      int8x16_t v139 = vsubq_s8(v134, v135);
      int8x16_t v140 = vsubq_s8(v134, v136);
      int8x16_t v141 = vsubq_s8(v134, v137);
      int8x16_t v142 = vsubq_s8(v134, v138);
      int8x16_t v143 = vceqq_s8(vaddq_s8(v138, v137), vnegq_s8(vaddq_s8(v135, v136)));
      v138.i64[0] = 0x404040404040404;
      v138.i64[1] = 0x404040404040404;
      int8x16_t v144 = vorrq_s8(vbicq_s8(v138, v143), v133);
      v101.i64[0] = 0x8000800080008;
      v101.i64[1] = 0x8000800080008;
      int16x8_t v145 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v104.i8, *(int8x8_t *)v78.i8), *(int8x8_t *)v80.i8), 3uLL);
      v131.i64[0] = 0x2000200020002;
      v131.i64[1] = 0x2000200020002;
      int8x16_t v146 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(v145, *(int8x8_t *)v77.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v65.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v82.i8))), (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v82.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v82.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v131), v101)),
                                                  vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v141.i8, *(int8x8_t *)v140.i8), *(int8x8_t *)v142.i8), 3uLL), *(int8x8_t *)v139.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v144.i8, *(int8x8_t *)v144.i8), (int8x8_t)0x808080808080808)), (uint8x8_t)vbic_s8(*(int8x8_t *)v134.i8,
                                                                              (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v144.i8))), (int16x8_t)v101))), 0);
      v138.i16[0] = vaddlvq_s8(v146);
      unint64_t v67 = v85 & 0xF | HIBYTE(v87);
      int v147 = v138.u16[0];
      if (v138.i16[0])
      {
        v148.i64[0] = 0x707070707070707;
        v148.i64[1] = 0x707070707070707;
        v149.i64[0] = -1;
        v149.i64[1] = -1;
        int8x16_t v384 = vbslq_s8(v146, v378, v384);
        int8x16_t v28 = vbslq_s8(v146, v92, v28);
        int8x16_t v150 = vbslq_s8(v146, v94, v132);
        int8x16_t v80 = vbslq_s8(v146, v142, v80);
        int8x16_t v70 = vbslq_s8(v146, vandq_s8(vsubq_s8(vshlq_s8(v149, vsubq_s8(v148, v128)), v123), v130), v383);
        int8x16_t v65 = vbslq_s8(v146, v134, v65);
        int8x16_t v82 = vbslq_s8(v146, v144, v82);
        int8x16_t v377 = vbslq_s8(v146, v139, v77);
        int8x16_t v379 = vbslq_s8(v146, v140, v78);
        int16x8_t v151 = vmull_s8(*(int8x8_t *)v377.i8, (int8x8_t)0x707070707070707);
        int8x16_t v380 = vbslq_s8(v146, v381, v26);
        int8x16_t v382 = vbslq_s8(v146, v141, v104);
        int16x8_t v152 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v382.i8, *(int8x8_t *)v379.i8), *(int8x8_t *)v80.i8), 3uLL);
        int8x16_t v29 = v150;
      }
      else
      {
        int8x16_t v379 = v78;
        int8x16_t v380 = v26;
        int8x16_t v382 = v104;
        int8x16_t v377 = v77;
        int16x8_t v151 = vmull_s8(*(int8x8_t *)v77.i8, (int8x8_t)0x707070707070707);
        int8x16_t v29 = v132;
        int8x16_t v70 = v383;
        int16x8_t v152 = v145;
      }
      int8x16_t v154 = v23;
      v154.i8[7] = v18.i8[7];
      int8x16_t v155 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7430));
      int8x16_t v156 = vsubq_s8(v23, vqtbl1q_s8(v154, (int8x16_t)xmmword_242EA7440));
      int8x16_t v157 = v19;
      v157.i8[7] = v18.i8[7];
      int8x16_t v158 = vsubq_s8(v19, vqtbl1q_s8(v157, (int8x16_t)xmmword_242EA7450));
      int8x16_t v159 = v24;
      v159.i8[7] = v18.i8[7];
      int8x16_t v160 = vqtbl1q_s8(v159, (int8x16_t)xmmword_242EA7460);
      int8x16_t v161 = vsubq_s8(v24, v160);
      int8x16_t v162 = v155;
      v162.i8[0] = v155.i8[7];
      v162.i8[7] = v155.i8[0];
      v155.i8[0] = vmaxvq_s8(v162);
      v160.i8[0] = vminvq_s8(v162);
      int8x16_t v163 = vdupq_lane_s8(*(int8x8_t *)v155.i8, 0);
      int8x16_t v164 = vdupq_lane_s8(*(int8x8_t *)v160.i8, 0);
      v165.i64[0] = 0x8080808080808080;
      v165.i64[1] = 0x8080808080808080;
      int8x16_t v166 = vmaxq_s8(v163, v165);
      v165.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v165.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v167 = vminq_s8(v164, v165);
      int8x16_t v168 = vzip1q_s8(v163, v164);
      int8x16_t v169 = vceqzq_s8(v168);
      v170.i64[0] = 0x808080808080808;
      v170.i64[1] = 0x808080808080808;
      int8x16_t v171 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v168)), v169);
      int8x16_t v172 = vpmaxq_s8(v171, v171);
      v169.i8[0] = vmaxvq_s8(v156);
      v141.i8[0] = vminvq_s8(v156);
      int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v169.i8, 0);
      int8x16_t v174 = vdupq_lane_s8(*(int8x8_t *)v141.i8, 0);
      int8x16_t v175 = vmaxq_s8(v166, v173);
      int8x16_t v176 = vminq_s8(v167, v174);
      int8x16_t v177 = vzip1q_s8(v173, v174);
      int8x16_t v178 = vceqzq_s8(v177);
      int8x16_t v179 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v177)), v178);
      int8x16_t v180 = vpmaxq_s8(v179, v179);
      v178.i8[0] = vmaxvq_s8(v158);
      v123.i8[0] = vminvq_s8(v158);
      int8x16_t v181 = vdupq_lane_s8(*(int8x8_t *)v178.i8, 0);
      int8x16_t v182 = vdupq_lane_s8(*(int8x8_t *)v123.i8, 0);
      int8x16_t v183 = vmaxq_s8(v175, v181);
      int8x16_t v184 = vminq_s8(v176, v182);
      int8x16_t v185 = vzip1q_s8(v181, v182);
      int8x16_t v186 = vceqzq_s8(v185);
      int8x16_t v187 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v185)), v186);
      int8x16_t v188 = vpmaxq_s8(v187, v187);
      v187.i8[0] = vmaxvq_s8(v161);
      v186.i8[0] = vminvq_s8(v161);
      int8x16_t v189 = vdupq_lane_s8(*(int8x8_t *)v187.i8, 0);
      int8x16_t v190 = vdupq_lane_s8(*(int8x8_t *)v186.i8, 0);
      int8x16_t v191 = vminq_s8(v184, v190);
      int8x16_t v192 = vzip1q_s8(v189, v190);
      int8x16_t v193 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v192)), vceqzq_s8(v192));
      int8x16_t v194 = vpmaxq_s8(v193, v193);
      int8x16_t v195 = vmaxq_s8(vmaxq_s8(v172, v180), vmaxq_s8(v188, v194));
      int8x16_t v196 = vclzq_s8(vsubq_s8(vmaxq_s8(v183, v189), v191));
      int8x16_t v197 = vsubq_s8(v170, v196);
      int8x16_t v198 = vcgtq_s8(v195, v197);
      int8x16_t v199 = vbslq_s8(v198, v197, v195);
      v197.i64[0] = 0x909090909090909;
      v197.i64[1] = 0x909090909090909;
      v165.i64[0] = 0x202020202020202;
      v165.i64[1] = 0x202020202020202;
      int8x16_t v200 = vorrq_s8(vandq_s8(vceqzq_s8(v199), v165), vsubq_s8(vandq_s8(v198, v197), vmvnq_s8(v198)));
      v165.i64[0] = 0x303030303030303;
      v165.i64[1] = 0x303030303030303;
      int8x16_t v201 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v172), v165), (int8x16_t)0);
      int8x16_t v202 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v180), v165), (int8x16_t)0);
      int8x16_t v203 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v188), v165), (int8x16_t)0);
      int8x16_t v204 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v194), v165), (int8x16_t)0);
      int8x16_t v205 = vsubq_s8(v199, v201);
      int8x16_t v206 = vsubq_s8(v199, v202);
      int8x16_t v207 = vsubq_s8(v199, v203);
      int8x16_t v208 = vsubq_s8(v199, v204);
      int8x16_t v209 = vceqq_s8(vaddq_s8(v204, v203), vnegq_s8(vaddq_s8(v201, v202)));
      v202.i64[0] = 0x404040404040404;
      v202.i64[1] = 0x404040404040404;
      int8x16_t v210 = vorrq_s8(v200, vbicq_s8(v202, v209));
      v203.i64[0] = 0x3000300030003;
      v203.i64[1] = 0x3000300030003;
      int8x16_t v211 = (int8x16_t)vmovl_s8(*(int8x8_t *)v82.i8);
      v165.i64[0] = 0x8000800080008;
      v165.i64[1] = 0x8000800080008;
      v170.i64[0] = 0x2000200020002;
      v170.i64[1] = 0x2000200020002;
      int8x16_t v212 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v65.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v211, v165))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v82.i8, 1uLL), v165)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v211, v203), (int16x8_t)v170), v165), v151)), v152), vaddw_s8(
                                                    (int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v207.i8, *(int8x8_t *)v206.i8), *(int8x8_t *)v208.i8), 3uLL), *(int8x8_t *)v205.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v210.i8, *(int8x8_t *)v210.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v199.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808,
                                                                  *(uint8x8_t *)v210.i8))))),
               0);
      v209.i16[0] = vaddlvq_s8(v212);
      int v213 = v209.u16[0];
      if (v209.i16[0])
      {
        v214.i64[0] = 0x707070707070707;
        v214.i64[1] = 0x707070707070707;
        v215.i64[0] = -1;
        v215.i64[1] = -1;
        int8x16_t v216 = vsubq_s8(vshlq_s8(v215, vsubq_s8(v214, v196)), v191);
        v25.i8[0] = vbslq_s8(v212, vextq_s8(v18, v18, 0xFuLL), v25).u8[0];
        int8x16_t v26 = vbslq_s8(v212, v162, v380);
        int8x16_t v27 = vbslq_s8(v212, v156, v384);
        int8x16_t v28 = vbslq_s8(v212, v158, v28);
        int8x16_t v29 = vbslq_s8(v212, v161, v29);
        int8x16_t v77 = vbslq_s8(v212, v205, v377);
        int8x16_t v78 = vbslq_s8(v212, v206, v379);
        int8x16_t v79 = vbslq_s8(v212, v207, v382);
        int8x16_t v80 = vbslq_s8(v212, v208, v80);
        int8x16_t v70 = vbslq_s8(v212, vandq_s8(v216, v198), v70);
        int8x16_t v65 = vbslq_s8(v212, v199, v65);
        int8x16_t v82 = vbslq_s8(v212, v210, v82);
      }
      else
      {
        int8x16_t v27 = v384;
        int8x16_t v26 = v380;
        int8x16_t v79 = v382;
        int8x16_t v77 = v377;
        int8x16_t v78 = v379;
      }
      if (v147) {
        BOOL v217 = v213 == 0;
      }
      else {
        BOOL v217 = 0;
      }
      char v66 = v217;
    }
    int8x16_t v218 = (int8x16_t)vmovl_s8(*(int8x8_t *)v82.i8);
    v219.i64[0] = 0x8000800080008;
    v219.i64[1] = 0x8000800080008;
    v220.i64[0] = 0x3000300030003;
    v220.i64[1] = 0x3000300030003;
    v221.i64[0] = 0x2000200020002;
    v221.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(7 * v77.i8[0]
                                    + 8 * vaddq_s8(v79, vaddq_s8(v78, v80)).i8[0]
                                    + ((2 * v218.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v65.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v218, v219))).u16[0]+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v218, v220), v221), v219).u16[0])- 117) <= 0xFFFFFFFFFFFFFF77)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 16;
    }
    else
    {
      int8x16_t v222 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v223 = 8 * (a1 & 7);
      if (v223) {
        uint64_t v224 = *v222 & ~(-1 << v223);
      }
      else {
        uint64_t v224 = 0;
      }
      int8x16_t v225 = vextq_s8(v77, (int8x16_t)0, 8uLL);
      int8x16_t v226 = vextq_s8(v78, (int8x16_t)0, 8uLL);
      int8x16_t v227 = vextq_s8(v79, (int8x16_t)0, 8uLL);
      int8x16_t v228 = vextq_s8(v80, (int8x16_t)0, 8uLL);
      if (v65.i8[0]) {
        int v229 = (16 * v65.i8[0] + 112) & 0x70;
      }
      else {
        int v229 = 0;
      }
      *a2 = 32 * v82.i8[0];
      unint64_t v230 = (v82.i8[0] & 8 | v229 & 0xFFFF807F | ((unint64_t)v25.u8[0] << 7)) >> 3;
      unint64_t v231 = (v230 << v223) | v224;
      if (v223 >= 0x34)
      {
        *int8x16_t v222 = v231;
        unint64_t v231 = v230 >> (-8 * (a1 & 7u));
      }
      int8x16_t v232 = vdupq_lane_s8(*(int8x8_t *)v65.i8, 0);
      unint64_t v233 = v223 + 12;
      v234.i64[0] = 0x202020202020202;
      v234.i64[1] = 0x202020202020202;
      int8x16_t v235 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v82.i8), (int8x8_t)0x4000400040004)))), v234);
      v234.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v234.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v236.i64[0] = -1;
      v236.i64[1] = -1;
      uint8x16_t v237 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v236, (uint8x16_t)vorrq_s8(v235, v234)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v232, vzip1q_s8(v225, v226)), (int16x8_t)vsubq_s8(v232, vzip1q_s8(v227, v228))).u32[0]);
      int16x8_t v238 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v235.i8);
      uint16x8_t v239 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v237.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v238)), (int16x8_t)vmovl_high_u8(v237));
      uint16x8_t v240 = (uint16x8_t)vpaddq_s16(v238, (int16x8_t)vmovl_high_u8((uint8x16_t)v235));
      int32x4_t v241 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v240.i8);
      int32x4_t v242 = (int32x4_t)vmovl_high_u16(v240);
      int32x4_t v243 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v239.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v241)), (int32x4_t)vshlq_u32(vmovl_high_u16(v239), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v242)));
      int32x4_t v244 = vpaddq_s32(v241, v242);
      v245.i64[0] = v243.u32[0];
      v245.i64[1] = v243.u32[1];
      uint64x2_t v246 = (uint64x2_t)v245;
      v245.i64[0] = v243.u32[2];
      v245.i64[1] = v243.u32[3];
      uint64x2_t v247 = (uint64x2_t)v245;
      v245.i64[0] = v244.u32[0];
      v245.i64[1] = v244.u32[1];
      int64x2_t v248 = v245;
      v245.i64[0] = v244.u32[2];
      v245.i64[1] = v244.u32[3];
      int64x2_t v249 = vpaddq_s64((int64x2_t)vshlq_u64(v246, (uint64x2_t)vzip1q_s64((int64x2_t)0, v248)), (int64x2_t)vshlq_u64(v247, (uint64x2_t)vzip1q_s64((int64x2_t)0, v245)));
      int64x2_t v250 = vpaddq_s64(v248, v245);
      uint64_t v251 = (v223 + 12) & 0x3C;
      unint64_t v252 = (v249.i64[0] << v251) | v231;
      if ((unint64_t)(v250.i64[0] + v251) >= 0x40)
      {
        *(void *)((char *)v222 + ((v233 >> 3) & 8)) = v252;
        unint64_t v252 = (unint64_t)v249.i64[0] >> -(char)v251;
      }
      unint64_t v253 = v250.i64[0] + v233;
      uint64_t v254 = (v250.i64[0] + v233) & 0x3F;
      unint64_t v255 = v252 | (v249.i64[1] << (v250.i8[0] + v233));
      if ((unint64_t)(v254 + v250.i64[1]) >= 0x40)
      {
        *(void *)((char *)v222 + ((v253 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v255;
        unint64_t v255 = (unint64_t)v249.i64[1] >> -(char)v254;
        if (!v254) {
          unint64_t v255 = 0;
        }
      }
      int8x16_t v256 = vceqq_s8(v65, v77);
      unint64_t v257 = v253 + v250.i64[1];
      v258.i64[0] = 0x808080808080808;
      v258.i64[1] = 0x808080808080808;
      v259.i64[0] = -1;
      v259.i64[1] = -1;
      int8x16_t v260 = vandq_s8(vextq_s8(vtstq_s8(v82, v258), (int8x16_t)0, 0xFuLL), v65);
      v261.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v261.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v262 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v259, (uint8x16_t)vaddq_s8(v260, v261)), v70);
      int16x8_t v263 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v260.i8);
      uint16x8_t v264 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v262.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v263)), (int16x8_t)vmovl_high_u8(v262));
      uint16x8_t v265 = (uint16x8_t)vpaddq_s16(v263, (int16x8_t)vmovl_high_u8((uint8x16_t)v260));
      int32x4_t v266 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v265.i8);
      int32x4_t v267 = (int32x4_t)vmovl_high_u16(v265);
      int32x4_t v268 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v264.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v266)), (int32x4_t)vshlq_u32(vmovl_high_u16(v264), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v267)));
      int32x4_t v269 = vpaddq_s32(v266, v267);
      v270.i64[0] = v268.u32[0];
      v270.i64[1] = v268.u32[1];
      uint64x2_t v271 = (uint64x2_t)v270;
      v270.i64[0] = v268.u32[2];
      v270.i64[1] = v268.u32[3];
      uint64x2_t v272 = (uint64x2_t)v270;
      v270.i64[0] = v269.u32[0];
      v270.i64[1] = v269.u32[1];
      int64x2_t v273 = v270;
      v270.i64[0] = v269.u32[2];
      v270.i64[1] = v269.u32[3];
      int64x2_t v274 = vpaddq_s64((int64x2_t)vshlq_u64(v271, (uint64x2_t)vzip1q_s64((int64x2_t)0, v273)), (int64x2_t)vshlq_u64(v272, (uint64x2_t)vzip1q_s64((int64x2_t)0, v270)));
      int64x2_t v275 = vpaddq_s64(v273, v270);
      uint64_t v276 = (v253 + v250.i64[1]) & 0x3F;
      unint64_t v277 = (v274.i64[0] << (v253 + v250.i8[8])) | v255;
      if ((unint64_t)(v275.i64[0] + v276) >= 0x40)
      {
        *(void *)((char *)v222 + ((v257 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v277;
        unint64_t v277 = (unint64_t)v274.i64[0] >> -(char)v276;
        if (!v276) {
          unint64_t v277 = 0;
        }
      }
      int8x16_t v278 = vandq_s8(v70, v256);
      unint64_t v279 = v275.i64[0] + v257;
      unint64_t v280 = v277 | (v274.i64[1] << v279);
      if ((v279 & 0x3F) + v275.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v279 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
        unint64_t v280 = (unint64_t)v274.i64[1] >> -(v279 & 0x3F);
        if ((v279 & 0x3F) == 0) {
          unint64_t v280 = 0;
        }
      }
      int8x16_t v281 = vceqq_s8(v65, v78);
      int8x16_t v282 = vaddq_s8(v278, v26);
      unint64_t v283 = v279 + v275.i64[1];
      if (v66)
      {
        v280 |= v67 << v283;
        if ((v283 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v222 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
          unint64_t v280 = v67 >> -(v283 & 0x3F);
        }
        v283 += 8;
      }
      int8x16_t v284 = vandq_s8(v70, v281);
      int16x8_t v285 = (int16x8_t)vmovl_high_u8((uint8x16_t)v225);
      v225.i8[0] = 0;
      v286.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v286.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v287, (uint8x16_t)vaddq_s8(v225, v286)), v282);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v225.i8);
      uint16x8_t v290 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vshlq_u16(vmovl_high_u8(v288), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v285)));
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16(v289, v285);
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16(v291);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      unint64_t v302 = (v300.i64[0] << v283) | v280;
      if (v301.i64[0] + (v283 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v222 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v300.i64[0] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      int8x16_t v303 = vceqq_s8(v65, v79);
      int8x16_t v304 = vaddq_s8(v27, v284);
      unint64_t v305 = v301.i64[0] + v283;
      uint64_t v306 = (v301.i64[0] + v283) & 0x3F;
      unint64_t v307 = v302 | (v300.i64[1] << v305);
      if ((v305 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v307;
        unint64_t v307 = (unint64_t)v300.i64[1] >> -(char)v306;
        if (!v306) {
          unint64_t v307 = 0;
        }
      }
      int8x16_t v308 = vandq_s8(v70, v303);
      unint64_t v309 = v305 + v301.i64[1];
      v310.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v310.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v311.i64[0] = -1;
      v311.i64[1] = -1;
      uint8x16_t v312 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v311, (uint8x16_t)vaddq_s8(v226, v310)), v304);
      int16x8_t v313 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v226.i8);
      int16x8_t v314 = (int16x8_t)vmovl_high_u8((uint8x16_t)v226);
      uint16x8_t v315 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v312.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v313)), (int16x8_t)vshlq_u16(vmovl_high_u8(v312), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)));
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16(v313, v314);
      int32x4_t v317 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v316.i8);
      int32x4_t v318 = (int32x4_t)vmovl_high_u16(v316);
      int32x4_t v319 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v315.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v317)), (int32x4_t)vshlq_u32(vmovl_high_u16(v315), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)));
      int32x4_t v320 = vpaddq_s32(v317, v318);
      v321.i64[0] = v319.u32[0];
      v321.i64[1] = v319.u32[1];
      uint64x2_t v322 = (uint64x2_t)v321;
      v321.i64[0] = v319.u32[2];
      v321.i64[1] = v319.u32[3];
      uint64x2_t v323 = (uint64x2_t)v321;
      v321.i64[0] = v320.u32[0];
      v321.i64[1] = v320.u32[1];
      int64x2_t v324 = v321;
      v321.i64[0] = v320.u32[2];
      v321.i64[1] = v320.u32[3];
      int64x2_t v325 = vpaddq_s64((int64x2_t)vshlq_u64(v322, (uint64x2_t)vzip1q_s64((int64x2_t)0, v324)), (int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v321)));
      int64x2_t v326 = vpaddq_s64(v324, v321);
      unint64_t v327 = (v325.i64[0] << v309) | v307;
      if (v326.i64[0] + (v309 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v222 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v327;
        unint64_t v327 = (unint64_t)v325.i64[0] >> -(v309 & 0x3F);
        if ((v309 & 0x3F) == 0) {
          unint64_t v327 = 0;
        }
      }
      int8x16_t v328 = vceqq_s8(v65, v80);
      int8x16_t v329 = vaddq_s8(v28, v308);
      unint64_t v330 = v326.i64[0] + v309;
      unint64_t v331 = v327 | (v325.i64[1] << v330);
      if ((v330 & 0x3F) + v326.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v325.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      int8x16_t v332 = vandq_s8(v70, v328);
      unint64_t v333 = v330 + v326.i64[1];
      v334.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v334.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v335.i64[0] = -1;
      v335.i64[1] = -1;
      uint8x16_t v336 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v335, (uint8x16_t)vaddq_s8(v227, v334)), v329);
      int16x8_t v337 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v227.i8);
      int16x8_t v338 = (int16x8_t)vmovl_high_u8((uint8x16_t)v227);
      uint16x8_t v339 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v336.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v337)), (int16x8_t)vshlq_u16(vmovl_high_u8(v336), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v338)));
      uint16x8_t v340 = (uint16x8_t)vpaddq_s16(v337, v338);
      int32x4_t v341 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v340.i8);
      int32x4_t v342 = (int32x4_t)vmovl_high_u16(v340);
      int32x4_t v343 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v339.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v341)), (int32x4_t)vshlq_u32(vmovl_high_u16(v339), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)));
      int32x4_t v344 = vpaddq_s32(v341, v342);
      v345.i64[0] = v343.u32[0];
      v345.i64[1] = v343.u32[1];
      uint64x2_t v346 = (uint64x2_t)v345;
      v345.i64[0] = v343.u32[2];
      v345.i64[1] = v343.u32[3];
      uint64x2_t v347 = (uint64x2_t)v345;
      v345.i64[0] = v344.u32[0];
      v345.i64[1] = v344.u32[1];
      int64x2_t v348 = v345;
      v345.i64[0] = v344.u32[2];
      v345.i64[1] = v344.u32[3];
      int64x2_t v349 = vpaddq_s64((int64x2_t)vshlq_u64(v346, (uint64x2_t)vzip1q_s64((int64x2_t)0, v348)), (int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v345)));
      int64x2_t v350 = vpaddq_s64(v348, v345);
      unint64_t v351 = (v349.i64[0] << v333) | v331;
      if (v350.i64[0] + (v333 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v222 + ((v333 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v351;
        unint64_t v351 = (unint64_t)v349.i64[0] >> -(v333 & 0x3F);
        if ((v333 & 0x3F) == 0) {
          unint64_t v351 = 0;
        }
      }
      int8x16_t v352 = vaddq_s8(v29, v332);
      unint64_t v353 = v350.i64[0] + v333;
      unint64_t v354 = v351 | (v349.i64[1] << v353);
      if ((v353 & 0x3F) + v350.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v354;
        unint64_t v354 = (unint64_t)v349.i64[1] >> -(v353 & 0x3F);
        if ((v353 & 0x3F) == 0) {
          unint64_t v354 = 0;
        }
      }
      unint64_t v355 = v353 + v350.i64[1];
      v356.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v356.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v357.i64[0] = -1;
      v357.i64[1] = -1;
      uint8x16_t v358 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v357, (uint8x16_t)vaddq_s8(v228, v356)), v352);
      int16x8_t v359 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v228.i8);
      int16x8_t v360 = (int16x8_t)vmovl_high_u8((uint8x16_t)v228);
      uint16x8_t v361 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v358.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v359)), (int16x8_t)vshlq_u16(vmovl_high_u8(v358), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v360)));
      uint16x8_t v362 = (uint16x8_t)vpaddq_s16(v359, v360);
      int32x4_t v363 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v362.i8);
      int32x4_t v364 = (int32x4_t)vmovl_high_u16(v362);
      int32x4_t v365 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v361.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v363)), (int32x4_t)vshlq_u32(vmovl_high_u16(v361), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)));
      int32x4_t v366 = vpaddq_s32(v363, v364);
      v367.i64[0] = v365.u32[0];
      v367.i64[1] = v365.u32[1];
      uint64x2_t v368 = (uint64x2_t)v367;
      v367.i64[0] = v365.u32[2];
      v367.i64[1] = v365.u32[3];
      uint64x2_t v369 = (uint64x2_t)v367;
      v367.i64[0] = v366.u32[0];
      v367.i64[1] = v366.u32[1];
      int64x2_t v370 = v367;
      v367.i64[0] = v366.u32[2];
      v367.i64[1] = v366.u32[3];
      int64x2_t v371 = vpaddq_s64((int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)), (int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v367)));
      int64x2_t v372 = vpaddq_s64(v370, v367);
      unint64_t v373 = (v371.i64[0] << v355) | v354;
      if (v372.i64[0] + (v355 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v222 + ((v355 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v373;
        if ((v355 & 0x3F) != 0) {
          unint64_t v373 = (unint64_t)v371.i64[0] >> -(v355 & 0x3F);
        }
        else {
          unint64_t v373 = 0;
        }
      }
      unint64_t v374 = v372.i64[0] + v355;
      unint64_t v375 = v373 | (v371.i64[1] << v374);
      if ((v374 & 0x3F) + v372.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v374 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
        unint64_t v375 = (unint64_t)v371.i64[1] >> -(v374 & 0x3F);
        if ((v374 & 0x3F) == 0) {
          unint64_t v375 = 0;
        }
      }
      unint64_t v376 = v374 + v372.i64[1];
      if ((v376 & 0x3F) != 0) {
        *(void *)((char *)v222 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
      }
      unint64_t result = (v376 - v223 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(unsigned char *)a1 = a3->i8[0];
    *a2 = 96;
    return 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v68 = *MEMORY[0x263EF8340];
  long long v66 = 0u;
  long long v67 = 0u;
  uint64_t v10 = a6;
  if (a5 <= 1)
  {
    uint64_t v11 = 0;
    if (a6 >= 8 && a4 == 1)
    {
      if (a6 < 0x20)
      {
        uint64_t v11 = 0;
        goto LABEL_23;
      }
      uint64_t v11 = a6 & 0xE0;
      int8x16_t v34 = (long long *)(a3 + 16);
      int8x16_t v35 = &v67;
      uint64_t v36 = v11;
      do
      {
        long long v37 = *v34;
        *(v35 - 1) = *(v34 - 1);
        *int8x16_t v35 = v37;
        v34 += 2;
        v35 += 2;
        v36 -= 32;
      }
      while (v36);
      if (v11 == a6) {
        goto LABEL_28;
      }
      if ((a6 & 0x18) != 0)
      {
LABEL_23:
        uint64_t v38 = v11;
        uint64_t v11 = a6 & 0xF8;
        int8x16_t v39 = (uint64_t *)(a3 + v38);
        int8x16_t v40 = (void *)((char *)&v66 + v38);
        uint64_t v41 = v38 - v11;
        do
        {
          uint64_t v42 = *v39++;
          *v40++ = v42;
          v41 += 8;
        }
        while (v41);
        if (v11 == a6) {
          goto LABEL_28;
        }
      }
    }
    uint64_t v43 = a6 - v11;
    int8x16_t v44 = (char *)&v66 + v11;
    int8x16_t v45 = (char *)(a3 + v11 * a4);
    do
    {
      *v44++ = *v45;
      v45 += a4;
      --v43;
    }
    while (v43);
    goto LABEL_28;
  }
  uint64_t v12 = a5 & 0xFE;
  if (a5 == v12)
  {
    uint64_t v13 = 0;
    int8x8_t v14 = (char *)&v66 + 4;
    int8x8_t v15 = (char *)(a3 + 1);
    do
    {
      int8x8_t v16 = v15;
      int16x4_t v17 = v14;
      uint64_t v18 = a5;
      do
      {
        char v19 = *(v16 - 1);
        char v20 = *v16;
        v16 += 2;
        *(v17 - 4) = v19;
        *int16x4_t v17 = v20;
        v17 += 8;
        v18 -= 2;
      }
      while (v18);
      ++v13;
      ++v14;
      v15 += a4;
    }
    while (v13 != a6);
  }
  else
  {
    uint64_t v21 = 0;
    int16x4_t v22 = (char *)&v66 + 4;
    int8x16_t v23 = (char *)(a3 + 1);
    int8x16_t v24 = (char *)&v66 + ((4 * a5) & 0x3F8);
    do
    {
      int8x16_t v25 = v23;
      int8x16_t v26 = v22;
      uint64_t v27 = a5 & 0xFE;
      do
      {
        char v28 = *(v25 - 1);
        char v29 = *v25;
        v25 += 2;
        *(v26 - 4) = v28;
        *int8x16_t v26 = v29;
        v26 += 8;
        v27 -= 2;
      }
      while (v27);
      int8x16_t v30 = (char *)(a3 + v21 * a4 + v12);
      int8x16_t v31 = v24;
      uint64_t v32 = a5 - v12;
      do
      {
        char v33 = *v30++;
        *int8x16_t v31 = v33;
        v31 += 4;
        --v32;
      }
      while (v32);
      ++v21;
      ++v22;
      v23 += a4;
      ++v24;
    }
    while (v21 != v10);
  }
LABEL_28:
  v61.i32[0] = v66;
  v61.i32[1] = BYTE4(v66);
  v61.i32[2] = BYTE1(v66);
  v61.i32[3] = BYTE5(v66);
  int v62 = BYTE8(v66);
  int v63 = BYTE12(v66);
  if (a5 >= 4) {
    unsigned int v46 = 4;
  }
  else {
    unsigned int v46 = a5;
  }
  if (a5 >= 4) {
    unsigned int v47 = a5 - 4;
  }
  else {
    unsigned int v47 = 0;
  }
  int v64 = BYTE9(v66);
  int v65 = BYTE13(v66);
  if (a6 >= 2) {
    unsigned int v48 = 2;
  }
  else {
    unsigned int v48 = a6;
  }
  if (a6 >= 2) {
    unsigned int v49 = a6 - 2;
  }
  else {
    unsigned int v49 = 0;
  }
  char v51 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v61, a7, v46, v48);
  v61.i32[0] = BYTE2(v66);
  v61.i32[1] = BYTE6(v66);
  v61.i32[2] = BYTE3(v66);
  v61.i32[3] = BYTE7(v66);
  int v62 = BYTE10(v66);
  int v63 = BYTE14(v66);
  int v64 = BYTE11(v66);
  int v65 = HIBYTE(v66);
  if (a6 >= 4) {
    unsigned int v52 = 2;
  }
  else {
    unsigned int v52 = v49;
  }
  int v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 4, &v61, a7, v46, v52);
  v61.i32[0] = v67;
  v61.i32[1] = BYTE4(v67);
  v61.i32[2] = BYTE1(v67);
  v61.i32[3] = BYTE5(v67);
  int v62 = BYTE8(v67);
  int v63 = BYTE12(v67);
  if (a5 >= 8) {
    unsigned int v54 = 4;
  }
  else {
    unsigned int v54 = v47;
  }
  int v64 = BYTE9(v67);
  int v65 = BYTE13(v67);
  int v55 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, &v61, a7, v54, v48);
  v61.i32[0] = BYTE2(v67);
  v61.i32[1] = BYTE6(v67);
  v61.i32[2] = BYTE3(v67);
  v61.i32[3] = BYTE7(v67);
  int v62 = BYTE10(v67);
  int v63 = BYTE14(v67);
  int v64 = BYTE11(v67);
  int v65 = HIBYTE(v67);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 12, &v61, a7, v54, v52);
  if (v55) {
    char v57 = 4;
  }
  else {
    char v57 = 0;
  }
  if (v53) {
    char v58 = 2;
  }
  else {
    char v58 = 0;
  }
  if (result) {
    char v59 = -8;
  }
  else {
    char v59 = -16;
  }
  *a2 = v59 | v57 | v51 | v58;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v124 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v9.i64[0] = 0x8000000080;
    v9.i64[1] = 0x8000000080;
    int32x4_t v10 = (int32x4_t)veorq_s8(*a2, v9);
    v11.i64[0] = 0x100000001;
    v11.i64[1] = 0x100000001;
    int8x16_t v7 = vbicq_s8((int8x16_t)v10, (int8x16_t)vceqq_s32(v10, v11));
    int32x4_t v12 = (int32x4_t)veorq_s8(a2[1], v9);
    int8x16_t v8 = vbicq_s8((int8x16_t)v12, (int8x16_t)vceqq_s32(v12, v11));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v6.i64[0] = 0x8000000080;
    v6.i64[1] = 0x8000000080;
    int8x16_t v7 = veorq_s8(*a2, v6);
    int8x16_t v8 = veorq_s8(a2[1], v6);
LABEL_5:
    int8x16_t v122 = v7;
    int8x16_t v123 = v8;
    unsigned int v13 = v7.i32[0];
    goto LABEL_7;
  }
  int8x16_t v14 = a2[1];
  int8x16_t v122 = *a2;
  int8x16_t v123 = v14;
  unsigned int v13 = v122.i32[0];
LABEL_7:
  if (a5) {
    BOOL v15 = a4 >= 2;
  }
  else {
    BOOL v15 = 0;
  }
  int v16 = !v15;
  if (v15)
  {
    unsigned int v18 = v122.u32[1];
    unsigned int v17 = v122.i32[1] < v13;
    if (v122.i32[1] >= v13) {
      unsigned int v19 = v13;
    }
    else {
      unsigned int v19 = v122.u32[1];
    }
    if (v13 > v122.i32[1]) {
      unsigned int v18 = v13;
    }
  }
  else
  {
    unsigned int v17 = 0;
    unsigned int v18 = v13;
    unsigned int v19 = v13;
  }
  BOOL v20 = a5 < 2 || a4 == 0;
  int v21 = v20;
  if (!v20)
  {
    if (v122.i32[2] < v19)
    {
      unsigned int v17 = 2;
      unsigned int v19 = v122.u32[2];
    }
    if (v18 <= v122.i32[2]) {
      unsigned int v18 = v122.u32[2];
    }
  }
  BOOL v22 = a5 >= 2 && a4 >= 2;
  int v23 = !v22;
  if (v22)
  {
    if (v122.i32[3] < v19)
    {
      unsigned int v17 = 3;
      unsigned int v19 = v122.u32[3];
    }
    if (v18 <= v122.i32[3]) {
      unsigned int v18 = v122.u32[3];
    }
  }
  if (a5) {
    BOOL v24 = a4 >= 3;
  }
  else {
    BOOL v24 = 0;
  }
  int v25 = !v24;
  if (v24)
  {
    if (v123.i32[0] < v19)
    {
      unsigned int v17 = 4;
      unsigned int v19 = v123.i32[0];
    }
    if (v18 <= v123.i32[0]) {
      unsigned int v18 = v123.i32[0];
    }
  }
  if (a5) {
    BOOL v26 = a4 >= 4;
  }
  else {
    BOOL v26 = 0;
  }
  int v27 = !v26;
  if (v26)
  {
    if (v123.i32[1] < v19)
    {
      unsigned int v17 = 5;
      unsigned int v19 = v123.u32[1];
    }
    if (v18 <= v123.i32[1]) {
      unsigned int v18 = v123.u32[1];
    }
  }
  BOOL v28 = a5 >= 2 && a4 >= 3;
  int v29 = !v28;
  if (v28)
  {
    if (v123.i32[2] < v19)
    {
      unsigned int v17 = 6;
      unsigned int v19 = v123.u32[2];
    }
    if (v18 <= v123.i32[2]) {
      unsigned int v18 = v123.u32[2];
    }
  }
  BOOL v30 = a5 >= 2 && a4 >= 4;
  int v31 = !v30;
  if (v30)
  {
    if (v123.i32[3] < v19)
    {
      unsigned int v17 = 7;
      unsigned int v19 = v123.u32[3];
    }
    if (v18 <= v123.i32[3]) {
      unsigned int v18 = v123.u32[3];
    }
  }
  unsigned int v32 = v18 - v19;
  int v33 = __clz(v18 - v19);
  unsigned int v34 = 32 - v33;
  if (v33 > 32) {
    unsigned int v34 = -1;
  }
  if (v18) {
    BOOL v35 = v18 == 255;
  }
  else {
    BOOL v35 = 1;
  }
  int v36 = !v35;
  if (v34 < 2 && v18 == v19) {
    unsigned int v38 = v36;
  }
  else {
    unsigned int v38 = v34 + 1;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v39 = 0;
    if (v19 <= 0x7F && v18 >= 0x80) {
      BOOL v39 = kDQuadParamTable[10 * v38 + 8] == 0;
    }
  }
  else
  {
    BOOL v39 = 0;
  }
  if (v38 > 5 || v39)
  {
    unsigned int v41 = kDQuadParamTable[10 * v38 + 4];
    int v42 = v39 ? 0 : -2;
    int v43 = v41 >= 8 ? 0 : v19 & ~(-1 << (8 - v41));
    int v44 = v43 + v42;
    if (v44 >= 1 && __clz(v44 + v32) < v33) {
      ++v38;
    }
  }
  uint64_t v46 = (uint64_t)&kDQuadParamTable[10 * v38];
  unint64_t v45 = *(void *)(v46 + 8);
  LODWORD(v47) = *(_DWORD *)(v46 + 16);
  LODWORD(v46) = *(_DWORD *)(v46 + 20);
  if (a4) {
    BOOL v48 = a5 == 0;
  }
  else {
    BOOL v48 = 1;
  }
  int v49 = v48;
  if (a3 == 4)
  {
    if (a5) {
      BOOL v50 = a4 == 0;
    }
    else {
      BOOL v50 = 1;
    }
    int v51 = !v50;
  }
  else
  {
    int v51 = 0;
  }
  unint64_t v52 = 0;
  unsigned int v53 = 0;
  if (v45 >> v46 > 0x10) {
    int v54 = 1;
  }
  else {
    int v54 = v51;
  }
  memset(v119, 0, sizeof(v119));
  int v120 = 0;
  if (v46 >= 8) {
    uint64_t v46 = 8;
  }
  else {
    uint64_t v46 = v46;
  }
  if (v47 >= 8) {
    uint64_t v47 = 8;
  }
  else {
    uint64_t v47 = v47;
  }
  unsigned int v55 = v19 & (-1 << (8 - v47));
  unsigned int v56 = v13 - v55;
  if (v49) {
    unsigned int v56 = 0;
  }
  BOOL v20 = v16 == 0;
  unsigned __int32 v57 = v122.i32[1] - v55;
  if (!v20) {
    unsigned __int32 v57 = 0;
  }
  v121[0] = v56;
  v121[1] = v57;
  unint64_t v58 = v17;
  unint64_t v59 = v45 >> v46;
  if (v21) {
    unsigned __int32 v60 = 0;
  }
  else {
    unsigned __int32 v60 = v122.i32[2] - v55;
  }
  BOOL v20 = v23 == 0;
  unsigned __int32 v61 = v122.i32[3] - v55;
  if (!v20) {
    unsigned __int32 v61 = 0;
  }
  v121[2] = v60;
  v121[3] = v61;
  unsigned __int32 v62 = v123.i32[0] - v55;
  if (v25) {
    unsigned __int32 v62 = 0;
  }
  unsigned __int32 v63 = v123.i32[1] - v55;
  if (v27) {
    unsigned __int32 v63 = 0;
  }
  v121[4] = v62;
  v121[5] = v63;
  unsigned __int32 v64 = v123.i32[2] - v55;
  if (v29) {
    unsigned __int32 v64 = 0;
  }
  unsigned __int32 v65 = v123.i32[3] - v55;
  if (v31) {
    unsigned __int32 v65 = 0;
  }
  v121[6] = v64;
  v121[7] = v65;
  if (v59 <= 1) {
    unint64_t v66 = 1;
  }
  else {
    unint64_t v66 = v45 >> v46;
  }
  uint64_t v67 = 4 * v17;
  uint64_t v68 = &byte_242EA911D;
  do
  {
    if (v67 != v52)
    {
      if (v46) {
        unint64_t v69 = v121[v52 / 4] / v66;
      }
      else {
        LODWORD(v69) = 0;
      }
      *((_DWORD *)v119 + v53) = v69;
      if (v59 >= 2)
      {
        unint64_t v70 = v121[v52 / 4];
        if (v70)
        {
          if (v70 / v66 * v66 == v70 && ((v70 / v66) & 1) != 0)
          {
            if (v55 || v69 != 1)
            {
              if ((a3 | 2) != 3 || (uint64_t v72 = v122.u32[v52 / 4], v72 != 128) && ((a3 | 2) != 3 || v66 + 128 != v72))
              {
                LODWORD(v69) = v69 - 1;
                *((_DWORD *)v119 + v53) = v69;
              }
            }
            else
            {
              LODWORD(v69) = 1;
            }
          }
        }
      }
      if ((unint64_t)v69 >> v46 || v122.i32[v52 / 4] == 255) {
        *((_DWORD *)v119 + v53) = ~(-1 << v46);
      }
      if (*v68 >= a5 || *(v68 - 1) >= a4) {
        *((_DWORD *)v119 + v53) = 0;
      }
      ++v53;
    }
    v52 += 4;
    v68 += 2;
  }
  while (v52 != 32);
  uint64_t result = v54 | v49;
  int8x16_t v74 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v75 = 8 * (a1 & 7);
  *(_DWORD *)a1 = 0;
  if (result == 1)
  {
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = v75;
    do
    {
      int8x16_t v79 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v76;
      if (v79[1] >= a5 || *v79 >= a4) {
        unint64_t v81 = 0;
      }
      else {
        unint64_t v81 = (unint64_t)v122.u32[v76] >> 4;
      }
      if ((unint64_t)(v78 - v75 + (v77 << 6) - 29) >= 0xFFFFFFFFFFFFFFDFLL)
      {
        uint64_t v82 = 0;
        unint64_t v83 = 4;
        do
        {
          unint64_t v84 = 64 - v78;
          if (64 - v78 >= v83) {
            unint64_t v84 = v83;
          }
          v74[v77] |= ((v81 >> v82) & ~(-1 << v84)) << v78;
          v82 += v84;
          unint64_t v85 = v84 + v78;
          v77 += v85 >> 6;
          uint64_t v78 = v85 & 0x3F;
          v83 -= v84;
        }
        while (v83);
      }
      ++v76;
    }
    while (v76 != 8);
    return result;
  }
  if (v19 | v38)
  {
    uint64_t v86 = v75 | 3;
    LODWORD(v87) = (v38 + 6) & 7;
    if (v38 < 3) {
      unint64_t v88 = v38 + 1;
    }
    else {
      unint64_t v88 = 0;
    }
    if (v38 >= 3) {
      uint64_t v87 = v87;
    }
    else {
      uint64_t v87 = 0;
    }
    *v74 |= v87 << v75;
    if (v38 >= 3)
    {
      uint64_t v90 = 0;
      int v94 = 3;
      if (!v47) {
        goto LABEL_234;
      }
LABEL_229:
      if ((unint64_t)(v47 - v75 + v86 + (v90 << 6)) <= 0x20)
      {
        uint64_t v95 = 0;
        unint64_t v96 = v47;
        do
        {
          unint64_t v97 = 64 - v86;
          if (64 - v86 >= v96) {
            unint64_t v97 = v96;
          }
          v74[v90] |= (((unint64_t)(v55 >> (8 - v47)) >> v95) & ~(-1 << v97)) << v86;
          v95 += v97;
          unint64_t v98 = v97 + v86;
          v90 += v98 >> 6;
          uint64_t v86 = v98 & 0x3F;
          v96 -= v97;
        }
        while (v96);
      }
      goto LABEL_234;
    }
    unint64_t v89 = 2 * (v38 < 3);
  }
  else
  {
    unint64_t v88 = 0;
    uint64_t v86 = v75 | 3;
    unint64_t v89 = 2;
  }
  if (v89 - v75 + v86 <= 0x20)
  {
    uint64_t v90 = 0;
    uint64_t v91 = 0;
    do
    {
      unint64_t v92 = 64 - v86;
      if (64 - v86 >= v89) {
        unint64_t v92 = v89;
      }
      v74[v90] |= ((v88 >> v91) & ~(-1 << v92)) << v86;
      v91 += v92;
      unint64_t v93 = v92 + v86;
      v90 += v93 >> 6;
      uint64_t v86 = v93 & 0x3F;
      v89 -= v92;
    }
    while (v89);
  }
  else
  {
    uint64_t v90 = 0;
  }
  int v94 = 5;
  if (!v38) {
    goto LABEL_235;
  }
  if (v47) {
    goto LABEL_229;
  }
LABEL_234:
  v94 += v47;
LABEL_235:
  if (v46)
  {
    if ((unint64_t)(v86 - v75 + (v90 << 6) + 3) <= 0x20)
    {
      uint64_t v99 = 0;
      unint64_t v100 = 3;
      do
      {
        unint64_t v101 = 64 - v86;
        if (64 - v86 >= v100) {
          unint64_t v101 = v100;
        }
        v74[v90] |= ((v58 >> v99) & ~(-1 << v101)) << v86;
        v99 += v101;
        unint64_t v102 = v101 + v86;
        v90 += v102 >> 6;
        uint64_t v86 = v102 & 0x3F;
        v100 -= v101;
      }
      while (v100);
    }
    v94 += 3;
  }
  unsigned int v103 = (((37 * (32 - v94)) >> 8)
        + (((32 - v94 - ((unsigned __int16)(37 * (32 - v94)) >> 8)) & 0xFE) >> 1)) >> 2;
  unint64_t v104 = -7 * v103 + 32 - v94;
  if ((v104 - 257) >= 0xFFFFFF00 && v86 - v75 + (v90 << 6) + v104 <= 0x20)
  {
    do
    {
      unint64_t v105 = 64 - v86;
      if (64 - v86 >= v104) {
        unint64_t v105 = v104;
      }
      unint64_t v106 = v105 + v86;
      v90 += v106 >> 6;
      uint64_t v86 = v106 & 0x3F;
      v104 -= v105;
    }
    while (v104);
  }
  uint64_t v107 = 0;
  unint64_t v108 = v103 - v46;
  if (v108) {
    BOOL v109 = v108 > 0x100;
  }
  else {
    BOOL v109 = 1;
  }
  char v110 = v109;
  do
  {
    if (v46 && (unint64_t)(v46 - v75 + v86 + (v90 << 6)) <= 0x20)
    {
      uint64_t v111 = 0;
      unint64_t v112 = *((unsigned int *)v119 + v107);
      unint64_t v113 = v46;
      do
      {
        unint64_t v114 = 64 - v86;
        if (64 - v86 >= v113) {
          unint64_t v114 = v113;
        }
        v74[v90] |= ((v112 >> v111) & ~(-1 << v114)) << v86;
        v111 += v114;
        unint64_t v115 = v114 + v86;
        v90 += v115 >> 6;
        uint64_t v86 = v115 & 0x3F;
        v113 -= v114;
      }
      while (v113);
    }
    if ((v110 & 1) == 0 && v86 - v75 + (v90 << 6) + v108 <= 0x20)
    {
      unint64_t v116 = v108;
      do
      {
        unint64_t v117 = 64 - v86;
        if (64 - v86 >= v116) {
          unint64_t v117 = v116;
        }
        unint64_t v118 = v117 + v86;
        v90 += v118 >> 6;
        uint64_t v86 = v118 & 0x3F;
        v116 -= v117;
      }
      while (v116);
    }
    ++v107;
  }
  while (v107 != 7);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(void *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4 = 8 * (a3 & 7);
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v4 + 12;
  unint64_t v7 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v4;
  if (v4 >= 0x35) {
    v7 |= *(void *)(v5 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v8 = (8 * (a3 & 7)) | 0x80;
  int8x16_t v9 = vdupq_n_s8(((a4 >> 5) | (8 * v7)) & 0xF);
  v10.i64[0] = 0x303030303030303;
  v10.i64[1] = 0x303030303030303;
  int8x16_t v11 = vandq_s8(v9, v10);
  int8x16_t v12 = vbicq_s8(vdupq_n_s8(((v7 >> 1) & 7) + 1), vceqq_s8(v11, v10));
  v10.i64[0] = 0x202020202020202;
  v10.i64[1] = 0x202020202020202;
  int8x16_t v13 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)0x4000400040004)))), v10);
  if (vmaxvq_s8(v13) < 1)
  {
    int v23 = 0;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int8x16_t v25 = v12;
    int8x16_t v26 = v12;
    int8x16_t v27 = v12;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    int8x16_t v29 = v12;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
  }
  else
  {
    int16x8_t v14 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v13, v13));
    int32x4_t v15 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v14, v14));
    unint64_t v16 = vpaddq_s32(v15, v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19 + v6;
    if (v19 <= 0x80 && v8 >= v20)
    {
      int64x2_t v32 = vaddq_s64(vzip1q_s64((int64x2_t)0, v18), vdupq_n_s64(v6 & 0x3C));
      int v33 = (int64x2_t *)(v5 + ((v6 >> 3) & 8));
      int32x4_t v22 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v33, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33->i64[0], 0), (uint64x2_t)vnegq_s64(v32)));
      if (v19 + (v6 & 0x3C) < 0x81)
      {
        int v23 = 0;
      }
      else
      {
        int v23 = 0;
        int32x4_t v22 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v33[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), (int8x16_t)v22);
      }
      unint64_t v6 = v20;
    }
    else
    {
      int32x4_t v22 = 0uLL;
      int v23 = 1;
    }
    int32x2_t v34 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL));
    v35.i64[0] = v34.u32[0];
    v35.i64[1] = v34.u32[1];
    int32x4_t v36 = (int32x4_t)vshlq_u64((uint64x2_t)v22, (uint64x2_t)vnegq_s64(v35));
    *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v22);
    *(int32x2_t *)v36.i8 = vmovn_s64((int64x2_t)v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s32(v22, v36);
    int16x8_t v38 = (int16x8_t)vshlq_u32((uint32x4_t)v37, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL)))));
    *(int16x4_t *)v37.i8 = vmovn_s32((int32x4_t)v37);
    *(int16x4_t *)v38.i8 = vmovn_s32((int32x4_t)v38);
    int16x8_t v39 = vzip1q_s16(v37, v38);
    *(int8x8_t *)v39.i8 = vzip1_s8(vmovn_s16(v39), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v39, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v9.i8))))));
    v37.i64[0] = 0x101010101010101;
    v37.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8((int8x16_t)v37, v13);
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v40.i64[0] = vandq_s8((int8x16_t)v39, vaddq_s8(v40, (int8x16_t)v37)).u64[0];
    int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
    int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 1);
    int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 2);
    int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 3);
    int8x16_t v29 = vsubq_s8(v12, v41);
    int8x16_t v27 = vsubq_s8(v12, v42);
    int8x16_t v26 = vsubq_s8(v12, v43);
    int8x16_t v25 = vsubq_s8(v12, v44);
    int8x16_t v31 = vceqzq_s8(v41);
    int8x16_t v30 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v24 = vceqzq_s8(v44);
  }
  v45.i64[0] = 0x707070707070707;
  v45.i64[1] = 0x707070707070707;
  int32x4_t v46 = 0uLL;
  int8x16_t v47 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v9, v45), (int8x16_t)0, 0xFuLL), v12);
  int16x8_t v48 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v47, v47));
  int32x4_t v49 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v48, v48));
  unint64_t v50 = vpaddq_s32(v49, v49).u64[0];
  v51.i64[0] = v50;
  v51.i64[1] = HIDWORD(v50);
  int64x2_t v52 = v51;
  unint64_t v53 = vaddvq_s64(v51);
  unint64_t v54 = v53 + v6;
  if (v53 <= 0x80 && v8 >= v54)
  {
    unint64_t v56 = v6 & 0x3F;
    int64x2_t v57 = vaddq_s64(vzip1q_s64((int64x2_t)0, v52), vdupq_n_s64(v56));
    unint64_t v58 = (int64x2_t *)(v5 + 8 * (v6 >> 6));
    int32x4_t v46 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v58, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58->i64[0], 0), (uint64x2_t)vnegq_s64(v57)));
    if (v53 + v56 >= 0x81) {
      int32x4_t v46 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v58[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v57))), (int8x16_t)v46);
    }
    unint64_t v6 = v54;
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v59 = vandq_s8(v29, (int8x16_t)xmmword_242EA7380);
  int v60 = (a4 >> 5) & 3;
  if (v60 != 2)
  {
    unsigned int v64 = 0;
    unsigned int v62 = 0;
    unint64_t v65 = v6;
    goto LABEL_34;
  }
  unint64_t v61 = v6 + 4;
  if (v8 < v6 + 4)
  {
    unsigned int v62 = 0;
    unint64_t v61 = v6;
LABEL_33:
    unsigned int v64 = 0;
    int v23 = 1;
    unint64_t v65 = v61;
    goto LABEL_34;
  }
  uint64_t v66 = *(void *)(v5 + 8 * (v6 >> 6)) >> v6;
  if ((v6 & 0x3F) >= 0x3D) {
    v66 |= *(void *)(v5 + 8 * (v6 >> 6) + 8) << -(v6 & 0x3F);
  }
  unint64_t v65 = v6 + 8;
  unsigned int v62 = (int)(v66 << 28) >> 28;
  if (v8 < v6 + 8) {
    goto LABEL_33;
  }
  uint64_t v63 = *(void *)(v5 + 8 * (v61 >> 6)) >> v61;
  if ((v61 & 0x3F) >= 0x3D) {
    v63 |= *(void *)(v5 + 8 * (v61 >> 6) + 8) << -(v61 & 0x3F);
  }
  unsigned int v64 = (int)(v63 << 28) >> 28;
LABEL_34:
  int8x16_t v67 = vandq_s8(v27, (int8x16_t)xmmword_242EA7390);
  v59.i8[0] = 0;
  int16x8_t v68 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v65;
  int32x4_t v75 = 0uLL;
  if (v73 <= 0x80 && v8 >= v74)
  {
    unint64_t v78 = v65 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v78));
    int8x16_t v80 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v73 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v65 = v74;
  }
  else
  {
    int v23 = 1;
    int32x4_t v77 = 0uLL;
  }
  int8x16_t v81 = vandq_s8(v26, (int8x16_t)xmmword_242EA7390);
  int16x8_t v82 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int32x4_t v83 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v82, v82));
  unint64_t v84 = vpaddq_s32(v83, v83).u64[0];
  v85.i64[0] = v84;
  v85.i64[1] = HIDWORD(v84);
  int64x2_t v86 = v85;
  unint64_t v87 = vaddvq_s64(v85);
  if (v87 < 0x81)
  {
    int32x2_t v88 = vzip1_s32(*(int32x2_t *)v83.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL));
    v89.i64[0] = v88.u32[0];
    v89.i64[1] = v88.u32[1];
    int64x2_t v90 = v89;
    int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v82.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v82, (int8x16_t)v82, 8uLL)));
    int16x8_t v92 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)));
    unint64_t v93 = v87 + v65;
    if (v8 >= v87 + v65)
    {
      unint64_t v94 = v65 & 0x3F;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v86), vdupq_n_s64(v94));
      unint64_t v96 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v75 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v87 + v94 >= 0x81) {
        int32x4_t v75 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), (int8x16_t)v75);
      }
      unint64_t v65 = v93;
    }
    else
    {
      int v23 = 1;
    }
    int32x4_t v97 = (int32x4_t)vshlq_u64((uint64x2_t)v75, (uint64x2_t)vnegq_s64(v90));
    *(int32x2_t *)v75.i8 = vmovn_s64((int64x2_t)v75);
    *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
    int16x8_t v98 = (int16x8_t)vzip1q_s32(v75, v97);
    int16x8_t v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32(v91));
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    int16x8_t v100 = vzip1q_s16(v98, v99);
    int16x8_t v101 = (int16x8_t)vshlq_u16((uint16x8_t)v100, (uint16x8_t)vnegq_s16(v92));
    *(int8x8_t *)v100.i8 = vmovn_s16(v100);
    *(int8x8_t *)v101.i8 = vmovn_s16(v101);
    int32x4_t v75 = (int32x4_t)vzip1q_s8((int8x16_t)v100, (int8x16_t)v101);
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v102 = vandq_s8(v25, (int8x16_t)xmmword_242EA7390);
  int16x8_t v103 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v81, v81));
  int32x4_t v104 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v103, v103));
  unint64_t v105 = vpaddq_s32(v104, v104).u64[0];
  v106.i64[0] = v105;
  v106.i64[1] = HIDWORD(v105);
  int64x2_t v107 = v106;
  unint64_t v108 = vaddvq_s64(v106);
  if (v108 <= 0x80)
  {
    int32x2_t v110 = vzip1_s32(*(int32x2_t *)v104.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v104, (int8x16_t)v104, 8uLL));
    v111.i64[0] = v110.u32[0];
    v111.i64[1] = v110.u32[1];
    int64x2_t v112 = v111;
    int32x4_t v113 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v103.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v103, (int8x16_t)v103, 8uLL)));
    int16x8_t v114 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
    unint64_t v115 = v108 + v65;
    if (v8 >= v108 + v65)
    {
      unint64_t v117 = v65 & 0x3F;
      int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v107), vdupq_n_s64(v117));
      int8x16_t v119 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
      if (v108 + v117 >= 0x81) {
        int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v116);
      }
      unint64_t v65 = v115;
    }
    else
    {
      int32x4_t v116 = 0uLL;
      int v23 = 1;
    }
    int32x4_t v120 = (int32x4_t)vshlq_u64((uint64x2_t)v116, (uint64x2_t)vnegq_s64(v112));
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v120.i8 = vmovn_s64((int64x2_t)v120);
    int16x8_t v121 = (int16x8_t)vzip1q_s32(v116, v120);
    int16x8_t v122 = (int16x8_t)vshlq_u32((uint32x4_t)v121, (uint32x4_t)vnegq_s32(v113));
    *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v121);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v122);
    int16x8_t v123 = vzip1q_s16(v121, v122);
    int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)v123, (uint16x8_t)vnegq_s16(v114));
    *(int8x8_t *)v123.i8 = vmovn_s16(v123);
    *(int8x8_t *)v124.i8 = vmovn_s16(v124);
    int8x16_t v109 = vzip1q_s8((int8x16_t)v123, (int8x16_t)v124);
  }
  else
  {
    int v23 = 1;
    int8x16_t v109 = 0uLL;
  }
  int16x8_t v125 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v102, v102));
  int32x4_t v126 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v125, v125));
  unint64_t v127 = vpaddq_s32(v126, v126).u64[0];
  v128.i64[0] = v127;
  v128.i64[1] = HIDWORD(v127);
  int64x2_t v129 = v128;
  unint64_t v130 = vaddvq_s64(v128);
  if (v130 > 0x80 || v8 < v130 + v65) {
    goto LABEL_64;
  }
  int64x2_t v131 = vaddq_s64(vzip1q_s64((int64x2_t)0, v129), vdupq_n_s64(v65 & 0x3F));
  int8x16_t v132 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
  int64x2_t v133 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
  if (v130 + (v65 & 0x3F) >= 0x81) {
    int64x2_t v133 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), (int8x16_t)v133);
  }
  if (v23 || (uint64_t v134 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v134) - (v130 + v65) >= 9))
  {
LABEL_64:
    uint64_t v134 = 0;
    v191 |= 255 << (8 * ((&v191 + 7) & 7u));
    *a1 = 0;
    *(void *)((char *)a1 + a2) = 0;
    *(void *)((char *)a1 + 2 * a2) = 0;
    *(void *)((char *)a1 + 3 * a2) = 0;
  }
  else
  {
    int32x2_t v136 = vzip1_s32(*(int32x2_t *)v49.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL));
    int32x2_t v137 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v138.i64[0] = v136.u32[0];
    v138.i64[1] = v136.u32[1];
    int64x2_t v139 = v138;
    v138.i64[0] = v137.u32[0];
    v138.i64[1] = v137.u32[1];
    int32x4_t v140 = (int32x4_t)vshlq_u64((uint64x2_t)v46, (uint64x2_t)vnegq_s64(v139));
    int32x4_t v141 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v46.i8 = vmovn_s64((int64x2_t)v46);
    *(int32x2_t *)v140.i8 = vmovn_s64((int64x2_t)v140);
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v141);
    int16x8_t v142 = (int16x8_t)vzip1q_s32(v46, v140);
    int16x8_t v143 = (int16x8_t)vzip1q_s32(v77, v141);
    int16x8_t v144 = (int16x8_t)vshlq_u32((uint32x4_t)v142, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v48.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v48, (int8x16_t)v48, 8uLL)))));
    int16x8_t v145 = (int16x8_t)vshlq_u32((uint32x4_t)v143, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v142.i8 = vmovn_s32((int32x4_t)v142);
    *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
    *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
    *(int16x4_t *)v145.i8 = vmovn_s32((int32x4_t)v145);
    int16x8_t v146 = vzip1q_s16(v142, v144);
    int16x8_t v147 = vzip1q_s16(v143, v145);
    int16x8_t v148 = (int16x8_t)vshlq_u16((uint16x8_t)v146, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    int16x8_t v149 = (int16x8_t)vshlq_u16((uint16x8_t)v147, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v146.i8 = vmovn_s16(v146);
    *(int8x8_t *)v148.i8 = vmovn_s16(v148);
    *(int8x8_t *)v147.i8 = vmovn_s16(v147);
    *(int8x8_t *)v149.i8 = vmovn_s16(v149);
    v150.i64[0] = 0x808080808080808;
    v150.i64[1] = 0x808080808080808;
    v151.i64[0] = 0x808080808080808;
    v151.i64[1] = 0x808080808080808;
    unint64_t v152 = v7 >> 4;
    int8x16_t v153 = vzip1q_s8((int8x16_t)v146, (int8x16_t)v148);
    v148.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v148.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v154 = vzip1q_s8((int8x16_t)v147, (int8x16_t)v149);
    v149.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v149.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v155 = vsubq_s8(v151, v67);
    *(int32x2_t *)v143.i8 = vzip1_s32(*(int32x2_t *)v126.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v126, (int8x16_t)v126, 8uLL));
    v156.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v156.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v157.i64[0] = 0x808080808080808;
    v157.i64[1] = 0x808080808080808;
    int32x4_t v158 = (int32x4_t)vaddq_s8(v67, (int8x16_t)v149);
    v138.i64[0] = v143.u32[0];
    v138.i64[1] = v143.u32[1];
    int8x16_t v159 = vshlq_s8(vshlq_s8(v153, vsubq_s8(v150, v47)), vaddq_s8(v47, (int8x16_t)v148));
    int8x16_t v160 = vshlq_s8(vshlq_s8(v154, vsubq_s8(v151, v59)), vaddq_s8(v59, (int8x16_t)v149));
    int8x16_t v161 = vshlq_s8(vshlq_s8((int8x16_t)v75, v155), (int8x16_t)v158);
    int8x16_t v162 = vshlq_s8(vshlq_s8(v109, vsubq_s8(v151, v81)), vaddq_s8(v81, (int8x16_t)v149));
    int32x4_t v163 = (int32x4_t)vshlq_u64((uint64x2_t)v133, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v158.i8 = vmovn_s64(v133);
    *(int32x2_t *)v163.i8 = vmovn_s64((int64x2_t)v163);
    int16x8_t v164 = (int16x8_t)vzip1q_s32(v158, v163);
    int16x8_t v165 = (int16x8_t)vshlq_u32((uint32x4_t)v164, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v125.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125, 8uLL)))));
    *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
    *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
    int16x8_t v166 = vzip1q_s16(v164, v165);
    int16x8_t v167 = (int16x8_t)vshlq_u16((uint16x8_t)v166, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v102.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL)))));
    *(int8x8_t *)v166.i8 = vmovn_s16(v166);
    *(int8x8_t *)v167.i8 = vmovn_s16(v167);
    int8x16_t v168 = vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v166, (int8x16_t)v167), vsubq_s8(v157, v102)), vaddq_s8(v102, v156));
    if (v60 == 2)
    {
      v169.i64[0] = 0xFFFF0000FFFF0000;
      v169.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v170 = vmlaq_s8(vandq_s8(vdupq_n_s8(v64), v169), vdupq_n_s8(v62), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v160 = vaddq_s8(v160, v170);
      int8x16_t v161 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v64), v170), v161);
      int8x16_t v162 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62), v170), v162);
      int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62 + 2 * v64), v170), v168);
    }
    int8x8_t v171 = (int8x8_t)vdupq_n_s8(v152).u64[0];
    int8x16_t v172 = vaddq_s8(vandq_s8(v159, v31), v160);
    int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v159.i8, 0);
    int8x16_t v174 = vsubq_s8(v172, vandq_s8(v173, v31));
    int8x16_t v175 = vsubq_s8(v161, vandq_s8(v173, v30));
    int8x16_t v176 = vsubq_s8(v162, vandq_s8(v173, v28));
    int8x16_t v177 = vsubq_s8(v168, vandq_s8(v173, v24));
    v178.i64[0] = 0x101010101010101;
    v178.i64[1] = 0x101010101010101;
    if (vaddlvq_s8(vceqq_s8(v11, v178)))
    {
      int8x16_t v179 = v174;
      v179.i8[0] = v174.i8[7];
      v179.i8[7] = v174.i8[0];
      int8x16_t v180 = vnegq_s8(vandq_s8(v9, v178));
      int8x16_t v181 = vbslq_s8(v180, v179, v174);
      int8x16_t v182 = vaddq_s8(vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73B0), v180), v181);
      v174.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73C0), v180), v182).u64[0];
      int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA73D0), v180), v175);
      v175.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA73E0), v180), v183).u64[0];
      int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA73F0), v180), v176);
      v176.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA7400), v180), v184).u64[0];
      int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7410), v180), v177);
      v177.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA7420), v180), v185).u64[0];
    }
    int16x4_t v186 = (int16x4_t)vadd_s8(v171, *(int8x8_t *)v174.i8);
    int16x4_t v187 = (int16x4_t)vadd_s8(*(int8x8_t *)v176.i8, v171);
    *a1 = vuzp1_s16(v186, v187);
    *(int16x4_t *)((char *)a1 + a2) = vuzp2_s16(v186, v187);
    int8x16_t v188 = (int16x4_t *)((char *)a1 + 2 * a2);
    int16x4_t v189 = (int16x4_t)vadd_s8(*(int8x8_t *)v175.i8, v171);
    int16x4_t v190 = (int16x4_t)vadd_s8(*(int8x8_t *)v177.i8, v171);
    int16x4_t *v188 = vuzp1_s16(v189, v190);
    *(int16x4_t *)((char *)v188 + a2) = vuzp2_s16(v189, v190);
  }
  return v134;
}

unsigned char *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(unsigned char *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v5 = 0;
  uint64_t v208 = *MEMORY[0x263EF8340];
  unsigned int v6 = a5 & 0xFFFFFFFD;
  unsigned int v194 = a4;
  uint64_t v193 = a3;
  do
  {
    uint64_t v23 = a3 + 4 * v5;
    int8x16_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = 8 * (v23 & 7);
    if ((a4 >> v5))
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = v25;
      do
      {
        if ((unint64_t)(v28 - v25 + (v27 << 6) - 29) < 0xFFFFFFFFFFFFFFDFLL)
        {
          char v29 = 0;
        }
        else
        {
          char v29 = 0;
          uint64_t v33 = 0;
          unint64_t v34 = 4;
          do
          {
            if (64 - v28 >= v34) {
              unint64_t v35 = v34;
            }
            else {
              unint64_t v35 = 64 - v28;
            }
            v29 |= (unint64_t)((v24[v27] >> v28) & ~(-1 << v35)) << v33;
            v33 += v35;
            unint64_t v36 = v35 + v28;
            v27 += v36 >> 6;
            uint64_t v28 = v36 & 0x3F;
            v34 -= v35;
          }
          while (v34);
        }
        int v30 = 16 * (v29 & 0xF);
        int v31 = v30 - (v29 & 1) + 8;
        if (v30 == 240) {
          int v31 = 255;
        }
        if (!v30) {
          int v31 = 0;
        }
        if (v30 == 128 && v6 == 1) {
          int v31 = v30;
        }
        if (a5 == 4) {
          int v31 = v30;
        }
        *(&v195 + v26++) = v31 ^ (((a5 & 0xFFFFFFFD) == 1) << 7);
      }
      while (v26 != 8);
      LOBYTE(v8) = v195;
      LOBYTE(v7) = v196;
      LOBYTE(v9) = v197;
      LOBYTE(v10) = v198;
      LOBYTE(v11) = v199;
      LOBYTE(v12) = v200;
      char v14 = v201;
      LOBYTE(v13) = v202;
      goto LABEL_3;
    }
    uint64_t v37 = v25 | 3;
    if (((*v24 >> v25) & 7) == 0)
    {
      uint64_t v39 = 0;
      if ((unint64_t)(v37 - v25) <= 0x1E)
      {
        char v134 = 0;
        uint64_t v135 = 0;
        unint64_t v136 = 2;
        do
        {
          unint64_t v137 = 64 - v37;
          if (64 - v37 >= v136) {
            unint64_t v137 = v136;
          }
          v134 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v137)) << v135;
          v135 += v137;
          unint64_t v138 = v137 + v37;
          v39 += v138 >> 6;
          uint64_t v37 = v138 & 0x3F;
          v136 -= v137;
        }
        while (v136);
        int v40 = v134 & 3;
        if (v40 == 2)
        {
          unsigned int v38 = 0;
          int v41 = 1;
          goto LABEL_30;
        }
        if (v40 == 1)
        {
          int v41 = 0;
          int v40 = 2;
          int v42 = 5;
          unsigned int v38 = 255;
          goto LABEL_31;
        }
        if (v40)
        {
          unsigned int v38 = 0;
          int v40 = 2;
          int v42 = 5;
          int v41 = 2;
          goto LABEL_31;
        }
      }
      unsigned int v38 = 0;
      int v41 = 0;
      int v40 = 2;
LABEL_30:
      int v42 = 5;
      goto LABEL_31;
    }
    unsigned int v38 = 0;
    uint64_t v39 = 0;
    int v40 = 0;
    int v41 = ((*v24 >> v25) & 7) + 2;
    int v42 = 3;
LABEL_31:
    int8x16_t v43 = &kDQuadParamTable[10 * v41];
    LODWORD(v44) = v43[4];
    unsigned int v45 = v43[5];
    if (v44 >= 8) {
      uint64_t v44 = 8;
    }
    else {
      uint64_t v44 = v44;
    }
    if (v45 >= 8) {
      uint64_t v46 = 8;
    }
    else {
      uint64_t v46 = v45;
    }
    char v47 = 8 - v44;
    if (v41)
    {
      if (v44)
      {
        if ((unint64_t)(v44 - v25 + v37 + (v39 << 6)) <= 0x20)
        {
          int v48 = 0;
          uint64_t v49 = 0;
          unint64_t v50 = v44;
          do
          {
            unint64_t v51 = 64 - v37;
            if (64 - v37 >= v50) {
              unint64_t v51 = v50;
            }
            v48 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v51)) << v49;
            v49 += v51;
            unint64_t v52 = v51 + v37;
            v39 += v52 >> 6;
            uint64_t v37 = v52 & 0x3F;
            v50 -= v51;
          }
          while (v50);
        }
        else
        {
          int v48 = 0;
        }
        int v42 = v44 + v40 + 3;
      }
      else
      {
        int v48 = 0;
      }
      unsigned int v38 = v48 << v47;
    }
    if (v46)
    {
      if ((unint64_t)(v37 - v25 + (v39 << 6) + 3) <= 0x20)
      {
        int v53 = 0;
        uint64_t v55 = 0;
        unint64_t v56 = 3;
        do
        {
          unint64_t v57 = 64 - v37;
          if (64 - v37 >= v56) {
            unint64_t v57 = v56;
          }
          v53 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v57)) << v55;
          v55 += v57;
          unint64_t v58 = v57 + v37;
          v39 += v58 >> 6;
          uint64_t v37 = v58 & 0x3F;
          v56 -= v57;
        }
        while (v56);
      }
      else
      {
        int v53 = 0;
      }
      uint64_t v204 = 0;
      uint64_t v205 = 0;
      int v207 = 0;
      uint64_t v206 = 0;
      unsigned int v59 = 29 - v42;
      unsigned int v60 = v59 / 7;
      uint64_t v61 = v46 - v25;
      unint64_t v62 = (v37 | (v39 << 6)) + v59 % 7;
      unint64_t v63 = v62 & 0x3F;
      if (v61 + v63 + (v62 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        uint64_t v54 = 0;
        uint64_t v64 = 0;
        unint64_t v65 = v62 >> 6;
        unint64_t v66 = v46;
        do
        {
          unint64_t v67 = 64 - v63;
          if (64 - v63 >= v66) {
            unint64_t v67 = v66;
          }
          v54 |= ((unint64_t)((v24[v65] >> v63) & ~(-1 << v67)) << v64);
          v64 += v67;
          unint64_t v68 = v67 + v63;
          v65 += v68 >> 6;
          unint64_t v63 = v68 & 0x3F;
          v66 -= v67;
        }
        while (v66);
        LODWORD(v204) = v54;
        unint64_t v62 = v63 | (v65 << 6);
      }
      else
      {
        uint64_t v54 = 0;
      }
      uint64_t v69 = v60 - v46;
      unint64_t v70 = v62 + v69;
      uint64_t v71 = (v62 + v69) & 0x3F;
      if (v61 + v71 + (v70 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v72 = 0;
        uint64_t v73 = 0;
        unint64_t v74 = v70 >> 6;
        unint64_t v75 = v46;
        do
        {
          unint64_t v76 = 64 - v71;
          if (64 - v71 >= v75) {
            unint64_t v76 = v75;
          }
          v72 |= (unint64_t)((v24[v74] >> v71) & ~(-1 << v76)) << v73;
          v73 += v76;
          unint64_t v77 = v76 + v71;
          v74 += v77 >> 6;
          uint64_t v71 = v77 & 0x3F;
          v75 -= v76;
        }
        while (v75);
        HIDWORD(v204) = v72;
        unint64_t v70 = v71 | (v74 << 6);
      }
      else
      {
        HIDWORD(v204) = 0;
      }
      unint64_t v78 = v70 + v69;
      uint64_t v79 = v78 & 0x3F;
      if (v61 + v79 + (v78 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v80 = 0;
        uint64_t v81 = 0;
        unint64_t v82 = v78 >> 6;
        unint64_t v83 = v46;
        do
        {
          unint64_t v84 = 64 - v79;
          if (64 - v79 >= v83) {
            unint64_t v84 = v83;
          }
          v80 |= (unint64_t)((v24[v82] >> v79) & ~(-1 << v84)) << v81;
          v81 += v84;
          unint64_t v85 = v84 + v79;
          v82 += v85 >> 6;
          uint64_t v79 = v85 & 0x3F;
          v83 -= v84;
        }
        while (v83);
        LODWORD(v205) = v80;
        unint64_t v78 = v79 | (v82 << 6);
      }
      else
      {
        LODWORD(v205) = 0;
      }
      unint64_t v86 = v78 + v69;
      uint64_t v87 = v86 & 0x3F;
      if (v61 + v87 + (v86 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v88 = 0;
        uint64_t v89 = 0;
        unint64_t v90 = v86 >> 6;
        unint64_t v91 = v46;
        do
        {
          unint64_t v92 = 64 - v87;
          if (64 - v87 >= v91) {
            unint64_t v92 = v91;
          }
          v88 |= (unint64_t)((v24[v90] >> v87) & ~(-1 << v92)) << v89;
          v89 += v92;
          unint64_t v93 = v92 + v87;
          v90 += v93 >> 6;
          uint64_t v87 = v93 & 0x3F;
          v91 -= v92;
        }
        while (v91);
        HIDWORD(v205) = v88;
        unint64_t v86 = v87 | (v90 << 6);
      }
      else
      {
        HIDWORD(v205) = 0;
      }
      unint64_t v94 = v86 + v69;
      uint64_t v95 = v94 & 0x3F;
      if (v61 + v95 + (v94 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v96 = 0;
        uint64_t v97 = 0;
        unint64_t v98 = v94 >> 6;
        unint64_t v99 = v46;
        do
        {
          unint64_t v100 = 64 - v95;
          if (64 - v95 >= v99) {
            unint64_t v100 = v99;
          }
          v96 |= (unint64_t)((v24[v98] >> v95) & ~(-1 << v100)) << v97;
          v97 += v100;
          unint64_t v101 = v100 + v95;
          v98 += v101 >> 6;
          uint64_t v95 = v101 & 0x3F;
          v99 -= v100;
        }
        while (v99);
        LODWORD(v206) = v96;
        unint64_t v94 = v95 | (v98 << 6);
      }
      else
      {
        LODWORD(v206) = 0;
      }
      unint64_t v102 = v94 + v69;
      unint64_t v103 = v102 >> 6;
      uint64_t v104 = v102 & 0x3F;
      if (v61 + v104 + (v102 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v105 = 0;
        uint64_t v106 = 0;
        unint64_t v107 = v46;
        do
        {
          unint64_t v108 = 64 - v104;
          if (64 - v104 >= v107) {
            unint64_t v108 = v107;
          }
          v105 |= (unint64_t)((v24[v103] >> v104) & ~(-1 << v108)) << v106;
          v106 += v108;
          unint64_t v109 = v108 + v104;
          v103 += v109 >> 6;
          uint64_t v104 = v109 & 0x3F;
          v107 -= v108;
        }
        while (v107);
      }
      else
      {
        int v105 = 0;
      }
      HIDWORD(v206) = v105;
      unint64_t v110 = (v104 | (v103 << 6)) + v69;
      uint64_t v111 = v110 & 0x3F;
      if (v61 + v111 + (v110 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v112 = 0;
        uint64_t v113 = 0;
        unint64_t v114 = v110 >> 6;
        unint64_t v115 = v46;
        do
        {
          unint64_t v116 = 64 - v111;
          if (64 - v111 >= v115) {
            unint64_t v116 = v115;
          }
          v112 |= (unint64_t)((v24[v114] >> v111) & ~(-1 << v116)) << v113;
          v113 += v116;
          unint64_t v117 = v116 + v111;
          v114 += v117 >> 6;
          uint64_t v111 = v117 & 0x3F;
          v115 -= v116;
        }
        while (v115);
      }
      else
      {
        int v112 = 0;
      }
      int v207 = v112;
    }
    else
    {
      int v53 = 0;
      uint64_t v54 = 0;
      uint64_t v204 = 0;
      uint64_t v205 = 0;
      int v207 = 0;
      uint64_t v206 = 0;
    }
    unint64_t v118 = *(void *)&kDQuadParamTable[10 * v41 + 2];
    if (v118 >> v46 <= 1) {
      unint64_t v119 = 1;
    }
    else {
      unint64_t v119 = v118 >> v46;
    }
    unint64_t v120 = v119 >> 1;
    unint64_t v121 = (unint64_t)(1 << v47) >> 1;
    if (v119 >> 1 < v121) {
      unint64_t v121 = v119 >> 1;
    }
    unint64_t v122 = 128 - v38;
    if (v38) {
      uint64_t v123 = v121;
    }
    else {
      uint64_t v123 = 0;
    }
    BOOL v124 = v38 == 128;
    if (v38 >= 0xFF) {
      char v125 = -1;
    }
    else {
      char v125 = v38;
    }
    char v126 = v125 ^ 0x80;
    if (v119 <= v122)
    {
      char v127 = 127;
    }
    else
    {
      char v126 = 0;
      char v127 = 0;
    }
    if (v6 == 1)
    {
      LOBYTE(v13) = v127;
    }
    else
    {
      char v126 = v125;
      LOBYTE(v13) = -1;
    }
    if (v46)
    {
      unint64_t v128 = v118 + v38;
      uint64_t v129 = ~(-1 << v46);
      unint64_t v130 = v122 / v119;
      if (v53)
      {
        BOOL v131 = v130 == v54;
        if (!v38 && !v54)
        {
          uint64_t v132 = 0;
          goto LABEL_143;
        }
        if (v128 >= 0x100 && v54 == v129)
        {
          uint64_t v133 = 1;
          uint64_t v132 = 255;
        }
        else
        {
          uint64_t v132 = v120 + v119 * v54;
LABEL_143:
          uint64_t v133 = 1;
        }
      }
      else
      {
        uint64_t v133 = 0;
        uint64_t v132 = v123;
        BOOL v131 = v38 == 128;
      }
      unint64_t v139 = v132 + v38;
      unint64_t v140 = v139;
      if (a5 == 4)
      {
        unint64_t v140 = 2139095039;
        if ((v139 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v139 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v140 = 4286578687;
          }
          else {
            unint64_t v140 = v139;
          }
        }
      }
      if (v140 >= 0xFF) {
        int v141 = 255;
      }
      else {
        int v141 = v140;
      }
      if (v131) {
        int v142 = 0;
      }
      else {
        int v142 = v141 ^ 0x80;
      }
      if (v6 == 1) {
        int v8 = v142;
      }
      else {
        int v8 = v141;
      }
      int v195 = v8;
      if (v53 == 1)
      {
        uint64_t v143 = v123;
        BOOL v144 = v38 == 128;
      }
      else
      {
        uint64_t v145 = *(unsigned int *)((unint64_t)&v204 | (4 * v133));
        BOOL v144 = v130 == v145;
        if (v38 | v145)
        {
          if (v128 >= 0x100 && v145 == v129) {
            uint64_t v143 = 255;
          }
          else {
            uint64_t v143 = v120 + v119 * v145;
          }
        }
        else
        {
          uint64_t v143 = 0;
        }
        ++v133;
      }
      unint64_t v146 = v143 + v38;
      unint64_t v147 = v146;
      if (a5 == 4)
      {
        unint64_t v147 = 2139095039;
        if ((v146 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v146 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v147 = 4286578687;
          }
          else {
            unint64_t v147 = v146;
          }
        }
      }
      if (v147 >= 0xFF) {
        int v148 = 255;
      }
      else {
        int v148 = v147;
      }
      if (v144) {
        int v149 = 0;
      }
      else {
        int v149 = v148 ^ 0x80;
      }
      if (v6 == 1) {
        int v7 = v149;
      }
      else {
        int v7 = v148;
      }
      int v196 = v7;
      if (v53 == 2)
      {
        uint64_t v150 = v123;
        BOOL v151 = v38 == 128;
      }
      else
      {
        uint64_t v152 = *((unsigned int *)&v204 + v133);
        BOOL v151 = v130 == v152;
        if (v38 | v152)
        {
          if (v128 >= 0x100 && v152 == v129) {
            uint64_t v150 = 255;
          }
          else {
            uint64_t v150 = v120 + v119 * v152;
          }
        }
        else
        {
          uint64_t v150 = 0;
        }
        ++v133;
      }
      unint64_t v153 = v150 + v38;
      unint64_t v154 = v153;
      if (a5 == 4)
      {
        unint64_t v154 = 2139095039;
        if ((v153 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v153 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v154 = 4286578687;
          }
          else {
            unint64_t v154 = v153;
          }
        }
      }
      if (v154 >= 0xFF) {
        int v155 = 255;
      }
      else {
        int v155 = v154;
      }
      if (v151) {
        int v9 = 0;
      }
      else {
        int v9 = v155 ^ 0x80;
      }
      if (v6 != 1) {
        int v9 = v155;
      }
      int v197 = v9;
      if (v53 == 3)
      {
        uint64_t v156 = v123;
        BOOL v157 = v38 == 128;
      }
      else
      {
        uint64_t v158 = *((unsigned int *)&v204 + v133);
        BOOL v157 = v130 == v158;
        if (v38 | v158)
        {
          if (v128 >= 0x100 && v158 == v129) {
            uint64_t v156 = 255;
          }
          else {
            uint64_t v156 = v120 + v119 * v158;
          }
        }
        else
        {
          uint64_t v156 = 0;
        }
        ++v133;
      }
      unint64_t v159 = v156 + v38;
      unint64_t v160 = v159;
      if (a5 == 4)
      {
        unint64_t v160 = 2139095039;
        if ((v159 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v159 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v160 = 4286578687;
          }
          else {
            unint64_t v160 = v159;
          }
        }
      }
      if (v160 >= 0xFF) {
        int v161 = 255;
      }
      else {
        int v161 = v160;
      }
      if (v157) {
        int v162 = 0;
      }
      else {
        int v162 = v161 ^ 0x80;
      }
      if (v6 == 1) {
        int v10 = v162;
      }
      else {
        int v10 = v161;
      }
      int v198 = v10;
      if (v53 == 4)
      {
        uint64_t v163 = v123;
        BOOL v164 = v38 == 128;
      }
      else
      {
        uint64_t v165 = *((unsigned int *)&v204 + v133);
        BOOL v164 = v130 == v165;
        if (v38 | v165)
        {
          if (v128 >= 0x100 && v165 == v129) {
            uint64_t v163 = 255;
          }
          else {
            uint64_t v163 = v120 + v119 * v165;
          }
        }
        else
        {
          uint64_t v163 = 0;
        }
        ++v133;
      }
      unint64_t v166 = v163 + v38;
      unint64_t v167 = v166;
      if (a5 == 4)
      {
        unint64_t v167 = 2139095039;
        if ((v166 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v166 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v167 = 4286578687;
          }
          else {
            unint64_t v167 = v166;
          }
        }
      }
      if (v167 >= 0xFF) {
        int v168 = 255;
      }
      else {
        int v168 = v167;
      }
      if (v164) {
        int v169 = 0;
      }
      else {
        int v169 = v168 ^ 0x80;
      }
      if (v6 == 1) {
        int v11 = v169;
      }
      else {
        int v11 = v168;
      }
      int v199 = v11;
      unint64_t v192 = v128;
      if (v53 == 5)
      {
        uint64_t v170 = ~(-1 << v46);
        uint64_t v171 = v123;
        BOOL v172 = v38 == 128;
      }
      else
      {
        uint64_t v173 = *((unsigned int *)&v204 + v133);
        BOOL v172 = v130 == v173;
        if (v38 | v173)
        {
          if (v128 >= 0x100 && v173 == v129)
          {
            uint64_t v170 = ~(-1 << v46);
            uint64_t v171 = 255;
          }
          else
          {
            uint64_t v170 = ~(-1 << v46);
            uint64_t v171 = v120 + v119 * v173;
          }
        }
        else
        {
          uint64_t v170 = ~(-1 << v46);
          uint64_t v171 = 0;
        }
        ++v133;
      }
      unint64_t v174 = v171 + v38;
      unint64_t v175 = v174;
      if (a5 == 4)
      {
        unint64_t v175 = 2139095039;
        if ((v174 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v174 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v175 = 4286578687;
          }
          else {
            unint64_t v175 = v174;
          }
        }
      }
      if (v175 >= 0xFF) {
        int v176 = 255;
      }
      else {
        int v176 = v175;
      }
      if (v172) {
        int v177 = 0;
      }
      else {
        int v177 = v176 ^ 0x80;
      }
      if (v6 == 1) {
        int v12 = v177;
      }
      else {
        int v12 = v176;
      }
      int v200 = v12;
      if (v53 == 6)
      {
        uint64_t v178 = v123;
        BOOL v179 = v38 == 128;
      }
      else
      {
        uint64_t v180 = *((unsigned int *)&v204 + v133);
        BOOL v179 = v130 == v180;
        if (v38 | v180)
        {
          if (v192 >= 0x100 && v180 == v170) {
            uint64_t v178 = 255;
          }
          else {
            uint64_t v178 = v120 + v119 * v180;
          }
        }
        else
        {
          uint64_t v178 = 0;
        }
        ++v133;
      }
      unint64_t v181 = v178 + v38;
      unint64_t v182 = v181;
      if (a5 == 4)
      {
        unint64_t v182 = 2139095039;
        if ((v181 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v181 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v182 = 4286578687;
          }
          else {
            unint64_t v182 = v181;
          }
        }
      }
      if (v182 >= 0xFF) {
        char v183 = -1;
      }
      else {
        char v183 = v182;
      }
      if (v179) {
        char v14 = 0;
      }
      else {
        char v14 = v183 ^ 0x80;
      }
      if (v6 != 1) {
        char v14 = v183;
      }
      if (v53 != 7)
      {
        uint64_t v184 = *((unsigned int *)&v204 + v133);
        BOOL v124 = v130 == v184;
        if (v38 | v184)
        {
          if (v192 >= 0x100 && v184 == v170) {
            uint64_t v123 = 255;
          }
          else {
            uint64_t v123 = v120 + v119 * v184;
          }
        }
        else
        {
          uint64_t v123 = 0;
        }
      }
      unint64_t v185 = v123 + v38;
      unint64_t v13 = v185;
      if (a5 == 4)
      {
        unint64_t v13 = 2139095039;
        if ((v185 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v13 = 4286578687;
          if ((v185 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v13 = v123 + v38;
          }
        }
      }
      if (v13 >= 0xFF) {
        LOBYTE(v13) = -1;
      }
      char v186 = v13 ^ 0x80;
      if (v124) {
        char v186 = 0;
      }
      if (v6 == 1) {
        LOBYTE(v13) = v186;
      }
LABEL_311:
      a4 = v194;
      a3 = v193;
      goto LABEL_3;
    }
    if (a5 != 4)
    {
      LOBYTE(v13) = v126;
      char v14 = v126;
      LOBYTE(v12) = v126;
      LOBYTE(v11) = v126;
      LOBYTE(v10) = v126;
      LOBYTE(v9) = v126;
      LOBYTE(v7) = v126;
      LOBYTE(v8) = v126;
      goto LABEL_311;
    }
    char v14 = v13;
    LOBYTE(v12) = v13;
    LOBYTE(v11) = v13;
    LOBYTE(v10) = v13;
    LOBYTE(v9) = v13;
    LOBYTE(v7) = v13;
    LOBYTE(v8) = v13;
    a4 = v194;
    a3 = v193;
    if ((v38 & 0x7FC00000 | 0x80000000) != 0xFF800000)
    {
      LOBYTE(v13) = v126;
      char v14 = v126;
      LOBYTE(v12) = v126;
      LOBYTE(v11) = v126;
      LOBYTE(v10) = v126;
      LOBYTE(v9) = v126;
      LOBYTE(v7) = v126;
      LOBYTE(v8) = v126;
    }
LABEL_3:
    int32x4_t v15 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v5;
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t result = &v203[4 * v16];
    result[v17] = v8;
    unint64_t v19 = &v203[4 * (v16 + 1)];
    v19[v17] = v7;
    uint64_t v20 = (v17 + 1);
    result[v20] = v9;
    v19[v20] = v10;
    int v21 = &v203[4 * (v16 + 2)];
    v21[v17] = v11;
    int32x4_t v22 = &v203[4 * (v16 + 3)];
    v22[v17] = v12;
    v21[v20] = v14;
    v22[v20] = v13;
    ++v5;
  }
  while (v5 != 4);
  *a1 = v203[0];
  a1[1] = v203[4];
  a1[2] = v203[8];
  a1[3] = v203[12];
  a1[4] = v203[16];
  a1[5] = v203[20];
  a1[6] = v203[24];
  a1[7] = v203[28];
  int16x4_t v187 = &a1[a2];
  *int16x4_t v187 = v203[1];
  v187[1] = v203[5];
  v187[2] = v203[9];
  v187[3] = v203[13];
  v187[4] = v203[17];
  v187[5] = v203[21];
  v187[6] = v203[25];
  v187[7] = v203[29];
  int8x16_t v188 = &a1[a2 + a2];
  unsigned char *v188 = v203[2];
  v188[1] = v203[6];
  v188[2] = v203[10];
  v188[3] = v203[14];
  v188[4] = v203[18];
  v188[5] = v203[22];
  v188[6] = v203[26];
  v188[7] = v203[30];
  int16x4_t v189 = &v188[a2];
  *int16x4_t v189 = v203[3];
  v189[1] = v203[7];
  v189[2] = v203[11];
  v189[3] = v203[15];
  v189[4] = v203[19];
  v189[5] = v203[23];
  v189[6] = v203[27];
  v189[7] = v203[31];
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7, double a8, double a9, int8x8_t a10, double a11, double a12, double a13, int8x8_t a14)
{
  unint64_t v17 = a3;
  if (a5 >= 8) {
    unsigned int v19 = 8;
  }
  else {
    unsigned int v19 = a5;
  }
  if (a6 >= 4) {
    unsigned int v20 = 4;
  }
  else {
    unsigned int v20 = a6;
  }
  if (v19 && v20)
  {
    int v21 = (int16x4_t *)result;
    int v22 = a7;
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int16x4_t *)result, a2, v19, v20, a7, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
  }
  else
  {
    int v21 = (int16x4_t *)result;
    int v22 = a7;
    *a4 = 0;
  }
  uint64_t v42 = 4 * a2;
  uint64_t v23 = a4 + 1;
  if (a6 <= 4) {
    int v24 = 4;
  }
  else {
    int v24 = a6;
  }
  unsigned int v25 = v24 - 4;
  if (v25 >= 4) {
    int v26 = 4;
  }
  else {
    int v26 = v25;
  }
  if (v19 && v26)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v23, (int16x4_t *)((char *)v21 + v42), a2, v19, v26, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
  }
  else
  {
    *uint64_t v23 = 0;
  }
  uint64_t v27 = a4 + 2;
  if (a5 <= 8) {
    int v28 = 8;
  }
  else {
    int v28 = a5;
  }
  unsigned int v29 = v28 - 8;
  if (v29 >= 8) {
    int v30 = 8;
  }
  else {
    int v30 = v29;
  }
  if (v30 && v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v27, v21 + 1, a2, v30, v20, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    int v31 = a4 + 3;
  }
  else
  {
    *uint64_t v27 = 0;
    int v31 = a4 + 3;
    if (!v30) {
      goto LABEL_33;
    }
  }
  if (v26)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v31, (int16x4_t *)((char *)v21 + v42 + 8), a2, v30, v26, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int v31 = 0;
LABEL_34:
  int64x2_t v32 = a4 + 4;
  if (a6 <= 8) {
    int v33 = 8;
  }
  else {
    int v33 = a6;
  }
  unsigned int v34 = v33 - 8;
  if (v34 >= 4) {
    int v35 = 4;
  }
  else {
    int v35 = v34;
  }
  if (v19 && v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v32, &v21[a2], a2, v19, v35, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
  }
  else
  {
    *int64x2_t v32 = 0;
  }
  unint64_t v36 = a4 + 5;
  if (a6 <= 12) {
    int v37 = 12;
  }
  else {
    int v37 = a6;
  }
  unsigned int v38 = v37 - 12;
  if (v38 >= 4) {
    int v39 = 4;
  }
  else {
    int v39 = v38;
  }
  if (v19 && v39)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v36, (int16x4_t *)((char *)v21 + 12 * a2), a2, v19, v39, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    int v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  else
  {
    *unint64_t v36 = 0;
    int v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  if (v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v40, &v21[a2 + 1], a2, v30, v35, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    int v41 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int v40 = 0;
  int v41 = a4 + 7;
  if (!v30)
  {
LABEL_62:
    *int v41 = 0;
    return result;
  }
LABEL_58:
  if (!v39) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v41, (int16x4_t *)((char *)v21 + 12 * a2 + 8), a2, v30, v39, v22, a8, a9, a10, a11, a12, a13, a14);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int32x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, int8x8_t a10, double a11, double a12, double a13, int8x8_t a14)
{
  int32x2_t v17 = *(int32x2_t *)((char *)a3 + a4);
  *(int32x2_t *)v18.i8 = vzip1_s32(*a3, v17);
  *(int32x2_t *)v19.i8 = vzip2_s32(*a3, v17);
  v18.i64[1] = v18.i64[0];
  v19.i64[1] = v19.i64[0];
  unsigned int v20 = (int32x2_t *)((char *)a3 + 2 * a4);
  int8x8_t v21 = (int8x8_t)*v20;
  int32x2_t v22 = *(int32x2_t *)((char *)v20 + a4);
  *(int32x2_t *)v23.i8 = vzip1_s32(*v20, v22);
  *(int32x2_t *)v24.i8 = vzip2_s32(*v20, v22);
  v23.i64[1] = v23.i64[0];
  v24.i64[1] = v24.i64[0];
  int8x16_t v25 = vdupq_lane_s8(*(int8x8_t *)v18.i8, 0);
  int8x16_t v26 = vsubq_s8(v18, v25);
  int8x16_t v27 = vsubq_s8(v19, v25);
  int8x16_t v28 = vsubq_s8(v23, v25);
  int8x16_t v29 = vsubq_s8(v24, v25);
  v21.i8[0] = vmaxvq_s8(v26);
  a10.i8[0] = vminvq_s8(v26);
  int8x16_t v30 = vdupq_lane_s8(v21, 0);
  int8x16_t v31 = vdupq_lane_s8(a10, 0);
  v32.i64[0] = 0x8080808080808080;
  v32.i64[1] = 0x8080808080808080;
  int8x16_t v33 = vmaxq_s8(v30, v32);
  v34.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v34.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v35 = vminq_s8(v31, v34);
  int8x16_t v36 = vzip1q_s8(v30, v31);
  int8x16_t v37 = vceqzq_s8(v36);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v36)), v37);
  v37.i8[0] = vmaxvq_s8(v27);
  a14.i8[0] = vminvq_s8(v27);
  int8x16_t v40 = vdupq_lane_s8(*(int8x8_t *)v37.i8, 0);
  int8x16_t v41 = vdupq_lane_s8(a14, 0);
  int8x16_t v42 = vpmaxq_s8(v39, v39);
  int8x16_t v43 = vmaxq_s8(v33, v40);
  int8x16_t v44 = vminq_s8(v35, v41);
  int8x16_t v45 = vzip1q_s8(v40, v41);
  int8x16_t v46 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v45)), vceqzq_s8(v45));
  int8x16_t v47 = vpmaxq_s8(v46, v46);
  v46.i8[0] = vmaxvq_s8(v28);
  int8x16_t v48 = vdupq_lane_s8(*(int8x8_t *)v46.i8, 0);
  v41.i8[0] = vminvq_s8(v28);
  int8x16_t v49 = vdupq_lane_s8(*(int8x8_t *)v41.i8, 0);
  int8x16_t v50 = vmaxq_s8(v43, v48);
  int8x16_t v51 = vminq_s8(v44, v49);
  int8x16_t v52 = vzip1q_s8(v48, v49);
  int8x16_t v53 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v52)), vceqzq_s8(v52));
  int8x16_t v54 = vpmaxq_s8(v53, v53);
  v53.i8[0] = vmaxvq_s8(v29);
  v14.i8[0] = vminvq_s8(v29);
  int8x16_t v55 = vdupq_lane_s8(*(int8x8_t *)v53.i8, 0);
  int8x16_t v56 = vdupq_lane_s8(v14, 0);
  int8x16_t v57 = vminq_s8(v51, v56);
  int8x16_t v58 = vzip1q_s8(v55, v56);
  int8x16_t v59 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v58)), vceqzq_s8(v58));
  int8x16_t v60 = vpmaxq_s8(v59, v59);
  int8x16_t v61 = vmaxq_s8(vmaxq_s8(v42, v47), vmaxq_s8(v54, v60));
  int8x16_t v62 = vclzq_s8(vsubq_s8(vmaxq_s8(v50, v55), v57));
  int8x16_t v63 = vsubq_s8(v38, v62);
  int8x16_t v64 = vcgtq_s8(v61, v63);
  int8x16_t v65 = vbslq_s8(v64, v63, v61);
  if (vmaxvq_s8(v65))
  {
    char v66 = 0;
    unint64_t v67 = 0;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    v69.i64[0] = 0x707070707070707;
    v69.i64[1] = 0x707070707070707;
    int8x16_t v70 = vandq_s8(vsubq_s8(vshlq_s8(v68, vsubq_s8(v69, v62)), v57), v64);
    v71.i64[0] = 0x303030303030303;
    v71.i64[1] = 0x303030303030303;
    int8x16_t v72 = vorrq_s8(vandq_s8(vceqzq_s8(v65), v71), vandq_s8(v64, v38));
    int8x16_t v73 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v42), v71), (int8x16_t)0);
    int8x16_t v74 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v47), v71), (int8x16_t)0);
    int8x16_t v75 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v54), v71), (int8x16_t)0);
    int8x16_t v76 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v60), v71), (int8x16_t)0);
    int8x16_t v77 = vsubq_s8(v65, v73);
    int8x16_t v78 = vsubq_s8(v65, v74);
    int8x16_t v79 = vsubq_s8(v65, v75);
    int8x16_t v80 = vsubq_s8(v65, v76);
    int8x16_t v81 = vceqq_s8(vaddq_s8(v76, v75), vnegq_s8(vaddq_s8(v73, v74)));
    v76.i64[0] = 0x404040404040404;
    v76.i64[1] = 0x404040404040404;
    int8x16_t v82 = vorrq_s8(vbicq_s8(v76, v81), v72);
    if (a5 >= 2 && a6 >= 2)
    {
      int8x16_t v383 = v70;
      v83.i32[0] = v18.u8[2];
      v83.i32[1] = v18.u8[1];
      int32x2_t v84 = vshl_n_s32(vsub_s32(v83, vdup_n_s32(v18.u8[0])), 0x1CuLL);
      int v85 = v84.i32[1] >> 28;
      int8x8_t v86 = (int8x8_t)vshl_s32(v84, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v87 = v84.i32[0];
      v88.i64[0] = 0xFFFF0000FFFF0000;
      v88.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v89 = vmlaq_s8(vandq_s8(vdupq_n_s8(v84.i32[0] >> 28), v88), vdupq_n_s8(v84.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v90 = vsubq_s8(v26, v89);
      int8x16_t v91 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v86.i32[0]), v27), v89);
      int8x16_t v92 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v86.i32[1]), v28), v89);
      int8x16_t v93 = vaddq_s8(vdupq_n_s8(-v86.i32[0] - v86.i32[1]), v29);
      int8x16_t v384 = v27;
      int8x16_t v94 = vsubq_s8(v93, v89);
      v93.i8[0] = vmaxvq_s8(v90);
      int8x16_t v381 = v90;
      v86.i8[0] = vminvq_s8(v90);
      int8x16_t v95 = vdupq_lane_s8(*(int8x8_t *)v93.i8, 0);
      int8x16_t v96 = vdupq_lane_s8(v86, 0);
      v90.i64[0] = 0x8080808080808080;
      v90.i64[1] = 0x8080808080808080;
      int8x16_t v97 = vmaxq_s8(v95, v90);
      v90.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v90.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v98 = vminq_s8(v96, v90);
      int8x16_t v99 = vzip1q_s8(v95, v96);
      int8x16_t v100 = vceqzq_s8(v99);
      v101.i64[0] = 0x808080808080808;
      v101.i64[1] = 0x808080808080808;
      int8x16_t v102 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v99)), v100);
      int8x16_t v103 = vpmaxq_s8(v102, v102);
      v100.i8[0] = vmaxvq_s8(v91);
      int8x16_t v104 = v79;
      int8x16_t v378 = v91;
      v79.i8[0] = vminvq_s8(v91);
      int8x16_t v105 = vdupq_lane_s8(*(int8x8_t *)v100.i8, 0);
      int8x16_t v106 = vdupq_lane_s8(*(int8x8_t *)v79.i8, 0);
      int8x16_t v107 = vmaxq_s8(v97, v105);
      int8x16_t v108 = vminq_s8(v98, v106);
      int8x16_t v109 = vzip1q_s8(v105, v106);
      int8x16_t v110 = vceqzq_s8(v109);
      int8x16_t v111 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v109)), v110);
      int8x16_t v112 = vpmaxq_s8(v111, v111);
      v110.i8[0] = vmaxvq_s8(v92);
      v15.i8[0] = vminvq_s8(v92);
      int8x16_t v113 = vdupq_lane_s8(*(int8x8_t *)v110.i8, 0);
      int8x16_t v114 = vdupq_lane_s8(v15, 0);
      int8x16_t v115 = vmaxq_s8(v107, v113);
      int8x16_t v116 = vminq_s8(v108, v114);
      int8x16_t v117 = vzip1q_s8(v113, v114);
      int8x16_t v118 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v117)), vceqzq_s8(v117));
      int8x16_t v119 = vpmaxq_s8(v118, v118);
      v118.i8[0] = vmaxvq_s8(v94);
      v16.i8[0] = vminvq_s8(v94);
      int8x16_t v120 = vdupq_lane_s8(*(int8x8_t *)v118.i8, 0);
      int8x16_t v121 = vdupq_lane_s8(v16, 0);
      int8x16_t v122 = vmaxq_s8(v115, v120);
      int8x16_t v123 = vminq_s8(v116, v121);
      int8x16_t v124 = vzip1q_s8(v120, v121);
      int8x16_t v125 = vbicq_s8(vsubq_s8(v101, vclsq_s8(v124)), vceqzq_s8(v124));
      int8x16_t v126 = vpmaxq_s8(v125, v125);
      int8x16_t v127 = vmaxq_s8(vmaxq_s8(v103, v112), vmaxq_s8(v119, v126));
      int8x16_t v128 = vclzq_s8(vsubq_s8(v122, v123));
      int8x16_t v129 = vsubq_s8(v101, v128);
      int8x16_t v130 = vcgtq_s8(v127, v129);
      int8x16_t v131 = vbslq_s8(v130, v129, v127);
      v101.i64[0] = 0x202020202020202;
      v101.i64[1] = 0x202020202020202;
      v127.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v127.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v132 = v29;
      int8x16_t v133 = vbslq_s8(v130, v127, v101);
      v127.i64[0] = 0x101010101010101;
      v127.i64[1] = 0x101010101010101;
      int8x16_t v134 = vmaxq_s8(v131, v127);
      v101.i64[0] = 0x303030303030303;
      v101.i64[1] = 0x303030303030303;
      int8x16_t v135 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v103), v101), (int8x16_t)0);
      int8x16_t v136 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v112), v101), (int8x16_t)0);
      int8x16_t v137 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v119), v101), (int8x16_t)0);
      int8x16_t v138 = vmaxq_s8(vminq_s8(vsubq_s8(v134, v126), v101), (int8x16_t)0);
      int8x16_t v139 = vsubq_s8(v134, v135);
      int8x16_t v140 = vsubq_s8(v134, v136);
      int8x16_t v141 = vsubq_s8(v134, v137);
      int8x16_t v142 = vsubq_s8(v134, v138);
      int8x16_t v143 = vceqq_s8(vaddq_s8(v138, v137), vnegq_s8(vaddq_s8(v135, v136)));
      v138.i64[0] = 0x404040404040404;
      v138.i64[1] = 0x404040404040404;
      int8x16_t v144 = vorrq_s8(vbicq_s8(v138, v143), v133);
      v101.i64[0] = 0x8000800080008;
      v101.i64[1] = 0x8000800080008;
      int16x8_t v145 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v104.i8, *(int8x8_t *)v78.i8), *(int8x8_t *)v80.i8), 3uLL);
      v131.i64[0] = 0x2000200020002;
      v131.i64[1] = 0x2000200020002;
      int8x16_t v146 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(v145, *(int8x8_t *)v77.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v65.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v82.i8))), (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v82.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v82.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v131), v101)),
                                                  vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v141.i8, *(int8x8_t *)v140.i8), *(int8x8_t *)v142.i8), 3uLL), *(int8x8_t *)v139.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v144.i8, *(int8x8_t *)v144.i8), (int8x8_t)0x808080808080808)), (uint8x8_t)vbic_s8(*(int8x8_t *)v134.i8,
                                                                              (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v144.i8))), (int16x8_t)v101))), 0);
      v138.i16[0] = vaddlvq_s8(v146);
      unint64_t v67 = v85 & 0xF | HIBYTE(v87);
      int v147 = v138.u16[0];
      if (v138.i16[0])
      {
        v148.i64[0] = 0x707070707070707;
        v148.i64[1] = 0x707070707070707;
        v149.i64[0] = -1;
        v149.i64[1] = -1;
        int8x16_t v384 = vbslq_s8(v146, v378, v384);
        int8x16_t v28 = vbslq_s8(v146, v92, v28);
        int8x16_t v150 = vbslq_s8(v146, v94, v132);
        int8x16_t v80 = vbslq_s8(v146, v142, v80);
        int8x16_t v70 = vbslq_s8(v146, vandq_s8(vsubq_s8(vshlq_s8(v149, vsubq_s8(v148, v128)), v123), v130), v383);
        int8x16_t v65 = vbslq_s8(v146, v134, v65);
        int8x16_t v82 = vbslq_s8(v146, v144, v82);
        int8x16_t v377 = vbslq_s8(v146, v139, v77);
        int8x16_t v379 = vbslq_s8(v146, v140, v78);
        int16x8_t v151 = vmull_s8(*(int8x8_t *)v377.i8, (int8x8_t)0x707070707070707);
        int8x16_t v380 = vbslq_s8(v146, v381, v26);
        int8x16_t v382 = vbslq_s8(v146, v141, v104);
        int16x8_t v152 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v382.i8, *(int8x8_t *)v379.i8), *(int8x8_t *)v80.i8), 3uLL);
        int8x16_t v29 = v150;
      }
      else
      {
        int8x16_t v379 = v78;
        int8x16_t v380 = v26;
        int8x16_t v382 = v104;
        int8x16_t v377 = v77;
        int16x8_t v151 = vmull_s8(*(int8x8_t *)v77.i8, (int8x8_t)0x707070707070707);
        int8x16_t v29 = v132;
        int8x16_t v70 = v383;
        int16x8_t v152 = v145;
      }
      int8x16_t v154 = v19;
      v154.i8[7] = v18.i8[7];
      int8x16_t v155 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7430));
      int8x16_t v156 = vsubq_s8(v19, vqtbl1q_s8(v154, (int8x16_t)xmmword_242EA7440));
      int8x16_t v157 = v23;
      v157.i8[7] = v18.i8[7];
      int8x16_t v158 = vsubq_s8(v23, vqtbl1q_s8(v157, (int8x16_t)xmmword_242EA7450));
      int8x16_t v159 = v24;
      v159.i8[7] = v18.i8[7];
      int8x16_t v160 = vqtbl1q_s8(v159, (int8x16_t)xmmword_242EA7460);
      int8x16_t v161 = vsubq_s8(v24, v160);
      int8x16_t v162 = v155;
      v162.i8[0] = v155.i8[7];
      v162.i8[7] = v155.i8[0];
      v155.i8[0] = vmaxvq_s8(v162);
      v160.i8[0] = vminvq_s8(v162);
      int8x16_t v163 = vdupq_lane_s8(*(int8x8_t *)v155.i8, 0);
      int8x16_t v164 = vdupq_lane_s8(*(int8x8_t *)v160.i8, 0);
      v165.i64[0] = 0x8080808080808080;
      v165.i64[1] = 0x8080808080808080;
      int8x16_t v166 = vmaxq_s8(v163, v165);
      v165.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v165.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v167 = vminq_s8(v164, v165);
      int8x16_t v168 = vzip1q_s8(v163, v164);
      int8x16_t v169 = vceqzq_s8(v168);
      v170.i64[0] = 0x808080808080808;
      v170.i64[1] = 0x808080808080808;
      int8x16_t v171 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v168)), v169);
      int8x16_t v172 = vpmaxq_s8(v171, v171);
      v169.i8[0] = vmaxvq_s8(v156);
      v141.i8[0] = vminvq_s8(v156);
      int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v169.i8, 0);
      int8x16_t v174 = vdupq_lane_s8(*(int8x8_t *)v141.i8, 0);
      int8x16_t v175 = vmaxq_s8(v166, v173);
      int8x16_t v176 = vminq_s8(v167, v174);
      int8x16_t v177 = vzip1q_s8(v173, v174);
      int8x16_t v178 = vceqzq_s8(v177);
      int8x16_t v179 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v177)), v178);
      int8x16_t v180 = vpmaxq_s8(v179, v179);
      v178.i8[0] = vmaxvq_s8(v158);
      v123.i8[0] = vminvq_s8(v158);
      int8x16_t v181 = vdupq_lane_s8(*(int8x8_t *)v178.i8, 0);
      int8x16_t v182 = vdupq_lane_s8(*(int8x8_t *)v123.i8, 0);
      int8x16_t v183 = vmaxq_s8(v175, v181);
      int8x16_t v184 = vminq_s8(v176, v182);
      int8x16_t v185 = vzip1q_s8(v181, v182);
      int8x16_t v186 = vceqzq_s8(v185);
      int8x16_t v187 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v185)), v186);
      int8x16_t v188 = vpmaxq_s8(v187, v187);
      v187.i8[0] = vmaxvq_s8(v161);
      v186.i8[0] = vminvq_s8(v161);
      int8x16_t v189 = vdupq_lane_s8(*(int8x8_t *)v187.i8, 0);
      int8x16_t v190 = vdupq_lane_s8(*(int8x8_t *)v186.i8, 0);
      int8x16_t v191 = vminq_s8(v184, v190);
      int8x16_t v192 = vzip1q_s8(v189, v190);
      int8x16_t v193 = vbicq_s8(vsubq_s8(v170, vclsq_s8(v192)), vceqzq_s8(v192));
      int8x16_t v194 = vpmaxq_s8(v193, v193);
      int8x16_t v195 = vmaxq_s8(vmaxq_s8(v172, v180), vmaxq_s8(v188, v194));
      int8x16_t v196 = vclzq_s8(vsubq_s8(vmaxq_s8(v183, v189), v191));
      int8x16_t v197 = vsubq_s8(v170, v196);
      int8x16_t v198 = vcgtq_s8(v195, v197);
      int8x16_t v199 = vbslq_s8(v198, v197, v195);
      v197.i64[0] = 0x909090909090909;
      v197.i64[1] = 0x909090909090909;
      v165.i64[0] = 0x202020202020202;
      v165.i64[1] = 0x202020202020202;
      int8x16_t v200 = vorrq_s8(vandq_s8(vceqzq_s8(v199), v165), vsubq_s8(vandq_s8(v198, v197), vmvnq_s8(v198)));
      v165.i64[0] = 0x303030303030303;
      v165.i64[1] = 0x303030303030303;
      int8x16_t v201 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v172), v165), (int8x16_t)0);
      int8x16_t v202 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v180), v165), (int8x16_t)0);
      int8x16_t v203 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v188), v165), (int8x16_t)0);
      int8x16_t v204 = vmaxq_s8(vminq_s8(vsubq_s8(v199, v194), v165), (int8x16_t)0);
      int8x16_t v205 = vsubq_s8(v199, v201);
      int8x16_t v206 = vsubq_s8(v199, v202);
      int8x16_t v207 = vsubq_s8(v199, v203);
      int8x16_t v208 = vsubq_s8(v199, v204);
      int8x16_t v209 = vceqq_s8(vaddq_s8(v204, v203), vnegq_s8(vaddq_s8(v201, v202)));
      v202.i64[0] = 0x404040404040404;
      v202.i64[1] = 0x404040404040404;
      int8x16_t v210 = vorrq_s8(v200, vbicq_s8(v202, v209));
      v203.i64[0] = 0x3000300030003;
      v203.i64[1] = 0x3000300030003;
      int8x16_t v211 = (int8x16_t)vmovl_s8(*(int8x8_t *)v82.i8);
      v165.i64[0] = 0x8000800080008;
      v165.i64[1] = 0x8000800080008;
      v170.i64[0] = 0x2000200020002;
      v170.i64[1] = 0x2000200020002;
      int8x16_t v212 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v65.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v211, v165))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v82.i8, 1uLL), v165)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v211, v203), (int16x8_t)v170), v165), v151)), v152), vaddw_s8(
                                                    (int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v207.i8, *(int8x8_t *)v206.i8), *(int8x8_t *)v208.i8), 3uLL), *(int8x8_t *)v205.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v210.i8, *(int8x8_t *)v210.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v199.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808,
                                                                  *(uint8x8_t *)v210.i8))))),
               0);
      v209.i16[0] = vaddlvq_s8(v212);
      int v213 = v209.u16[0];
      if (v209.i16[0])
      {
        v214.i64[0] = 0x707070707070707;
        v214.i64[1] = 0x707070707070707;
        v215.i64[0] = -1;
        v215.i64[1] = -1;
        int8x16_t v216 = vsubq_s8(vshlq_s8(v215, vsubq_s8(v214, v196)), v191);
        v25.i8[0] = vbslq_s8(v212, vextq_s8(v18, v18, 0xFuLL), v25).u8[0];
        int8x16_t v26 = vbslq_s8(v212, v162, v380);
        int8x16_t v27 = vbslq_s8(v212, v156, v384);
        int8x16_t v28 = vbslq_s8(v212, v158, v28);
        int8x16_t v29 = vbslq_s8(v212, v161, v29);
        int8x16_t v77 = vbslq_s8(v212, v205, v377);
        int8x16_t v78 = vbslq_s8(v212, v206, v379);
        int8x16_t v79 = vbslq_s8(v212, v207, v382);
        int8x16_t v80 = vbslq_s8(v212, v208, v80);
        int8x16_t v70 = vbslq_s8(v212, vandq_s8(v216, v198), v70);
        int8x16_t v65 = vbslq_s8(v212, v199, v65);
        int8x16_t v82 = vbslq_s8(v212, v210, v82);
      }
      else
      {
        int8x16_t v27 = v384;
        int8x16_t v26 = v380;
        int8x16_t v79 = v382;
        int8x16_t v77 = v377;
        int8x16_t v78 = v379;
      }
      if (v147) {
        BOOL v217 = v213 == 0;
      }
      else {
        BOOL v217 = 0;
      }
      char v66 = v217;
    }
    int8x16_t v218 = (int8x16_t)vmovl_s8(*(int8x8_t *)v82.i8);
    v219.i64[0] = 0x8000800080008;
    v219.i64[1] = 0x8000800080008;
    v220.i64[0] = 0x3000300030003;
    v220.i64[1] = 0x3000300030003;
    v221.i64[0] = 0x2000200020002;
    v221.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(7 * v77.i8[0]
                                    + 8 * vaddq_s8(v79, vaddq_s8(v78, v80)).i8[0]
                                    + ((2 * v218.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v65.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v218, v219))).u16[0]+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v218, v220), v221), v219).u16[0])- 117) <= 0xFFFFFFFFFFFFFF77)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 16;
    }
    else
    {
      int8x16_t v222 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v223 = 8 * (a1 & 7);
      if (v223) {
        uint64_t v224 = *v222 & ~(-1 << v223);
      }
      else {
        uint64_t v224 = 0;
      }
      int8x16_t v225 = vextq_s8(v77, (int8x16_t)0, 8uLL);
      int8x16_t v226 = vextq_s8(v78, (int8x16_t)0, 8uLL);
      int8x16_t v227 = vextq_s8(v79, (int8x16_t)0, 8uLL);
      int8x16_t v228 = vextq_s8(v80, (int8x16_t)0, 8uLL);
      if (v65.i8[0]) {
        int v229 = (16 * v65.i8[0] + 112) & 0x70;
      }
      else {
        int v229 = 0;
      }
      *a2 = 32 * v82.i8[0];
      unint64_t v230 = (v82.i8[0] & 8 | v229 & 0xFFFF807F | ((unint64_t)v25.u8[0] << 7)) >> 3;
      unint64_t v231 = (v230 << v223) | v224;
      if (v223 >= 0x34)
      {
        *int8x16_t v222 = v231;
        unint64_t v231 = v230 >> (-8 * (a1 & 7u));
      }
      int8x16_t v232 = vdupq_lane_s8(*(int8x8_t *)v65.i8, 0);
      unint64_t v233 = v223 + 12;
      v234.i64[0] = 0x202020202020202;
      v234.i64[1] = 0x202020202020202;
      int8x16_t v235 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v82.i8), (int8x8_t)0x4000400040004)))), v234);
      v234.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v234.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v236.i64[0] = -1;
      v236.i64[1] = -1;
      uint8x16_t v237 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v236, (uint8x16_t)vorrq_s8(v235, v234)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v232, vzip1q_s8(v225, v226)), (int16x8_t)vsubq_s8(v232, vzip1q_s8(v227, v228))).u32[0]);
      int16x8_t v238 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v235.i8);
      uint16x8_t v239 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v237.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v238)), (int16x8_t)vmovl_high_u8(v237));
      uint16x8_t v240 = (uint16x8_t)vpaddq_s16(v238, (int16x8_t)vmovl_high_u8((uint8x16_t)v235));
      int32x4_t v241 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v240.i8);
      int32x4_t v242 = (int32x4_t)vmovl_high_u16(v240);
      int32x4_t v243 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v239.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v241)), (int32x4_t)vshlq_u32(vmovl_high_u16(v239), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v242)));
      int32x4_t v244 = vpaddq_s32(v241, v242);
      v245.i64[0] = v243.u32[0];
      v245.i64[1] = v243.u32[1];
      uint64x2_t v246 = (uint64x2_t)v245;
      v245.i64[0] = v243.u32[2];
      v245.i64[1] = v243.u32[3];
      uint64x2_t v247 = (uint64x2_t)v245;
      v245.i64[0] = v244.u32[0];
      v245.i64[1] = v244.u32[1];
      int64x2_t v248 = v245;
      v245.i64[0] = v244.u32[2];
      v245.i64[1] = v244.u32[3];
      int64x2_t v249 = vpaddq_s64((int64x2_t)vshlq_u64(v246, (uint64x2_t)vzip1q_s64((int64x2_t)0, v248)), (int64x2_t)vshlq_u64(v247, (uint64x2_t)vzip1q_s64((int64x2_t)0, v245)));
      int64x2_t v250 = vpaddq_s64(v248, v245);
      uint64_t v251 = (v223 + 12) & 0x3C;
      unint64_t v252 = (v249.i64[0] << v251) | v231;
      if ((unint64_t)(v250.i64[0] + v251) >= 0x40)
      {
        *(void *)((char *)v222 + ((v233 >> 3) & 8)) = v252;
        unint64_t v252 = (unint64_t)v249.i64[0] >> -(char)v251;
      }
      unint64_t v253 = v250.i64[0] + v233;
      uint64_t v254 = (v250.i64[0] + v233) & 0x3F;
      unint64_t v255 = v252 | (v249.i64[1] << (v250.i8[0] + v233));
      if ((unint64_t)(v254 + v250.i64[1]) >= 0x40)
      {
        *(void *)((char *)v222 + ((v253 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v255;
        unint64_t v255 = (unint64_t)v249.i64[1] >> -(char)v254;
        if (!v254) {
          unint64_t v255 = 0;
        }
      }
      int8x16_t v256 = vceqq_s8(v65, v77);
      unint64_t v257 = v253 + v250.i64[1];
      v258.i64[0] = 0x808080808080808;
      v258.i64[1] = 0x808080808080808;
      v259.i64[0] = -1;
      v259.i64[1] = -1;
      int8x16_t v260 = vandq_s8(vextq_s8(vtstq_s8(v82, v258), (int8x16_t)0, 0xFuLL), v65);
      v261.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v261.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v262 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v259, (uint8x16_t)vaddq_s8(v260, v261)), v70);
      int16x8_t v263 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v260.i8);
      uint16x8_t v264 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v262.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v263)), (int16x8_t)vmovl_high_u8(v262));
      uint16x8_t v265 = (uint16x8_t)vpaddq_s16(v263, (int16x8_t)vmovl_high_u8((uint8x16_t)v260));
      int32x4_t v266 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v265.i8);
      int32x4_t v267 = (int32x4_t)vmovl_high_u16(v265);
      int32x4_t v268 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v264.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v266)), (int32x4_t)vshlq_u32(vmovl_high_u16(v264), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v267)));
      int32x4_t v269 = vpaddq_s32(v266, v267);
      v270.i64[0] = v268.u32[0];
      v270.i64[1] = v268.u32[1];
      uint64x2_t v271 = (uint64x2_t)v270;
      v270.i64[0] = v268.u32[2];
      v270.i64[1] = v268.u32[3];
      uint64x2_t v272 = (uint64x2_t)v270;
      v270.i64[0] = v269.u32[0];
      v270.i64[1] = v269.u32[1];
      int64x2_t v273 = v270;
      v270.i64[0] = v269.u32[2];
      v270.i64[1] = v269.u32[3];
      int64x2_t v274 = vpaddq_s64((int64x2_t)vshlq_u64(v271, (uint64x2_t)vzip1q_s64((int64x2_t)0, v273)), (int64x2_t)vshlq_u64(v272, (uint64x2_t)vzip1q_s64((int64x2_t)0, v270)));
      int64x2_t v275 = vpaddq_s64(v273, v270);
      uint64_t v276 = (v253 + v250.i64[1]) & 0x3F;
      unint64_t v277 = (v274.i64[0] << (v253 + v250.i8[8])) | v255;
      if ((unint64_t)(v275.i64[0] + v276) >= 0x40)
      {
        *(void *)((char *)v222 + ((v257 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v277;
        unint64_t v277 = (unint64_t)v274.i64[0] >> -(char)v276;
        if (!v276) {
          unint64_t v277 = 0;
        }
      }
      int8x16_t v278 = vandq_s8(v70, v256);
      unint64_t v279 = v275.i64[0] + v257;
      unint64_t v280 = v277 | (v274.i64[1] << v279);
      if ((v279 & 0x3F) + v275.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v279 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
        unint64_t v280 = (unint64_t)v274.i64[1] >> -(v279 & 0x3F);
        if ((v279 & 0x3F) == 0) {
          unint64_t v280 = 0;
        }
      }
      int8x16_t v281 = vceqq_s8(v65, v78);
      int8x16_t v282 = vaddq_s8(v278, v26);
      unint64_t v283 = v279 + v275.i64[1];
      if (v66)
      {
        v280 |= v67 << v283;
        if ((v283 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v222 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
          unint64_t v280 = v67 >> -(v283 & 0x3F);
        }
        v283 += 8;
      }
      int8x16_t v284 = vandq_s8(v70, v281);
      int16x8_t v285 = (int16x8_t)vmovl_high_u8((uint8x16_t)v225);
      v225.i8[0] = 0;
      v286.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v286.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v287, (uint8x16_t)vaddq_s8(v225, v286)), v282);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v225.i8);
      uint16x8_t v290 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vshlq_u16(vmovl_high_u8(v288), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v285)));
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16(v289, v285);
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16(v291);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      unint64_t v302 = (v300.i64[0] << v283) | v280;
      if (v301.i64[0] + (v283 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v222 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v300.i64[0] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      int8x16_t v303 = vceqq_s8(v65, v79);
      int8x16_t v304 = vaddq_s8(v27, v284);
      unint64_t v305 = v301.i64[0] + v283;
      uint64_t v306 = (v301.i64[0] + v283) & 0x3F;
      unint64_t v307 = v302 | (v300.i64[1] << v305);
      if ((v305 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v307;
        unint64_t v307 = (unint64_t)v300.i64[1] >> -(char)v306;
        if (!v306) {
          unint64_t v307 = 0;
        }
      }
      int8x16_t v308 = vandq_s8(v70, v303);
      unint64_t v309 = v305 + v301.i64[1];
      v310.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v310.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v311.i64[0] = -1;
      v311.i64[1] = -1;
      uint8x16_t v312 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v311, (uint8x16_t)vaddq_s8(v226, v310)), v304);
      int16x8_t v313 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v226.i8);
      int16x8_t v314 = (int16x8_t)vmovl_high_u8((uint8x16_t)v226);
      uint16x8_t v315 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v312.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v313)), (int16x8_t)vshlq_u16(vmovl_high_u8(v312), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)));
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16(v313, v314);
      int32x4_t v317 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v316.i8);
      int32x4_t v318 = (int32x4_t)vmovl_high_u16(v316);
      int32x4_t v319 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v315.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v317)), (int32x4_t)vshlq_u32(vmovl_high_u16(v315), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)));
      int32x4_t v320 = vpaddq_s32(v317, v318);
      v321.i64[0] = v319.u32[0];
      v321.i64[1] = v319.u32[1];
      uint64x2_t v322 = (uint64x2_t)v321;
      v321.i64[0] = v319.u32[2];
      v321.i64[1] = v319.u32[3];
      uint64x2_t v323 = (uint64x2_t)v321;
      v321.i64[0] = v320.u32[0];
      v321.i64[1] = v320.u32[1];
      int64x2_t v324 = v321;
      v321.i64[0] = v320.u32[2];
      v321.i64[1] = v320.u32[3];
      int64x2_t v325 = vpaddq_s64((int64x2_t)vshlq_u64(v322, (uint64x2_t)vzip1q_s64((int64x2_t)0, v324)), (int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v321)));
      int64x2_t v326 = vpaddq_s64(v324, v321);
      unint64_t v327 = (v325.i64[0] << v309) | v307;
      if (v326.i64[0] + (v309 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v222 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v327;
        unint64_t v327 = (unint64_t)v325.i64[0] >> -(v309 & 0x3F);
        if ((v309 & 0x3F) == 0) {
          unint64_t v327 = 0;
        }
      }
      int8x16_t v328 = vceqq_s8(v65, v80);
      int8x16_t v329 = vaddq_s8(v28, v308);
      unint64_t v330 = v326.i64[0] + v309;
      unint64_t v331 = v327 | (v325.i64[1] << v330);
      if ((v330 & 0x3F) + v326.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v325.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      int8x16_t v332 = vandq_s8(v70, v328);
      unint64_t v333 = v330 + v326.i64[1];
      v334.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v334.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v335.i64[0] = -1;
      v335.i64[1] = -1;
      uint8x16_t v336 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v335, (uint8x16_t)vaddq_s8(v227, v334)), v329);
      int16x8_t v337 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v227.i8);
      int16x8_t v338 = (int16x8_t)vmovl_high_u8((uint8x16_t)v227);
      uint16x8_t v339 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v336.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v337)), (int16x8_t)vshlq_u16(vmovl_high_u8(v336), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v338)));
      uint16x8_t v340 = (uint16x8_t)vpaddq_s16(v337, v338);
      int32x4_t v341 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v340.i8);
      int32x4_t v342 = (int32x4_t)vmovl_high_u16(v340);
      int32x4_t v343 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v339.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v341)), (int32x4_t)vshlq_u32(vmovl_high_u16(v339), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)));
      int32x4_t v344 = vpaddq_s32(v341, v342);
      v345.i64[0] = v343.u32[0];
      v345.i64[1] = v343.u32[1];
      uint64x2_t v346 = (uint64x2_t)v345;
      v345.i64[0] = v343.u32[2];
      v345.i64[1] = v343.u32[3];
      uint64x2_t v347 = (uint64x2_t)v345;
      v345.i64[0] = v344.u32[0];
      v345.i64[1] = v344.u32[1];
      int64x2_t v348 = v345;
      v345.i64[0] = v344.u32[2];
      v345.i64[1] = v344.u32[3];
      int64x2_t v349 = vpaddq_s64((int64x2_t)vshlq_u64(v346, (uint64x2_t)vzip1q_s64((int64x2_t)0, v348)), (int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v345)));
      int64x2_t v350 = vpaddq_s64(v348, v345);
      unint64_t v351 = (v349.i64[0] << v333) | v331;
      if (v350.i64[0] + (v333 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v222 + ((v333 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v351;
        unint64_t v351 = (unint64_t)v349.i64[0] >> -(v333 & 0x3F);
        if ((v333 & 0x3F) == 0) {
          unint64_t v351 = 0;
        }
      }
      int8x16_t v352 = vaddq_s8(v29, v332);
      unint64_t v353 = v350.i64[0] + v333;
      unint64_t v354 = v351 | (v349.i64[1] << v353);
      if ((v353 & 0x3F) + v350.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v354;
        unint64_t v354 = (unint64_t)v349.i64[1] >> -(v353 & 0x3F);
        if ((v353 & 0x3F) == 0) {
          unint64_t v354 = 0;
        }
      }
      unint64_t v355 = v353 + v350.i64[1];
      v356.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v356.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v357.i64[0] = -1;
      v357.i64[1] = -1;
      uint8x16_t v358 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v357, (uint8x16_t)vaddq_s8(v228, v356)), v352);
      int16x8_t v359 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v228.i8);
      int16x8_t v360 = (int16x8_t)vmovl_high_u8((uint8x16_t)v228);
      uint16x8_t v361 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v358.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v359)), (int16x8_t)vshlq_u16(vmovl_high_u8(v358), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v360)));
      uint16x8_t v362 = (uint16x8_t)vpaddq_s16(v359, v360);
      int32x4_t v363 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v362.i8);
      int32x4_t v364 = (int32x4_t)vmovl_high_u16(v362);
      int32x4_t v365 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v361.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v363)), (int32x4_t)vshlq_u32(vmovl_high_u16(v361), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)));
      int32x4_t v366 = vpaddq_s32(v363, v364);
      v367.i64[0] = v365.u32[0];
      v367.i64[1] = v365.u32[1];
      uint64x2_t v368 = (uint64x2_t)v367;
      v367.i64[0] = v365.u32[2];
      v367.i64[1] = v365.u32[3];
      uint64x2_t v369 = (uint64x2_t)v367;
      v367.i64[0] = v366.u32[0];
      v367.i64[1] = v366.u32[1];
      int64x2_t v370 = v367;
      v367.i64[0] = v366.u32[2];
      v367.i64[1] = v366.u32[3];
      int64x2_t v371 = vpaddq_s64((int64x2_t)vshlq_u64(v368, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)), (int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v367)));
      int64x2_t v372 = vpaddq_s64(v370, v367);
      unint64_t v373 = (v371.i64[0] << v355) | v354;
      if (v372.i64[0] + (v355 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v222 + ((v355 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v373;
        if ((v355 & 0x3F) != 0) {
          unint64_t v373 = (unint64_t)v371.i64[0] >> -(v355 & 0x3F);
        }
        else {
          unint64_t v373 = 0;
        }
      }
      unint64_t v374 = v372.i64[0] + v355;
      unint64_t v375 = v373 | (v371.i64[1] << v374);
      if ((v374 & 0x3F) + v372.i64[1] >= 0x40)
      {
        *(void *)((char *)v222 + ((v374 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
        unint64_t v375 = (unint64_t)v371.i64[1] >> -(v374 & 0x3F);
        if ((v374 & 0x3F) == 0) {
          unint64_t v375 = 0;
        }
      }
      unint64_t v376 = v374 + v372.i64[1];
      if ((v376 & 0x3F) != 0) {
        *(void *)((char *)v222 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
      }
      unint64_t result = (v376 - v223 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(unsigned char *)a1 = a3->i8[0];
    *a2 = 96;
    return 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  unsigned __int8 v11 = 0;
  uint64_t v12 = 0;
  uint64_t v38 = *MEMORY[0x263EF8340];
  long long v36 = 0u;
  long long v37 = 0u;
  do
  {
    unint64_t v13 = (char *)&v36 + 4 * v11 + 4;
    int8x8_t v14 = (char *)(a3 + v12 * a4);
    uint64_t v15 = a5;
    do
    {
      *(v13 - 4) = *v14;
      *v13++ = v14[1];
      v14 += 2;
      --v15;
    }
    while (v15);
    ++v12;
    v11 += 2;
  }
  while (v12 != a6);
  unsigned int v16 = 2 * (a5 & 0x7F);
  v31.i32[0] = v36;
  v31.i32[1] = BYTE4(v36);
  v31.i32[2] = BYTE1(v36);
  v31.i32[3] = BYTE5(v36);
  int v32 = BYTE8(v36);
  int v33 = BYTE12(v36);
  if (v16 >= 4) {
    unsigned int v17 = 4;
  }
  else {
    unsigned int v17 = 2 * (a5 & 0x7F);
  }
  if (v16 >= 4) {
    unsigned int v18 = v16 - 4;
  }
  else {
    unsigned int v18 = 0;
  }
  int v34 = BYTE9(v36);
  int v35 = BYTE13(v36);
  if (a6 >= 2) {
    unsigned int v19 = 2;
  }
  else {
    unsigned int v19 = a6;
  }
  if (a6 >= 2) {
    unsigned int v20 = a6 - 2;
  }
  else {
    unsigned int v20 = 0;
  }
  char v21 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v31, a7, v17, v19);
  v31.i32[0] = BYTE2(v36);
  v31.i32[1] = BYTE6(v36);
  v31.i32[2] = BYTE3(v36);
  v31.i32[3] = BYTE7(v36);
  int v32 = BYTE10(v36);
  int v33 = BYTE14(v36);
  int v34 = BYTE11(v36);
  int v35 = HIBYTE(v36);
  if (a6 >= 4) {
    unsigned int v22 = 2;
  }
  else {
    unsigned int v22 = v20;
  }
  int v23 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 4, &v31, a7, v17, v22);
  v31.i32[0] = v37;
  v31.i32[1] = BYTE4(v37);
  v31.i32[2] = BYTE1(v37);
  v31.i32[3] = BYTE5(v37);
  int v32 = BYTE8(v37);
  int v33 = BYTE12(v37);
  if (a5 >= 4) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = v18;
  }
  int v34 = BYTE9(v37);
  int v35 = BYTE13(v37);
  int v25 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, &v31, a7, v24, v19);
  v31.i32[0] = BYTE2(v37);
  v31.i32[1] = BYTE6(v37);
  v31.i32[2] = BYTE3(v37);
  v31.i32[3] = BYTE7(v37);
  int v32 = BYTE10(v37);
  int v33 = BYTE14(v37);
  int v34 = BYTE11(v37);
  int v35 = HIBYTE(v37);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 12, &v31, a7, v24, v22);
  if (v25) {
    char v27 = 4;
  }
  else {
    char v27 = 0;
  }
  if (v23) {
    char v28 = 2;
  }
  else {
    char v28 = 0;
  }
  if (result) {
    char v29 = -8;
  }
  else {
    char v29 = -16;
  }
  *a2 = v29 | v27 | v21 | v28;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int32x2_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4 = 8 * (a3 & 7);
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v4 + 12;
  unint64_t v7 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v4;
  if (v4 >= 0x35) {
    v7 |= *(void *)(v5 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v8 = (8 * (a3 & 7)) | 0x80;
  int8x16_t v9 = vdupq_n_s8(((a4 >> 5) | (8 * v7)) & 0xF);
  v10.i64[0] = 0x303030303030303;
  v10.i64[1] = 0x303030303030303;
  int8x16_t v11 = vandq_s8(v9, v10);
  int8x16_t v12 = vbicq_s8(vdupq_n_s8(((v7 >> 1) & 7) + 1), vceqq_s8(v11, v10));
  v10.i64[0] = 0x202020202020202;
  v10.i64[1] = 0x202020202020202;
  int8x16_t v13 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)0x4000400040004)))), v10);
  if (vmaxvq_s8(v13) < 1)
  {
    int v23 = 0;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int8x16_t v25 = v12;
    int8x16_t v26 = v12;
    int8x16_t v27 = v12;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    int8x16_t v29 = v12;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
  }
  else
  {
    int16x8_t v14 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v13, v13));
    int32x4_t v15 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v14, v14));
    unint64_t v16 = vpaddq_s32(v15, v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19 + v6;
    if (v19 <= 0x80 && v8 >= v20)
    {
      int64x2_t v32 = vaddq_s64(vzip1q_s64((int64x2_t)0, v18), vdupq_n_s64(v6 & 0x3C));
      int v33 = (int64x2_t *)(v5 + ((v6 >> 3) & 8));
      int32x4_t v22 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v33, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33->i64[0], 0), (uint64x2_t)vnegq_s64(v32)));
      if (v19 + (v6 & 0x3C) < 0x81)
      {
        int v23 = 0;
      }
      else
      {
        int v23 = 0;
        int32x4_t v22 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v33[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), (int8x16_t)v22);
      }
      unint64_t v6 = v20;
    }
    else
    {
      int32x4_t v22 = 0uLL;
      int v23 = 1;
    }
    int32x2_t v34 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL));
    v35.i64[0] = v34.u32[0];
    v35.i64[1] = v34.u32[1];
    int32x4_t v36 = (int32x4_t)vshlq_u64((uint64x2_t)v22, (uint64x2_t)vnegq_s64(v35));
    *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v22);
    *(int32x2_t *)v36.i8 = vmovn_s64((int64x2_t)v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s32(v22, v36);
    int16x8_t v38 = (int16x8_t)vshlq_u32((uint32x4_t)v37, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL)))));
    *(int16x4_t *)v37.i8 = vmovn_s32((int32x4_t)v37);
    *(int16x4_t *)v38.i8 = vmovn_s32((int32x4_t)v38);
    int16x8_t v39 = vzip1q_s16(v37, v38);
    *(int8x8_t *)v39.i8 = vzip1_s8(vmovn_s16(v39), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v39, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v9.i8))))));
    v37.i64[0] = 0x101010101010101;
    v37.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8((int8x16_t)v37, v13);
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v40.i64[0] = vandq_s8((int8x16_t)v39, vaddq_s8(v40, (int8x16_t)v37)).u64[0];
    int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
    int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 1);
    int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 2);
    int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 3);
    int8x16_t v29 = vsubq_s8(v12, v41);
    int8x16_t v27 = vsubq_s8(v12, v42);
    int8x16_t v26 = vsubq_s8(v12, v43);
    int8x16_t v25 = vsubq_s8(v12, v44);
    int8x16_t v31 = vceqzq_s8(v41);
    int8x16_t v30 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v24 = vceqzq_s8(v44);
  }
  v45.i64[0] = 0x707070707070707;
  v45.i64[1] = 0x707070707070707;
  int32x4_t v46 = 0uLL;
  int8x16_t v47 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v9, v45), (int8x16_t)0, 0xFuLL), v12);
  int16x8_t v48 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v47, v47));
  int32x4_t v49 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v48, v48));
  unint64_t v50 = vpaddq_s32(v49, v49).u64[0];
  v51.i64[0] = v50;
  v51.i64[1] = HIDWORD(v50);
  int64x2_t v52 = v51;
  unint64_t v53 = vaddvq_s64(v51);
  unint64_t v54 = v53 + v6;
  if (v53 <= 0x80 && v8 >= v54)
  {
    unint64_t v56 = v6 & 0x3F;
    int64x2_t v57 = vaddq_s64(vzip1q_s64((int64x2_t)0, v52), vdupq_n_s64(v56));
    int8x16_t v58 = (int64x2_t *)(v5 + 8 * (v6 >> 6));
    int32x4_t v46 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v58, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58->i64[0], 0), (uint64x2_t)vnegq_s64(v57)));
    if (v53 + v56 >= 0x81) {
      int32x4_t v46 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v58[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v57))), (int8x16_t)v46);
    }
    unint64_t v6 = v54;
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v59 = vandq_s8(v29, (int8x16_t)xmmword_242EA7380);
  int v60 = (a4 >> 5) & 3;
  if (v60 != 2)
  {
    unsigned int v64 = 0;
    unsigned int v62 = 0;
    unint64_t v65 = v6;
    goto LABEL_34;
  }
  unint64_t v61 = v6 + 4;
  if (v8 < v6 + 4)
  {
    unsigned int v62 = 0;
    unint64_t v61 = v6;
LABEL_33:
    unsigned int v64 = 0;
    int v23 = 1;
    unint64_t v65 = v61;
    goto LABEL_34;
  }
  uint64_t v66 = *(void *)(v5 + 8 * (v6 >> 6)) >> v6;
  if ((v6 & 0x3F) >= 0x3D) {
    v66 |= *(void *)(v5 + 8 * (v6 >> 6) + 8) << -(v6 & 0x3F);
  }
  unint64_t v65 = v6 + 8;
  unsigned int v62 = (int)(v66 << 28) >> 28;
  if (v8 < v6 + 8) {
    goto LABEL_33;
  }
  uint64_t v63 = *(void *)(v5 + 8 * (v61 >> 6)) >> v61;
  if ((v61 & 0x3F) >= 0x3D) {
    v63 |= *(void *)(v5 + 8 * (v61 >> 6) + 8) << -(v61 & 0x3F);
  }
  unsigned int v64 = (int)(v63 << 28) >> 28;
LABEL_34:
  int8x16_t v67 = vandq_s8(v27, (int8x16_t)xmmword_242EA7390);
  v59.i8[0] = 0;
  int16x8_t v68 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v65;
  int32x4_t v75 = 0uLL;
  if (v73 <= 0x80 && v8 >= v74)
  {
    unint64_t v78 = v65 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v78));
    int8x16_t v80 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v73 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v65 = v74;
  }
  else
  {
    int v23 = 1;
    int32x4_t v77 = 0uLL;
  }
  int8x16_t v81 = vandq_s8(v26, (int8x16_t)xmmword_242EA7390);
  int16x8_t v82 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int32x4_t v83 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v82, v82));
  unint64_t v84 = vpaddq_s32(v83, v83).u64[0];
  v85.i64[0] = v84;
  v85.i64[1] = HIDWORD(v84);
  int64x2_t v86 = v85;
  unint64_t v87 = vaddvq_s64(v85);
  if (v87 < 0x81)
  {
    int32x2_t v88 = vzip1_s32(*(int32x2_t *)v83.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL));
    v89.i64[0] = v88.u32[0];
    v89.i64[1] = v88.u32[1];
    int64x2_t v90 = v89;
    int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v82.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v82, (int8x16_t)v82, 8uLL)));
    int16x8_t v92 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)));
    unint64_t v93 = v87 + v65;
    if (v8 >= v87 + v65)
    {
      unint64_t v94 = v65 & 0x3F;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v86), vdupq_n_s64(v94));
      int8x16_t v96 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v75 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v87 + v94 >= 0x81) {
        int32x4_t v75 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), (int8x16_t)v75);
      }
      unint64_t v65 = v93;
    }
    else
    {
      int v23 = 1;
    }
    int32x4_t v97 = (int32x4_t)vshlq_u64((uint64x2_t)v75, (uint64x2_t)vnegq_s64(v90));
    *(int32x2_t *)v75.i8 = vmovn_s64((int64x2_t)v75);
    *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
    int16x8_t v98 = (int16x8_t)vzip1q_s32(v75, v97);
    int16x8_t v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32(v91));
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    int16x8_t v100 = vzip1q_s16(v98, v99);
    int16x8_t v101 = (int16x8_t)vshlq_u16((uint16x8_t)v100, (uint16x8_t)vnegq_s16(v92));
    *(int8x8_t *)v100.i8 = vmovn_s16(v100);
    *(int8x8_t *)v101.i8 = vmovn_s16(v101);
    int32x4_t v75 = (int32x4_t)vzip1q_s8((int8x16_t)v100, (int8x16_t)v101);
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v102 = vandq_s8(v25, (int8x16_t)xmmword_242EA7390);
  int16x8_t v103 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v81, v81));
  int32x4_t v104 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v103, v103));
  unint64_t v105 = vpaddq_s32(v104, v104).u64[0];
  v106.i64[0] = v105;
  v106.i64[1] = HIDWORD(v105);
  int64x2_t v107 = v106;
  unint64_t v108 = vaddvq_s64(v106);
  if (v108 <= 0x80)
  {
    int32x2_t v110 = vzip1_s32(*(int32x2_t *)v104.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v104, (int8x16_t)v104, 8uLL));
    v111.i64[0] = v110.u32[0];
    v111.i64[1] = v110.u32[1];
    int64x2_t v112 = v111;
    int32x4_t v113 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v103.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v103, (int8x16_t)v103, 8uLL)));
    int16x8_t v114 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
    unint64_t v115 = v108 + v65;
    if (v8 >= v108 + v65)
    {
      unint64_t v117 = v65 & 0x3F;
      int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v107), vdupq_n_s64(v117));
      int8x16_t v119 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
      if (v108 + v117 >= 0x81) {
        int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v116);
      }
      unint64_t v65 = v115;
    }
    else
    {
      int32x4_t v116 = 0uLL;
      int v23 = 1;
    }
    int32x4_t v120 = (int32x4_t)vshlq_u64((uint64x2_t)v116, (uint64x2_t)vnegq_s64(v112));
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v120.i8 = vmovn_s64((int64x2_t)v120);
    int16x8_t v121 = (int16x8_t)vzip1q_s32(v116, v120);
    int16x8_t v122 = (int16x8_t)vshlq_u32((uint32x4_t)v121, (uint32x4_t)vnegq_s32(v113));
    *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v121);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v122);
    int16x8_t v123 = vzip1q_s16(v121, v122);
    int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)v123, (uint16x8_t)vnegq_s16(v114));
    *(int8x8_t *)v123.i8 = vmovn_s16(v123);
    *(int8x8_t *)v124.i8 = vmovn_s16(v124);
    int8x16_t v109 = vzip1q_s8((int8x16_t)v123, (int8x16_t)v124);
  }
  else
  {
    int v23 = 1;
    int8x16_t v109 = 0uLL;
  }
  int16x8_t v125 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v102, v102));
  int32x4_t v126 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v125, v125));
  unint64_t v127 = vpaddq_s32(v126, v126).u64[0];
  v128.i64[0] = v127;
  v128.i64[1] = HIDWORD(v127);
  int64x2_t v129 = v128;
  unint64_t v130 = vaddvq_s64(v128);
  if (v130 > 0x80 || v8 < v130 + v65) {
    goto LABEL_64;
  }
  int64x2_t v131 = vaddq_s64(vzip1q_s64((int64x2_t)0, v129), vdupq_n_s64(v65 & 0x3F));
  int8x16_t v132 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
  int64x2_t v133 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
  if (v130 + (v65 & 0x3F) >= 0x81) {
    int64x2_t v133 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), (int8x16_t)v133);
  }
  if (v23 || (uint64_t v134 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v134) - (v130 + v65) >= 9))
  {
LABEL_64:
    uint64_t v134 = 0;
    v191 |= 255 << (8 * ((&v191 + 7) & 7u));
    a1->i32[0] = 0;
    *(__int32 *)((char *)a1->i32 + a2) = 0;
    *(__int32 *)((char *)a1->i32 + 2 * a2) = 0;
    *(__int32 *)((char *)a1->i32 + 3 * a2) = 0;
  }
  else
  {
    int32x2_t v136 = vzip1_s32(*(int32x2_t *)v49.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL));
    int32x2_t v137 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v138.i64[0] = v136.u32[0];
    v138.i64[1] = v136.u32[1];
    int64x2_t v139 = v138;
    v138.i64[0] = v137.u32[0];
    v138.i64[1] = v137.u32[1];
    int32x4_t v140 = (int32x4_t)vshlq_u64((uint64x2_t)v46, (uint64x2_t)vnegq_s64(v139));
    int32x4_t v141 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v46.i8 = vmovn_s64((int64x2_t)v46);
    *(int32x2_t *)v140.i8 = vmovn_s64((int64x2_t)v140);
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v141);
    int16x8_t v142 = (int16x8_t)vzip1q_s32(v46, v140);
    int16x8_t v143 = (int16x8_t)vzip1q_s32(v77, v141);
    int16x8_t v144 = (int16x8_t)vshlq_u32((uint32x4_t)v142, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v48.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v48, (int8x16_t)v48, 8uLL)))));
    int16x8_t v145 = (int16x8_t)vshlq_u32((uint32x4_t)v143, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v142.i8 = vmovn_s32((int32x4_t)v142);
    *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
    *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
    *(int16x4_t *)v145.i8 = vmovn_s32((int32x4_t)v145);
    int16x8_t v146 = vzip1q_s16(v142, v144);
    int16x8_t v147 = vzip1q_s16(v143, v145);
    int16x8_t v148 = (int16x8_t)vshlq_u16((uint16x8_t)v146, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    int16x8_t v149 = (int16x8_t)vshlq_u16((uint16x8_t)v147, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v146.i8 = vmovn_s16(v146);
    *(int8x8_t *)v148.i8 = vmovn_s16(v148);
    *(int8x8_t *)v147.i8 = vmovn_s16(v147);
    *(int8x8_t *)v149.i8 = vmovn_s16(v149);
    v150.i64[0] = 0x808080808080808;
    v150.i64[1] = 0x808080808080808;
    v151.i64[0] = 0x808080808080808;
    v151.i64[1] = 0x808080808080808;
    unint64_t v152 = v7 >> 4;
    int8x16_t v153 = vzip1q_s8((int8x16_t)v146, (int8x16_t)v148);
    v148.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v148.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v154 = vzip1q_s8((int8x16_t)v147, (int8x16_t)v149);
    v149.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v149.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v155 = vsubq_s8(v151, v67);
    *(int32x2_t *)v143.i8 = vzip1_s32(*(int32x2_t *)v126.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v126, (int8x16_t)v126, 8uLL));
    v156.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v156.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v157.i64[0] = 0x808080808080808;
    v157.i64[1] = 0x808080808080808;
    int32x4_t v158 = (int32x4_t)vaddq_s8(v67, (int8x16_t)v149);
    v138.i64[0] = v143.u32[0];
    v138.i64[1] = v143.u32[1];
    int8x16_t v159 = vshlq_s8(vshlq_s8(v153, vsubq_s8(v150, v47)), vaddq_s8(v47, (int8x16_t)v148));
    int8x16_t v160 = vshlq_s8(vshlq_s8(v154, vsubq_s8(v151, v59)), vaddq_s8(v59, (int8x16_t)v149));
    int8x16_t v161 = vshlq_s8(vshlq_s8((int8x16_t)v75, v155), (int8x16_t)v158);
    int8x16_t v162 = vshlq_s8(vshlq_s8(v109, vsubq_s8(v151, v81)), vaddq_s8(v81, (int8x16_t)v149));
    int32x4_t v163 = (int32x4_t)vshlq_u64((uint64x2_t)v133, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v158.i8 = vmovn_s64(v133);
    *(int32x2_t *)v163.i8 = vmovn_s64((int64x2_t)v163);
    int16x8_t v164 = (int16x8_t)vzip1q_s32(v158, v163);
    int16x8_t v165 = (int16x8_t)vshlq_u32((uint32x4_t)v164, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v125.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125, 8uLL)))));
    *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
    *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
    int16x8_t v166 = vzip1q_s16(v164, v165);
    int16x8_t v167 = (int16x8_t)vshlq_u16((uint16x8_t)v166, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v102.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL)))));
    *(int8x8_t *)v166.i8 = vmovn_s16(v166);
    *(int8x8_t *)v167.i8 = vmovn_s16(v167);
    int8x16_t v168 = vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v166, (int8x16_t)v167), vsubq_s8(v157, v102)), vaddq_s8(v102, v156));
    if (v60 == 2)
    {
      v169.i64[0] = 0xFFFF0000FFFF0000;
      v169.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v170 = vmlaq_s8(vandq_s8(vdupq_n_s8(v64), v169), vdupq_n_s8(v62), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v160 = vaddq_s8(v160, v170);
      int8x16_t v161 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v64), v170), v161);
      int8x16_t v162 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62), v170), v162);
      int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62 + 2 * v64), v170), v168);
    }
    int8x8_t v171 = (int8x8_t)vdupq_n_s8(v152).u64[0];
    int8x16_t v172 = vaddq_s8(vandq_s8(v159, v31), v160);
    int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v159.i8, 0);
    int8x16_t v174 = vsubq_s8(v172, vandq_s8(v173, v31));
    int8x16_t v175 = vsubq_s8(v161, vandq_s8(v173, v30));
    int8x16_t v176 = vsubq_s8(v162, vandq_s8(v173, v28));
    int8x16_t v177 = vsubq_s8(v168, vandq_s8(v173, v24));
    v178.i64[0] = 0x101010101010101;
    v178.i64[1] = 0x101010101010101;
    if (vaddlvq_s8(vceqq_s8(v11, v178)))
    {
      int8x16_t v179 = v174;
      v179.i8[0] = v174.i8[7];
      v179.i8[7] = v174.i8[0];
      int8x16_t v180 = vnegq_s8(vandq_s8(v9, v178));
      int8x16_t v181 = vbslq_s8(v180, v179, v174);
      int8x16_t v182 = vaddq_s8(vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73B0), v180), v181);
      v174.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73C0), v180), v182).u64[0];
      int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA73D0), v180), v175);
      v175.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA73E0), v180), v183).u64[0];
      int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA73F0), v180), v176);
      v176.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA7400), v180), v184).u64[0];
      int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7410), v180), v177);
      v177.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA7420), v180), v185).u64[0];
    }
    int32x2_t v186 = (int32x2_t)vadd_s8(v171, *(int8x8_t *)v174.i8);
    int32x2_t v187 = (int32x2_t)vadd_s8(*(int8x8_t *)v175.i8, v171);
    *a1 = vzip1_s32(v186, v187);
    *(int32x2_t *)((char *)a1 + a2) = vzip2_s32(v186, v187);
    int8x16_t v188 = (int32x2_t *)((char *)a1 + 2 * a2);
    int32x2_t v189 = (int32x2_t)vadd_s8(*(int8x8_t *)v176.i8, v171);
    int32x2_t v190 = (int32x2_t)vadd_s8(*(int8x8_t *)v177.i8, v171);
    int32x2_t *v188 = vzip1_s32(v189, v190);
    *(int32x2_t *)((char *)v188 + a2) = vzip2_s32(v189, v190);
  }
  return v134;
}

int8x8_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(int8x8_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v5 = 0;
  uint64_t v209 = *MEMORY[0x263EF8340];
  unsigned int v6 = a5 & 0xFFFFFFFD;
  unsigned int v193 = a4;
  uint64_t v192 = a3;
  do
  {
    uint64_t v23 = a3 + 4 * v5;
    int8x16_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = 8 * (v23 & 7);
    if ((a4 >> v5))
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = v25;
      do
      {
        if ((unint64_t)(v28 - v25 + (v27 << 6) - 29) < 0xFFFFFFFFFFFFFFDFLL)
        {
          char v29 = 0;
        }
        else
        {
          char v29 = 0;
          uint64_t v33 = 0;
          unint64_t v34 = 4;
          do
          {
            if (64 - v28 >= v34) {
              unint64_t v35 = v34;
            }
            else {
              unint64_t v35 = 64 - v28;
            }
            v29 |= (unint64_t)((v24[v27] >> v28) & ~(-1 << v35)) << v33;
            v33 += v35;
            unint64_t v36 = v35 + v28;
            v27 += v36 >> 6;
            uint64_t v28 = v36 & 0x3F;
            v34 -= v35;
          }
          while (v34);
        }
        int v30 = 16 * (v29 & 0xF);
        int v31 = v30 - (v29 & 1) + 8;
        if (v30 == 240) {
          int v31 = 255;
        }
        if (!v30) {
          int v31 = 0;
        }
        if (v30 == 128 && v6 == 1) {
          int v31 = v30;
        }
        if (a5 == 4) {
          int v31 = v30;
        }
        *(&v194 + v26++) = v31 ^ (((a5 & 0xFFFFFFFD) == 1) << 7);
      }
      while (v26 != 8);
      LOBYTE(v8) = v194;
      LOBYTE(v7) = v195;
      LOBYTE(v9) = v196;
      LOBYTE(v10) = v197;
      LOBYTE(v11) = v198;
      LOBYTE(v12) = v199;
      char v14 = v200;
      LOBYTE(v13) = v201;
      goto LABEL_3;
    }
    uint64_t v37 = v25 | 3;
    if (((*v24 >> v25) & 7) == 0)
    {
      uint64_t v39 = 0;
      if ((unint64_t)(v37 - v25) <= 0x1E)
      {
        char v134 = 0;
        uint64_t v135 = 0;
        unint64_t v136 = 2;
        do
        {
          unint64_t v137 = 64 - v37;
          if (64 - v37 >= v136) {
            unint64_t v137 = v136;
          }
          v134 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v137)) << v135;
          v135 += v137;
          unint64_t v138 = v137 + v37;
          v39 += v138 >> 6;
          uint64_t v37 = v138 & 0x3F;
          v136 -= v137;
        }
        while (v136);
        int v40 = v134 & 3;
        if (v40 == 2)
        {
          unsigned int v38 = 0;
          int v41 = 1;
          goto LABEL_30;
        }
        if (v40 == 1)
        {
          int v41 = 0;
          int v40 = 2;
          int v42 = 5;
          unsigned int v38 = 255;
          goto LABEL_31;
        }
        if ((v134 & 3) != 0)
        {
          unsigned int v38 = 0;
          int v40 = 2;
          int v42 = 5;
          int v41 = 2;
          goto LABEL_31;
        }
      }
      unsigned int v38 = 0;
      int v41 = 0;
      int v40 = 2;
LABEL_30:
      int v42 = 5;
      goto LABEL_31;
    }
    unsigned int v38 = 0;
    uint64_t v39 = 0;
    int v40 = 0;
    int v41 = ((*v24 >> v25) & 7) + 2;
    int v42 = 3;
LABEL_31:
    int8x16_t v43 = &kDQuadParamTable[10 * v41];
    LODWORD(v44) = v43[4];
    unsigned int v45 = v43[5];
    if (v44 >= 8) {
      uint64_t v44 = 8;
    }
    else {
      uint64_t v44 = v44;
    }
    if (v45 >= 8) {
      uint64_t v46 = 8;
    }
    else {
      uint64_t v46 = v45;
    }
    char v47 = 8 - v44;
    if (v41)
    {
      if (v44)
      {
        if ((unint64_t)(v44 - v25 + v37 + (v39 << 6)) <= 0x20)
        {
          int v48 = 0;
          uint64_t v49 = 0;
          unint64_t v50 = v44;
          do
          {
            unint64_t v51 = 64 - v37;
            if (64 - v37 >= v50) {
              unint64_t v51 = v50;
            }
            v48 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v51)) << v49;
            v49 += v51;
            unint64_t v52 = v51 + v37;
            v39 += v52 >> 6;
            uint64_t v37 = v52 & 0x3F;
            v50 -= v51;
          }
          while (v50);
        }
        else
        {
          int v48 = 0;
        }
        int v42 = v44 + v40 + 3;
      }
      else
      {
        int v48 = 0;
      }
      unsigned int v38 = v48 << v47;
    }
    if (v46)
    {
      if ((unint64_t)(v37 - v25 + (v39 << 6) + 3) <= 0x20)
      {
        int v53 = 0;
        uint64_t v55 = 0;
        unint64_t v56 = 3;
        do
        {
          unint64_t v57 = 64 - v37;
          if (64 - v37 >= v56) {
            unint64_t v57 = v56;
          }
          v53 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v57)) << v55;
          v55 += v57;
          unint64_t v58 = v57 + v37;
          v39 += v58 >> 6;
          uint64_t v37 = v58 & 0x3F;
          v56 -= v57;
        }
        while (v56);
      }
      else
      {
        int v53 = 0;
      }
      uint64_t v205 = 0;
      uint64_t v206 = 0;
      int v208 = 0;
      uint64_t v207 = 0;
      unsigned int v59 = 29 - v42;
      unsigned int v60 = (29 - v42) / 7u;
      uint64_t v61 = v46 - v25;
      unint64_t v62 = (v37 | (v39 << 6)) + v59 % 7;
      unint64_t v63 = v62 & 0x3F;
      if (v46 - v25 + v63 + (v62 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        uint64_t v54 = 0;
        uint64_t v64 = 0;
        unint64_t v65 = v62 >> 6;
        unint64_t v66 = v46;
        do
        {
          unint64_t v67 = 64 - v63;
          if (64 - v63 >= v66) {
            unint64_t v67 = v66;
          }
          v54 |= ((unint64_t)((v24[v65] >> v63) & ~(-1 << v67)) << v64);
          v64 += v67;
          unint64_t v68 = v67 + v63;
          v65 += v68 >> 6;
          unint64_t v63 = v68 & 0x3F;
          v66 -= v67;
        }
        while (v66);
        LODWORD(v205) = v54;
        unint64_t v62 = v63 | (v65 << 6);
      }
      else
      {
        uint64_t v54 = 0;
      }
      uint64_t v69 = v60 - v46;
      unint64_t v70 = v62 + v69;
      uint64_t v71 = (v62 + v69) & 0x3F;
      if (v61 + v71 + ((v62 + v69) & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v72 = 0;
        uint64_t v73 = 0;
        unint64_t v74 = v70 >> 6;
        unint64_t v75 = v46;
        do
        {
          unint64_t v76 = 64 - v71;
          if (64 - v71 >= v75) {
            unint64_t v76 = v75;
          }
          v72 |= (unint64_t)((v24[v74] >> v71) & ~(-1 << v76)) << v73;
          v73 += v76;
          unint64_t v77 = v76 + v71;
          v74 += v77 >> 6;
          uint64_t v71 = v77 & 0x3F;
          v75 -= v76;
        }
        while (v75);
        HIDWORD(v205) = v72;
        unint64_t v70 = v71 | (v74 << 6);
      }
      else
      {
        HIDWORD(v205) = 0;
      }
      unint64_t v78 = v70 + v69;
      uint64_t v79 = v78 & 0x3F;
      if (v61 + v79 + (v78 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v80 = 0;
        uint64_t v81 = 0;
        unint64_t v82 = v78 >> 6;
        unint64_t v83 = v46;
        do
        {
          unint64_t v84 = 64 - v79;
          if (64 - v79 >= v83) {
            unint64_t v84 = v83;
          }
          v80 |= (unint64_t)((v24[v82] >> v79) & ~(-1 << v84)) << v81;
          v81 += v84;
          unint64_t v85 = v84 + v79;
          v82 += v85 >> 6;
          uint64_t v79 = v85 & 0x3F;
          v83 -= v84;
        }
        while (v83);
        LODWORD(v206) = v80;
        unint64_t v78 = v79 | (v82 << 6);
      }
      else
      {
        LODWORD(v206) = 0;
      }
      unint64_t v86 = v78 + v69;
      uint64_t v87 = v86 & 0x3F;
      if (v61 + v87 + (v86 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v88 = 0;
        uint64_t v89 = 0;
        unint64_t v90 = v86 >> 6;
        unint64_t v91 = v46;
        do
        {
          unint64_t v92 = 64 - v87;
          if (64 - v87 >= v91) {
            unint64_t v92 = v91;
          }
          v88 |= (unint64_t)((v24[v90] >> v87) & ~(-1 << v92)) << v89;
          v89 += v92;
          unint64_t v93 = v92 + v87;
          v90 += v93 >> 6;
          uint64_t v87 = v93 & 0x3F;
          v91 -= v92;
        }
        while (v91);
        HIDWORD(v206) = v88;
        unint64_t v86 = v87 | (v90 << 6);
      }
      else
      {
        HIDWORD(v206) = 0;
      }
      unint64_t v94 = v86 + v69;
      uint64_t v95 = v94 & 0x3F;
      if (v61 + v95 + (v94 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v96 = 0;
        uint64_t v97 = 0;
        unint64_t v98 = v94 >> 6;
        unint64_t v99 = v46;
        do
        {
          unint64_t v100 = 64 - v95;
          if (64 - v95 >= v99) {
            unint64_t v100 = v99;
          }
          v96 |= (unint64_t)((v24[v98] >> v95) & ~(-1 << v100)) << v97;
          v97 += v100;
          unint64_t v101 = v100 + v95;
          v98 += v101 >> 6;
          uint64_t v95 = v101 & 0x3F;
          v99 -= v100;
        }
        while (v99);
        LODWORD(v207) = v96;
        unint64_t v94 = v95 | (v98 << 6);
      }
      else
      {
        LODWORD(v207) = 0;
      }
      unint64_t v102 = v94 + v69;
      unint64_t v103 = v102 >> 6;
      uint64_t v104 = v102 & 0x3F;
      if (v61 + v104 + (v102 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v105 = 0;
        uint64_t v106 = 0;
        unint64_t v107 = v46;
        do
        {
          unint64_t v108 = 64 - v104;
          if (64 - v104 >= v107) {
            unint64_t v108 = v107;
          }
          v105 |= (unint64_t)((v24[v103] >> v104) & ~(-1 << v108)) << v106;
          v106 += v108;
          unint64_t v109 = v108 + v104;
          v103 += v109 >> 6;
          uint64_t v104 = v109 & 0x3F;
          v107 -= v108;
        }
        while (v107);
      }
      else
      {
        int v105 = 0;
      }
      HIDWORD(v207) = v105;
      unint64_t v110 = (v104 | (v103 << 6)) + v69;
      uint64_t v111 = v110 & 0x3F;
      if (v61 + v111 + (v110 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v112 = 0;
        uint64_t v113 = 0;
        unint64_t v114 = v110 >> 6;
        unint64_t v115 = v46;
        do
        {
          unint64_t v116 = 64 - v111;
          if (64 - v111 >= v115) {
            unint64_t v116 = v115;
          }
          v112 |= (unint64_t)((v24[v114] >> v111) & ~(-1 << v116)) << v113;
          v113 += v116;
          unint64_t v117 = v116 + v111;
          v114 += v117 >> 6;
          uint64_t v111 = v117 & 0x3F;
          v115 -= v116;
        }
        while (v115);
      }
      else
      {
        int v112 = 0;
      }
      int v208 = v112;
    }
    else
    {
      int v53 = 0;
      uint64_t v54 = 0;
      uint64_t v205 = 0;
      uint64_t v206 = 0;
      int v208 = 0;
      uint64_t v207 = 0;
    }
    unint64_t v118 = *(void *)&kDQuadParamTable[10 * v41 + 2];
    if (v118 >> v46 <= 1) {
      unint64_t v119 = 1;
    }
    else {
      unint64_t v119 = v118 >> v46;
    }
    unint64_t v120 = v119 >> 1;
    unint64_t v121 = (unint64_t)(1 << v47) >> 1;
    if (v119 >> 1 < v121) {
      unint64_t v121 = v119 >> 1;
    }
    unint64_t v122 = 128 - v38;
    if (v38) {
      uint64_t v123 = v121;
    }
    else {
      uint64_t v123 = 0;
    }
    BOOL v124 = v38 == 128;
    if (v38 >= 0xFF) {
      char v125 = -1;
    }
    else {
      char v125 = v38;
    }
    char v126 = v125 ^ 0x80;
    if (v119 <= v122)
    {
      char v127 = 127;
    }
    else
    {
      char v126 = 0;
      char v127 = 0;
    }
    if (v6 == 1) {
      char v128 = v126;
    }
    else {
      char v128 = v125;
    }
    if (v6 == 1) {
      LOBYTE(v13) = v127;
    }
    else {
      LOBYTE(v13) = -1;
    }
    if (v46)
    {
      unint64_t v129 = v118 + v38;
      uint64_t v130 = ~(-1 << v46);
      unint64_t v131 = v122 / v119;
      if (!v53)
      {
        uint64_t v133 = 0;
        uint64_t v54 = v123;
        BOOL v132 = v38 == 128;
        goto LABEL_146;
      }
      BOOL v132 = v131 == v54;
      if (v38 || v54)
      {
        if (v129 >= 0x100 && v54 == v130)
        {
          uint64_t v133 = 1;
          uint64_t v54 = 255;
LABEL_146:
          unint64_t v139 = v54 + v38;
          unint64_t v140 = v139;
          if (a5 == 4)
          {
            unint64_t v140 = 2139095039;
            if ((v139 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              unint64_t v140 = 4286578687;
              if ((v139 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
                unint64_t v140 = v139;
              }
            }
          }
          if (v140 >= 0xFF) {
            int v141 = 255;
          }
          else {
            int v141 = v140;
          }
          if (v132) {
            int v142 = 0;
          }
          else {
            int v142 = v141 ^ 0x80;
          }
          if (v6 == 1) {
            int v8 = v142;
          }
          else {
            int v8 = v141;
          }
          int v194 = v8;
          if (v53 == 1)
          {
            uint64_t v143 = v123;
            BOOL v144 = v38 == 128;
          }
          else
          {
            uint64_t v145 = *(unsigned int *)((unint64_t)&v205 | (4 * v133));
            BOOL v144 = v131 == v145;
            if (v38 | v145)
            {
              if (v129 >= 0x100 && v145 == v130) {
                uint64_t v143 = 255;
              }
              else {
                uint64_t v143 = v120 + v119 * v145;
              }
            }
            else
            {
              uint64_t v143 = 0;
            }
            ++v133;
          }
          unint64_t v146 = v143 + v38;
          unint64_t v147 = v146;
          if (a5 == 4)
          {
            unint64_t v147 = 2139095039;
            if ((v146 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              unint64_t v147 = 4286578687;
              if ((v146 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
                unint64_t v147 = v146;
              }
            }
          }
          if (v147 >= 0xFF) {
            int v148 = 255;
          }
          else {
            int v148 = v147;
          }
          if (v144) {
            int v7 = 0;
          }
          else {
            int v7 = v148 ^ 0x80;
          }
          if (v6 != 1) {
            int v7 = v148;
          }
          int v195 = v7;
          if (v53 == 2)
          {
            uint64_t v149 = v123;
            BOOL v150 = v38 == 128;
          }
          else
          {
            uint64_t v151 = *((unsigned int *)&v205 + v133);
            BOOL v150 = v131 == v151;
            if (v38 | v151)
            {
              if (v129 >= 0x100 && v151 == v130) {
                uint64_t v149 = 255;
              }
              else {
                uint64_t v149 = v120 + v119 * v151;
              }
            }
            else
            {
              uint64_t v149 = 0;
            }
            ++v133;
          }
          unint64_t v152 = v149 + v38;
          unint64_t v153 = v152;
          if (a5 == 4)
          {
            unint64_t v153 = 2139095039;
            if ((v152 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              if ((v152 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
                unint64_t v153 = 4286578687;
              }
              else {
                unint64_t v153 = v152;
              }
            }
          }
          if (v153 >= 0xFF) {
            int v154 = 255;
          }
          else {
            int v154 = v153;
          }
          if (v150) {
            int v9 = 0;
          }
          else {
            int v9 = v154 ^ 0x80;
          }
          if (v6 != 1) {
            int v9 = v154;
          }
          int v196 = v9;
          if (v53 == 3)
          {
            uint64_t v155 = v123;
            BOOL v156 = v38 == 128;
          }
          else
          {
            uint64_t v157 = *((unsigned int *)&v205 + v133);
            BOOL v156 = v131 == v157;
            if (v38 | v157)
            {
              if (v129 >= 0x100 && v157 == v130) {
                uint64_t v155 = 255;
              }
              else {
                uint64_t v155 = v120 + v119 * v157;
              }
            }
            else
            {
              uint64_t v155 = 0;
            }
            ++v133;
          }
          unint64_t v158 = v155 + v38;
          unint64_t v159 = v158;
          if (a5 == 4)
          {
            unint64_t v159 = 2139095039;
            if ((v158 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              if ((v158 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
                unint64_t v159 = 4286578687;
              }
              else {
                unint64_t v159 = v158;
              }
            }
          }
          if (v159 >= 0xFF) {
            int v160 = 255;
          }
          else {
            int v160 = v159;
          }
          if (v156) {
            int v161 = 0;
          }
          else {
            int v161 = v160 ^ 0x80;
          }
          if (v6 == 1) {
            int v10 = v161;
          }
          else {
            int v10 = v160;
          }
          int v197 = v10;
          if (v53 == 4)
          {
            uint64_t v162 = v123;
            BOOL v163 = v38 == 128;
          }
          else
          {
            uint64_t v164 = *((unsigned int *)&v205 + v133);
            BOOL v163 = v131 == v164;
            if (v38 | v164)
            {
              if (v129 >= 0x100 && v164 == v130) {
                uint64_t v162 = 255;
              }
              else {
                uint64_t v162 = v120 + v119 * v164;
              }
            }
            else
            {
              uint64_t v162 = 0;
            }
            ++v133;
          }
          unint64_t v165 = v162 + v38;
          unint64_t v166 = v165;
          if (a5 == 4)
          {
            unint64_t v166 = 2139095039;
            if ((v165 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              if ((v165 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
                unint64_t v166 = 4286578687;
              }
              else {
                unint64_t v166 = v165;
              }
            }
          }
          if (v166 >= 0xFF) {
            int v167 = 255;
          }
          else {
            int v167 = v166;
          }
          if (v163) {
            int v168 = 0;
          }
          else {
            int v168 = v167 ^ 0x80;
          }
          if (v6 == 1) {
            int v11 = v168;
          }
          else {
            int v11 = v167;
          }
          int v198 = v11;
          uint64_t v191 = ~(-1 << v46);
          if (v53 == 5)
          {
            uint64_t v169 = v123;
            BOOL v170 = v38 == 128;
          }
          else
          {
            uint64_t v171 = *((unsigned int *)&v205 + v133);
            BOOL v170 = v131 == v171;
            if (v38 | v171)
            {
              if (v129 >= 0x100 && v171 == v130) {
                uint64_t v169 = 255;
              }
              else {
                uint64_t v169 = v120 + v119 * v171;
              }
            }
            else
            {
              uint64_t v169 = 0;
            }
            ++v133;
          }
          unint64_t v172 = v169 + v38;
          unint64_t v173 = v172;
          if (a5 == 4)
          {
            unint64_t v173 = 2139095039;
            if ((v172 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              if ((v172 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
                unint64_t v173 = 4286578687;
              }
              else {
                unint64_t v173 = v172;
              }
            }
          }
          if (v173 >= 0xFF) {
            int v174 = 255;
          }
          else {
            int v174 = v173;
          }
          if (v170) {
            int v175 = 0;
          }
          else {
            int v175 = v174 ^ 0x80;
          }
          if (v6 == 1) {
            int v12 = v175;
          }
          else {
            int v12 = v174;
          }
          int v199 = v12;
          if (v53 == 6)
          {
            uint64_t v176 = v123;
            BOOL v177 = v38 == 128;
          }
          else
          {
            uint64_t v178 = *((unsigned int *)&v205 + v133);
            BOOL v177 = v131 == v178;
            if (v38 | v178)
            {
              if (v129 >= 0x100 && v178 == v191) {
                uint64_t v176 = 255;
              }
              else {
                uint64_t v176 = v120 + v119 * v178;
              }
            }
            else
            {
              uint64_t v176 = 0;
            }
            ++v133;
          }
          unint64_t v179 = v176 + v38;
          unint64_t v180 = v179;
          if (a5 == 4)
          {
            unint64_t v180 = 2139095039;
            if ((v179 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              if ((v179 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
                unint64_t v180 = 4286578687;
              }
              else {
                unint64_t v180 = v179;
              }
            }
          }
          if (v180 >= 0xFF) {
            char v181 = -1;
          }
          else {
            char v181 = v180;
          }
          if (v177) {
            char v14 = 0;
          }
          else {
            char v14 = v181 ^ 0x80;
          }
          if (v6 != 1) {
            char v14 = v181;
          }
          if (v53 != 7)
          {
            uint64_t v182 = *((unsigned int *)&v205 + v133);
            BOOL v124 = v131 == v182;
            if (v38 | v182)
            {
              if (v129 >= 0x100 && v182 == v191) {
                uint64_t v123 = 255;
              }
              else {
                uint64_t v123 = v120 + v119 * v182;
              }
            }
            else
            {
              uint64_t v123 = 0;
            }
          }
          unint64_t v183 = v123 + v38;
          unint64_t v13 = v183;
          if (a5 == 4)
          {
            unint64_t v13 = 2139095039;
            if ((v183 & 0xFFFFFFFFFFC00000) != 0x7F800000)
            {
              unint64_t v13 = 4286578687;
              if ((v183 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
                unint64_t v13 = v123 + v38;
              }
            }
          }
          if (v13 >= 0xFF) {
            LOBYTE(v13) = -1;
          }
          if (v124) {
            char v184 = 0;
          }
          else {
            char v184 = v13 ^ 0x80;
          }
          if (v6 == 1) {
            LOBYTE(v13) = v184;
          }
LABEL_311:
          a4 = v193;
          a3 = v192;
          goto LABEL_3;
        }
        uint64_t v54 = v120 + v119 * v54;
      }
      uint64_t v133 = 1;
      goto LABEL_146;
    }
    if (a5 != 4)
    {
      LOBYTE(v13) = v128;
      char v14 = v128;
      LOBYTE(v12) = v128;
      LOBYTE(v11) = v128;
      LOBYTE(v10) = v128;
      LOBYTE(v9) = v128;
      LOBYTE(v7) = v128;
      LOBYTE(v8) = v128;
      goto LABEL_311;
    }
    char v14 = v13;
    LOBYTE(v12) = v13;
    LOBYTE(v11) = v13;
    LOBYTE(v10) = v13;
    LOBYTE(v9) = v13;
    LOBYTE(v7) = v13;
    LOBYTE(v8) = v13;
    a4 = v193;
    a3 = v192;
    if ((v38 & 0x7FC00000 | 0x80000000) != 0xFF800000)
    {
      LOBYTE(v13) = v128;
      char v14 = v128;
      LOBYTE(v12) = v128;
      LOBYTE(v11) = v128;
      LOBYTE(v10) = v128;
      LOBYTE(v9) = v128;
      LOBYTE(v7) = v128;
      LOBYTE(v8) = v128;
    }
LABEL_3:
    int32x4_t v15 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v5;
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int64x2_t v18 = (char *)v202 + 4 * v16;
    v18[v17] = v8;
    unint64_t v19 = (char *)v202 + 4 * (v16 + 1);
    v19[v17] = v7;
    uint64_t v20 = (v17 + 1);
    v18[v20] = v9;
    v19[v20] = v10;
    char v21 = (char *)v202 + 4 * (v16 + 2);
    v21[v17] = v11;
    int32x4_t v22 = (char *)v202 + 4 * (v16 + 3);
    v22[v17] = v12;
    v21[v20] = v14;
    v22[v20] = v13;
    ++v5;
  }
  while (v5 != 4);
  v185.i64[0] = v202[0];
  v186.i64[0] = v202[1];
  v185.i64[1] = v202[0];
  *a1 = vqtbl1_s8(v185, (int8x8_t)0x703060205010400);
  v186.i64[1] = v186.i64[0];
  *(int8x8_t *)((char *)a1 + a2) = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
  int32x2_t v187 = (int8x8_t *)((char *)a1 + a2 + a2);
  v185.i64[0] = v203;
  v186.i64[0] = v204;
  v185.i64[1] = v203;
  *int32x2_t v187 = vqtbl1_s8(v185, (int8x8_t)0x703060205010400);
  v186.i64[1] = v186.i64[0];
  int8x8_t result = vqtbl1_s8(v186, (int8x8_t)0x703060205010400);
  *(int8x8_t *)((char *)v187 + a2) = result;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7, double a8, double a9, int8x8_t a10, double a11, double a12, double a13, int8x8_t a14)
{
  unint64_t v18 = a3;
  uint64_t v20 = (int32x2_t *)result;
  if (a5 >= 4) {
    unsigned int v21 = 4;
  }
  else {
    unsigned int v21 = a5;
  }
  if (a6 >= 4) {
    unsigned int v22 = 4;
  }
  else {
    unsigned int v22 = a6;
  }
  if (v21 && v22)
  {
    int8x8_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int32x2_t *)result, a2, v21, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v23 = a4 + 1;
  if (a5 <= 4) {
    int v24 = 4;
  }
  else {
    int v24 = a5;
  }
  unsigned int v25 = v24 - 4;
  if (v25 >= 4) {
    int v26 = 4;
  }
  else {
    int v26 = v25;
  }
  if (v26) {
    BOOL v27 = v22 == 0;
  }
  else {
    BOOL v27 = 1;
  }
  if (v27)
  {
    *uint64_t v23 = 0;
  }
  else
  {
    int8x8_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v18, v23, v20 + 1, a2, v26, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  uint64_t v43 = 4 * a2;
  uint64_t v28 = a4 + 2;
  if (a6 <= 4) {
    int v29 = 4;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 4;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v21 && v31)
  {
    int8x8_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v18, v28, (int32x2_t *)((char *)v20 + v43), a2, v21, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int64x2_t v32 = a4 + 3;
    if (!v26) {
      goto LABEL_36;
    }
  }
  else
  {
    *uint64_t v28 = 0;
    int64x2_t v32 = a4 + 3;
    if (!v26) {
      goto LABEL_36;
    }
  }
  if (v31)
  {
    int8x8_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v18, v32, (int32x2_t *)((char *)v20 + v43 + 8), a2, v26, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    goto LABEL_37;
  }
LABEL_36:
  *int64x2_t v32 = 0;
LABEL_37:
  uint64_t v33 = a4 + 4;
  if (a5 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a5;
  }
  unsigned int v35 = v34 - 8;
  if (v35 >= 4) {
    int v36 = 4;
  }
  else {
    int v36 = v35;
  }
  if (v36 && v22)
  {
    int8x8_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v18, v33, v20 + 2, a2, v36, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
  }
  else
  {
    unsigned char *v33 = 0;
  }
  uint64_t v37 = a4 + 5;
  if (a5 <= 12) {
    int v38 = 12;
  }
  else {
    int v38 = a5;
  }
  unsigned int v39 = v38 - 12;
  if (v39 >= 4) {
    int v40 = 4;
  }
  else {
    int v40 = v39;
  }
  if (v40 && v22)
  {
    int8x8_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v18, v37, v20 + 3, a2, v40, v22, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int v41 = a4 + 6;
    if (!v36) {
      goto LABEL_61;
    }
  }
  else
  {
    *uint64_t v37 = 0;
    int v41 = a4 + 6;
    if (!v36) {
      goto LABEL_61;
    }
  }
  if (v31)
  {
    int8x8_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v18, v41, (int32x2_t *)((char *)v20 + v43 + 16), a2, v36, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    v18 += result;
    int v42 = a4 + 7;
    if (!v40) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *int v41 = 0;
  int v42 = a4 + 7;
  if (!v40)
  {
LABEL_66:
    *int v42 = 0;
    return result;
  }
LABEL_62:
  if (!v31) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v18, v42, (int32x2_t *)((char *)v20 + v43 + 24), a2, v40, v31, a7, a8, a9, a10, a11, a12, a13, a14);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int8x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, int8x8_t a8, double a9, int8x8_t a10, double a11, double a12, double a13, int8x8_t a14)
{
  *(int8x8_t *)v17.i8 = *a3;
  *(int8x8_t *)v18.i8 = a3[1];
  v17.u64[1] = (unint64_t)*a3;
  v18.i64[1] = v18.i64[0];
  *(int8x8_t *)v19.i8 = *(int8x8_t *)((char *)a3 + a4);
  *(int8x8_t *)v20.i8 = *(int8x8_t *)((char *)&a3[1] + a4);
  v19.i64[1] = v19.i64[0];
  v20.i64[1] = v20.i64[0];
  int8x16_t v21 = vdupq_lane_s8(*a3, 0);
  int8x16_t v22 = vsubq_s8(v17, v21);
  int8x16_t v23 = vsubq_s8(v19, v21);
  int8x16_t v24 = vsubq_s8(v18, v21);
  int8x16_t v25 = vsubq_s8(v20, v21);
  a8.i8[0] = vmaxvq_s8(v22);
  a10.i8[0] = vminvq_s8(v22);
  int8x16_t v26 = vdupq_lane_s8(a8, 0);
  int8x16_t v27 = vdupq_lane_s8(a10, 0);
  v28.i64[0] = 0x8080808080808080;
  v28.i64[1] = 0x8080808080808080;
  int8x16_t v29 = vmaxq_s8(v26, v28);
  v30.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v30.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v31 = vminq_s8(v27, v30);
  int8x16_t v32 = vzip1q_s8(v26, v27);
  int8x16_t v33 = vceqzq_s8(v32);
  v34.i64[0] = 0x808080808080808;
  v34.i64[1] = 0x808080808080808;
  int8x16_t v35 = vbicq_s8(vsubq_s8(v34, vclsq_s8(v32)), v33);
  v33.i8[0] = vmaxvq_s8(v23);
  a14.i8[0] = vminvq_s8(v23);
  int8x16_t v36 = vdupq_lane_s8(*(int8x8_t *)v33.i8, 0);
  int8x16_t v37 = vdupq_lane_s8(a14, 0);
  int8x16_t v38 = vpmaxq_s8(v35, v35);
  int8x16_t v39 = vmaxq_s8(v29, v36);
  int8x16_t v40 = vminq_s8(v31, v37);
  int8x16_t v41 = vzip1q_s8(v36, v37);
  int8x16_t v42 = vbicq_s8(vsubq_s8(v34, vclsq_s8(v41)), vceqzq_s8(v41));
  int8x16_t v43 = vpmaxq_s8(v42, v42);
  v42.i8[0] = vmaxvq_s8(v24);
  int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v42.i8, 0);
  v37.i8[0] = vminvq_s8(v24);
  int8x16_t v45 = vdupq_lane_s8(*(int8x8_t *)v37.i8, 0);
  int8x16_t v46 = vmaxq_s8(v39, v44);
  int8x16_t v47 = vminq_s8(v40, v45);
  int8x16_t v48 = vzip1q_s8(v44, v45);
  int8x16_t v49 = vbicq_s8(vsubq_s8(v34, vclsq_s8(v48)), vceqzq_s8(v48));
  int8x16_t v50 = vpmaxq_s8(v49, v49);
  v49.i8[0] = vmaxvq_s8(v25);
  v14.i8[0] = vminvq_s8(v25);
  int8x16_t v51 = vdupq_lane_s8(*(int8x8_t *)v49.i8, 0);
  int8x16_t v52 = vdupq_lane_s8(v14, 0);
  int8x16_t v53 = vminq_s8(v47, v52);
  int8x16_t v54 = vzip1q_s8(v51, v52);
  int8x16_t v55 = vbicq_s8(vsubq_s8(v34, vclsq_s8(v54)), vceqzq_s8(v54));
  int8x16_t v56 = vpmaxq_s8(v55, v55);
  int8x16_t v57 = vmaxq_s8(vmaxq_s8(v38, v43), vmaxq_s8(v50, v56));
  int8x16_t v58 = vclzq_s8(vsubq_s8(vmaxq_s8(v46, v51), v53));
  int8x16_t v59 = vsubq_s8(v34, v58);
  int8x16_t v60 = vcgtq_s8(v57, v59);
  int8x16_t v61 = vbslq_s8(v60, v59, v57);
  if (vmaxvq_s8(v61))
  {
    v62.i64[0] = -1;
    v62.i64[1] = -1;
    v63.i64[0] = 0x707070707070707;
    v63.i64[1] = 0x707070707070707;
    int8x16_t v64 = vandq_s8(vsubq_s8(vshlq_s8(v62, vsubq_s8(v63, v58)), v53), v60);
    v65.i64[0] = 0x303030303030303;
    v65.i64[1] = 0x303030303030303;
    int8x16_t v66 = vorrq_s8(vandq_s8(vceqzq_s8(v61), v65), vandq_s8(v60, v34));
    int8x16_t v67 = vmaxq_s8(vminq_s8(vsubq_s8(v61, v38), v65), (int8x16_t)0);
    int8x16_t v68 = vmaxq_s8(vminq_s8(vsubq_s8(v61, v43), v65), (int8x16_t)0);
    int8x16_t v69 = vmaxq_s8(vminq_s8(vsubq_s8(v61, v50), v65), (int8x16_t)0);
    int8x16_t v70 = vmaxq_s8(vminq_s8(vsubq_s8(v61, v56), v65), (int8x16_t)0);
    int8x16_t v71 = vsubq_s8(v61, v67);
    int8x16_t v72 = vsubq_s8(v61, v68);
    int8x16_t v73 = vsubq_s8(v61, v69);
    int8x16_t v74 = vsubq_s8(v61, v70);
    int8x16_t v75 = vceqq_s8(vaddq_s8(v70, v69), vnegq_s8(vaddq_s8(v67, v68)));
    v70.i64[0] = 0x404040404040404;
    v70.i64[1] = 0x404040404040404;
    int8x16_t v76 = vorrq_s8(vbicq_s8(v70, v75), v66);
    if (a5 >= 2)
    {
      int8x16_t v379 = v64;
      v80.i32[0] = v17.u8[2];
      v80.i32[1] = v17.u8[1];
      int32x2_t v81 = vshl_n_s32(vsub_s32(v80, vdup_n_s32(v17.u8[0])), 0x1CuLL);
      int v82 = v81.i32[1] >> 28;
      int8x8_t v83 = (int8x8_t)vshl_s32(v81, (int32x2_t)0xFFFFFFE6FFFFFFE5);
      unsigned __int32 v84 = v81.i32[0];
      v85.i64[0] = 0xFFFF0000FFFF0000;
      v85.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v86 = vmlaq_s8(vandq_s8(vdupq_n_s8(v81.i32[0] >> 28), v85), vdupq_n_s8(v81.i32[1] >> 28), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v87 = vsubq_s8(v22, v86);
      int8x16_t v88 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v83.i32[0]), v23), v86);
      int8x16_t v89 = vsubq_s8(vaddq_s8(vdupq_n_s8(-v83.i32[1]), v24), v86);
      int8x16_t v90 = vaddq_s8(vdupq_n_s8(-v83.i32[0] - v83.i32[1]), v25);
      int8x16_t v380 = v23;
      int8x16_t v91 = vsubq_s8(v90, v86);
      v90.i8[0] = vmaxvq_s8(v87);
      int8x16_t v377 = v87;
      v83.i8[0] = vminvq_s8(v87);
      int8x16_t v92 = vdupq_lane_s8(*(int8x8_t *)v90.i8, 0);
      int8x16_t v93 = vdupq_lane_s8(v83, 0);
      v87.i64[0] = 0x8080808080808080;
      v87.i64[1] = 0x8080808080808080;
      int8x16_t v94 = vmaxq_s8(v92, v87);
      v87.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v87.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v95 = vminq_s8(v93, v87);
      int8x16_t v96 = vzip1q_s8(v92, v93);
      int8x16_t v97 = vceqzq_s8(v96);
      v98.i64[0] = 0x808080808080808;
      v98.i64[1] = 0x808080808080808;
      int8x16_t v99 = vbicq_s8(vsubq_s8(v98, vclsq_s8(v96)), v97);
      int8x16_t v100 = vpmaxq_s8(v99, v99);
      v97.i8[0] = vmaxvq_s8(v88);
      int8x16_t v101 = v73;
      int8x16_t v374 = v88;
      v73.i8[0] = vminvq_s8(v88);
      int8x16_t v102 = vdupq_lane_s8(*(int8x8_t *)v97.i8, 0);
      int8x16_t v103 = vdupq_lane_s8(*(int8x8_t *)v73.i8, 0);
      int8x16_t v104 = vmaxq_s8(v94, v102);
      int8x16_t v105 = vminq_s8(v95, v103);
      int8x16_t v106 = vzip1q_s8(v102, v103);
      int8x16_t v107 = vceqzq_s8(v106);
      int8x16_t v108 = vbicq_s8(vsubq_s8(v98, vclsq_s8(v106)), v107);
      int8x16_t v109 = vpmaxq_s8(v108, v108);
      v107.i8[0] = vmaxvq_s8(v89);
      v15.i8[0] = vminvq_s8(v89);
      int8x16_t v110 = vdupq_lane_s8(*(int8x8_t *)v107.i8, 0);
      int8x16_t v111 = vdupq_lane_s8(v15, 0);
      int8x16_t v112 = vmaxq_s8(v104, v110);
      int8x16_t v113 = vminq_s8(v105, v111);
      int8x16_t v114 = vzip1q_s8(v110, v111);
      int8x16_t v115 = vbicq_s8(vsubq_s8(v98, vclsq_s8(v114)), vceqzq_s8(v114));
      int8x16_t v116 = vpmaxq_s8(v115, v115);
      v115.i8[0] = vmaxvq_s8(v91);
      v16.i8[0] = vminvq_s8(v91);
      int8x16_t v117 = vdupq_lane_s8(*(int8x8_t *)v115.i8, 0);
      int8x16_t v118 = vdupq_lane_s8(v16, 0);
      int8x16_t v119 = vmaxq_s8(v112, v117);
      int8x16_t v120 = vminq_s8(v113, v118);
      int8x16_t v121 = vzip1q_s8(v117, v118);
      int8x16_t v122 = vbicq_s8(vsubq_s8(v98, vclsq_s8(v121)), vceqzq_s8(v121));
      int8x16_t v123 = vpmaxq_s8(v122, v122);
      int8x16_t v124 = vmaxq_s8(vmaxq_s8(v100, v109), vmaxq_s8(v116, v123));
      int8x16_t v125 = vclzq_s8(vsubq_s8(v119, v120));
      int8x16_t v126 = vsubq_s8(v98, v125);
      int8x16_t v127 = vcgtq_s8(v124, v126);
      int8x16_t v128 = vbslq_s8(v127, v126, v124);
      v98.i64[0] = 0x202020202020202;
      v98.i64[1] = 0x202020202020202;
      v124.i64[0] = 0xA0A0A0A0A0A0A0ALL;
      v124.i64[1] = 0xA0A0A0A0A0A0A0ALL;
      int8x16_t v129 = v25;
      int8x16_t v130 = vbslq_s8(v127, v124, v98);
      v124.i64[0] = 0x101010101010101;
      v124.i64[1] = 0x101010101010101;
      int8x16_t v131 = vmaxq_s8(v128, v124);
      v98.i64[0] = 0x303030303030303;
      v98.i64[1] = 0x303030303030303;
      int8x16_t v132 = vmaxq_s8(vminq_s8(vsubq_s8(v131, v100), v98), (int8x16_t)0);
      int8x16_t v133 = vmaxq_s8(vminq_s8(vsubq_s8(v131, v109), v98), (int8x16_t)0);
      int8x16_t v134 = vmaxq_s8(vminq_s8(vsubq_s8(v131, v116), v98), (int8x16_t)0);
      int8x16_t v135 = vmaxq_s8(vminq_s8(vsubq_s8(v131, v123), v98), (int8x16_t)0);
      int8x16_t v136 = vsubq_s8(v131, v132);
      int8x16_t v137 = vsubq_s8(v131, v133);
      int8x16_t v138 = vsubq_s8(v131, v134);
      int8x16_t v139 = vsubq_s8(v131, v135);
      int8x16_t v140 = vceqq_s8(vaddq_s8(v135, v134), vnegq_s8(vaddq_s8(v132, v133)));
      v135.i64[0] = 0x404040404040404;
      v135.i64[1] = 0x404040404040404;
      int8x16_t v141 = vorrq_s8(vbicq_s8(v135, v140), v130);
      v98.i64[0] = 0x8000800080008;
      v98.i64[1] = 0x8000800080008;
      int16x8_t v142 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v101.i8, *(int8x8_t *)v72.i8), *(int8x8_t *)v74.i8), 3uLL);
      v128.i64[0] = 0x2000200020002;
      v128.i64[1] = 0x2000200020002;
      int8x16_t v143 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(v142, *(int8x8_t *)v71.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v61.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v76.i8))), (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v76.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v76.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v128), v98)),
                                                  vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v138.i8, *(int8x8_t *)v137.i8), *(int8x8_t *)v139.i8), 3uLL), *(int8x8_t *)v136.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v141.i8, *(int8x8_t *)v141.i8), (int8x8_t)0x808080808080808)), (uint8x8_t)vbic_s8(*(int8x8_t *)v131.i8,
                                                                              (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v141.i8))), (int16x8_t)v98))), 0);
      v135.i16[0] = vaddlvq_s8(v143);
      unint64_t v77 = v82 & 0xF | HIBYTE(v84);
      int v144 = v135.u16[0];
      if (v135.i16[0])
      {
        v145.i64[0] = 0x707070707070707;
        v145.i64[1] = 0x707070707070707;
        v146.i64[0] = -1;
        v146.i64[1] = -1;
        int8x16_t v380 = vbslq_s8(v143, v374, v380);
        int8x16_t v24 = vbslq_s8(v143, v89, v24);
        int8x16_t v147 = vbslq_s8(v143, v91, v129);
        int8x16_t v74 = vbslq_s8(v143, v139, v74);
        int8x16_t v64 = vbslq_s8(v143, vandq_s8(vsubq_s8(vshlq_s8(v146, vsubq_s8(v145, v125)), v120), v127), v379);
        int8x16_t v61 = vbslq_s8(v143, v131, v61);
        int8x16_t v76 = vbslq_s8(v143, v141, v76);
        int8x16_t v373 = vbslq_s8(v143, v136, v71);
        int8x16_t v375 = vbslq_s8(v143, v137, v72);
        int16x8_t v148 = vmull_s8(*(int8x8_t *)v373.i8, (int8x8_t)0x707070707070707);
        int8x16_t v376 = vbslq_s8(v143, v377, v22);
        int8x16_t v378 = vbslq_s8(v143, v138, v101);
        int16x8_t v149 = vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v378.i8, *(int8x8_t *)v375.i8), *(int8x8_t *)v74.i8), 3uLL);
        int8x16_t v25 = v147;
      }
      else
      {
        int8x16_t v375 = v72;
        int8x16_t v376 = v22;
        int8x16_t v378 = v101;
        int8x16_t v373 = v71;
        int16x8_t v148 = vmull_s8(*(int8x8_t *)v71.i8, (int8x8_t)0x707070707070707);
        int8x16_t v25 = v129;
        int8x16_t v64 = v379;
        int16x8_t v149 = v142;
      }
      int8x16_t v150 = v19;
      v150.i8[7] = v17.i8[7];
      int8x16_t v151 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7430));
      int8x16_t v152 = vsubq_s8(v19, vqtbl1q_s8(v150, (int8x16_t)xmmword_242EA7440));
      int8x16_t v153 = v18;
      v153.i8[7] = v17.i8[7];
      int8x16_t v154 = vsubq_s8(v18, vqtbl1q_s8(v153, (int8x16_t)xmmword_242EA7450));
      int8x16_t v155 = v20;
      v155.i8[7] = v17.i8[7];
      int8x16_t v156 = vqtbl1q_s8(v155, (int8x16_t)xmmword_242EA7460);
      int8x16_t v157 = vsubq_s8(v20, v156);
      int8x16_t v158 = v151;
      v158.i8[0] = v151.i8[7];
      v158.i8[7] = v151.i8[0];
      v151.i8[0] = vmaxvq_s8(v158);
      v156.i8[0] = vminvq_s8(v158);
      int8x16_t v159 = vdupq_lane_s8(*(int8x8_t *)v151.i8, 0);
      int8x16_t v160 = vdupq_lane_s8(*(int8x8_t *)v156.i8, 0);
      v161.i64[0] = 0x8080808080808080;
      v161.i64[1] = 0x8080808080808080;
      int8x16_t v162 = vmaxq_s8(v159, v161);
      v161.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v161.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v163 = vminq_s8(v160, v161);
      int8x16_t v164 = vzip1q_s8(v159, v160);
      int8x16_t v165 = vceqzq_s8(v164);
      v166.i64[0] = 0x808080808080808;
      v166.i64[1] = 0x808080808080808;
      int8x16_t v167 = vbicq_s8(vsubq_s8(v166, vclsq_s8(v164)), v165);
      int8x16_t v168 = vpmaxq_s8(v167, v167);
      v165.i8[0] = vmaxvq_s8(v152);
      v138.i8[0] = vminvq_s8(v152);
      int8x16_t v169 = vdupq_lane_s8(*(int8x8_t *)v165.i8, 0);
      int8x16_t v170 = vdupq_lane_s8(*(int8x8_t *)v138.i8, 0);
      int8x16_t v171 = vmaxq_s8(v162, v169);
      int8x16_t v172 = vminq_s8(v163, v170);
      int8x16_t v173 = vzip1q_s8(v169, v170);
      int8x16_t v174 = vceqzq_s8(v173);
      int8x16_t v175 = vbicq_s8(vsubq_s8(v166, vclsq_s8(v173)), v174);
      int8x16_t v176 = vpmaxq_s8(v175, v175);
      v174.i8[0] = vmaxvq_s8(v154);
      v120.i8[0] = vminvq_s8(v154);
      int8x16_t v177 = vdupq_lane_s8(*(int8x8_t *)v174.i8, 0);
      int8x16_t v178 = vdupq_lane_s8(*(int8x8_t *)v120.i8, 0);
      int8x16_t v179 = vmaxq_s8(v171, v177);
      int8x16_t v180 = vminq_s8(v172, v178);
      int8x16_t v181 = vzip1q_s8(v177, v178);
      int8x16_t v182 = vceqzq_s8(v181);
      int8x16_t v183 = vbicq_s8(vsubq_s8(v166, vclsq_s8(v181)), v182);
      int8x16_t v184 = vpmaxq_s8(v183, v183);
      v183.i8[0] = vmaxvq_s8(v157);
      v182.i8[0] = vminvq_s8(v157);
      int8x16_t v185 = vdupq_lane_s8(*(int8x8_t *)v183.i8, 0);
      int8x16_t v186 = vdupq_lane_s8(*(int8x8_t *)v182.i8, 0);
      int8x16_t v187 = vminq_s8(v180, v186);
      int8x16_t v188 = vzip1q_s8(v185, v186);
      int8x16_t v189 = vbicq_s8(vsubq_s8(v166, vclsq_s8(v188)), vceqzq_s8(v188));
      int8x16_t v190 = vpmaxq_s8(v189, v189);
      int8x16_t v191 = vmaxq_s8(vmaxq_s8(v168, v176), vmaxq_s8(v184, v190));
      int8x16_t v192 = vclzq_s8(vsubq_s8(vmaxq_s8(v179, v185), v187));
      int8x16_t v193 = vsubq_s8(v166, v192);
      int8x16_t v194 = vcgtq_s8(v191, v193);
      int8x16_t v195 = vbslq_s8(v194, v193, v191);
      v193.i64[0] = 0x909090909090909;
      v193.i64[1] = 0x909090909090909;
      v161.i64[0] = 0x202020202020202;
      v161.i64[1] = 0x202020202020202;
      int8x16_t v196 = vorrq_s8(vandq_s8(vceqzq_s8(v195), v161), vsubq_s8(vandq_s8(v194, v193), vmvnq_s8(v194)));
      v161.i64[0] = 0x303030303030303;
      v161.i64[1] = 0x303030303030303;
      int8x16_t v197 = vmaxq_s8(vminq_s8(vsubq_s8(v195, v168), v161), (int8x16_t)0);
      int8x16_t v198 = vmaxq_s8(vminq_s8(vsubq_s8(v195, v176), v161), (int8x16_t)0);
      int8x16_t v199 = vmaxq_s8(vminq_s8(vsubq_s8(v195, v184), v161), (int8x16_t)0);
      int8x16_t v200 = vmaxq_s8(vminq_s8(vsubq_s8(v195, v190), v161), (int8x16_t)0);
      int8x16_t v201 = vsubq_s8(v195, v197);
      int8x16_t v202 = vsubq_s8(v195, v198);
      int8x16_t v203 = vsubq_s8(v195, v199);
      int8x16_t v204 = vsubq_s8(v195, v200);
      int8x16_t v205 = vceqq_s8(vaddq_s8(v200, v199), vnegq_s8(vaddq_s8(v197, v198)));
      v198.i64[0] = 0x404040404040404;
      v198.i64[1] = 0x404040404040404;
      int8x16_t v206 = vorrq_s8(v196, vbicq_s8(v198, v205));
      v199.i64[0] = 0x3000300030003;
      v199.i64[1] = 0x3000300030003;
      int8x16_t v207 = (int8x16_t)vmovl_s8(*(int8x8_t *)v76.i8);
      v161.i64[0] = 0x8000800080008;
      v161.i64[1] = 0x8000800080008;
      v166.i64[0] = 0x2000200020002;
      v166.i64[1] = 0x2000200020002;
      int8x16_t v208 = vdupq_lane_s8((int8x8_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v61.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v207, v161))), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v76.i8, 1uLL), v161)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v207, v199), (int16x8_t)v166), v161), v148)), v149), vaddw_s8(
                                                    (int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v203.i8, *(int8x8_t *)v202.i8), *(int8x8_t *)v204.i8), 3uLL), *(int8x8_t *)v201.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v206.i8, *(int8x8_t *)v206.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v195.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808,
                                                                  *(uint8x8_t *)v206.i8))))),
               0);
      v205.i16[0] = vaddlvq_s8(v208);
      int v209 = v205.u16[0];
      if (v205.i16[0])
      {
        v210.i64[0] = 0x707070707070707;
        v210.i64[1] = 0x707070707070707;
        v211.i64[0] = -1;
        v211.i64[1] = -1;
        int8x16_t v212 = vsubq_s8(vshlq_s8(v211, vsubq_s8(v210, v192)), v187);
        v21.i8[0] = vbslq_s8(v208, vextq_s8(v17, v17, 0xFuLL), v21).u8[0];
        int8x16_t v22 = vbslq_s8(v208, v158, v376);
        int8x16_t v23 = vbslq_s8(v208, v152, v380);
        int8x16_t v24 = vbslq_s8(v208, v154, v24);
        int8x16_t v25 = vbslq_s8(v208, v157, v25);
        int8x16_t v71 = vbslq_s8(v208, v201, v373);
        int8x16_t v72 = vbslq_s8(v208, v202, v375);
        int8x16_t v73 = vbslq_s8(v208, v203, v378);
        int8x16_t v74 = vbslq_s8(v208, v204, v74);
        int8x16_t v64 = vbslq_s8(v208, vandq_s8(v212, v194), v64);
        int8x16_t v61 = vbslq_s8(v208, v195, v61);
        int8x16_t v76 = vbslq_s8(v208, v206, v76);
      }
      else
      {
        int8x16_t v23 = v380;
        int8x16_t v22 = v376;
        int8x16_t v73 = v378;
        int8x16_t v71 = v373;
        int8x16_t v72 = v375;
      }
      if (v144) {
        BOOL v213 = v209 == 0;
      }
      else {
        BOOL v213 = 0;
      }
      char v78 = v213;
    }
    else
    {
      unint64_t v77 = 0;
      char v78 = 0;
    }
    int8x16_t v214 = (int8x16_t)vmovl_s8(*(int8x8_t *)v76.i8);
    v215.i64[0] = 0x8000800080008;
    v215.i64[1] = 0x8000800080008;
    v216.i64[0] = 0x3000300030003;
    v216.i64[1] = 0x3000300030003;
    v217.i64[0] = 0x2000200020002;
    v217.i64[1] = 0x2000200020002;
    if ((unint64_t)((__int16)(7 * v71.i8[0]
                                    + 8 * vaddq_s8(v73, vaddq_s8(v72, v74)).i8[0]
                                    + ((2 * v214.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v61.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v214, v215))).u16[0]+ vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v214, v216), v217), v215).u16[0])- 117) <= 0xFFFFFFFFFFFFFF77)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 16;
    }
    else
    {
      int8x16_t v218 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v219 = 8 * (a1 & 7);
      if (v219) {
        uint64_t v220 = *v218 & ~(-1 << v219);
      }
      else {
        uint64_t v220 = 0;
      }
      int8x16_t v221 = vextq_s8(v71, (int8x16_t)0, 8uLL);
      int8x16_t v222 = vextq_s8(v72, (int8x16_t)0, 8uLL);
      int8x16_t v223 = vextq_s8(v73, (int8x16_t)0, 8uLL);
      int8x16_t v224 = vextq_s8(v74, (int8x16_t)0, 8uLL);
      if (v61.i8[0]) {
        int v225 = (16 * v61.i8[0] + 112) & 0x70;
      }
      else {
        int v225 = 0;
      }
      *a2 = 32 * v76.i8[0];
      unint64_t v226 = (v76.i8[0] & 8 | v225 & 0xFFFF807F | ((unint64_t)v21.u8[0] << 7)) >> 3;
      unint64_t v227 = (v226 << v219) | v220;
      if (v219 >= 0x34)
      {
        *int8x16_t v218 = v227;
        unint64_t v227 = v226 >> (-8 * (a1 & 7u));
      }
      int8x16_t v228 = vdupq_lane_s8(*(int8x8_t *)v61.i8, 0);
      unint64_t v229 = v219 + 12;
      v230.i64[0] = 0x202020202020202;
      v230.i64[1] = 0x202020202020202;
      int8x16_t v231 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v76.i8), (int8x8_t)0x4000400040004)))), v230);
      v230.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v230.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v232.i64[0] = -1;
      v232.i64[1] = -1;
      uint8x16_t v233 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v232, (uint8x16_t)vorrq_s8(v231, v230)), (int8x16_t)vzip1q_s16((int16x8_t)vsubq_s8(v228, vzip1q_s8(v221, v222)), (int16x8_t)vsubq_s8(v228, vzip1q_s8(v223, v224))).u32[0]);
      int16x8_t v234 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v231.i8);
      uint16x8_t v235 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v233.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v234)), (int16x8_t)vmovl_high_u8(v233));
      uint16x8_t v236 = (uint16x8_t)vpaddq_s16(v234, (int16x8_t)vmovl_high_u8((uint8x16_t)v231));
      int32x4_t v237 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v236.i8);
      int32x4_t v238 = (int32x4_t)vmovl_high_u16(v236);
      int32x4_t v239 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v235.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v237)), (int32x4_t)vshlq_u32(vmovl_high_u16(v235), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v238)));
      int32x4_t v240 = vpaddq_s32(v237, v238);
      v241.i64[0] = v239.u32[0];
      v241.i64[1] = v239.u32[1];
      uint64x2_t v242 = (uint64x2_t)v241;
      v241.i64[0] = v239.u32[2];
      v241.i64[1] = v239.u32[3];
      uint64x2_t v243 = (uint64x2_t)v241;
      v241.i64[0] = v240.u32[0];
      v241.i64[1] = v240.u32[1];
      int64x2_t v244 = v241;
      v241.i64[0] = v240.u32[2];
      v241.i64[1] = v240.u32[3];
      int64x2_t v245 = vpaddq_s64((int64x2_t)vshlq_u64(v242, (uint64x2_t)vzip1q_s64((int64x2_t)0, v244)), (int64x2_t)vshlq_u64(v243, (uint64x2_t)vzip1q_s64((int64x2_t)0, v241)));
      int64x2_t v246 = vpaddq_s64(v244, v241);
      uint64_t v247 = (v219 + 12) & 0x3C;
      unint64_t v248 = (v245.i64[0] << v247) | v227;
      if ((unint64_t)(v246.i64[0] + v247) >= 0x40)
      {
        *(void *)((char *)v218 + ((v229 >> 3) & 8)) = v248;
        unint64_t v248 = (unint64_t)v245.i64[0] >> -(char)v247;
      }
      unint64_t v249 = v246.i64[0] + v229;
      uint64_t v250 = (v246.i64[0] + v229) & 0x3F;
      unint64_t v251 = v248 | (v245.i64[1] << (v246.i8[0] + v229));
      if ((unint64_t)(v250 + v246.i64[1]) >= 0x40)
      {
        *(void *)((char *)v218 + ((v249 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v251;
        unint64_t v251 = (unint64_t)v245.i64[1] >> -(char)v250;
        if (!v250) {
          unint64_t v251 = 0;
        }
      }
      int8x16_t v252 = vceqq_s8(v61, v71);
      unint64_t v253 = v249 + v246.i64[1];
      v254.i64[0] = 0x808080808080808;
      v254.i64[1] = 0x808080808080808;
      v255.i64[0] = -1;
      v255.i64[1] = -1;
      int8x16_t v256 = vandq_s8(vextq_s8(vtstq_s8(v76, v254), (int8x16_t)0, 0xFuLL), v61);
      v257.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v257.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v258 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v255, (uint8x16_t)vaddq_s8(v256, v257)), v64);
      int16x8_t v259 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v256.i8);
      uint16x8_t v260 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v258.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v259)), (int16x8_t)vmovl_high_u8(v258));
      uint16x8_t v261 = (uint16x8_t)vpaddq_s16(v259, (int16x8_t)vmovl_high_u8((uint8x16_t)v256));
      int32x4_t v262 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v261.i8);
      int32x4_t v263 = (int32x4_t)vmovl_high_u16(v261);
      int32x4_t v264 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v260.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v262)), (int32x4_t)vshlq_u32(vmovl_high_u16(v260), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v263)));
      int32x4_t v265 = vpaddq_s32(v262, v263);
      v266.i64[0] = v264.u32[0];
      v266.i64[1] = v264.u32[1];
      uint64x2_t v267 = (uint64x2_t)v266;
      v266.i64[0] = v264.u32[2];
      v266.i64[1] = v264.u32[3];
      uint64x2_t v268 = (uint64x2_t)v266;
      v266.i64[0] = v265.u32[0];
      v266.i64[1] = v265.u32[1];
      int64x2_t v269 = v266;
      v266.i64[0] = v265.u32[2];
      v266.i64[1] = v265.u32[3];
      int64x2_t v270 = vpaddq_s64((int64x2_t)vshlq_u64(v267, (uint64x2_t)vzip1q_s64((int64x2_t)0, v269)), (int64x2_t)vshlq_u64(v268, (uint64x2_t)vzip1q_s64((int64x2_t)0, v266)));
      int64x2_t v271 = vpaddq_s64(v269, v266);
      uint64_t v272 = (v249 + v246.i64[1]) & 0x3F;
      unint64_t v273 = (v270.i64[0] << (v249 + v246.i8[8])) | v251;
      if ((unint64_t)(v271.i64[0] + v272) >= 0x40)
      {
        *(void *)((char *)v218 + ((v253 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v273;
        unint64_t v273 = (unint64_t)v270.i64[0] >> -(char)v272;
        if (!v272) {
          unint64_t v273 = 0;
        }
      }
      int8x16_t v274 = vandq_s8(v64, v252);
      unint64_t v275 = v271.i64[0] + v253;
      unint64_t v276 = v273 | (v270.i64[1] << v275);
      if ((v275 & 0x3F) + v271.i64[1] >= 0x40)
      {
        *(void *)((char *)v218 + ((v275 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v276;
        unint64_t v276 = (unint64_t)v270.i64[1] >> -(v275 & 0x3F);
        if ((v275 & 0x3F) == 0) {
          unint64_t v276 = 0;
        }
      }
      int8x16_t v277 = vceqq_s8(v61, v72);
      int8x16_t v278 = vaddq_s8(v274, v22);
      unint64_t v279 = v275 + v271.i64[1];
      if (v78)
      {
        v276 |= v77 << v279;
        if ((v279 & 0x3F) >= 0x38)
        {
          *(void *)((char *)v218 + ((v279 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v276;
          unint64_t v276 = v77 >> -(v279 & 0x3F);
        }
        v279 += 8;
      }
      int8x16_t v280 = vandq_s8(v64, v277);
      int16x8_t v281 = (int16x8_t)vmovl_high_u8((uint8x16_t)v221);
      v221.i8[0] = 0;
      v282.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v282.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v283.i64[0] = -1;
      v283.i64[1] = -1;
      uint8x16_t v284 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v283, (uint8x16_t)vaddq_s8(v221, v282)), v278);
      int16x8_t v285 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v221.i8);
      uint16x8_t v286 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v284.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v285)), (int16x8_t)vshlq_u16(vmovl_high_u8(v284), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v281)));
      uint16x8_t v287 = (uint16x8_t)vpaddq_s16(v285, v281);
      int32x4_t v288 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v287.i8);
      int32x4_t v289 = (int32x4_t)vmovl_high_u16(v287);
      int32x4_t v290 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v286.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v288)), (int32x4_t)vshlq_u32(vmovl_high_u16(v286), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v289)));
      int32x4_t v291 = vpaddq_s32(v288, v289);
      v292.i64[0] = v290.u32[0];
      v292.i64[1] = v290.u32[1];
      uint64x2_t v293 = (uint64x2_t)v292;
      v292.i64[0] = v290.u32[2];
      v292.i64[1] = v290.u32[3];
      uint64x2_t v294 = (uint64x2_t)v292;
      v292.i64[0] = v291.u32[0];
      v292.i64[1] = v291.u32[1];
      int64x2_t v295 = v292;
      v292.i64[0] = v291.u32[2];
      v292.i64[1] = v291.u32[3];
      int64x2_t v296 = vpaddq_s64((int64x2_t)vshlq_u64(v293, (uint64x2_t)vzip1q_s64((int64x2_t)0, v295)), (int64x2_t)vshlq_u64(v294, (uint64x2_t)vzip1q_s64((int64x2_t)0, v292)));
      int64x2_t v297 = vpaddq_s64(v295, v292);
      unint64_t v298 = (v296.i64[0] << v279) | v276;
      if (v297.i64[0] + (v279 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v218 + ((v279 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v298;
        unint64_t v298 = (unint64_t)v296.i64[0] >> -(v279 & 0x3F);
        if ((v279 & 0x3F) == 0) {
          unint64_t v298 = 0;
        }
      }
      int8x16_t v299 = vceqq_s8(v61, v73);
      int8x16_t v300 = vaddq_s8(v23, v280);
      unint64_t v301 = v297.i64[0] + v279;
      uint64_t v302 = (v297.i64[0] + v279) & 0x3F;
      unint64_t v303 = v298 | (v296.i64[1] << v301);
      if ((v301 & 0x3F) + v297.i64[1] >= 0x40)
      {
        *(void *)((char *)v218 + ((v301 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v303;
        unint64_t v303 = (unint64_t)v296.i64[1] >> -(char)v302;
        if (!v302) {
          unint64_t v303 = 0;
        }
      }
      int8x16_t v304 = vandq_s8(v64, v299);
      unint64_t v305 = v301 + v297.i64[1];
      v306.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v306.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v307.i64[0] = -1;
      v307.i64[1] = -1;
      uint8x16_t v308 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v307, (uint8x16_t)vaddq_s8(v222, v306)), v300);
      int16x8_t v309 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v222.i8);
      int16x8_t v310 = (int16x8_t)vmovl_high_u8((uint8x16_t)v222);
      uint16x8_t v311 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v308.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v309)), (int16x8_t)vshlq_u16(vmovl_high_u8(v308), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v310)));
      uint16x8_t v312 = (uint16x8_t)vpaddq_s16(v309, v310);
      int32x4_t v313 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v312.i8);
      int32x4_t v314 = (int32x4_t)vmovl_high_u16(v312);
      int32x4_t v315 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v311.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v313)), (int32x4_t)vshlq_u32(vmovl_high_u16(v311), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v314)));
      int32x4_t v316 = vpaddq_s32(v313, v314);
      v317.i64[0] = v315.u32[0];
      v317.i64[1] = v315.u32[1];
      uint64x2_t v318 = (uint64x2_t)v317;
      v317.i64[0] = v315.u32[2];
      v317.i64[1] = v315.u32[3];
      uint64x2_t v319 = (uint64x2_t)v317;
      v317.i64[0] = v316.u32[0];
      v317.i64[1] = v316.u32[1];
      int64x2_t v320 = v317;
      v317.i64[0] = v316.u32[2];
      v317.i64[1] = v316.u32[3];
      int64x2_t v321 = vpaddq_s64((int64x2_t)vshlq_u64(v318, (uint64x2_t)vzip1q_s64((int64x2_t)0, v320)), (int64x2_t)vshlq_u64(v319, (uint64x2_t)vzip1q_s64((int64x2_t)0, v317)));
      int64x2_t v322 = vpaddq_s64(v320, v317);
      unint64_t v323 = (v321.i64[0] << v305) | v303;
      if (v322.i64[0] + (v305 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v218 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        unint64_t v323 = (unint64_t)v321.i64[0] >> -(v305 & 0x3F);
        if ((v305 & 0x3F) == 0) {
          unint64_t v323 = 0;
        }
      }
      int8x16_t v324 = vceqq_s8(v61, v74);
      int8x16_t v325 = vaddq_s8(v24, v304);
      unint64_t v326 = v322.i64[0] + v305;
      unint64_t v327 = v323 | (v321.i64[1] << v326);
      if ((v326 & 0x3F) + v322.i64[1] >= 0x40)
      {
        *(void *)((char *)v218 + ((v326 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v327;
        unint64_t v327 = (unint64_t)v321.i64[1] >> -(v326 & 0x3F);
        if ((v326 & 0x3F) == 0) {
          unint64_t v327 = 0;
        }
      }
      int8x16_t v328 = vandq_s8(v64, v324);
      unint64_t v329 = v326 + v322.i64[1];
      v330.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v330.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v331.i64[0] = -1;
      v331.i64[1] = -1;
      uint8x16_t v332 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v331, (uint8x16_t)vaddq_s8(v223, v330)), v325);
      int16x8_t v333 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v223.i8);
      int16x8_t v334 = (int16x8_t)vmovl_high_u8((uint8x16_t)v223);
      uint16x8_t v335 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v332.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v333)), (int16x8_t)vshlq_u16(vmovl_high_u8(v332), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v334)));
      uint16x8_t v336 = (uint16x8_t)vpaddq_s16(v333, v334);
      int32x4_t v337 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v336.i8);
      int32x4_t v338 = (int32x4_t)vmovl_high_u16(v336);
      int32x4_t v339 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v335.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v337)), (int32x4_t)vshlq_u32(vmovl_high_u16(v335), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v338)));
      int32x4_t v340 = vpaddq_s32(v337, v338);
      v341.i64[0] = v339.u32[0];
      v341.i64[1] = v339.u32[1];
      uint64x2_t v342 = (uint64x2_t)v341;
      v341.i64[0] = v339.u32[2];
      v341.i64[1] = v339.u32[3];
      uint64x2_t v343 = (uint64x2_t)v341;
      v341.i64[0] = v340.u32[0];
      v341.i64[1] = v340.u32[1];
      int64x2_t v344 = v341;
      v341.i64[0] = v340.u32[2];
      v341.i64[1] = v340.u32[3];
      int64x2_t v345 = vpaddq_s64((int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)), (int64x2_t)vshlq_u64(v343, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)));
      int64x2_t v346 = vpaddq_s64(v344, v341);
      unint64_t v347 = (v345.i64[0] << v329) | v327;
      if (v346.i64[0] + (v329 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v218 + ((v329 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v345.i64[0] >> -(v329 & 0x3F);
        if ((v329 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      int8x16_t v348 = vaddq_s8(v25, v328);
      unint64_t v349 = v346.i64[0] + v329;
      unint64_t v350 = v347 | (v345.i64[1] << v349);
      if ((v349 & 0x3F) + v346.i64[1] >= 0x40)
      {
        *(void *)((char *)v218 + ((v349 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
        unint64_t v350 = (unint64_t)v345.i64[1] >> -(v349 & 0x3F);
        if ((v349 & 0x3F) == 0) {
          unint64_t v350 = 0;
        }
      }
      unint64_t v351 = v349 + v346.i64[1];
      v352.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v352.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v353.i64[0] = -1;
      v353.i64[1] = -1;
      uint8x16_t v354 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v353, (uint8x16_t)vaddq_s8(v224, v352)), v348);
      int16x8_t v355 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v224.i8);
      int16x8_t v356 = (int16x8_t)vmovl_high_u8((uint8x16_t)v224);
      uint16x8_t v357 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v354.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v355)), (int16x8_t)vshlq_u16(vmovl_high_u8(v354), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v356)));
      uint16x8_t v358 = (uint16x8_t)vpaddq_s16(v355, v356);
      int32x4_t v359 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v358.i8);
      int32x4_t v360 = (int32x4_t)vmovl_high_u16(v358);
      int32x4_t v361 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v357.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v359)), (int32x4_t)vshlq_u32(vmovl_high_u16(v357), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v360)));
      int32x4_t v362 = vpaddq_s32(v359, v360);
      v363.i64[0] = v361.u32[0];
      v363.i64[1] = v361.u32[1];
      uint64x2_t v364 = (uint64x2_t)v363;
      v363.i64[0] = v361.u32[2];
      v363.i64[1] = v361.u32[3];
      uint64x2_t v365 = (uint64x2_t)v363;
      v363.i64[0] = v362.u32[0];
      v363.i64[1] = v362.u32[1];
      int64x2_t v366 = v363;
      v363.i64[0] = v362.u32[2];
      v363.i64[1] = v362.u32[3];
      int64x2_t v367 = vpaddq_s64((int64x2_t)vshlq_u64(v364, (uint64x2_t)vzip1q_s64((int64x2_t)0, v366)), (int64x2_t)vshlq_u64(v365, (uint64x2_t)vzip1q_s64((int64x2_t)0, v363)));
      int64x2_t v368 = vpaddq_s64(v366, v363);
      unint64_t v369 = (v367.i64[0] << v351) | v350;
      if (v368.i64[0] + (v351 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v218 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v369;
        if ((v351 & 0x3F) != 0) {
          unint64_t v369 = (unint64_t)v367.i64[0] >> -(v351 & 0x3F);
        }
        else {
          unint64_t v369 = 0;
        }
      }
      unint64_t v370 = v368.i64[0] + v351;
      unint64_t v371 = v369 | (v367.i64[1] << v370);
      if ((v370 & 0x3F) + v368.i64[1] >= 0x40)
      {
        *(void *)((char *)v218 + ((v370 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v371;
        unint64_t v371 = (unint64_t)v367.i64[1] >> -(v370 & 0x3F);
        if ((v370 & 0x3F) == 0) {
          unint64_t v371 = 0;
        }
      }
      unint64_t v372 = v370 + v368.i64[1];
      if ((v372 & 0x3F) != 0) {
        *(void *)((char *)v218 + ((v372 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v371;
      }
      unint64_t result = (v372 - v219 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(unsigned char *)a1 = a3->i8[0];
    *a2 = 96;
    return 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v11 = 0;
  uint64_t v39 = *MEMORY[0x263EF8340];
  long long v37 = 0u;
  long long v38 = 0u;
  do
  {
    uint64_t v12 = 0;
    unint64_t v13 = (char *)(a3 + v11 * a4);
    uint64_t v14 = (2 * v11) | 1u;
    do
    {
      int8x8_t v15 = (char *)&v37 + 8 * (v12 & 0x7F);
      v15[2 * (v11 & 0x7F)] = *v13;
      int8x8_t v16 = (char *)&v37 + 4 * ((2 * v12) | 1u);
      v16[2 * (v11 & 0x7F)] = v13[1];
      v15[v14] = v13[2];
      LOBYTE(v15) = v13[3];
      v13 += 4;
      ++v12;
      v16[v14] = (char)v15;
    }
    while (a5 != v12);
    ++v11;
  }
  while (v11 != a6);
  unsigned int v17 = 2 * (a6 & 0x7F);
  unsigned int v18 = 2 * (a5 & 0x7F);
  v32.i32[0] = v37;
  v32.i32[1] = BYTE4(v37);
  v32.i32[2] = BYTE1(v37);
  v32.i32[3] = BYTE5(v37);
  int v33 = BYTE8(v37);
  int v34 = BYTE12(v37);
  int v35 = BYTE9(v37);
  int v36 = BYTE13(v37);
  if (v18 >= 4) {
    unsigned int v19 = 4;
  }
  else {
    unsigned int v19 = 2 * (a5 & 0x7F);
  }
  if (v18 >= 4) {
    unsigned int v20 = v18 - 4;
  }
  else {
    unsigned int v20 = 0;
  }
  char v21 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v32, a7, v19, 2u);
  v32.i32[0] = BYTE2(v37);
  v32.i32[1] = BYTE6(v37);
  v32.i32[2] = BYTE3(v37);
  v32.i32[3] = BYTE7(v37);
  int v33 = BYTE10(v37);
  int v34 = BYTE14(v37);
  unsigned int v22 = v17 - 2;
  if (v17 < 2) {
    unsigned int v22 = 0;
  }
  int v35 = BYTE11(v37);
  int v36 = HIBYTE(v37);
  if (a6 >= 2) {
    unsigned int v23 = 2;
  }
  else {
    unsigned int v23 = v22;
  }
  int v24 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 4, &v32, a7, v19, v23);
  v32.i32[0] = v38;
  v32.i32[1] = BYTE4(v38);
  v32.i32[2] = BYTE1(v38);
  v32.i32[3] = BYTE5(v38);
  int v33 = BYTE8(v38);
  int v34 = BYTE12(v38);
  if (a5 >= 4) {
    unsigned int v25 = 4;
  }
  else {
    unsigned int v25 = v20;
  }
  int v35 = BYTE9(v38);
  int v36 = BYTE13(v38);
  int v26 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, &v32, a7, v25, 2u);
  v32.i32[0] = BYTE2(v38);
  v32.i32[1] = BYTE6(v38);
  v32.i32[2] = BYTE3(v38);
  v32.i32[3] = BYTE7(v38);
  int v33 = BYTE10(v38);
  int v34 = BYTE14(v38);
  int v35 = BYTE11(v38);
  int v36 = HIBYTE(v38);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 12, &v32, a7, v25, v23);
  if (v26) {
    char v28 = 4;
  }
  else {
    char v28 = 0;
  }
  if (v24) {
    char v29 = 2;
  }
  else {
    char v29 = 0;
  }
  if (result) {
    char v30 = -8;
  }
  else {
    char v30 = -16;
  }
  *a2 = v30 | v28 | v21 | v29;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4 = 8 * (a3 & 7);
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v4 + 12;
  unint64_t v7 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v4;
  if (v4 >= 0x35) {
    v7 |= *(void *)(v5 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v8 = (8 * (a3 & 7)) | 0x80;
  int8x16_t v9 = vdupq_n_s8(((a4 >> 5) | (8 * v7)) & 0xF);
  v10.i64[0] = 0x303030303030303;
  v10.i64[1] = 0x303030303030303;
  int8x16_t v11 = vandq_s8(v9, v10);
  int8x16_t v12 = vbicq_s8(vdupq_n_s8(((v7 >> 1) & 7) + 1), vceqq_s8(v11, v10));
  v10.i64[0] = 0x202020202020202;
  v10.i64[1] = 0x202020202020202;
  int8x16_t v13 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)0x4000400040004)))), v10);
  if (vmaxvq_s8(v13) < 1)
  {
    int v23 = 0;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int8x16_t v25 = v12;
    int8x16_t v26 = v12;
    int8x16_t v27 = v12;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    int8x16_t v29 = v12;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
  }
  else
  {
    int16x8_t v14 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v13, v13));
    int32x4_t v15 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v14, v14));
    unint64_t v16 = vpaddq_s32(v15, v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19 + v6;
    if (v19 <= 0x80 && v8 >= v20)
    {
      int64x2_t v32 = vaddq_s64(vzip1q_s64((int64x2_t)0, v18), vdupq_n_s64(v6 & 0x3C));
      int v33 = (int64x2_t *)(v5 + ((v6 >> 3) & 8));
      int32x4_t v22 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v33, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33->i64[0], 0), (uint64x2_t)vnegq_s64(v32)));
      if (v19 + (v6 & 0x3C) < 0x81)
      {
        int v23 = 0;
      }
      else
      {
        int v23 = 0;
        int32x4_t v22 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v33[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v32)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v33[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v32))), (int8x16_t)v22);
      }
      unint64_t v6 = v20;
    }
    else
    {
      int32x4_t v22 = 0uLL;
      int v23 = 1;
    }
    int32x2_t v34 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL));
    v35.i64[0] = v34.u32[0];
    v35.i64[1] = v34.u32[1];
    int32x4_t v36 = (int32x4_t)vshlq_u64((uint64x2_t)v22, (uint64x2_t)vnegq_s64(v35));
    *(int32x2_t *)v22.i8 = vmovn_s64((int64x2_t)v22);
    *(int32x2_t *)v36.i8 = vmovn_s64((int64x2_t)v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s32(v22, v36);
    int16x8_t v38 = (int16x8_t)vshlq_u32((uint32x4_t)v37, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL)))));
    *(int16x4_t *)v37.i8 = vmovn_s32((int32x4_t)v37);
    *(int16x4_t *)v38.i8 = vmovn_s32((int32x4_t)v38);
    int16x8_t v39 = vzip1q_s16(v37, v38);
    *(int8x8_t *)v39.i8 = vzip1_s8(vmovn_s16(v39), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v39, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v9.i8))))));
    v37.i64[0] = 0x101010101010101;
    v37.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8((int8x16_t)v37, v13);
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v40.i64[0] = vandq_s8((int8x16_t)v39, vaddq_s8(v40, (int8x16_t)v37)).u64[0];
    int8x16_t v41 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 0);
    int8x16_t v42 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 1);
    int8x16_t v43 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 2);
    int8x16_t v44 = vdupq_lane_s8(*(int8x8_t *)v40.i8, 3);
    int8x16_t v29 = vsubq_s8(v12, v41);
    int8x16_t v27 = vsubq_s8(v12, v42);
    int8x16_t v26 = vsubq_s8(v12, v43);
    int8x16_t v25 = vsubq_s8(v12, v44);
    int8x16_t v31 = vceqzq_s8(v41);
    int8x16_t v30 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v24 = vceqzq_s8(v44);
  }
  v45.i64[0] = 0x707070707070707;
  v45.i64[1] = 0x707070707070707;
  int32x4_t v46 = 0uLL;
  int8x16_t v47 = vandq_s8(vextq_s8((int8x16_t)vcgtq_u8((uint8x16_t)v9, v45), (int8x16_t)0, 0xFuLL), v12);
  int16x8_t v48 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v47, v47));
  int32x4_t v49 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v48, v48));
  unint64_t v50 = vpaddq_s32(v49, v49).u64[0];
  v51.i64[0] = v50;
  v51.i64[1] = HIDWORD(v50);
  int64x2_t v52 = v51;
  unint64_t v53 = vaddvq_s64(v51);
  unint64_t v54 = v53 + v6;
  if (v53 <= 0x80 && v8 >= v54)
  {
    unint64_t v56 = v6 & 0x3F;
    int64x2_t v57 = vaddq_s64(vzip1q_s64((int64x2_t)0, v52), vdupq_n_s64(v56));
    int8x16_t v58 = (int64x2_t *)(v5 + 8 * (v6 >> 6));
    int32x4_t v46 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v58, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58->i64[0], 0), (uint64x2_t)vnegq_s64(v57)));
    if (v53 + v56 >= 0x81) {
      int32x4_t v46 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v58[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v57)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v58[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v57))), (int8x16_t)v46);
    }
    unint64_t v6 = v54;
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v59 = vandq_s8(v29, (int8x16_t)xmmword_242EA7380);
  int v60 = (a4 >> 5) & 3;
  if (v60 != 2)
  {
    unsigned int v64 = 0;
    unsigned int v62 = 0;
    unint64_t v65 = v6;
    goto LABEL_34;
  }
  unint64_t v61 = v6 + 4;
  if (v8 < v6 + 4)
  {
    unsigned int v62 = 0;
    unint64_t v61 = v6;
LABEL_33:
    unsigned int v64 = 0;
    int v23 = 1;
    unint64_t v65 = v61;
    goto LABEL_34;
  }
  uint64_t v66 = *(void *)(v5 + 8 * (v6 >> 6)) >> v6;
  if ((v6 & 0x3F) >= 0x3D) {
    v66 |= *(void *)(v5 + 8 * (v6 >> 6) + 8) << -(v6 & 0x3F);
  }
  unint64_t v65 = v6 + 8;
  unsigned int v62 = (int)(v66 << 28) >> 28;
  if (v8 < v6 + 8) {
    goto LABEL_33;
  }
  uint64_t v63 = *(void *)(v5 + 8 * (v61 >> 6)) >> v61;
  if ((v61 & 0x3F) >= 0x3D) {
    v63 |= *(void *)(v5 + 8 * (v61 >> 6) + 8) << -(v61 & 0x3F);
  }
  unsigned int v64 = (int)(v63 << 28) >> 28;
LABEL_34:
  int8x16_t v67 = vandq_s8(v27, (int8x16_t)xmmword_242EA7390);
  v59.i8[0] = 0;
  int16x8_t v68 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v59, v59));
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v65;
  int32x4_t v75 = 0uLL;
  if (v73 <= 0x80 && v8 >= v74)
  {
    unint64_t v78 = v65 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v78));
    int32x2_t v80 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v73 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v65 = v74;
  }
  else
  {
    int v23 = 1;
    int32x4_t v77 = 0uLL;
  }
  int8x16_t v81 = vandq_s8(v26, (int8x16_t)xmmword_242EA7390);
  int16x8_t v82 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v67, v67));
  int32x4_t v83 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v82, v82));
  unint64_t v84 = vpaddq_s32(v83, v83).u64[0];
  v85.i64[0] = v84;
  v85.i64[1] = HIDWORD(v84);
  int64x2_t v86 = v85;
  unint64_t v87 = vaddvq_s64(v85);
  if (v87 < 0x81)
  {
    int32x2_t v88 = vzip1_s32(*(int32x2_t *)v83.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL));
    v89.i64[0] = v88.u32[0];
    v89.i64[1] = v88.u32[1];
    int64x2_t v90 = v89;
    int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v82.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v82, (int8x16_t)v82, 8uLL)));
    int16x8_t v92 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v67.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL)));
    unint64_t v93 = v87 + v65;
    if (v8 >= v87 + v65)
    {
      unint64_t v94 = v65 & 0x3F;
      int64x2_t v95 = vaddq_s64(vzip1q_s64((int64x2_t)0, v86), vdupq_n_s64(v94));
      int8x16_t v96 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v75 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v96, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96->i64[0], 0), (uint64x2_t)vnegq_s64(v95)));
      if (v87 + v94 >= 0x81) {
        int32x4_t v75 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v96[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v95)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v96[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v95))), (int8x16_t)v75);
      }
      unint64_t v65 = v93;
    }
    else
    {
      int v23 = 1;
    }
    int32x4_t v97 = (int32x4_t)vshlq_u64((uint64x2_t)v75, (uint64x2_t)vnegq_s64(v90));
    *(int32x2_t *)v75.i8 = vmovn_s64((int64x2_t)v75);
    *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
    int16x8_t v98 = (int16x8_t)vzip1q_s32(v75, v97);
    int16x8_t v99 = (int16x8_t)vshlq_u32((uint32x4_t)v98, (uint32x4_t)vnegq_s32(v91));
    *(int16x4_t *)v98.i8 = vmovn_s32((int32x4_t)v98);
    *(int16x4_t *)v99.i8 = vmovn_s32((int32x4_t)v99);
    int16x8_t v100 = vzip1q_s16(v98, v99);
    int16x8_t v101 = (int16x8_t)vshlq_u16((uint16x8_t)v100, (uint16x8_t)vnegq_s16(v92));
    *(int8x8_t *)v100.i8 = vmovn_s16(v100);
    *(int8x8_t *)v101.i8 = vmovn_s16(v101);
    int32x4_t v75 = (int32x4_t)vzip1q_s8((int8x16_t)v100, (int8x16_t)v101);
  }
  else
  {
    int v23 = 1;
  }
  int8x16_t v102 = vandq_s8(v25, (int8x16_t)xmmword_242EA7390);
  int16x8_t v103 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v81, v81));
  int32x4_t v104 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v103, v103));
  unint64_t v105 = vpaddq_s32(v104, v104).u64[0];
  v106.i64[0] = v105;
  v106.i64[1] = HIDWORD(v105);
  int64x2_t v107 = v106;
  unint64_t v108 = vaddvq_s64(v106);
  if (v108 <= 0x80)
  {
    int32x2_t v110 = vzip1_s32(*(int32x2_t *)v104.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v104, (int8x16_t)v104, 8uLL));
    v111.i64[0] = v110.u32[0];
    v111.i64[1] = v110.u32[1];
    int64x2_t v112 = v111;
    int32x4_t v113 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v103.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v103, (int8x16_t)v103, 8uLL)));
    int16x8_t v114 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
    unint64_t v115 = v108 + v65;
    if (v8 >= v108 + v65)
    {
      unint64_t v117 = v65 & 0x3F;
      int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v107), vdupq_n_s64(v117));
      int8x16_t v119 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
      int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
      if (v108 + v117 >= 0x81) {
        int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v116);
      }
      unint64_t v65 = v115;
    }
    else
    {
      int32x4_t v116 = 0uLL;
      int v23 = 1;
    }
    int32x4_t v120 = (int32x4_t)vshlq_u64((uint64x2_t)v116, (uint64x2_t)vnegq_s64(v112));
    *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v116);
    *(int32x2_t *)v120.i8 = vmovn_s64((int64x2_t)v120);
    int16x8_t v121 = (int16x8_t)vzip1q_s32(v116, v120);
    int16x8_t v122 = (int16x8_t)vshlq_u32((uint32x4_t)v121, (uint32x4_t)vnegq_s32(v113));
    *(int16x4_t *)v121.i8 = vmovn_s32((int32x4_t)v121);
    *(int16x4_t *)v122.i8 = vmovn_s32((int32x4_t)v122);
    int16x8_t v123 = vzip1q_s16(v121, v122);
    int16x8_t v124 = (int16x8_t)vshlq_u16((uint16x8_t)v123, (uint16x8_t)vnegq_s16(v114));
    *(int8x8_t *)v123.i8 = vmovn_s16(v123);
    *(int8x8_t *)v124.i8 = vmovn_s16(v124);
    int8x16_t v109 = vzip1q_s8((int8x16_t)v123, (int8x16_t)v124);
  }
  else
  {
    int v23 = 1;
    int8x16_t v109 = 0uLL;
  }
  int16x8_t v125 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v102, v102));
  int32x4_t v126 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v125, v125));
  unint64_t v127 = vpaddq_s32(v126, v126).u64[0];
  v128.i64[0] = v127;
  v128.i64[1] = HIDWORD(v127);
  int64x2_t v129 = v128;
  unint64_t v130 = vaddvq_s64(v128);
  if (v130 > 0x80 || v8 < v130 + v65) {
    goto LABEL_64;
  }
  int64x2_t v131 = vaddq_s64(vzip1q_s64((int64x2_t)0, v129), vdupq_n_s64(v65 & 0x3F));
  int8x16_t v132 = (int64x2_t *)(v5 + 8 * (v65 >> 6));
  int64x2_t v133 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v132, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132->i64[0], 0), (uint64x2_t)vnegq_s64(v131)));
  if (v130 + (v65 & 0x3F) >= 0x81) {
    int64x2_t v133 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v132[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v131)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v132[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v131))), (int8x16_t)v133);
  }
  if (v23 || (uint64_t v134 = (a4 & 0x1F) + 1, 8 * ((a3 & 7) + v134) - (v130 + v65) >= 9))
  {
LABEL_64:
    uint64_t v134 = 0;
    v187 |= 255 << (8 * ((&v187 + 7) & 7u));
    *a1 = 0;
    *(_DWORD *)((char *)a1 + a2) = 0;
  }
  else
  {
    int32x2_t v136 = vzip1_s32(*(int32x2_t *)v49.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL));
    int32x2_t v137 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v138.i64[0] = v136.u32[0];
    v138.i64[1] = v136.u32[1];
    int64x2_t v139 = v138;
    v138.i64[0] = v137.u32[0];
    v138.i64[1] = v137.u32[1];
    int32x4_t v140 = (int32x4_t)vshlq_u64((uint64x2_t)v46, (uint64x2_t)vnegq_s64(v139));
    int32x4_t v141 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v46.i8 = vmovn_s64((int64x2_t)v46);
    *(int32x2_t *)v140.i8 = vmovn_s64((int64x2_t)v140);
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v141.i8 = vmovn_s64((int64x2_t)v141);
    int16x8_t v142 = (int16x8_t)vzip1q_s32(v46, v140);
    int16x8_t v143 = (int16x8_t)vzip1q_s32(v77, v141);
    int16x8_t v144 = (int16x8_t)vshlq_u32((uint32x4_t)v142, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v48.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v48, (int8x16_t)v48, 8uLL)))));
    int16x8_t v145 = (int16x8_t)vshlq_u32((uint32x4_t)v143, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v142.i8 = vmovn_s32((int32x4_t)v142);
    *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
    *(int16x4_t *)v143.i8 = vmovn_s32((int32x4_t)v143);
    *(int16x4_t *)v145.i8 = vmovn_s32((int32x4_t)v145);
    int16x8_t v146 = vzip1q_s16(v142, v144);
    int16x8_t v147 = vzip1q_s16(v143, v145);
    int16x8_t v148 = (int16x8_t)vshlq_u16((uint16x8_t)v146, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)))));
    int16x8_t v149 = (int16x8_t)vshlq_u16((uint16x8_t)v147, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)))));
    *(int8x8_t *)v146.i8 = vmovn_s16(v146);
    *(int8x8_t *)v148.i8 = vmovn_s16(v148);
    *(int8x8_t *)v147.i8 = vmovn_s16(v147);
    *(int8x8_t *)v149.i8 = vmovn_s16(v149);
    v150.i64[0] = 0x808080808080808;
    v150.i64[1] = 0x808080808080808;
    v151.i64[0] = 0x808080808080808;
    v151.i64[1] = 0x808080808080808;
    unint64_t v152 = v7 >> 4;
    int8x16_t v153 = vzip1q_s8((int8x16_t)v146, (int8x16_t)v148);
    v148.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v148.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v154 = vzip1q_s8((int8x16_t)v147, (int8x16_t)v149);
    v149.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v149.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v155 = vsubq_s8(v151, v67);
    *(int32x2_t *)v143.i8 = vzip1_s32(*(int32x2_t *)v126.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v126, (int8x16_t)v126, 8uLL));
    v156.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v156.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v157.i64[0] = 0x808080808080808;
    v157.i64[1] = 0x808080808080808;
    int32x4_t v158 = (int32x4_t)vaddq_s8(v67, (int8x16_t)v149);
    v138.i64[0] = v143.u32[0];
    v138.i64[1] = v143.u32[1];
    int8x16_t v159 = vshlq_s8(vshlq_s8(v153, vsubq_s8(v150, v47)), vaddq_s8(v47, (int8x16_t)v148));
    int8x16_t v160 = vshlq_s8(vshlq_s8(v154, vsubq_s8(v151, v59)), vaddq_s8(v59, (int8x16_t)v149));
    int8x16_t v161 = vshlq_s8(vshlq_s8((int8x16_t)v75, v155), (int8x16_t)v158);
    int8x16_t v162 = vshlq_s8(vshlq_s8(v109, vsubq_s8(v151, v81)), vaddq_s8(v81, (int8x16_t)v149));
    int32x4_t v163 = (int32x4_t)vshlq_u64((uint64x2_t)v133, (uint64x2_t)vnegq_s64(v138));
    *(int32x2_t *)v158.i8 = vmovn_s64(v133);
    *(int32x2_t *)v163.i8 = vmovn_s64((int64x2_t)v163);
    int16x8_t v164 = (int16x8_t)vzip1q_s32(v158, v163);
    int16x8_t v165 = (int16x8_t)vshlq_u32((uint32x4_t)v164, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v125.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v125, (int8x16_t)v125, 8uLL)))));
    *(int16x4_t *)v164.i8 = vmovn_s32((int32x4_t)v164);
    *(int16x4_t *)v165.i8 = vmovn_s32((int32x4_t)v165);
    int16x8_t v166 = vzip1q_s16(v164, v165);
    int16x8_t v167 = (int16x8_t)vshlq_u16((uint16x8_t)v166, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v102.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v102, v102, 8uLL)))));
    *(int8x8_t *)v166.i8 = vmovn_s16(v166);
    *(int8x8_t *)v167.i8 = vmovn_s16(v167);
    int8x16_t v168 = vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v166, (int8x16_t)v167), vsubq_s8(v157, v102)), vaddq_s8(v102, v156));
    if (v60 == 2)
    {
      v169.i64[0] = 0xFFFF0000FFFF0000;
      v169.i64[1] = 0xFFFF0000FFFF0000;
      int8x16_t v170 = vmlaq_s8(vandq_s8(vdupq_n_s8(v64), v169), vdupq_n_s8(v62), (int8x16_t)xmmword_242EA73A0);
      int8x16_t v160 = vaddq_s8(v160, v170);
      int8x16_t v161 = vaddq_s8(vaddq_s8(vdupq_n_s8(2 * v64), v170), v161);
      int8x16_t v162 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62), v170), v162);
      int8x16_t v168 = vaddq_s8(vaddq_s8(vdupq_n_s8(4 * v62 + 2 * v64), v170), v168);
    }
    int8x8_t v171 = (int8x8_t)vdupq_n_s8(v152).u64[0];
    int8x16_t v172 = vaddq_s8(vandq_s8(v159, v31), v160);
    int8x16_t v173 = vdupq_lane_s8(*(int8x8_t *)v159.i8, 0);
    int8x16_t v174 = vsubq_s8(v172, vandq_s8(v173, v31));
    int8x16_t v175 = vsubq_s8(v161, vandq_s8(v173, v30));
    int8x16_t v176 = vsubq_s8(v162, vandq_s8(v173, v28));
    int8x16_t v177 = vsubq_s8(v168, vandq_s8(v173, v24));
    v178.i64[0] = 0x101010101010101;
    v178.i64[1] = 0x101010101010101;
    if (vaddlvq_s8(vceqq_s8(v11, v178)))
    {
      int8x16_t v179 = v174;
      v179.i8[0] = v174.i8[7];
      v179.i8[7] = v174.i8[0];
      int8x16_t v180 = vnegq_s8(vandq_s8(v9, v178));
      int8x16_t v181 = vbslq_s8(v180, v179, v174);
      int8x16_t v182 = vaddq_s8(vandq_s8(vqtbl1q_s8(v181, (int8x16_t)xmmword_242EA73B0), v180), v181);
      v174.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v182, (int8x16_t)xmmword_242EA73C0), v180), v182).u64[0];
      int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA73D0), v180), v175);
      v175.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA73E0), v180), v183).u64[0];
      int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA73F0), v180), v176);
      v176.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA7400), v180), v184).u64[0];
      int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7410), v180), v177);
      v177.i64[0] = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA7420), v180), v185).u64[0];
    }
    *(int8x8_t *)&long long v186 = vadd_s8(v171, *(int8x8_t *)v174.i8);
    *((int8x8_t *)&v186 + 1) = vadd_s8(*(int8x8_t *)v176.i8, v171);
    *(_OWORD *)a1 = v186;
    *(int8x8_t *)&long long v186 = vadd_s8(*(int8x8_t *)v175.i8, v171);
    *((int8x8_t *)&v186 + 1) = vadd_s8(*(int8x8_t *)v177.i8, v171);
    *(_OWORD *)((char *)a1 + a2) = v186;
  }
  return v134;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(unsigned char *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v5 = 0;
  uint64_t v206 = *MEMORY[0x263EF8340];
  unsigned int v6 = a5 & 0xFFFFFFFD;
  unsigned int v192 = a4;
  uint64_t v191 = a3;
  do
  {
    uint64_t v23 = a3 + 4 * v5;
    int8x16_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = 8 * (v23 & 7);
    if ((a4 >> v5))
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = v25;
      do
      {
        if ((unint64_t)(v28 - v25 + (v27 << 6) - 29) < 0xFFFFFFFFFFFFFFDFLL)
        {
          char v29 = 0;
        }
        else
        {
          char v29 = 0;
          uint64_t v33 = 0;
          unint64_t v34 = 4;
          do
          {
            if (64 - v28 >= v34) {
              unint64_t v35 = v34;
            }
            else {
              unint64_t v35 = 64 - v28;
            }
            v29 |= (unint64_t)((v24[v27] >> v28) & ~(-1 << v35)) << v33;
            v33 += v35;
            unint64_t v36 = v35 + v28;
            v27 += v36 >> 6;
            uint64_t v28 = v36 & 0x3F;
            v34 -= v35;
          }
          while (v34);
        }
        int v30 = 16 * (v29 & 0xF);
        int v31 = v30 - (v29 & 1) + 8;
        if (v30 == 240) {
          int v31 = 255;
        }
        if (!v30) {
          int v31 = 0;
        }
        if (v30 == 128 && v6 == 1) {
          int v31 = v30;
        }
        if (a5 == 4) {
          int v31 = v30;
        }
        *(&v193 + v26++) = v31 ^ (((a5 & 0xFFFFFFFD) == 1) << 7);
      }
      while (v26 != 8);
      LOBYTE(v7) = v193;
      LOBYTE(v8) = v194;
      LOBYTE(v10) = v195;
      LOBYTE(v9) = v196;
      LOBYTE(v12) = v197;
      LOBYTE(v11) = v198;
      unint64_t result = v199;
      LOBYTE(v14) = v200;
      goto LABEL_3;
    }
    uint64_t v37 = v25 | 3;
    if (((*v24 >> v25) & 7) == 0)
    {
      if ((unint64_t)(v37 - v25) <= 0x1E)
      {
        uint64_t v39 = 0;
        char v135 = 0;
        uint64_t v136 = 0;
        unint64_t v137 = 2;
        do
        {
          unint64_t v138 = 64 - v37;
          if (64 - v37 >= v137) {
            unint64_t v138 = v137;
          }
          v135 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v138)) << v136;
          v136 += v138;
          unint64_t v139 = v138 + v37;
          v39 += v139 >> 6;
          uint64_t v37 = v139 & 0x3F;
          v137 -= v138;
        }
        while (v137);
        int v40 = v135 & 3;
        if (v40 == 2)
        {
          unsigned int v38 = 0;
          int v41 = 1;
          goto LABEL_31;
        }
        if (v40 == 1)
        {
          int v41 = 0;
          int v40 = 2;
          int v42 = 5;
          unsigned int v38 = 255;
          goto LABEL_32;
        }
        if ((v135 & 3) != 0)
        {
          unsigned int v38 = 0;
          int v40 = 2;
          int v42 = 5;
          int v41 = 2;
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v39 = 0;
      }
      unsigned int v38 = 0;
      int v41 = 0;
      int v40 = 2;
LABEL_31:
      int v42 = 5;
      goto LABEL_32;
    }
    unsigned int v38 = 0;
    uint64_t v39 = 0;
    int v40 = 0;
    int v41 = ((*v24 >> v25) & 7) + 2;
    int v42 = 3;
LABEL_32:
    int8x16_t v43 = &kDQuadParamTable[10 * v41];
    unsigned int v44 = v43[4];
    unsigned int v45 = v43[5];
    if (v44 >= 8) {
      uint64_t v46 = 8;
    }
    else {
      uint64_t v46 = v44;
    }
    if (v45 >= 8) {
      uint64_t v47 = 8;
    }
    else {
      uint64_t v47 = v45;
    }
    char v48 = 8 - v46;
    if (v41)
    {
      if (v46)
      {
        if ((unint64_t)(v46 - v25 + v37 + (v39 << 6)) <= 0x20)
        {
          int v49 = 0;
          uint64_t v50 = 0;
          unint64_t v51 = v46;
          do
          {
            unint64_t v52 = 64 - v37;
            if (64 - v37 >= v51) {
              unint64_t v52 = v51;
            }
            v49 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v52)) << v50;
            v50 += v52;
            unint64_t v53 = v52 + v37;
            v39 += v53 >> 6;
            uint64_t v37 = v53 & 0x3F;
            v51 -= v52;
          }
          while (v51);
        }
        else
        {
          int v49 = 0;
        }
        int v42 = v46 + v40 + 3;
      }
      else
      {
        int v49 = 0;
      }
      unsigned int v38 = v49 << v48;
    }
    if (v47)
    {
      if ((unint64_t)(v37 - v25 + (v39 << 6) + 3) <= 0x20)
      {
        int v54 = 0;
        uint64_t v56 = 0;
        unint64_t v57 = 3;
        do
        {
          unint64_t v58 = 64 - v37;
          if (64 - v37 >= v57) {
            unint64_t v58 = v57;
          }
          v54 |= (unint64_t)((v24[v39] >> v37) & ~(-1 << v58)) << v56;
          v56 += v58;
          unint64_t v59 = v58 + v37;
          v39 += v59 >> 6;
          uint64_t v37 = v59 & 0x3F;
          v57 -= v58;
        }
        while (v57);
      }
      else
      {
        int v54 = 0;
      }
      uint64_t v202 = 0;
      uint64_t v203 = 0;
      int v205 = 0;
      uint64_t v204 = 0;
      unsigned int v60 = 29 - v42;
      unsigned int v61 = (29 - v42) / 7u;
      uint64_t v62 = v47 - v25;
      unint64_t v63 = (v37 | (v39 << 6)) + v60 % 7;
      unint64_t v64 = v63 & 0x3F;
      if (v62 + v64 + (v63 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        uint64_t v55 = 0;
        uint64_t v65 = 0;
        unint64_t v66 = v63 >> 6;
        unint64_t v67 = v47;
        do
        {
          unint64_t v68 = 64 - v64;
          if (64 - v64 >= v67) {
            unint64_t v68 = v67;
          }
          v55 |= ((unint64_t)((v24[v66] >> v64) & ~(-1 << v68)) << v65);
          v65 += v68;
          unint64_t v69 = v68 + v64;
          v66 += v69 >> 6;
          unint64_t v64 = v69 & 0x3F;
          v67 -= v68;
        }
        while (v67);
        LODWORD(v202) = v55;
        unint64_t v63 = v64 | (v66 << 6);
      }
      else
      {
        uint64_t v55 = 0;
      }
      uint64_t v70 = v61 - v47;
      unint64_t v71 = v63 + v70;
      uint64_t v72 = (v63 + v70) & 0x3F;
      if (v62 + v72 + (v71 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v73 = 0;
        uint64_t v74 = 0;
        unint64_t v75 = v71 >> 6;
        unint64_t v76 = v47;
        do
        {
          unint64_t v77 = 64 - v72;
          if (64 - v72 >= v76) {
            unint64_t v77 = v76;
          }
          v73 |= (unint64_t)((v24[v75] >> v72) & ~(-1 << v77)) << v74;
          v74 += v77;
          unint64_t v78 = v77 + v72;
          v75 += v78 >> 6;
          uint64_t v72 = v78 & 0x3F;
          v76 -= v77;
        }
        while (v76);
        HIDWORD(v202) = v73;
        unint64_t v71 = v72 | (v75 << 6);
      }
      else
      {
        HIDWORD(v202) = 0;
      }
      unint64_t v79 = v71 + v70;
      uint64_t v80 = v79 & 0x3F;
      if (v62 + v80 + (v79 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v81 = 0;
        uint64_t v82 = 0;
        unint64_t v83 = v79 >> 6;
        unint64_t v84 = v47;
        do
        {
          unint64_t v85 = 64 - v80;
          if (64 - v80 >= v84) {
            unint64_t v85 = v84;
          }
          v81 |= (unint64_t)((v24[v83] >> v80) & ~(-1 << v85)) << v82;
          v82 += v85;
          unint64_t v86 = v85 + v80;
          v83 += v86 >> 6;
          uint64_t v80 = v86 & 0x3F;
          v84 -= v85;
        }
        while (v84);
        LODWORD(v203) = v81;
        unint64_t v79 = v80 | (v83 << 6);
      }
      else
      {
        LODWORD(v203) = 0;
      }
      unint64_t v87 = v79 + v70;
      uint64_t v88 = v87 & 0x3F;
      if (v62 + v88 + (v87 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v89 = 0;
        uint64_t v90 = 0;
        unint64_t v91 = v87 >> 6;
        unint64_t v92 = v47;
        do
        {
          unint64_t v93 = 64 - v88;
          if (64 - v88 >= v92) {
            unint64_t v93 = v92;
          }
          v89 |= (unint64_t)((v24[v91] >> v88) & ~(-1 << v93)) << v90;
          v90 += v93;
          unint64_t v94 = v93 + v88;
          v91 += v94 >> 6;
          uint64_t v88 = v94 & 0x3F;
          v92 -= v93;
        }
        while (v92);
        HIDWORD(v203) = v89;
        unint64_t v87 = v88 | (v91 << 6);
      }
      else
      {
        HIDWORD(v203) = 0;
      }
      unint64_t v95 = v87 + v70;
      uint64_t v96 = v95 & 0x3F;
      if (v62 + v96 + (v95 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v97 = 0;
        uint64_t v98 = 0;
        unint64_t v99 = v95 >> 6;
        unint64_t v100 = v47;
        do
        {
          unint64_t v101 = 64 - v96;
          if (64 - v96 >= v100) {
            unint64_t v101 = v100;
          }
          v97 |= (unint64_t)((v24[v99] >> v96) & ~(-1 << v101)) << v98;
          v98 += v101;
          unint64_t v102 = v101 + v96;
          v99 += v102 >> 6;
          uint64_t v96 = v102 & 0x3F;
          v100 -= v101;
        }
        while (v100);
        LODWORD(v204) = v97;
        unint64_t v95 = v96 | (v99 << 6);
      }
      else
      {
        LODWORD(v204) = 0;
      }
      unint64_t v103 = v95 + v70;
      unint64_t v104 = v103 >> 6;
      uint64_t v105 = v103 & 0x3F;
      if (v62 + v105 + (v103 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v106 = 0;
        uint64_t v107 = 0;
        unint64_t v108 = v47;
        do
        {
          unint64_t v109 = 64 - v105;
          if (64 - v105 >= v108) {
            unint64_t v109 = v108;
          }
          v106 |= (unint64_t)((v24[v104] >> v105) & ~(-1 << v109)) << v107;
          v107 += v109;
          unint64_t v110 = v109 + v105;
          v104 += v110 >> 6;
          uint64_t v105 = v110 & 0x3F;
          v108 -= v109;
        }
        while (v108);
      }
      else
      {
        int v106 = 0;
      }
      HIDWORD(v204) = v106;
      unint64_t v111 = (v105 | (v104 << 6)) + v70;
      uint64_t v112 = v111 & 0x3F;
      if (v62 + v112 + (v111 & 0xFFFFFFFFFFFFFFC0) <= 0x20)
      {
        int v113 = 0;
        uint64_t v114 = 0;
        unint64_t v115 = v111 >> 6;
        unint64_t v116 = v47;
        do
        {
          unint64_t v117 = 64 - v112;
          if (64 - v112 >= v116) {
            unint64_t v117 = v116;
          }
          v113 |= (unint64_t)((v24[v115] >> v112) & ~(-1 << v117)) << v114;
          v114 += v117;
          unint64_t v118 = v117 + v112;
          v115 += v118 >> 6;
          uint64_t v112 = v118 & 0x3F;
          v116 -= v117;
        }
        while (v116);
      }
      else
      {
        int v113 = 0;
      }
      int v205 = v113;
    }
    else
    {
      int v54 = 0;
      uint64_t v55 = 0;
      uint64_t v202 = 0;
      uint64_t v203 = 0;
      int v205 = 0;
      uint64_t v204 = 0;
    }
    unint64_t v119 = *(void *)&kDQuadParamTable[10 * v41 + 2];
    if (v119 >> v47 <= 1) {
      unint64_t v120 = 1;
    }
    else {
      unint64_t v120 = v119 >> v47;
    }
    unint64_t v121 = v120 >> 1;
    unint64_t v122 = (unint64_t)(1 << v48) >> 1;
    if (v120 >> 1 < v122) {
      unint64_t v122 = v120 >> 1;
    }
    unint64_t v123 = 128 - v38;
    if (v38) {
      uint64_t v124 = v122;
    }
    else {
      uint64_t v124 = 0;
    }
    BOOL v125 = v38 == 128;
    if (v38 >= 0xFF) {
      unsigned int v126 = 255;
    }
    else {
      unsigned int v126 = v38;
    }
    LODWORD(v127) = v126 ^ 0x80;
    if (v120 <= v123)
    {
      unsigned int v128 = 127;
    }
    else
    {
      LODWORD(v127) = 0;
      unsigned int v128 = 0;
    }
    if (v6 == 1) {
      unint64_t v127 = v127;
    }
    else {
      unint64_t v127 = v126;
    }
    if (v6 == 1) {
      unint64_t v14 = v128;
    }
    else {
      unint64_t v14 = 255;
    }
    if (v47)
    {
      unint64_t v129 = v119 + v38;
      uint64_t v130 = ~(-1 << v47);
      unint64_t v131 = v123 / v120;
      if (v54)
      {
        BOOL v132 = v131 == v55;
        if (!v38 && !v55)
        {
          uint64_t v133 = 0;
          goto LABEL_147;
        }
        if (v129 >= 0x100 && v55 == v130)
        {
          uint64_t v134 = 1;
          uint64_t v133 = 255;
        }
        else
        {
          uint64_t v133 = v121 + v120 * v55;
LABEL_147:
          uint64_t v134 = 1;
        }
      }
      else
      {
        uint64_t v134 = 0;
        uint64_t v133 = v124;
        BOOL v132 = v38 == 128;
      }
      unint64_t v140 = v133 + v38;
      unint64_t v141 = v140;
      if (a5 == 4)
      {
        unint64_t v141 = 2139095039;
        if ((v140 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v141 = 4286578687;
          if ((v140 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v141 = v140;
          }
        }
      }
      if (v141 >= 0xFF) {
        int v142 = 255;
      }
      else {
        int v142 = v141;
      }
      if (v132) {
        int v143 = 0;
      }
      else {
        int v143 = v142 ^ 0x80;
      }
      if (v6 == 1) {
        int v7 = v143;
      }
      else {
        int v7 = v142;
      }
      int v193 = v7;
      if (v54 == 1)
      {
        uint64_t v144 = v124;
        BOOL v145 = v38 == 128;
      }
      else
      {
        uint64_t v146 = *(unsigned int *)((unint64_t)&v202 | (4 * v134));
        BOOL v145 = v131 == v146;
        if (v38 | v146)
        {
          if (v129 >= 0x100 && v146 == v130) {
            uint64_t v144 = 255;
          }
          else {
            uint64_t v144 = v121 + v120 * v146;
          }
        }
        else
        {
          uint64_t v144 = 0;
        }
        ++v134;
      }
      unint64_t v147 = v144 + v38;
      unint64_t v148 = v147;
      if (a5 == 4)
      {
        unint64_t v148 = 2139095039;
        if ((v147 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v147 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v148 = 4286578687;
          }
          else {
            unint64_t v148 = v147;
          }
        }
      }
      if (v148 >= 0xFF) {
        int v149 = 255;
      }
      else {
        int v149 = v148;
      }
      if (v145) {
        int v150 = 0;
      }
      else {
        int v150 = v149 ^ 0x80;
      }
      if (v6 == 1) {
        int v8 = v150;
      }
      else {
        int v8 = v149;
      }
      int v194 = v8;
      if (v54 == 2)
      {
        uint64_t v151 = v124;
        BOOL v152 = v38 == 128;
      }
      else
      {
        uint64_t v153 = *((unsigned int *)&v202 + v134);
        BOOL v152 = v131 == v153;
        if (v38 | v153)
        {
          if (v129 >= 0x100 && v153 == v130) {
            uint64_t v151 = 255;
          }
          else {
            uint64_t v151 = v121 + v120 * v153;
          }
        }
        else
        {
          uint64_t v151 = 0;
        }
        ++v134;
      }
      unint64_t v154 = v151 + v38;
      unint64_t v155 = v154;
      if (a5 == 4)
      {
        unint64_t v155 = 2139095039;
        if ((v154 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v154 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v155 = 4286578687;
          }
          else {
            unint64_t v155 = v154;
          }
        }
      }
      if (v155 >= 0xFF) {
        int v156 = 255;
      }
      else {
        int v156 = v155;
      }
      if (v152) {
        int v157 = 0;
      }
      else {
        int v157 = v156 ^ 0x80;
      }
      if (v6 == 1) {
        int v10 = v157;
      }
      else {
        int v10 = v156;
      }
      int v195 = v10;
      if (v54 == 3)
      {
        uint64_t v158 = v124;
        BOOL v159 = v38 == 128;
      }
      else
      {
        uint64_t v160 = *((unsigned int *)&v202 + v134);
        BOOL v159 = v131 == v160;
        if (v38 | v160)
        {
          if (v129 >= 0x100 && v160 == v130) {
            uint64_t v158 = 255;
          }
          else {
            uint64_t v158 = v121 + v120 * v160;
          }
        }
        else
        {
          uint64_t v158 = 0;
        }
        ++v134;
      }
      unint64_t v161 = v158 + v38;
      unint64_t v162 = v161;
      if (a5 == 4)
      {
        unint64_t v162 = 2139095039;
        if ((v161 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v161 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v162 = 4286578687;
          }
          else {
            unint64_t v162 = v161;
          }
        }
      }
      if (v162 >= 0xFF) {
        int v163 = 255;
      }
      else {
        int v163 = v162;
      }
      if (v159) {
        int v164 = 0;
      }
      else {
        int v164 = v163 ^ 0x80;
      }
      if (v6 == 1) {
        int v9 = v164;
      }
      else {
        int v9 = v163;
      }
      int v196 = v9;
      if (v54 == 4)
      {
        uint64_t v165 = v124;
        BOOL v166 = v38 == 128;
      }
      else
      {
        uint64_t v167 = *((unsigned int *)&v202 + v134);
        BOOL v166 = v131 == v167;
        if (v38 | v167)
        {
          if (v129 >= 0x100 && v167 == v130) {
            uint64_t v165 = 255;
          }
          else {
            uint64_t v165 = v121 + v120 * v167;
          }
        }
        else
        {
          uint64_t v165 = 0;
        }
        ++v134;
      }
      uint64_t v190 = v130;
      unint64_t v168 = v165 + v38;
      unint64_t v169 = v168;
      if (a5 == 4)
      {
        unint64_t v169 = 2139095039;
        if ((v168 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v168 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v169 = 4286578687;
          }
          else {
            unint64_t v169 = v168;
          }
        }
      }
      if (v169 >= 0xFF) {
        int v170 = 255;
      }
      else {
        int v170 = v169;
      }
      if (v166) {
        int v171 = 0;
      }
      else {
        int v171 = v170 ^ 0x80;
      }
      if (v6 == 1) {
        int v12 = v171;
      }
      else {
        int v12 = v170;
      }
      int v197 = v12;
      if (v54 == 5)
      {
        uint64_t v172 = v124;
        BOOL v173 = v38 == 128;
      }
      else
      {
        uint64_t v174 = *((unsigned int *)&v202 + v134);
        BOOL v173 = v131 == v174;
        if (v38 | v174)
        {
          if (v129 >= 0x100 && v174 == v190) {
            uint64_t v172 = 255;
          }
          else {
            uint64_t v172 = v121 + v120 * v174;
          }
        }
        else
        {
          uint64_t v172 = 0;
        }
        ++v134;
      }
      unint64_t v175 = v172 + v38;
      unint64_t v176 = v175;
      if (a5 == 4)
      {
        unint64_t v176 = 2139095039;
        if ((v175 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v175 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v176 = 4286578687;
          }
          else {
            unint64_t v176 = v175;
          }
        }
      }
      if (v176 >= 0xFF) {
        int v177 = 255;
      }
      else {
        int v177 = v176;
      }
      if (v173) {
        int v11 = 0;
      }
      else {
        int v11 = v177 ^ 0x80;
      }
      if (v6 != 1) {
        int v11 = v177;
      }
      int v198 = v11;
      if (v54 == 6)
      {
        uint64_t v178 = v124;
        BOOL v179 = v38 == 128;
      }
      else
      {
        uint64_t v180 = *((unsigned int *)&v202 + v134);
        BOOL v179 = v131 == v180;
        if (v38 | v180)
        {
          if (v129 >= 0x100 && v180 == v190) {
            uint64_t v178 = 255;
          }
          else {
            uint64_t v178 = v121 + v120 * v180;
          }
        }
        else
        {
          uint64_t v178 = 0;
        }
        ++v134;
      }
      unint64_t v181 = v178 + v38;
      unint64_t v182 = v181;
      if (a5 == 4)
      {
        unint64_t v182 = 2139095039;
        if ((v181 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          if ((v181 & 0xFFFFFFFFFFC00000) == 0xFF800000) {
            unint64_t v182 = 4286578687;
          }
          else {
            unint64_t v182 = v181;
          }
        }
      }
      if (v182 >= 0xFF) {
        unsigned int v183 = 255;
      }
      else {
        unsigned int v183 = v182;
      }
      if (v179) {
        LODWORD(result) = 0;
      }
      else {
        LODWORD(result) = v183 ^ 0x80;
      }
      if (v6 == 1) {
        unint64_t result = result;
      }
      else {
        unint64_t result = v183;
      }
      if (v54 != 7)
      {
        uint64_t v184 = *((unsigned int *)&v202 + v134);
        BOOL v125 = v131 == v184;
        if (v38 | v184)
        {
          if (v129 >= 0x100 && v184 == v190) {
            uint64_t v124 = 255;
          }
          else {
            uint64_t v124 = v121 + v120 * v184;
          }
        }
        else
        {
          uint64_t v124 = 0;
        }
      }
      unint64_t v185 = v124 + v38;
      unint64_t v14 = v185;
      if (a5 == 4)
      {
        unint64_t v14 = 2139095039;
        if ((v185 & 0xFFFFFFFFFFC00000) != 0x7F800000)
        {
          unint64_t v14 = 4286578687;
          if ((v185 & 0xFFFFFFFFFFC00000) != 0xFF800000) {
            unint64_t v14 = v124 + v38;
          }
        }
      }
      if (v14 >= 0xFF) {
        LOBYTE(v14) = -1;
      }
      char v186 = v14 ^ 0x80;
      if (v125) {
        char v186 = 0;
      }
      if (v6 == 1) {
        LOBYTE(v14) = v186;
      }
LABEL_315:
      a4 = v192;
      a3 = v191;
      goto LABEL_3;
    }
    if (a5 != 4)
    {
      LOBYTE(v14) = v127;
      unint64_t result = v127;
      LOBYTE(v11) = v127;
      LOBYTE(v12) = v127;
      LOBYTE(v9) = v127;
      LOBYTE(v10) = v127;
      LOBYTE(v8) = v127;
      LOBYTE(v7) = v127;
      goto LABEL_315;
    }
    unint64_t result = v14;
    LOBYTE(v11) = v14;
    LOBYTE(v12) = v14;
    LOBYTE(v9) = v14;
    LOBYTE(v10) = v14;
    LOBYTE(v8) = v14;
    LOBYTE(v7) = v14;
    a4 = v192;
    a3 = v191;
    if ((v38 & 0x7FC00000 | 0x80000000) != 0xFF800000)
    {
      LOBYTE(v14) = v127;
      unint64_t result = v127;
      LOBYTE(v11) = v127;
      LOBYTE(v12) = v127;
      LOBYTE(v9) = v127;
      LOBYTE(v10) = v127;
      LOBYTE(v8) = v127;
      LOBYTE(v7) = v127;
    }
LABEL_3:
    int32x4_t v15 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v5;
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int64x2_t v18 = &v201[4 * v16];
    v18[v17] = v7;
    unint64_t v19 = &v201[4 * (v16 + 1)];
    v19[v17] = v8;
    uint64_t v20 = (v17 + 1);
    v18[v20] = v10;
    v19[v20] = v9;
    char v21 = &v201[4 * (v16 + 2)];
    v21[v17] = v12;
    int32x4_t v22 = &v201[4 * (v16 + 3)];
    v22[v17] = v11;
    v21[v20] = result;
    v22[v20] = v14;
    ++v5;
  }
  while (v5 != 4);
  *a1 = v201[0];
  a1[1] = v201[4];
  a1[2] = v201[1];
  a1[3] = v201[5];
  a1[4] = v201[8];
  a1[5] = v201[12];
  a1[6] = v201[9];
  a1[7] = v201[13];
  a1[8] = v201[16];
  a1[9] = v201[20];
  a1[10] = v201[17];
  a1[11] = v201[21];
  a1[12] = v201[24];
  a1[13] = v201[28];
  a1[14] = v201[25];
  a1[15] = v201[29];
  uint64_t v187 = &a1[a2];
  *uint64_t v187 = v201[2];
  v187[1] = v201[6];
  v187[2] = v201[3];
  v187[3] = v201[7];
  v187[4] = v201[10];
  v187[5] = v201[14];
  v187[6] = v201[11];
  v187[7] = v201[15];
  v187[8] = v201[18];
  v187[9] = v201[22];
  v187[10] = v201[19];
  v187[11] = v201[23];
  v187[12] = v201[26];
  v187[13] = v201[30];
  v187[14] = v201[27];
  v187[15] = v201[31];
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7, int8x8_t a8, double a9, int8x8_t a10, double a11, double a12, double a13, int8x8_t a14)
{
  unint64_t v17 = a3;
  if (a5 >= 4) {
    unsigned int v19 = 4;
  }
  else {
    unsigned int v19 = a5;
  }
  if (a6 >= 2) {
    unsigned int v20 = 2;
  }
  else {
    unsigned int v20 = a6;
  }
  if (v19 && v20)
  {
    char v21 = (int8x8_t *)result;
    int v22 = a7;
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int8x8_t *)result, a2, v19, v20, a7, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
  }
  else
  {
    char v21 = (int8x8_t *)result;
    int v22 = a7;
    *a4 = 0;
  }
  uint64_t v42 = 2 * a2;
  uint64_t v23 = a4 + 1;
  if (a6 <= 2) {
    int v24 = 2;
  }
  else {
    int v24 = a6;
  }
  unsigned int v25 = v24 - 2;
  if (v25 >= 2) {
    int v26 = 2;
  }
  else {
    int v26 = v25;
  }
  if (v19 && v26)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v23, (int8x8_t *)((char *)v21 + v42), a2, v19, v26, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
  }
  else
  {
    *uint64_t v23 = 0;
  }
  uint64_t v27 = a4 + 2;
  if (a5 <= 4) {
    int v28 = 4;
  }
  else {
    int v28 = a5;
  }
  unsigned int v29 = v28 - 4;
  if (v29 >= 4) {
    int v30 = 4;
  }
  else {
    int v30 = v29;
  }
  if (v30 && v20)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v27, v21 + 2, a2, v30, v20, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    int v31 = a4 + 3;
  }
  else
  {
    *uint64_t v27 = 0;
    int v31 = a4 + 3;
    if (!v30) {
      goto LABEL_33;
    }
  }
  if (v26)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v31, (int8x8_t *)((char *)v21 + v42 + 16), a2, v30, v26, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int v31 = 0;
LABEL_34:
  int64x2_t v32 = a4 + 4;
  if (a6 <= 4) {
    int v33 = 4;
  }
  else {
    int v33 = a6;
  }
  unsigned int v34 = v33 - 4;
  if (v34 >= 2) {
    int v35 = 2;
  }
  else {
    int v35 = v34;
  }
  if (v19 && v35)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v32, (int8x8_t *)((char *)v21 + 4 * a2), a2, v19, v35, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
  }
  else
  {
    *int64x2_t v32 = 0;
  }
  unint64_t v36 = a4 + 5;
  if (a6 <= 6) {
    int v37 = 6;
  }
  else {
    int v37 = a6;
  }
  unsigned int v38 = v37 - 6;
  if (v38 >= 2) {
    int v39 = 2;
  }
  else {
    int v39 = v38;
  }
  if (v19 && v39)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v36, (int8x8_t *)((char *)v21 + 6 * a2), a2, v19, v39, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    int v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  else
  {
    *unint64_t v36 = 0;
    int v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  if (v35)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v40, (int8x8_t *)((char *)v21 + 4 * a2 + 16), a2, v30, v35, v22, a8, a9, a10, a11, a12, a13, a14);
    v17 += result;
    int v41 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int v40 = 0;
  int v41 = a4 + 7;
  if (!v30)
  {
LABEL_62:
    *int v41 = 0;
    return result;
  }
LABEL_58:
  if (!v39) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)0,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v17, v41, (int8x8_t *)((char *)v21 + 6 * a2 + 16), a2, v30, v39, v22, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int32x4_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7 + 14;
  uint64_t v10 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x33) {
    v10 |= *(void *)(v8 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v11 = 4 * v10;
  uint32x2_t v12 = (uint32x2_t)vdup_n_s32(v11);
  a5.i32[0] = v11;
  a7.i32[0] = a4 >> 6;
  v13.i32[0] = vorr_s8(a5, a7).u32[0];
  v13.i32[1] = vshr_n_u32(v12, 5uLL).i32[1];
  int16x4_t v14 = (int16x4_t)vand_s8(v13, (int8x8_t)0x1F0000001FLL);
  v14.i8[1] = v14.i8[4];
  int16x4_t v15 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v12, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v15.i8[1] = v15.i8[4];
  unint64_t v16 = v7 + 30;
  unint64_t v17 = v9 >> 6;
  unint64_t v18 = v9 & 0x3E;
  uint64_t v19 = *(void *)(v8 + 8 * v17) >> v18;
  if (v18 >= 0x31) {
    v19 |= *(void *)(v8 + 8 * v17 + 8) << -(char)v18;
  }
  unint64_t v20 = (8 * (a3 & 7)) | 0x200;
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(v14, 0);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(v15, 0);
  v23.i64[0] = 0x303030303030303;
  v23.i64[1] = 0x303030303030303;
  int8x16_t v24 = vandq_s8(v21, v23);
  int8x16_t v25 = vbicq_s8(v22, vceqq_s8(v24, v23));
  v23.i64[0] = 0x202020202020202;
  v23.i64[1] = 0x202020202020202;
  int8x16_t v26 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v21.i8), (int8x8_t)0x4000400040004)))), v23);
  if (vmaxvq_s8(v26) < 1)
  {
    int v36 = 0;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    int8x16_t v38 = v25;
    int8x16_t v39 = v25;
    int8x16_t v40 = v25;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = v25;
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v44.i64[0] = -1;
    v44.i64[1] = -1;
  }
  else
  {
    int16x8_t v27 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v26, v26));
    int32x4_t v28 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v27, v27));
    unint64_t v29 = vpaddq_s32(v28, v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    int64x2_t v31 = v30;
    unint64_t v32 = vaddvq_s64(v30);
    unint64_t v33 = v32 + v16;
    if (v32 <= 0x80 && v20 >= v33)
    {
      unint64_t v45 = v16 & 0x3E;
      int64x2_t v46 = vaddq_s64(vzip1q_s64((int64x2_t)0, v31), vdupq_n_s64(v45));
      uint64_t v47 = (int64x2_t *)(v8 + ((v16 >> 3) & 8));
      int32x4_t v35 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v47, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47->i64[0], 0), (uint64x2_t)vnegq_s64(v46)));
      if (v32 + v45 < 0x81)
      {
        int v36 = 0;
      }
      else
      {
        int v36 = 0;
        int32x4_t v35 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v47[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v46))), (int8x16_t)v35);
      }
      unint64_t v16 = v33;
    }
    else
    {
      int32x4_t v35 = 0uLL;
      int v36 = 1;
    }
    int32x2_t v48 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
    v49.i64[0] = v48.u32[0];
    v49.i64[1] = v48.u32[1];
    int32x4_t v50 = (int32x4_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vnegq_s64(v49));
    *(int32x2_t *)v35.i8 = vmovn_s64((int64x2_t)v35);
    *(int32x2_t *)v50.i8 = vmovn_s64((int64x2_t)v50);
    int16x8_t v51 = (int16x8_t)vzip1q_s32(v35, v50);
    int16x8_t v52 = (int16x8_t)vshlq_u32((uint32x4_t)v51, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL)))));
    *(int16x4_t *)v51.i8 = vmovn_s32((int32x4_t)v51);
    *(int16x4_t *)v52.i8 = vmovn_s32((int32x4_t)v52);
    int16x8_t v53 = vzip1q_s16(v51, v52);
    *(int8x8_t *)v53.i8 = vzip1_s8(vmovn_s16(v53), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v53, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v26.i8, *(int8x8_t *)v21.i8))))));
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    int8x16_t v54 = vshlq_s8((int8x16_t)v51, v26);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54.i64[0] = vqtbl1q_s8(vandq_s8((int8x16_t)v53, vaddq_s8(v54, (int8x16_t)v51)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v55 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 1);
    int8x16_t v57 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 2);
    int8x16_t v58 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 3);
    int8x16_t v42 = vsubq_s8(v25, v55);
    int8x16_t v38 = vsubq_s8(v25, v56);
    int8x16_t v39 = vsubq_s8(v25, v57);
    int8x16_t v40 = vsubq_s8(v25, v58);
    int8x16_t v44 = vceqzq_s8(v55);
    int8x16_t v43 = vceqzq_s8(v56);
    int8x16_t v41 = vceqzq_s8(v57);
    int8x16_t v37 = vceqzq_s8(v58);
  }
  v59.i64[0] = 0x808080808080808;
  v59.i64[1] = 0x808080808080808;
  int32x4_t v60 = 0uLL;
  int8x16_t v61 = vandq_s8(vextq_s8(vtstq_s8(v21, v59), (int8x16_t)0, 0xEuLL), v25);
  int16x8_t v62 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v61, v61));
  int32x4_t v63 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v62, v62));
  unint64_t v64 = vpaddq_s32(v63, v63).u64[0];
  v65.i64[0] = v64;
  v65.i64[1] = HIDWORD(v64);
  int64x2_t v66 = v65;
  unint64_t v67 = vaddvq_s64(v65);
  unint64_t v68 = v67 + v16;
  if (v67 <= 0x80 && v20 >= v68)
  {
    unint64_t v70 = v16 & 0x3F;
    int64x2_t v71 = vaddq_s64(vzip1q_s64((int64x2_t)0, v66), vdupq_n_s64(v70));
    uint64_t v72 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v60 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v72, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72->i64[0], 0), (uint64x2_t)vnegq_s64(v71)));
    if (v67 + v70 >= 0x81) {
      int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), (int8x16_t)v60);
    }
    unint64_t v16 = v68;
  }
  else
  {
    int v36 = 1;
  }
  int v73 = v21.i8[0] & 3;
  if (v73 == 2)
  {
    BOOL v74 = v20 >= v16 + 4;
    if (v20 >= v16 + 4) {
      v16 += 4;
    }
    unint64_t v75 = v16 + 4;
    if (!v74 || v20 < v75) {
      int v36 = 1;
    }
    if (v20 >= v75) {
      v16 += 4;
    }
  }
  int32x4_t v77 = 0uLL;
  int8x16_t v78 = vextq_s8((int8x16_t)0, v42, 0xEuLL);
  int16x8_t v79 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v78, v78));
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v79, v79));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v84 + v16;
  if (v84 <= 0x80 && v20 >= v85)
  {
    unint64_t v88 = v16 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v88));
    uint64_t v90 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v87 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v84 + v88 >= 0x81) {
      int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v87);
    }
    unint64_t v16 = v85;
  }
  else
  {
    int v36 = 1;
    int32x4_t v87 = 0uLL;
  }
  int16x8_t v91 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v38, v38));
  int32x4_t v92 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v91, v91));
  unint64_t v93 = vpaddq_s32(v92, v92).u64[0];
  v94.i64[0] = v93;
  v94.i64[1] = HIDWORD(v93);
  int64x2_t v95 = v94;
  unint64_t v96 = vaddvq_s64(v94);
  if (v96 < 0x81)
  {
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v92.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v92, (int8x16_t)v92, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = v98;
    int32x4_t v100 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v91.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL)));
    int16x8_t v101 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)));
    unint64_t v102 = v96 + v16;
    if (v20 >= v96 + v16)
    {
      unint64_t v103 = v16 & 0x3F;
      int64x2_t v104 = vaddq_s64(vzip1q_s64((int64x2_t)0, v95), vdupq_n_s64(v103));
      uint64_t v105 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
      if (v96 + v103 >= 0x81) {
        int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), (int8x16_t)v77);
      }
      unint64_t v16 = v102;
    }
    else
    {
      int v36 = 1;
    }
    int32x4_t v106 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v99));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v106.i8 = vmovn_s64((int64x2_t)v106);
    int16x8_t v107 = (int16x8_t)vzip1q_s32(v77, v106);
    int16x8_t v108 = (int16x8_t)vshlq_u32((uint32x4_t)v107, (uint32x4_t)vnegq_s32(v100));
    *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v107);
    *(int16x4_t *)v108.i8 = vmovn_s32((int32x4_t)v108);
    int16x8_t v109 = vzip1q_s16(v107, v108);
    int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)v109, (uint16x8_t)vnegq_s16(v101));
    *(int8x8_t *)v109.i8 = vmovn_s16(v109);
    *(int8x8_t *)v110.i8 = vmovn_s16(v110);
    int32x4_t v77 = (int32x4_t)vzip1q_s8((int8x16_t)v109, (int8x16_t)v110);
  }
  else
  {
    int v36 = 1;
  }
  int16x8_t v111 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v39, v39));
  int32x4_t v112 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v111, v111));
  unint64_t v113 = vpaddq_s32(v112, v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v116 <= 0x80)
  {
    int32x2_t v118 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v112, (int8x16_t)v112, 8uLL));
    v119.i64[0] = v118.u32[0];
    v119.i64[1] = v118.u32[1];
    int64x2_t v120 = v119;
    int32x4_t v121 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL)));
    int16x8_t v122 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)));
    unint64_t v123 = v116 + v16;
    if (v20 >= v116 + v16)
    {
      unint64_t v125 = v16 & 0x3F;
      int64x2_t v126 = vaddq_s64(vzip1q_s64((int64x2_t)0, v115), vdupq_n_s64(v125));
      unint64_t v127 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v124 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
      if (v116 + v125 >= 0x81) {
        int32x4_t v124 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), (int8x16_t)v124);
      }
      unint64_t v16 = v123;
    }
    else
    {
      int32x4_t v124 = 0uLL;
      int v36 = 1;
    }
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vnegq_s64(v120));
    *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    int16x8_t v129 = (int16x8_t)vzip1q_s32(v124, v128);
    int16x8_t v130 = (int16x8_t)vshlq_u32((uint32x4_t)v129, (uint32x4_t)vnegq_s32(v121));
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    int16x8_t v131 = vzip1q_s16(v129, v130);
    int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)v131, (uint16x8_t)vnegq_s16(v122));
    *(int8x8_t *)v131.i8 = vmovn_s16(v131);
    *(int8x8_t *)v132.i8 = vmovn_s16(v132);
    int8x16_t v117 = vzip1q_s8((int8x16_t)v131, (int8x16_t)v132);
  }
  else
  {
    int v36 = 1;
    int8x16_t v117 = 0uLL;
  }
  int16x8_t v133 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v40, v40));
  int32x4_t v134 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v133, v133));
  unint64_t v135 = vpaddq_s32(v134, v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  if (v138 > 0x80 || v20 < v138 + v16) {
    goto LABEL_65;
  }
  int64x2_t v139 = vaddq_s64(vzip1q_s64((int64x2_t)0, v137), vdupq_n_s64(v16 & 0x3F));
  unint64_t v140 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
  int64x2_t v141 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
  if (v138 + (v16 & 0x3F) >= 0x81) {
    int64x2_t v141 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), (int8x16_t)v141);
  }
  if (v36 || (uint64_t v142 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v142) - (v138 + v16) >= 9))
  {
LABEL_65:
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v209;
LABEL_66:
    *(void *)(v143 & 0xFFFFFFFFFFFFFFF8) |= 255 << ((8 * v143) & 0x30);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    uint64_t v144 = (uint64_t *)((char *)a1->i64 + a2);
    BOOL v145 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *uint64_t v144 = 0;
    v144[1] = 0;
    uint64_t v146 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *BOOL v145 = 0;
    v145[1] = 0;
    *uint64_t v146 = 0;
    v146[1] = 0;
    return v142;
  }
  if (v73 == 2)
  {
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v210;
    goto LABEL_66;
  }
  int32x2_t v148 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL));
  int32x2_t v149 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
  v150.i64[0] = v148.u32[0];
  v150.i64[1] = v148.u32[1];
  int64x2_t v151 = v150;
  v150.i64[0] = v149.u32[0];
  v150.i64[1] = v149.u32[1];
  int16x4_t v152 = (int16x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL).u64[0];
  int32x4_t v153 = (int32x4_t)vshlq_u64((uint64x2_t)v60, (uint64x2_t)vnegq_s64(v151));
  int32x4_t v154 = (int32x4_t)vshlq_u64((uint64x2_t)v87, (uint64x2_t)vnegq_s64(v150));
  *(int32x2_t *)v60.i8 = vmovn_s64((int64x2_t)v60);
  *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
  *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
  *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v154);
  int16x8_t v155 = (int16x8_t)vzip1q_s32(v60, v153);
  int16x8_t v156 = (int16x8_t)vzip1q_s32(v87, v154);
  int16x8_t v157 = (int16x8_t)vshlq_u32((uint32x4_t)v155, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL)))));
  int16x8_t v158 = (int16x8_t)vshlq_u32((uint32x4_t)v156, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, v152))));
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  *(int16x4_t *)v157.i8 = vmovn_s32((int32x4_t)v157);
  *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v156);
  *(int16x4_t *)v158.i8 = vmovn_s32((int32x4_t)v158);
  int16x8_t v159 = vzip1q_s16(v155, v157);
  int16x8_t v160 = vzip1q_s16(v156, v158);
  int16x8_t v161 = (int16x8_t)vshlq_u16((uint16x8_t)v159, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
  int16x8_t v162 = (int16x8_t)vshlq_u16((uint16x8_t)v160, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int8x8_t *)v159.i8 = vmovn_s16(v159);
  *(int8x8_t *)v161.i8 = vmovn_s16(v161);
  *(int8x8_t *)v160.i8 = vmovn_s16(v160);
  *(int8x8_t *)v162.i8 = vmovn_s16(v162);
  v152.i32[0] = v19;
  v163.i64[0] = 0x808080808080808;
  v163.i64[1] = 0x808080808080808;
  int8x16_t v164 = vzip1q_s8((int8x16_t)v159, (int8x16_t)v161);
  v161.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v161.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v165 = vsubq_s8(v59, v61);
  int8x16_t v166 = vzip1q_s8((int8x16_t)v160, (int8x16_t)v162);
  v162.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v162.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v156.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v134, (int8x16_t)v134, 8uLL));
  v167.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v167.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v168.i64[0] = 0x808080808080808;
  v168.i64[1] = 0x808080808080808;
  v152.i8[1] = BYTE1(v19);
  int8x16_t v169 = vaddq_s8(v61, (int8x16_t)v161);
  int32x4_t v170 = (int32x4_t)vshlq_s8(v166, vsubq_s8(v163, v78));
  int8x16_t v171 = vshlq_s8(v117, vsubq_s8(v163, v39));
  v150.i64[0] = v156.u32[0];
  v150.i64[1] = v156.u32[1];
  int16x8_t v172 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v40.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
  int8x16_t v173 = vaddq_s8(v40, v167);
  int8x16_t v174 = vsubq_s8(v168, v40);
  int8x16_t v175 = (int8x16_t)vdupq_lane_s16(v152, 0);
  int8x16_t v176 = vshlq_s8(vshlq_s8(v164, v165), v169);
  int8x16_t v177 = vshlq_s8((int8x16_t)v170, vaddq_s8(v78, (int8x16_t)v162));
  int32x4_t v178 = (int32x4_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vnegq_s64(v150));
  *(int32x2_t *)v170.i8 = vmovn_s64(v141);
  *(int32x2_t *)v178.i8 = vmovn_s64((int64x2_t)v178);
  int16x8_t v179 = (int16x8_t)vzip1q_s32(v170, v178);
  int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v179, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v133, (int8x16_t)v133, 8uLL)))));
  *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v179);
  *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
  int16x8_t v181 = vzip1q_s16(v179, v180);
  int16x8_t v182 = (int16x8_t)vshlq_u16((uint16x8_t)v181, (uint16x8_t)vnegq_s16(v172));
  *(int8x8_t *)v181.i8 = vmovn_s16(v181);
  *(int8x8_t *)v182.i8 = vmovn_s16(v182);
  int8x16_t v183 = vaddq_s8(vandq_s8(v176, v44), v177);
  int8x16_t v184 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v176.i8, 0);
  int8x16_t v185 = vsubq_s8(v183, vandq_s8(v44, v184));
  int8x16_t v186 = vsubq_s8(vshlq_s8(vshlq_s8((int8x16_t)v77, vsubq_s8(v163, v38)), vaddq_s8(v38, (int8x16_t)v162)), vandq_s8(v43, v184));
  int8x16_t v187 = vsubq_s8(vshlq_s8(v171, vaddq_s8(v39, (int8x16_t)v162)), vandq_s8(v41, v184));
  int8x16_t v188 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v181, (int8x16_t)v182), v174), v173), vandq_s8(v37, v184));
  v189.i64[0] = 0x101010101010101;
  v189.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v24, v189)))
  {
    int8x16_t v190 = vandq_s8(v21, v189);
    int8x16_t v191 = v185;
    v191.i16[0] = v185.i16[7];
    v191.i16[7] = v185.i16[0];
    int8x16_t v192 = vnegq_s8(v190);
    int8x16_t v193 = vbslq_s8(v192, v191, v185);
    int8x16_t v194 = vaddq_s8(v193, vandq_s8(vqtbl1q_s8(v193, (int8x16_t)xmmword_242EA7480), v192));
    int8x16_t v185 = vaddq_s8(v194, vandq_s8(vqtbl1q_s8(v194, (int8x16_t)xmmword_242EA7490), v192));
    int8x16_t v195 = vaddq_s8(vandq_s8(vqtbl1q_s8(v186, (int8x16_t)xmmword_242EA74A0), v192), v186);
    int8x16_t v186 = vaddq_s8(vandq_s8(vqtbl1q_s8(v195, (int8x16_t)xmmword_242EA74B0), v192), v195);
    int8x16_t v196 = vaddq_s8(vandq_s8(vqtbl1q_s8(v187, (int8x16_t)xmmword_242EA74C0), v192), v187);
    int8x16_t v187 = vaddq_s8(vandq_s8(vqtbl1q_s8(v196, (int8x16_t)xmmword_242EA74D0), v192), v196);
    int8x16_t v197 = vaddq_s8(vandq_s8(vqtbl1q_s8(v188, (int8x16_t)xmmword_242EA74E0), v192), v188);
    int8x16_t v188 = vaddq_s8(vandq_s8(vqtbl1q_s8(v197, (int8x16_t)xmmword_242EA74F0), v192), v197);
  }
  int8x16_t v198 = vaddq_s8(v185, v175);
  int8x16_t v199 = vaddq_s8(v186, v175);
  int8x16_t v200 = vaddq_s8(v187, v175);
  int8x16_t v201 = vaddq_s8(v188, v175);
  v202.i64[0] = 0x1010101010101010;
  v202.i64[1] = 0x1010101010101010;
  int8x16_t v203 = vceqzq_s8(vandq_s8(v21, v202));
  int32x4_t v204 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v198, (int8x16_t)xmmword_242EA7500), v203), v198);
  int32x4_t v205 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v199, (int8x16_t)xmmword_242EA7500), v203), v199);
  int32x4_t v206 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v200, (int8x16_t)xmmword_242EA7500), v203), v200);
  int32x4_t v207 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v201, (int8x16_t)xmmword_242EA7500), v203), v201);
  *a1 = vuzp1q_s32(v204, v206);
  *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v204, v206);
  int8x16_t v208 = (int32x4_t *)((char *)a1 + 2 * a2);
  *int8x16_t v208 = vuzp1q_s32(v205, v207);
  *(int32x4_t *)((char *)v208 + a2) = vuzp2q_s32(v205, v207);
  return v142;
}

float32x2x2_t *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(float32x2x2_t *result, uint64_t a2, uint64_t a3, char *a4, int a5, int a6)
{
  char v6 = 0;
  uint64_t v7 = 2 * a2;
  if (a5 >= 8) {
    int v8 = 8;
  }
  else {
    int v8 = a5;
  }
  if (a6 >= 4) {
    int v9 = 4;
  }
  else {
    int v9 = a6;
  }
  if (v8 && v9)
  {
    float32x2x2_t v10 = *result;
    int32x4_t v11 = *(int32x4_t *)((char *)result + a2);
    float32x2x2_t v12 = *(float32x2x2_t *)((char *)result + 2 * a2);
    int32x4_t v13 = *(int32x4_t *)((char *)result + v7 + a2);
    int32x4_t v14 = vzip2q_s32(*(int32x4_t *)result, v11);
    int16x4_t v15 = (float *)a3;
    vst2_f32(v15, v10);
    v15 += 4;
    vst2_f32(v15, v12);
    *(int32x4_t *)(a3 + 32) = v14;
    *(int32x4_t *)(a3 + 48) = vzip2q_s32((int32x4_t)v12, v13);
    a3 += 64;
    char v6 = 63;
  }
  char v16 = 0;
  uint64_t v17 = 4 * a2;
  *a4 = v6;
  if (a6 <= 4) {
    int v18 = 4;
  }
  else {
    int v18 = a6;
  }
  unsigned int v19 = v18 - 4;
  if (v19 >= 4) {
    unsigned int v19 = 4;
  }
  if (v8 && v19)
  {
    float32x2x2_t v20 = *(float32x2x2_t *)((char *)result + 4 * a2);
    int32x4_t v21 = *(int32x4_t *)((char *)result + v17 + a2);
    int8x16_t v22 = (int32x4_t *)((char *)result + v17 + v7);
    float32x2x2_t v23 = (float32x2x2_t)*v22;
    int32x4_t v24 = *(int32x4_t *)((char *)v22 + a2);
    int32x4_t v25 = vzip2q_s32(*v22, v24);
    int8x16_t v26 = (float *)a3;
    vst2_f32(v26, v20);
    v26 += 4;
    vst2_f32(v26, v23);
    *(int32x4_t *)(a3 + 32) = vzip2q_s32((int32x4_t)v20, v21);
    *(int32x4_t *)(a3 + 48) = v25;
    a3 += 64;
    char v16 = 63;
  }
  char v27 = 0;
  a4[1] = v16;
  if (a5 <= 8) {
    int v28 = 8;
  }
  else {
    int v28 = a5;
  }
  unsigned int v29 = v28 - 8;
  if (v29 >= 8) {
    int v30 = 8;
  }
  else {
    int v30 = v29;
  }
  if (v30 && v9)
  {
    float32x2x2_t v31 = result[1];
    int32x4_t v32 = *(int32x4_t *)((char *)&result[1] + a2);
    unint64_t v33 = (int32x4_t *)((char *)&result[1] + v7);
    float32x2x2_t v34 = (float32x2x2_t)*v33;
    int32x4_t v35 = *(int32x4_t *)((char *)v33 + a2);
    int32x4_t v36 = vzip2q_s32(*v33, v35);
    int8x16_t v37 = (float *)a3;
    vst2_f32(v37, v31);
    v37 += 4;
    vst2_f32(v37, v34);
    *(int32x4_t *)(a3 + 32) = vzip2q_s32((int32x4_t)v31, v32);
    *(int32x4_t *)(a3 + 48) = v36;
    a3 += 64;
    char v27 = 63;
  }
  char v38 = 0;
  a4[2] = v27;
  if (v30 && v19)
  {
    int8x16_t v39 = (int32x4_t *)((char *)result + v17);
    int32x4_t v40 = v39[1];
    ++v39;
    uint64_t v41 = v40.i64[0];
    int32x4_t v42 = *(int32x4_t *)((char *)v39 + a2);
    int8x16_t v43 = (int32x4_t *)((char *)v39 + v7);
    float32x2x2_t v44 = (float32x2x2_t)*v43;
    int32x4_t v45 = *(int32x4_t *)((char *)v43 + a2);
    int32x4_t v46 = vzip2q_s32(*v43, v45);
    uint64_t v47 = (float *)a3;
    vst2_f32(v47, *(float32x2x2_t *)&v41);
    v47 += 4;
    vst2_f32(v47, v44);
    *(int32x4_t *)(a3 + 32) = vzip2q_s32(v40, v42);
    *(int32x4_t *)(a3 + 48) = v46;
    a3 += 64;
    char v38 = 63;
  }
  char v48 = 0;
  a4[3] = v38;
  if (a6 <= 8) {
    int v49 = 8;
  }
  else {
    int v49 = a6;
  }
  unsigned int v50 = v49 - 8;
  if (v50 >= 4) {
    unsigned int v50 = 4;
  }
  if (v8 && v50)
  {
    int16x8_t v51 = (float32x2x2_t *)((char *)result + 8 * a2);
    float32x2x2_t v52 = *v51;
    int32x4_t v53 = *(int32x4_t *)((char *)v51 + a2);
    int8x16_t v54 = (int32x4_t *)((char *)v51 + v7);
    float32x2x2_t v55 = (float32x2x2_t)*v54;
    int32x4_t v56 = *(int32x4_t *)((char *)v54 + a2);
    int32x4_t v57 = vzip2q_s32(*v54, v56);
    int8x16_t v58 = (float *)a3;
    vst2_f32(v58, v52);
    v58 += 4;
    vst2_f32(v58, v55);
    *(int32x4_t *)(a3 + 32) = vzip2q_s32((int32x4_t)v52, v53);
    *(int32x4_t *)(a3 + 48) = v57;
    a3 += 64;
    char v48 = 63;
  }
  char v59 = 0;
  a4[4] = v48;
  if (a6 <= 12) {
    int v60 = 12;
  }
  else {
    int v60 = a6;
  }
  unsigned int v61 = v60 - 12;
  if (v61 >= 4) {
    int v62 = 4;
  }
  else {
    int v62 = v61;
  }
  if (v8 && v62)
  {
    int32x4_t v63 = (float32x2x2_t *)((char *)result + 12 * a2);
    float32x2x2_t v64 = *v63;
    int32x4_t v65 = *(int32x4_t *)((char *)v63 + a2);
    int64x2_t v66 = (int32x4_t *)((char *)v63 + v7);
    float32x2x2_t v67 = (float32x2x2_t)*v66;
    int32x4_t v68 = *(int32x4_t *)((char *)v66 + a2);
    int32x4_t v69 = vzip2q_s32(*v66, v68);
    unint64_t v70 = (float *)a3;
    vst2_f32(v70, v64);
    v70 += 4;
    vst2_f32(v70, v67);
    *(int32x4_t *)(a3 + 32) = vzip2q_s32((int32x4_t)v64, v65);
    *(int32x4_t *)(a3 + 48) = v69;
    a3 += 64;
    char v59 = 63;
  }
  char v71 = 0;
  a4[5] = v59;
  if (v30 && v50)
  {
    uint64_t v72 = (int32x4_t *)&result->val[a2];
    int32x4_t v73 = v72[1];
    ++v72;
    uint64_t v74 = v73.i64[0];
    int32x4_t v75 = *(int32x4_t *)((char *)v72 + a2);
    unint64_t v76 = (int32x4_t *)((char *)v72 + v7);
    float32x2x2_t v77 = (float32x2x2_t)*v76;
    int32x4_t v78 = *(int32x4_t *)((char *)v76 + a2);
    int32x4_t v79 = vzip2q_s32(*v76, v78);
    int32x4_t v80 = (float *)a3;
    vst2_f32(v80, *(float32x2x2_t *)&v74);
    v80 += 4;
    vst2_f32(v80, v77);
    *(int32x4_t *)(a3 + 32) = vzip2q_s32(v73, v75);
    *(int32x4_t *)(a3 + 48) = v79;
    a3 += 64;
    char v71 = 63;
  }
  char v81 = 0;
  a4[6] = v71;
  if (v30 && v62)
  {
    int64x2_t v82 = (int32x4_t *)((char *)result + 12 * a2);
    int32x4_t v83 = v82[1];
    ++v82;
    uint64_t v84 = v83.i64[0];
    int32x4_t v85 = *(int32x4_t *)((char *)v82 + a2);
    unint64_t v86 = (float32x2x2_t *)&v82->i8[v7];
    float32x2x2_t v87 = *v86;
    int32x4_t v88 = *(int32x4_t *)((char *)v86 + a2);
    int64x2_t v89 = (float *)a3;
    vst2_f32(v89, *(float32x2x2_t *)&v84);
    v89 += 4;
    vst2_f32(v89, v87);
    *(int32x4_t *)(a3 + 32) = vzip2q_s32(v83, v85);
    *(int32x4_t *)(a3 + 48) = vzip2q_s32((int32x4_t)v87, v88);
    char v81 = 63;
  }
  a4[7] = v81;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, __n128 a4, int32x4_t a5, int32x4_t a6)
{
  unsigned int v9 = *a3;
  if (v9 == 63)
  {
    int32x4_t v11 = *(int32x4_t *)a2;
    a5 = *(int32x4_t *)(a2 + 16);
    a6 = *(int32x4_t *)(a2 + 32);
    int32x4_t v12 = *(int32x4_t *)(a2 + 48);
    *(int32x4_t *)a1 = vuzp1q_s32(*(int32x4_t *)a2, a6);
    *(int32x4_t *)(a1 + 32) = vuzp2q_s32(v11, a6);
    *(int32x4_t *)(a1 + 64) = vuzp1q_s32(a5, v12);
    a4 = (__n128)vuzp2q_s32(a5, v12);
    *(__n128 *)(a1 + 96) = a4;
    uint64_t v10 = 64;
  }
  else if (v9 == 1)
  {
    a4 = (__n128)vld1q_dup_s16((const __int16 *)a2);
    *(__n128 *)a1 = a4;
    *(__n128 *)(a1 + 32) = a4;
    *(__n128 *)(a1 + 64) = a4;
    *(__n128 *)(a1 + 96) = a4;
    uint64_t v10 = 2;
  }
  else if (*a3)
  {
    uint64_t v10 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)a1, 32, a2, v9, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
  }
  else
  {
    uint64_t v10 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
  }
  uint64_t v13 = a2 + v10;
  unsigned int v14 = a3[1];
  if (a3[1])
  {
    if (v14 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v13);
      *(__n128 *)(a1 + 128) = a4;
      *(__n128 *)(a1 + 160) = a4;
      *(__n128 *)(a1 + 192) = a4;
      *(__n128 *)(a1 + 224) = a4;
      uint64_t v17 = 2;
    }
    else if (v14 == 63)
    {
      int32x4_t v15 = *(int32x4_t *)v13;
      a5 = *(int32x4_t *)(v13 + 16);
      a6 = *(int32x4_t *)(v13 + 32);
      int32x4_t v16 = *(int32x4_t *)(v13 + 48);
      *(int32x4_t *)(a1 + 128) = vuzp1q_s32(*(int32x4_t *)v13, a6);
      *(int32x4_t *)(a1 + 160) = vuzp2q_s32(v15, a6);
      *(int32x4_t *)(a1 + 192) = vuzp1q_s32(a5, v16);
      a4 = (__n128)vuzp2q_s32(a5, v16);
      *(__n128 *)(a1 + 224) = a4;
      uint64_t v17 = 64;
    }
    else
    {
      uint64_t v17 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 128), 32, v13, v14, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
    }
  }
  else
  {
    uint64_t v17 = 0;
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 192) = 0;
    *(void *)(a1 + 200) = 0;
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
  }
  uint64_t v18 = v13 + v17;
  unsigned int v19 = a3[2];
  if (a3[2])
  {
    if (v19 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v18);
      *(__n128 *)(a1 + 16) = a4;
      *(__n128 *)(a1 + 48) = a4;
      *(__n128 *)(a1 + 80) = a4;
      *(__n128 *)(a1 + 112) = a4;
      uint64_t v22 = 2;
    }
    else if (v19 == 63)
    {
      int32x4_t v20 = *(int32x4_t *)v18;
      a5 = *(int32x4_t *)(v18 + 16);
      a6 = *(int32x4_t *)(v18 + 32);
      int32x4_t v21 = *(int32x4_t *)(v18 + 48);
      *(int32x4_t *)(a1 + 16) = vuzp1q_s32(*(int32x4_t *)v18, a6);
      *(int32x4_t *)(a1 + 48) = vuzp2q_s32(v20, a6);
      *(int32x4_t *)(a1 + 80) = vuzp1q_s32(a5, v21);
      a4 = (__n128)vuzp2q_s32(a5, v21);
      *(__n128 *)(a1 + 112) = a4;
      uint64_t v22 = 64;
    }
    else
    {
      uint64_t v22 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 16), 32, v18, v19, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
    }
  }
  else
  {
    uint64_t v22 = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
  }
  uint64_t v23 = v18 + v22;
  unsigned int v24 = a3[3];
  if (a3[3])
  {
    if (v24 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v23);
      *(__n128 *)(a1 + 144) = a4;
      *(__n128 *)(a1 + 176) = a4;
      *(__n128 *)(a1 + 208) = a4;
      *(__n128 *)(a1 + 240) = a4;
      uint64_t v27 = 2;
    }
    else if (v24 == 63)
    {
      int32x4_t v25 = *(int32x4_t *)v23;
      a5 = *(int32x4_t *)(v23 + 16);
      a6 = *(int32x4_t *)(v23 + 32);
      int32x4_t v26 = *(int32x4_t *)(v23 + 48);
      *(int32x4_t *)(a1 + 144) = vuzp1q_s32(*(int32x4_t *)v23, a6);
      *(int32x4_t *)(a1 + 176) = vuzp2q_s32(v25, a6);
      *(int32x4_t *)(a1 + 208) = vuzp1q_s32(a5, v26);
      a4 = (__n128)vuzp2q_s32(a5, v26);
      *(__n128 *)(a1 + 240) = a4;
      uint64_t v27 = 64;
    }
    else
    {
      uint64_t v27 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 144), 32, v23, v24, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
    }
  }
  else
  {
    uint64_t v27 = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
    *(void *)(a1 + 240) = 0;
    *(void *)(a1 + 248) = 0;
  }
  uint64_t v28 = v23 + v27;
  unsigned int v29 = a3[4];
  if (a3[4])
  {
    if (v29 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v28);
      *(__n128 *)(a1 + 256) = a4;
      *(__n128 *)(a1 + 288) = a4;
      *(__n128 *)(a1 + 320) = a4;
      *(__n128 *)(a1 + 352) = a4;
      uint64_t v32 = 2;
    }
    else if (v29 == 63)
    {
      int32x4_t v30 = *(int32x4_t *)v28;
      a5 = *(int32x4_t *)(v28 + 16);
      a6 = *(int32x4_t *)(v28 + 32);
      int32x4_t v31 = *(int32x4_t *)(v28 + 48);
      *(int32x4_t *)(a1 + 256) = vuzp1q_s32(*(int32x4_t *)v28, a6);
      *(int32x4_t *)(a1 + 288) = vuzp2q_s32(v30, a6);
      *(int32x4_t *)(a1 + 320) = vuzp1q_s32(a5, v31);
      a4 = (__n128)vuzp2q_s32(a5, v31);
      *(__n128 *)(a1 + 352) = a4;
      uint64_t v32 = 64;
    }
    else
    {
      uint64_t v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 256), 32, v28, v29, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
    }
  }
  else
  {
    uint64_t v32 = 0;
    *(void *)(a1 + 256) = 0;
    *(void *)(a1 + 264) = 0;
    *(void *)(a1 + 288) = 0;
    *(void *)(a1 + 296) = 0;
    *(void *)(a1 + 320) = 0;
    *(void *)(a1 + 328) = 0;
    *(void *)(a1 + 352) = 0;
    *(void *)(a1 + 360) = 0;
  }
  uint64_t v33 = v28 + v32;
  unsigned int v34 = a3[5];
  if (a3[5])
  {
    if (v34 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v33);
      *(__n128 *)(a1 + 384) = a4;
      *(__n128 *)(a1 + 416) = a4;
      *(__n128 *)(a1 + 448) = a4;
      *(__n128 *)(a1 + 480) = a4;
      uint64_t v37 = 2;
    }
    else if (v34 == 63)
    {
      int32x4_t v35 = *(int32x4_t *)v33;
      a5 = *(int32x4_t *)(v33 + 16);
      a6 = *(int32x4_t *)(v33 + 32);
      int32x4_t v36 = *(int32x4_t *)(v33 + 48);
      *(int32x4_t *)(a1 + 384) = vuzp1q_s32(*(int32x4_t *)v33, a6);
      *(int32x4_t *)(a1 + 416) = vuzp2q_s32(v35, a6);
      *(int32x4_t *)(a1 + 448) = vuzp1q_s32(a5, v36);
      a4 = (__n128)vuzp2q_s32(a5, v36);
      *(__n128 *)(a1 + 480) = a4;
      uint64_t v37 = 64;
    }
    else
    {
      uint64_t v37 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 384), 32, v33, v34, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
    }
  }
  else
  {
    uint64_t v37 = 0;
    *(void *)(a1 + 384) = 0;
    *(void *)(a1 + 392) = 0;
    *(void *)(a1 + 416) = 0;
    *(void *)(a1 + 424) = 0;
    *(void *)(a1 + 448) = 0;
    *(void *)(a1 + 456) = 0;
    *(void *)(a1 + 480) = 0;
    *(void *)(a1 + 488) = 0;
  }
  uint64_t v38 = v33 + v37;
  unsigned int v39 = a3[6];
  if (a3[6])
  {
    if (v39 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v38);
      *(__n128 *)(a1 + 272) = a4;
      *(__n128 *)(a1 + 304) = a4;
      *(__n128 *)(a1 + 336) = a4;
      *(__n128 *)(a1 + 368) = a4;
      uint64_t result = 2;
    }
    else if (v39 == 63)
    {
      int32x4_t v40 = *(int32x4_t *)v38;
      a5 = *(int32x4_t *)(v38 + 16);
      a6 = *(int32x4_t *)(v38 + 32);
      int32x4_t v41 = *(int32x4_t *)(v38 + 48);
      *(int32x4_t *)(a1 + 272) = vuzp1q_s32(*(int32x4_t *)v38, a6);
      *(int32x4_t *)(a1 + 304) = vuzp2q_s32(v40, a6);
      *(int32x4_t *)(a1 + 336) = vuzp1q_s32(a5, v41);
      a4 = (__n128)vuzp2q_s32(a5, v41);
      *(__n128 *)(a1 + 368) = a4;
      uint64_t result = 64;
    }
    else
    {
      uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 272), 32, v38, v39, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
    }
  }
  else
  {
    uint64_t result = 0;
    *(void *)(a1 + 272) = 0;
    *(void *)(a1 + 280) = 0;
    *(void *)(a1 + 304) = 0;
    *(void *)(a1 + 312) = 0;
    *(void *)(a1 + 336) = 0;
    *(void *)(a1 + 344) = 0;
    *(void *)(a1 + 368) = 0;
    *(void *)(a1 + 376) = 0;
  }
  unsigned int v43 = a3[7];
  if (!a3[7])
  {
    *(void *)(a1 + 400) = 0;
    *(void *)(a1 + 408) = 0;
    *(void *)(a1 + 432) = 0;
    *(void *)(a1 + 440) = 0;
    *(void *)(a1 + 464) = 0;
    *(void *)(a1 + 472) = 0;
    *(void *)(a1 + 496) = 0;
    *(void *)(a1 + 504) = 0;
    return result;
  }
  uint64_t v44 = v38 + result;
  if (v43 == 1)
  {
    int16x8_t v49 = vld1q_dup_s16((const __int16 *)v44);
    *(int16x8_t *)(a1 + 400) = v49;
    *(int16x8_t *)(a1 + 432) = v49;
    *(int16x8_t *)(a1 + 464) = v49;
    goto LABEL_56;
  }
  if (v43 == 63)
  {
    int32x4_t v45 = *(int32x4_t *)v44;
    int32x4_t v46 = *(int32x4_t *)(v44 + 16);
    int32x4_t v47 = *(int32x4_t *)(v44 + 32);
    int32x4_t v48 = *(int32x4_t *)(v44 + 48);
    *(int32x4_t *)(a1 + 400) = vuzp1q_s32(*(int32x4_t *)v44, v47);
    *(int32x4_t *)(a1 + 432) = vuzp2q_s32(v45, v47);
    *(int32x4_t *)(a1 + 464) = vuzp1q_s32(v46, v48);
    int16x8_t v49 = (int16x8_t)vuzp2q_s32(v46, v48);
LABEL_56:
    *(int16x8_t *)(a1 + 496) = v49;
    return result;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 400), 32, v44, v43, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, *(int8x8_t *)a6.i8);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int8x16_t *a1, char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  BOOL v7 = a5 < 4 || a6 < 2;
  int32x4_t v8 = *(int32x4_t *)((char *)a3 + a4);
  int8x16_t v9 = (int8x16_t)vzip1q_s32(*a3, v8);
  int8x16_t v10 = (int8x16_t)vzip2q_s32(*a3, v8);
  int32x4_t v11 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v12 = *(int32x4_t *)((char *)v11 + a4);
  int8x16_t v13 = (int8x16_t)vzip1q_s32(*v11, v12);
  int8x16_t v14 = (int8x16_t)vzip2q_s32(*v11, v12);
  int8x16_t v15 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v9.i8, 0);
  int8x16_t v416 = v9;
  int8x16_t v16 = vsubq_s8(v9, v15);
  int8x16_t v17 = vsubq_s8(v13, v15);
  int8x16_t v18 = vsubq_s8(v10, v15);
  int8x16_t v19 = vsubq_s8(v14, v15);
  int8x16_t v20 = vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7510);
  int8x16_t v21 = vpmaxq_s8(v20, v20);
  int8x16_t v22 = vpminq_s8(v20, v20);
  int8x16_t v23 = vpmaxq_s8(v21, v21);
  int8x16_t v24 = vpminq_s8(v22, v22);
  int8x16_t v25 = vpmaxq_s8(v23, v23);
  int8x16_t v26 = vpminq_s8(v24, v24);
  v27.i64[0] = 0x8080808080808080;
  v27.i64[1] = 0x8080808080808080;
  int8x16_t v28 = vmaxq_s8(v25, v27);
  v29.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v29.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v30 = vminq_s8(v26, v29);
  int8x16_t v31 = vzip1q_s8(v25, v26);
  v32.i64[0] = 0x808080808080808;
  v32.i64[1] = 0x808080808080808;
  int8x16_t v33 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v31)), vceqzq_s8(v31));
  int8x16_t v34 = vpmaxq_s8(v33, v33);
  int8x16_t v35 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v36 = vpmaxq_s8(v35, v35);
  int8x16_t v37 = vpminq_s8(v35, v35);
  int8x16_t v38 = vpmaxq_s8(v36, v36);
  int8x16_t v39 = vpminq_s8(v37, v37);
  int8x16_t v40 = vpmaxq_s8(v38, v38);
  int8x16_t v41 = vpminq_s8(v39, v39);
  int8x16_t v42 = vmaxq_s8(v28, v40);
  int8x16_t v43 = vminq_s8(v30, v41);
  int8x16_t v44 = vzip1q_s8(v40, v41);
  int8x16_t v45 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v44)), vceqzq_s8(v44));
  int8x16_t v46 = vpmaxq_s8(v45, v45);
  int8x16_t v47 = vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7510);
  int8x16_t v48 = vpmaxq_s8(v47, v47);
  int8x16_t v49 = vpminq_s8(v47, v47);
  int8x16_t v50 = vpmaxq_s8(v48, v48);
  int8x16_t v51 = vpminq_s8(v49, v49);
  int8x16_t v52 = vpmaxq_s8(v50, v50);
  int8x16_t v53 = vpminq_s8(v51, v51);
  int8x16_t v54 = vmaxq_s8(v42, v52);
  int8x16_t v55 = vminq_s8(v43, v53);
  int8x16_t v56 = vzip1q_s8(v52, v53);
  int8x16_t v57 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v56)), vceqzq_s8(v56));
  int8x16_t v58 = vpmaxq_s8(v57, v57);
  int8x16_t v59 = vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7510);
  int8x16_t v60 = vpmaxq_s8(v59, v59);
  int8x16_t v61 = vpminq_s8(v59, v59);
  int8x16_t v62 = vpmaxq_s8(v60, v60);
  int8x16_t v63 = vpminq_s8(v61, v61);
  int8x16_t v64 = vpmaxq_s8(v62, v62);
  int8x16_t v65 = vpminq_s8(v63, v63);
  int8x16_t v66 = vmaxq_s8(v54, v64);
  int8x16_t v67 = vminq_s8(v55, v65);
  int8x16_t v68 = vzip1q_s8(v64, v65);
  int8x16_t v69 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v68)), vceqzq_s8(v68));
  int8x16_t v70 = vpmaxq_s8(v69, v69);
  int8x16_t v71 = vmaxq_s8(vmaxq_s8(v34, v46), vmaxq_s8(v58, v70));
  int8x16_t v72 = vclzq_s8(vsubq_s8(v66, v67));
  int8x16_t v73 = vsubq_s8(v32, v72);
  int8x16_t v74 = vcgtq_s8(v71, v73);
  int8x16_t v75 = vbslq_s8(v74, v73, v71);
  if (!vmaxvq_s8(v75))
  {
    a1->i16[0] = a3->i16[0];
    char v168 = 1;
    unint64_t v169 = 2;
    goto LABEL_69;
  }
  int8x16_t v413 = v13;
  int8x16_t v414 = v14;
  int8x16_t v415 = v10;
  v76.i64[0] = -1;
  v76.i64[1] = -1;
  v77.i64[0] = 0x707070707070707;
  v77.i64[1] = 0x707070707070707;
  int8x16_t v417 = vandq_s8(vsubq_s8(vshlq_s8(v76, vsubq_s8(v77, v72)), v67), v74);
  v78.i64[0] = 0x303030303030303;
  v78.i64[1] = 0x303030303030303;
  int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v34), v78), (int8x16_t)0);
  int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v46), v78), (int8x16_t)0);
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v58), v78), (int8x16_t)0);
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v70), v78), (int8x16_t)0);
  v83.i64[0] = 0x404040404040404;
  v83.i64[1] = 0x404040404040404;
  int8x16_t v84 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)))), vorrq_s8(vandq_s8(vceqzq_s8(v75), v78), vandq_s8(v74, v32)));
  int8x16_t v85 = vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500));
  int8x16_t v86 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
  int8x16_t v87 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7500));
  int8x16_t v88 = vsubq_s8(v19, vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7500));
  int8x16_t v89 = vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7510);
  int8x16_t v90 = vpmaxq_s8(v89, v89);
  int8x16_t v91 = vpminq_s8(v89, v89);
  int8x16_t v92 = vpmaxq_s8(v90, v90);
  int8x16_t v93 = vpminq_s8(v91, v91);
  int8x16_t v94 = vpmaxq_s8(v92, v92);
  int8x16_t v95 = vpminq_s8(v93, v93);
  int8x16_t v96 = vmaxq_s8(v94, v27);
  int8x16_t v97 = vminq_s8(v95, v29);
  int8x16_t v98 = vzip1q_s8(v94, v95);
  int8x16_t v99 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v98)), vceqzq_s8(v98));
  int8x16_t v100 = vpmaxq_s8(v99, v99);
  int8x16_t v101 = vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7510);
  int8x16_t v102 = v19;
  int8x16_t v103 = v17;
  int8x16_t v104 = vpmaxq_s8(v101, v101);
  int8x16_t v105 = vpminq_s8(v101, v101);
  int8x16_t v106 = vpmaxq_s8(v104, v104);
  int8x16_t v107 = vpminq_s8(v105, v105);
  int8x16_t v108 = vpmaxq_s8(v106, v106);
  int8x16_t v109 = vpminq_s8(v107, v107);
  int8x16_t v110 = vmaxq_s8(v96, v108);
  int8x16_t v111 = vminq_s8(v97, v109);
  int8x16_t v112 = vzip1q_s8(v108, v109);
  int8x16_t v113 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v112)), vceqzq_s8(v112));
  int8x16_t v114 = vpmaxq_s8(v113, v113);
  int8x16_t v115 = vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7510);
  int8x16_t v116 = vpmaxq_s8(v115, v115);
  int8x16_t v117 = vpminq_s8(v115, v115);
  int8x16_t v118 = vpmaxq_s8(v116, v116);
  int8x16_t v119 = vpminq_s8(v117, v117);
  int8x16_t v120 = vpmaxq_s8(v118, v118);
  int8x16_t v121 = vpminq_s8(v119, v119);
  int8x16_t v122 = vmaxq_s8(v110, v120);
  int8x16_t v123 = vminq_s8(v111, v121);
  int8x16_t v124 = vzip1q_s8(v120, v121);
  int8x16_t v125 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v124)), vceqzq_s8(v124));
  int8x16_t v126 = vpmaxq_s8(v125, v125);
  int8x16_t v127 = vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7510);
  int8x16_t v128 = vpmaxq_s8(v127, v127);
  int8x16_t v129 = vpminq_s8(v127, v127);
  int8x16_t v130 = vpmaxq_s8(v128, v128);
  int8x16_t v131 = vpminq_s8(v129, v129);
  int8x16_t v132 = vpmaxq_s8(v130, v130);
  int8x16_t v133 = vpminq_s8(v131, v131);
  int8x16_t v134 = vmaxq_s8(v122, v132);
  int8x16_t v135 = vminq_s8(v123, v133);
  int8x16_t v136 = vzip1q_s8(v132, v133);
  int8x16_t v137 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v136)), vceqzq_s8(v136));
  int8x16_t v138 = vpmaxq_s8(v137, v137);
  int8x16_t v139 = vmaxq_s8(vmaxq_s8(v100, v114), vmaxq_s8(v126, v138));
  int8x16_t v140 = vclzq_s8(vsubq_s8(v134, v135));
  int8x16_t v141 = vsubq_s8(v32, v140);
  int8x16_t v142 = vcgtq_s8(v139, v141);
  int8x16_t v143 = vbslq_s8(v142, v141, v139);
  v141.i64[0] = 0x1010101010101010;
  v141.i64[1] = 0x1010101010101010;
  v144.i64[0] = 0x1818181818181818;
  v144.i64[1] = 0x1818181818181818;
  int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v143), v78), vbslq_s8(v142, v144, v141));
  int16x8_t v146 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v143, v100), v78), (int8x16_t)0);
  int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v114), v78), (int8x16_t)0);
  int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v126), v78), (int8x16_t)0);
  int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v138), v78), (int8x16_t)0);
  int8x16_t v150 = vsubq_s8(v143, (int8x16_t)v146);
  int8x16_t v151 = vsubq_s8(v143, v147);
  int8x16_t v152 = vsubq_s8(v143, v148);
  int8x16_t v153 = vsubq_s8(v143, v149);
  int8x16_t v154 = vorrq_s8(v145, vbicq_s8(v83, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8((int8x16_t)v146, v147)))));
  uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
  v147.i64[0] = 0x8000800080008;
  v147.i64[1] = 0x8000800080008;
  v146.i64[0] = 0x2000200020002;
  v146.i64[1] = 0x2000200020002;
  int16x8_t v156 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v147)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v143.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v146), v147));
  int8x16_t v157 = (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v146);
  int8x16_t v158 = vsubq_s8(v75, v79);
  int8x16_t v159 = vsubq_s8(v75, v80);
  int8x16_t v160 = vsubq_s8(v75, v81);
  int8x16_t v161 = vsubq_s8(v75, v82);
  int8x16_t v162 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v75.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v84.i8))),
                                                              (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v84.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8(v157, v147)), v156)), 0);
  if (vaddlvq_s8(v162))
  {
    v163.i64[0] = 0x707070707070707;
    v163.i64[1] = 0x707070707070707;
    v164.i64[0] = -1;
    v164.i64[1] = -1;
    int8x16_t v15 = vbslq_s8(v162, vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7500)), v15);
    int8x16_t v165 = vbslq_s8(v162, v85, v16);
    int8x16_t v103 = vbslq_s8(v162, v86, v103);
    int8x16_t v18 = vbslq_s8(v162, v87, v18);
    int8x16_t v102 = vbslq_s8(v162, v88, v102);
    int8x16_t v158 = vbslq_s8(v162, v150, v158);
    int8x16_t v159 = vbslq_s8(v162, v151, v159);
    int8x16_t v160 = vbslq_s8(v162, v152, v160);
    int8x16_t v161 = vbslq_s8(v162, v153, v161);
    int8x16_t v166 = vbslq_s8(v162, vandq_s8(vsubq_s8(vshlq_s8(v164, vsubq_s8(v163, v140)), v135), v142), v417);
    int8x16_t v75 = vbslq_s8(v162, v143, v75);
    int8x16_t v84 = vbslq_s8(v162, v154, v84);
    int8x16_t v167 = v416;
    if (v7) {
      goto LABEL_16;
    }
  }
  else
  {
    int8x16_t v166 = v417;
    int8x16_t v165 = v16;
    int8x16_t v167 = v416;
    if (v7) {
      goto LABEL_16;
    }
  }
  int8x16_t v170 = v103;
  int8x16_t v418 = v166;
  int8x16_t v171 = v102;
  int8x16_t v172 = v413;
  v172.i16[7] = v167.i16[7];
  int8x16_t v173 = vsubq_s8(v167, vqtbl1q_s8(v167, (int8x16_t)xmmword_242EA7520));
  int8x16_t v174 = vsubq_s8(v413, vqtbl1q_s8(v172, (int8x16_t)xmmword_242EA7530));
  int8x16_t v175 = v415;
  v175.i16[7] = v167.i16[7];
  int8x16_t v176 = vsubq_s8(v415, vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7540));
  int8x16_t v177 = v414;
  v177.i16[7] = v167.i16[7];
  int8x16_t v178 = vsubq_s8(v414, vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7550));
  int8x16_t v179 = v173;
  v179.i16[0] = v173.i16[7];
  v179.i16[7] = v173.i16[0];
  int8x16_t v180 = vqtbl1q_s8(v179, (int8x16_t)xmmword_242EA7510);
  int8x16_t v181 = vpmaxq_s8(v180, v180);
  int8x16_t v182 = vpminq_s8(v180, v180);
  int8x16_t v183 = vpmaxq_s8(v181, v181);
  int8x16_t v184 = vpminq_s8(v182, v182);
  int8x16_t v185 = vpmaxq_s8(v183, v183);
  int8x16_t v186 = vpminq_s8(v184, v184);
  v187.i64[0] = 0x8080808080808080;
  v187.i64[1] = 0x8080808080808080;
  int8x16_t v188 = vmaxq_s8(v185, v187);
  v187.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v187.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v189 = vminq_s8(v186, v187);
  int8x16_t v190 = vzip1q_s8(v185, v186);
  v191.i64[0] = 0x808080808080808;
  v191.i64[1] = 0x808080808080808;
  int8x16_t v192 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v190)), vceqzq_s8(v190));
  int8x16_t v193 = vpmaxq_s8(v192, v192);
  int8x16_t v194 = vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7510);
  int8x16_t v195 = vpmaxq_s8(v194, v194);
  int8x16_t v196 = vpminq_s8(v194, v194);
  int8x16_t v197 = vpmaxq_s8(v195, v195);
  int8x16_t v198 = vpminq_s8(v196, v196);
  int8x16_t v199 = vpmaxq_s8(v197, v197);
  int8x16_t v200 = vpminq_s8(v198, v198);
  int8x16_t v201 = vmaxq_s8(v188, v199);
  int8x16_t v202 = vminq_s8(v189, v200);
  int8x16_t v203 = vzip1q_s8(v199, v200);
  int8x16_t v204 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v203)), vceqzq_s8(v203));
  int8x16_t v205 = vpmaxq_s8(v204, v204);
  int8x16_t v206 = vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7510);
  int8x16_t v207 = vpmaxq_s8(v206, v206);
  int8x16_t v208 = vpminq_s8(v206, v206);
  int8x16_t v209 = vpmaxq_s8(v207, v207);
  int8x16_t v210 = vpminq_s8(v208, v208);
  int8x16_t v211 = vpmaxq_s8(v209, v209);
  int8x16_t v212 = vpminq_s8(v210, v210);
  int8x16_t v213 = vmaxq_s8(v201, v211);
  int8x16_t v214 = vminq_s8(v202, v212);
  int8x16_t v215 = vzip1q_s8(v211, v212);
  int8x16_t v216 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v215)), vceqzq_s8(v215));
  int8x16_t v217 = vpmaxq_s8(v216, v216);
  int8x16_t v218 = vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7510);
  int8x16_t v219 = vpmaxq_s8(v218, v218);
  int8x16_t v220 = vpminq_s8(v218, v218);
  int8x16_t v221 = vpmaxq_s8(v219, v219);
  int8x16_t v222 = vpminq_s8(v220, v220);
  int8x16_t v223 = vpmaxq_s8(v221, v221);
  int8x16_t v224 = vpminq_s8(v222, v222);
  int8x16_t v225 = vminq_s8(v214, v224);
  int8x16_t v226 = vzip1q_s8(v223, v224);
  int8x16_t v227 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v226)), vceqzq_s8(v226));
  int8x16_t v228 = vpmaxq_s8(v227, v227);
  int8x16_t v229 = vmaxq_s8(vmaxq_s8(v193, v205), vmaxq_s8(v217, v228));
  int8x16_t v230 = vclzq_s8(vsubq_s8(vmaxq_s8(v213, v223), v225));
  int8x16_t v231 = vsubq_s8(v191, v230);
  int8x16_t v232 = vcgtq_s8(v229, v231);
  int8x16_t v233 = vbslq_s8(v232, v231, v229);
  v231.i64[0] = 0x909090909090909;
  v231.i64[1] = 0x909090909090909;
  v234.i64[0] = 0x202020202020202;
  v234.i64[1] = 0x202020202020202;
  int8x16_t v235 = vorrq_s8(vandq_s8(vceqzq_s8(v233), v234), vsubq_s8(vandq_s8(v232, v231), vmvnq_s8(v232)));
  v229.i64[0] = 0x303030303030303;
  v229.i64[1] = 0x303030303030303;
  int8x16_t v236 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v193), v229), (int8x16_t)0);
  int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v205), v229), (int8x16_t)0);
  int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v217), v229), (int8x16_t)0);
  int8x16_t v239 = vmaxq_s8(vminq_s8(vsubq_s8(v233, v228), v229), (int8x16_t)0);
  int8x16_t v240 = vsubq_s8(v233, v236);
  int8x16_t v241 = vsubq_s8(v233, v237);
  int8x16_t v242 = vsubq_s8(v233, v238);
  int8x16_t v243 = vsubq_s8(v233, v239);
  int8x16_t v244 = vceqq_s8(vaddq_s8(v239, v238), vnegq_s8(vaddq_s8(v236, v237)));
  v237.i64[0] = 0x404040404040404;
  v237.i64[1] = 0x404040404040404;
  int8x16_t v245 = vorrq_s8(v235, vbicq_s8(v237, v244));
  v246.i64[0] = 0x3000300030003;
  v246.i64[1] = 0x3000300030003;
  int8x16_t v247 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v239.i64[0] = 0x8000800080008;
  v239.i64[1] = 0x8000800080008;
  int16x8_t v248 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v75.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v247, v239)));
  int16x8_t v249 = (int16x8_t)vandq_s8(v247, v246);
  v246.i64[0] = 0x2000200020002;
  v246.i64[1] = 0x2000200020002;
  int8x16_t v250 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v248, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v239)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v249, (int16x8_t)v246), v239)), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8),
                                                                *(int8x8_t *)v161.i8),
                                                              3uLL)),
                                                          vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v242.i8, *(int8x8_t *)v241.i8), *(int8x8_t *)v243.i8), 3uLL), *(int8x8_t *)v240.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v245.i8, *(int8x8_t *)v245.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v233.i8, (int8x8_t)vcgt_u8(
                                                                          (uint8x8_t)0x808080808080808,
                                                                          *(uint8x8_t *)v245.i8))))),
                      0);
  if (vaddlvq_s8(v250))
  {
    v251.i64[0] = 0x707070707070707;
    v251.i64[1] = 0x707070707070707;
    v252.i64[0] = -1;
    v252.i64[1] = -1;
    v15.i16[0] = vbslq_s8(v250, vextq_s8(v167, v167, 0xEuLL), v15).u16[0];
    int8x16_t v165 = vbslq_s8(v250, v179, v165);
    int8x16_t v103 = vbslq_s8(v250, v174, v170);
    int8x16_t v18 = vbslq_s8(v250, v176, v18);
    int8x16_t v102 = vbslq_s8(v250, v178, v171);
    int8x16_t v158 = vbslq_s8(v250, v240, v158);
    int8x16_t v159 = vbslq_s8(v250, v241, v159);
    int8x16_t v160 = vbslq_s8(v250, v242, v160);
    int8x16_t v161 = vbslq_s8(v250, v243, v161);
    int8x16_t v166 = vbslq_s8(v250, vandq_s8(vsubq_s8(vshlq_s8(v252, vsubq_s8(v251, v230)), v225), v232), v418);
    int8x16_t v75 = vbslq_s8(v250, v233, v75);
    int8x16_t v84 = vbslq_s8(v250, v245, v84);
  }
  else
  {
    int8x16_t v102 = v171;
    int8x16_t v166 = v418;
    int8x16_t v103 = v170;
  }
LABEL_16:
  int8x16_t v253 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
  v254.i64[0] = 0x8000800080008;
  v254.i64[1] = 0x8000800080008;
  int16x8_t v255 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v75.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v253, v254)));
  v256.i64[0] = 0x3000300030003;
  v256.i64[1] = 0x3000300030003;
  int16x8_t v257 = (int16x8_t)vandq_s8(v253, v256);
  v256.i64[0] = 0x2000200020002;
  v256.i64[1] = 0x2000200020002;
  int16x8_t v258 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v254)), v255), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v257, (int16x8_t)v256), v254));
  if ((unint64_t)(vpaddq_s16(v258, v258).i16[0] + 37) >= 0x200)
  {
    *a1 = v167;
    a1[1] = v413;
    char v168 = 63;
    unint64_t v169 = 64;
    a1[2] = v415;
    a1[3] = v414;
  }
  else
  {
    int16x8_t v259 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v260 = 8 * (a1 & 7);
    if (v260) {
      uint64_t v261 = *v259 & ~(-1 << v260);
    }
    else {
      uint64_t v261 = 0;
    }
    unint64_t v262 = (unint64_t)((v75.i8[0] - 1) & 7) << 10;
    if (!v75.i8[0]) {
      unint64_t v262 = 0;
    }
    if (v75.i8[1]) {
      uint64_t v263 = (unsigned __int16)((v75.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v263 = 0;
    }
    *a2 = v84.i8[0] << 6;
    unint64_t v264 = ((v262 | v263) & 0xFFFFFFFFFFFFFC1FLL | v84.i8[0] & 0x1C | (32 * (v84.i8[1] & 0x1F))) >> 2;
    unint64_t v265 = v261 | (v264 << v260);
    if (v260 >= 0x32)
    {
      *int16x8_t v259 = v265;
      unint64_t v265 = v264 >> (-8 * (a1 & 7u));
    }
    unint64_t v266 = (v260 + 14) & 0x3E;
    unint64_t v267 = v265 | ((unint64_t)v15.u16[0] << v266);
    if (v266 >= 0x30)
    {
      *(void *)((char *)v259 + (((v260 + 14) >> 3) & 8)) = v267;
      unint64_t v267 = (unint64_t)v15.u16[0] >> -(char)v266;
    }
    unint64_t v268 = v260 + 30;
    int8x16_t v269 = vsubq_s8(v75, v158);
    int8x16_t v270 = vsubq_s8(v75, v159);
    int8x16_t v271 = vsubq_s8(v75, v160);
    int8x16_t v272 = vsubq_s8(v75, v161);
    v269.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v269, v270), (int16x8_t)vzip1q_s8(v271, v272)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v269, v270), (int16x8_t)vtrn2q_s8(v271, v272))).u64[0];
    v271.i64[0] = 0x202020202020202;
    v271.i64[1] = 0x202020202020202;
    int8x16_t v273 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8), (int8x8_t)0x4000400040004)))), v271);
    v271.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v271.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v272.i64[0] = -1;
    v272.i64[1] = -1;
    uint8x16_t v274 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v272, (uint8x16_t)vorrq_s8(v273, v271)), (int8x16_t)v269.u64[0]);
    int16x8_t v275 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v273.i8);
    uint16x8_t v276 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v274.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v275)), (int16x8_t)vmovl_high_u8(v274));
    uint16x8_t v277 = (uint16x8_t)vpaddq_s16(v275, (int16x8_t)vmovl_high_u8((uint8x16_t)v273));
    int32x4_t v278 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v277.i8);
    int32x4_t v279 = (int32x4_t)vmovl_high_u16(v277);
    int32x4_t v280 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v276.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v278)), (int32x4_t)vshlq_u32(vmovl_high_u16(v276), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v279)));
    int32x4_t v281 = vpaddq_s32(v278, v279);
    v282.i64[0] = v280.u32[0];
    v282.i64[1] = v280.u32[1];
    uint64x2_t v283 = (uint64x2_t)v282;
    v282.i64[0] = v280.u32[2];
    v282.i64[1] = v280.u32[3];
    uint64x2_t v284 = (uint64x2_t)v282;
    v282.i64[0] = v281.u32[0];
    v282.i64[1] = v281.u32[1];
    int64x2_t v285 = v282;
    v282.i64[0] = v281.u32[2];
    v282.i64[1] = v281.u32[3];
    int64x2_t v286 = vpaddq_s64((int64x2_t)vshlq_u64(v283, (uint64x2_t)vzip1q_s64((int64x2_t)0, v285)), (int64x2_t)vshlq_u64(v284, (uint64x2_t)vzip1q_s64((int64x2_t)0, v282)));
    int64x2_t v287 = vpaddq_s64(v285, v282);
    uint64_t v288 = (v260 + 30) & 0x3E;
    unint64_t v289 = (v286.i64[0] << v288) | v267;
    if ((unint64_t)(v287.i64[0] + v288) >= 0x40)
    {
      *(void *)((char *)v259 + ((v268 >> 3) & 8)) = v289;
      unint64_t v289 = (unint64_t)v286.i64[0] >> -(char)v288;
    }
    int8x16_t v290 = vceqq_s8(v75, v158);
    unint64_t v291 = v287.i64[0] + v268;
    unint64_t v292 = v289 | (v286.i64[1] << v291);
    if ((v291 & 0x3F) + v287.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v291 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v292;
      unint64_t v292 = (unint64_t)v286.i64[1] >> -(v291 & 0x3F);
      if ((v291 & 0x3F) == 0) {
        unint64_t v292 = 0;
      }
    }
    int8x16_t v293 = vandq_s8(v166, v290);
    unint64_t v294 = v291 + v287.i64[1];
    v295.i64[0] = 0x808080808080808;
    v295.i64[1] = 0x808080808080808;
    v296.i64[0] = -1;
    v296.i64[1] = -1;
    int8x16_t v297 = vandq_s8(vextq_s8(vtstq_s8(v84, v295), (int8x16_t)0, 0xEuLL), v75);
    v298.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v298.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v299 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v296, (uint8x16_t)vaddq_s8(v297, v298)), v166);
    int16x8_t v300 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v297.i8);
    uint16x8_t v301 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v299.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v300)), (int16x8_t)vmovl_high_u8(v299));
    uint16x8_t v302 = (uint16x8_t)vpaddq_s16(v300, (int16x8_t)vmovl_high_u8((uint8x16_t)v297));
    int32x4_t v303 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v302.i8);
    int32x4_t v304 = (int32x4_t)vmovl_high_u16(v302);
    int32x4_t v305 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v301.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)), (int32x4_t)vshlq_u32(vmovl_high_u16(v301), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v304)));
    int32x4_t v306 = vpaddq_s32(v303, v304);
    v307.i64[0] = v305.u32[0];
    v307.i64[1] = v305.u32[1];
    uint64x2_t v308 = (uint64x2_t)v307;
    v307.i64[0] = v305.u32[2];
    v307.i64[1] = v305.u32[3];
    uint64x2_t v309 = (uint64x2_t)v307;
    v307.i64[0] = v306.u32[0];
    v307.i64[1] = v306.u32[1];
    int64x2_t v310 = v307;
    v307.i64[0] = v306.u32[2];
    v307.i64[1] = v306.u32[3];
    int64x2_t v311 = vpaddq_s64((int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v310)), (int64x2_t)vshlq_u64(v309, (uint64x2_t)vzip1q_s64((int64x2_t)0, v307)));
    int64x2_t v312 = vpaddq_s64(v310, v307);
    unint64_t v313 = (v311.i64[0] << v294) | v292;
    if (v312.i64[0] + (v294 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v294 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v313;
      unint64_t v313 = (unint64_t)v311.i64[0] >> -(v294 & 0x3F);
      if ((v294 & 0x3F) == 0) {
        unint64_t v313 = 0;
      }
    }
    int8x16_t v314 = vceqq_s8(v75, v159);
    int8x16_t v315 = vaddq_s8(v293, v165);
    unint64_t v316 = v312.i64[0] + v294;
    unint64_t v317 = v313 | (v311.i64[1] << v316);
    if ((v316 & 0x3F) + v312.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v316 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v317;
      unint64_t v317 = (unint64_t)v311.i64[1] >> -(v316 & 0x3F);
      if ((v316 & 0x3F) == 0) {
        unint64_t v317 = 0;
      }
    }
    int8x16_t v318 = vandq_s8(v166, v314);
    unint64_t v319 = v316 + v312.i64[1];
    int8x16_t v320 = vextq_s8((int8x16_t)0, v158, 0xEuLL);
    v321.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v321.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v322.i64[0] = -1;
    v322.i64[1] = -1;
    uint8x16_t v323 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v322, (uint8x16_t)vaddq_s8(v320, v321)), v315);
    int16x8_t v324 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v320.i8);
    int16x8_t v325 = (int16x8_t)vmovl_high_u8((uint8x16_t)v320);
    uint16x8_t v326 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v323.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v324)), (int16x8_t)vshlq_u16(vmovl_high_u8(v323), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v325)));
    uint16x8_t v327 = (uint16x8_t)vpaddq_s16(v324, v325);
    int32x4_t v328 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v327.i8);
    int32x4_t v329 = (int32x4_t)vmovl_high_u16(v327);
    int32x4_t v330 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v326.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)), (int32x4_t)vshlq_u32(vmovl_high_u16(v326), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)));
    int32x4_t v331 = vpaddq_s32(v328, v329);
    v332.i64[0] = v330.u32[0];
    v332.i64[1] = v330.u32[1];
    uint64x2_t v333 = (uint64x2_t)v332;
    v332.i64[0] = v330.u32[2];
    v332.i64[1] = v330.u32[3];
    uint64x2_t v334 = (uint64x2_t)v332;
    v332.i64[0] = v331.u32[0];
    v332.i64[1] = v331.u32[1];
    int64x2_t v335 = v332;
    v332.i64[0] = v331.u32[2];
    v332.i64[1] = v331.u32[3];
    int64x2_t v336 = vpaddq_s64((int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)), (int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)));
    int64x2_t v337 = vpaddq_s64(v335, v332);
    unint64_t v338 = (v336.i64[0] << v319) | v317;
    if (v337.i64[0] + (v319 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v319 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v338;
      unint64_t v338 = (unint64_t)v336.i64[0] >> -(v319 & 0x3F);
      if ((v319 & 0x3F) == 0) {
        unint64_t v338 = 0;
      }
    }
    int8x16_t v339 = vceqq_s8(v75, v160);
    int8x16_t v340 = vaddq_s8(v103, v318);
    unint64_t v341 = v337.i64[0] + v319;
    unint64_t v342 = v338 | (v336.i64[1] << v341);
    if ((v341 & 0x3F) + v337.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v341 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
      unint64_t v342 = (unint64_t)v336.i64[1] >> -(v341 & 0x3F);
      if ((v341 & 0x3F) == 0) {
        unint64_t v342 = 0;
      }
    }
    int8x16_t v343 = vandq_s8(v166, v339);
    unint64_t v344 = v341 + v337.i64[1];
    v345.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v345.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v346.i64[0] = -1;
    v346.i64[1] = -1;
    uint8x16_t v347 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v346, (uint8x16_t)vaddq_s8(v159, v345)), v340);
    int16x8_t v348 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
    int16x8_t v349 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
    uint16x8_t v350 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v347.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v348)), (int16x8_t)vshlq_u16(vmovl_high_u8(v347), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v349)));
    uint16x8_t v351 = (uint16x8_t)vpaddq_s16(v348, v349);
    int32x4_t v352 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v351.i8);
    int32x4_t v353 = (int32x4_t)vmovl_high_u16(v351);
    int32x4_t v354 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v350.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v352)), (int32x4_t)vshlq_u32(vmovl_high_u16(v350), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v353)));
    int32x4_t v355 = vpaddq_s32(v352, v353);
    v356.i64[0] = v354.u32[0];
    v356.i64[1] = v354.u32[1];
    uint64x2_t v357 = (uint64x2_t)v356;
    v356.i64[0] = v354.u32[2];
    v356.i64[1] = v354.u32[3];
    uint64x2_t v358 = (uint64x2_t)v356;
    v356.i64[0] = v355.u32[0];
    v356.i64[1] = v355.u32[1];
    int64x2_t v359 = v356;
    v356.i64[0] = v355.u32[2];
    v356.i64[1] = v355.u32[3];
    int64x2_t v360 = vpaddq_s64((int64x2_t)vshlq_u64(v357, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)), (int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v356)));
    int64x2_t v361 = vpaddq_s64(v359, v356);
    unint64_t v362 = (v360.i64[0] << v344) | v342;
    if (v361.i64[0] + (v344 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v362;
      unint64_t v362 = (unint64_t)v360.i64[0] >> -(v344 & 0x3F);
      if ((v344 & 0x3F) == 0) {
        unint64_t v362 = 0;
      }
    }
    int8x16_t v363 = vceqq_s8(v75, v161);
    int8x16_t v364 = vaddq_s8(v18, v343);
    unint64_t v365 = v361.i64[0] + v344;
    unint64_t v366 = v362 | (v360.i64[1] << v365);
    if ((v365 & 0x3F) + v361.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
      unint64_t v366 = (unint64_t)v360.i64[1] >> -(v365 & 0x3F);
      if ((v365 & 0x3F) == 0) {
        unint64_t v366 = 0;
      }
    }
    int8x16_t v367 = vandq_s8(v166, v363);
    unint64_t v368 = v365 + v361.i64[1];
    v369.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v369.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v370.i64[0] = -1;
    v370.i64[1] = -1;
    uint8x16_t v371 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v370, (uint8x16_t)vaddq_s8(v160, v369)), v364);
    int16x8_t v372 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v160.i8);
    int16x8_t v373 = (int16x8_t)vmovl_high_u8((uint8x16_t)v160);
    uint16x8_t v374 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v371.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v372)), (int16x8_t)vshlq_u16(vmovl_high_u8(v371), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)));
    uint16x8_t v375 = (uint16x8_t)vpaddq_s16(v372, v373);
    int32x4_t v376 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v375.i8);
    int32x4_t v377 = (int32x4_t)vmovl_high_u16(v375);
    int32x4_t v378 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v374.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v376)), (int32x4_t)vshlq_u32(vmovl_high_u16(v374), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)));
    int32x4_t v379 = vpaddq_s32(v376, v377);
    v380.i64[0] = v378.u32[0];
    v380.i64[1] = v378.u32[1];
    uint64x2_t v381 = (uint64x2_t)v380;
    v380.i64[0] = v378.u32[2];
    v380.i64[1] = v378.u32[3];
    uint64x2_t v382 = (uint64x2_t)v380;
    v380.i64[0] = v379.u32[0];
    v380.i64[1] = v379.u32[1];
    int64x2_t v383 = v380;
    v380.i64[0] = v379.u32[2];
    v380.i64[1] = v379.u32[3];
    int64x2_t v384 = vpaddq_s64((int64x2_t)vshlq_u64(v381, (uint64x2_t)vzip1q_s64((int64x2_t)0, v383)), (int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v380)));
    int64x2_t v385 = vpaddq_s64(v383, v380);
    unint64_t v386 = (v384.i64[0] << v368) | v366;
    if (v385.i64[0] + (v368 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v259 + ((v368 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v386;
      unint64_t v386 = (unint64_t)v384.i64[0] >> -(v368 & 0x3F);
      if ((v368 & 0x3F) == 0) {
        unint64_t v386 = 0;
      }
    }
    int8x16_t v387 = vaddq_s8(v102, v367);
    unint64_t v388 = v385.i64[0] + v368;
    unint64_t v389 = v386 | (v384.i64[1] << v388);
    if ((v388 & 0x3F) + v385.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v388 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v389;
      unint64_t v389 = (unint64_t)v384.i64[1] >> -(v388 & 0x3F);
      if ((v388 & 0x3F) == 0) {
        unint64_t v389 = 0;
      }
    }
    unint64_t v390 = v388 + v385.i64[1];
    v391.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v391.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v392.i64[0] = -1;
    v392.i64[1] = -1;
    uint8x16_t v393 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v392, (uint8x16_t)vaddq_s8(v161, v391)), v387);
    int16x8_t v394 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v161.i8);
    int16x8_t v395 = (int16x8_t)vmovl_high_u8((uint8x16_t)v161);
    uint16x8_t v396 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v393.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v394)), (int16x8_t)vshlq_u16(vmovl_high_u8(v393), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v395)));
    uint16x8_t v397 = (uint16x8_t)vpaddq_s16(v394, v395);
    int32x4_t v398 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v397.i8);
    int32x4_t v399 = (int32x4_t)vmovl_high_u16(v397);
    int32x4_t v400 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v396.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v398)), (int32x4_t)vshlq_u32(vmovl_high_u16(v396), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v399)));
    int32x4_t v401 = vpaddq_s32(v398, v399);
    v402.i64[0] = v400.u32[0];
    v402.i64[1] = v400.u32[1];
    uint64x2_t v403 = (uint64x2_t)v402;
    v402.i64[0] = v400.u32[2];
    v402.i64[1] = v400.u32[3];
    uint64x2_t v404 = (uint64x2_t)v402;
    v402.i64[0] = v401.u32[0];
    v402.i64[1] = v401.u32[1];
    int64x2_t v405 = v402;
    v402.i64[0] = v401.u32[2];
    v402.i64[1] = v401.u32[3];
    int64x2_t v406 = vpaddq_s64((int64x2_t)vshlq_u64(v403, (uint64x2_t)vzip1q_s64((int64x2_t)0, v405)), (int64x2_t)vshlq_u64(v404, (uint64x2_t)vzip1q_s64((int64x2_t)0, v402)));
    int64x2_t v407 = vpaddq_s64(v405, v402);
    unint64_t v408 = (v406.i64[0] << v390) | v389;
    if (v407.i64[0] + (v390 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v259 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v408;
      if ((v390 & 0x3F) != 0) {
        unint64_t v408 = (unint64_t)v406.i64[0] >> -(v390 & 0x3F);
      }
      else {
        unint64_t v408 = 0;
      }
    }
    unint64_t v409 = v407.i64[0] + v390;
    unint64_t v410 = v408 | (v406.i64[1] << v409);
    if ((v409 & 0x3F) + v407.i64[1] >= 0x40)
    {
      *(void *)((char *)v259 + ((v409 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v410;
      unint64_t v410 = (unint64_t)v406.i64[1] >> -(v409 & 0x3F);
      if ((v409 & 0x3F) == 0) {
        unint64_t v410 = 0;
      }
    }
    unint64_t v411 = v409 + v407.i64[1];
    if ((v411 & 0x3F) != 0) {
      *(void *)((char *)v259 + ((v411 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v410;
    }
    unint64_t v169 = (v411 - v260 + 7) >> 3;
    char v168 = *a2 | (v169 - 1);
  }
LABEL_69:
  *a2 = v168;
  return v169;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x16_t *a3, char *a4, int a5, int a6)
{
  int8x16_t v9 = a3;
  int32x4_t v11 = (int32x4_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v12, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v14 = 4 * a2;
  int8x16_t v15 = a4 + 1;
  if (a6 <= 4) {
    int v16 = 4;
  }
  else {
    int v16 = a6;
  }
  unsigned int v17 = v16 - 4;
  if (v17 >= 4) {
    int v18 = 4;
  }
  else {
    int v18 = v17;
  }
  if (v12 && v18)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v15, (int32x4_t *)((char *)v11 + v14), a2, v12, v18);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int8x16_t v15 = 0;
  }
  int8x16_t v19 = a4 + 2;
  if (a5 <= 8) {
    int v20 = 8;
  }
  else {
    int v20 = a5;
  }
  unsigned int v21 = v20 - 8;
  if (v21 >= 8) {
    int v22 = 8;
  }
  else {
    int v22 = v21;
  }
  if (v22 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, v11 + 1, a2, v22, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v23 = a4 + 3;
  }
  else
  {
    *int8x16_t v19 = 0;
    int8x16_t v23 = a4 + 3;
    if (!v22) {
      goto LABEL_33;
    }
  }
  if (v18)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int32x4_t *)((char *)v11 + v14 + 16), a2, v22, v18);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v23 = 0;
LABEL_34:
  int8x16_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int32x4_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int8x16_t v24 = 0;
  }
  int8x16_t v28 = a4 + 5;
  if (a6 <= 12) {
    int v29 = 12;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 12;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v12 && v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int32x4_t *)((char *)v11 + 12 * a2), a2, v12, v31);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v28 = 0;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  if (v27)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v32, (int32x4_t *)((char *)v11 + 8 * a2 + 16), a2, v22, v27);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v33 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v32 = 0;
  int8x16_t v33 = a4 + 7;
  if (!v22)
  {
LABEL_62:
    char *v33 = 0;
    return result;
  }
LABEL_58:
  if (!v31) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int32x4_t *)((char *)v11 + 12 * a2 + 16), a2, v22, v31);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int64x2_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7 + 14;
  uint64_t v10 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x33) {
    v10 |= *(void *)(v8 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v11 = 4 * v10;
  uint32x2_t v12 = (uint32x2_t)vdup_n_s32(v11);
  a5.i32[0] = v11;
  a7.i32[0] = a4 >> 6;
  v13.i32[0] = vorr_s8(a5, a7).u32[0];
  v13.i32[1] = vshr_n_u32(v12, 5uLL).i32[1];
  int16x4_t v14 = (int16x4_t)vand_s8(v13, (int8x8_t)0x1F0000001FLL);
  v14.i8[1] = v14.i8[4];
  int16x4_t v15 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v12, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v15.i8[1] = v15.i8[4];
  unint64_t v16 = v7 + 30;
  unint64_t v17 = v9 >> 6;
  unint64_t v18 = v9 & 0x3E;
  uint64_t v19 = *(void *)(v8 + 8 * v17) >> v18;
  if (v18 >= 0x31) {
    v19 |= *(void *)(v8 + 8 * v17 + 8) << -(char)v18;
  }
  unint64_t v20 = (8 * (a3 & 7)) | 0x200;
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(v14, 0);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(v15, 0);
  v23.i64[0] = 0x303030303030303;
  v23.i64[1] = 0x303030303030303;
  int8x16_t v24 = vandq_s8(v21, v23);
  int8x16_t v25 = vbicq_s8(v22, vceqq_s8(v24, v23));
  v23.i64[0] = 0x202020202020202;
  v23.i64[1] = 0x202020202020202;
  int8x16_t v26 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v21.i8), (int8x8_t)0x4000400040004)))), v23);
  if (vmaxvq_s8(v26) < 1)
  {
    int v36 = 0;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    int8x16_t v38 = v25;
    int8x16_t v39 = v25;
    int8x16_t v40 = v25;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = v25;
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v44.i64[0] = -1;
    v44.i64[1] = -1;
  }
  else
  {
    int16x8_t v27 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v26, v26));
    int32x4_t v28 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v27, v27));
    unint64_t v29 = vpaddq_s32(v28, v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    int64x2_t v31 = v30;
    unint64_t v32 = vaddvq_s64(v30);
    unint64_t v33 = v32 + v16;
    if (v32 <= 0x80 && v20 >= v33)
    {
      unint64_t v45 = v16 & 0x3E;
      int64x2_t v46 = vaddq_s64(vzip1q_s64((int64x2_t)0, v31), vdupq_n_s64(v45));
      int8x16_t v47 = (int64x2_t *)(v8 + ((v16 >> 3) & 8));
      int32x4_t v35 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v47, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47->i64[0], 0), (uint64x2_t)vnegq_s64(v46)));
      if (v32 + v45 < 0x81)
      {
        int v36 = 0;
      }
      else
      {
        int v36 = 0;
        int32x4_t v35 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v47[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v46))), (int8x16_t)v35);
      }
      unint64_t v16 = v33;
    }
    else
    {
      int32x4_t v35 = 0uLL;
      int v36 = 1;
    }
    int32x2_t v48 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
    v49.i64[0] = v48.u32[0];
    v49.i64[1] = v48.u32[1];
    int32x4_t v50 = (int32x4_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vnegq_s64(v49));
    *(int32x2_t *)v35.i8 = vmovn_s64((int64x2_t)v35);
    *(int32x2_t *)v50.i8 = vmovn_s64((int64x2_t)v50);
    int16x8_t v51 = (int16x8_t)vzip1q_s32(v35, v50);
    int16x8_t v52 = (int16x8_t)vshlq_u32((uint32x4_t)v51, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL)))));
    *(int16x4_t *)v51.i8 = vmovn_s32((int32x4_t)v51);
    *(int16x4_t *)v52.i8 = vmovn_s32((int32x4_t)v52);
    int16x8_t v53 = vzip1q_s16(v51, v52);
    *(int8x8_t *)v53.i8 = vzip1_s8(vmovn_s16(v53), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v53, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v26.i8, *(int8x8_t *)v21.i8))))));
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    int8x16_t v54 = vshlq_s8((int8x16_t)v51, v26);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54.i64[0] = vqtbl1q_s8(vandq_s8((int8x16_t)v53, vaddq_s8(v54, (int8x16_t)v51)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v55 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 1);
    int8x16_t v57 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 2);
    int8x16_t v58 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 3);
    int8x16_t v42 = vsubq_s8(v25, v55);
    int8x16_t v38 = vsubq_s8(v25, v56);
    int8x16_t v39 = vsubq_s8(v25, v57);
    int8x16_t v40 = vsubq_s8(v25, v58);
    int8x16_t v44 = vceqzq_s8(v55);
    int8x16_t v43 = vceqzq_s8(v56);
    int8x16_t v41 = vceqzq_s8(v57);
    int8x16_t v37 = vceqzq_s8(v58);
  }
  v59.i64[0] = 0x808080808080808;
  v59.i64[1] = 0x808080808080808;
  int32x4_t v60 = 0uLL;
  int8x16_t v61 = vandq_s8(vextq_s8(vtstq_s8(v21, v59), (int8x16_t)0, 0xEuLL), v25);
  int16x8_t v62 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v61, v61));
  int32x4_t v63 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v62, v62));
  unint64_t v64 = vpaddq_s32(v63, v63).u64[0];
  v65.i64[0] = v64;
  v65.i64[1] = HIDWORD(v64);
  int64x2_t v66 = v65;
  unint64_t v67 = vaddvq_s64(v65);
  unint64_t v68 = v67 + v16;
  if (v67 <= 0x80 && v20 >= v68)
  {
    unint64_t v70 = v16 & 0x3F;
    int64x2_t v71 = vaddq_s64(vzip1q_s64((int64x2_t)0, v66), vdupq_n_s64(v70));
    int8x16_t v72 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v60 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v72, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72->i64[0], 0), (uint64x2_t)vnegq_s64(v71)));
    if (v67 + v70 >= 0x81) {
      int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), (int8x16_t)v60);
    }
    unint64_t v16 = v68;
  }
  else
  {
    int v36 = 1;
  }
  int v73 = v21.i8[0] & 3;
  if (v73 == 2)
  {
    BOOL v74 = v20 >= v16 + 4;
    if (v20 >= v16 + 4) {
      v16 += 4;
    }
    unint64_t v75 = v16 + 4;
    if (!v74 || v20 < v75) {
      int v36 = 1;
    }
    if (v20 >= v75) {
      v16 += 4;
    }
  }
  int32x4_t v77 = 0uLL;
  int8x16_t v78 = vextq_s8((int8x16_t)0, v42, 0xEuLL);
  int16x8_t v79 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v78, v78));
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v79, v79));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v84 + v16;
  if (v84 <= 0x80 && v20 >= v85)
  {
    unint64_t v88 = v16 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v88));
    int8x16_t v90 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v87 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v84 + v88 >= 0x81) {
      int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v87);
    }
    unint64_t v16 = v85;
  }
  else
  {
    int v36 = 1;
    int32x4_t v87 = 0uLL;
  }
  int16x8_t v91 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v38, v38));
  int32x4_t v92 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v91, v91));
  unint64_t v93 = vpaddq_s32(v92, v92).u64[0];
  v94.i64[0] = v93;
  v94.i64[1] = HIDWORD(v93);
  int64x2_t v95 = v94;
  unint64_t v96 = vaddvq_s64(v94);
  if (v96 < 0x81)
  {
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v92.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v92, (int8x16_t)v92, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = v98;
    int32x4_t v100 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v91.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL)));
    int16x8_t v101 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)));
    unint64_t v102 = v96 + v16;
    if (v20 >= v96 + v16)
    {
      unint64_t v103 = v16 & 0x3F;
      int64x2_t v104 = vaddq_s64(vzip1q_s64((int64x2_t)0, v95), vdupq_n_s64(v103));
      int8x16_t v105 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
      if (v96 + v103 >= 0x81) {
        int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), (int8x16_t)v77);
      }
      unint64_t v16 = v102;
    }
    else
    {
      int v36 = 1;
    }
    int32x4_t v106 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v99));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v106.i8 = vmovn_s64((int64x2_t)v106);
    int16x8_t v107 = (int16x8_t)vzip1q_s32(v77, v106);
    int16x8_t v108 = (int16x8_t)vshlq_u32((uint32x4_t)v107, (uint32x4_t)vnegq_s32(v100));
    *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v107);
    *(int16x4_t *)v108.i8 = vmovn_s32((int32x4_t)v108);
    int16x8_t v109 = vzip1q_s16(v107, v108);
    int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)v109, (uint16x8_t)vnegq_s16(v101));
    *(int8x8_t *)v109.i8 = vmovn_s16(v109);
    *(int8x8_t *)v110.i8 = vmovn_s16(v110);
    int32x4_t v77 = (int32x4_t)vzip1q_s8((int8x16_t)v109, (int8x16_t)v110);
  }
  else
  {
    int v36 = 1;
  }
  int16x8_t v111 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v39, v39));
  int32x4_t v112 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v111, v111));
  unint64_t v113 = vpaddq_s32(v112, v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v116 <= 0x80)
  {
    int32x2_t v118 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v112, (int8x16_t)v112, 8uLL));
    v119.i64[0] = v118.u32[0];
    v119.i64[1] = v118.u32[1];
    int64x2_t v120 = v119;
    int32x4_t v121 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL)));
    int16x8_t v122 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)));
    unint64_t v123 = v116 + v16;
    if (v20 >= v116 + v16)
    {
      unint64_t v125 = v16 & 0x3F;
      int64x2_t v126 = vaddq_s64(vzip1q_s64((int64x2_t)0, v115), vdupq_n_s64(v125));
      int8x16_t v127 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v124 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
      if (v116 + v125 >= 0x81) {
        int32x4_t v124 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), (int8x16_t)v124);
      }
      unint64_t v16 = v123;
    }
    else
    {
      int32x4_t v124 = 0uLL;
      int v36 = 1;
    }
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vnegq_s64(v120));
    *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    int16x8_t v129 = (int16x8_t)vzip1q_s32(v124, v128);
    int16x8_t v130 = (int16x8_t)vshlq_u32((uint32x4_t)v129, (uint32x4_t)vnegq_s32(v121));
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    int16x8_t v131 = vzip1q_s16(v129, v130);
    int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)v131, (uint16x8_t)vnegq_s16(v122));
    *(int8x8_t *)v131.i8 = vmovn_s16(v131);
    *(int8x8_t *)v132.i8 = vmovn_s16(v132);
    int8x16_t v117 = vzip1q_s8((int8x16_t)v131, (int8x16_t)v132);
  }
  else
  {
    int v36 = 1;
    int8x16_t v117 = 0uLL;
  }
  int16x8_t v133 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v40, v40));
  int32x4_t v134 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v133, v133));
  unint64_t v135 = vpaddq_s32(v134, v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  if (v138 > 0x80 || v20 < v138 + v16) {
    goto LABEL_65;
  }
  int64x2_t v139 = vaddq_s64(vzip1q_s64((int64x2_t)0, v137), vdupq_n_s64(v16 & 0x3F));
  int8x16_t v140 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
  int64x2_t v141 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
  if (v138 + (v16 & 0x3F) >= 0x81) {
    int64x2_t v141 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), (int8x16_t)v141);
  }
  if (v36 || (uint64_t v142 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v142) - (v138 + v16) >= 9))
  {
LABEL_65:
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v206;
LABEL_66:
    *(void *)(v143 & 0xFFFFFFFFFFFFFFF8) |= 255 << ((8 * v143) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 2 * a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 3 * a2) = 0;
    return v142;
  }
  if (v73 == 2)
  {
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v207;
    goto LABEL_66;
  }
  int32x2_t v145 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL));
  int32x2_t v146 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
  v147.i64[0] = v145.u32[0];
  v147.i64[1] = v145.u32[1];
  int64x2_t v148 = v147;
  v147.i64[0] = v146.u32[0];
  v147.i64[1] = v146.u32[1];
  int16x4_t v149 = (int16x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL).u64[0];
  int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v60, (uint64x2_t)vnegq_s64(v148));
  int32x4_t v151 = (int32x4_t)vshlq_u64((uint64x2_t)v87, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v60.i8 = vmovn_s64((int64x2_t)v60);
  *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
  *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
  *(int32x2_t *)v151.i8 = vmovn_s64((int64x2_t)v151);
  int16x8_t v152 = (int16x8_t)vzip1q_s32(v60, v150);
  int16x8_t v153 = (int16x8_t)vzip1q_s32(v87, v151);
  int16x8_t v154 = (int16x8_t)vshlq_u32((uint32x4_t)v152, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL)))));
  int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v153, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, v149))));
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
  *(int16x4_t *)v153.i8 = vmovn_s32((int32x4_t)v153);
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  int16x8_t v156 = vzip1q_s16(v152, v154);
  int16x8_t v157 = vzip1q_s16(v153, v155);
  int16x8_t v158 = (int16x8_t)vshlq_u16((uint16x8_t)v156, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
  int16x8_t v159 = (int16x8_t)vshlq_u16((uint16x8_t)v157, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int8x8_t *)v156.i8 = vmovn_s16(v156);
  *(int8x8_t *)v158.i8 = vmovn_s16(v158);
  *(int8x8_t *)v157.i8 = vmovn_s16(v157);
  *(int8x8_t *)v159.i8 = vmovn_s16(v159);
  v149.i32[0] = v19;
  v160.i64[0] = 0x808080808080808;
  v160.i64[1] = 0x808080808080808;
  int8x16_t v161 = vzip1q_s8((int8x16_t)v156, (int8x16_t)v158);
  v158.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v158.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v162 = vsubq_s8(v59, v61);
  int8x16_t v163 = vzip1q_s8((int8x16_t)v157, (int8x16_t)v159);
  v159.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v159.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v153.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v134, (int8x16_t)v134, 8uLL));
  v164.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v164.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v165.i64[0] = 0x808080808080808;
  v165.i64[1] = 0x808080808080808;
  v149.i8[1] = BYTE1(v19);
  int8x16_t v166 = vaddq_s8(v61, (int8x16_t)v158);
  int32x4_t v167 = (int32x4_t)vshlq_s8(v163, vsubq_s8(v160, v78));
  int8x16_t v168 = vshlq_s8(v117, vsubq_s8(v160, v39));
  v147.i64[0] = v153.u32[0];
  v147.i64[1] = v153.u32[1];
  int16x8_t v169 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v40.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
  int8x16_t v170 = vaddq_s8(v40, v164);
  int8x16_t v171 = vsubq_s8(v165, v40);
  int8x16_t v172 = (int8x16_t)vdupq_lane_s16(v149, 0);
  int8x16_t v173 = vshlq_s8(vshlq_s8(v161, v162), v166);
  int8x16_t v174 = vshlq_s8((int8x16_t)v167, vaddq_s8(v78, (int8x16_t)v159));
  int32x4_t v175 = (int32x4_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v167.i8 = vmovn_s64(v141);
  *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
  int16x8_t v176 = (int16x8_t)vzip1q_s32(v167, v175);
  int16x8_t v177 = (int16x8_t)vshlq_u32((uint32x4_t)v176, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v133, (int8x16_t)v133, 8uLL)))));
  *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
  *(int16x4_t *)v177.i8 = vmovn_s32((int32x4_t)v177);
  int16x8_t v178 = vzip1q_s16(v176, v177);
  int16x8_t v179 = (int16x8_t)vshlq_u16((uint16x8_t)v178, (uint16x8_t)vnegq_s16(v169));
  *(int8x8_t *)v178.i8 = vmovn_s16(v178);
  *(int8x8_t *)v179.i8 = vmovn_s16(v179);
  int8x16_t v180 = vaddq_s8(vandq_s8(v173, v44), v174);
  int8x16_t v181 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v173.i8, 0);
  int8x16_t v182 = vsubq_s8(v180, vandq_s8(v44, v181));
  int8x16_t v183 = vsubq_s8(vshlq_s8(vshlq_s8((int8x16_t)v77, vsubq_s8(v160, v38)), vaddq_s8(v38, (int8x16_t)v159)), vandq_s8(v43, v181));
  int8x16_t v184 = vsubq_s8(vshlq_s8(v168, vaddq_s8(v39, (int8x16_t)v159)), vandq_s8(v41, v181));
  int8x16_t v185 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v178, (int8x16_t)v179), v171), v170), vandq_s8(v37, v181));
  v186.i64[0] = 0x101010101010101;
  v186.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v24, v186)))
  {
    int8x16_t v187 = vandq_s8(v21, v186);
    int8x16_t v188 = v182;
    v188.i16[0] = v182.i16[7];
    v188.i16[7] = v182.i16[0];
    int8x16_t v189 = vnegq_s8(v187);
    int8x16_t v190 = vbslq_s8(v189, v188, v182);
    int8x16_t v191 = vaddq_s8(v190, vandq_s8(vqtbl1q_s8(v190, (int8x16_t)xmmword_242EA7480), v189));
    int8x16_t v182 = vaddq_s8(v191, vandq_s8(vqtbl1q_s8(v191, (int8x16_t)xmmword_242EA7490), v189));
    int8x16_t v192 = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA74A0), v189), v183);
    int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v192, (int8x16_t)xmmword_242EA74B0), v189), v192);
    int8x16_t v193 = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA74C0), v189), v184);
    int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v193, (int8x16_t)xmmword_242EA74D0), v189), v193);
    int8x16_t v194 = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA74E0), v189), v185);
    int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v194, (int8x16_t)xmmword_242EA74F0), v189), v194);
  }
  int8x16_t v195 = vaddq_s8(v182, v172);
  int8x16_t v196 = vaddq_s8(v183, v172);
  int8x16_t v197 = vaddq_s8(v184, v172);
  int8x16_t v198 = vaddq_s8(v185, v172);
  v199.i64[0] = 0x1010101010101010;
  v199.i64[1] = 0x1010101010101010;
  int8x16_t v200 = vceqzq_s8(vandq_s8(v21, v199));
  int64x2_t v201 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v195, (int8x16_t)xmmword_242EA7500), v200), v195);
  int64x2_t v202 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v196, (int8x16_t)xmmword_242EA7500), v200), v196);
  int64x2_t v203 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v197, (int8x16_t)xmmword_242EA7500), v200), v197);
  int64x2_t v204 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v198, (int8x16_t)xmmword_242EA7500), v200), v198);
  *a1 = vzip1q_s64(v201, v202);
  *(int64x2_t *)((char *)a1 + a2) = vzip2q_s64(v201, v202);
  int8x16_t v205 = (int64x2_t *)((char *)a1 + 2 * a2);
  *int8x16_t v205 = vzip1q_s64(v203, v204);
  *(int64x2_t *)((char *)v205 + a2) = vzip2q_s64(v203, v204);
  return v142;
}

int64x2_t *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(int64x2_t *result, uint64_t a2, int64x2_t *a3, char *a4, int a5, int a6)
{
  char v6 = 0;
  uint64_t v7 = 2 * a2;
  if (a5 >= 4) {
    int v8 = 4;
  }
  else {
    int v8 = a5;
  }
  if (a6 >= 4) {
    int v9 = 4;
  }
  else {
    int v9 = a6;
  }
  if (v8 && v9)
  {
    int64x2_t v10 = *(int64x2_t *)((char *)result + a2);
    int64x2_t v11 = vzip1q_s64(*result, v10);
    int64x2_t v12 = vzip2q_s64(*result, v10);
    int64x2_t v13 = *(int64x2_t *)((char *)result + 2 * a2);
    int64x2_t v14 = *(int64x2_t *)((char *)result + v7 + a2);
    *a3 = v11;
    a3[1] = v12;
    a3[2] = vzip1q_s64(v13, v14);
    a3[3] = vzip2q_s64(v13, v14);
    a3 += 4;
    char v6 = 63;
  }
  *a4 = v6;
  if (a5 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 4;
  if (v16 >= 4) {
    int v17 = 4;
  }
  else {
    int v17 = v16;
  }
  if (v17) {
    BOOL v18 = v9 == 0;
  }
  else {
    BOOL v18 = 1;
  }
  if (v18)
  {
    char v27 = 0;
  }
  else
  {
    int64x2_t v19 = result[1];
    int64x2_t v20 = *(int64x2_t *)((char *)result + a2 + 16);
    int64x2_t v21 = vzip1q_s64(v19, v20);
    int64x2_t v22 = vzip2q_s64(v19, v20);
    int8x16_t v23 = (int64x2_t *)((char *)result + v7 + 16);
    int64x2_t v24 = *(int64x2_t *)((char *)v23 + a2);
    int64x2_t v25 = vzip1q_s64(*v23, v24);
    int64x2_t v26 = vzip2q_s64(*v23, v24);
    *a3 = v21;
    a3[1] = v22;
    a3[2] = v25;
    a3[3] = v26;
    a3 += 4;
    char v27 = 63;
  }
  char v28 = 0;
  uint64_t v29 = 4 * a2;
  a4[1] = v27;
  if (a6 <= 4) {
    int v30 = 4;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 4;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v8 && v32)
  {
    int64x2_t v33 = *(int64x2_t *)((char *)result + 4 * a2);
    int64x2_t v34 = *(int64x2_t *)((char *)result + v29 + a2);
    int64x2_t v35 = vzip1q_s64(v33, v34);
    int64x2_t v36 = vzip2q_s64(v33, v34);
    int8x16_t v37 = (int64x2_t *)((char *)result + v29 + v7);
    int64x2_t v38 = *(int64x2_t *)((char *)v37 + a2);
    int64x2_t v39 = vzip1q_s64(*v37, v38);
    int64x2_t v40 = vzip2q_s64(*v37, v38);
    *a3 = v35;
    a3[1] = v36;
    a3[2] = v39;
    a3[3] = v40;
    a3 += 4;
    char v28 = 63;
  }
  char v41 = 0;
  a4[2] = v28;
  if (v17 && v32)
  {
    int8x16_t v42 = (int64x2_t *)((char *)result + v29 + 16);
    int64x2_t v43 = *(int64x2_t *)((char *)v42 + a2);
    int64x2_t v44 = vzip1q_s64(*v42, v43);
    int64x2_t v45 = vzip2q_s64(*v42, v43);
    int64x2_t v46 = (int64x2_t *)((char *)v42 + v7);
    int64x2_t v47 = *(int64x2_t *)((char *)v46 + a2);
    int64x2_t v48 = vzip1q_s64(*v46, v47);
    int64x2_t v49 = vzip2q_s64(*v46, v47);
    *a3 = v44;
    a3[1] = v45;
    a3[2] = v48;
    a3[3] = v49;
    a3 += 4;
    char v41 = 63;
  }
  char v50 = 0;
  a4[3] = v41;
  if (a5 <= 8) {
    int v51 = 8;
  }
  else {
    int v51 = a5;
  }
  unsigned int v52 = v51 - 8;
  if (v52 >= 4) {
    unsigned int v52 = 4;
  }
  if (v52 && v9)
  {
    int64x2_t v53 = result[2];
    int64x2_t v54 = *(int64x2_t *)((char *)result + a2 + 32);
    int64x2_t v55 = vzip1q_s64(v53, v54);
    int64x2_t v56 = vzip2q_s64(v53, v54);
    int8x16_t v57 = (int64x2_t *)((char *)result + v7 + 32);
    int64x2_t v58 = *(int64x2_t *)((char *)v57 + a2);
    int64x2_t v59 = vzip1q_s64(*v57, v58);
    int64x2_t v60 = vzip2q_s64(*v57, v58);
    *a3 = v55;
    a3[1] = v56;
    a3[2] = v59;
    a3[3] = v60;
    a3 += 4;
    char v50 = 63;
  }
  char v61 = 0;
  a4[4] = v50;
  if (a5 <= 12) {
    int v62 = 12;
  }
  else {
    int v62 = a5;
  }
  unsigned int v63 = v62 - 12;
  if (v63 >= 4) {
    int v64 = 4;
  }
  else {
    int v64 = v63;
  }
  if (v64 && v9)
  {
    int64x2_t v65 = result[3];
    int64x2_t v66 = *(int64x2_t *)((char *)result + a2 + 48);
    int64x2_t v67 = vzip1q_s64(v65, v66);
    int64x2_t v68 = vzip2q_s64(v65, v66);
    int8x16_t v69 = (int64x2_t *)((char *)result + v7 + 48);
    int64x2_t v70 = *(int64x2_t *)((char *)v69 + a2);
    int64x2_t v71 = vzip1q_s64(*v69, v70);
    int64x2_t v72 = vzip2q_s64(*v69, v70);
    *a3 = v67;
    a3[1] = v68;
    a3[2] = v71;
    a3[3] = v72;
    a3 += 4;
    char v61 = 63;
  }
  char v73 = 0;
  a4[5] = v61;
  if (v52 && v32)
  {
    BOOL v74 = (int64x2_t *)((char *)result + v29 + 32);
    int64x2_t v75 = *(int64x2_t *)((char *)v74 + a2);
    int64x2_t v76 = vzip1q_s64(*v74, v75);
    int64x2_t v77 = vzip2q_s64(*v74, v75);
    int8x16_t v78 = (int64x2_t *)((char *)v74 + v7);
    int64x2_t v79 = *(int64x2_t *)((char *)v78 + a2);
    int64x2_t v80 = vzip1q_s64(*v78, v79);
    int64x2_t v81 = vzip2q_s64(*v78, v79);
    *a3 = v76;
    a3[1] = v77;
    a3[2] = v80;
    a3[3] = v81;
    a3 += 4;
    char v73 = 63;
  }
  char v82 = 0;
  a4[6] = v73;
  if (v64 && v32)
  {
    int64x2_t v83 = (int64x2_t *)((char *)result + v29);
    int64x2_t v84 = v83[3];
    v83 += 3;
    int64x2_t v85 = *(int64x2_t *)((char *)v83 + a2);
    int64x2_t v86 = vzip1q_s64(v84, v85);
    int64x2_t v87 = vzip2q_s64(v84, v85);
    unint64_t v88 = (int64x2_t *)((char *)v83 + v7);
    int64x2_t v89 = *(int64x2_t *)((char *)v88 + a2);
    int64x2_t v90 = vzip1q_s64(*v88, v89);
    int64x2_t v91 = vzip2q_s64(*v88, v89);
    *a3 = v86;
    a3[1] = v87;
    a3[2] = v90;
    a3[3] = v91;
    char v82 = 63;
  }
  a4[7] = v82;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, __n128 a4, int64x2_t a5, __n128 a6)
{
  unsigned int v9 = *a3;
  if (v9 == 63)
  {
    int64x2_t v11 = *(int64x2_t *)a2;
    a5 = *(int64x2_t *)(a2 + 16);
    int64x2_t v12 = (const double *)(a2 + 32);
    *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v12);
    *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a2, a5);
    a4 = (__n128)vzip2q_s64(v11, a5);
    *(__n128 *)(a1 + 64) = a4;
    *(__n128 *)(a1 + 128) = a6;
    *(_OWORD *)(a1 + 192) = v13;
    uint64_t v10 = 64;
  }
  else if (v9 == 1)
  {
    a4 = (__n128)vld1q_dup_s16((const __int16 *)a2);
    *(__n128 *)a1 = a4;
    *(__n128 *)(a1 + 64) = a4;
    *(__n128 *)(a1 + 128) = a4;
    *(__n128 *)(a1 + 192) = a4;
    uint64_t v10 = 2;
  }
  else if (*a3)
  {
    uint64_t v10 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)a1, 64, a2, v9, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
  }
  else
  {
    uint64_t v10 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 192) = 0;
    *(void *)(a1 + 200) = 0;
  }
  uint64_t v14 = a2 + v10;
  unsigned int v15 = a3[1];
  if (a3[1])
  {
    if (v15 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v14);
      *(__n128 *)(a1 + 16) = a4;
      *(__n128 *)(a1 + 80) = a4;
      *(__n128 *)(a1 + 144) = a4;
      *(__n128 *)(a1 + 208) = a4;
      uint64_t v19 = 2;
    }
    else if (v15 == 63)
    {
      int64x2_t v16 = *(int64x2_t *)v14;
      a5 = *(int64x2_t *)(v14 + 16);
      int v17 = (const double *)(v14 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v17);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(*(int64x2_t *)v14, a5);
      a4 = (__n128)vzip2q_s64(v16, a5);
      *(__n128 *)(a1 + 80) = a4;
      *(__n128 *)(a1 + 144) = a6;
      *(_OWORD *)(a1 + 208) = v18;
      uint64_t v19 = 64;
    }
    else
    {
      uint64_t v19 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 16), 64, v14, v15, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v19 = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
  }
  uint64_t v20 = v14 + v19;
  unsigned int v21 = a3[2];
  if (a3[2])
  {
    if (v21 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v20);
      *(__n128 *)(a1 + 256) = a4;
      *(__n128 *)(a1 + 320) = a4;
      *(__n128 *)(a1 + 384) = a4;
      *(__n128 *)(a1 + 448) = a4;
      uint64_t v25 = 2;
    }
    else if (v21 == 63)
    {
      int64x2_t v22 = *(int64x2_t *)v20;
      a5 = *(int64x2_t *)(v20 + 16);
      int8x16_t v23 = (const double *)(v20 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v23);
      *(int64x2_t *)(a1 + 256) = vzip1q_s64(*(int64x2_t *)v20, a5);
      a4 = (__n128)vzip2q_s64(v22, a5);
      *(__n128 *)(a1 + 320) = a4;
      *(__n128 *)(a1 + 384) = a6;
      *(_OWORD *)(a1 + 448) = v24;
      uint64_t v25 = 64;
    }
    else
    {
      uint64_t v25 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 256), 64, v20, v21, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v25 = 0;
    *(void *)(a1 + 256) = 0;
    *(void *)(a1 + 264) = 0;
    *(void *)(a1 + 320) = 0;
    *(void *)(a1 + 328) = 0;
    *(void *)(a1 + 384) = 0;
    *(void *)(a1 + 392) = 0;
    *(void *)(a1 + 448) = 0;
    *(void *)(a1 + 456) = 0;
  }
  uint64_t v26 = v20 + v25;
  unsigned int v27 = a3[3];
  if (a3[3])
  {
    if (v27 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v26);
      *(__n128 *)(a1 + 272) = a4;
      *(__n128 *)(a1 + 336) = a4;
      *(__n128 *)(a1 + 400) = a4;
      *(__n128 *)(a1 + 464) = a4;
      uint64_t v31 = 2;
    }
    else if (v27 == 63)
    {
      int64x2_t v28 = *(int64x2_t *)v26;
      a5 = *(int64x2_t *)(v26 + 16);
      uint64_t v29 = (const double *)(v26 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v29);
      *(int64x2_t *)(a1 + 272) = vzip1q_s64(*(int64x2_t *)v26, a5);
      a4 = (__n128)vzip2q_s64(v28, a5);
      *(__n128 *)(a1 + 336) = a4;
      *(__n128 *)(a1 + 400) = a6;
      *(_OWORD *)(a1 + 464) = v30;
      uint64_t v31 = 64;
    }
    else
    {
      uint64_t v31 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 272), 64, v26, v27, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v31 = 0;
    *(void *)(a1 + 272) = 0;
    *(void *)(a1 + 280) = 0;
    *(void *)(a1 + 336) = 0;
    *(void *)(a1 + 344) = 0;
    *(void *)(a1 + 400) = 0;
    *(void *)(a1 + 408) = 0;
    *(void *)(a1 + 464) = 0;
    *(void *)(a1 + 472) = 0;
  }
  uint64_t v32 = v26 + v31;
  unsigned int v33 = a3[4];
  if (a3[4])
  {
    if (v33 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v32);
      *(__n128 *)(a1 + 32) = a4;
      *(__n128 *)(a1 + 96) = a4;
      *(__n128 *)(a1 + 160) = a4;
      *(__n128 *)(a1 + 224) = a4;
      uint64_t v37 = 2;
    }
    else if (v33 == 63)
    {
      int64x2_t v34 = *(int64x2_t *)v32;
      a5 = *(int64x2_t *)(v32 + 16);
      int64x2_t v35 = (const double *)(v32 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v35);
      *(int64x2_t *)(a1 + 32) = vzip1q_s64(*(int64x2_t *)v32, a5);
      a4 = (__n128)vzip2q_s64(v34, a5);
      *(__n128 *)(a1 + 96) = a4;
      *(__n128 *)(a1 + 160) = a6;
      *(_OWORD *)(a1 + 224) = v36;
      uint64_t v37 = 64;
    }
    else
    {
      uint64_t v37 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 32), 64, v32, v33, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v37 = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
  }
  uint64_t v38 = v32 + v37;
  unsigned int v39 = a3[5];
  if (a3[5])
  {
    if (v39 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v38);
      *(__n128 *)(a1 + 48) = a4;
      *(__n128 *)(a1 + 112) = a4;
      *(__n128 *)(a1 + 176) = a4;
      *(__n128 *)(a1 + 240) = a4;
      uint64_t v43 = 2;
    }
    else if (v39 == 63)
    {
      int64x2_t v40 = *(int64x2_t *)v38;
      a5 = *(int64x2_t *)(v38 + 16);
      char v41 = (const double *)(v38 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v41);
      *(int64x2_t *)(a1 + 48) = vzip1q_s64(*(int64x2_t *)v38, a5);
      a4 = (__n128)vzip2q_s64(v40, a5);
      *(__n128 *)(a1 + 112) = a4;
      *(__n128 *)(a1 + 176) = a6;
      *(_OWORD *)(a1 + 240) = v42;
      uint64_t v43 = 64;
    }
    else
    {
      uint64_t v43 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 48), 64, v38, v39, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v43 = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 240) = 0;
    *(void *)(a1 + 248) = 0;
  }
  uint64_t v44 = v38 + v43;
  unsigned int v45 = a3[6];
  if (a3[6])
  {
    if (v45 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v44);
      *(__n128 *)(a1 + 288) = a4;
      *(__n128 *)(a1 + 352) = a4;
      *(__n128 *)(a1 + 416) = a4;
      *(__n128 *)(a1 + 480) = a4;
      uint64_t result = 2;
    }
    else if (v45 == 63)
    {
      int64x2_t v46 = *(int64x2_t *)v44;
      a5 = *(int64x2_t *)(v44 + 16);
      int64x2_t v47 = (const double *)(v44 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v47);
      *(int64x2_t *)(a1 + 288) = vzip1q_s64(*(int64x2_t *)v44, a5);
      a4 = (__n128)vzip2q_s64(v46, a5);
      *(__n128 *)(a1 + 352) = a4;
      *(__n128 *)(a1 + 416) = a6;
      *(_OWORD *)(a1 + 480) = v48;
      uint64_t result = 64;
    }
    else
    {
      uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 288), 64, v44, v45, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t result = 0;
    *(void *)(a1 + 288) = 0;
    *(void *)(a1 + 296) = 0;
    *(void *)(a1 + 352) = 0;
    *(void *)(a1 + 360) = 0;
    *(void *)(a1 + 416) = 0;
    *(void *)(a1 + 424) = 0;
    *(void *)(a1 + 480) = 0;
    *(void *)(a1 + 488) = 0;
  }
  unsigned int v50 = a3[7];
  if (a3[7])
  {
    uint64_t v51 = v44 + result;
    if (v50 == 1)
    {
      int16x8_t v55 = vld1q_dup_s16((const __int16 *)v51);
      *(int16x8_t *)(a1 + 304) = v55;
      *(int16x8_t *)(a1 + 368) = v55;
      *(int16x8_t *)(a1 + 432) = v55;
      *(int16x8_t *)(a1 + 496) = v55;
    }
    else if (v50 == 63)
    {
      int64x2_t v52 = *(int64x2_t *)v51;
      int64x2_t v53 = *(int64x2_t *)(v51 + 16);
      int64x2_t v54 = (const double *)(v51 + 32);
      float64x2x2_t v57 = vld2q_f64(v54);
      *(int64x2_t *)(a1 + 304) = vzip1q_s64(*(int64x2_t *)v51, v53);
      *(int64x2_t *)(a1 + 368) = vzip2q_s64(v52, v53);
      *(float64x2_t *)(a1 + 432) = v57.val[0];
      *(float64x2_t *)(a1 + 496) = v57.val[1];
    }
    else
    {
      return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 304), 64, v51, v50, (int8x8_t)a4.n128_u64[0], *(double *)a5.i64, (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    *(void *)(a1 + 304) = 0;
    *(void *)(a1 + 312) = 0;
    *(void *)(a1 + 368) = 0;
    *(void *)(a1 + 376) = 0;
    *(void *)(a1 + 432) = 0;
    *(void *)(a1 + 440) = 0;
    *(void *)(a1 + 496) = 0;
    *(void *)(a1 + 504) = 0;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int8x16_t *a1, char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  BOOL v7 = a5 < 2 || a6 < 2;
  int64x2_t v8 = *(int64x2_t *)((char *)a3 + a4);
  int8x16_t v9 = (int8x16_t)vzip1q_s64(*a3, v8);
  int8x16_t v10 = (int8x16_t)vzip2q_s64(*a3, v8);
  int64x2_t v11 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v12 = *(int64x2_t *)((char *)v11 + a4);
  int8x16_t v13 = (int8x16_t)vzip1q_s64(*v11, v12);
  int8x16_t v14 = (int8x16_t)vzip2q_s64(*v11, v12);
  int8x16_t v15 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v9.i8, 0);
  int8x16_t v418 = v9;
  int8x16_t v16 = vsubq_s8(v9, v15);
  int8x16_t v17 = vsubq_s8(v10, v15);
  int8x16_t v18 = vsubq_s8(v13, v15);
  int8x16_t v19 = vsubq_s8(v14, v15);
  int8x16_t v20 = vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7510);
  int8x16_t v21 = vpmaxq_s8(v20, v20);
  int8x16_t v22 = vpminq_s8(v20, v20);
  int8x16_t v23 = vpmaxq_s8(v21, v21);
  int8x16_t v24 = vpminq_s8(v22, v22);
  int8x16_t v25 = vpmaxq_s8(v23, v23);
  int8x16_t v26 = vpminq_s8(v24, v24);
  v27.i64[0] = 0x8080808080808080;
  v27.i64[1] = 0x8080808080808080;
  int8x16_t v28 = vmaxq_s8(v25, v27);
  v29.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v29.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v30 = vminq_s8(v26, v29);
  int8x16_t v31 = vzip1q_s8(v25, v26);
  v32.i64[0] = 0x808080808080808;
  v32.i64[1] = 0x808080808080808;
  int8x16_t v33 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v31)), vceqzq_s8(v31));
  int8x16_t v34 = vpmaxq_s8(v33, v33);
  int8x16_t v35 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v36 = vpmaxq_s8(v35, v35);
  int8x16_t v37 = vpminq_s8(v35, v35);
  int8x16_t v38 = vpmaxq_s8(v36, v36);
  int8x16_t v39 = vpminq_s8(v37, v37);
  int8x16_t v40 = vpmaxq_s8(v38, v38);
  int8x16_t v41 = vpminq_s8(v39, v39);
  int8x16_t v42 = vmaxq_s8(v28, v40);
  int8x16_t v43 = vminq_s8(v30, v41);
  int8x16_t v44 = vzip1q_s8(v40, v41);
  int8x16_t v45 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v44)), vceqzq_s8(v44));
  int8x16_t v46 = vpmaxq_s8(v45, v45);
  int8x16_t v47 = vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7510);
  int8x16_t v48 = vpmaxq_s8(v47, v47);
  int8x16_t v49 = vpminq_s8(v47, v47);
  int8x16_t v50 = vpmaxq_s8(v48, v48);
  int8x16_t v51 = vpminq_s8(v49, v49);
  int8x16_t v52 = vpmaxq_s8(v50, v50);
  int8x16_t v53 = vpminq_s8(v51, v51);
  int8x16_t v54 = vmaxq_s8(v42, v52);
  int8x16_t v55 = vminq_s8(v43, v53);
  int8x16_t v56 = vzip1q_s8(v52, v53);
  int8x16_t v57 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v56)), vceqzq_s8(v56));
  int8x16_t v58 = vpmaxq_s8(v57, v57);
  int8x16_t v59 = vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7510);
  int8x16_t v60 = vpmaxq_s8(v59, v59);
  int8x16_t v61 = vpminq_s8(v59, v59);
  int8x16_t v62 = vpmaxq_s8(v60, v60);
  int8x16_t v63 = vpminq_s8(v61, v61);
  int8x16_t v64 = vpmaxq_s8(v62, v62);
  int8x16_t v65 = vpminq_s8(v63, v63);
  int8x16_t v66 = vmaxq_s8(v54, v64);
  int8x16_t v67 = vminq_s8(v55, v65);
  int8x16_t v68 = vzip1q_s8(v64, v65);
  int8x16_t v69 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v68)), vceqzq_s8(v68));
  int8x16_t v70 = vpmaxq_s8(v69, v69);
  int8x16_t v71 = vmaxq_s8(vmaxq_s8(v34, v46), vmaxq_s8(v58, v70));
  int8x16_t v72 = vclzq_s8(vsubq_s8(v66, v67));
  int8x16_t v73 = vsubq_s8(v32, v72);
  int8x16_t v74 = vcgtq_s8(v71, v73);
  int8x16_t v75 = vbslq_s8(v74, v73, v71);
  if (vmaxvq_s8(v75))
  {
    int8x16_t v415 = v10;
    int8x16_t v416 = v14;
    int8x16_t v417 = v13;
    v76.i64[0] = -1;
    v76.i64[1] = -1;
    v77.i64[0] = 0x707070707070707;
    v77.i64[1] = 0x707070707070707;
    int8x16_t v419 = vandq_s8(vsubq_s8(vshlq_s8(v76, vsubq_s8(v77, v72)), v67), v74);
    v78.i64[0] = 0x303030303030303;
    v78.i64[1] = 0x303030303030303;
    int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v34), v78), (int8x16_t)0);
    int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v46), v78), (int8x16_t)0);
    int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v58), v78), (int8x16_t)0);
    int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v75, v70), v78), (int8x16_t)0);
    v83.i64[0] = 0x404040404040404;
    v83.i64[1] = 0x404040404040404;
    int8x16_t v84 = vorrq_s8(vbicq_s8(v83, vceqq_s8(vaddq_s8(v82, v81), vnegq_s8(vaddq_s8(v79, v80)))), vorrq_s8(vandq_s8(vceqzq_s8(v75), v78), vandq_s8(v74, v32)));
    int8x16_t v85 = vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500));
    int8x16_t v86 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
    int8x16_t v87 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7500));
    int8x16_t v88 = vsubq_s8(v19, vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7500));
    int8x16_t v89 = vqtbl1q_s8(v85, (int8x16_t)xmmword_242EA7510);
    int8x16_t v90 = vpmaxq_s8(v89, v89);
    int8x16_t v91 = vpminq_s8(v89, v89);
    int8x16_t v92 = vpmaxq_s8(v90, v90);
    int8x16_t v93 = vpminq_s8(v91, v91);
    int8x16_t v94 = vpmaxq_s8(v92, v92);
    int8x16_t v95 = vpminq_s8(v93, v93);
    int8x16_t v96 = vmaxq_s8(v94, v27);
    int8x16_t v97 = vminq_s8(v95, v29);
    int8x16_t v98 = vzip1q_s8(v94, v95);
    int8x16_t v99 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v98)), vceqzq_s8(v98));
    int8x16_t v100 = vpmaxq_s8(v99, v99);
    int8x16_t v101 = vqtbl1q_s8(v86, (int8x16_t)xmmword_242EA7510);
    int8x16_t v102 = v19;
    int8x16_t v103 = v18;
    int8x16_t v104 = vpmaxq_s8(v101, v101);
    int8x16_t v105 = vpminq_s8(v101, v101);
    int8x16_t v106 = vpmaxq_s8(v104, v104);
    int8x16_t v107 = vpminq_s8(v105, v105);
    int8x16_t v108 = vpmaxq_s8(v106, v106);
    int8x16_t v109 = vpminq_s8(v107, v107);
    int8x16_t v110 = vmaxq_s8(v96, v108);
    int8x16_t v111 = vminq_s8(v97, v109);
    int8x16_t v112 = vzip1q_s8(v108, v109);
    int8x16_t v113 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v112)), vceqzq_s8(v112));
    int8x16_t v114 = vpmaxq_s8(v113, v113);
    int8x16_t v115 = vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7510);
    int8x16_t v116 = vpmaxq_s8(v115, v115);
    int8x16_t v117 = vpminq_s8(v115, v115);
    int8x16_t v118 = vpmaxq_s8(v116, v116);
    int8x16_t v119 = vpminq_s8(v117, v117);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vmaxq_s8(v110, v120);
    int8x16_t v123 = vminq_s8(v111, v121);
    int8x16_t v124 = vzip1q_s8(v120, v121);
    int8x16_t v125 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v124)), vceqzq_s8(v124));
    int8x16_t v126 = vpmaxq_s8(v125, v125);
    int8x16_t v127 = vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7510);
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v129 = vpminq_s8(v127, v127);
    int8x16_t v130 = vpmaxq_s8(v128, v128);
    int8x16_t v131 = vpminq_s8(v129, v129);
    int8x16_t v132 = vpmaxq_s8(v130, v130);
    int8x16_t v133 = vpminq_s8(v131, v131);
    int8x16_t v134 = vmaxq_s8(v122, v132);
    int8x16_t v135 = vminq_s8(v123, v133);
    int8x16_t v136 = vzip1q_s8(v132, v133);
    int8x16_t v137 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v136)), vceqzq_s8(v136));
    int8x16_t v138 = vpmaxq_s8(v137, v137);
    int8x16_t v139 = vmaxq_s8(vmaxq_s8(v100, v114), vmaxq_s8(v126, v138));
    int8x16_t v140 = vclzq_s8(vsubq_s8(v134, v135));
    int8x16_t v141 = vsubq_s8(v32, v140);
    int8x16_t v142 = vcgtq_s8(v139, v141);
    int8x16_t v143 = vbslq_s8(v142, v141, v139);
    v141.i64[0] = 0x1010101010101010;
    v141.i64[1] = 0x1010101010101010;
    v144.i64[0] = 0x1818181818181818;
    v144.i64[1] = 0x1818181818181818;
    int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v143), v78), vbslq_s8(v142, v144, v141));
    int16x8_t v146 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v143, v100), v78), (int8x16_t)0);
    int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v114), v78), (int8x16_t)0);
    int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v126), v78), (int8x16_t)0);
    int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v138), v78), (int8x16_t)0);
    int8x16_t v150 = vsubq_s8(v143, (int8x16_t)v146);
    int8x16_t v151 = vsubq_s8(v143, v147);
    int8x16_t v152 = vsubq_s8(v143, v148);
    int8x16_t v153 = vsubq_s8(v143, v149);
    int8x16_t v154 = vorrq_s8(v145, vbicq_s8(v83, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8((int8x16_t)v146, v147)))));
    uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
    v147.i64[0] = 0x8000800080008;
    v147.i64[1] = 0x8000800080008;
    v146.i64[0] = 0x2000200020002;
    v146.i64[1] = 0x2000200020002;
    int16x8_t v156 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v147)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v143.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v146), v147));
    int8x16_t v157 = (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v146);
    int8x16_t v158 = vsubq_s8(v75, v79);
    int8x16_t v159 = vsubq_s8(v75, v80);
    int8x16_t v160 = vsubq_s8(v75, v81);
    int8x16_t v161 = vsubq_s8(v75, v82);
    int8x16_t v162 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v75.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v84.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v84.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8(v157, v147)), v156)), 0);
    if (vaddlvq_s8(v162))
    {
      v163.i64[0] = 0x707070707070707;
      v163.i64[1] = 0x707070707070707;
      v164.i64[0] = -1;
      v164.i64[1] = -1;
      int8x16_t v15 = vbslq_s8(v162, vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7500)), v15);
      int8x16_t v16 = vbslq_s8(v162, v85, v16);
      int8x16_t v165 = vbslq_s8(v162, v86, v17);
      int8x16_t v103 = vbslq_s8(v162, v87, v103);
      int8x16_t v102 = vbslq_s8(v162, v88, v102);
      int8x16_t v158 = vbslq_s8(v162, v150, v158);
      int8x16_t v159 = vbslq_s8(v162, v151, v159);
      int8x16_t v160 = vbslq_s8(v162, v152, v160);
      int8x16_t v161 = vbslq_s8(v162, v153, v161);
      int8x16_t v166 = vbslq_s8(v162, vandq_s8(vsubq_s8(vshlq_s8(v164, vsubq_s8(v163, v140)), v135), v142), v419);
      int8x16_t v75 = vbslq_s8(v162, v143, v75);
      int8x16_t v84 = vbslq_s8(v162, v154, v84);
    }
    else
    {
      int8x16_t v166 = v419;
      int8x16_t v165 = v17;
    }
    int8x16_t v169 = v16;
    if (!v7)
    {
      int8x16_t v170 = v165;
      int8x16_t v420 = v166;
      int8x16_t v171 = v103;
      int8x16_t v172 = v102;
      int8x16_t v173 = v415;
      v173.i16[7] = v418.i16[7];
      int8x16_t v174 = vsubq_s8(v418, vqtbl1q_s8(v418, (int8x16_t)xmmword_242EA7520));
      int8x16_t v175 = vsubq_s8(v415, vqtbl1q_s8(v173, (int8x16_t)xmmword_242EA7530));
      int8x16_t v176 = v417;
      v176.i16[7] = v418.i16[7];
      int8x16_t v177 = vsubq_s8(v417, vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7540));
      int8x16_t v178 = v416;
      v178.i16[7] = v418.i16[7];
      int8x16_t v179 = vsubq_s8(v416, vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7550));
      int8x16_t v180 = v174;
      v180.i16[0] = v174.i16[7];
      v180.i16[7] = v174.i16[0];
      int8x16_t v181 = vqtbl1q_s8(v180, (int8x16_t)xmmword_242EA7510);
      int8x16_t v182 = vpmaxq_s8(v181, v181);
      int8x16_t v183 = vpminq_s8(v181, v181);
      int8x16_t v184 = vpmaxq_s8(v182, v182);
      int8x16_t v185 = vpminq_s8(v183, v183);
      int8x16_t v186 = vpmaxq_s8(v184, v184);
      int8x16_t v187 = vpminq_s8(v185, v185);
      v188.i64[0] = 0x8080808080808080;
      v188.i64[1] = 0x8080808080808080;
      int8x16_t v189 = vmaxq_s8(v186, v188);
      v188.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v188.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v190 = vminq_s8(v187, v188);
      int8x16_t v191 = vzip1q_s8(v186, v187);
      v192.i64[0] = 0x808080808080808;
      v192.i64[1] = 0x808080808080808;
      int8x16_t v193 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v191)), vceqzq_s8(v191));
      int8x16_t v194 = vpmaxq_s8(v193, v193);
      int8x16_t v195 = vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7510);
      int8x16_t v196 = vpmaxq_s8(v195, v195);
      int8x16_t v197 = vpminq_s8(v195, v195);
      int8x16_t v198 = vpmaxq_s8(v196, v196);
      int8x16_t v199 = vpminq_s8(v197, v197);
      int8x16_t v200 = vpmaxq_s8(v198, v198);
      int8x16_t v201 = vpminq_s8(v199, v199);
      int8x16_t v202 = vmaxq_s8(v189, v200);
      int8x16_t v203 = vminq_s8(v190, v201);
      int8x16_t v204 = vzip1q_s8(v200, v201);
      int8x16_t v205 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v204)), vceqzq_s8(v204));
      int8x16_t v206 = vpmaxq_s8(v205, v205);
      int8x16_t v207 = vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7510);
      int8x16_t v208 = vpmaxq_s8(v207, v207);
      int8x16_t v209 = vpminq_s8(v207, v207);
      int8x16_t v210 = vpmaxq_s8(v208, v208);
      int8x16_t v211 = vpminq_s8(v209, v209);
      int8x16_t v212 = vpmaxq_s8(v210, v210);
      int8x16_t v213 = vpminq_s8(v211, v211);
      int8x16_t v214 = vmaxq_s8(v202, v212);
      int8x16_t v215 = vminq_s8(v203, v213);
      int8x16_t v216 = vzip1q_s8(v212, v213);
      int8x16_t v217 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v216)), vceqzq_s8(v216));
      int8x16_t v218 = vpmaxq_s8(v217, v217);
      int8x16_t v219 = vqtbl1q_s8(v179, (int8x16_t)xmmword_242EA7510);
      int8x16_t v220 = vpmaxq_s8(v219, v219);
      int8x16_t v221 = vpminq_s8(v219, v219);
      int8x16_t v222 = vpmaxq_s8(v220, v220);
      int8x16_t v223 = vpminq_s8(v221, v221);
      int8x16_t v224 = vpmaxq_s8(v222, v222);
      int8x16_t v225 = vpminq_s8(v223, v223);
      int8x16_t v226 = vminq_s8(v215, v225);
      int8x16_t v227 = vzip1q_s8(v224, v225);
      int8x16_t v228 = vbicq_s8(vsubq_s8(v192, vclsq_s8(v227)), vceqzq_s8(v227));
      int8x16_t v229 = vpmaxq_s8(v228, v228);
      int8x16_t v230 = vmaxq_s8(vmaxq_s8(v194, v206), vmaxq_s8(v218, v229));
      int8x16_t v231 = vclzq_s8(vsubq_s8(vmaxq_s8(v214, v224), v226));
      int8x16_t v232 = vsubq_s8(v192, v231);
      int8x16_t v233 = vcgtq_s8(v230, v232);
      int8x16_t v234 = vbslq_s8(v233, v232, v230);
      v232.i64[0] = 0x909090909090909;
      v232.i64[1] = 0x909090909090909;
      v235.i64[0] = 0x202020202020202;
      v235.i64[1] = 0x202020202020202;
      int8x16_t v236 = vorrq_s8(vandq_s8(vceqzq_s8(v234), v235), vsubq_s8(vandq_s8(v233, v232), vmvnq_s8(v233)));
      v230.i64[0] = 0x303030303030303;
      v230.i64[1] = 0x303030303030303;
      int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v194), v230), (int8x16_t)0);
      int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v206), v230), (int8x16_t)0);
      int8x16_t v239 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v218), v230), (int8x16_t)0);
      int8x16_t v240 = vmaxq_s8(vminq_s8(vsubq_s8(v234, v229), v230), (int8x16_t)0);
      int8x16_t v241 = vsubq_s8(v234, v237);
      int8x16_t v242 = vsubq_s8(v234, v238);
      int8x16_t v243 = vsubq_s8(v234, v239);
      int8x16_t v244 = vsubq_s8(v234, v240);
      int8x16_t v245 = vceqq_s8(vaddq_s8(v240, v239), vnegq_s8(vaddq_s8(v237, v238)));
      v238.i64[0] = 0x404040404040404;
      v238.i64[1] = 0x404040404040404;
      int8x16_t v246 = vorrq_s8(v236, vbicq_s8(v238, v245));
      v247.i64[0] = 0x3000300030003;
      v247.i64[1] = 0x3000300030003;
      int8x16_t v248 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
      v240.i64[0] = 0x8000800080008;
      v240.i64[1] = 0x8000800080008;
      int16x8_t v249 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v75.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v248, v240)));
      int16x8_t v250 = (int16x8_t)vandq_s8(v248, v247);
      v247.i64[0] = 0x2000200020002;
      v247.i64[1] = 0x2000200020002;
      int8x16_t v251 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v249, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v240)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v250, (int16x8_t)v247), v240)), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vshll_n_s8(
                                                                  vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL)), vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v243.i8, *(int8x8_t *)v242.i8), *(int8x8_t *)v244.i8), 3uLL), *(int8x8_t *)v241.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v246.i8, *(int8x8_t *)v246.i8),
                                                                                          (int8x8_t)0x808080808080808)),
                                                                vbic_s8(*(int8x8_t *)v234.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v246.i8))))), 0);
      if (vaddlvq_s8(v251))
      {
        v252.i64[0] = 0x707070707070707;
        v252.i64[1] = 0x707070707070707;
        v253.i64[0] = -1;
        v253.i64[1] = -1;
        int8x16_t v254 = vsubq_s8(vshlq_s8(v253, vsubq_s8(v252, v231)), v226);
        v15.i16[0] = vbslq_s8(v251, vextq_s8(v418, v418, 0xEuLL), v15).u16[0];
        int8x16_t v169 = vbslq_s8(v251, v180, v16);
        int8x16_t v165 = vbslq_s8(v251, v175, v170);
        int8x16_t v103 = vbslq_s8(v251, v177, v171);
        int8x16_t v102 = vbslq_s8(v251, v179, v172);
        int8x16_t v158 = vbslq_s8(v251, v241, v158);
        int8x16_t v159 = vbslq_s8(v251, v242, v159);
        int8x16_t v160 = vbslq_s8(v251, v243, v160);
        int8x16_t v161 = vbslq_s8(v251, v244, v161);
        int8x16_t v166 = vbslq_s8(v251, vandq_s8(v254, v233), v420);
        int8x16_t v75 = vbslq_s8(v251, v234, v75);
        int8x16_t v84 = vbslq_s8(v251, v246, v84);
      }
      else
      {
        int8x16_t v102 = v172;
        int8x16_t v103 = v171;
        int8x16_t v166 = v420;
        int8x16_t v165 = v170;
      }
    }
    int8x16_t v255 = (int8x16_t)vmovl_s8(*(int8x8_t *)v84.i8);
    v256.i64[0] = 0x8000800080008;
    v256.i64[1] = 0x8000800080008;
    int16x8_t v257 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v75.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v255, v256)));
    v258.i64[0] = 0x3000300030003;
    v258.i64[1] = 0x3000300030003;
    int16x8_t v259 = (int16x8_t)vandq_s8(v255, v258);
    v258.i64[0] = 0x2000200020002;
    v258.i64[1] = 0x2000200020002;
    int16x8_t v260 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v84.i8, 1uLL), v256)), v257), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v259, (int16x8_t)v258), v256));
    if ((unint64_t)(vpaddq_s16(v260, v260).i16[0] + 37) >= 0x200)
    {
      *a1 = v418;
      a1[1] = v415;
      char v167 = 63;
      unint64_t v168 = 64;
      a1[2] = v417;
      a1[3] = v416;
    }
    else
    {
      uint64_t v261 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v262 = 8 * (a1 & 7);
      if (v262) {
        uint64_t v263 = *v261 & ~(-1 << v262);
      }
      else {
        uint64_t v263 = 0;
      }
      unint64_t v264 = (unint64_t)((v75.i8[0] - 1) & 7) << 10;
      if (!v75.i8[0]) {
        unint64_t v264 = 0;
      }
      if (v75.i8[1]) {
        uint64_t v265 = (unsigned __int16)((v75.u8[1] << 13) - 0x2000) & 0xE000;
      }
      else {
        uint64_t v265 = 0;
      }
      *a2 = v84.i8[0] << 6;
      unint64_t v266 = ((v264 | v265) & 0xFFFFFFFFFFFFFC1FLL | v84.i8[0] & 0x1C | (32 * (v84.i8[1] & 0x1F))) >> 2;
      unint64_t v267 = v263 | (v266 << v262);
      if (v262 >= 0x32)
      {
        *uint64_t v261 = v267;
        unint64_t v267 = v266 >> (-8 * (a1 & 7u));
      }
      unint64_t v268 = (v262 + 14) & 0x3E;
      unint64_t v269 = v267 | ((unint64_t)v15.u16[0] << v268);
      if (v268 >= 0x30)
      {
        *(void *)((char *)v261 + (((v262 + 14) >> 3) & 8)) = v269;
        unint64_t v269 = (unint64_t)v15.u16[0] >> -(char)v268;
      }
      unint64_t v270 = v262 + 30;
      int8x16_t v271 = vsubq_s8(v75, v158);
      int8x16_t v272 = vsubq_s8(v75, v159);
      int8x16_t v273 = vsubq_s8(v75, v160);
      int8x16_t v274 = vsubq_s8(v75, v161);
      v271.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v271, v272), (int16x8_t)vzip1q_s8(v273, v274)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v271, v272), (int16x8_t)vtrn2q_s8(v273, v274))).u64[0];
      v273.i64[0] = 0x202020202020202;
      v273.i64[1] = 0x202020202020202;
      int8x16_t v275 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v84.i8), (int8x8_t)0x4000400040004)))), v273);
      v273.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v273.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v274.i64[0] = -1;
      v274.i64[1] = -1;
      uint8x16_t v276 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v274, (uint8x16_t)vorrq_s8(v275, v273)), (int8x16_t)v271.u64[0]);
      int16x8_t v277 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v275.i8);
      uint16x8_t v278 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v276.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v277)), (int16x8_t)vmovl_high_u8(v276));
      uint16x8_t v279 = (uint16x8_t)vpaddq_s16(v277, (int16x8_t)vmovl_high_u8((uint8x16_t)v275));
      int32x4_t v280 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v279.i8);
      int32x4_t v281 = (int32x4_t)vmovl_high_u16(v279);
      int32x4_t v282 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v278.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v280)), (int32x4_t)vshlq_u32(vmovl_high_u16(v278), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v281)));
      int32x4_t v283 = vpaddq_s32(v280, v281);
      v284.i64[0] = v282.u32[0];
      v284.i64[1] = v282.u32[1];
      uint64x2_t v285 = (uint64x2_t)v284;
      v284.i64[0] = v282.u32[2];
      v284.i64[1] = v282.u32[3];
      uint64x2_t v286 = (uint64x2_t)v284;
      v284.i64[0] = v283.u32[0];
      v284.i64[1] = v283.u32[1];
      int64x2_t v287 = v284;
      v284.i64[0] = v283.u32[2];
      v284.i64[1] = v283.u32[3];
      int64x2_t v288 = vpaddq_s64((int64x2_t)vshlq_u64(v285, (uint64x2_t)vzip1q_s64((int64x2_t)0, v287)), (int64x2_t)vshlq_u64(v286, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)));
      int64x2_t v289 = vpaddq_s64(v287, v284);
      uint64_t v290 = (v262 + 30) & 0x3E;
      unint64_t v291 = (v288.i64[0] << v290) | v269;
      if ((unint64_t)(v289.i64[0] + v290) >= 0x40)
      {
        *(void *)((char *)v261 + ((v270 >> 3) & 8)) = v291;
        unint64_t v291 = (unint64_t)v288.i64[0] >> -(char)v290;
      }
      int8x16_t v292 = vceqq_s8(v75, v158);
      unint64_t v293 = v289.i64[0] + v270;
      unint64_t v294 = v291 | (v288.i64[1] << v293);
      if ((v293 & 0x3F) + v289.i64[1] >= 0x40)
      {
        *(void *)((char *)v261 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v294;
        unint64_t v294 = (unint64_t)v288.i64[1] >> -(v293 & 0x3F);
        if ((v293 & 0x3F) == 0) {
          unint64_t v294 = 0;
        }
      }
      int8x16_t v295 = vandq_s8(v166, v292);
      unint64_t v296 = v293 + v289.i64[1];
      v297.i64[0] = 0x808080808080808;
      v297.i64[1] = 0x808080808080808;
      v298.i64[0] = -1;
      v298.i64[1] = -1;
      int8x16_t v299 = vandq_s8(vextq_s8(vtstq_s8(v84, v297), (int8x16_t)0, 0xEuLL), v75);
      v300.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v300.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v301 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v298, (uint8x16_t)vaddq_s8(v299, v300)), v166);
      int16x8_t v302 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v299.i8);
      uint16x8_t v303 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v301.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v302)), (int16x8_t)vmovl_high_u8(v301));
      uint16x8_t v304 = (uint16x8_t)vpaddq_s16(v302, (int16x8_t)vmovl_high_u8((uint8x16_t)v299));
      int32x4_t v305 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v304.i8);
      int32x4_t v306 = (int32x4_t)vmovl_high_u16(v304);
      int32x4_t v307 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v303.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v305)), (int32x4_t)vshlq_u32(vmovl_high_u16(v303), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v306)));
      int32x4_t v308 = vpaddq_s32(v305, v306);
      v309.i64[0] = v307.u32[0];
      v309.i64[1] = v307.u32[1];
      uint64x2_t v310 = (uint64x2_t)v309;
      v309.i64[0] = v307.u32[2];
      v309.i64[1] = v307.u32[3];
      uint64x2_t v311 = (uint64x2_t)v309;
      v309.i64[0] = v308.u32[0];
      v309.i64[1] = v308.u32[1];
      int64x2_t v312 = v309;
      v309.i64[0] = v308.u32[2];
      v309.i64[1] = v308.u32[3];
      int64x2_t v313 = vpaddq_s64((int64x2_t)vshlq_u64(v310, (uint64x2_t)vzip1q_s64((int64x2_t)0, v312)), (int64x2_t)vshlq_u64(v311, (uint64x2_t)vzip1q_s64((int64x2_t)0, v309)));
      int64x2_t v314 = vpaddq_s64(v312, v309);
      unint64_t v315 = (v313.i64[0] << v296) | v294;
      if (v314.i64[0] + (v296 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v261 + ((v296 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v315;
        unint64_t v315 = (unint64_t)v313.i64[0] >> -(v296 & 0x3F);
        if ((v296 & 0x3F) == 0) {
          unint64_t v315 = 0;
        }
      }
      int8x16_t v316 = vceqq_s8(v75, v159);
      int8x16_t v317 = vaddq_s8(v295, v169);
      unint64_t v318 = v314.i64[0] + v296;
      unint64_t v319 = v315 | (v313.i64[1] << v318);
      if ((v318 & 0x3F) + v314.i64[1] >= 0x40)
      {
        *(void *)((char *)v261 + ((v318 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v319;
        unint64_t v319 = (unint64_t)v313.i64[1] >> -(v318 & 0x3F);
        if ((v318 & 0x3F) == 0) {
          unint64_t v319 = 0;
        }
      }
      int8x16_t v320 = vandq_s8(v166, v316);
      unint64_t v321 = v318 + v314.i64[1];
      int8x16_t v322 = vextq_s8((int8x16_t)0, v158, 0xEuLL);
      v323.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v323.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v324.i64[0] = -1;
      v324.i64[1] = -1;
      uint8x16_t v325 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v324, (uint8x16_t)vaddq_s8(v322, v323)), v317);
      int16x8_t v326 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v322.i8);
      int16x8_t v327 = (int16x8_t)vmovl_high_u8((uint8x16_t)v322);
      uint16x8_t v328 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v325.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v326)), (int16x8_t)vshlq_u16(vmovl_high_u8(v325), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v327)));
      uint16x8_t v329 = (uint16x8_t)vpaddq_s16(v326, v327);
      int32x4_t v330 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v329.i8);
      int32x4_t v331 = (int32x4_t)vmovl_high_u16(v329);
      int32x4_t v332 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v328.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)), (int32x4_t)vshlq_u32(vmovl_high_u16(v328), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)));
      int32x4_t v333 = vpaddq_s32(v330, v331);
      v334.i64[0] = v332.u32[0];
      v334.i64[1] = v332.u32[1];
      uint64x2_t v335 = (uint64x2_t)v334;
      v334.i64[0] = v332.u32[2];
      v334.i64[1] = v332.u32[3];
      uint64x2_t v336 = (uint64x2_t)v334;
      v334.i64[0] = v333.u32[0];
      v334.i64[1] = v333.u32[1];
      int64x2_t v337 = v334;
      v334.i64[0] = v333.u32[2];
      v334.i64[1] = v333.u32[3];
      int64x2_t v338 = vpaddq_s64((int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v337)), (int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)));
      int64x2_t v339 = vpaddq_s64(v337, v334);
      unint64_t v340 = (v338.i64[0] << v321) | v319;
      if (v339.i64[0] + (v321 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v261 + ((v321 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v340;
        unint64_t v340 = (unint64_t)v338.i64[0] >> -(v321 & 0x3F);
        if ((v321 & 0x3F) == 0) {
          unint64_t v340 = 0;
        }
      }
      int8x16_t v341 = vceqq_s8(v75, v160);
      int8x16_t v342 = vaddq_s8(v165, v320);
      unint64_t v343 = v339.i64[0] + v321;
      unint64_t v344 = v340 | (v338.i64[1] << v343);
      if ((v343 & 0x3F) + v339.i64[1] >= 0x40)
      {
        *(void *)((char *)v261 + ((v343 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v344;
        unint64_t v344 = (unint64_t)v338.i64[1] >> -(v343 & 0x3F);
        if ((v343 & 0x3F) == 0) {
          unint64_t v344 = 0;
        }
      }
      int8x16_t v345 = vandq_s8(v166, v341);
      unint64_t v346 = v343 + v339.i64[1];
      v347.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v347.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v348.i64[0] = -1;
      v348.i64[1] = -1;
      uint8x16_t v349 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v348, (uint8x16_t)vaddq_s8(v159, v347)), v342);
      int16x8_t v350 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
      int16x8_t v351 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
      uint16x8_t v352 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v349.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v350)), (int16x8_t)vshlq_u16(vmovl_high_u8(v349), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v351)));
      uint16x8_t v353 = (uint16x8_t)vpaddq_s16(v350, v351);
      int32x4_t v354 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v353.i8);
      int32x4_t v355 = (int32x4_t)vmovl_high_u16(v353);
      int32x4_t v356 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v352.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)), (int32x4_t)vshlq_u32(vmovl_high_u16(v352), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)));
      int32x4_t v357 = vpaddq_s32(v354, v355);
      v358.i64[0] = v356.u32[0];
      v358.i64[1] = v356.u32[1];
      uint64x2_t v359 = (uint64x2_t)v358;
      v358.i64[0] = v356.u32[2];
      v358.i64[1] = v356.u32[3];
      uint64x2_t v360 = (uint64x2_t)v358;
      v358.i64[0] = v357.u32[0];
      v358.i64[1] = v357.u32[1];
      int64x2_t v361 = v358;
      v358.i64[0] = v357.u32[2];
      v358.i64[1] = v357.u32[3];
      int64x2_t v362 = vpaddq_s64((int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v361)), (int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v358)));
      int64x2_t v363 = vpaddq_s64(v361, v358);
      unint64_t v364 = (v362.i64[0] << v346) | v344;
      if (v363.i64[0] + (v346 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v261 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v364;
        unint64_t v364 = (unint64_t)v362.i64[0] >> -(v346 & 0x3F);
        if ((v346 & 0x3F) == 0) {
          unint64_t v364 = 0;
        }
      }
      int8x16_t v365 = vceqq_s8(v75, v161);
      int8x16_t v366 = vaddq_s8(v103, v345);
      unint64_t v367 = v363.i64[0] + v346;
      unint64_t v368 = v364 | (v362.i64[1] << v367);
      if ((v367 & 0x3F) + v363.i64[1] >= 0x40)
      {
        *(void *)((char *)v261 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        unint64_t v368 = (unint64_t)v362.i64[1] >> -(v367 & 0x3F);
        if ((v367 & 0x3F) == 0) {
          unint64_t v368 = 0;
        }
      }
      int8x16_t v369 = vandq_s8(v166, v365);
      unint64_t v370 = v367 + v363.i64[1];
      v371.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v371.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v372.i64[0] = -1;
      v372.i64[1] = -1;
      uint8x16_t v373 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v372, (uint8x16_t)vaddq_s8(v160, v371)), v366);
      int16x8_t v374 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v160.i8);
      int16x8_t v375 = (int16x8_t)vmovl_high_u8((uint8x16_t)v160);
      uint16x8_t v376 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v373.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v374)), (int16x8_t)vshlq_u16(vmovl_high_u8(v373), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v375)));
      uint16x8_t v377 = (uint16x8_t)vpaddq_s16(v374, v375);
      int32x4_t v378 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v377.i8);
      int32x4_t v379 = (int32x4_t)vmovl_high_u16(v377);
      int32x4_t v380 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v376.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v378)), (int32x4_t)vshlq_u32(vmovl_high_u16(v376), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v379)));
      int32x4_t v381 = vpaddq_s32(v378, v379);
      v382.i64[0] = v380.u32[0];
      v382.i64[1] = v380.u32[1];
      uint64x2_t v383 = (uint64x2_t)v382;
      v382.i64[0] = v380.u32[2];
      v382.i64[1] = v380.u32[3];
      uint64x2_t v384 = (uint64x2_t)v382;
      v382.i64[0] = v381.u32[0];
      v382.i64[1] = v381.u32[1];
      int64x2_t v385 = v382;
      v382.i64[0] = v381.u32[2];
      v382.i64[1] = v381.u32[3];
      int64x2_t v386 = vpaddq_s64((int64x2_t)vshlq_u64(v383, (uint64x2_t)vzip1q_s64((int64x2_t)0, v385)), (int64x2_t)vshlq_u64(v384, (uint64x2_t)vzip1q_s64((int64x2_t)0, v382)));
      int64x2_t v387 = vpaddq_s64(v385, v382);
      unint64_t v388 = (v386.i64[0] << v370) | v368;
      if (v387.i64[0] + (v370 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v261 + ((v370 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v388;
        unint64_t v388 = (unint64_t)v386.i64[0] >> -(v370 & 0x3F);
        if ((v370 & 0x3F) == 0) {
          unint64_t v388 = 0;
        }
      }
      int8x16_t v389 = vaddq_s8(v102, v369);
      unint64_t v390 = v387.i64[0] + v370;
      unint64_t v391 = v388 | (v386.i64[1] << v390);
      if ((v390 & 0x3F) + v387.i64[1] >= 0x40)
      {
        *(void *)((char *)v261 + ((v390 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v391;
        unint64_t v391 = (unint64_t)v386.i64[1] >> -(v390 & 0x3F);
        if ((v390 & 0x3F) == 0) {
          unint64_t v391 = 0;
        }
      }
      unint64_t v392 = v390 + v387.i64[1];
      v393.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v393.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v394.i64[0] = -1;
      v394.i64[1] = -1;
      uint8x16_t v395 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v394, (uint8x16_t)vaddq_s8(v161, v393)), v389);
      int16x8_t v396 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v161.i8);
      int16x8_t v397 = (int16x8_t)vmovl_high_u8((uint8x16_t)v161);
      uint16x8_t v398 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v395.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v396)), (int16x8_t)vshlq_u16(vmovl_high_u8(v395), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v397)));
      uint16x8_t v399 = (uint16x8_t)vpaddq_s16(v396, v397);
      int32x4_t v400 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v399.i8);
      int32x4_t v401 = (int32x4_t)vmovl_high_u16(v399);
      int32x4_t v402 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v398.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v400)), (int32x4_t)vshlq_u32(vmovl_high_u16(v398), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v401)));
      int32x4_t v403 = vpaddq_s32(v400, v401);
      v404.i64[0] = v402.u32[0];
      v404.i64[1] = v402.u32[1];
      uint64x2_t v405 = (uint64x2_t)v404;
      v404.i64[0] = v402.u32[2];
      v404.i64[1] = v402.u32[3];
      uint64x2_t v406 = (uint64x2_t)v404;
      v404.i64[0] = v403.u32[0];
      v404.i64[1] = v403.u32[1];
      int64x2_t v407 = v404;
      v404.i64[0] = v403.u32[2];
      v404.i64[1] = v403.u32[3];
      int64x2_t v408 = vpaddq_s64((int64x2_t)vshlq_u64(v405, (uint64x2_t)vzip1q_s64((int64x2_t)0, v407)), (int64x2_t)vshlq_u64(v406, (uint64x2_t)vzip1q_s64((int64x2_t)0, v404)));
      int64x2_t v409 = vpaddq_s64(v407, v404);
      unint64_t v410 = (v408.i64[0] << v392) | v391;
      if (v409.i64[0] + (v392 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v261 + ((v392 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v410;
        if ((v392 & 0x3F) != 0) {
          unint64_t v410 = (unint64_t)v408.i64[0] >> -(v392 & 0x3F);
        }
        else {
          unint64_t v410 = 0;
        }
      }
      unint64_t v411 = v409.i64[0] + v392;
      unint64_t v412 = v410 | (v408.i64[1] << v411);
      if ((v411 & 0x3F) + v409.i64[1] >= 0x40)
      {
        *(void *)((char *)v261 + ((v411 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v412;
        unint64_t v412 = (unint64_t)v408.i64[1] >> -(v411 & 0x3F);
        if ((v411 & 0x3F) == 0) {
          unint64_t v412 = 0;
        }
      }
      unint64_t v413 = v411 + v409.i64[1];
      if ((v413 & 0x3F) != 0) {
        *(void *)((char *)v261 + ((v413 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v412;
      }
      unint64_t v168 = (v413 - v262 + 7) >> 3;
      char v167 = *a2 | (v168 - 1);
    }
  }
  else
  {
    a1->i16[0] = a3->i16[0];
    char v167 = 1;
    unint64_t v168 = 2;
  }
  *a2 = v167;
  return v168;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x16_t *a3, char *a4, int a5, int a6)
{
  int8x16_t v9 = a3;
  int64x2_t v11 = (int64x2_t *)result;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v12, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  int8x16_t v14 = a4 + 1;
  if (a5 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 4;
  if (v16 >= 4) {
    int v17 = 4;
  }
  else {
    int v17 = v16;
  }
  if (v17) {
    BOOL v18 = v13 == 0;
  }
  else {
    BOOL v18 = 1;
  }
  if (v18)
  {
    *int8x16_t v14 = 0;
  }
  else
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 1, a2, v17, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  uint64_t v19 = 4 * a2;
  int8x16_t v20 = a4 + 2;
  if (a6 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a6;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v12 && v23)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v20, (int64x2_t *)((char *)v11 + v19), a2, v12, v23);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v24 = a4 + 3;
    if (!v17) {
      goto LABEL_36;
    }
  }
  else
  {
    *int8x16_t v20 = 0;
    int8x16_t v24 = a4 + 3;
    if (!v17) {
      goto LABEL_36;
    }
  }
  if (v23)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int64x2_t *)((char *)v11 + v19 + 16), a2, v17, v23);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_37;
  }
LABEL_36:
  *int8x16_t v24 = 0;
LABEL_37:
  int8x16_t v25 = a4 + 4;
  if (a5 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a5;
  }
  unsigned int v27 = v26 - 8;
  if (v27 >= 4) {
    int v28 = 4;
  }
  else {
    int v28 = v27;
  }
  if (v28 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v25, v11 + 2, a2, v28, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int8x16_t v25 = 0;
  }
  int8x16_t v29 = a4 + 5;
  if (a5 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a5;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v32 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v29, v11 + 3, a2, v32, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v33 = a4 + 6;
    if (!v28) {
      goto LABEL_61;
    }
  }
  else
  {
    *int8x16_t v29 = 0;
    int8x16_t v33 = a4 + 6;
    if (!v28) {
      goto LABEL_61;
    }
  }
  if (v23)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int64x2_t *)((char *)v11 + v19 + 32), a2, v28, v23);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v34 = a4 + 7;
    if (!v32) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  char *v33 = 0;
  int8x16_t v34 = a4 + 7;
  if (!v32)
  {
LABEL_66:
    *int8x16_t v34 = 0;
    return result;
  }
LABEL_62:
  if (!v23) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v34, (int64x2_t *)((char *)v11 + v19 + 48), a2, v32, v23);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int8x16_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7 + 14;
  uint64_t v10 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x33) {
    v10 |= *(void *)(v8 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v11 = 4 * v10;
  uint32x2_t v12 = (uint32x2_t)vdup_n_s32(v11);
  a5.i32[0] = v11;
  a7.i32[0] = a4 >> 6;
  v13.i32[0] = vorr_s8(a5, a7).u32[0];
  v13.i32[1] = vshr_n_u32(v12, 5uLL).i32[1];
  int16x4_t v14 = (int16x4_t)vand_s8(v13, (int8x8_t)0x1F0000001FLL);
  v14.i8[1] = v14.i8[4];
  int16x4_t v15 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v12, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v15.i8[1] = v15.i8[4];
  unint64_t v16 = v7 + 30;
  unint64_t v17 = v9 >> 6;
  unint64_t v18 = v9 & 0x3E;
  uint64_t v19 = *(void *)(v8 + 8 * v17) >> v18;
  if (v18 >= 0x31) {
    v19 |= *(void *)(v8 + 8 * v17 + 8) << -(char)v18;
  }
  unint64_t v20 = (8 * (a3 & 7)) | 0x200;
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(v14, 0);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(v15, 0);
  v23.i64[0] = 0x303030303030303;
  v23.i64[1] = 0x303030303030303;
  int8x16_t v24 = vandq_s8(v21, v23);
  int8x16_t v25 = vbicq_s8(v22, vceqq_s8(v24, v23));
  v23.i64[0] = 0x202020202020202;
  v23.i64[1] = 0x202020202020202;
  int8x16_t v26 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v21.i8), (int8x8_t)0x4000400040004)))), v23);
  if (vmaxvq_s8(v26) < 1)
  {
    int v36 = 0;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    int8x16_t v38 = v25;
    int8x16_t v39 = v25;
    int8x16_t v40 = v25;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = v25;
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v44.i64[0] = -1;
    v44.i64[1] = -1;
  }
  else
  {
    int16x8_t v27 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v26, v26));
    int32x4_t v28 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v27, v27));
    unint64_t v29 = vpaddq_s32(v28, v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    int64x2_t v31 = v30;
    unint64_t v32 = vaddvq_s64(v30);
    unint64_t v33 = v32 + v16;
    if (v32 <= 0x80 && v20 >= v33)
    {
      unint64_t v45 = v16 & 0x3E;
      int64x2_t v46 = vaddq_s64(vzip1q_s64((int64x2_t)0, v31), vdupq_n_s64(v45));
      int8x16_t v47 = (int64x2_t *)(v8 + ((v16 >> 3) & 8));
      int32x4_t v35 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v47, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47->i64[0], 0), (uint64x2_t)vnegq_s64(v46)));
      if (v32 + v45 < 0x81)
      {
        int v36 = 0;
      }
      else
      {
        int v36 = 0;
        int32x4_t v35 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v47[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v46))), (int8x16_t)v35);
      }
      unint64_t v16 = v33;
    }
    else
    {
      int32x4_t v35 = 0uLL;
      int v36 = 1;
    }
    int32x2_t v48 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
    v49.i64[0] = v48.u32[0];
    v49.i64[1] = v48.u32[1];
    int32x4_t v50 = (int32x4_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vnegq_s64(v49));
    *(int32x2_t *)v35.i8 = vmovn_s64((int64x2_t)v35);
    *(int32x2_t *)v50.i8 = vmovn_s64((int64x2_t)v50);
    int16x8_t v51 = (int16x8_t)vzip1q_s32(v35, v50);
    int16x8_t v52 = (int16x8_t)vshlq_u32((uint32x4_t)v51, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL)))));
    *(int16x4_t *)v51.i8 = vmovn_s32((int32x4_t)v51);
    *(int16x4_t *)v52.i8 = vmovn_s32((int32x4_t)v52);
    int16x8_t v53 = vzip1q_s16(v51, v52);
    *(int8x8_t *)v53.i8 = vzip1_s8(vmovn_s16(v53), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v53, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v26.i8, *(int8x8_t *)v21.i8))))));
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    int8x16_t v54 = vshlq_s8((int8x16_t)v51, v26);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54.i64[0] = vqtbl1q_s8(vandq_s8((int8x16_t)v53, vaddq_s8(v54, (int8x16_t)v51)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v55 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 1);
    int8x16_t v57 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 2);
    int8x16_t v58 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 3);
    int8x16_t v42 = vsubq_s8(v25, v55);
    int8x16_t v38 = vsubq_s8(v25, v56);
    int8x16_t v39 = vsubq_s8(v25, v57);
    int8x16_t v40 = vsubq_s8(v25, v58);
    int8x16_t v44 = vceqzq_s8(v55);
    int8x16_t v43 = vceqzq_s8(v56);
    int8x16_t v41 = vceqzq_s8(v57);
    int8x16_t v37 = vceqzq_s8(v58);
  }
  v59.i64[0] = 0x808080808080808;
  v59.i64[1] = 0x808080808080808;
  int32x4_t v60 = 0uLL;
  int8x16_t v61 = vandq_s8(vextq_s8(vtstq_s8(v21, v59), (int8x16_t)0, 0xEuLL), v25);
  int16x8_t v62 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v61, v61));
  int32x4_t v63 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v62, v62));
  unint64_t v64 = vpaddq_s32(v63, v63).u64[0];
  v65.i64[0] = v64;
  v65.i64[1] = HIDWORD(v64);
  int64x2_t v66 = v65;
  unint64_t v67 = vaddvq_s64(v65);
  unint64_t v68 = v67 + v16;
  if (v67 <= 0x80 && v20 >= v68)
  {
    unint64_t v70 = v16 & 0x3F;
    int64x2_t v71 = vaddq_s64(vzip1q_s64((int64x2_t)0, v66), vdupq_n_s64(v70));
    int8x16_t v72 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v60 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v72, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72->i64[0], 0), (uint64x2_t)vnegq_s64(v71)));
    if (v67 + v70 >= 0x81) {
      int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), (int8x16_t)v60);
    }
    unint64_t v16 = v68;
  }
  else
  {
    int v36 = 1;
  }
  int v73 = v21.i8[0] & 3;
  if (v73 == 2)
  {
    BOOL v74 = v20 >= v16 + 4;
    if (v20 >= v16 + 4) {
      v16 += 4;
    }
    unint64_t v75 = v16 + 4;
    if (!v74 || v20 < v75) {
      int v36 = 1;
    }
    if (v20 >= v75) {
      v16 += 4;
    }
  }
  int32x4_t v77 = 0uLL;
  int8x16_t v78 = vextq_s8((int8x16_t)0, v42, 0xEuLL);
  int16x8_t v79 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v78, v78));
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v79, v79));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v84 + v16;
  if (v84 <= 0x80 && v20 >= v85)
  {
    unint64_t v88 = v16 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v88));
    int8x16_t v90 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v87 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v84 + v88 >= 0x81) {
      int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v87);
    }
    unint64_t v16 = v85;
  }
  else
  {
    int v36 = 1;
    int32x4_t v87 = 0uLL;
  }
  int16x8_t v91 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v38, v38));
  int32x4_t v92 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v91, v91));
  unint64_t v93 = vpaddq_s32(v92, v92).u64[0];
  v94.i64[0] = v93;
  v94.i64[1] = HIDWORD(v93);
  int64x2_t v95 = v94;
  unint64_t v96 = vaddvq_s64(v94);
  if (v96 < 0x81)
  {
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v92.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v92, (int8x16_t)v92, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = v98;
    int32x4_t v100 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v91.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL)));
    int16x8_t v101 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)));
    unint64_t v102 = v96 + v16;
    if (v20 >= v96 + v16)
    {
      unint64_t v103 = v16 & 0x3F;
      int64x2_t v104 = vaddq_s64(vzip1q_s64((int64x2_t)0, v95), vdupq_n_s64(v103));
      int8x16_t v105 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
      if (v96 + v103 >= 0x81) {
        int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), (int8x16_t)v77);
      }
      unint64_t v16 = v102;
    }
    else
    {
      int v36 = 1;
    }
    int32x4_t v106 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v99));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v106.i8 = vmovn_s64((int64x2_t)v106);
    int16x8_t v107 = (int16x8_t)vzip1q_s32(v77, v106);
    int16x8_t v108 = (int16x8_t)vshlq_u32((uint32x4_t)v107, (uint32x4_t)vnegq_s32(v100));
    *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v107);
    *(int16x4_t *)v108.i8 = vmovn_s32((int32x4_t)v108);
    int16x8_t v109 = vzip1q_s16(v107, v108);
    int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)v109, (uint16x8_t)vnegq_s16(v101));
    *(int8x8_t *)v109.i8 = vmovn_s16(v109);
    *(int8x8_t *)v110.i8 = vmovn_s16(v110);
    int32x4_t v77 = (int32x4_t)vzip1q_s8((int8x16_t)v109, (int8x16_t)v110);
  }
  else
  {
    int v36 = 1;
  }
  int16x8_t v111 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v39, v39));
  int32x4_t v112 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v111, v111));
  unint64_t v113 = vpaddq_s32(v112, v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v116 <= 0x80)
  {
    int32x2_t v118 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v112, (int8x16_t)v112, 8uLL));
    v119.i64[0] = v118.u32[0];
    v119.i64[1] = v118.u32[1];
    int64x2_t v120 = v119;
    int32x4_t v121 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL)));
    int16x8_t v122 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)));
    unint64_t v123 = v116 + v16;
    if (v20 >= v116 + v16)
    {
      unint64_t v125 = v16 & 0x3F;
      int64x2_t v126 = vaddq_s64(vzip1q_s64((int64x2_t)0, v115), vdupq_n_s64(v125));
      int8x16_t v127 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v124 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
      if (v116 + v125 >= 0x81) {
        int32x4_t v124 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), (int8x16_t)v124);
      }
      unint64_t v16 = v123;
    }
    else
    {
      int32x4_t v124 = 0uLL;
      int v36 = 1;
    }
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vnegq_s64(v120));
    *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    int16x8_t v129 = (int16x8_t)vzip1q_s32(v124, v128);
    int16x8_t v130 = (int16x8_t)vshlq_u32((uint32x4_t)v129, (uint32x4_t)vnegq_s32(v121));
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    int16x8_t v131 = vzip1q_s16(v129, v130);
    int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)v131, (uint16x8_t)vnegq_s16(v122));
    *(int8x8_t *)v131.i8 = vmovn_s16(v131);
    *(int8x8_t *)v132.i8 = vmovn_s16(v132);
    int8x16_t v117 = vzip1q_s8((int8x16_t)v131, (int8x16_t)v132);
  }
  else
  {
    int v36 = 1;
    int8x16_t v117 = 0uLL;
  }
  int16x8_t v133 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v40, v40));
  int32x4_t v134 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v133, v133));
  unint64_t v135 = vpaddq_s32(v134, v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  if (v138 > 0x80 || v20 < v138 + v16) {
    goto LABEL_65;
  }
  int64x2_t v139 = vaddq_s64(vzip1q_s64((int64x2_t)0, v137), vdupq_n_s64(v16 & 0x3F));
  int8x16_t v140 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
  int64x2_t v141 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
  if (v138 + (v16 & 0x3F) >= 0x81) {
    int64x2_t v141 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), (int8x16_t)v141);
  }
  if (v36 || (uint64_t v142 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v142) - (v138 + v16) >= 9))
  {
LABEL_65:
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v202;
LABEL_66:
    *(void *)(v143 & 0xFFFFFFFFFFFFFFF8) |= 255 << ((8 * v143) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
    return v142;
  }
  if (v73 == 2)
  {
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v203;
    goto LABEL_66;
  }
  int32x2_t v145 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL));
  int32x2_t v146 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
  v147.i64[0] = v145.u32[0];
  v147.i64[1] = v145.u32[1];
  int64x2_t v148 = v147;
  v147.i64[0] = v146.u32[0];
  v147.i64[1] = v146.u32[1];
  int16x4_t v149 = (int16x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL).u64[0];
  int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v60, (uint64x2_t)vnegq_s64(v148));
  int32x4_t v151 = (int32x4_t)vshlq_u64((uint64x2_t)v87, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v60.i8 = vmovn_s64((int64x2_t)v60);
  *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
  *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
  *(int32x2_t *)v151.i8 = vmovn_s64((int64x2_t)v151);
  int16x8_t v152 = (int16x8_t)vzip1q_s32(v60, v150);
  int16x8_t v153 = (int16x8_t)vzip1q_s32(v87, v151);
  int16x8_t v154 = (int16x8_t)vshlq_u32((uint32x4_t)v152, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL)))));
  int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v153, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, v149))));
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
  *(int16x4_t *)v153.i8 = vmovn_s32((int32x4_t)v153);
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  int16x8_t v156 = vzip1q_s16(v152, v154);
  int16x8_t v157 = vzip1q_s16(v153, v155);
  int16x8_t v158 = (int16x8_t)vshlq_u16((uint16x8_t)v156, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
  int16x8_t v159 = (int16x8_t)vshlq_u16((uint16x8_t)v157, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int8x8_t *)v156.i8 = vmovn_s16(v156);
  *(int8x8_t *)v158.i8 = vmovn_s16(v158);
  *(int8x8_t *)v157.i8 = vmovn_s16(v157);
  *(int8x8_t *)v159.i8 = vmovn_s16(v159);
  v149.i32[0] = v19;
  v160.i64[0] = 0x808080808080808;
  v160.i64[1] = 0x808080808080808;
  int8x16_t v161 = vzip1q_s8((int8x16_t)v156, (int8x16_t)v158);
  v158.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v158.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v162 = vsubq_s8(v59, v61);
  int8x16_t v163 = vzip1q_s8((int8x16_t)v157, (int8x16_t)v159);
  v159.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v159.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v153.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v134, (int8x16_t)v134, 8uLL));
  v164.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v164.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v165.i64[0] = 0x808080808080808;
  v165.i64[1] = 0x808080808080808;
  v149.i8[1] = BYTE1(v19);
  int8x16_t v166 = vaddq_s8(v61, (int8x16_t)v158);
  int32x4_t v167 = (int32x4_t)vshlq_s8(v163, vsubq_s8(v160, v78));
  int8x16_t v168 = vshlq_s8(v117, vsubq_s8(v160, v39));
  v147.i64[0] = v153.u32[0];
  v147.i64[1] = v153.u32[1];
  int16x8_t v169 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v40.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
  int8x16_t v170 = vaddq_s8(v40, v164);
  int8x16_t v171 = vsubq_s8(v165, v40);
  int8x16_t v172 = (int8x16_t)vdupq_lane_s16(v149, 0);
  int8x16_t v173 = vshlq_s8(vshlq_s8(v161, v162), v166);
  int8x16_t v174 = vshlq_s8((int8x16_t)v167, vaddq_s8(v78, (int8x16_t)v159));
  int32x4_t v175 = (int32x4_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v167.i8 = vmovn_s64(v141);
  *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
  int16x8_t v176 = (int16x8_t)vzip1q_s32(v167, v175);
  int16x8_t v177 = (int16x8_t)vshlq_u32((uint32x4_t)v176, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v133, (int8x16_t)v133, 8uLL)))));
  *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
  *(int16x4_t *)v177.i8 = vmovn_s32((int32x4_t)v177);
  int16x8_t v178 = vzip1q_s16(v176, v177);
  int16x8_t v179 = (int16x8_t)vshlq_u16((uint16x8_t)v178, (uint16x8_t)vnegq_s16(v169));
  *(int8x8_t *)v178.i8 = vmovn_s16(v178);
  *(int8x8_t *)v179.i8 = vmovn_s16(v179);
  int8x16_t v180 = vaddq_s8(vandq_s8(v173, v44), v174);
  int8x16_t v181 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v173.i8, 0);
  int8x16_t v182 = vsubq_s8(v180, vandq_s8(v44, v181));
  int8x16_t v183 = vsubq_s8(vshlq_s8(vshlq_s8((int8x16_t)v77, vsubq_s8(v160, v38)), vaddq_s8(v38, (int8x16_t)v159)), vandq_s8(v43, v181));
  int8x16_t v184 = vsubq_s8(vshlq_s8(v168, vaddq_s8(v39, (int8x16_t)v159)), vandq_s8(v41, v181));
  int8x16_t v185 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v178, (int8x16_t)v179), v171), v170), vandq_s8(v37, v181));
  v186.i64[0] = 0x101010101010101;
  v186.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v24, v186)))
  {
    int8x16_t v187 = vandq_s8(v21, v186);
    int8x16_t v188 = v182;
    v188.i16[0] = v182.i16[7];
    v188.i16[7] = v182.i16[0];
    int8x16_t v189 = vnegq_s8(v187);
    int8x16_t v190 = vbslq_s8(v189, v188, v182);
    int8x16_t v191 = vaddq_s8(v190, vandq_s8(vqtbl1q_s8(v190, (int8x16_t)xmmword_242EA7480), v189));
    int8x16_t v182 = vaddq_s8(v191, vandq_s8(vqtbl1q_s8(v191, (int8x16_t)xmmword_242EA7490), v189));
    int8x16_t v192 = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA74A0), v189), v183);
    int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v192, (int8x16_t)xmmword_242EA74B0), v189), v192);
    int8x16_t v193 = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA74C0), v189), v184);
    int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v193, (int8x16_t)xmmword_242EA74D0), v189), v193);
    int8x16_t v194 = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA74E0), v189), v185);
    int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v194, (int8x16_t)xmmword_242EA74F0), v189), v194);
  }
  int8x16_t v195 = vaddq_s8(v182, v172);
  int8x16_t v196 = vaddq_s8(v183, v172);
  int8x16_t v197 = vaddq_s8(v184, v172);
  int8x16_t v198 = vaddq_s8(v185, v172);
  v199.i64[0] = 0x1010101010101010;
  v199.i64[1] = 0x1010101010101010;
  int8x16_t v200 = vceqzq_s8(vandq_s8(v21, v199));
  *a1 = vaddq_s8(vbicq_s8(vqtbl1q_s8(v195, (int8x16_t)xmmword_242EA7500), v200), v195);
  a1[1] = vaddq_s8(vbicq_s8(vqtbl1q_s8(v197, (int8x16_t)xmmword_242EA7500), v200), v197);
  int8x16_t v201 = (int8x16_t *)((char *)a1 + a2);
  *int8x16_t v201 = vaddq_s8(vbicq_s8(vqtbl1q_s8(v196, (int8x16_t)xmmword_242EA7500), v200), v196);
  v201[1] = vaddq_s8(vbicq_s8(vqtbl1q_s8(v198, (int8x16_t)xmmword_242EA7500), v200), v198);
  return v142;
}

_OWORD *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(_OWORD *result, uint64_t a2, _OWORD *a3, char *a4, int a5, int a6)
{
  char v6 = 0;
  if (a5 >= 4) {
    int v7 = 4;
  }
  else {
    int v7 = a5;
  }
  if (a6 >= 2) {
    int v8 = 2;
  }
  else {
    int v8 = a6;
  }
  if (v7 && v8)
  {
    long long v9 = result[1];
    long long v10 = *(_OWORD *)((char *)result + a2);
    long long v11 = *(_OWORD *)((char *)result + a2 + 16);
    *a3 = *result;
    a3[1] = v10;
    a3[2] = v9;
    a3[3] = v11;
    a3 += 4;
    char v6 = 63;
  }
  char v12 = 0;
  uint64_t v13 = 2 * a2;
  *a4 = v6;
  if (a6 <= 2) {
    int v14 = 2;
  }
  else {
    int v14 = a6;
  }
  unsigned int v15 = v14 - 2;
  if (v15 >= 2) {
    unsigned int v15 = 2;
  }
  if (v7 && v15)
  {
    long long v16 = *(_OWORD *)((char *)result + v13 + 16);
    unint64_t v17 = (_OWORD *)((char *)result + v13 + a2);
    long long v18 = *v17;
    long long v19 = v17[1];
    *a3 = *(_OWORD *)((char *)result + 2 * a2);
    a3[1] = v18;
    a3[2] = v16;
    a3[3] = v19;
    a3 += 4;
    char v12 = 63;
  }
  char v20 = 0;
  a4[1] = v12;
  if (a5 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v8)
  {
    long long v24 = result[3];
    int8x16_t v25 = (_OWORD *)((char *)result + a2 + 32);
    long long v26 = *v25;
    long long v27 = v25[1];
    *a3 = result[2];
    a3[1] = v26;
    a3[2] = v24;
    a3[3] = v27;
    a3 += 4;
    char v20 = 63;
  }
  char v28 = 0;
  a4[2] = v20;
  if (v23 && v15)
  {
    unint64_t v29 = (char *)result + v13;
    long long v30 = *((_OWORD *)v29 + 2);
    long long v31 = *((_OWORD *)v29 + 3);
    unint64_t v32 = &v29[a2 + 32];
    long long v33 = *(_OWORD *)v32;
    long long v34 = *((_OWORD *)v32 + 1);
    *a3 = v30;
    a3[1] = v33;
    a3[2] = v31;
    a3[3] = v34;
    a3 += 4;
    char v28 = 63;
  }
  char v35 = 0;
  a4[3] = v28;
  if (a6 <= 4) {
    int v36 = 4;
  }
  else {
    int v36 = a6;
  }
  unsigned int v37 = v36 - 4;
  if (v37 >= 2) {
    unsigned int v37 = 2;
  }
  if (v7 && v37)
  {
    int8x16_t v38 = (_OWORD *)((char *)result + 4 * a2);
    long long v39 = *v38;
    long long v40 = v38[1];
    int8x16_t v41 = (long long *)((char *)v38 + a2);
    long long v42 = *v41;
    long long v43 = v41[1];
    *a3 = v39;
    a3[1] = v42;
    a3[2] = v40;
    a3[3] = v43;
    a3 += 4;
    char v35 = 63;
  }
  char v44 = 0;
  a4[4] = v35;
  if (a6 <= 6) {
    int v45 = 6;
  }
  else {
    int v45 = a6;
  }
  unsigned int v46 = v45 - 6;
  if (v46 >= 2) {
    int v47 = 2;
  }
  else {
    int v47 = v46;
  }
  if (v7 && v47)
  {
    int32x2_t v48 = (_OWORD *)((char *)result + 6 * a2);
    long long v49 = *v48;
    long long v50 = v48[1];
    int16x8_t v51 = (long long *)((char *)v48 + a2);
    long long v52 = *v51;
    long long v53 = v51[1];
    *a3 = v49;
    a3[1] = v52;
    a3[2] = v50;
    a3[3] = v53;
    a3 += 4;
    char v44 = 63;
  }
  char v54 = 0;
  a4[5] = v44;
  if (v23 && v37)
  {
    int8x16_t v55 = (char *)result + 4 * a2;
    long long v56 = *((_OWORD *)v55 + 2);
    long long v57 = *((_OWORD *)v55 + 3);
    int8x16_t v58 = &v55[a2 + 32];
    long long v59 = *(_OWORD *)v58;
    long long v60 = *((_OWORD *)v58 + 1);
    *a3 = v56;
    a3[1] = v59;
    a3[2] = v57;
    a3[3] = v60;
    a3 += 4;
    char v54 = 63;
  }
  char v61 = 0;
  a4[6] = v54;
  if (v23 && v47)
  {
    int16x8_t v62 = (char *)result + 6 * a2;
    long long v63 = *((_OWORD *)v62 + 2);
    long long v64 = *((_OWORD *)v62 + 3);
    int64x2_t v65 = &v62[a2 + 32];
    long long v66 = *(_OWORD *)v65;
    long long v67 = *((_OWORD *)v65 + 1);
    *a3 = v63;
    a3[1] = v66;
    a3[2] = v64;
    a3[3] = v67;
    char v61 = 63;
  }
  a4[7] = v61;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int8x8_t a4, __n128 a5, __n128 a6)
{
  unsigned int v9 = *a3;
  if (v9 == 63)
  {
    int16x8_t v11 = *(int16x8_t *)a2;
    a5 = *(__n128 *)(a2 + 16);
    a6 = *(__n128 *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(__n128 *)(a1 + 16) = a6;
    *(__n128 *)(a1 + 64) = a5;
    *(_OWORD *)(a1 + 80) = v12;
    uint64_t v10 = 64;
  }
  else if (v9 == 1)
  {
    int16x8_t v11 = vld1q_dup_s16((const __int16 *)a2);
    *(int16x8_t *)a1 = v11;
    *(int16x8_t *)(a1 + 16) = v11;
    *(int16x8_t *)(a1 + 64) = v11;
    *(int16x8_t *)(a1 + 80) = v11;
    uint64_t v10 = 2;
  }
  else if (*a3)
  {
    uint64_t v10 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)a1, 64, a2, v9, a4, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
  }
  else
  {
    uint64_t v10 = 0;
    v11.i64[0] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
  }
  uint64_t v13 = a2 + v10;
  unsigned int v14 = a3[1];
  if (a3[1])
  {
    if (v14 == 1)
    {
      int16x8_t v15 = vld1q_dup_s16((const __int16 *)v13);
      *(int16x8_t *)(a1 + 128) = v15;
      *(int16x8_t *)(a1 + 144) = v15;
      *(int16x8_t *)(a1 + 192) = v15;
      *(int16x8_t *)(a1 + 208) = v15;
      uint64_t v17 = 2;
    }
    else if (v14 == 63)
    {
      int16x8_t v15 = *(int16x8_t *)v13;
      a5 = *(__n128 *)(v13 + 16);
      a6 = *(__n128 *)(v13 + 32);
      long long v16 = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)v13;
      *(__n128 *)(a1 + 144) = a6;
      *(__n128 *)(a1 + 192) = a5;
      *(_OWORD *)(a1 + 208) = v16;
      uint64_t v17 = 64;
    }
    else
    {
      uint64_t v17 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)(a1 + 128), 64, v13, v14, *(int8x8_t *)v11.i8, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v17 = 0;
    v15.i64[0] = 0;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
    *(_OWORD *)(a1 + 208) = 0u;
  }
  uint64_t v18 = v13 + v17;
  unsigned int v19 = a3[2];
  if (a3[2])
  {
    if (v19 == 1)
    {
      int16x8_t v20 = vld1q_dup_s16((const __int16 *)v18);
      *(int16x8_t *)(a1 + 32) = v20;
      *(int16x8_t *)(a1 + 48) = v20;
      *(int16x8_t *)(a1 + 96) = v20;
      *(int16x8_t *)(a1 + 112) = v20;
      uint64_t v22 = 2;
    }
    else if (v19 == 63)
    {
      int16x8_t v20 = *(int16x8_t *)v18;
      a5 = *(__n128 *)(v18 + 16);
      a6 = *(__n128 *)(v18 + 32);
      long long v21 = *(_OWORD *)(v18 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v18;
      *(__n128 *)(a1 + 48) = a6;
      *(__n128 *)(a1 + 96) = a5;
      *(_OWORD *)(a1 + 112) = v21;
      uint64_t v22 = 64;
    }
    else
    {
      uint64_t v22 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)(a1 + 32), 64, v18, v19, *(int8x8_t *)v15.i8, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v22 = 0;
    v20.i64[0] = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
  }
  uint64_t v23 = v18 + v22;
  unsigned int v24 = a3[3];
  if (a3[3])
  {
    if (v24 == 1)
    {
      int16x8_t v25 = vld1q_dup_s16((const __int16 *)v23);
      *(int16x8_t *)(a1 + 160) = v25;
      *(int16x8_t *)(a1 + 176) = v25;
      *(int16x8_t *)(a1 + 224) = v25;
      *(int16x8_t *)(a1 + 240) = v25;
      uint64_t v27 = 2;
    }
    else if (v24 == 63)
    {
      int16x8_t v25 = *(int16x8_t *)v23;
      a5 = *(__n128 *)(v23 + 16);
      a6 = *(__n128 *)(v23 + 32);
      long long v26 = *(_OWORD *)(v23 + 48);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)v23;
      *(__n128 *)(a1 + 176) = a6;
      *(__n128 *)(a1 + 224) = a5;
      *(_OWORD *)(a1 + 240) = v26;
      uint64_t v27 = 64;
    }
    else
    {
      uint64_t v27 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)(a1 + 160), 64, v23, v24, *(int8x8_t *)v20.i8, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v27 = 0;
    v25.i64[0] = 0;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 224) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
  }
  uint64_t v28 = v23 + v27;
  unsigned int v29 = a3[4];
  if (a3[4])
  {
    if (v29 == 1)
    {
      int16x8_t v30 = vld1q_dup_s16((const __int16 *)v28);
      *(int16x8_t *)(a1 + 256) = v30;
      *(int16x8_t *)(a1 + 272) = v30;
      *(int16x8_t *)(a1 + 320) = v30;
      *(int16x8_t *)(a1 + 336) = v30;
      uint64_t v32 = 2;
    }
    else if (v29 == 63)
    {
      int16x8_t v30 = *(int16x8_t *)v28;
      a5 = *(__n128 *)(v28 + 16);
      a6 = *(__n128 *)(v28 + 32);
      long long v31 = *(_OWORD *)(v28 + 48);
      *(_OWORD *)(a1 + 256) = *(_OWORD *)v28;
      *(__n128 *)(a1 + 272) = a6;
      *(__n128 *)(a1 + 320) = a5;
      *(_OWORD *)(a1 + 336) = v31;
      uint64_t v32 = 64;
    }
    else
    {
      uint64_t v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)(a1 + 256), 64, v28, v29, *(int8x8_t *)v25.i8, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v32 = 0;
    v30.i64[0] = 0;
    *(_OWORD *)(a1 + 256) = 0u;
    *(_OWORD *)(a1 + 272) = 0u;
    *(_OWORD *)(a1 + 320) = 0u;
    *(_OWORD *)(a1 + 336) = 0u;
  }
  uint64_t v33 = v28 + v32;
  unsigned int v34 = a3[5];
  if (a3[5])
  {
    if (v34 == 1)
    {
      int16x8_t v35 = vld1q_dup_s16((const __int16 *)v33);
      *(int16x8_t *)(a1 + 384) = v35;
      *(int16x8_t *)(a1 + 400) = v35;
      *(int16x8_t *)(a1 + 448) = v35;
      *(int16x8_t *)(a1 + 464) = v35;
      uint64_t v37 = 2;
    }
    else if (v34 == 63)
    {
      int16x8_t v35 = *(int16x8_t *)v33;
      a5 = *(__n128 *)(v33 + 16);
      a6 = *(__n128 *)(v33 + 32);
      long long v36 = *(_OWORD *)(v33 + 48);
      *(_OWORD *)(a1 + 384) = *(_OWORD *)v33;
      *(__n128 *)(a1 + 400) = a6;
      *(__n128 *)(a1 + 448) = a5;
      *(_OWORD *)(a1 + 464) = v36;
      uint64_t v37 = 64;
    }
    else
    {
      uint64_t v37 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)(a1 + 384), 64, v33, v34, *(int8x8_t *)v30.i8, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v37 = 0;
    v35.i64[0] = 0;
    *(_OWORD *)(a1 + 384) = 0u;
    *(_OWORD *)(a1 + 400) = 0u;
    *(_OWORD *)(a1 + 448) = 0u;
    *(_OWORD *)(a1 + 464) = 0u;
  }
  uint64_t v38 = v33 + v37;
  unsigned int v39 = a3[6];
  if (a3[6])
  {
    if (v39 == 1)
    {
      int16x8_t v40 = vld1q_dup_s16((const __int16 *)v38);
      *(int16x8_t *)(a1 + 288) = v40;
      *(int16x8_t *)(a1 + 304) = v40;
      *(int16x8_t *)(a1 + 352) = v40;
      *(int16x8_t *)(a1 + 368) = v40;
      uint64_t result = 2;
    }
    else if (v39 == 63)
    {
      int16x8_t v40 = *(int16x8_t *)v38;
      a5 = *(__n128 *)(v38 + 16);
      a6 = *(__n128 *)(v38 + 32);
      long long v41 = *(_OWORD *)(v38 + 48);
      *(_OWORD *)(a1 + 288) = *(_OWORD *)v38;
      *(__n128 *)(a1 + 304) = a6;
      *(__n128 *)(a1 + 352) = a5;
      *(_OWORD *)(a1 + 368) = v41;
      uint64_t result = 64;
    }
    else
    {
      uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)(a1 + 288), 64, v38, v39, *(int8x8_t *)v35.i8, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
    }
  }
  else
  {
    uint64_t result = 0;
    v40.i64[0] = 0;
    *(_OWORD *)(a1 + 288) = 0u;
    *(_OWORD *)(a1 + 304) = 0u;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 368) = 0u;
  }
  unsigned int v43 = a3[7];
  if (!a3[7])
  {
    int16x8_t v48 = 0uLL;
    *(_OWORD *)(a1 + 416) = 0u;
    *(_OWORD *)(a1 + 432) = 0u;
LABEL_56:
    *(int16x8_t *)(a1 + 480) = v48;
    *(int16x8_t *)(a1 + 496) = v48;
    return result;
  }
  uint64_t v44 = v38 + result;
  if (v43 == 1)
  {
    int16x8_t v48 = vld1q_dup_s16((const __int16 *)v44);
    *(int16x8_t *)(a1 + 416) = v48;
    *(int16x8_t *)(a1 + 432) = v48;
    goto LABEL_56;
  }
  if (v43 == 63)
  {
    long long v45 = *(_OWORD *)(v44 + 16);
    long long v46 = *(_OWORD *)(v44 + 32);
    long long v47 = *(_OWORD *)(v44 + 48);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)v44;
    *(_OWORD *)(a1 + 432) = v46;
    *(_OWORD *)(a1 + 480) = v45;
    *(_OWORD *)(a1 + 496) = v47;
  }
  else
  {
    return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)(a1 + 416), 64, v44, v43, *(int8x8_t *)v40.i8, a5.n128_f64[0], (int8x8_t)a6.n128_u64[0]);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int8x16_t *a1, char *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int8x16_t v5 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a3, 0);
  int8x16_t v405 = *(int8x16_t *)a3;
  int8x16_t v6 = vsubq_s8(*(int8x16_t *)a3, v5);
  int8x16_t v7 = vsubq_s8(*(int8x16_t *)(a3 + a4), v5);
  int8x16_t v8 = vsubq_s8(*(int8x16_t *)(a3 + 16), v5);
  int8x16_t v9 = vsubq_s8(*(int8x16_t *)(a3 + a4 + 16), v5);
  int8x16_t v10 = vqtbl1q_s8(v6, (int8x16_t)xmmword_242EA7510);
  int8x16_t v11 = vpmaxq_s8(v10, v10);
  int8x16_t v12 = vpminq_s8(v10, v10);
  int8x16_t v13 = vpmaxq_s8(v11, v11);
  int8x16_t v14 = vpminq_s8(v12, v12);
  int8x16_t v15 = vpmaxq_s8(v13, v13);
  int8x16_t v16 = vpminq_s8(v14, v14);
  v17.i64[0] = 0x8080808080808080;
  v17.i64[1] = 0x8080808080808080;
  int8x16_t v18 = vmaxq_s8(v15, v17);
  v19.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v19.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v20 = vminq_s8(v16, v19);
  int8x16_t v21 = vzip1q_s8(v15, v16);
  v22.i64[0] = 0x808080808080808;
  v22.i64[1] = 0x808080808080808;
  int8x16_t v23 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v21)), vceqzq_s8(v21));
  int8x16_t v24 = vpmaxq_s8(v23, v23);
  int8x16_t v25 = vqtbl1q_s8(v7, (int8x16_t)xmmword_242EA7510);
  int8x16_t v26 = vpmaxq_s8(v25, v25);
  int8x16_t v27 = vpminq_s8(v25, v25);
  int8x16_t v28 = vpmaxq_s8(v26, v26);
  int8x16_t v29 = vpminq_s8(v27, v27);
  int8x16_t v30 = vpmaxq_s8(v28, v28);
  int8x16_t v31 = vpminq_s8(v29, v29);
  int8x16_t v32 = vmaxq_s8(v18, v30);
  int8x16_t v33 = vminq_s8(v20, v31);
  int8x16_t v34 = vzip1q_s8(v30, v31);
  int8x16_t v35 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v34)), vceqzq_s8(v34));
  int8x16_t v36 = vpmaxq_s8(v35, v35);
  int8x16_t v37 = vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA7510);
  int8x16_t v38 = vpmaxq_s8(v37, v37);
  int8x16_t v39 = vpminq_s8(v37, v37);
  int8x16_t v40 = vpmaxq_s8(v38, v38);
  int8x16_t v41 = vpminq_s8(v39, v39);
  int8x16_t v42 = vpmaxq_s8(v40, v40);
  int8x16_t v43 = vpminq_s8(v41, v41);
  int8x16_t v44 = vmaxq_s8(v32, v42);
  int8x16_t v45 = vminq_s8(v33, v43);
  int8x16_t v46 = vzip1q_s8(v42, v43);
  int8x16_t v47 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v46)), vceqzq_s8(v46));
  int8x16_t v48 = vpmaxq_s8(v47, v47);
  int8x16_t v49 = vqtbl1q_s8(v9, (int8x16_t)xmmword_242EA7510);
  int8x16_t v50 = vpmaxq_s8(v49, v49);
  int8x16_t v51 = vpminq_s8(v49, v49);
  int8x16_t v52 = vpmaxq_s8(v50, v50);
  int8x16_t v53 = vpminq_s8(v51, v51);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vmaxq_s8(v44, v54);
  int8x16_t v57 = vminq_s8(v45, v55);
  int8x16_t v58 = vzip1q_s8(v54, v55);
  int8x16_t v59 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v58)), vceqzq_s8(v58));
  int8x16_t v60 = vpmaxq_s8(v59, v59);
  int8x16_t v61 = vmaxq_s8(vmaxq_s8(v24, v36), vmaxq_s8(v48, v60));
  int8x16_t v62 = vclzq_s8(vsubq_s8(v56, v57));
  int8x16_t v63 = vsubq_s8(v22, v62);
  int8x16_t v64 = vcgtq_s8(v61, v63);
  int8x16_t v65 = vbslq_s8(v64, v63, v61);
  if (vmaxvq_s8(v65))
  {
    int8x16_t v402 = *(int8x16_t *)(a3 + a4);
    int8x16_t v403 = *(int8x16_t *)(a3 + a4 + 16);
    int8x16_t v404 = *(int8x16_t *)(a3 + 16);
    v66.i64[0] = -1;
    v66.i64[1] = -1;
    v67.i64[0] = 0x707070707070707;
    v67.i64[1] = 0x707070707070707;
    int8x16_t v406 = vandq_s8(vsubq_s8(vshlq_s8(v66, vsubq_s8(v67, v62)), v57), v64);
    v68.i64[0] = 0x303030303030303;
    v68.i64[1] = 0x303030303030303;
    int8x16_t v69 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v24), v68), (int8x16_t)0);
    int8x16_t v70 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v36), v68), (int8x16_t)0);
    int8x16_t v71 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v48), v68), (int8x16_t)0);
    int8x16_t v72 = vmaxq_s8(vminq_s8(vsubq_s8(v65, v60), v68), (int8x16_t)0);
    v73.i64[0] = 0x404040404040404;
    v73.i64[1] = 0x404040404040404;
    int8x16_t v74 = vorrq_s8(vbicq_s8(v73, vceqq_s8(vaddq_s8(v72, v71), vnegq_s8(vaddq_s8(v69, v70)))), vorrq_s8(vandq_s8(vceqzq_s8(v65), v68), vandq_s8(v64, v22)));
    int8x16_t v75 = vsubq_s8(v6, vqtbl1q_s8(v6, (int8x16_t)xmmword_242EA7500));
    int8x16_t v76 = vsubq_s8(v7, vqtbl1q_s8(v7, (int8x16_t)xmmword_242EA7500));
    int8x16_t v77 = vsubq_s8(v8, vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA7500));
    int8x16_t v78 = vsubq_s8(v9, vqtbl1q_s8(v9, (int8x16_t)xmmword_242EA7500));
    int8x16_t v79 = vqtbl1q_s8(v75, (int8x16_t)xmmword_242EA7510);
    int8x16_t v80 = vpmaxq_s8(v79, v79);
    int8x16_t v81 = vpminq_s8(v79, v79);
    int8x16_t v82 = vpmaxq_s8(v80, v80);
    int8x16_t v83 = vpminq_s8(v81, v81);
    int8x16_t v84 = vpmaxq_s8(v82, v82);
    int8x16_t v85 = vpminq_s8(v83, v83);
    int8x16_t v86 = vmaxq_s8(v84, v17);
    int8x16_t v87 = vminq_s8(v85, v19);
    int8x16_t v88 = vzip1q_s8(v84, v85);
    int8x16_t v89 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v88)), vceqzq_s8(v88));
    int8x16_t v90 = vpmaxq_s8(v89, v89);
    int8x16_t v91 = vqtbl1q_s8(v76, (int8x16_t)xmmword_242EA7510);
    int8x16_t v92 = v9;
    int8x16_t v93 = v7;
    int8x16_t v94 = vpmaxq_s8(v91, v91);
    int8x16_t v95 = vpminq_s8(v91, v91);
    int8x16_t v96 = vpmaxq_s8(v94, v94);
    int8x16_t v97 = vpminq_s8(v95, v95);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    int8x16_t v100 = vmaxq_s8(v86, v98);
    int8x16_t v101 = vminq_s8(v87, v99);
    int8x16_t v102 = vzip1q_s8(v98, v99);
    int8x16_t v103 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v102)), vceqzq_s8(v102));
    int8x16_t v104 = vpmaxq_s8(v103, v103);
    int8x16_t v105 = vqtbl1q_s8(v77, (int8x16_t)xmmword_242EA7510);
    int8x16_t v106 = vpmaxq_s8(v105, v105);
    int8x16_t v107 = vpminq_s8(v105, v105);
    int8x16_t v108 = vpmaxq_s8(v106, v106);
    int8x16_t v109 = vpminq_s8(v107, v107);
    int8x16_t v110 = vpmaxq_s8(v108, v108);
    int8x16_t v111 = vpminq_s8(v109, v109);
    int8x16_t v112 = vmaxq_s8(v100, v110);
    int8x16_t v113 = vminq_s8(v101, v111);
    int8x16_t v114 = vzip1q_s8(v110, v111);
    int8x16_t v115 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v114)), vceqzq_s8(v114));
    int8x16_t v116 = vpmaxq_s8(v115, v115);
    int8x16_t v117 = vqtbl1q_s8(v78, (int8x16_t)xmmword_242EA7510);
    int8x16_t v118 = vpmaxq_s8(v117, v117);
    int8x16_t v119 = vpminq_s8(v117, v117);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vmaxq_s8(v112, v122);
    int8x16_t v125 = vminq_s8(v113, v123);
    int8x16_t v126 = vzip1q_s8(v122, v123);
    int8x16_t v127 = vbicq_s8(vsubq_s8(v22, vclsq_s8(v126)), vceqzq_s8(v126));
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v129 = vmaxq_s8(vmaxq_s8(v90, v104), vmaxq_s8(v116, v128));
    int8x16_t v130 = vclzq_s8(vsubq_s8(v124, v125));
    int8x16_t v131 = vsubq_s8(v22, v130);
    int8x16_t v132 = vcgtq_s8(v129, v131);
    int8x16_t v133 = vbslq_s8(v132, v131, v129);
    v131.i64[0] = 0x1010101010101010;
    v131.i64[1] = 0x1010101010101010;
    v134.i64[0] = 0x1818181818181818;
    v134.i64[1] = 0x1818181818181818;
    int8x16_t v135 = vorrq_s8(vandq_s8(vceqzq_s8(v133), v68), vbslq_s8(v132, v134, v131));
    int16x8_t v136 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v133, v90), v68), (int8x16_t)0);
    int8x16_t v137 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v104), v68), (int8x16_t)0);
    int8x16_t v138 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v116), v68), (int8x16_t)0);
    int8x16_t v139 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v128), v68), (int8x16_t)0);
    int8x16_t v140 = vsubq_s8(v133, (int8x16_t)v136);
    int8x16_t v141 = vsubq_s8(v133, v137);
    int8x16_t v142 = vsubq_s8(v133, v138);
    int8x16_t v143 = vsubq_s8(v133, v139);
    int8x16_t v144 = vorrq_s8(v135, vbicq_s8(v73, vceqq_s8(vaddq_s8(v139, v138), vnegq_s8(vaddq_s8((int8x16_t)v136, v137)))));
    uint16x8_t v145 = vmovl_u8(*(uint8x8_t *)v144.i8);
    v137.i64[0] = 0x8000800080008;
    v137.i64[1] = 0x8000800080008;
    v136.i64[0] = 0x2000200020002;
    v136.i64[1] = 0x2000200020002;
    int16x8_t v146 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v142.i8, *(int8x8_t *)v141.i8), *(int8x8_t *)v143.i8), 3uLL), *(int8x8_t *)v140.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v144.i8, 1uLL), v137)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v133.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v145 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v145 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v136), v137));
    int8x16_t v147 = (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v74.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v136);
    int8x16_t v148 = vsubq_s8(v65, v69);
    int8x16_t v149 = vsubq_s8(v65, v70);
    int8x16_t v150 = vsubq_s8(v65, v71);
    int8x16_t v151 = vsubq_s8(v65, v72);
    int8x16_t v152 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v150.i8, *(int8x8_t *)v149.i8), *(int8x8_t *)v151.i8), 3uLL), *(int8x8_t *)v148.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v65.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v74.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v74.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8(v147, v137)), v146)), 0);
    if (vaddlvq_s8(v152))
    {
      v153.i64[0] = 0x707070707070707;
      v153.i64[1] = 0x707070707070707;
      v154.i64[0] = -1;
      v154.i64[1] = -1;
      int8x16_t v5 = vbslq_s8(v152, vsubq_s8(v5, vqtbl1q_s8(v5, (int8x16_t)xmmword_242EA7500)), v5);
      int8x16_t v155 = vbslq_s8(v152, v75, v6);
      int8x16_t v93 = vbslq_s8(v152, v76, v93);
      int8x16_t v8 = vbslq_s8(v152, v77, v8);
      int8x16_t v92 = vbslq_s8(v152, v78, v92);
      int8x16_t v148 = vbslq_s8(v152, v140, v148);
      int8x16_t v149 = vbslq_s8(v152, v141, v149);
      int8x16_t v150 = vbslq_s8(v152, v142, v150);
      int8x16_t v151 = vbslq_s8(v152, v143, v151);
      int8x16_t v156 = vbslq_s8(v152, vandq_s8(vsubq_s8(vshlq_s8(v154, vsubq_s8(v153, v130)), v125), v132), v406);
      int8x16_t v65 = vbslq_s8(v152, v133, v65);
      int8x16_t v74 = vbslq_s8(v152, v144, v74);
    }
    else
    {
      int8x16_t v156 = v406;
      int8x16_t v155 = v6;
    }
    if (a5 >= 2)
    {
      int8x16_t v159 = v93;
      int8x16_t v407 = v156;
      int8x16_t v160 = v92;
      int8x16_t v161 = *(int8x16_t *)(a3 + a4);
      v161.i16[7] = HIWORD(*(_OWORD *)a3);
      int8x16_t v162 = vsubq_s8(v405, vqtbl1q_s8(v405, (int8x16_t)xmmword_242EA7520));
      int8x16_t v163 = vsubq_s8(v402, vqtbl1q_s8(v161, (int8x16_t)xmmword_242EA7530));
      int8x16_t v164 = *(int8x16_t *)(a3 + 16);
      v164.i16[7] = HIWORD(*(_OWORD *)a3);
      int8x16_t v165 = vsubq_s8(v404, vqtbl1q_s8(v164, (int8x16_t)xmmword_242EA7540));
      int8x16_t v166 = *(int8x16_t *)(a3 + a4 + 16);
      v166.i16[7] = HIWORD(*(_OWORD *)a3);
      int8x16_t v167 = vsubq_s8(v403, vqtbl1q_s8(v166, (int8x16_t)xmmword_242EA7550));
      int8x16_t v168 = v162;
      v168.i16[0] = v162.i16[7];
      v168.i16[7] = v162.i16[0];
      int8x16_t v169 = vqtbl1q_s8(v168, (int8x16_t)xmmword_242EA7510);
      int8x16_t v170 = vpmaxq_s8(v169, v169);
      int8x16_t v171 = vpminq_s8(v169, v169);
      int8x16_t v172 = vpmaxq_s8(v170, v170);
      int8x16_t v173 = vpminq_s8(v171, v171);
      int8x16_t v174 = vpmaxq_s8(v172, v172);
      int8x16_t v175 = vpminq_s8(v173, v173);
      v176.i64[0] = 0x8080808080808080;
      v176.i64[1] = 0x8080808080808080;
      int8x16_t v177 = vmaxq_s8(v174, v176);
      v176.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v176.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v178 = vminq_s8(v175, v176);
      int8x16_t v179 = vzip1q_s8(v174, v175);
      v180.i64[0] = 0x808080808080808;
      v180.i64[1] = 0x808080808080808;
      int8x16_t v181 = vbicq_s8(vsubq_s8(v180, vclsq_s8(v179)), vceqzq_s8(v179));
      int8x16_t v182 = vpmaxq_s8(v181, v181);
      int8x16_t v183 = vqtbl1q_s8(v163, (int8x16_t)xmmword_242EA7510);
      int8x16_t v184 = vpmaxq_s8(v183, v183);
      int8x16_t v185 = vpminq_s8(v183, v183);
      int8x16_t v186 = vpmaxq_s8(v184, v184);
      int8x16_t v187 = vpminq_s8(v185, v185);
      int8x16_t v188 = vpmaxq_s8(v186, v186);
      int8x16_t v189 = vpminq_s8(v187, v187);
      int8x16_t v190 = vmaxq_s8(v177, v188);
      int8x16_t v191 = vminq_s8(v178, v189);
      int8x16_t v192 = vzip1q_s8(v188, v189);
      int8x16_t v193 = vbicq_s8(vsubq_s8(v180, vclsq_s8(v192)), vceqzq_s8(v192));
      int8x16_t v194 = vpmaxq_s8(v193, v193);
      int8x16_t v195 = vqtbl1q_s8(v165, (int8x16_t)xmmword_242EA7510);
      int8x16_t v196 = vpmaxq_s8(v195, v195);
      int8x16_t v197 = vpminq_s8(v195, v195);
      int8x16_t v198 = vpmaxq_s8(v196, v196);
      int8x16_t v199 = vpminq_s8(v197, v197);
      int8x16_t v200 = vpmaxq_s8(v198, v198);
      int8x16_t v201 = vpminq_s8(v199, v199);
      int8x16_t v202 = vmaxq_s8(v190, v200);
      int8x16_t v203 = vminq_s8(v191, v201);
      int8x16_t v204 = vzip1q_s8(v200, v201);
      int8x16_t v205 = vbicq_s8(vsubq_s8(v180, vclsq_s8(v204)), vceqzq_s8(v204));
      int8x16_t v206 = vpmaxq_s8(v205, v205);
      int8x16_t v207 = vqtbl1q_s8(v167, (int8x16_t)xmmword_242EA7510);
      int8x16_t v208 = vpmaxq_s8(v207, v207);
      int8x16_t v209 = vpminq_s8(v207, v207);
      int8x16_t v210 = vpmaxq_s8(v208, v208);
      int8x16_t v211 = vpminq_s8(v209, v209);
      int8x16_t v212 = vpmaxq_s8(v210, v210);
      int8x16_t v213 = vpminq_s8(v211, v211);
      int8x16_t v214 = vminq_s8(v203, v213);
      int8x16_t v215 = vzip1q_s8(v212, v213);
      int8x16_t v216 = vbicq_s8(vsubq_s8(v180, vclsq_s8(v215)), vceqzq_s8(v215));
      int8x16_t v217 = vpmaxq_s8(v216, v216);
      int8x16_t v218 = vmaxq_s8(vmaxq_s8(v182, v194), vmaxq_s8(v206, v217));
      int8x16_t v219 = vclzq_s8(vsubq_s8(vmaxq_s8(v202, v212), v214));
      int8x16_t v220 = vsubq_s8(v180, v219);
      int8x16_t v221 = vcgtq_s8(v218, v220);
      int8x16_t v222 = vbslq_s8(v221, v220, v218);
      v220.i64[0] = 0x909090909090909;
      v220.i64[1] = 0x909090909090909;
      v223.i64[0] = 0x202020202020202;
      v223.i64[1] = 0x202020202020202;
      int8x16_t v224 = vorrq_s8(vandq_s8(vceqzq_s8(v222), v223), vsubq_s8(vandq_s8(v221, v220), vmvnq_s8(v221)));
      v218.i64[0] = 0x303030303030303;
      v218.i64[1] = 0x303030303030303;
      int8x16_t v225 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v182), v218), (int8x16_t)0);
      int8x16_t v226 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v194), v218), (int8x16_t)0);
      int8x16_t v227 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v206), v218), (int8x16_t)0);
      int8x16_t v228 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v217), v218), (int8x16_t)0);
      int8x16_t v229 = vsubq_s8(v222, v225);
      int8x16_t v230 = vsubq_s8(v222, v226);
      int8x16_t v231 = vsubq_s8(v222, v227);
      int8x16_t v232 = vsubq_s8(v222, v228);
      int8x16_t v233 = vceqq_s8(vaddq_s8(v228, v227), vnegq_s8(vaddq_s8(v225, v226)));
      v226.i64[0] = 0x404040404040404;
      v226.i64[1] = 0x404040404040404;
      int8x16_t v234 = vorrq_s8(v224, vbicq_s8(v226, v233));
      v235.i64[0] = 0x3000300030003;
      v235.i64[1] = 0x3000300030003;
      int8x16_t v236 = (int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8);
      v228.i64[0] = 0x8000800080008;
      v228.i64[1] = 0x8000800080008;
      int16x8_t v237 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v65.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v236, v228)));
      int16x8_t v238 = (int16x8_t)vandq_s8(v236, v235);
      v235.i64[0] = 0x2000200020002;
      v235.i64[1] = 0x2000200020002;
      int8x16_t v239 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v237, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v74.i8, 1uLL), v228)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v238, (int16x8_t)v235), v228)), *(int8x8_t *)v148.i8, (int8x8_t)0x707070707070707), vshll_n_s8(
                                                                  vadd_s8(vadd_s8(*(int8x8_t *)v150.i8, *(int8x8_t *)v149.i8), *(int8x8_t *)v151.i8), 3uLL)), vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v231.i8, *(int8x8_t *)v230.i8), *(int8x8_t *)v232.i8), 3uLL), *(int8x8_t *)v229.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v234.i8, *(int8x8_t *)v234.i8),
                                                                                          (int8x8_t)0x808080808080808)),
                                                                vbic_s8(*(int8x8_t *)v222.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v234.i8))))), 0);
      if (vaddlvq_s8(v239))
      {
        v240.i64[0] = 0x707070707070707;
        v240.i64[1] = 0x707070707070707;
        v241.i64[0] = -1;
        v241.i64[1] = -1;
        v5.i16[0] = vbslq_s8(v239, vextq_s8(v405, v405, 0xEuLL), v5).u16[0];
        int8x16_t v155 = vbslq_s8(v239, v168, v155);
        int8x16_t v93 = vbslq_s8(v239, v163, v159);
        int8x16_t v8 = vbslq_s8(v239, v165, v8);
        int8x16_t v92 = vbslq_s8(v239, v167, v160);
        int8x16_t v148 = vbslq_s8(v239, v229, v148);
        int8x16_t v149 = vbslq_s8(v239, v230, v149);
        int8x16_t v150 = vbslq_s8(v239, v231, v150);
        int8x16_t v151 = vbslq_s8(v239, v232, v151);
        int8x16_t v156 = vbslq_s8(v239, vandq_s8(vsubq_s8(vshlq_s8(v241, vsubq_s8(v240, v219)), v214), v221), v407);
        int8x16_t v65 = vbslq_s8(v239, v222, v65);
        int8x16_t v74 = vbslq_s8(v239, v234, v74);
      }
      else
      {
        int8x16_t v92 = v160;
        int8x16_t v156 = v407;
        int8x16_t v93 = v159;
      }
    }
    int8x16_t v242 = (int8x16_t)vmovl_s8(*(int8x8_t *)v74.i8);
    v243.i64[0] = 0x8000800080008;
    v243.i64[1] = 0x8000800080008;
    int16x8_t v244 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v65.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v242, v243)));
    v245.i64[0] = 0x3000300030003;
    v245.i64[1] = 0x3000300030003;
    int16x8_t v246 = (int16x8_t)vandq_s8(v242, v245);
    v245.i64[0] = 0x2000200020002;
    v245.i64[1] = 0x2000200020002;
    int16x8_t v247 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v150.i8, *(int8x8_t *)v149.i8), *(int8x8_t *)v151.i8), 3uLL), *(int8x8_t *)v148.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v74.i8, 1uLL), v243)), v244), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v246, (int16x8_t)v245), v243));
    if ((unint64_t)(vpaddq_s16(v247, v247).i16[0] + 37) >= 0x200)
    {
      *a1 = v405;
      a1[1] = v402;
      char v157 = 63;
      unint64_t v158 = 64;
      a1[2] = v404;
      a1[3] = v403;
    }
    else
    {
      int8x16_t v248 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v249 = 8 * (a1 & 7);
      if (v249) {
        uint64_t v250 = *v248 & ~(-1 << v249);
      }
      else {
        uint64_t v250 = 0;
      }
      unint64_t v251 = (unint64_t)((v65.i8[0] - 1) & 7) << 10;
      if (!v65.i8[0]) {
        unint64_t v251 = 0;
      }
      if (v65.i8[1]) {
        uint64_t v252 = (unsigned __int16)((v65.u8[1] << 13) - 0x2000) & 0xE000;
      }
      else {
        uint64_t v252 = 0;
      }
      *a2 = v74.i8[0] << 6;
      unint64_t v253 = ((v251 | v252) & 0xFFFFFFFFFFFFFC1FLL | v74.i8[0] & 0x1C | (32 * (v74.i8[1] & 0x1F))) >> 2;
      unint64_t v254 = v250 | (v253 << v249);
      if (v249 >= 0x32)
      {
        *int8x16_t v248 = v254;
        unint64_t v254 = v253 >> (-8 * (a1 & 7u));
      }
      unint64_t v255 = (v249 + 14) & 0x3E;
      unint64_t v256 = v254 | ((unint64_t)v5.u16[0] << v255);
      if (v255 >= 0x30)
      {
        *(void *)((char *)v248 + (((v249 + 14) >> 3) & 8)) = v256;
        unint64_t v256 = (unint64_t)v5.u16[0] >> -(char)v255;
      }
      unint64_t v257 = v249 + 30;
      int8x16_t v258 = vsubq_s8(v65, v148);
      int8x16_t v259 = vsubq_s8(v65, v149);
      int8x16_t v260 = vsubq_s8(v65, v150);
      int8x16_t v261 = vsubq_s8(v65, v151);
      v258.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v258, v259), (int16x8_t)vzip1q_s8(v260, v261)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v258, v259), (int16x8_t)vtrn2q_s8(v260, v261))).u64[0];
      v260.i64[0] = 0x202020202020202;
      v260.i64[1] = 0x202020202020202;
      int8x16_t v262 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v74.i8), (int8x8_t)0x4000400040004)))), v260);
      v260.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v260.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v261.i64[0] = -1;
      v261.i64[1] = -1;
      uint8x16_t v263 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v261, (uint8x16_t)vorrq_s8(v262, v260)), (int8x16_t)v258.u64[0]);
      int16x8_t v264 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v262.i8);
      uint16x8_t v265 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v263.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v264)), (int16x8_t)vmovl_high_u8(v263));
      uint16x8_t v266 = (uint16x8_t)vpaddq_s16(v264, (int16x8_t)vmovl_high_u8((uint8x16_t)v262));
      int32x4_t v267 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v266.i8);
      int32x4_t v268 = (int32x4_t)vmovl_high_u16(v266);
      int32x4_t v269 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v265.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v267)), (int32x4_t)vshlq_u32(vmovl_high_u16(v265), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v268)));
      int32x4_t v270 = vpaddq_s32(v267, v268);
      v271.i64[0] = v269.u32[0];
      v271.i64[1] = v269.u32[1];
      uint64x2_t v272 = (uint64x2_t)v271;
      v271.i64[0] = v269.u32[2];
      v271.i64[1] = v269.u32[3];
      uint64x2_t v273 = (uint64x2_t)v271;
      v271.i64[0] = v270.u32[0];
      v271.i64[1] = v270.u32[1];
      int64x2_t v274 = v271;
      v271.i64[0] = v270.u32[2];
      v271.i64[1] = v270.u32[3];
      int64x2_t v275 = vpaddq_s64((int64x2_t)vshlq_u64(v272, (uint64x2_t)vzip1q_s64((int64x2_t)0, v274)), (int64x2_t)vshlq_u64(v273, (uint64x2_t)vzip1q_s64((int64x2_t)0, v271)));
      int64x2_t v276 = vpaddq_s64(v274, v271);
      uint64_t v277 = (v249 + 30) & 0x3E;
      unint64_t v278 = (v275.i64[0] << v277) | v256;
      if ((unint64_t)(v276.i64[0] + v277) >= 0x40)
      {
        *(void *)((char *)v248 + ((v257 >> 3) & 8)) = v278;
        unint64_t v278 = (unint64_t)v275.i64[0] >> -(char)v277;
      }
      int8x16_t v279 = vceqq_s8(v65, v148);
      unint64_t v280 = v276.i64[0] + v257;
      unint64_t v281 = v278 | (v275.i64[1] << v280);
      if ((v280 & 0x3F) + v276.i64[1] >= 0x40)
      {
        *(void *)((char *)v248 + ((v280 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v281;
        unint64_t v281 = (unint64_t)v275.i64[1] >> -(v280 & 0x3F);
        if ((v280 & 0x3F) == 0) {
          unint64_t v281 = 0;
        }
      }
      int8x16_t v282 = vandq_s8(v156, v279);
      unint64_t v283 = v280 + v276.i64[1];
      v284.i64[0] = 0x808080808080808;
      v284.i64[1] = 0x808080808080808;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      int8x16_t v286 = vandq_s8(vextq_s8(vtstq_s8(v74, v284), (int8x16_t)0, 0xEuLL), v65);
      v287.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v287.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v285, (uint8x16_t)vaddq_s8(v286, v287)), v156);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v286.i8);
      uint16x8_t v290 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vmovl_high_u8(v288));
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16(v289, (int16x8_t)vmovl_high_u8((uint8x16_t)v286));
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16(v291);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      unint64_t v302 = (v300.i64[0] << v283) | v281;
      if (v301.i64[0] + (v283 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v248 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v300.i64[0] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      int8x16_t v303 = vceqq_s8(v65, v149);
      int8x16_t v304 = vaddq_s8(v282, v155);
      unint64_t v305 = v301.i64[0] + v283;
      unint64_t v306 = v302 | (v300.i64[1] << v305);
      if ((v305 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v248 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v306;
        unint64_t v306 = (unint64_t)v300.i64[1] >> -(v305 & 0x3F);
        if ((v305 & 0x3F) == 0) {
          unint64_t v306 = 0;
        }
      }
      int8x16_t v307 = vandq_s8(v156, v303);
      unint64_t v308 = v305 + v301.i64[1];
      int8x16_t v309 = vextq_s8((int8x16_t)0, v148, 0xEuLL);
      v310.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v310.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v311.i64[0] = -1;
      v311.i64[1] = -1;
      uint8x16_t v312 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v311, (uint8x16_t)vaddq_s8(v309, v310)), v304);
      int16x8_t v313 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v309.i8);
      int16x8_t v314 = (int16x8_t)vmovl_high_u8((uint8x16_t)v309);
      uint16x8_t v315 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v312.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v313)), (int16x8_t)vshlq_u16(vmovl_high_u8(v312), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v314)));
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16(v313, v314);
      int32x4_t v317 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v316.i8);
      int32x4_t v318 = (int32x4_t)vmovl_high_u16(v316);
      int32x4_t v319 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v315.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v317)), (int32x4_t)vshlq_u32(vmovl_high_u16(v315), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)));
      int32x4_t v320 = vpaddq_s32(v317, v318);
      v321.i64[0] = v319.u32[0];
      v321.i64[1] = v319.u32[1];
      uint64x2_t v322 = (uint64x2_t)v321;
      v321.i64[0] = v319.u32[2];
      v321.i64[1] = v319.u32[3];
      uint64x2_t v323 = (uint64x2_t)v321;
      v321.i64[0] = v320.u32[0];
      v321.i64[1] = v320.u32[1];
      int64x2_t v324 = v321;
      v321.i64[0] = v320.u32[2];
      v321.i64[1] = v320.u32[3];
      int64x2_t v325 = vpaddq_s64((int64x2_t)vshlq_u64(v322, (uint64x2_t)vzip1q_s64((int64x2_t)0, v324)), (int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v321)));
      int64x2_t v326 = vpaddq_s64(v324, v321);
      unint64_t v327 = (v325.i64[0] << v308) | v306;
      if (v326.i64[0] + (v308 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v248 + ((v308 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v327;
        unint64_t v327 = (unint64_t)v325.i64[0] >> -(v308 & 0x3F);
        if ((v308 & 0x3F) == 0) {
          unint64_t v327 = 0;
        }
      }
      int8x16_t v328 = vceqq_s8(v65, v150);
      int8x16_t v329 = vaddq_s8(v93, v307);
      unint64_t v330 = v326.i64[0] + v308;
      unint64_t v331 = v327 | (v325.i64[1] << v330);
      if ((v330 & 0x3F) + v326.i64[1] >= 0x40)
      {
        *(void *)((char *)v248 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
        unint64_t v331 = (unint64_t)v325.i64[1] >> -(v330 & 0x3F);
        if ((v330 & 0x3F) == 0) {
          unint64_t v331 = 0;
        }
      }
      int8x16_t v332 = vandq_s8(v156, v328);
      unint64_t v333 = v330 + v326.i64[1];
      v334.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v334.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v335.i64[0] = -1;
      v335.i64[1] = -1;
      uint8x16_t v336 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v335, (uint8x16_t)vaddq_s8(v149, v334)), v329);
      int16x8_t v337 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v149.i8);
      int16x8_t v338 = (int16x8_t)vmovl_high_u8((uint8x16_t)v149);
      uint16x8_t v339 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v336.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v337)), (int16x8_t)vshlq_u16(vmovl_high_u8(v336), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v338)));
      uint16x8_t v340 = (uint16x8_t)vpaddq_s16(v337, v338);
      int32x4_t v341 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v340.i8);
      int32x4_t v342 = (int32x4_t)vmovl_high_u16(v340);
      int32x4_t v343 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v339.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v341)), (int32x4_t)vshlq_u32(vmovl_high_u16(v339), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)));
      int32x4_t v344 = vpaddq_s32(v341, v342);
      v345.i64[0] = v343.u32[0];
      v345.i64[1] = v343.u32[1];
      uint64x2_t v346 = (uint64x2_t)v345;
      v345.i64[0] = v343.u32[2];
      v345.i64[1] = v343.u32[3];
      uint64x2_t v347 = (uint64x2_t)v345;
      v345.i64[0] = v344.u32[0];
      v345.i64[1] = v344.u32[1];
      int64x2_t v348 = v345;
      v345.i64[0] = v344.u32[2];
      v345.i64[1] = v344.u32[3];
      int64x2_t v349 = vpaddq_s64((int64x2_t)vshlq_u64(v346, (uint64x2_t)vzip1q_s64((int64x2_t)0, v348)), (int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v345)));
      int64x2_t v350 = vpaddq_s64(v348, v345);
      unint64_t v351 = (v349.i64[0] << v333) | v331;
      if (v350.i64[0] + (v333 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v248 + ((v333 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v351;
        unint64_t v351 = (unint64_t)v349.i64[0] >> -(v333 & 0x3F);
        if ((v333 & 0x3F) == 0) {
          unint64_t v351 = 0;
        }
      }
      int8x16_t v352 = vceqq_s8(v65, v151);
      int8x16_t v353 = vaddq_s8(v8, v332);
      unint64_t v354 = v350.i64[0] + v333;
      unint64_t v355 = v351 | (v349.i64[1] << v354);
      if ((v354 & 0x3F) + v350.i64[1] >= 0x40)
      {
        *(void *)((char *)v248 + ((v354 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v355;
        unint64_t v355 = (unint64_t)v349.i64[1] >> -(v354 & 0x3F);
        if ((v354 & 0x3F) == 0) {
          unint64_t v355 = 0;
        }
      }
      int8x16_t v356 = vandq_s8(v156, v352);
      unint64_t v357 = v354 + v350.i64[1];
      v358.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v358.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v359.i64[0] = -1;
      v359.i64[1] = -1;
      uint8x16_t v360 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v359, (uint8x16_t)vaddq_s8(v150, v358)), v353);
      int16x8_t v361 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v150.i8);
      int16x8_t v362 = (int16x8_t)vmovl_high_u8((uint8x16_t)v150);
      uint16x8_t v363 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v360.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v361)), (int16x8_t)vshlq_u16(vmovl_high_u8(v360), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v362)));
      uint16x8_t v364 = (uint16x8_t)vpaddq_s16(v361, v362);
      int32x4_t v365 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v364.i8);
      int32x4_t v366 = (int32x4_t)vmovl_high_u16(v364);
      int32x4_t v367 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v363.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v365)), (int32x4_t)vshlq_u32(vmovl_high_u16(v363), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v366)));
      int32x4_t v368 = vpaddq_s32(v365, v366);
      v369.i64[0] = v367.u32[0];
      v369.i64[1] = v367.u32[1];
      uint64x2_t v370 = (uint64x2_t)v369;
      v369.i64[0] = v367.u32[2];
      v369.i64[1] = v367.u32[3];
      uint64x2_t v371 = (uint64x2_t)v369;
      v369.i64[0] = v368.u32[0];
      v369.i64[1] = v368.u32[1];
      int64x2_t v372 = v369;
      v369.i64[0] = v368.u32[2];
      v369.i64[1] = v368.u32[3];
      int64x2_t v373 = vpaddq_s64((int64x2_t)vshlq_u64(v370, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)), (int64x2_t)vshlq_u64(v371, (uint64x2_t)vzip1q_s64((int64x2_t)0, v369)));
      int64x2_t v374 = vpaddq_s64(v372, v369);
      unint64_t v375 = (v373.i64[0] << v357) | v355;
      if (v374.i64[0] + (v357 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v248 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
        unint64_t v375 = (unint64_t)v373.i64[0] >> -(v357 & 0x3F);
        if ((v357 & 0x3F) == 0) {
          unint64_t v375 = 0;
        }
      }
      int8x16_t v376 = vaddq_s8(v92, v356);
      unint64_t v377 = v374.i64[0] + v357;
      unint64_t v378 = v375 | (v373.i64[1] << v377);
      if ((v377 & 0x3F) + v374.i64[1] >= 0x40)
      {
        *(void *)((char *)v248 + ((v377 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v378;
        unint64_t v378 = (unint64_t)v373.i64[1] >> -(v377 & 0x3F);
        if ((v377 & 0x3F) == 0) {
          unint64_t v378 = 0;
        }
      }
      unint64_t v379 = v377 + v374.i64[1];
      v380.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v380.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v381.i64[0] = -1;
      v381.i64[1] = -1;
      uint8x16_t v382 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v381, (uint8x16_t)vaddq_s8(v151, v380)), v376);
      int16x8_t v383 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v151.i8);
      int16x8_t v384 = (int16x8_t)vmovl_high_u8((uint8x16_t)v151);
      uint16x8_t v385 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v382.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v383)), (int16x8_t)vshlq_u16(vmovl_high_u8(v382), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v384)));
      uint16x8_t v386 = (uint16x8_t)vpaddq_s16(v383, v384);
      int32x4_t v387 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v386.i8);
      int32x4_t v388 = (int32x4_t)vmovl_high_u16(v386);
      int32x4_t v389 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v385.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)), (int32x4_t)vshlq_u32(vmovl_high_u16(v385), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v388)));
      int32x4_t v390 = vpaddq_s32(v387, v388);
      v391.i64[0] = v389.u32[0];
      v391.i64[1] = v389.u32[1];
      uint64x2_t v392 = (uint64x2_t)v391;
      v391.i64[0] = v389.u32[2];
      v391.i64[1] = v389.u32[3];
      uint64x2_t v393 = (uint64x2_t)v391;
      v391.i64[0] = v390.u32[0];
      v391.i64[1] = v390.u32[1];
      int64x2_t v394 = v391;
      v391.i64[0] = v390.u32[2];
      v391.i64[1] = v390.u32[3];
      int64x2_t v395 = vpaddq_s64((int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)), (int64x2_t)vshlq_u64(v393, (uint64x2_t)vzip1q_s64((int64x2_t)0, v391)));
      int64x2_t v396 = vpaddq_s64(v394, v391);
      unint64_t v397 = (v395.i64[0] << v379) | v378;
      if (v396.i64[0] + (v379 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v248 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v397;
        if ((v379 & 0x3F) != 0) {
          unint64_t v397 = (unint64_t)v395.i64[0] >> -(v379 & 0x3F);
        }
        else {
          unint64_t v397 = 0;
        }
      }
      unint64_t v398 = v396.i64[0] + v379;
      unint64_t v399 = v397 | (v395.i64[1] << v398);
      if ((v398 & 0x3F) + v396.i64[1] >= 0x40)
      {
        *(void *)((char *)v248 + ((v398 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v399;
        unint64_t v399 = (unint64_t)v395.i64[1] >> -(v398 & 0x3F);
        if ((v398 & 0x3F) == 0) {
          unint64_t v399 = 0;
        }
      }
      unint64_t v400 = v398 + v396.i64[1];
      if ((v400 & 0x3F) != 0) {
        *(void *)((char *)v248 + ((v400 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v399;
      }
      unint64_t v158 = (v400 - v249 + 7) >> 3;
      char v157 = *a2 | (v158 - 1);
    }
  }
  else
  {
    a1->i16[0] = *(_WORD *)a3;
    char v157 = 1;
    unint64_t v158 = 2;
  }
  *a2 = v157;
  return v158;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(uint64_t result, uint64_t a2, int8x16_t *a3, char *a4, int a5, int a6)
{
  int8x16_t v9 = a3;
  uint64_t v11 = result;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 2) {
    int v13 = 2;
  }
  else {
    int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, result, a2, v12);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v14 = 2 * a2;
  int8x16_t v15 = a4 + 1;
  if (a6 <= 2) {
    int v16 = 2;
  }
  else {
    int v16 = a6;
  }
  unsigned int v17 = v16 - 2;
  if (v17 >= 2) {
    int v18 = 2;
  }
  else {
    int v18 = v17;
  }
  if (v12 && v18)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v15, v11 + v14, a2, v12);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int8x16_t v15 = 0;
  }
  int8x16_t v19 = a4 + 2;
  if (a5 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a5;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v22 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, v11 + 32, a2, v22);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v23 = a4 + 3;
  }
  else
  {
    *int8x16_t v19 = 0;
    int8x16_t v23 = a4 + 3;
    if (!v22) {
      goto LABEL_33;
    }
  }
  if (v18)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, v11 + v14 + 32, a2, v22);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v23 = 0;
LABEL_34:
  int8x16_t v24 = a4 + 4;
  if (a6 <= 4) {
    int v25 = 4;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 4;
  if (v26 >= 2) {
    int v27 = 2;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, v11 + 4 * a2, a2, v12);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int8x16_t v24 = 0;
  }
  int8x16_t v28 = a4 + 5;
  if (a6 <= 6) {
    int v29 = 6;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 6;
  if (v30 >= 2) {
    int v31 = 2;
  }
  else {
    int v31 = v30;
  }
  if (v12 && v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, v11 + 6 * a2, a2, v12);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v28 = 0;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  if (v27)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v32, v11 + 4 * a2 + 32, a2, v22);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v33 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v32 = 0;
  int8x16_t v33 = a4 + 7;
  if (!v22)
  {
LABEL_62:
    char *v33 = 0;
    return result;
  }
LABEL_58:
  if (!v31) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, v11 + 6 * a2 + 32, a2, v22);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)1>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::computeDquadMode(unsigned int a1, unsigned int a2, int a3, int a4)
{
  int v4 = 1;
  int v5 = a2;
  switch(a1)
  {
    case 2u:
      BOOL v6 = a2 == 1;
      goto LABEL_14;
    case 8u:
      break;
    case 0xAu:
      if (a2 - 1 >= 3) {
        int v5 = a2;
      }
      else {
        int v5 = 3;
      }
      goto LABEL_18;
    case 0xCu:
      if (a2 - 1 >= 4) {
        int v5 = a2;
      }
      else {
        int v5 = 4;
      }
      int v4 = -2;
      break;
    case 0x10u:
      BOOL v6 = a4 == 0xFFFF && a2 == 1;
LABEL_14:
      if (v6) {
        int v5 = 2;
      }
      else {
        int v5 = a2;
      }
      goto LABEL_18;
    case 0x20u:
      int v5 = (a2 & 1) + (a2 >> 1);
LABEL_18:
      int v4 = -1;
      break;
    default:
      int v4 = 0;
      int v5 = a2;
      break;
  }
  unsigned int v7 = (v5 + v4) & ~((v5 + v4) >> 31);
  BOOL v8 = ~(-1 << a1) != a3 || a1 > 0xB;
  if (!a3) {
    BOOL v8 = 0;
  }
  if (v7 > 2) {
    BOOL v8 = v7;
  }
  if (a1 - 8 <= 4) {
    unsigned int v9 = v8;
  }
  else {
    unsigned int v9 = v7;
  }
  if (a2) {
    return v7;
  }
  else {
    return v9;
  }
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::getDquadModeData(int a1, char a2, char a3, int *a4)
{
  uint64_t result = 0;
  *a4 = 0;
  int v6 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[a1];
  switch(v6)
  {
    case 2:
      uint64_t result = a2 & 1;
      break;
    case 8:
    case 10:
      if ((a2 & 7) != 0)
      {
        uint64_t result = (a2 & 7u) + 2;
      }
      else if ((a3 & 3) == 2)
      {
        uint64_t result = 1;
      }
      else if ((a3 & 3) == 1)
      {
        uint64_t result = 0;
        *a4 = ~(-1 << v6);
      }
      else if ((a3 & 3) != 0)
      {
        uint64_t result = 2;
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    case 12:
      if ((a2 & 7) != 0) {
        uint64_t result = (a2 & 7u) + 3;
      }
      else {
        uint64_t result = a3 & 3;
      }
      break;
    case 16:
    case 32:
      uint64_t result = a2 & 0xF;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  BOOL v8 = a5 < 4 || a6 < 2;
  int32x4_t v9 = *(int32x4_t *)((char *)a3 + a4);
  int8x16_t v10 = (int8x16_t)vzip1q_s32(*a3, v9);
  int8x16_t v11 = (int8x16_t)vzip2q_s32(*a3, v9);
  unsigned int v12 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v13 = *(int32x4_t *)((char *)v12 + a4);
  int8x16_t v14 = (int8x16_t)vzip1q_s32(*v12, v13);
  int8x16_t v15 = (int8x16_t)vzip2q_s32(*v12, v13);
  int8x16_t v16 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v10.i8, 0);
  int8x16_t v17 = vsubq_s8(v10, v16);
  int8x16_t v18 = vsubq_s8(v14, v16);
  int8x16_t v19 = vsubq_s8(v11, v16);
  int8x16_t v20 = vsubq_s8(v15, v16);
  int8x16_t v21 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v22 = vpmaxq_s8(v21, v21);
  int8x16_t v23 = vpminq_s8(v21, v21);
  int8x16_t v24 = vpmaxq_s8(v22, v22);
  int8x16_t v25 = vpminq_s8(v23, v23);
  int8x16_t v26 = vpmaxq_s8(v24, v24);
  int8x16_t v27 = vpminq_s8(v25, v25);
  v28.i64[0] = 0x8080808080808080;
  v28.i64[1] = 0x8080808080808080;
  int8x16_t v29 = vmaxq_s8(v26, v28);
  v30.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v30.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v31 = vminq_s8(v27, v30);
  int8x16_t v32 = vzip1q_s8(v26, v27);
  v33.i64[0] = 0x808080808080808;
  v33.i64[1] = 0x808080808080808;
  int8x16_t v34 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v32)), vceqzq_s8(v32));
  int8x16_t v35 = vpmaxq_s8(v34, v34);
  int8x16_t v36 = vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7510);
  int8x16_t v37 = vpmaxq_s8(v36, v36);
  int8x16_t v38 = vpminq_s8(v36, v36);
  int8x16_t v39 = vpmaxq_s8(v37, v37);
  int8x16_t v40 = vpminq_s8(v38, v38);
  int8x16_t v41 = vpmaxq_s8(v39, v39);
  int8x16_t v42 = vpminq_s8(v40, v40);
  int8x16_t v43 = vmaxq_s8(v29, v41);
  int8x16_t v44 = vminq_s8(v31, v42);
  int8x16_t v45 = vzip1q_s8(v41, v42);
  int8x16_t v46 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v45)), vceqzq_s8(v45));
  int8x16_t v47 = vpmaxq_s8(v46, v46);
  int8x16_t v48 = vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7510);
  int8x16_t v49 = vpmaxq_s8(v48, v48);
  int8x16_t v50 = vpminq_s8(v48, v48);
  int8x16_t v51 = vpmaxq_s8(v49, v49);
  int8x16_t v52 = vpminq_s8(v50, v50);
  int8x16_t v53 = vpmaxq_s8(v51, v51);
  int8x16_t v54 = vpminq_s8(v52, v52);
  int8x16_t v55 = vmaxq_s8(v43, v53);
  int8x16_t v56 = vminq_s8(v44, v54);
  int8x16_t v57 = vzip1q_s8(v53, v54);
  int8x16_t v58 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v57)), vceqzq_s8(v57));
  int8x16_t v59 = vpmaxq_s8(v58, v58);
  int8x16_t v60 = vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7510);
  int8x16_t v61 = vpmaxq_s8(v60, v60);
  int8x16_t v62 = vpminq_s8(v60, v60);
  int8x16_t v63 = vpmaxq_s8(v61, v61);
  int8x16_t v64 = vpminq_s8(v62, v62);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vmaxq_s8(v55, v65);
  int8x16_t v68 = vminq_s8(v56, v66);
  int8x16_t v69 = vzip1q_s8(v65, v66);
  int8x16_t v70 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v69)), vceqzq_s8(v69));
  int8x16_t v71 = vpmaxq_s8(v70, v70);
  int8x16_t v72 = vmaxq_s8(vmaxq_s8(v35, v47), vmaxq_s8(v59, v71));
  int8x16_t v73 = vclzq_s8(vsubq_s8(v67, v68));
  int8x16_t v74 = vsubq_s8(v33, v73);
  int8x16_t v75 = vcgtq_s8(v72, v74);
  int8x16_t v76 = vbslq_s8(v75, v74, v72);
  if (!vmaxvq_s8(v76))
  {
    *(_WORD *)a1 = a3->i16[0];
    *a2 = 1;
    return 2;
  }
  int8x16_t v413 = v14;
  int8x16_t v414 = v11;
  int8x16_t v415 = v15;
  v77.i64[0] = -1;
  v77.i64[1] = -1;
  v78.i64[0] = 0x707070707070707;
  v78.i64[1] = 0x707070707070707;
  int8x16_t v418 = vandq_s8(vsubq_s8(vshlq_s8(v77, vsubq_s8(v78, v73)), v68), v75);
  v79.i64[0] = 0x303030303030303;
  v79.i64[1] = 0x303030303030303;
  int8x16_t v80 = vorrq_s8(vandq_s8(vceqzq_s8(v76), v79), vandq_s8(v75, v33));
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v35), v79), (int8x16_t)0);
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v47), v79), (int8x16_t)0);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v59), v79), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v71), v79), (int8x16_t)0);
  v85.i64[0] = 0x404040404040404;
  v85.i64[1] = 0x404040404040404;
  int8x16_t v86 = vorrq_s8(vbicq_s8(v85, vceqq_s8(vaddq_s8(v84, v83), vnegq_s8(vaddq_s8(v81, v82)))), v80);
  int8x16_t v87 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7500));
  int8x16_t v88 = vsubq_s8(v19, vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7500));
  int8x16_t v89 = vsubq_s8(v20, vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7500));
  int8x16_t v416 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
  int8x16_t v90 = vqtbl1q_s8(v416, (int8x16_t)xmmword_242EA7510);
  int8x16_t v91 = v17;
  int8x16_t v92 = vpmaxq_s8(v90, v90);
  int8x16_t v93 = vpminq_s8(v90, v90);
  int8x16_t v94 = vpmaxq_s8(v92, v92);
  int8x16_t v95 = vpminq_s8(v93, v93);
  int8x16_t v96 = vpmaxq_s8(v94, v94);
  int8x16_t v97 = vpminq_s8(v95, v95);
  int8x16_t v98 = vmaxq_s8(v96, v28);
  int8x16_t v99 = vminq_s8(v97, v30);
  int8x16_t v100 = vzip1q_s8(v96, v97);
  int8x16_t v101 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v100)), vceqzq_s8(v100));
  int8x16_t v102 = vpmaxq_s8(v101, v101);
  int8x16_t v103 = vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7510);
  int8x16_t v104 = vpmaxq_s8(v103, v103);
  int8x16_t v105 = vpminq_s8(v103, v103);
  int8x16_t v106 = vpmaxq_s8(v104, v104);
  int8x16_t v107 = vpminq_s8(v105, v105);
  int8x16_t v108 = vpmaxq_s8(v106, v106);
  int8x16_t v109 = vpminq_s8(v107, v107);
  int8x16_t v110 = vmaxq_s8(v98, v108);
  int8x16_t v111 = vminq_s8(v99, v109);
  int8x16_t v112 = vzip1q_s8(v108, v109);
  int8x16_t v113 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v112)), vceqzq_s8(v112));
  int8x16_t v114 = vpmaxq_s8(v113, v113);
  int8x16_t v115 = vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7510);
  int8x16_t v116 = vpmaxq_s8(v115, v115);
  int8x16_t v117 = vpminq_s8(v115, v115);
  int8x16_t v118 = vpmaxq_s8(v116, v116);
  int8x16_t v119 = vpminq_s8(v117, v117);
  int8x16_t v120 = vpmaxq_s8(v118, v118);
  int8x16_t v121 = vpminq_s8(v119, v119);
  int8x16_t v122 = vmaxq_s8(v110, v120);
  int8x16_t v123 = vminq_s8(v111, v121);
  int8x16_t v124 = vzip1q_s8(v120, v121);
  int8x16_t v125 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v124)), vceqzq_s8(v124));
  int8x16_t v126 = vpmaxq_s8(v125, v125);
  int8x16_t v127 = vqtbl1q_s8(v89, (int8x16_t)xmmword_242EA7510);
  int8x16_t v128 = vpmaxq_s8(v127, v127);
  int8x16_t v129 = vpminq_s8(v127, v127);
  int8x16_t v130 = vpmaxq_s8(v128, v128);
  int8x16_t v131 = vpminq_s8(v129, v129);
  int8x16_t v132 = vpmaxq_s8(v130, v130);
  int8x16_t v133 = vpminq_s8(v131, v131);
  int8x16_t v134 = vmaxq_s8(v122, v132);
  int8x16_t v135 = vminq_s8(v123, v133);
  int8x16_t v136 = vzip1q_s8(v132, v133);
  int8x16_t v137 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v136)), vceqzq_s8(v136));
  int8x16_t v138 = vpmaxq_s8(v137, v137);
  int8x16_t v139 = vmaxq_s8(vmaxq_s8(v102, v114), vmaxq_s8(v126, v138));
  int8x16_t v140 = vclzq_s8(vsubq_s8(v134, v135));
  int8x16_t v141 = vsubq_s8(v33, v140);
  int8x16_t v142 = vcgtq_s8(v139, v141);
  int8x16_t v143 = vbslq_s8(v142, v141, v139);
  v141.i64[0] = 0x1010101010101010;
  v141.i64[1] = 0x1010101010101010;
  v144.i64[0] = 0x1818181818181818;
  v144.i64[1] = 0x1818181818181818;
  int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v143), v79), vbslq_s8(v142, v144, v141));
  int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v102), v79), (int8x16_t)0);
  int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v114), v79), (int8x16_t)0);
  int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v126), v79), (int8x16_t)0);
  int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v138), v79), (int8x16_t)0);
  int8x16_t v150 = vsubq_s8(v143, v146);
  int8x16_t v151 = vsubq_s8(v143, v147);
  int8x16_t v152 = vsubq_s8(v143, v148);
  int8x16_t v153 = vsubq_s8(v143, v149);
  int8x16_t v154 = vorrq_s8(v145, vbicq_s8(v85, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8(v146, v147)))));
  uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
  v147.i64[0] = 0x8000800080008;
  v147.i64[1] = 0x8000800080008;
  v146.i64[0] = 0x2000200020002;
  v146.i64[1] = 0x2000200020002;
  int16x8_t v156 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v147)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v143.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v146), v147));
  int8x16_t v157 = (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v86.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v146);
  int8x16_t v158 = vsubq_s8(v76, v81);
  int8x16_t v159 = vsubq_s8(v76, v82);
  int8x16_t v160 = vsubq_s8(v76, v83);
  int8x16_t v161 = vsubq_s8(v76, v84);
  int8x16_t v162 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v76.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v86.i8))),
                                                              (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v86.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8(v157, v147)), v156)), 0);
  if (vaddlvq_s8(v162))
  {
    v163.i64[0] = 0x707070707070707;
    v163.i64[1] = 0x707070707070707;
    v164.i64[0] = -1;
    v164.i64[1] = -1;
    int8x16_t v165 = vsubq_s8(vshlq_s8(v164, vsubq_s8(v163, v140)), v135);
    int8x16_t v16 = vbslq_s8(v162, vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500)), v16);
    int8x16_t v417 = vbslq_s8(v162, v416, v91);
    int8x16_t v166 = vbslq_s8(v162, v87, v18);
    int8x16_t v158 = vbslq_s8(v162, v150, v158);
    int8x16_t v159 = vbslq_s8(v162, v151, v159);
    int8x16_t v160 = vbslq_s8(v162, v152, v160);
    int8x16_t v161 = vbslq_s8(v162, v153, v161);
    int8x16_t v167 = vbslq_s8(v162, vandq_s8(v165, v142), v418);
    int8x16_t v76 = vbslq_s8(v162, v143, v76);
    int8x16_t v86 = vbslq_s8(v162, v154, v86);
    int8x16_t v168 = vbslq_s8(v162, v89, v20);
    int8x16_t v169 = vbslq_s8(v162, v88, v19);
    if (v8) {
      goto LABEL_15;
    }
  }
  else
  {
    int8x16_t v417 = v91;
    int8x16_t v166 = v18;
    int8x16_t v168 = v20;
    int8x16_t v169 = v19;
    int8x16_t v167 = v418;
    if (v8) {
      goto LABEL_15;
    }
  }
  int8x16_t v171 = v413;
  v171.i16[7] = v10.i16[7];
  int8x16_t v172 = vsubq_s8(v10, vqtbl1q_s8(v10, (int8x16_t)xmmword_242EA7520));
  int8x16_t v173 = vsubq_s8(v413, vqtbl1q_s8(v171, (int8x16_t)xmmword_242EA7530));
  int8x16_t v174 = v414;
  v174.i16[7] = v10.i16[7];
  int8x16_t v175 = vsubq_s8(v414, vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7540));
  int8x16_t v176 = v415;
  v176.i16[7] = v10.i16[7];
  int8x16_t v177 = vsubq_s8(v415, vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7550));
  int8x16_t v178 = v172;
  v178.i16[0] = v172.i16[7];
  v178.i16[7] = v172.i16[0];
  int8x16_t v179 = vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7510);
  int8x16_t v180 = vpmaxq_s8(v179, v179);
  int8x16_t v181 = vpminq_s8(v179, v179);
  int8x16_t v182 = vpmaxq_s8(v180, v180);
  int8x16_t v183 = vpminq_s8(v181, v181);
  int8x16_t v184 = vpmaxq_s8(v182, v182);
  int8x16_t v185 = vpminq_s8(v183, v183);
  v186.i64[0] = 0x8080808080808080;
  v186.i64[1] = 0x8080808080808080;
  int8x16_t v187 = vmaxq_s8(v184, v186);
  v188.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v188.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v189 = vzip1q_s8(v184, v185);
  v190.i64[0] = 0x808080808080808;
  v190.i64[1] = 0x808080808080808;
  int8x16_t v191 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v189)), vceqzq_s8(v189));
  int8x16_t v192 = vpmaxq_s8(v191, v191);
  int8x16_t v193 = vqtbl1q_s8(v173, (int8x16_t)xmmword_242EA7510);
  int8x16_t v194 = vpmaxq_s8(v193, v193);
  int8x16_t v195 = vpminq_s8(v193, v193);
  int8x16_t v196 = vpmaxq_s8(v194, v194);
  int8x16_t v197 = vpminq_s8(v195, v195);
  int8x16_t v198 = vpmaxq_s8(v196, v196);
  int8x16_t v199 = vpminq_s8(v197, v197);
  int8x16_t v200 = vmaxq_s8(v187, v198);
  int8x16_t v201 = vminq_s8(vminq_s8(v185, v188), v199);
  int8x16_t v202 = vzip1q_s8(v198, v199);
  int8x16_t v203 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v202)), vceqzq_s8(v202));
  int8x16_t v204 = vpmaxq_s8(v203, v203);
  int8x16_t v205 = vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7510);
  int8x16_t v206 = vpmaxq_s8(v205, v205);
  int8x16_t v207 = vpminq_s8(v205, v205);
  int8x16_t v208 = vpmaxq_s8(v206, v206);
  int8x16_t v209 = vpminq_s8(v207, v207);
  int8x16_t v210 = vpmaxq_s8(v208, v208);
  int8x16_t v211 = vpminq_s8(v209, v209);
  int8x16_t v212 = vmaxq_s8(v200, v210);
  int8x16_t v213 = vminq_s8(v201, v211);
  int8x16_t v214 = vzip1q_s8(v210, v211);
  int8x16_t v215 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v214)), vceqzq_s8(v214));
  int8x16_t v216 = vpmaxq_s8(v215, v215);
  int8x16_t v217 = vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7510);
  int8x16_t v218 = vpmaxq_s8(v217, v217);
  int8x16_t v219 = vpminq_s8(v217, v217);
  int8x16_t v220 = vpmaxq_s8(v218, v218);
  int8x16_t v221 = vpminq_s8(v219, v219);
  int8x16_t v222 = vpmaxq_s8(v220, v220);
  int8x16_t v223 = vpminq_s8(v221, v221);
  int8x16_t v224 = vminq_s8(v213, v223);
  int8x16_t v225 = vzip1q_s8(v222, v223);
  int8x16_t v226 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v225)), vceqzq_s8(v225));
  int8x16_t v227 = vpmaxq_s8(v226, v226);
  int8x16_t v228 = vmaxq_s8(vmaxq_s8(v192, v204), vmaxq_s8(v216, v227));
  int8x16_t v229 = vclzq_s8(vsubq_s8(vmaxq_s8(v212, v222), v224));
  int8x16_t v230 = vsubq_s8(v190, v229);
  int8x16_t v231 = vcgtq_s8(v228, v230);
  int8x16_t v232 = vbslq_s8(v231, v230, v228);
  v230.i64[0] = 0x909090909090909;
  v230.i64[1] = 0x909090909090909;
  v233.i64[0] = 0x202020202020202;
  v233.i64[1] = 0x202020202020202;
  int8x16_t v234 = vorrq_s8(vandq_s8(vceqzq_s8(v232), v233), vsubq_s8(vandq_s8(v231, v230), vmvnq_s8(v231)));
  v228.i64[0] = 0x303030303030303;
  v228.i64[1] = 0x303030303030303;
  int8x16_t v235 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v192), v228), (int8x16_t)0);
  int8x16_t v236 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v204), v228), (int8x16_t)0);
  int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v216), v228), (int8x16_t)0);
  int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v227), v228), (int8x16_t)0);
  int8x16_t v239 = vsubq_s8(v232, v235);
  int8x16_t v240 = vsubq_s8(v232, v236);
  int8x16_t v241 = vsubq_s8(v232, v237);
  int8x16_t v242 = vsubq_s8(v232, v238);
  int8x16_t v243 = vceqq_s8(vaddq_s8(v238, v237), vnegq_s8(vaddq_s8(v235, v236)));
  v238.i64[0] = 0x404040404040404;
  v238.i64[1] = 0x404040404040404;
  int8x16_t v244 = vorrq_s8(v234, vbicq_s8(v238, v243));
  v245.i64[0] = 0x3000300030003;
  v245.i64[1] = 0x3000300030003;
  int8x16_t v246 = (int8x16_t)vmovl_s8(*(int8x8_t *)v86.i8);
  v236.i64[0] = 0x8000800080008;
  v236.i64[1] = 0x8000800080008;
  int16x8_t v247 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v76.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v246, v236)));
  int16x8_t v248 = (int16x8_t)vandq_s8(v246, v245);
  v245.i64[0] = 0x2000200020002;
  v245.i64[1] = 0x2000200020002;
  int8x16_t v249 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v247, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v86.i8, 1uLL), v236)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v248, (int16x8_t)v245), v236)), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8),
                                                                *(int8x8_t *)v161.i8),
                                                              3uLL)),
                                                          vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v241.i8, *(int8x8_t *)v240.i8), *(int8x8_t *)v242.i8), 3uLL), *(int8x8_t *)v239.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v244.i8, *(int8x8_t *)v244.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v232.i8, (int8x8_t)vcgt_u8(
                                                                          (uint8x8_t)0x808080808080808,
                                                                          *(uint8x8_t *)v244.i8))))),
                      0);
  if (vaddlvq_s8(v249))
  {
    v250.i64[0] = 0x707070707070707;
    v250.i64[1] = 0x707070707070707;
    v251.i64[0] = -1;
    v251.i64[1] = -1;
    int8x16_t v252 = vsubq_s8(vshlq_s8(v251, vsubq_s8(v250, v229)), v224);
    v16.i16[0] = vbslq_s8(v249, vextq_s8(v10, v10, 0xEuLL), v16).u16[0];
    int8x16_t v253 = vbslq_s8(v249, v178, v417);
    int8x16_t v166 = vbslq_s8(v249, v173, v166);
    int8x16_t v169 = vbslq_s8(v249, v175, v169);
    int8x16_t v168 = vbslq_s8(v249, v177, v168);
    int8x16_t v158 = vbslq_s8(v249, v239, v158);
    int8x16_t v159 = vbslq_s8(v249, v240, v159);
    int8x16_t v160 = vbslq_s8(v249, v241, v160);
    int8x16_t v161 = vbslq_s8(v249, v242, v161);
    int8x16_t v167 = vbslq_s8(v249, vandq_s8(v252, v231), v167);
    int8x16_t v76 = vbslq_s8(v249, v232, v76);
    int8x16_t v86 = vbslq_s8(v249, v244, v86);
    goto LABEL_16;
  }
LABEL_15:
  int8x16_t v253 = v417;
LABEL_16:
  int8x16_t v254 = (int8x16_t)vmovl_s8(*(int8x8_t *)v86.i8);
  v255.i64[0] = 0x8000800080008;
  v255.i64[1] = 0x8000800080008;
  int16x8_t v256 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v76.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v254, v255)));
  v257.i64[0] = 0x3000300030003;
  v257.i64[1] = 0x3000300030003;
  int16x8_t v258 = (int16x8_t)vandq_s8(v254, v257);
  v257.i64[0] = 0x2000200020002;
  v257.i64[1] = 0x2000200020002;
  int16x8_t v259 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v86.i8, 1uLL), v255)), v256), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v258, (int16x8_t)v257), v255));
  if ((unint64_t)(vpaddq_s16(v259, v259).i16[0] - 227) <= 0xFFFFFFFFFFFFFEF7)
  {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
    return 32;
  }
  else
  {
    int8x16_t v260 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v261 = 8 * (a1 & 7);
    if (v261) {
      uint64_t v262 = *v260 & ~(-1 << v261);
    }
    else {
      uint64_t v262 = 0;
    }
    unint64_t v263 = (unint64_t)((v76.i8[0] - 1) & 7) << 10;
    if (!v76.i8[0]) {
      unint64_t v263 = 0;
    }
    if (v76.i8[1]) {
      uint64_t v264 = (unsigned __int16)((v76.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v264 = 0;
    }
    *a2 = v86.i8[0] << 6;
    unint64_t v265 = ((v263 | v264) & 0xFFFFFFFFFFFFFC1FLL | v86.i8[0] & 0x1C | (32 * (v86.i8[1] & 0x1F))) >> 2;
    unint64_t v266 = v262 | (v265 << v261);
    if (v261 >= 0x32)
    {
      *int8x16_t v260 = v266;
      unint64_t v266 = v265 >> (-8 * (a1 & 7u));
    }
    unint64_t v267 = (v261 + 14) & 0x3E;
    unint64_t v268 = v266 | ((unint64_t)v16.u16[0] << v267);
    if (v267 >= 0x30)
    {
      *(void *)((char *)v260 + (((v261 + 14) >> 3) & 8)) = v268;
      unint64_t v268 = (unint64_t)v16.u16[0] >> -(char)v267;
    }
    unint64_t v269 = v261 + 30;
    int8x16_t v270 = vsubq_s8(v76, v158);
    int8x16_t v271 = vsubq_s8(v76, v159);
    int8x16_t v272 = vsubq_s8(v76, v160);
    int8x16_t v273 = vsubq_s8(v76, v161);
    v270.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v270, v271), (int16x8_t)vzip1q_s8(v272, v273)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v270, v271), (int16x8_t)vtrn2q_s8(v272, v273))).u64[0];
    v272.i64[0] = 0x202020202020202;
    v272.i64[1] = 0x202020202020202;
    int8x16_t v274 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v86.i8), (int8x8_t)0x4000400040004)))), v272);
    v272.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v272.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v273.i64[0] = -1;
    v273.i64[1] = -1;
    uint8x16_t v275 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v273, (uint8x16_t)vorrq_s8(v274, v272)), (int8x16_t)v270.u64[0]);
    int16x8_t v276 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v274.i8);
    uint16x8_t v277 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v275.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v276)), (int16x8_t)vmovl_high_u8(v275));
    uint16x8_t v278 = (uint16x8_t)vpaddq_s16(v276, (int16x8_t)vmovl_high_u8((uint8x16_t)v274));
    int32x4_t v279 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v278.i8);
    int32x4_t v280 = (int32x4_t)vmovl_high_u16(v278);
    int32x4_t v281 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v277.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v279)), (int32x4_t)vshlq_u32(vmovl_high_u16(v277), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v280)));
    int32x4_t v282 = vpaddq_s32(v279, v280);
    v283.i64[0] = v281.u32[0];
    v283.i64[1] = v281.u32[1];
    uint64x2_t v284 = (uint64x2_t)v283;
    v283.i64[0] = v281.u32[2];
    v283.i64[1] = v281.u32[3];
    uint64x2_t v285 = (uint64x2_t)v283;
    v283.i64[0] = v282.u32[0];
    v283.i64[1] = v282.u32[1];
    int64x2_t v286 = v283;
    v283.i64[0] = v282.u32[2];
    v283.i64[1] = v282.u32[3];
    int64x2_t v287 = vpaddq_s64((int64x2_t)vshlq_u64(v284, (uint64x2_t)vzip1q_s64((int64x2_t)0, v286)), (int64x2_t)vshlq_u64(v285, (uint64x2_t)vzip1q_s64((int64x2_t)0, v283)));
    int64x2_t v288 = vpaddq_s64(v286, v283);
    uint64_t v289 = (v261 + 30) & 0x3E;
    unint64_t v290 = (v287.i64[0] << v289) | v268;
    if ((unint64_t)(v288.i64[0] + v289) >= 0x40)
    {
      *(void *)((char *)v260 + ((v269 >> 3) & 8)) = v290;
      unint64_t v290 = (unint64_t)v287.i64[0] >> -(char)v289;
    }
    int8x16_t v291 = vceqq_s8(v76, v158);
    unint64_t v292 = v288.i64[0] + v269;
    unint64_t v293 = v290 | (v287.i64[1] << v292);
    if ((v292 & 0x3F) + v288.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v292 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v293;
      unint64_t v293 = (unint64_t)v287.i64[1] >> -(v292 & 0x3F);
      if ((v292 & 0x3F) == 0) {
        unint64_t v293 = 0;
      }
    }
    int8x16_t v294 = vandq_s8(v167, v291);
    unint64_t v295 = v292 + v288.i64[1];
    v296.i64[0] = 0x808080808080808;
    v296.i64[1] = 0x808080808080808;
    v297.i64[0] = -1;
    v297.i64[1] = -1;
    int8x16_t v298 = vandq_s8(vextq_s8(vtstq_s8(v86, v296), (int8x16_t)0, 0xEuLL), v76);
    v299.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v299.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v300 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v297, (uint8x16_t)vaddq_s8(v298, v299)), v167);
    int16x8_t v301 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v298.i8);
    uint16x8_t v302 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v300.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v301)), (int16x8_t)vmovl_high_u8(v300));
    uint16x8_t v303 = (uint16x8_t)vpaddq_s16(v301, (int16x8_t)vmovl_high_u8((uint8x16_t)v298));
    int32x4_t v304 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v303.i8);
    int32x4_t v305 = (int32x4_t)vmovl_high_u16(v303);
    int32x4_t v306 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v302.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v304)), (int32x4_t)vshlq_u32(vmovl_high_u16(v302), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v305)));
    int32x4_t v307 = vpaddq_s32(v304, v305);
    v308.i64[0] = v306.u32[0];
    v308.i64[1] = v306.u32[1];
    uint64x2_t v309 = (uint64x2_t)v308;
    v308.i64[0] = v306.u32[2];
    v308.i64[1] = v306.u32[3];
    uint64x2_t v310 = (uint64x2_t)v308;
    v308.i64[0] = v307.u32[0];
    v308.i64[1] = v307.u32[1];
    int64x2_t v311 = v308;
    v308.i64[0] = v307.u32[2];
    v308.i64[1] = v307.u32[3];
    int64x2_t v312 = vpaddq_s64((int64x2_t)vshlq_u64(v309, (uint64x2_t)vzip1q_s64((int64x2_t)0, v311)), (int64x2_t)vshlq_u64(v310, (uint64x2_t)vzip1q_s64((int64x2_t)0, v308)));
    int64x2_t v313 = vpaddq_s64(v311, v308);
    unint64_t v314 = (v312.i64[0] << v295) | v293;
    if (v313.i64[0] + (v295 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v295 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v314;
      unint64_t v314 = (unint64_t)v312.i64[0] >> -(v295 & 0x3F);
      if ((v295 & 0x3F) == 0) {
        unint64_t v314 = 0;
      }
    }
    int8x16_t v315 = vceqq_s8(v76, v159);
    int8x16_t v316 = vaddq_s8(v294, v253);
    unint64_t v317 = v313.i64[0] + v295;
    unint64_t v318 = v314 | (v312.i64[1] << v317);
    if ((v317 & 0x3F) + v313.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v317 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v318;
      unint64_t v318 = (unint64_t)v312.i64[1] >> -(v317 & 0x3F);
      if ((v317 & 0x3F) == 0) {
        unint64_t v318 = 0;
      }
    }
    int8x16_t v319 = vandq_s8(v167, v315);
    unint64_t v320 = v317 + v313.i64[1];
    int8x16_t v321 = vextq_s8((int8x16_t)0, v158, 0xEuLL);
    v322.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v322.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v323.i64[0] = -1;
    v323.i64[1] = -1;
    uint8x16_t v324 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v323, (uint8x16_t)vaddq_s8(v321, v322)), v316);
    int16x8_t v325 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v321.i8);
    int16x8_t v326 = (int16x8_t)vmovl_high_u8((uint8x16_t)v321);
    uint16x8_t v327 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v324.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v325)), (int16x8_t)vshlq_u16(vmovl_high_u8(v324), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v326)));
    uint16x8_t v328 = (uint16x8_t)vpaddq_s16(v325, v326);
    int32x4_t v329 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v328.i8);
    int32x4_t v330 = (int32x4_t)vmovl_high_u16(v328);
    int32x4_t v331 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v327.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)), (int32x4_t)vshlq_u32(vmovl_high_u16(v327), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)));
    int32x4_t v332 = vpaddq_s32(v329, v330);
    v333.i64[0] = v331.u32[0];
    v333.i64[1] = v331.u32[1];
    uint64x2_t v334 = (uint64x2_t)v333;
    v333.i64[0] = v331.u32[2];
    v333.i64[1] = v331.u32[3];
    uint64x2_t v335 = (uint64x2_t)v333;
    v333.i64[0] = v332.u32[0];
    v333.i64[1] = v332.u32[1];
    int64x2_t v336 = v333;
    v333.i64[0] = v332.u32[2];
    v333.i64[1] = v332.u32[3];
    int64x2_t v337 = vpaddq_s64((int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v336)), (int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v333)));
    int64x2_t v338 = vpaddq_s64(v336, v333);
    unint64_t v339 = (v337.i64[0] << v320) | v318;
    if (v338.i64[0] + (v320 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v320 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
      unint64_t v339 = (unint64_t)v337.i64[0] >> -(v320 & 0x3F);
      if ((v320 & 0x3F) == 0) {
        unint64_t v339 = 0;
      }
    }
    int8x16_t v340 = vceqq_s8(v76, v160);
    int8x16_t v341 = vaddq_s8(v166, v319);
    unint64_t v342 = v338.i64[0] + v320;
    unint64_t v343 = v339 | (v337.i64[1] << v342);
    if ((v342 & 0x3F) + v338.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v343;
      unint64_t v343 = (unint64_t)v337.i64[1] >> -(v342 & 0x3F);
      if ((v342 & 0x3F) == 0) {
        unint64_t v343 = 0;
      }
    }
    int8x16_t v344 = vandq_s8(v167, v340);
    unint64_t v345 = v342 + v338.i64[1];
    v346.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v346.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v347.i64[0] = -1;
    v347.i64[1] = -1;
    uint8x16_t v348 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v347, (uint8x16_t)vaddq_s8(v159, v346)), v341);
    int16x8_t v349 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
    int16x8_t v350 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
    uint16x8_t v351 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v348.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v349)), (int16x8_t)vshlq_u16(vmovl_high_u8(v348), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v350)));
    uint16x8_t v352 = (uint16x8_t)vpaddq_s16(v349, v350);
    int32x4_t v353 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v352.i8);
    int32x4_t v354 = (int32x4_t)vmovl_high_u16(v352);
    int32x4_t v355 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v351.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v353)), (int32x4_t)vshlq_u32(vmovl_high_u16(v351), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)));
    int32x4_t v356 = vpaddq_s32(v353, v354);
    v357.i64[0] = v355.u32[0];
    v357.i64[1] = v355.u32[1];
    uint64x2_t v358 = (uint64x2_t)v357;
    v357.i64[0] = v355.u32[2];
    v357.i64[1] = v355.u32[3];
    uint64x2_t v359 = (uint64x2_t)v357;
    v357.i64[0] = v356.u32[0];
    v357.i64[1] = v356.u32[1];
    int64x2_t v360 = v357;
    v357.i64[0] = v356.u32[2];
    v357.i64[1] = v356.u32[3];
    int64x2_t v361 = vpaddq_s64((int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v360)), (int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v357)));
    int64x2_t v362 = vpaddq_s64(v360, v357);
    unint64_t v363 = (v361.i64[0] << v345) | v343;
    if (v362.i64[0] + (v345 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v345 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v363;
      unint64_t v363 = (unint64_t)v361.i64[0] >> -(v345 & 0x3F);
      if ((v345 & 0x3F) == 0) {
        unint64_t v363 = 0;
      }
    }
    int8x16_t v364 = vceqq_s8(v76, v161);
    int8x16_t v365 = vaddq_s8(v169, v344);
    unint64_t v366 = v362.i64[0] + v345;
    unint64_t v367 = v363 | (v361.i64[1] << v366);
    if ((v366 & 0x3F) + v362.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v367;
      unint64_t v367 = (unint64_t)v361.i64[1] >> -(v366 & 0x3F);
      if ((v366 & 0x3F) == 0) {
        unint64_t v367 = 0;
      }
    }
    int8x16_t v368 = vandq_s8(v167, v364);
    unint64_t v369 = v366 + v362.i64[1];
    v370.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v370.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v371.i64[0] = -1;
    v371.i64[1] = -1;
    uint8x16_t v372 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v371, (uint8x16_t)vaddq_s8(v160, v370)), v365);
    int16x8_t v373 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v160.i8);
    int16x8_t v374 = (int16x8_t)vmovl_high_u8((uint8x16_t)v160);
    uint16x8_t v375 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v372.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)), (int16x8_t)vshlq_u16(vmovl_high_u8(v372), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v374)));
    uint16x8_t v376 = (uint16x8_t)vpaddq_s16(v373, v374);
    int32x4_t v377 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v376.i8);
    int32x4_t v378 = (int32x4_t)vmovl_high_u16(v376);
    int32x4_t v379 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v375.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)), (int32x4_t)vshlq_u32(vmovl_high_u16(v375), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v378)));
    int32x4_t v380 = vpaddq_s32(v377, v378);
    v381.i64[0] = v379.u32[0];
    v381.i64[1] = v379.u32[1];
    uint64x2_t v382 = (uint64x2_t)v381;
    v381.i64[0] = v379.u32[2];
    v381.i64[1] = v379.u32[3];
    uint64x2_t v383 = (uint64x2_t)v381;
    v381.i64[0] = v380.u32[0];
    v381.i64[1] = v380.u32[1];
    int64x2_t v384 = v381;
    v381.i64[0] = v380.u32[2];
    v381.i64[1] = v380.u32[3];
    int64x2_t v385 = vpaddq_s64((int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v384)), (int64x2_t)vshlq_u64(v383, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)));
    int64x2_t v386 = vpaddq_s64(v384, v381);
    unint64_t v387 = (v385.i64[0] << v369) | v367;
    if (v386.i64[0] + (v369 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v387;
      unint64_t v387 = (unint64_t)v385.i64[0] >> -(v369 & 0x3F);
      if ((v369 & 0x3F) == 0) {
        unint64_t v387 = 0;
      }
    }
    int8x16_t v388 = vaddq_s8(v168, v368);
    unint64_t v389 = v386.i64[0] + v369;
    unint64_t v390 = v387 | (v385.i64[1] << v389);
    if ((v389 & 0x3F) + v386.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v389 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
      unint64_t v390 = (unint64_t)v385.i64[1] >> -(v389 & 0x3F);
      if ((v389 & 0x3F) == 0) {
        unint64_t v390 = 0;
      }
    }
    unint64_t v391 = v389 + v386.i64[1];
    v392.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v392.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v393.i64[0] = -1;
    v393.i64[1] = -1;
    uint8x16_t v394 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v393, (uint8x16_t)vaddq_s8(v161, v392)), v388);
    int16x8_t v395 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v161.i8);
    int16x8_t v396 = (int16x8_t)vmovl_high_u8((uint8x16_t)v161);
    uint16x8_t v397 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v394.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v395)), (int16x8_t)vshlq_u16(vmovl_high_u8(v394), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v396)));
    uint16x8_t v398 = (uint16x8_t)vpaddq_s16(v395, v396);
    int32x4_t v399 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v398.i8);
    int32x4_t v400 = (int32x4_t)vmovl_high_u16(v398);
    int32x4_t v401 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v397.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v399)), (int32x4_t)vshlq_u32(vmovl_high_u16(v397), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v400)));
    int32x4_t v402 = vpaddq_s32(v399, v400);
    v403.i64[0] = v401.u32[0];
    v403.i64[1] = v401.u32[1];
    uint64x2_t v404 = (uint64x2_t)v403;
    v403.i64[0] = v401.u32[2];
    v403.i64[1] = v401.u32[3];
    uint64x2_t v405 = (uint64x2_t)v403;
    v403.i64[0] = v402.u32[0];
    v403.i64[1] = v402.u32[1];
    int64x2_t v406 = v403;
    v403.i64[0] = v402.u32[2];
    v403.i64[1] = v402.u32[3];
    int64x2_t v407 = vpaddq_s64((int64x2_t)vshlq_u64(v404, (uint64x2_t)vzip1q_s64((int64x2_t)0, v406)), (int64x2_t)vshlq_u64(v405, (uint64x2_t)vzip1q_s64((int64x2_t)0, v403)));
    int64x2_t v408 = vpaddq_s64(v406, v403);
    unint64_t v409 = (v407.i64[0] << v391) | v390;
    if (v408.i64[0] + (v391 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v260 + ((v391 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
      if ((v391 & 0x3F) != 0) {
        unint64_t v409 = (unint64_t)v407.i64[0] >> -(v391 & 0x3F);
      }
      else {
        unint64_t v409 = 0;
      }
    }
    unint64_t v410 = v408.i64[0] + v391;
    unint64_t v411 = v409 | (v407.i64[1] << v410);
    if ((v410 & 0x3F) + v408.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v410 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v411;
      unint64_t v411 = (unint64_t)v407.i64[1] >> -(v410 & 0x3F);
      if ((v410 & 0x3F) == 0) {
        unint64_t v411 = 0;
      }
    }
    unint64_t v412 = v410 + v408.i64[1];
    if ((v412 & 0x3F) != 0) {
      *(void *)((char *)v260 + ((v412 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v411;
    }
    unint64_t result = (v412 - v261 + 7) >> 3;
    *a2 |= (_BYTE)result - 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  if (a5 > 1)
  {
    uint64_t v20 = a5 & 0xFE;
    if (a5 == v20)
    {
      uint64_t v21 = 0;
      int8x16_t v22 = (__int16 *)(a3 + 2);
      int8x16_t v23 = (char *)&v72 + 8;
      do
      {
        int8x16_t v24 = v23;
        int8x16_t v25 = v22;
        uint64_t v26 = a5;
        do
        {
          __int16 v27 = *(v25 - 1);
          __int16 v28 = *v25;
          v25 += 2;
          *(v24 - 4) = v27;
          *int8x16_t v24 = v28;
          v24 += 8;
          v26 -= 2;
        }
        while (v26);
        ++v21;
        int8x16_t v22 = (__int16 *)((char *)v22 + a4);
        v23 += 2;
      }
      while (v21 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (__int16 *)(a3 + 2);
      int8x16_t v31 = (char *)&v72 + 8;
      int8x16_t v32 = (char *)&v72 + ((8 * a5) & 0x7F0);
      do
      {
        int8x16_t v33 = v31;
        int8x16_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          __int16 v36 = *(v34 - 1);
          __int16 v37 = *v34;
          v34 += 2;
          *(v33 - 4) = v36;
          _WORD *v33 = v37;
          v33 += 8;
          v35 -= 2;
        }
        while (v35);
        int8x16_t v38 = (__int16 *)(a3 + v29 * a4 + 2 * v20);
        int8x16_t v39 = v32;
        uint64_t v40 = a5 - v20;
        do
        {
          __int16 v41 = *v38++;
          *int8x16_t v39 = v41;
          v39 += 4;
          --v40;
        }
        while (v40);
        ++v29;
        int8x16_t v30 = (__int16 *)((char *)v30 + a4);
        v31 += 2;
        v32 += 2;
      }
      while (v29 != a6);
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v11 = a6 & 0xFE;
    unsigned int v12 = (__int16 *)(a3 + 1);
    int32x4_t v13 = (_WORD *)&v72 + 1;
    uint64_t v14 = v11;
    do
    {
      __int16 v15 = *(__int16 *)((char *)v12 - 1);
      __int16 v16 = *v12++;
      *(v13 - 1) = v15;
      *int32x4_t v13 = v16;
      v13 += 2;
      v14 -= 2;
    }
    while (v14);
    if (v11 != a6)
    {
LABEL_7:
      uint64_t v17 = a6 - v11;
      int8x16_t v18 = (_WORD *)&v72 + v11;
      int8x16_t v19 = (_WORD *)(a3 + v11 * a4);
      do
      {
        *v18++ = *v19;
        int8x16_t v19 = (_WORD *)((char *)v19 + a4);
        --v17;
      }
      while (v17);
    }
  }
  int v56 = v72;
  int v57 = BYTE1(v72);
  int v58 = BYTE8(v72);
  int v59 = BYTE9(v72);
  int v60 = BYTE2(v72);
  int v61 = BYTE3(v72);
  int v62 = BYTE10(v72);
  int v63 = BYTE11(v72);
  int v64 = v73;
  int v65 = BYTE1(v73);
  int v66 = BYTE8(v73);
  int v67 = BYTE9(v73);
  int v68 = BYTE2(v73);
  int v69 = BYTE3(v73);
  if (a5 >= 4) {
    unsigned int v42 = 4;
  }
  else {
    unsigned int v42 = a5;
  }
  if (a5 >= 4) {
    unsigned int v43 = a5 - 4;
  }
  else {
    unsigned int v43 = 0;
  }
  int v70 = BYTE10(v73);
  int v71 = BYTE11(v73);
  if (a6 >= 2) {
    unsigned int v44 = 2;
  }
  else {
    unsigned int v44 = a6;
  }
  if (a6 >= 2) {
    unsigned int v45 = a6 - 2;
  }
  else {
    unsigned int v45 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v56, a7, v42, v44);
  int v56 = BYTE4(v72);
  int v57 = BYTE5(v72);
  int v58 = BYTE12(v72);
  int v59 = BYTE13(v72);
  int v60 = BYTE6(v72);
  int v61 = BYTE7(v72);
  int v62 = BYTE14(v72);
  int v63 = HIBYTE(v72);
  int v64 = BYTE4(v73);
  int v65 = BYTE5(v73);
  int v66 = BYTE12(v73);
  int v67 = BYTE13(v73);
  int v68 = BYTE6(v73);
  int v69 = BYTE7(v73);
  int v70 = BYTE14(v73);
  int v71 = HIBYTE(v73);
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v45;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, (uint64_t)&v56, a7, v42, v47);
  int v56 = v74;
  int v57 = BYTE1(v74);
  int v58 = BYTE8(v74);
  int v59 = BYTE9(v74);
  int v60 = BYTE2(v74);
  int v61 = BYTE3(v74);
  int v62 = BYTE10(v74);
  int v63 = BYTE11(v74);
  int v64 = v75;
  int v65 = BYTE1(v75);
  int v66 = BYTE8(v75);
  int v67 = BYTE9(v75);
  int v68 = BYTE2(v75);
  int v69 = BYTE3(v75);
  if (a5 >= 8) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = v43;
  }
  int v70 = BYTE10(v75);
  int v71 = BYTE11(v75);
  int v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v56, a7, v49, v44);
  int v56 = BYTE4(v74);
  int v57 = BYTE5(v74);
  int v58 = BYTE12(v74);
  int v59 = BYTE13(v74);
  int v60 = BYTE6(v74);
  int v61 = BYTE7(v74);
  int v62 = BYTE14(v74);
  int v63 = HIBYTE(v74);
  int v64 = BYTE4(v75);
  int v65 = BYTE5(v75);
  int v66 = BYTE12(v75);
  int v67 = BYTE13(v75);
  int v68 = BYTE6(v75);
  int v69 = BYTE7(v75);
  int v70 = BYTE14(v75);
  int v71 = HIBYTE(v75);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v56, a7, v49, v47);
  if (v50) {
    char v52 = 4;
  }
  else {
    char v52 = 0;
  }
  if (v48) {
    char v53 = 2;
  }
  else {
    char v53 = 0;
  }
  if (result) {
    char v54 = -8;
  }
  else {
    char v54 = -16;
  }
  *a2 = v54 | v52 | v46 | v53;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v279 = *MEMORY[0x263EF8340];
  BOOL v8 = a5 < 2;
  BOOL v9 = a4 < 4 || a5 < 2;
  BOOL v242 = v9;
  int v243 = a3;
  BOOL v10 = a4 < 4 || a5 == 0;
  BOOL v241 = v10;
  BOOL v11 = a4 < 3 || a5 < 2;
  BOOL v240 = v11;
  BOOL v12 = a4 < 3 || a5 == 0;
  BOOL v239 = v12;
  if (a4) {
    BOOL v13 = a5 < 2;
  }
  else {
    BOOL v13 = 1;
  }
  if (a4 < 2) {
    BOOL v8 = 1;
  }
  BOOL v237 = v8;
  BOOL v238 = v13;
  BOOL v14 = a4 < 2 || a5 == 0;
  BOOL v236 = v14;
  do
  {
    uint64_t v15 = 0;
    char v16 = v6;
    unsigned int v17 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[v7];
    *(&v277 + v7) = v17;
    switch(v17)
    {
      case 2u:
        uint64_t v15 = 5;
        break;
      case 0xAu:
        uint64_t v15 = 1;
        break;
      case 0xCu:
        uint64_t v15 = 2;
        break;
      case 0x10u:
        uint64_t v15 = 3;
        break;
      case 0x20u:
        uint64_t v15 = 4;
        break;
      default:
        break;
    }
    unint64_t v18 = 4 * v7;
    *(int *)((char *)&v254 + v18) = v15;
    unsigned int v19 = 1 << (v17 - 1);
    v253[v18 / 4 + 2] = v19;
    if (a3 == 1)
    {
      uint64_t v29 = (_DWORD *)(a2 + v18);
      uint64_t v21 = (unsigned int *)((char *)&v257 + v18);
      if ((*(_DWORD *)(a2 + 4 * v7) ^ v19) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      }
      *uint64_t v21 = v20;
      if ((v29[2] ^ v19) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v29[2] ^ v19;
      }
      v21[2] = v22;
      if ((v29[4] ^ v19) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v29[4] ^ v19;
      }
      v21[4] = v23;
      if ((v29[6] ^ v19) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v29[6] ^ v19;
      }
      v21[6] = v24;
      if ((v29[8] ^ v19) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v29[8] ^ v19;
      }
      v21[8] = v25;
      if ((v29[10] ^ v19) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v29[10] ^ v19;
      }
      v21[10] = v26;
      unsigned int v27 = v29[12] ^ v19;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v29[14] ^ v19;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      uint64_t v21 = (unsigned int *)((char *)&v257 + v18);
      *uint64_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8) ^ v19;
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16) ^ v19;
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24) ^ v19;
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32) ^ v19;
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40) ^ v19;
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48) ^ v19;
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56) ^ v19;
    }
    else
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7);
      uint64_t v21 = (unsigned int *)((char *)&v257 + v18);
      *uint64_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8);
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16);
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24);
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32);
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40);
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48);
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56);
    }
    v21[14] = v28;
    int8x16_t v30 = &v275[v18 / 4 + 2];
    v275[v7 + 2] = v20;
    v276[v7] = v20;
    v275[v7] = 0;
    if (v236)
    {
      unsigned int v31 = v20;
      if (v238) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v31 = v20;
      if (v22 < v20)
      {
        v275[v7] = 1;
        v276[v7] = v22;
        unsigned int v31 = v22;
      }
      if (v20 >= v22) {
        int8x16_t v32 = &v275[v18 / 4 + 2];
      }
      else {
        int8x16_t v32 = (unsigned int *)(&v259 + v7);
      }
      unsigned int v20 = *v32;
      *int8x16_t v30 = *v32;
      if (v238)
      {
LABEL_58:
        if (v237) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v31)
    {
      v275[v7] = 2;
      v276[v7] = v23;
      unsigned int v31 = v23;
    }
    if (v20 >= v23) {
      int8x16_t v33 = &v275[v18 / 4 + 2];
    }
    else {
      int8x16_t v33 = (unsigned int *)(&v261 + v7);
    }
    unsigned int v20 = *v33;
    *int8x16_t v30 = *v33;
    if (v237)
    {
LABEL_59:
      if (v239) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v31)
    {
      v275[v7] = 3;
      v276[v7] = v24;
      unsigned int v31 = v24;
    }
    if (v20 >= v24) {
      int8x16_t v34 = &v275[v18 / 4 + 2];
    }
    else {
      int8x16_t v34 = (unsigned int *)(&v263 + v7);
    }
    unsigned int v20 = *v34;
    *int8x16_t v30 = *v34;
    if (v239)
    {
LABEL_60:
      if (v241) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v31)
    {
      v275[v7] = 4;
      v276[v7] = v25;
      unsigned int v31 = v25;
    }
    if (v20 >= v25) {
      uint64_t v35 = &v275[v18 / 4 + 2];
    }
    else {
      uint64_t v35 = (unsigned int *)(&v265 + v7);
    }
    unsigned int v20 = *v35;
    *int8x16_t v30 = *v35;
    if (v241)
    {
LABEL_61:
      if (v240) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v31)
    {
      v275[v7] = 5;
      v276[v7] = v26;
      unsigned int v31 = v26;
    }
    if (v20 >= v26) {
      __int16 v36 = &v275[v18 / 4 + 2];
    }
    else {
      __int16 v36 = (unsigned int *)(&v267 + v7);
    }
    unsigned int v20 = *v36;
    *int8x16_t v30 = *v36;
    if (v240)
    {
LABEL_62:
      if (v242) {
        goto LABEL_105;
      }
LABEL_100:
      if (v28 < v31)
      {
        v275[v7] = 7;
        v276[v7] = v28;
        unsigned int v31 = v28;
      }
      int8x16_t v38 = (unsigned int *)(&v271 + v7);
      if (v20 >= v28) {
        int8x16_t v38 = v30;
      }
      unsigned int v20 = *v38;
      *int8x16_t v30 = *v38;
      goto LABEL_105;
    }
LABEL_94:
    if (v27 < v31)
    {
      v275[v7] = 6;
      v276[v7] = v27;
      unsigned int v31 = v27;
    }
    if (v20 >= v27) {
      __int16 v37 = &v275[v18 / 4 + 2];
    }
    else {
      __int16 v37 = (unsigned int *)(&v269 + v7);
    }
    unsigned int v20 = *v37;
    *int8x16_t v30 = *v37;
    if (!v242) {
      goto LABEL_100;
    }
LABEL_105:
    unsigned int v39 = __clz(v20 - v31);
    unsigned int v40 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::computeDquadMode(v17, 32 - v39, v31, v20);
    *(&v273 + v7) = v40;
    a3 = v243;
    if ((v243 | 2) != 3)
    {
      BOOL v41 = 0;
      uint64_t v42 = v15;
LABEL_110:
      unsigned int v43 = a5;
      goto LABEL_111;
    }
    BOOL v41 = 0;
    uint64_t v42 = v15;
    if (v20 < v19) {
      goto LABEL_110;
    }
    unsigned int v43 = a5;
    if (v31 < v19) {
      BOOL v41 = kDQuadParamTable[160 * v42 + 8 + 10 * v40] == 0;
    }
LABEL_111:
    if (v40 >= kDquadTransition[v42] || v41)
    {
      unsigned int v44 = kDQuadParamTable[160 * v42 + 4 + 10 * v40] - v41;
      if (v41) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v17 >= v44;
      unsigned int v46 = v17 - v44;
      BOOL v71 = v46 != 0 && v50;
      int v47 = v31 & ~(-1 << v46);
      if (!v71) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      BOOL v71 = v48 < 1;
      unsigned int v49 = __clz(v48 + v20 - v31);
      BOOL v50 = v71 || v49 >= v39;
      if (v50)
      {
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v273 + v7) = ++v40;
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      unsigned int v51 = kDquadMaxMode[v42];
      if (v51 >= v40) {
        unsigned int v51 = v40;
      }
      *(&v273 + v7) = v51;
    }
LABEL_22:
    char v6 = 1;
    uint64_t v7 = 1u;
  }
  while ((v16 & 1) == 0);
  int v53 = v254;
  int v52 = v255;
  unsigned int v54 = v273;
  unsigned int v55 = v274;
  BOOL v57 = v274 >= v273;
  BOOL v58 = v274 < v273;
  int v59 = kDQuadParamTable[160 * v255 + 6 + 10 * v274];
  int v251 = kDQuadParamTable[160 * v254 + 6 + 10 * v273];
  int v56 = v251;
  int v252 = v59;
  v253[0] = v251;
  v253[1] = v59;
  if (*(&v273 + v57) == *(&v273 + v58))
  {
    int v60 = v251;
  }
  else
  {
    int v61 = *(_DWORD *)((unint64_t)v253 | (4 * v58));
    int v60 = v251;
    if (v61 >= 1)
    {
      *(_DWORD *)((unint64_t)&v251 | (4 * v58)) = 0;
      *(_DWORD *)((unint64_t)&v251 | (4 * v57)) += v61;
      int v60 = v251;
    }
  }
  int v62 = &kDQuadParamTable[160 * v53 + 10 * v54];
  unint64_t v63 = *((void *)v62 + 1);
  unsigned int v65 = v62[4];
  unsigned int v64 = v62[5];
  if (a4) {
    BOOL v66 = v43 == 0;
  }
  else {
    BOOL v66 = 1;
  }
  int v67 = v66;
  int v235 = v67;
  unsigned int v249 = v65;
  unsigned int v247 = v64;
  int v68 = v60 - v56;
  if (v68 < 0)
  {
    if (kDQuadParamTable[160 * v53 + 7 + 10 * v54] < -v68)
    {
      unsigned int v247 = --v64;
      if (!kDQuadParamTable[160 * v53 + 8 + 10 * v54])
      {
        int v69 = -1;
LABEL_142:
        unsigned int v249 = v69 + v65;
      }
    }
  }
  else if (v68)
  {
    v64 += v68;
    unsigned int v247 = v64;
    int v69 = v68;
    goto LABEL_142;
  }
  BOOL v71 = v53 == 5 && v54 == 1 && v68 < 2;
  int v72 = v71;
  if (v243 == 4)
  {
    if (v53 == 3) {
      int v73 = 31744;
    }
    else {
      int v73 = 0;
    }
    if (v53 == 4) {
      int v74 = 2139095040;
    }
    else {
      int v74 = v73;
    }
    int v75 = 1 << (v277 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_163;
      }
LABEL_310:
      if ((v74 & ~v259) == 0 || v259 == v75) {
        int v72 = 1;
      }
      if (!v238) {
        goto LABEL_317;
      }
LABEL_164:
      if (v237) {
        goto LABEL_165;
      }
LABEL_324:
      if ((v74 & ~v263) == 0 || v263 == v75) {
        int v72 = 1;
      }
      if (!v239) {
        goto LABEL_331;
      }
LABEL_166:
      if (v241) {
        goto LABEL_167;
      }
LABEL_338:
      if ((v74 & ~v267) == 0 || v267 == v75) {
        int v72 = 1;
      }
      if (!v240) {
        goto LABEL_345;
      }
LABEL_168:
      if (!v242) {
        goto LABEL_169;
      }
    }
    else
    {
      if ((v74 & ~v257) == 0 || v257 == v75) {
        int v72 = 1;
      }
      if (!v236) {
        goto LABEL_310;
      }
LABEL_163:
      if (v238) {
        goto LABEL_164;
      }
LABEL_317:
      if ((v74 & ~v261) == 0 || v261 == v75) {
        int v72 = 1;
      }
      if (!v237) {
        goto LABEL_324;
      }
LABEL_165:
      if (v239) {
        goto LABEL_166;
      }
LABEL_331:
      if ((v74 & ~v265) == 0 || v265 == v75) {
        int v72 = 1;
      }
      if (!v241) {
        goto LABEL_338;
      }
LABEL_167:
      if (v240) {
        goto LABEL_168;
      }
LABEL_345:
      if ((v74 & ~v269) == 0 || v269 == v75) {
        int v72 = 1;
      }
      if (!v242)
      {
LABEL_169:
        if ((v74 & ~v271) == 0 || v271 == v75) {
          int v72 = 1;
        }
      }
    }
  }
  BOOL v71 = v63 >> v64 > 0x10;
  int v77 = v67;
  if (v71) {
    int v77 = 1;
  }
  int v78 = v77 | v72;
  int8x16_t v79 = &kDQuadParamTable[160 * v52 + 10 * v55];
  unint64_t v80 = *((void *)v79 + 1);
  unsigned int v81 = v79[4];
  unsigned int v82 = v79[5];
  unsigned int v250 = v81;
  unsigned int v248 = v82;
  int v83 = v252 - v59;
  if (v252 - v59 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v55] < v59 - v252)
    {
      unsigned int v248 = --v82;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v55])
      {
        int v84 = -1;
LABEL_181:
        unsigned int v250 = v84 + v81;
      }
    }
  }
  else if (v252 != v59)
  {
    v82 += v83;
    unsigned int v248 = v82;
    int v84 = v252 - v59;
    goto LABEL_181;
  }
  if (v52 == 5 && v55 == 1 && v83 < 2) {
    int v78 = 1;
  }
  if (v243 == 4)
  {
    if (v52 == 3) {
      int v85 = 31744;
    }
    else {
      int v85 = 0;
    }
    if (v52 == 4) {
      int v85 = 2139095040;
    }
    int v86 = 1 << (v278 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_196;
      }
LABEL_360:
      if ((v85 & ~v260) == 0 || v260 == v86) {
        int v78 = 1;
      }
      if (!v238) {
        goto LABEL_367;
      }
LABEL_197:
      if (v237) {
        goto LABEL_198;
      }
LABEL_374:
      if ((v85 & ~v264) == 0 || v264 == v86) {
        int v78 = 1;
      }
      if (!v239) {
        goto LABEL_381;
      }
LABEL_199:
      if (v241) {
        goto LABEL_200;
      }
LABEL_388:
      if ((v85 & ~v268) == 0 || v268 == v86) {
        int v78 = 1;
      }
      if (!v240) {
        goto LABEL_395;
      }
LABEL_201:
      if (!v242) {
        goto LABEL_202;
      }
    }
    else
    {
      if ((v85 & ~v258) == 0 || v258 == v86) {
        int v78 = 1;
      }
      if (!v236) {
        goto LABEL_360;
      }
LABEL_196:
      if (v238) {
        goto LABEL_197;
      }
LABEL_367:
      if ((v85 & ~v262) == 0 || v262 == v86) {
        int v78 = 1;
      }
      if (!v237) {
        goto LABEL_374;
      }
LABEL_198:
      if (v239) {
        goto LABEL_199;
      }
LABEL_381:
      if ((v85 & ~v266) == 0 || v266 == v86) {
        int v78 = 1;
      }
      if (!v241) {
        goto LABEL_388;
      }
LABEL_200:
      if (v240) {
        goto LABEL_201;
      }
LABEL_395:
      if ((v85 & ~v270) == 0 || v270 == v86) {
        int v78 = 1;
      }
      if (!v242)
      {
LABEL_202:
        if ((v85 & ~v272) == 0 || v272 == v86) {
          int v78 = 1;
        }
      }
    }
  }
  char v88 = 0;
  uint64_t v89 = 0;
  int v90 = v67;
  if (v80 >> v82 > 0x10) {
    int v90 = 1;
  }
  int v230 = v90;
  int v231 = v78;
  uint64_t v246 = 0;
  uint64_t v245 = 0;
  memset(v244, 0, sizeof(v244));
  do
  {
    uint64_t v91 = 0;
    unsigned int v92 = 0;
    unsigned int v93 = *(&v277 + v89);
    unsigned int v94 = *(&v249 + v89);
    if (v93 < v94) {
      unsigned int v94 = *(&v277 + v89);
    }
    *(&v249 + v89) = v94;
    int8x16_t v95 = &kDQuadParamTable[160 * *(&v254 + v89) + 10 * *(&v273 + v89)];
    if (v95[5]) {
      unsigned int v96 = v93;
    }
    else {
      unsigned int v96 = 0;
    }
    if (v96 >= *(&v247 + v89)) {
      int v97 = *(&v247 + v89);
    }
    else {
      int v97 = v96;
    }
    int v98 = v276[v89] & (-1 << (v93 - v94));
    int8x16_t v99 = &v257 + v89;
    int v100 = *v99 - v98;
    uint64_t v101 = 32 * v89;
    int8x16_t v102 = &v256[32 * v89];
    if (v235) {
      int v100 = 0;
    }
    int v103 = v99[2] - v98;
    if (v236) {
      int v103 = 0;
    }
    *int8x16_t v102 = v100;
    v102[1] = v103;
    int v104 = v99[4] - v98;
    if (v238) {
      int v104 = 0;
    }
    int v105 = v99[6] - v98;
    if (v237) {
      int v105 = 0;
    }
    v102[2] = v104;
    v102[3] = v105;
    int v106 = v99[8] - v98;
    if (v239) {
      int v106 = 0;
    }
    int v107 = v99[10] - v98;
    if (v241) {
      int v107 = 0;
    }
    v102[4] = v106;
    v102[5] = v107;
    int v108 = v99[12] - v98;
    if (v240) {
      int v108 = 0;
    }
    int v109 = v99[14] - v98;
    if (v242) {
      int v109 = 0;
    }
    v102[6] = v108;
    v102[7] = v109;
    char v110 = v88;
    uint64_t v111 = -1 << v93;
    *(&v247 + v89) = v97;
    unint64_t v112 = *((void *)v95 + 1);
    *((_DWORD *)&v246 + v89) = v98;
    unint64_t v113 = v112 >> v97;
    int v114 = ~v111;
    if (v113 <= 1) {
      unint64_t v115 = 1;
    }
    else {
      unint64_t v115 = v113;
    }
    uint64_t v116 = 2 * v275[v89];
    do
    {
      if (v116 != v91)
      {
        if (v97) {
          unint64_t v117 = *(unsigned int *)&v256[v101] / v115;
        }
        else {
          LODWORD(v117) = 0;
        }
        int8x16_t v118 = (int *)v244 + 7 * v89 + v92;
        *int8x16_t v118 = v117;
        if (v113 >= 2)
        {
          unint64_t v119 = *(unsigned int *)&v256[v101];
          if (v119)
          {
            if (v119 / v115 * v115 == v119 && ((v119 / v115) & 1) != 0)
            {
              if (v98 || v117 != 1)
              {
                if ((v243 | 2) != 3
                  || (uint64_t v121 = v99[v91], v122 = v253[v89 + 2], v121 != v122)
                  && ((v243 | 2) != 3 || v115 + v122 != v121))
                {
                  LODWORD(v117) = v117 - 1;
                  *int8x16_t v118 = v117;
                }
              }
              else
              {
                LODWORD(v117) = 1;
              }
            }
          }
        }
        if ((unint64_t)v117 >> v97 || v99[v91] == v114) {
          *int8x16_t v118 = ~(-1 << v97);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91 + 1) >= v43
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91) >= a4)
        {
          *int8x16_t v118 = 0;
        }
        ++v92;
      }
      v101 += 4;
      v91 += 2;
    }
    while (v91 != 16);
    char v88 = 1;
    uint64_t v89 = 1;
  }
  while ((v110 & 1) == 0);
  uint64_t result = v230 | v231;
  int8x16_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if (result == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v277;
    unsigned int v130 = v278;
    uint64_t v131 = v277 - 4;
    uint64_t v132 = v278 - 4;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= v43 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v257 + 2 * v127) >> 4;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      if (v129 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x40)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 4;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_289:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_293;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v257 + 2 * v127 + 1) >> 4;
        if (v132 <= 0x100)
        {
LABEL_293:
          if (v130 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x40)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 4;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return result;
      }
    }
  }
  unsigned int v147 = v273;
  char v148 = LOBYTE(v276[0]) | v273;
  if (v276[0] | v273)
  {
    char v148 = v273 - 2;
    if (v273 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v273 + 1;
      goto LABEL_404;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_404:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v274;
  if (v276[1] | v274)
  {
    char v169 = v274 - 2;
    if (v274 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v274 + 1;
      goto LABEL_410;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_410:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 62) >= 0xFFFFFFFFFFFFFFBFLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_427;
    }
LABEL_420:
    unsigned int v177 = v277;
    if (!v147) {
      goto LABEL_435;
    }
    goto LABEL_439;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x40) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_420;
  }
LABEL_427:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x40) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v277;
  if (!v147)
  {
LABEL_435:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v278;
      if (!v168) {
        goto LABEL_500;
      }
LABEL_447:
      unsigned int v192 = v250;
      if (v250 <= 0x100 && v250 && v167 - v126 + (v175 << 6) + (unint64_t)v250 <= 0x40)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v246) >> (v185 - v250));
        unint64_t v195 = v250;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_455;
    }
  }
LABEL_439:
  unsigned int v186 = v249;
  if (v249 <= 0x100 && v249 && v167 - v126 + (v175 << 6) + (unint64_t)v249 <= 0x40)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v246 >> (v177 - v249);
    unint64_t v189 = v249;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v278;
  if (v168) {
    goto LABEL_447;
  }
LABEL_500:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_447;
  }
LABEL_455:
  unint64_t v198 = v247;
  if (v247)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v275[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v248;
  if (v248)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v275[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 64 - v176;
  unsigned int v211 = (64 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x40)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x40)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v244 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x40)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v244[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_493:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x40)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_493;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return result;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int32x4_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7 + 14;
  uint64_t v10 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x33) {
    v10 |= *(void *)(v8 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v11 = 4 * v10;
  uint32x2_t v12 = (uint32x2_t)vdup_n_s32(v11);
  a5.i32[0] = v11;
  a7.i32[0] = a4 >> 6;
  v13.i32[0] = vorr_s8(a5, a7).u32[0];
  v13.i32[1] = vshr_n_u32(v12, 5uLL).i32[1];
  int16x4_t v14 = (int16x4_t)vand_s8(v13, (int8x8_t)0x1F0000001FLL);
  v14.i8[1] = v14.i8[4];
  int16x4_t v15 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v12, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v15.i8[1] = v15.i8[4];
  unint64_t v16 = v7 + 30;
  unint64_t v17 = v9 >> 6;
  unint64_t v18 = v9 & 0x3E;
  uint64_t v19 = *(void *)(v8 + 8 * v17) >> v18;
  if (v18 >= 0x31) {
    v19 |= *(void *)(v8 + 8 * v17 + 8) << -(char)v18;
  }
  unint64_t v20 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(v14, 0);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(v15, 0);
  v23.i64[0] = 0x303030303030303;
  v23.i64[1] = 0x303030303030303;
  int8x16_t v24 = vandq_s8(v21, v23);
  int8x16_t v25 = vbicq_s8(v22, vceqq_s8(v24, v23));
  v23.i64[0] = 0x202020202020202;
  v23.i64[1] = 0x202020202020202;
  int8x16_t v26 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v21.i8), (int8x8_t)0x4000400040004)))), v23);
  if (vmaxvq_s8(v26) < 1)
  {
    int v36 = 0;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    int8x16_t v38 = v25;
    int8x16_t v39 = v25;
    int8x16_t v40 = v25;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = v25;
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v44.i64[0] = -1;
    v44.i64[1] = -1;
  }
  else
  {
    int16x8_t v27 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v26, v26));
    int32x4_t v28 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v27, v27));
    unint64_t v29 = vpaddq_s32(v28, v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    int64x2_t v31 = v30;
    unint64_t v32 = vaddvq_s64(v30);
    unint64_t v33 = v32 + v16;
    if (v32 <= 0x80 && v20 >= v33)
    {
      unint64_t v45 = v16 & 0x3E;
      int64x2_t v46 = vaddq_s64(vzip1q_s64((int64x2_t)0, v31), vdupq_n_s64(v45));
      int v47 = (int64x2_t *)(v8 + ((v16 >> 3) & 8));
      int32x4_t v35 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v47, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47->i64[0], 0), (uint64x2_t)vnegq_s64(v46)));
      if (v32 + v45 < 0x81)
      {
        int v36 = 0;
      }
      else
      {
        int v36 = 0;
        int32x4_t v35 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v47[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v46))), (int8x16_t)v35);
      }
      unint64_t v16 = v33;
    }
    else
    {
      int32x4_t v35 = 0uLL;
      int v36 = 1;
    }
    int32x2_t v48 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
    v49.i64[0] = v48.u32[0];
    v49.i64[1] = v48.u32[1];
    int32x4_t v50 = (int32x4_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vnegq_s64(v49));
    *(int32x2_t *)v35.i8 = vmovn_s64((int64x2_t)v35);
    *(int32x2_t *)v50.i8 = vmovn_s64((int64x2_t)v50);
    int16x8_t v51 = (int16x8_t)vzip1q_s32(v35, v50);
    int16x8_t v52 = (int16x8_t)vshlq_u32((uint32x4_t)v51, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL)))));
    *(int16x4_t *)v51.i8 = vmovn_s32((int32x4_t)v51);
    *(int16x4_t *)v52.i8 = vmovn_s32((int32x4_t)v52);
    int16x8_t v53 = vzip1q_s16(v51, v52);
    *(int8x8_t *)v53.i8 = vzip1_s8(vmovn_s16(v53), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v53, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v26.i8, *(int8x8_t *)v21.i8))))));
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    int8x16_t v54 = vshlq_s8((int8x16_t)v51, v26);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54.i64[0] = vqtbl1q_s8(vandq_s8((int8x16_t)v53, vaddq_s8(v54, (int8x16_t)v51)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v55 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 1);
    int8x16_t v57 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 2);
    int8x16_t v58 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 3);
    int8x16_t v42 = vsubq_s8(v25, v55);
    int8x16_t v38 = vsubq_s8(v25, v56);
    int8x16_t v39 = vsubq_s8(v25, v57);
    int8x16_t v40 = vsubq_s8(v25, v58);
    int8x16_t v44 = vceqzq_s8(v55);
    int8x16_t v43 = vceqzq_s8(v56);
    int8x16_t v41 = vceqzq_s8(v57);
    int8x16_t v37 = vceqzq_s8(v58);
  }
  v59.i64[0] = 0x808080808080808;
  v59.i64[1] = 0x808080808080808;
  int32x4_t v60 = 0uLL;
  int8x16_t v61 = vandq_s8(vextq_s8(vtstq_s8(v21, v59), (int8x16_t)0, 0xEuLL), v25);
  int16x8_t v62 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v61, v61));
  int32x4_t v63 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v62, v62));
  unint64_t v64 = vpaddq_s32(v63, v63).u64[0];
  v65.i64[0] = v64;
  v65.i64[1] = HIDWORD(v64);
  int64x2_t v66 = v65;
  unint64_t v67 = vaddvq_s64(v65);
  unint64_t v68 = v67 + v16;
  if (v67 <= 0x80 && v20 >= v68)
  {
    unint64_t v70 = v16 & 0x3F;
    int64x2_t v71 = vaddq_s64(vzip1q_s64((int64x2_t)0, v66), vdupq_n_s64(v70));
    int v72 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v60 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v72, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72->i64[0], 0), (uint64x2_t)vnegq_s64(v71)));
    if (v67 + v70 >= 0x81) {
      int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), (int8x16_t)v60);
    }
    unint64_t v16 = v68;
  }
  else
  {
    int v36 = 1;
  }
  int v73 = v21.i8[0] & 3;
  if (v73 == 2)
  {
    BOOL v74 = v20 >= v16 + 4;
    if (v20 >= v16 + 4) {
      v16 += 4;
    }
    unint64_t v75 = v16 + 4;
    if (!v74 || v20 < v75) {
      int v36 = 1;
    }
    if (v20 >= v75) {
      v16 += 4;
    }
  }
  int32x4_t v77 = 0uLL;
  int8x16_t v78 = vextq_s8((int8x16_t)0, v42, 0xEuLL);
  int16x8_t v79 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v78, v78));
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v79, v79));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v84 + v16;
  if (v84 <= 0x80 && v20 >= v85)
  {
    unint64_t v88 = v16 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v88));
    int v90 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v87 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v84 + v88 >= 0x81) {
      int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v87);
    }
    unint64_t v16 = v85;
  }
  else
  {
    int v36 = 1;
    int32x4_t v87 = 0uLL;
  }
  int16x8_t v91 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v38, v38));
  int32x4_t v92 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v91, v91));
  unint64_t v93 = vpaddq_s32(v92, v92).u64[0];
  v94.i64[0] = v93;
  v94.i64[1] = HIDWORD(v93);
  int64x2_t v95 = v94;
  unint64_t v96 = vaddvq_s64(v94);
  if (v96 < 0x81)
  {
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v92.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v92, (int8x16_t)v92, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = v98;
    int32x4_t v100 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v91.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL)));
    int16x8_t v101 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)));
    unint64_t v102 = v96 + v16;
    if (v20 >= v96 + v16)
    {
      unint64_t v103 = v16 & 0x3F;
      int64x2_t v104 = vaddq_s64(vzip1q_s64((int64x2_t)0, v95), vdupq_n_s64(v103));
      int v105 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
      if (v96 + v103 >= 0x81) {
        int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), (int8x16_t)v77);
      }
      unint64_t v16 = v102;
    }
    else
    {
      int v36 = 1;
    }
    int32x4_t v106 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v99));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v106.i8 = vmovn_s64((int64x2_t)v106);
    int16x8_t v107 = (int16x8_t)vzip1q_s32(v77, v106);
    int16x8_t v108 = (int16x8_t)vshlq_u32((uint32x4_t)v107, (uint32x4_t)vnegq_s32(v100));
    *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v107);
    *(int16x4_t *)v108.i8 = vmovn_s32((int32x4_t)v108);
    int16x8_t v109 = vzip1q_s16(v107, v108);
    int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)v109, (uint16x8_t)vnegq_s16(v101));
    *(int8x8_t *)v109.i8 = vmovn_s16(v109);
    *(int8x8_t *)v110.i8 = vmovn_s16(v110);
    int32x4_t v77 = (int32x4_t)vzip1q_s8((int8x16_t)v109, (int8x16_t)v110);
  }
  else
  {
    int v36 = 1;
  }
  int16x8_t v111 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v39, v39));
  int32x4_t v112 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v111, v111));
  unint64_t v113 = vpaddq_s32(v112, v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v116 <= 0x80)
  {
    int32x2_t v118 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v112, (int8x16_t)v112, 8uLL));
    v119.i64[0] = v118.u32[0];
    v119.i64[1] = v118.u32[1];
    int64x2_t v120 = v119;
    int32x4_t v121 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL)));
    int16x8_t v122 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)));
    unint64_t v123 = v116 + v16;
    if (v20 >= v116 + v16)
    {
      unint64_t v125 = v16 & 0x3F;
      int64x2_t v126 = vaddq_s64(vzip1q_s64((int64x2_t)0, v115), vdupq_n_s64(v125));
      uint64_t v127 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v124 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
      if (v116 + v125 >= 0x81) {
        int32x4_t v124 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), (int8x16_t)v124);
      }
      unint64_t v16 = v123;
    }
    else
    {
      int32x4_t v124 = 0uLL;
      int v36 = 1;
    }
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vnegq_s64(v120));
    *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    int16x8_t v129 = (int16x8_t)vzip1q_s32(v124, v128);
    int16x8_t v130 = (int16x8_t)vshlq_u32((uint32x4_t)v129, (uint32x4_t)vnegq_s32(v121));
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    int16x8_t v131 = vzip1q_s16(v129, v130);
    int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)v131, (uint16x8_t)vnegq_s16(v122));
    *(int8x8_t *)v131.i8 = vmovn_s16(v131);
    *(int8x8_t *)v132.i8 = vmovn_s16(v132);
    int8x16_t v117 = vzip1q_s8((int8x16_t)v131, (int8x16_t)v132);
  }
  else
  {
    int v36 = 1;
    int8x16_t v117 = 0uLL;
  }
  int16x8_t v133 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v40, v40));
  int32x4_t v134 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v133, v133));
  unint64_t v135 = vpaddq_s32(v134, v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  if (v138 > 0x80 || v20 < v138 + v16) {
    goto LABEL_65;
  }
  int64x2_t v139 = vaddq_s64(vzip1q_s64((int64x2_t)0, v137), vdupq_n_s64(v16 & 0x3F));
  unint64_t v140 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
  int64x2_t v141 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
  if (v138 + (v16 & 0x3F) >= 0x81) {
    int64x2_t v141 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), (int8x16_t)v141);
  }
  if (v36 || (uint64_t v142 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v142) - (v138 + v16) >= 9))
  {
LABEL_65:
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v209;
LABEL_66:
    *(void *)(v143 & 0xFFFFFFFFFFFFFFF8) |= 255 << ((8 * v143) & 0x30);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    unint64_t v144 = (uint64_t *)((char *)a1->i64 + a2);
    unint64_t v145 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *unint64_t v144 = 0;
    v144[1] = 0;
    unint64_t v146 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *unint64_t v145 = 0;
    v145[1] = 0;
    *unint64_t v146 = 0;
    v146[1] = 0;
    return v142;
  }
  if (v73 == 2)
  {
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v210;
    goto LABEL_66;
  }
  int32x2_t v148 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL));
  int32x2_t v149 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
  v150.i64[0] = v148.u32[0];
  v150.i64[1] = v148.u32[1];
  int64x2_t v151 = v150;
  v150.i64[0] = v149.u32[0];
  v150.i64[1] = v149.u32[1];
  int16x4_t v152 = (int16x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL).u64[0];
  int32x4_t v153 = (int32x4_t)vshlq_u64((uint64x2_t)v60, (uint64x2_t)vnegq_s64(v151));
  int32x4_t v154 = (int32x4_t)vshlq_u64((uint64x2_t)v87, (uint64x2_t)vnegq_s64(v150));
  *(int32x2_t *)v60.i8 = vmovn_s64((int64x2_t)v60);
  *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
  *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
  *(int32x2_t *)v154.i8 = vmovn_s64((int64x2_t)v154);
  int16x8_t v155 = (int16x8_t)vzip1q_s32(v60, v153);
  int16x8_t v156 = (int16x8_t)vzip1q_s32(v87, v154);
  int16x8_t v157 = (int16x8_t)vshlq_u32((uint32x4_t)v155, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL)))));
  int16x8_t v158 = (int16x8_t)vshlq_u32((uint32x4_t)v156, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, v152))));
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  *(int16x4_t *)v157.i8 = vmovn_s32((int32x4_t)v157);
  *(int16x4_t *)v156.i8 = vmovn_s32((int32x4_t)v156);
  *(int16x4_t *)v158.i8 = vmovn_s32((int32x4_t)v158);
  int16x8_t v159 = vzip1q_s16(v155, v157);
  int16x8_t v160 = vzip1q_s16(v156, v158);
  int16x8_t v161 = (int16x8_t)vshlq_u16((uint16x8_t)v159, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
  int16x8_t v162 = (int16x8_t)vshlq_u16((uint16x8_t)v160, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int8x8_t *)v159.i8 = vmovn_s16(v159);
  *(int8x8_t *)v161.i8 = vmovn_s16(v161);
  *(int8x8_t *)v160.i8 = vmovn_s16(v160);
  *(int8x8_t *)v162.i8 = vmovn_s16(v162);
  v152.i32[0] = v19;
  v163.i64[0] = 0x808080808080808;
  v163.i64[1] = 0x808080808080808;
  int8x16_t v164 = vzip1q_s8((int8x16_t)v159, (int8x16_t)v161);
  v161.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v161.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v165 = vsubq_s8(v59, v61);
  int8x16_t v166 = vzip1q_s8((int8x16_t)v160, (int8x16_t)v162);
  v162.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v162.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v156.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v134, (int8x16_t)v134, 8uLL));
  v167.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v167.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v168.i64[0] = 0x808080808080808;
  v168.i64[1] = 0x808080808080808;
  v152.i8[1] = BYTE1(v19);
  int8x16_t v169 = vaddq_s8(v61, (int8x16_t)v161);
  int32x4_t v170 = (int32x4_t)vshlq_s8(v166, vsubq_s8(v163, v78));
  int8x16_t v171 = vshlq_s8(v117, vsubq_s8(v163, v39));
  v150.i64[0] = v156.u32[0];
  v150.i64[1] = v156.u32[1];
  int16x8_t v172 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v40.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
  int8x16_t v173 = vaddq_s8(v40, v167);
  int8x16_t v174 = vsubq_s8(v168, v40);
  int8x16_t v175 = (int8x16_t)vdupq_lane_s16(v152, 0);
  int8x16_t v176 = vshlq_s8(vshlq_s8(v164, v165), v169);
  int8x16_t v177 = vshlq_s8((int8x16_t)v170, vaddq_s8(v78, (int8x16_t)v162));
  int32x4_t v178 = (int32x4_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vnegq_s64(v150));
  *(int32x2_t *)v170.i8 = vmovn_s64(v141);
  *(int32x2_t *)v178.i8 = vmovn_s64((int64x2_t)v178);
  int16x8_t v179 = (int16x8_t)vzip1q_s32(v170, v178);
  int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v179, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v133, (int8x16_t)v133, 8uLL)))));
  *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v179);
  *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
  int16x8_t v181 = vzip1q_s16(v179, v180);
  int16x8_t v182 = (int16x8_t)vshlq_u16((uint16x8_t)v181, (uint16x8_t)vnegq_s16(v172));
  *(int8x8_t *)v181.i8 = vmovn_s16(v181);
  *(int8x8_t *)v182.i8 = vmovn_s16(v182);
  int8x16_t v183 = vaddq_s8(vandq_s8(v176, v44), v177);
  int8x16_t v184 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v176.i8, 0);
  int8x16_t v185 = vsubq_s8(v183, vandq_s8(v44, v184));
  int8x16_t v186 = vsubq_s8(vshlq_s8(vshlq_s8((int8x16_t)v77, vsubq_s8(v163, v38)), vaddq_s8(v38, (int8x16_t)v162)), vandq_s8(v43, v184));
  int8x16_t v187 = vsubq_s8(vshlq_s8(v171, vaddq_s8(v39, (int8x16_t)v162)), vandq_s8(v41, v184));
  int8x16_t v188 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v181, (int8x16_t)v182), v174), v173), vandq_s8(v37, v184));
  v189.i64[0] = 0x101010101010101;
  v189.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v24, v189)))
  {
    int8x16_t v190 = vandq_s8(v21, v189);
    int8x16_t v191 = v185;
    v191.i16[0] = v185.i16[7];
    v191.i16[7] = v185.i16[0];
    int8x16_t v192 = vnegq_s8(v190);
    int8x16_t v193 = vbslq_s8(v192, v191, v185);
    int8x16_t v194 = vaddq_s8(v193, vandq_s8(vqtbl1q_s8(v193, (int8x16_t)xmmword_242EA7480), v192));
    int8x16_t v185 = vaddq_s8(v194, vandq_s8(vqtbl1q_s8(v194, (int8x16_t)xmmword_242EA7490), v192));
    int8x16_t v195 = vaddq_s8(vandq_s8(vqtbl1q_s8(v186, (int8x16_t)xmmword_242EA74A0), v192), v186);
    int8x16_t v186 = vaddq_s8(vandq_s8(vqtbl1q_s8(v195, (int8x16_t)xmmword_242EA74B0), v192), v195);
    int8x16_t v196 = vaddq_s8(vandq_s8(vqtbl1q_s8(v187, (int8x16_t)xmmword_242EA74C0), v192), v187);
    int8x16_t v187 = vaddq_s8(vandq_s8(vqtbl1q_s8(v196, (int8x16_t)xmmword_242EA74D0), v192), v196);
    int8x16_t v197 = vaddq_s8(vandq_s8(vqtbl1q_s8(v188, (int8x16_t)xmmword_242EA74E0), v192), v188);
    int8x16_t v188 = vaddq_s8(vandq_s8(vqtbl1q_s8(v197, (int8x16_t)xmmword_242EA74F0), v192), v197);
  }
  int8x16_t v198 = vaddq_s8(v185, v175);
  int8x16_t v199 = vaddq_s8(v186, v175);
  int8x16_t v200 = vaddq_s8(v187, v175);
  int8x16_t v201 = vaddq_s8(v188, v175);
  v202.i64[0] = 0x1010101010101010;
  v202.i64[1] = 0x1010101010101010;
  int8x16_t v203 = vceqzq_s8(vandq_s8(v21, v202));
  int32x4_t v204 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v198, (int8x16_t)xmmword_242EA7500), v203), v198);
  int32x4_t v205 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v199, (int8x16_t)xmmword_242EA7500), v203), v199);
  int32x4_t v206 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v200, (int8x16_t)xmmword_242EA7500), v203), v200);
  int32x4_t v207 = (int32x4_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v201, (int8x16_t)xmmword_242EA7500), v203), v201);
  *a1 = vuzp1q_s32(v204, v206);
  *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v204, v206);
  unint64_t v208 = (int32x4_t *)((char *)a1 + 2 * a2);
  *unint64_t v208 = vuzp1q_s32(v205, v207);
  *(int32x4_t *)((char *)v208 + a2) = vuzp2q_s32(v205, v207);
  return v142;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(_WORD *a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  if (a4) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v84, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v84, a5);
  }
  __int16 v61 = v85;
  unsigned __int8 v74 = v84;
  unsigned __int8 v75 = v86;
  unsigned __int8 v80 = v88;
  unsigned __int8 v81 = v90;
  __int16 v78 = v89;
  __int16 v79 = v91;
  __int16 v70 = v93;
  unsigned __int8 v71 = v92;
  unsigned __int8 v72 = v94;
  __int16 v73 = v87;
  __int16 v69 = v95;
  uint64_t v9 = a3 + 8;
  unsigned __int8 v76 = v98;
  unsigned __int8 v77 = v96;
  __int16 v59 = v99;
  __int16 v60 = v97;
  if ((a4 & 2) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v9, (uint64_t)&v84, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v9, (uint64_t)&v84, a5);
  }
  unsigned __int8 v65 = v86;
  unsigned __int8 v66 = v84;
  __int16 v53 = v87;
  __int16 v54 = v85;
  unsigned __int8 v67 = v90;
  unsigned __int8 v68 = v88;
  __int16 v51 = v91;
  __int16 v52 = v89;
  unsigned __int8 v62 = v94;
  unsigned __int8 v63 = v92;
  __int16 v49 = v95;
  __int16 v50 = v93;
  unsigned __int8 v64 = v96;
  __int16 v48 = v97;
  uint64_t v10 = a3 + 16;
  unsigned __int8 v83 = v98;
  __int16 v47 = v99;
  int v56 = a5;
  if ((a4 & 4) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v10, (uint64_t)&v84, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v10, (uint64_t)&v84, a5);
  }
  unsigned __int8 v11 = v84;
  unsigned __int8 v12 = v88;
  __int16 v45 = v87;
  __int16 v46 = v85;
  unsigned __int8 v57 = v86;
  unsigned __int8 v58 = v90;
  __int16 v43 = v91;
  __int16 v44 = v89;
  unsigned __int8 v55 = v92;
  unsigned __int8 v13 = v94;
  __int16 v42 = v93;
  __int16 v15 = v95;
  unsigned __int8 v14 = v96;
  __int16 v17 = v97;
  unsigned __int8 v16 = v98;
  uint64_t v18 = a3 + 24;
  __int16 v19 = v99;
  if ((a4 & 8) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v18, (uint64_t)&v84, v56);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v18, (uint64_t)&v84, v56);
  }
  a1[4] = v11 | (unsigned __int16)(v46 << 8);
  __int16 v20 = v84;
  *a1 = v74 | (unsigned __int16)(v61 << 8);
  __int16 v21 = v85;
  __int16 v22 = v86;
  a1[1] = v75 | (unsigned __int16)(v73 << 8);
  __int16 v23 = v87;
  __int16 v24 = v88;
  a1[2] = v71 | (unsigned __int16)(v70 << 8);
  __int16 v25 = v89;
  __int16 v26 = v90;
  a1[3] = v72 | (unsigned __int16)(v69 << 8);
  __int16 v27 = v91;
  a1[5] = v57 | (unsigned __int16)(v45 << 8);
  __int16 v28 = v92;
  a1[6] = v55 | (unsigned __int16)(v42 << 8);
  __int16 v29 = v93;
  a1[7] = v13 | (unsigned __int16)(v15 << 8);
  uint64_t result = v94;
  __int16 v31 = v95;
  unint64_t v32 = (_WORD *)((char *)a1 + a2);
  *unint64_t v32 = v80 | (unsigned __int16)(v78 << 8);
  __int16 v33 = v96;
  __int16 v34 = v97;
  v32[1] = v81 | (unsigned __int16)(v79 << 8);
  __int16 v35 = v98;
  __int16 v36 = v20 | (v21 << 8);
  __int16 v37 = v99;
  v32[2] = v77 | (unsigned __int16)(v60 << 8);
  v32[3] = v76 | (unsigned __int16)(v59 << 8);
  __int16 v38 = v22 | (v23 << 8);
  v32[4] = v12 | (unsigned __int16)(v44 << 8);
  v32[5] = v58 | (unsigned __int16)(v43 << 8);
  __int16 v39 = v24 | (v25 << 8);
  v32[6] = v14 | (unsigned __int16)(v17 << 8);
  v32[7] = v16 | (unsigned __int16)(v19 << 8);
  int8x16_t v40 = (_WORD *)((char *)a1 + a2 + a2);
  *int8x16_t v40 = v66 | (unsigned __int16)(v54 << 8);
  v40[1] = v65 | (unsigned __int16)(v53 << 8);
  v40[2] = v63 | (unsigned __int16)(v50 << 8);
  v40[3] = v62 | (unsigned __int16)(v49 << 8);
  v40[4] = v36;
  v40[5] = v38;
  v40[6] = v28 | (v29 << 8);
  v40[7] = result | (v31 << 8);
  int8x16_t v41 = (_WORD *)((char *)v40 + a2);
  *int8x16_t v41 = v68 | (unsigned __int16)(v52 << 8);
  v41[1] = v67 | (unsigned __int16)(v51 << 8);
  v41[2] = v64 | (unsigned __int16)(v48 << 8);
  v41[3] = v83 | (unsigned __int16)(v47 << 8);
  v41[4] = v39;
  v41[5] = v26 | (v27 << 8);
  v41[6] = v33 | (v34 << 8);
  v41[7] = v35 | (v37 << 8);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unsigned int v7 = a3 & 0xFFFFFFFD;
  int v8 = ((a3 & 0xFFFFFFFD) == 1) << 7;
  uint64_t result = v6;
  do
  {
    if ((unint64_t)(result - v6 + (v4 << 6) - 61) >= 0xFFFFFFFFFFFFFFBFLL)
    {
      char v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 4;
      do
      {
        unint64_t v18 = 64 - result;
        if (64 - result >= v17) {
          unint64_t v18 = v17;
        }
        v15 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v18)) << v16;
        v16 += v18;
        unint64_t v19 = v18 + result;
        v4 += v19 >> 6;
        uint64_t result = v19 & 0x3F;
        v17 -= v18;
      }
      while (v17);
    }
    else
    {
      char v15 = 0;
    }
    int v20 = 16 * (v15 & 0xF);
    if (a3 != 4)
    {
      BOOL v25 = v20 == 128 && v7 == 1;
      if (!v25 && v20)
      {
        if (v20 == 240) {
          int v20 = 255;
        }
        else {
          v20 |= 8 - (v15 & 1);
        }
      }
    }
    *(_DWORD *)(a2 + 8 * v3) = v20 ^ v8;
    if ((unint64_t)(result - v6 + (v4 << 6) - 61) < 0xFFFFFFFFFFFFFFBFLL)
    {
      char v10 = 0;
    }
    else
    {
      char v10 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 4;
      do
      {
        unint64_t v23 = 64 - result;
        if (64 - result >= v22) {
          unint64_t v23 = v22;
        }
        v10 |= (unint64_t)((*(void *)(v5 + 8 * v4) >> result) & ~(-1 << v23)) << v21;
        v21 += v23;
        unint64_t v24 = v23 + result;
        v4 += v24 >> 6;
        uint64_t result = v24 & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    int v11 = 16 * (v10 & 0xF);
    int v12 = (8 - (v10 & 1)) | v11;
    if (v11 == 240) {
      int v12 = 255;
    }
    if (v11 == 128 && v7 == 1 || v11 == 0) {
      int v12 = v11;
    }
    if (a3 == 4) {
      int v12 = v11;
    }
    *(_DWORD *)(a2 + 8 * v3++ + 4) = v12 ^ v8;
  }
  while (v3 != 8);
  return result;
}

int64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v195 = *MEMORY[0x263EF8340];
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = 8 * (a1 & 7);
  unint64_t v7 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v7 >> v6;
  uint64_t v9 = (v7 >> (v6 | 3u)) & 7;
  if ((v6 | 3uLL) - v6 <= 0x3D) {
    uint64_t v10 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v10 = (8 * (a1 & 7)) | 3;
  }
  if ((v6 | 3uLL) - v6 <= 0x3D) {
    int v11 = v9;
  }
  else {
    int v11 = 0;
  }
  v190[0] = 8;
  char v12 = v8 & 7;
  if ((v8 & 7) != 0)
  {
    int v180 = 6;
    uint64_t v13 = 0;
    char v14 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 - 63) >= 0xFFFFFFFFFFFFFFBFLL)
    {
      uint64_t v13 = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      unint64_t v16 = 2;
      do
      {
        unint64_t v17 = 64 - v10;
        if (64 - v10 >= v16) {
          unint64_t v17 = v16;
        }
        v14 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v17)) << v15;
        v15 += v17;
        v13 += (v17 + v10) >> 6;
        uint64_t v10 = (v17 + v10) & 0x3F;
        v16 -= v17;
      }
      while (v16);
    }
    else
    {
      uint64_t v13 = 0;
      char v14 = 0;
    }
    int v180 = 8;
  }
  unsigned int DquadModeData = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::getDquadModeData(0, v12, v14, &v191);
  v194[0] = DquadModeData;
  v193[0] = 0;
  v190[1] = 8;
  if (v11)
  {
    int v19 = 0;
    char v20 = 0;
  }
  else
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) - 63) >= 0xFFFFFFFFFFFFFFBFLL)
    {
      char v20 = 0;
      uint64_t v21 = 0;
      unint64_t v22 = 2;
      do
      {
        unint64_t v23 = 64 - v10;
        if (64 - v10 >= v22) {
          unint64_t v23 = v22;
        }
        v20 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v23)) << v21;
        v21 += v23;
        v13 += (v23 + v10) >> 6;
        uint64_t v10 = (v23 + v10) & 0x3F;
        v22 -= v23;
      }
      while (v22);
    }
    else
    {
      char v20 = 0;
    }
    int v19 = 2;
  }
  unsigned int v24 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::getDquadModeData(1, v11, v20, &v192);
  v194[1] = v24;
  v193[1] = 0;
  BOOL v25 = kDQuadParamTable;
  BOOL v27 = v24 < DquadModeData;
  unsigned int v28 = v24;
  int v29 = kDQuadParamTable[10 * v24 + 6];
  int v187 = kDQuadParamTable[10 * DquadModeData + 6];
  int v26 = v187;
  int v188 = v29;
  v189[0] = v187;
  v189[1] = v29;
  if (v194[v24 >= DquadModeData] == v194[v27])
  {
    int v30 = v187;
  }
  else
  {
    int v31 = *(_DWORD *)((unint64_t)v189 | (4 * v27));
    int v30 = v187;
    if (v31 >= 1)
    {
      *(_DWORD *)((unint64_t)&v187 | (4 * v27)) = 0;
      *(_DWORD *)((unint64_t)&v187 | (4 * (v24 >= DquadModeData))) += v31;
      int v30 = v187;
    }
  }
  unint64_t v32 = &kDQuadParamTable[10 * DquadModeData];
  unsigned int v34 = v32[4];
  unsigned int v33 = v32[5];
  int v35 = v30 - v26;
  if (v35 >= 0)
  {
    unsigned int v36 = v33;
    if (!v35) {
      goto LABEL_37;
    }
    unsigned int v36 = v35 + v33;
    goto LABEL_32;
  }
  if (kDQuadParamTable[10 * DquadModeData + 7] >= -v35)
  {
    unsigned int v36 = v33;
  }
  else
  {
    unsigned int v36 = v33 - 1;
    if (!kDQuadParamTable[10 * DquadModeData + 8])
    {
      int v35 = -1;
LABEL_32:
      v34 += v35;
    }
  }
LABEL_37:
  if (v34 >= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v34;
  }
  v186[0] = v37;
  LODWORD(v38) = 8 * (v33 != 0);
  if (v38 >= v36) {
    unint64_t v38 = v36;
  }
  else {
    unint64_t v38 = v38;
  }
  v185[0] = v38;
  __int16 v39 = &kDQuadParamTable[10 * v24];
  LODWORD(v40) = v39[4];
  int v41 = v39[5];
  int v43 = v188 - v29;
  BOOL v42 = v188 == v29;
  if (v188 - v29 >= 0)
  {
    LODWORD(v44) = v41;
    if (v42) {
      goto LABEL_51;
    }
    LODWORD(v44) = v43 + v41;
    goto LABEL_46;
  }
  if (kDQuadParamTable[10 * v24 + 7] >= v29 - v188)
  {
    LODWORD(v44) = v41;
  }
  else
  {
    LODWORD(v44) = v41 - 1;
    if (!kDQuadParamTable[10 * v24 + 8])
    {
      int v43 = -1;
LABEL_46:
      LODWORD(v40) = v43 + v40;
    }
  }
LABEL_51:
  int v45 = v180 + v19;
  if (v40 >= 8) {
    uint64_t v40 = 8;
  }
  else {
    uint64_t v40 = v40;
  }
  v186[1] = v40;
  unsigned int v46 = 8 * (v41 != 0);
  if (v46 >= v44) {
    unint64_t v44 = v44;
  }
  else {
    unint64_t v44 = v46;
  }
  v185[1] = v44;
  uint64_t v184 = 0;
  if (DquadModeData)
  {
    int v47 = 0;
    if (v37 && (unint64_t)(v10 - v6 + (v13 << 6) + v37) <= 0x40)
    {
      int v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = v37;
      do
      {
        unint64_t v50 = 64 - v10;
        if (64 - v10 >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v50)) << v48;
        v48 += v50;
        v13 += (v50 + v10) >> 6;
        uint64_t v10 = (v50 + v10) & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    LODWORD(v184) = v47 << (8 - v37);
    v45 += v37;
    if (v28)
    {
LABEL_65:
      int v51 = 0;
      if (v40 && (unint64_t)(v10 - v6 + (v13 << 6) + v40) <= 0x40)
      {
        int v51 = 0;
        uint64_t v52 = 0;
        unint64_t v53 = v40;
        do
        {
          unint64_t v54 = 64 - v10;
          if (64 - v10 >= v53) {
            unint64_t v54 = v53;
          }
          v51 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v54)) << v52;
          v52 += v54;
          v13 += (v54 + v10) >> 6;
          uint64_t v10 = (v54 + v10) & 0x3F;
          v53 -= v54;
        }
        while (v53);
      }
      HIDWORD(v184) = v51 << (8 - v40);
      v45 += v40;
      uint64_t v183 = 0;
      if (!v38) {
        goto LABEL_82;
      }
      goto LABEL_75;
    }
  }
  else
  {
    LODWORD(v184) = v191;
    if (v24) {
      goto LABEL_65;
    }
  }
  HIDWORD(v184) = v192;
  uint64_t v183 = 0;
  if (v38)
  {
LABEL_75:
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x40)
    {
      int v55 = 0;
      uint64_t v56 = 0;
      unint64_t v57 = 3;
      do
      {
        unint64_t v58 = 64 - v10;
        if (64 - v10 >= v57) {
          unint64_t v58 = v57;
        }
        v55 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v58)) << v56;
        v56 += v58;
        v13 += (v58 + v10) >> 6;
        uint64_t v10 = (v58 + v10) & 0x3F;
        v57 -= v58;
      }
      while (v57);
    }
    else
    {
      int v55 = 0;
    }
    LODWORD(v183) = v55;
    v45 += 3;
  }
LABEL_82:
  if (v44)
  {
    if ((unint64_t)(v10 - v6 + (v13 << 6) + 3) <= 0x40)
    {
      int v59 = 0;
      uint64_t v60 = 0;
      unint64_t v61 = 3;
      do
      {
        unint64_t v62 = 64 - v10;
        if (64 - v10 >= v61) {
          unint64_t v62 = v61;
        }
        v59 |= (unint64_t)((*(void *)(v5 + 8 * v13) >> v10) & ~(-1 << v62)) << v60;
        v60 += v62;
        v13 += (v62 + v10) >> 6;
        uint64_t v10 = (v62 + v10) & 0x3F;
        v61 -= v62;
      }
      while (v61);
    }
    else
    {
      int v59 = 0;
    }
    HIDWORD(v183) = v59;
    v45 += 3;
  }
  uint64_t v63 = 0;
  unsigned int v64 = a3 & 0xFFFFFFFD;
  unsigned int v65 = 64 - v45;
  unsigned int v66 = (64 - v45) / 7u;
  uint64_t v182 = 0;
  unint64_t v67 = (v10 | (v13 << 6)) + v65 % 7;
  memset(v181, 0, sizeof(v181));
  do
  {
    unint64_t v69 = v67 >> 6;
    int64_t result = v67 & 0x3F;
    if (v38)
    {
      if (result - v6 + (v67 & 0xFFFFFFFFFFFFFFC0) + v38 <= 0x40)
      {
        int v71 = 0;
        uint64_t v72 = 0;
        unint64_t v73 = v38;
        do
        {
          unint64_t v74 = 64 - result;
          if (64 - result >= v73) {
            unint64_t v74 = v73;
          }
          v71 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v74)) << v72;
          v72 += v74;
          unint64_t v75 = v74 + result;
          v69 += v75 >> 6;
          int64_t result = v75 & 0x3F;
          v73 -= v74;
        }
        while (v73);
      }
      else
      {
        int v71 = 0;
      }
      *((_DWORD *)v181 + v63) = v71;
    }
    if (v44)
    {
      if (result - v6 + (v69 << 6) + v44 <= 0x40)
      {
        int v76 = 0;
        uint64_t v77 = 0;
        unint64_t v78 = v44;
        do
        {
          unint64_t v79 = 64 - result;
          if (64 - result >= v78) {
            unint64_t v79 = v78;
          }
          v76 |= (unint64_t)((*(void *)(v5 + 8 * v69) >> result) & ~(-1 << v79)) << v77;
          v77 += v79;
          unint64_t v80 = v79 + result;
          v69 += v80 >> 6;
          int64_t result = v80 & 0x3F;
          v78 -= v79;
        }
        while (v78);
      }
      else
      {
        int v76 = 0;
      }
      *((_DWORD *)&v181[1] + v63 + 3) = v76;
      int v68 = v44 + v38;
    }
    else
    {
      int v68 = v38;
    }
    unint64_t v67 = (result | (v69 << 6)) + v66 - v68;
    ++v63;
  }
  while (v63 != 7);
  char v81 = 0;
  uint64_t v82 = 0;
  do
  {
    char v87 = v81;
    unint64_t v88 = *(void *)&v25[160 * v193[v82] + 2 + 10 * v194[v82]];
    int v89 = v185[v82];
    if (v88 >> v89 <= 1) {
      unint64_t v90 = 1;
    }
    else {
      unint64_t v90 = v88 >> v89;
    }
    int v91 = v190[v82];
    unint64_t v92 = v90 >> 1;
    if (v90 >> 1 >= (unint64_t)(1 << (v91 - v186[v82])) >> 1) {
      unint64_t v93 = (unint64_t)(1 << (v91 - v186[v82])) >> 1;
    }
    else {
      unint64_t v93 = v90 >> 1;
    }
    unint64_t v94 = (1 << (v91 - 1));
    unint64_t v95 = v185[v82 - 2];
    unint64_t v96 = v94 - v95;
    unint64_t v97 = 1 << v91;
    int v98 = (1 << v91) - 1;
    if (v95) {
      unint64_t v99 = v93;
    }
    else {
      unint64_t v99 = 0;
    }
    BOOL v100 = v95 == v94;
    BOOL v101 = v91 == 16;
    if (v91 == 16) {
      unint64_t v102 = 31744;
    }
    else {
      unint64_t v102 = 2139095040;
    }
    if (v91 == 16) {
      unint64_t v103 = 64512;
    }
    else {
      unint64_t v103 = 4286578688;
    }
    unint64_t v104 = 2143289344;
    if (v101) {
      unint64_t v104 = 32256;
    }
    unint64_t v105 = 4290772992;
    if (v101) {
      unint64_t v105 = 65024;
    }
    unint64_t v106 = (v103 - 1);
    if (v89)
    {
      int64_t result = (int64_t)v25;
      unint64_t v107 = v88 + v95;
      uint64_t v108 = ~(-1 << v89);
      int v109 = *((_DWORD *)&v183 + v82);
      unint64_t v110 = v96 / v90;
      if (!v109)
      {
        uint64_t v118 = 0;
        unint64_t v113 = v99;
        BOOL v112 = v95 == v94;
        goto LABEL_175;
      }
      uint64_t v111 = *((unsigned int *)v181 + 7 * v82);
      BOOL v112 = v110 == v111;
      if (v95 | v111)
      {
        if (v107 >= v97 && v111 == v108)
        {
          uint64_t v118 = 1;
          unint64_t v113 = v97 - 1;
          goto LABEL_175;
        }
        unint64_t v113 = v92 + v90 * v111;
      }
      else
      {
        unint64_t v113 = 0;
      }
      uint64_t v118 = 1;
LABEL_175:
      unint64_t v119 = v113 + v95;
      unint64_t v120 = v119;
      if (a3 == 4)
      {
        BOOL v121 = v119 < v102 || v119 >= v104;
        unint64_t v120 = (v102 - 1);
        if (v121)
        {
          BOOL v122 = v119 < v104 || v119 >= v94;
          unint64_t v120 = v94;
          if (v122)
          {
            if (v119 < v105 && v119 >= v103) {
              unint64_t v120 = (v103 - 1);
            }
            else {
              unint64_t v120 = v119;
            }
          }
        }
      }
      if (v120 >= v97) {
        int v124 = v98;
      }
      else {
        int v124 = v120;
      }
      if (v112) {
        int v125 = 0;
      }
      else {
        int v125 = v124 ^ v94;
      }
      if (v64 != 1) {
        int v125 = v124;
      }
      *(_DWORD *)(a2 + 4 * v82) = v125;
      if (v109 == 1)
      {
        unint64_t v126 = v99;
        BOOL v127 = v95 == v94;
      }
      else
      {
        uint64_t v128 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v127 = v110 == v128;
        if (v95 | v128)
        {
          if (v107 < v97 || (unint64_t v126 = v97 - 1, v128 != v108)) {
            unint64_t v126 = v92 + v90 * v128;
          }
        }
        else
        {
          unint64_t v126 = 0;
        }
        ++v118;
      }
      unint64_t v129 = v126 + v95;
      unint64_t v130 = v129;
      if (a3 == 4)
      {
        BOOL v131 = v129 < v102 || v129 >= v104;
        unint64_t v130 = (v102 - 1);
        if (v131)
        {
          BOOL v132 = v129 < v104 || v129 >= v94;
          unint64_t v130 = v94;
          if (v132)
          {
            if (v129 < v105 && v129 >= v103) {
              unint64_t v130 = (v103 - 1);
            }
            else {
              unint64_t v130 = v129;
            }
          }
        }
      }
      if (v130 >= v97) {
        int v134 = v98;
      }
      else {
        int v134 = v130;
      }
      if (v127) {
        int v135 = 0;
      }
      else {
        int v135 = v134 ^ v94;
      }
      if (v64 != 1) {
        int v135 = v134;
      }
      *(_DWORD *)(a2 + 4 * v82 + 8) = v135;
      if (v109 == 2)
      {
        unint64_t v136 = v99;
        BOOL v137 = v95 == v94;
      }
      else
      {
        uint64_t v138 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v137 = v110 == v138;
        if (v95 | v138)
        {
          if (v107 < v97 || (unint64_t v136 = v97 - 1, v138 != v108)) {
            unint64_t v136 = v92 + v90 * v138;
          }
        }
        else
        {
          unint64_t v136 = 0;
        }
        ++v118;
      }
      unint64_t v139 = v136 + v95;
      unint64_t v140 = v139;
      if (a3 == 4)
      {
        if (v139 < v102 || (unint64_t v140 = (v102 - 1), v139 >= v104))
        {
          if (v139 < v104 || (unint64_t v140 = v94, v139 >= v94))
          {
            if (v139 < v105 && v139 >= v103) {
              unint64_t v140 = (v103 - 1);
            }
            else {
              unint64_t v140 = v139;
            }
          }
        }
      }
      if (v140 >= v97) {
        int v142 = v98;
      }
      else {
        int v142 = v140;
      }
      if (v137) {
        int v143 = 0;
      }
      else {
        int v143 = v142 ^ v94;
      }
      if (v64 != 1) {
        int v143 = v142;
      }
      *(_DWORD *)(a2 + 4 * v82 + 16) = v143;
      if (v109 == 3)
      {
        unint64_t v144 = v99;
        BOOL v145 = v95 == v94;
      }
      else
      {
        uint64_t v146 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v145 = v110 == v146;
        if (v95 | v146)
        {
          if (v107 < v97 || (unint64_t v144 = v97 - 1, v146 != v108)) {
            unint64_t v144 = v92 + v90 * v146;
          }
        }
        else
        {
          unint64_t v144 = 0;
        }
        ++v118;
      }
      unint64_t v147 = v144 + v95;
      unint64_t v148 = v147;
      if (a3 == 4)
      {
        if (v147 < v102 || (unint64_t v148 = (v102 - 1), v147 >= v104))
        {
          if (v147 < v104 || (unint64_t v148 = v94, v147 >= v94))
          {
            if (v147 < v105 && v147 >= v103) {
              unint64_t v148 = (v103 - 1);
            }
            else {
              unint64_t v148 = v147;
            }
          }
        }
      }
      if (v148 >= v97) {
        int v150 = v98;
      }
      else {
        int v150 = v148;
      }
      if (v145) {
        int v151 = 0;
      }
      else {
        int v151 = v150 ^ v94;
      }
      if (v64 != 1) {
        int v151 = v150;
      }
      *(_DWORD *)(a2 + 4 * v82 + 24) = v151;
      if (v109 == 4)
      {
        unint64_t v152 = v99;
        BOOL v153 = v95 == v94;
      }
      else
      {
        uint64_t v154 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v153 = v110 == v154;
        if (v95 | v154)
        {
          if (v107 < v97 || (unint64_t v152 = v97 - 1, v154 != v108)) {
            unint64_t v152 = v92 + v90 * v154;
          }
        }
        else
        {
          unint64_t v152 = 0;
        }
        ++v118;
      }
      unint64_t v155 = v152 + v95;
      unint64_t v156 = v155;
      if (a3 == 4)
      {
        if (v155 < v102 || (unint64_t v156 = (v102 - 1), v155 >= v104))
        {
          if (v155 < v104 || (unint64_t v156 = v94, v155 >= v94))
          {
            if (v155 < v105 && v155 >= v103) {
              unint64_t v156 = (v103 - 1);
            }
            else {
              unint64_t v156 = v155;
            }
          }
        }
      }
      if (v156 >= v97) {
        int v158 = v98;
      }
      else {
        int v158 = v156;
      }
      if (v153) {
        int v159 = 0;
      }
      else {
        int v159 = v158 ^ v94;
      }
      if (v64 != 1) {
        int v159 = v158;
      }
      *(_DWORD *)(a2 + 4 * v82 + 32) = v159;
      if (v109 == 5)
      {
        unint64_t v160 = v99;
        BOOL v161 = v95 == v94;
      }
      else
      {
        uint64_t v162 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v161 = v110 == v162;
        if (v95 | v162)
        {
          if (v107 < v97 || (unint64_t v160 = v97 - 1, v162 != v108)) {
            unint64_t v160 = v92 + v90 * v162;
          }
        }
        else
        {
          unint64_t v160 = 0;
        }
        ++v118;
      }
      unint64_t v163 = v160 + v95;
      unint64_t v164 = v163;
      if (a3 == 4)
      {
        if (v163 < v102 || (unint64_t v164 = (v102 - 1), v163 >= v104))
        {
          if (v163 < v104 || (unint64_t v164 = v94, v163 >= v94))
          {
            if (v163 < v105 && v163 >= v103) {
              unint64_t v164 = (v103 - 1);
            }
            else {
              unint64_t v164 = v163;
            }
          }
        }
      }
      if (v164 >= v97) {
        int v166 = v98;
      }
      else {
        int v166 = v164;
      }
      if (v161) {
        int v167 = 0;
      }
      else {
        int v167 = v166 ^ v94;
      }
      if (v64 != 1) {
        int v167 = v166;
      }
      *(_DWORD *)(a2 + 4 * v82 + 40) = v167;
      if (v109 == 6)
      {
        unint64_t v168 = v99;
        BOOL v169 = v95 == v94;
      }
      else
      {
        uint64_t v170 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v169 = v110 == v170;
        if (v95 | v170)
        {
          if (v107 < v97 || (unint64_t v168 = v97 - 1, v170 != v108)) {
            unint64_t v168 = v92 + v90 * v170;
          }
        }
        else
        {
          unint64_t v168 = 0;
        }
        ++v118;
      }
      unint64_t v171 = v168 + v95;
      unint64_t v172 = v171;
      if (a3 == 4)
      {
        if (v171 < v102 || (unint64_t v172 = (v102 - 1), v171 >= v104))
        {
          if (v171 < v104 || (unint64_t v172 = v94, v171 >= v94))
          {
            if (v171 < v105 && v171 >= v103) {
              unint64_t v172 = (v103 - 1);
            }
            else {
              unint64_t v172 = v171;
            }
          }
        }
      }
      if (v172 >= v97) {
        int v174 = v98;
      }
      else {
        int v174 = v172;
      }
      if (v169) {
        int v175 = 0;
      }
      else {
        int v175 = v174 ^ v94;
      }
      if (v64 != 1) {
        int v175 = v174;
      }
      *(_DWORD *)(a2 + 4 * v82 + 48) = v175;
      if (v109 != 7)
      {
        uint64_t v176 = *((unsigned int *)v181 + 7 * v82 + v118);
        BOOL v100 = v110 == v176;
        if (v95 | v176)
        {
          if (v107 >= v97 && v176 == v108) {
            unint64_t v99 = v97 - 1;
          }
          else {
            unint64_t v99 = v92 + v90 * v176;
          }
        }
        else
        {
          unint64_t v99 = 0;
        }
      }
      unint64_t v177 = v99 + v95;
      unint64_t v84 = v177;
      if (a3 == 4)
      {
        if (v177 < v102 || (unint64_t v84 = (v102 - 1), v177 >= v104))
        {
          if (v177 < v104 || (unint64_t v84 = v94, v177 >= v94))
          {
            if (v177 < v105 && v177 >= v103) {
              unint64_t v84 = (v103 - 1);
            }
            else {
              unint64_t v84 = v177;
            }
          }
        }
      }
      if (v84 >= v97) {
        int v85 = v98;
      }
      else {
        int v85 = v84;
      }
      int v86 = v85 ^ v94;
      if (v100) {
        int v86 = 0;
      }
      if (v64 == 1) {
        int v85 = v86;
      }
      BOOL v25 = (_DWORD *)result;
      goto LABEL_124;
    }
    BOOL v115 = v104 <= v95 && v95 < v94;
    BOOL v117 = v95 >= v103 && v105 > v95;
    if (a3 == 4)
    {
      if (v95 < v102 || v104 <= v95)
      {
        if (v115)
        {
          if (v97 <= v94) {
            int v85 = v98;
          }
          else {
            int v85 = v94;
          }
        }
        else
        {
          if (v117) {
            unint64_t v95 = v106;
          }
          if (v95 >= v97) {
            int v85 = v98;
          }
          else {
            int v85 = v95;
          }
        }
      }
      else if (v97 <= (v102 - 1))
      {
        int v85 = v98;
      }
      else
      {
        int v85 = v102 - 1;
      }
    }
    else if (v97 <= v95)
    {
      int v85 = v98;
    }
    else
    {
      int v85 = v185[v82 - 2];
    }
    int v178 = v85 ^ v94;
    if (v90 > v96) {
      int v178 = 0;
    }
    if (v64 == 1) {
      int v85 = v178;
    }
    int16x8_t v179 = (_DWORD *)(a2 + 4 * v82);
    *int16x8_t v179 = v85;
    v179[2] = v85;
    v179[4] = v85;
    v179[6] = v85;
    v179[8] = v85;
    v179[10] = v85;
    v179[12] = v85;
LABEL_124:
    *(_DWORD *)(a2 + 4 * v82 + 56) = v85;
    char v81 = 1;
    uint64_t v82 = 1;
  }
  while ((v87 & 1) == 0);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v10 = a3;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    char v14 = (int32x4_t *)result;
    int v15 = a7;
    int64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v12, v13, a7);
    v10 += result;
  }
  else
  {
    char v14 = (int32x4_t *)result;
    int v15 = a7;
    *a4 = 0;
  }
  uint64_t v35 = 4 * a2;
  unint64_t v16 = a4 + 1;
  if (a6 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a6;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    int v19 = 4;
  }
  else {
    int v19 = v18;
  }
  if (v12 && v19)
  {
    int64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v16, (int32x4_t *)((char *)v14 + v35), a2, v12, v19, v15);
    v10 += result;
  }
  else
  {
    *unint64_t v16 = 0;
  }
  char v20 = a4 + 2;
  if (a5 <= 8) {
    int v21 = 8;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 8;
  if (v22 >= 8) {
    int v23 = 8;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v13)
  {
    int64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v20, v14 + 1, a2, v23, v13, v15);
    v10 += result;
    unsigned int v24 = a4 + 3;
  }
  else
  {
    *char v20 = 0;
    unsigned int v24 = a4 + 3;
    if (!v23) {
      goto LABEL_33;
    }
  }
  if (v19)
  {
    int64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v24, (int32x4_t *)((char *)v14 + v35 + 16), a2, v23, v19, v15);
    v10 += result;
    goto LABEL_34;
  }
LABEL_33:
  *unsigned int v24 = 0;
LABEL_34:
  BOOL v25 = a4 + 4;
  if (a6 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a6;
  }
  unsigned int v27 = v26 - 8;
  if (v27 >= 4) {
    int v28 = 4;
  }
  else {
    int v28 = v27;
  }
  if (v12 && v28)
  {
    int64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v25, (int32x4_t *)((char *)v14 + 8 * a2), a2, v12, v28, v15);
    v10 += result;
  }
  else
  {
    *BOOL v25 = 0;
  }
  int v29 = a4 + 5;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    int64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v29, (int32x4_t *)((char *)v14 + 12 * a2), a2, v12, v32, v15);
    v10 += result;
    unsigned int v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  else
  {
    *int v29 = 0;
    unsigned int v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  if (v28)
  {
    int64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v33, (int32x4_t *)((char *)v14 + 8 * a2 + 16), a2, v23, v28, v15);
    v10 += result;
    unsigned int v34 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  unsigned char *v33 = 0;
  unsigned int v34 = a4 + 7;
  if (!v23)
  {
LABEL_62:
    *unsigned int v34 = 0;
    return result;
  }
LABEL_58:
  if (!v32) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v34, (int32x4_t *)((char *)v14 + 12 * a2 + 16), a2, v23, v32, v15);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  BOOL v8 = a5 < 2 || a6 < 2;
  int64x2_t v9 = *(int64x2_t *)((char *)a3 + a4);
  int8x16_t v10 = (int8x16_t)vzip1q_s64(*a3, v9);
  int8x16_t v11 = (int8x16_t)vzip2q_s64(*a3, v9);
  unsigned int v12 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v13 = *(int64x2_t *)((char *)v12 + a4);
  int8x16_t v14 = (int8x16_t)vzip1q_s64(*v12, v13);
  int8x16_t v15 = (int8x16_t)vzip2q_s64(*v12, v13);
  int8x16_t v16 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v10.i8, 0);
  int8x16_t v17 = vsubq_s8(v10, v16);
  int8x16_t v18 = vsubq_s8(v11, v16);
  int8x16_t v19 = vsubq_s8(v14, v16);
  int8x16_t v20 = vsubq_s8(v15, v16);
  int8x16_t v21 = vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7510);
  int8x16_t v22 = vpmaxq_s8(v21, v21);
  int8x16_t v23 = vpminq_s8(v21, v21);
  int8x16_t v24 = vpmaxq_s8(v22, v22);
  int8x16_t v25 = vpminq_s8(v23, v23);
  int8x16_t v26 = vpmaxq_s8(v24, v24);
  int8x16_t v27 = vpminq_s8(v25, v25);
  v28.i64[0] = 0x8080808080808080;
  v28.i64[1] = 0x8080808080808080;
  int8x16_t v29 = vmaxq_s8(v26, v28);
  v30.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v30.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v31 = vminq_s8(v27, v30);
  int8x16_t v32 = vzip1q_s8(v26, v27);
  v33.i64[0] = 0x808080808080808;
  v33.i64[1] = 0x808080808080808;
  int8x16_t v34 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v32)), vceqzq_s8(v32));
  int8x16_t v35 = vpmaxq_s8(v34, v34);
  int8x16_t v36 = vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7510);
  int8x16_t v37 = vpmaxq_s8(v36, v36);
  int8x16_t v38 = vpminq_s8(v36, v36);
  int8x16_t v39 = vpmaxq_s8(v37, v37);
  int8x16_t v40 = vpminq_s8(v38, v38);
  int8x16_t v41 = vpmaxq_s8(v39, v39);
  int8x16_t v42 = vpminq_s8(v40, v40);
  int8x16_t v43 = vmaxq_s8(v29, v41);
  int8x16_t v44 = vminq_s8(v31, v42);
  int8x16_t v45 = vzip1q_s8(v41, v42);
  int8x16_t v46 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v45)), vceqzq_s8(v45));
  int8x16_t v47 = vpmaxq_s8(v46, v46);
  int8x16_t v48 = vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7510);
  int8x16_t v49 = vpmaxq_s8(v48, v48);
  int8x16_t v50 = vpminq_s8(v48, v48);
  int8x16_t v51 = vpmaxq_s8(v49, v49);
  int8x16_t v52 = vpminq_s8(v50, v50);
  int8x16_t v53 = vpmaxq_s8(v51, v51);
  int8x16_t v54 = vpminq_s8(v52, v52);
  int8x16_t v55 = vmaxq_s8(v43, v53);
  int8x16_t v56 = vminq_s8(v44, v54);
  int8x16_t v57 = vzip1q_s8(v53, v54);
  int8x16_t v58 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v57)), vceqzq_s8(v57));
  int8x16_t v59 = vpmaxq_s8(v58, v58);
  int8x16_t v60 = vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7510);
  int8x16_t v61 = vpmaxq_s8(v60, v60);
  int8x16_t v62 = vpminq_s8(v60, v60);
  int8x16_t v63 = vpmaxq_s8(v61, v61);
  int8x16_t v64 = vpminq_s8(v62, v62);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vmaxq_s8(v55, v65);
  int8x16_t v68 = vminq_s8(v56, v66);
  int8x16_t v69 = vzip1q_s8(v65, v66);
  int8x16_t v70 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v69)), vceqzq_s8(v69));
  int8x16_t v71 = vpmaxq_s8(v70, v70);
  int8x16_t v72 = vmaxq_s8(vmaxq_s8(v35, v47), vmaxq_s8(v59, v71));
  int8x16_t v73 = vclzq_s8(vsubq_s8(v67, v68));
  int8x16_t v74 = vsubq_s8(v33, v73);
  int8x16_t v75 = vcgtq_s8(v72, v74);
  int8x16_t v76 = vbslq_s8(v75, v74, v72);
  if (!vmaxvq_s8(v76))
  {
    *(_WORD *)a1 = a3->i16[0];
    *a2 = 1;
    return 2;
  }
  int8x16_t v413 = v11;
  int8x16_t v414 = v14;
  int8x16_t v415 = v15;
  v77.i64[0] = -1;
  v77.i64[1] = -1;
  v78.i64[0] = 0x707070707070707;
  v78.i64[1] = 0x707070707070707;
  int8x16_t v418 = vandq_s8(vsubq_s8(vshlq_s8(v77, vsubq_s8(v78, v73)), v68), v75);
  v79.i64[0] = 0x303030303030303;
  v79.i64[1] = 0x303030303030303;
  int8x16_t v80 = vorrq_s8(vandq_s8(vceqzq_s8(v76), v79), vandq_s8(v75, v33));
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v35), v79), (int8x16_t)0);
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v47), v79), (int8x16_t)0);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v59), v79), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v76, v71), v79), (int8x16_t)0);
  v85.i64[0] = 0x404040404040404;
  v85.i64[1] = 0x404040404040404;
  int8x16_t v86 = vorrq_s8(vbicq_s8(v85, vceqq_s8(vaddq_s8(v84, v83), vnegq_s8(vaddq_s8(v81, v82)))), v80);
  int8x16_t v87 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7500));
  int8x16_t v88 = vsubq_s8(v19, vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7500));
  int8x16_t v89 = vsubq_s8(v20, vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7500));
  int8x16_t v416 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7500));
  int8x16_t v90 = vqtbl1q_s8(v416, (int8x16_t)xmmword_242EA7510);
  int8x16_t v91 = v17;
  int8x16_t v92 = vpmaxq_s8(v90, v90);
  int8x16_t v93 = vpminq_s8(v90, v90);
  int8x16_t v94 = vpmaxq_s8(v92, v92);
  int8x16_t v95 = vpminq_s8(v93, v93);
  int8x16_t v96 = vpmaxq_s8(v94, v94);
  int8x16_t v97 = vpminq_s8(v95, v95);
  int8x16_t v98 = vmaxq_s8(v96, v28);
  int8x16_t v99 = vminq_s8(v97, v30);
  int8x16_t v100 = vzip1q_s8(v96, v97);
  int8x16_t v101 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v100)), vceqzq_s8(v100));
  int8x16_t v102 = vpmaxq_s8(v101, v101);
  int8x16_t v103 = vqtbl1q_s8(v87, (int8x16_t)xmmword_242EA7510);
  int8x16_t v104 = vpmaxq_s8(v103, v103);
  int8x16_t v105 = vpminq_s8(v103, v103);
  int8x16_t v106 = vpmaxq_s8(v104, v104);
  int8x16_t v107 = vpminq_s8(v105, v105);
  int8x16_t v108 = vpmaxq_s8(v106, v106);
  int8x16_t v109 = vpminq_s8(v107, v107);
  int8x16_t v110 = vmaxq_s8(v98, v108);
  int8x16_t v111 = vminq_s8(v99, v109);
  int8x16_t v112 = vzip1q_s8(v108, v109);
  int8x16_t v113 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v112)), vceqzq_s8(v112));
  int8x16_t v114 = vpmaxq_s8(v113, v113);
  int8x16_t v115 = vqtbl1q_s8(v88, (int8x16_t)xmmword_242EA7510);
  int8x16_t v116 = vpmaxq_s8(v115, v115);
  int8x16_t v117 = vpminq_s8(v115, v115);
  int8x16_t v118 = vpmaxq_s8(v116, v116);
  int8x16_t v119 = vpminq_s8(v117, v117);
  int8x16_t v120 = vpmaxq_s8(v118, v118);
  int8x16_t v121 = vpminq_s8(v119, v119);
  int8x16_t v122 = vmaxq_s8(v110, v120);
  int8x16_t v123 = vminq_s8(v111, v121);
  int8x16_t v124 = vzip1q_s8(v120, v121);
  int8x16_t v125 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v124)), vceqzq_s8(v124));
  int8x16_t v126 = vpmaxq_s8(v125, v125);
  int8x16_t v127 = vqtbl1q_s8(v89, (int8x16_t)xmmword_242EA7510);
  int8x16_t v128 = vpmaxq_s8(v127, v127);
  int8x16_t v129 = vpminq_s8(v127, v127);
  int8x16_t v130 = vpmaxq_s8(v128, v128);
  int8x16_t v131 = vpminq_s8(v129, v129);
  int8x16_t v132 = vpmaxq_s8(v130, v130);
  int8x16_t v133 = vpminq_s8(v131, v131);
  int8x16_t v134 = vmaxq_s8(v122, v132);
  int8x16_t v135 = vminq_s8(v123, v133);
  int8x16_t v136 = vzip1q_s8(v132, v133);
  int8x16_t v137 = vbicq_s8(vsubq_s8(v33, vclsq_s8(v136)), vceqzq_s8(v136));
  int8x16_t v138 = vpmaxq_s8(v137, v137);
  int8x16_t v139 = vmaxq_s8(vmaxq_s8(v102, v114), vmaxq_s8(v126, v138));
  int8x16_t v140 = vclzq_s8(vsubq_s8(v134, v135));
  int8x16_t v141 = vsubq_s8(v33, v140);
  int8x16_t v142 = vcgtq_s8(v139, v141);
  int8x16_t v143 = vbslq_s8(v142, v141, v139);
  v141.i64[0] = 0x1010101010101010;
  v141.i64[1] = 0x1010101010101010;
  v144.i64[0] = 0x1818181818181818;
  v144.i64[1] = 0x1818181818181818;
  int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v143), v79), vbslq_s8(v142, v144, v141));
  int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v102), v79), (int8x16_t)0);
  int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v114), v79), (int8x16_t)0);
  int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v126), v79), (int8x16_t)0);
  int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v138), v79), (int8x16_t)0);
  int8x16_t v150 = vsubq_s8(v143, v146);
  int8x16_t v151 = vsubq_s8(v143, v147);
  int8x16_t v152 = vsubq_s8(v143, v148);
  int8x16_t v153 = vsubq_s8(v143, v149);
  int8x16_t v154 = vorrq_s8(v145, vbicq_s8(v85, vceqq_s8(vaddq_s8(v149, v148), vnegq_s8(vaddq_s8(v146, v147)))));
  uint16x8_t v155 = vmovl_u8(*(uint8x8_t *)v154.i8);
  v147.i64[0] = 0x8000800080008;
  v147.i64[1] = 0x8000800080008;
  v146.i64[0] = 0x2000200020002;
  v146.i64[1] = 0x2000200020002;
  int16x8_t v156 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v154.i8, 1uLL), v147)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v143.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v155 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v146), v147));
  int8x16_t v157 = (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v86.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v146);
  int8x16_t v158 = vsubq_s8(v76, v81);
  int8x16_t v159 = vsubq_s8(v76, v82);
  int8x16_t v160 = vsubq_s8(v76, v83);
  int8x16_t v161 = vsubq_s8(v76, v84);
  int8x16_t v162 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v76.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v86.i8))),
                                                              (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v86.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8(v157, v147)), v156)), 0);
  if (vaddlvq_s8(v162))
  {
    v163.i64[0] = 0x707070707070707;
    v163.i64[1] = 0x707070707070707;
    v164.i64[0] = -1;
    v164.i64[1] = -1;
    int8x16_t v165 = vsubq_s8(vshlq_s8(v164, vsubq_s8(v163, v140)), v135);
    int8x16_t v16 = vbslq_s8(v162, vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7500)), v16);
    int8x16_t v417 = vbslq_s8(v162, v416, v91);
    int8x16_t v166 = vbslq_s8(v162, v87, v18);
    int8x16_t v158 = vbslq_s8(v162, v150, v158);
    int8x16_t v159 = vbslq_s8(v162, v151, v159);
    int8x16_t v160 = vbslq_s8(v162, v152, v160);
    int8x16_t v161 = vbslq_s8(v162, v153, v161);
    int8x16_t v167 = vbslq_s8(v162, vandq_s8(v165, v142), v418);
    int8x16_t v76 = vbslq_s8(v162, v143, v76);
    int8x16_t v86 = vbslq_s8(v162, v154, v86);
    int8x16_t v168 = vbslq_s8(v162, v89, v20);
    int8x16_t v169 = vbslq_s8(v162, v88, v19);
    if (v8) {
      goto LABEL_15;
    }
  }
  else
  {
    int8x16_t v417 = v91;
    int8x16_t v166 = v18;
    int8x16_t v168 = v20;
    int8x16_t v169 = v19;
    int8x16_t v167 = v418;
    if (v8) {
      goto LABEL_15;
    }
  }
  int8x16_t v171 = v413;
  v171.i16[7] = v10.i16[7];
  int8x16_t v172 = vsubq_s8(v10, vqtbl1q_s8(v10, (int8x16_t)xmmword_242EA7520));
  int8x16_t v173 = vsubq_s8(v413, vqtbl1q_s8(v171, (int8x16_t)xmmword_242EA7530));
  int8x16_t v174 = v414;
  v174.i16[7] = v10.i16[7];
  int8x16_t v175 = vsubq_s8(v414, vqtbl1q_s8(v174, (int8x16_t)xmmword_242EA7540));
  int8x16_t v176 = v415;
  v176.i16[7] = v10.i16[7];
  int8x16_t v177 = vsubq_s8(v415, vqtbl1q_s8(v176, (int8x16_t)xmmword_242EA7550));
  int8x16_t v178 = v172;
  v178.i16[0] = v172.i16[7];
  v178.i16[7] = v172.i16[0];
  int8x16_t v179 = vqtbl1q_s8(v178, (int8x16_t)xmmword_242EA7510);
  int8x16_t v180 = vpmaxq_s8(v179, v179);
  int8x16_t v181 = vpminq_s8(v179, v179);
  int8x16_t v182 = vpmaxq_s8(v180, v180);
  int8x16_t v183 = vpminq_s8(v181, v181);
  int8x16_t v184 = vpmaxq_s8(v182, v182);
  int8x16_t v185 = vpminq_s8(v183, v183);
  v186.i64[0] = 0x8080808080808080;
  v186.i64[1] = 0x8080808080808080;
  int8x16_t v187 = vmaxq_s8(v184, v186);
  v188.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v188.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v189 = vzip1q_s8(v184, v185);
  v190.i64[0] = 0x808080808080808;
  v190.i64[1] = 0x808080808080808;
  int8x16_t v191 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v189)), vceqzq_s8(v189));
  int8x16_t v192 = vpmaxq_s8(v191, v191);
  int8x16_t v193 = vqtbl1q_s8(v173, (int8x16_t)xmmword_242EA7510);
  int8x16_t v194 = vpmaxq_s8(v193, v193);
  int8x16_t v195 = vpminq_s8(v193, v193);
  int8x16_t v196 = vpmaxq_s8(v194, v194);
  int8x16_t v197 = vpminq_s8(v195, v195);
  int8x16_t v198 = vpmaxq_s8(v196, v196);
  int8x16_t v199 = vpminq_s8(v197, v197);
  int8x16_t v200 = vmaxq_s8(v187, v198);
  int8x16_t v201 = vminq_s8(vminq_s8(v185, v188), v199);
  int8x16_t v202 = vzip1q_s8(v198, v199);
  int8x16_t v203 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v202)), vceqzq_s8(v202));
  int8x16_t v204 = vpmaxq_s8(v203, v203);
  int8x16_t v205 = vqtbl1q_s8(v175, (int8x16_t)xmmword_242EA7510);
  int8x16_t v206 = vpmaxq_s8(v205, v205);
  int8x16_t v207 = vpminq_s8(v205, v205);
  int8x16_t v208 = vpmaxq_s8(v206, v206);
  int8x16_t v209 = vpminq_s8(v207, v207);
  int8x16_t v210 = vpmaxq_s8(v208, v208);
  int8x16_t v211 = vpminq_s8(v209, v209);
  int8x16_t v212 = vmaxq_s8(v200, v210);
  int8x16_t v213 = vminq_s8(v201, v211);
  int8x16_t v214 = vzip1q_s8(v210, v211);
  int8x16_t v215 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v214)), vceqzq_s8(v214));
  int8x16_t v216 = vpmaxq_s8(v215, v215);
  int8x16_t v217 = vqtbl1q_s8(v177, (int8x16_t)xmmword_242EA7510);
  int8x16_t v218 = vpmaxq_s8(v217, v217);
  int8x16_t v219 = vpminq_s8(v217, v217);
  int8x16_t v220 = vpmaxq_s8(v218, v218);
  int8x16_t v221 = vpminq_s8(v219, v219);
  int8x16_t v222 = vpmaxq_s8(v220, v220);
  int8x16_t v223 = vpminq_s8(v221, v221);
  int8x16_t v224 = vminq_s8(v213, v223);
  int8x16_t v225 = vzip1q_s8(v222, v223);
  int8x16_t v226 = vbicq_s8(vsubq_s8(v190, vclsq_s8(v225)), vceqzq_s8(v225));
  int8x16_t v227 = vpmaxq_s8(v226, v226);
  int8x16_t v228 = vmaxq_s8(vmaxq_s8(v192, v204), vmaxq_s8(v216, v227));
  int8x16_t v229 = vclzq_s8(vsubq_s8(vmaxq_s8(v212, v222), v224));
  int8x16_t v230 = vsubq_s8(v190, v229);
  int8x16_t v231 = vcgtq_s8(v228, v230);
  int8x16_t v232 = vbslq_s8(v231, v230, v228);
  v230.i64[0] = 0x909090909090909;
  v230.i64[1] = 0x909090909090909;
  v233.i64[0] = 0x202020202020202;
  v233.i64[1] = 0x202020202020202;
  int8x16_t v234 = vorrq_s8(vandq_s8(vceqzq_s8(v232), v233), vsubq_s8(vandq_s8(v231, v230), vmvnq_s8(v231)));
  v228.i64[0] = 0x303030303030303;
  v228.i64[1] = 0x303030303030303;
  int8x16_t v235 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v192), v228), (int8x16_t)0);
  int8x16_t v236 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v204), v228), (int8x16_t)0);
  int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v216), v228), (int8x16_t)0);
  int8x16_t v238 = vmaxq_s8(vminq_s8(vsubq_s8(v232, v227), v228), (int8x16_t)0);
  int8x16_t v239 = vsubq_s8(v232, v235);
  int8x16_t v240 = vsubq_s8(v232, v236);
  int8x16_t v241 = vsubq_s8(v232, v237);
  int8x16_t v242 = vsubq_s8(v232, v238);
  int8x16_t v243 = vceqq_s8(vaddq_s8(v238, v237), vnegq_s8(vaddq_s8(v235, v236)));
  v238.i64[0] = 0x404040404040404;
  v238.i64[1] = 0x404040404040404;
  int8x16_t v244 = vorrq_s8(v234, vbicq_s8(v238, v243));
  v245.i64[0] = 0x3000300030003;
  v245.i64[1] = 0x3000300030003;
  int8x16_t v246 = (int8x16_t)vmovl_s8(*(int8x8_t *)v86.i8);
  v236.i64[0] = 0x8000800080008;
  v236.i64[1] = 0x8000800080008;
  int16x8_t v247 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v76.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v246, v236)));
  int16x8_t v248 = (int16x8_t)vandq_s8(v246, v245);
  v245.i64[0] = 0x2000200020002;
  v245.i64[1] = 0x2000200020002;
  int8x16_t v249 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v247, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v86.i8, 1uLL), v236)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v248, (int16x8_t)v245), v236)), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8),
                                                                *(int8x8_t *)v161.i8),
                                                              3uLL)),
                                                          vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v241.i8, *(int8x8_t *)v240.i8), *(int8x8_t *)v242.i8), 3uLL), *(int8x8_t *)v239.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v244.i8, *(int8x8_t *)v244.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v232.i8, (int8x8_t)vcgt_u8(
                                                                          (uint8x8_t)0x808080808080808,
                                                                          *(uint8x8_t *)v244.i8))))),
                      0);
  if (vaddlvq_s8(v249))
  {
    v250.i64[0] = 0x707070707070707;
    v250.i64[1] = 0x707070707070707;
    v251.i64[0] = -1;
    v251.i64[1] = -1;
    int8x16_t v252 = vsubq_s8(vshlq_s8(v251, vsubq_s8(v250, v229)), v224);
    v16.i16[0] = vbslq_s8(v249, vextq_s8(v10, v10, 0xEuLL), v16).u16[0];
    int8x16_t v253 = vbslq_s8(v249, v178, v417);
    int8x16_t v166 = vbslq_s8(v249, v173, v166);
    int8x16_t v169 = vbslq_s8(v249, v175, v169);
    int8x16_t v168 = vbslq_s8(v249, v177, v168);
    int8x16_t v158 = vbslq_s8(v249, v239, v158);
    int8x16_t v159 = vbslq_s8(v249, v240, v159);
    int8x16_t v160 = vbslq_s8(v249, v241, v160);
    int8x16_t v161 = vbslq_s8(v249, v242, v161);
    int8x16_t v167 = vbslq_s8(v249, vandq_s8(v252, v231), v167);
    int8x16_t v76 = vbslq_s8(v249, v232, v76);
    int8x16_t v86 = vbslq_s8(v249, v244, v86);
    goto LABEL_16;
  }
LABEL_15:
  int8x16_t v253 = v417;
LABEL_16:
  int8x16_t v254 = (int8x16_t)vmovl_s8(*(int8x8_t *)v86.i8);
  v255.i64[0] = 0x8000800080008;
  v255.i64[1] = 0x8000800080008;
  int16x8_t v256 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v76.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v254, v255)));
  v257.i64[0] = 0x3000300030003;
  v257.i64[1] = 0x3000300030003;
  int16x8_t v258 = (int16x8_t)vandq_s8(v254, v257);
  v257.i64[0] = 0x2000200020002;
  v257.i64[1] = 0x2000200020002;
  int16x8_t v259 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v159.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v158.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v86.i8, 1uLL), v255)), v256), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v258, (int16x8_t)v257), v255));
  if ((unint64_t)(vpaddq_s16(v259, v259).i16[0] - 227) <= 0xFFFFFFFFFFFFFEF7)
  {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
    return 32;
  }
  else
  {
    int v260 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v261 = 8 * (a1 & 7);
    if (v261) {
      uint64_t v262 = *v260 & ~(-1 << v261);
    }
    else {
      uint64_t v262 = 0;
    }
    unint64_t v263 = (unint64_t)((v76.i8[0] - 1) & 7) << 10;
    if (!v76.i8[0]) {
      unint64_t v263 = 0;
    }
    if (v76.i8[1]) {
      uint64_t v264 = (unsigned __int16)((v76.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v264 = 0;
    }
    *a2 = v86.i8[0] << 6;
    unint64_t v265 = ((v263 | v264) & 0xFFFFFFFFFFFFFC1FLL | v86.i8[0] & 0x1C | (32 * (v86.i8[1] & 0x1F))) >> 2;
    unint64_t v266 = v262 | (v265 << v261);
    if (v261 >= 0x32)
    {
      *int v260 = v266;
      unint64_t v266 = v265 >> (-8 * (a1 & 7u));
    }
    unint64_t v267 = (v261 + 14) & 0x3E;
    unint64_t v268 = v266 | ((unint64_t)v16.u16[0] << v267);
    if (v267 >= 0x30)
    {
      *(void *)((char *)v260 + (((v261 + 14) >> 3) & 8)) = v268;
      unint64_t v268 = (unint64_t)v16.u16[0] >> -(char)v267;
    }
    unint64_t v269 = v261 + 30;
    int8x16_t v270 = vsubq_s8(v76, v158);
    int8x16_t v271 = vsubq_s8(v76, v159);
    int8x16_t v272 = vsubq_s8(v76, v160);
    int8x16_t v273 = vsubq_s8(v76, v161);
    v270.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v270, v271), (int16x8_t)vzip1q_s8(v272, v273)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v270, v271), (int16x8_t)vtrn2q_s8(v272, v273))).u64[0];
    v272.i64[0] = 0x202020202020202;
    v272.i64[1] = 0x202020202020202;
    int8x16_t v274 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v86.i8), (int8x8_t)0x4000400040004)))), v272);
    v272.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v272.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v273.i64[0] = -1;
    v273.i64[1] = -1;
    uint8x16_t v275 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v273, (uint8x16_t)vorrq_s8(v274, v272)), (int8x16_t)v270.u64[0]);
    int16x8_t v276 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v274.i8);
    uint16x8_t v277 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v275.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v276)), (int16x8_t)vmovl_high_u8(v275));
    uint16x8_t v278 = (uint16x8_t)vpaddq_s16(v276, (int16x8_t)vmovl_high_u8((uint8x16_t)v274));
    int32x4_t v279 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v278.i8);
    int32x4_t v280 = (int32x4_t)vmovl_high_u16(v278);
    int32x4_t v281 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v277.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v279)), (int32x4_t)vshlq_u32(vmovl_high_u16(v277), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v280)));
    int32x4_t v282 = vpaddq_s32(v279, v280);
    v283.i64[0] = v281.u32[0];
    v283.i64[1] = v281.u32[1];
    uint64x2_t v284 = (uint64x2_t)v283;
    v283.i64[0] = v281.u32[2];
    v283.i64[1] = v281.u32[3];
    uint64x2_t v285 = (uint64x2_t)v283;
    v283.i64[0] = v282.u32[0];
    v283.i64[1] = v282.u32[1];
    int64x2_t v286 = v283;
    v283.i64[0] = v282.u32[2];
    v283.i64[1] = v282.u32[3];
    int64x2_t v287 = vpaddq_s64((int64x2_t)vshlq_u64(v284, (uint64x2_t)vzip1q_s64((int64x2_t)0, v286)), (int64x2_t)vshlq_u64(v285, (uint64x2_t)vzip1q_s64((int64x2_t)0, v283)));
    int64x2_t v288 = vpaddq_s64(v286, v283);
    uint64_t v289 = (v261 + 30) & 0x3E;
    unint64_t v290 = (v287.i64[0] << v289) | v268;
    if ((unint64_t)(v288.i64[0] + v289) >= 0x40)
    {
      *(void *)((char *)v260 + ((v269 >> 3) & 8)) = v290;
      unint64_t v290 = (unint64_t)v287.i64[0] >> -(char)v289;
    }
    int8x16_t v291 = vceqq_s8(v76, v158);
    unint64_t v292 = v288.i64[0] + v269;
    unint64_t v293 = v290 | (v287.i64[1] << v292);
    if ((v292 & 0x3F) + v288.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v292 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v293;
      unint64_t v293 = (unint64_t)v287.i64[1] >> -(v292 & 0x3F);
      if ((v292 & 0x3F) == 0) {
        unint64_t v293 = 0;
      }
    }
    int8x16_t v294 = vandq_s8(v167, v291);
    unint64_t v295 = v292 + v288.i64[1];
    v296.i64[0] = 0x808080808080808;
    v296.i64[1] = 0x808080808080808;
    v297.i64[0] = -1;
    v297.i64[1] = -1;
    int8x16_t v298 = vandq_s8(vextq_s8(vtstq_s8(v86, v296), (int8x16_t)0, 0xEuLL), v76);
    v299.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v299.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v300 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v297, (uint8x16_t)vaddq_s8(v298, v299)), v167);
    int16x8_t v301 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v298.i8);
    uint16x8_t v302 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v300.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v301)), (int16x8_t)vmovl_high_u8(v300));
    uint16x8_t v303 = (uint16x8_t)vpaddq_s16(v301, (int16x8_t)vmovl_high_u8((uint8x16_t)v298));
    int32x4_t v304 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v303.i8);
    int32x4_t v305 = (int32x4_t)vmovl_high_u16(v303);
    int32x4_t v306 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v302.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v304)), (int32x4_t)vshlq_u32(vmovl_high_u16(v302), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v305)));
    int32x4_t v307 = vpaddq_s32(v304, v305);
    v308.i64[0] = v306.u32[0];
    v308.i64[1] = v306.u32[1];
    uint64x2_t v309 = (uint64x2_t)v308;
    v308.i64[0] = v306.u32[2];
    v308.i64[1] = v306.u32[3];
    uint64x2_t v310 = (uint64x2_t)v308;
    v308.i64[0] = v307.u32[0];
    v308.i64[1] = v307.u32[1];
    int64x2_t v311 = v308;
    v308.i64[0] = v307.u32[2];
    v308.i64[1] = v307.u32[3];
    int64x2_t v312 = vpaddq_s64((int64x2_t)vshlq_u64(v309, (uint64x2_t)vzip1q_s64((int64x2_t)0, v311)), (int64x2_t)vshlq_u64(v310, (uint64x2_t)vzip1q_s64((int64x2_t)0, v308)));
    int64x2_t v313 = vpaddq_s64(v311, v308);
    unint64_t v314 = (v312.i64[0] << v295) | v293;
    if (v313.i64[0] + (v295 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v295 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v314;
      unint64_t v314 = (unint64_t)v312.i64[0] >> -(v295 & 0x3F);
      if ((v295 & 0x3F) == 0) {
        unint64_t v314 = 0;
      }
    }
    int8x16_t v315 = vceqq_s8(v76, v159);
    int8x16_t v316 = vaddq_s8(v294, v253);
    unint64_t v317 = v313.i64[0] + v295;
    unint64_t v318 = v314 | (v312.i64[1] << v317);
    if ((v317 & 0x3F) + v313.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v317 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v318;
      unint64_t v318 = (unint64_t)v312.i64[1] >> -(v317 & 0x3F);
      if ((v317 & 0x3F) == 0) {
        unint64_t v318 = 0;
      }
    }
    int8x16_t v319 = vandq_s8(v167, v315);
    unint64_t v320 = v317 + v313.i64[1];
    int8x16_t v321 = vextq_s8((int8x16_t)0, v158, 0xEuLL);
    v322.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v322.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v323.i64[0] = -1;
    v323.i64[1] = -1;
    uint8x16_t v324 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v323, (uint8x16_t)vaddq_s8(v321, v322)), v316);
    int16x8_t v325 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v321.i8);
    int16x8_t v326 = (int16x8_t)vmovl_high_u8((uint8x16_t)v321);
    uint16x8_t v327 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v324.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v325)), (int16x8_t)vshlq_u16(vmovl_high_u8(v324), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v326)));
    uint16x8_t v328 = (uint16x8_t)vpaddq_s16(v325, v326);
    int32x4_t v329 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v328.i8);
    int32x4_t v330 = (int32x4_t)vmovl_high_u16(v328);
    int32x4_t v331 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v327.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)), (int32x4_t)vshlq_u32(vmovl_high_u16(v327), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)));
    int32x4_t v332 = vpaddq_s32(v329, v330);
    v333.i64[0] = v331.u32[0];
    v333.i64[1] = v331.u32[1];
    uint64x2_t v334 = (uint64x2_t)v333;
    v333.i64[0] = v331.u32[2];
    v333.i64[1] = v331.u32[3];
    uint64x2_t v335 = (uint64x2_t)v333;
    v333.i64[0] = v332.u32[0];
    v333.i64[1] = v332.u32[1];
    int64x2_t v336 = v333;
    v333.i64[0] = v332.u32[2];
    v333.i64[1] = v332.u32[3];
    int64x2_t v337 = vpaddq_s64((int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v336)), (int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v333)));
    int64x2_t v338 = vpaddq_s64(v336, v333);
    unint64_t v339 = (v337.i64[0] << v320) | v318;
    if (v338.i64[0] + (v320 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v320 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v339;
      unint64_t v339 = (unint64_t)v337.i64[0] >> -(v320 & 0x3F);
      if ((v320 & 0x3F) == 0) {
        unint64_t v339 = 0;
      }
    }
    int8x16_t v340 = vceqq_s8(v76, v160);
    int8x16_t v341 = vaddq_s8(v166, v319);
    unint64_t v342 = v338.i64[0] + v320;
    unint64_t v343 = v339 | (v337.i64[1] << v342);
    if ((v342 & 0x3F) + v338.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v343;
      unint64_t v343 = (unint64_t)v337.i64[1] >> -(v342 & 0x3F);
      if ((v342 & 0x3F) == 0) {
        unint64_t v343 = 0;
      }
    }
    int8x16_t v344 = vandq_s8(v167, v340);
    unint64_t v345 = v342 + v338.i64[1];
    v346.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v346.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v347.i64[0] = -1;
    v347.i64[1] = -1;
    uint8x16_t v348 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v347, (uint8x16_t)vaddq_s8(v159, v346)), v341);
    int16x8_t v349 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v159.i8);
    int16x8_t v350 = (int16x8_t)vmovl_high_u8((uint8x16_t)v159);
    uint16x8_t v351 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v348.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v349)), (int16x8_t)vshlq_u16(vmovl_high_u8(v348), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v350)));
    uint16x8_t v352 = (uint16x8_t)vpaddq_s16(v349, v350);
    int32x4_t v353 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v352.i8);
    int32x4_t v354 = (int32x4_t)vmovl_high_u16(v352);
    int32x4_t v355 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v351.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v353)), (int32x4_t)vshlq_u32(vmovl_high_u16(v351), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)));
    int32x4_t v356 = vpaddq_s32(v353, v354);
    v357.i64[0] = v355.u32[0];
    v357.i64[1] = v355.u32[1];
    uint64x2_t v358 = (uint64x2_t)v357;
    v357.i64[0] = v355.u32[2];
    v357.i64[1] = v355.u32[3];
    uint64x2_t v359 = (uint64x2_t)v357;
    v357.i64[0] = v356.u32[0];
    v357.i64[1] = v356.u32[1];
    int64x2_t v360 = v357;
    v357.i64[0] = v356.u32[2];
    v357.i64[1] = v356.u32[3];
    int64x2_t v361 = vpaddq_s64((int64x2_t)vshlq_u64(v358, (uint64x2_t)vzip1q_s64((int64x2_t)0, v360)), (int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v357)));
    int64x2_t v362 = vpaddq_s64(v360, v357);
    unint64_t v363 = (v361.i64[0] << v345) | v343;
    if (v362.i64[0] + (v345 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v345 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v363;
      unint64_t v363 = (unint64_t)v361.i64[0] >> -(v345 & 0x3F);
      if ((v345 & 0x3F) == 0) {
        unint64_t v363 = 0;
      }
    }
    int8x16_t v364 = vceqq_s8(v76, v161);
    int8x16_t v365 = vaddq_s8(v169, v344);
    unint64_t v366 = v362.i64[0] + v345;
    unint64_t v367 = v363 | (v361.i64[1] << v366);
    if ((v366 & 0x3F) + v362.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v367;
      unint64_t v367 = (unint64_t)v361.i64[1] >> -(v366 & 0x3F);
      if ((v366 & 0x3F) == 0) {
        unint64_t v367 = 0;
      }
    }
    int8x16_t v368 = vandq_s8(v167, v364);
    unint64_t v369 = v366 + v362.i64[1];
    v370.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v370.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v371.i64[0] = -1;
    v371.i64[1] = -1;
    uint8x16_t v372 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v371, (uint8x16_t)vaddq_s8(v160, v370)), v365);
    int16x8_t v373 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v160.i8);
    int16x8_t v374 = (int16x8_t)vmovl_high_u8((uint8x16_t)v160);
    uint16x8_t v375 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v372.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)), (int16x8_t)vshlq_u16(vmovl_high_u8(v372), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v374)));
    uint16x8_t v376 = (uint16x8_t)vpaddq_s16(v373, v374);
    int32x4_t v377 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v376.i8);
    int32x4_t v378 = (int32x4_t)vmovl_high_u16(v376);
    int32x4_t v379 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v375.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)), (int32x4_t)vshlq_u32(vmovl_high_u16(v375), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v378)));
    int32x4_t v380 = vpaddq_s32(v377, v378);
    v381.i64[0] = v379.u32[0];
    v381.i64[1] = v379.u32[1];
    uint64x2_t v382 = (uint64x2_t)v381;
    v381.i64[0] = v379.u32[2];
    v381.i64[1] = v379.u32[3];
    uint64x2_t v383 = (uint64x2_t)v381;
    v381.i64[0] = v380.u32[0];
    v381.i64[1] = v380.u32[1];
    int64x2_t v384 = v381;
    v381.i64[0] = v380.u32[2];
    v381.i64[1] = v380.u32[3];
    int64x2_t v385 = vpaddq_s64((int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v384)), (int64x2_t)vshlq_u64(v383, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)));
    int64x2_t v386 = vpaddq_s64(v384, v381);
    unint64_t v387 = (v385.i64[0] << v369) | v367;
    if (v386.i64[0] + (v369 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v260 + ((v369 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v387;
      unint64_t v387 = (unint64_t)v385.i64[0] >> -(v369 & 0x3F);
      if ((v369 & 0x3F) == 0) {
        unint64_t v387 = 0;
      }
    }
    int8x16_t v388 = vaddq_s8(v168, v368);
    unint64_t v389 = v386.i64[0] + v369;
    unint64_t v390 = v387 | (v385.i64[1] << v389);
    if ((v389 & 0x3F) + v386.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v389 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
      unint64_t v390 = (unint64_t)v385.i64[1] >> -(v389 & 0x3F);
      if ((v389 & 0x3F) == 0) {
        unint64_t v390 = 0;
      }
    }
    unint64_t v391 = v389 + v386.i64[1];
    v392.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v392.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v393.i64[0] = -1;
    v393.i64[1] = -1;
    uint8x16_t v394 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v393, (uint8x16_t)vaddq_s8(v161, v392)), v388);
    int16x8_t v395 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v161.i8);
    int16x8_t v396 = (int16x8_t)vmovl_high_u8((uint8x16_t)v161);
    uint16x8_t v397 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v394.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v395)), (int16x8_t)vshlq_u16(vmovl_high_u8(v394), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v396)));
    uint16x8_t v398 = (uint16x8_t)vpaddq_s16(v395, v396);
    int32x4_t v399 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v398.i8);
    int32x4_t v400 = (int32x4_t)vmovl_high_u16(v398);
    int32x4_t v401 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v397.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v399)), (int32x4_t)vshlq_u32(vmovl_high_u16(v397), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v400)));
    int32x4_t v402 = vpaddq_s32(v399, v400);
    v403.i64[0] = v401.u32[0];
    v403.i64[1] = v401.u32[1];
    uint64x2_t v404 = (uint64x2_t)v403;
    v403.i64[0] = v401.u32[2];
    v403.i64[1] = v401.u32[3];
    uint64x2_t v405 = (uint64x2_t)v403;
    v403.i64[0] = v402.u32[0];
    v403.i64[1] = v402.u32[1];
    int64x2_t v406 = v403;
    v403.i64[0] = v402.u32[2];
    v403.i64[1] = v402.u32[3];
    int64x2_t v407 = vpaddq_s64((int64x2_t)vshlq_u64(v404, (uint64x2_t)vzip1q_s64((int64x2_t)0, v406)), (int64x2_t)vshlq_u64(v405, (uint64x2_t)vzip1q_s64((int64x2_t)0, v403)));
    int64x2_t v408 = vpaddq_s64(v406, v403);
    unint64_t v409 = (v407.i64[0] << v391) | v390;
    if (v408.i64[0] + (v391 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v260 + ((v391 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v409;
      if ((v391 & 0x3F) != 0) {
        unint64_t v409 = (unint64_t)v407.i64[0] >> -(v391 & 0x3F);
      }
      else {
        unint64_t v409 = 0;
      }
    }
    unint64_t v410 = v408.i64[0] + v391;
    unint64_t v411 = v409 | (v407.i64[1] << v410);
    if ((v410 & 0x3F) + v408.i64[1] >= 0x40)
    {
      *(void *)((char *)v260 + ((v410 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v411;
      unint64_t v411 = (unint64_t)v407.i64[1] >> -(v410 & 0x3F);
      if ((v410 & 0x3F) == 0) {
        unint64_t v411 = 0;
      }
    }
    unint64_t v412 = v410 + v408.i64[1];
    if ((v412 & 0x3F) != 0) {
      *(void *)((char *)v260 + ((v412 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v411;
    }
    unint64_t result = (v412 - v261 + 7) >> 3;
    *a2 |= (_BYTE)result - 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v69 = *MEMORY[0x263EF8340];
  long long v67 = 0u;
  long long v68 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  uint64_t v11 = a6;
  if (a5 > 3)
  {
    uint64_t v17 = a5 & 0xFC;
    uint64_t v18 = a5 - v17;
    if (a5 == v17)
    {
      unsigned __int8 v19 = 0;
      do
      {
        int8x16_t v20 = (char *)&v65 + 8 * v19 + 8;
        int8x16_t v21 = (const __int16 *)a3;
        uint64_t v22 = a5;
        do
        {
          int16x4x2_t v70 = vld2_s16(v21);
          v21 += 8;
          *(int16x4x2_t *)(v20 - 8) = v70;
          v20 += 8;
          v22 -= 4;
        }
        while (v22);
        ++v18;
        v19 += 2;
        a3 += a4;
      }
      while (v18 != a6);
    }
    else
    {
      unsigned __int8 v23 = 0;
      uint64_t v24 = 0;
      do
      {
        uint64_t v25 = 8 * v23;
        int8x16_t v26 = (char *)&v65 + v25;
        int8x16_t v27 = (char *)&v65 + v25 + 8;
        int8x16_t v28 = (const __int16 *)a3;
        uint64_t v29 = a5 & 0xFC;
        do
        {
          int16x4x2_t v71 = vld2_s16(v28);
          v28 += 8;
          *(int16x4x2_t *)(v27 - 8) = v71;
          v27 += 8;
          v29 -= 4;
        }
        while (v29);
        uint64_t v30 = (2 * a5) & 0x1F8;
        uint64_t v31 = a5 - v17;
        do
        {
          int8x16_t v32 = (_WORD *)(a3 + 2 * v30);
          int8x16_t v33 = &v26[v30];
          *(_WORD *)int8x16_t v33 = *v32;
          *((_WORD *)v33 + 4) = v32[1];
          v30 += 2;
          --v31;
        }
        while (v31);
        ++v24;
        v23 += 2;
        a3 += a4;
      }
      while (v24 != v11);
    }
  }
  else
  {
    uint64_t v12 = 0;
    int64x2_t v13 = (_WORD *)(a3 + 6);
    do
    {
      *((_WORD *)&v65 + 8 * (v12 & 0x7F)) = *(v13 - 3);
      uint64_t v14 = (2 * v12) | 1u;
      *((_WORD *)&v65 + 4 * v14) = *(v13 - 2);
      if (a5 != 1)
      {
        int8x16_t v15 = &v65 + (v12 & 0x7F);
        *((_WORD *)v15 + 1) = *(v13 - 1);
        int8x16_t v16 = (char *)&v65 + 8 * v14;
        *((_WORD *)v16 + 1) = *v13;
        if (a5 != 2)
        {
          *((_WORD *)v15 + 2) = v13[1];
          *((_WORD *)v16 + 2) = v13[2];
        }
      }
      ++v12;
      int64x2_t v13 = (_WORD *)((char *)v13 + a4);
    }
    while (a6 != v12);
  }
  unsigned int v34 = 2 * (a5 & 0x7F);
  int v49 = v65;
  int v50 = BYTE1(v65);
  int v51 = BYTE8(v65);
  int v52 = BYTE9(v65);
  int v53 = BYTE2(v65);
  int v54 = BYTE3(v65);
  int v55 = BYTE10(v65);
  int v56 = BYTE11(v65);
  int v57 = v66;
  int v58 = BYTE1(v66);
  int v59 = BYTE8(v66);
  int v60 = BYTE9(v66);
  int v61 = BYTE2(v66);
  int v62 = BYTE3(v66);
  if (v34 >= 4) {
    unsigned int v35 = 4;
  }
  else {
    unsigned int v35 = 2 * (a5 & 0x7F);
  }
  if (v34 >= 4) {
    unsigned int v36 = v34 - 4;
  }
  else {
    unsigned int v36 = 0;
  }
  int v63 = BYTE10(v66);
  int v64 = BYTE11(v66);
  if (a6 >= 2) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = a6;
  }
  if (a6 >= 2) {
    unsigned int v38 = a6 - 2;
  }
  else {
    unsigned int v38 = 0;
  }
  char v39 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v49, a7, v35, v37);
  int v49 = BYTE4(v65);
  int v50 = BYTE5(v65);
  int v51 = BYTE12(v65);
  int v52 = BYTE13(v65);
  int v53 = BYTE6(v65);
  int v54 = BYTE7(v65);
  int v55 = BYTE14(v65);
  int v56 = HIBYTE(v65);
  int v57 = BYTE4(v66);
  int v58 = BYTE5(v66);
  int v59 = BYTE12(v66);
  int v60 = BYTE13(v66);
  int v61 = BYTE6(v66);
  int v62 = BYTE7(v66);
  int v63 = BYTE14(v66);
  int v64 = HIBYTE(v66);
  if (a6 >= 4) {
    unsigned int v40 = 2;
  }
  else {
    unsigned int v40 = v38;
  }
  int v41 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, (uint64_t)&v49, a7, v35, v40);
  int v49 = v67;
  int v50 = BYTE1(v67);
  int v51 = BYTE8(v67);
  int v52 = BYTE9(v67);
  int v53 = BYTE2(v67);
  int v54 = BYTE3(v67);
  int v55 = BYTE10(v67);
  int v56 = BYTE11(v67);
  int v57 = v68;
  int v58 = BYTE1(v68);
  int v59 = BYTE8(v68);
  int v60 = BYTE9(v68);
  int v61 = BYTE2(v68);
  int v62 = BYTE3(v68);
  if (a5 >= 4) {
    unsigned int v42 = 4;
  }
  else {
    unsigned int v42 = v36;
  }
  int v63 = BYTE10(v68);
  int v64 = BYTE11(v68);
  int v43 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v49, a7, v42, v37);
  int v49 = BYTE4(v67);
  int v50 = BYTE5(v67);
  int v51 = BYTE12(v67);
  int v52 = BYTE13(v67);
  int v53 = BYTE6(v67);
  int v54 = BYTE7(v67);
  int v55 = BYTE14(v67);
  int v56 = HIBYTE(v67);
  int v57 = BYTE4(v68);
  int v58 = BYTE5(v68);
  int v59 = BYTE12(v68);
  int v60 = BYTE13(v68);
  int v61 = BYTE6(v68);
  int v62 = BYTE7(v68);
  int v63 = BYTE14(v68);
  int v64 = HIBYTE(v68);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v49, a7, v42, v40);
  if (v43) {
    char v45 = 4;
  }
  else {
    char v45 = 0;
  }
  if (v41) {
    char v46 = 2;
  }
  else {
    char v46 = 0;
  }
  if (result) {
    char v47 = -8;
  }
  else {
    char v47 = -16;
  }
  *a2 = v47 | v45 | v39 | v46;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v279 = *MEMORY[0x263EF8340];
  BOOL v8 = a5 < 2;
  BOOL v9 = a4 < 4 || a5 < 2;
  BOOL v242 = v9;
  int v243 = a3;
  BOOL v10 = a4 < 4 || a5 == 0;
  BOOL v241 = v10;
  BOOL v11 = a4 < 3 || a5 < 2;
  BOOL v240 = v11;
  BOOL v12 = a4 < 3 || a5 == 0;
  BOOL v239 = v12;
  if (a4) {
    BOOL v13 = a5 < 2;
  }
  else {
    BOOL v13 = 1;
  }
  if (a4 < 2) {
    BOOL v8 = 1;
  }
  BOOL v237 = v8;
  BOOL v238 = v13;
  BOOL v14 = a4 < 2 || a5 == 0;
  BOOL v236 = v14;
  do
  {
    uint64_t v15 = 0;
    char v16 = v6;
    unsigned int v17 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[v7];
    *(&v277 + v7) = v17;
    switch(v17)
    {
      case 2u:
        uint64_t v15 = 5;
        break;
      case 0xAu:
        uint64_t v15 = 1;
        break;
      case 0xCu:
        uint64_t v15 = 2;
        break;
      case 0x10u:
        uint64_t v15 = 3;
        break;
      case 0x20u:
        uint64_t v15 = 4;
        break;
      default:
        break;
    }
    unint64_t v18 = 4 * v7;
    *(int *)((char *)&v254 + v18) = v15;
    unsigned int v19 = 1 << (v17 - 1);
    v253[v18 / 4 + 2] = v19;
    if (a3 == 1)
    {
      uint64_t v29 = (_DWORD *)(a2 + v18);
      int8x16_t v21 = (unsigned int *)((char *)&v257 + v18);
      if ((*(_DWORD *)(a2 + 4 * v7) ^ v19) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      }
      *int8x16_t v21 = v20;
      if ((v29[2] ^ v19) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v29[2] ^ v19;
      }
      v21[2] = v22;
      if ((v29[4] ^ v19) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v29[4] ^ v19;
      }
      v21[4] = v23;
      if ((v29[6] ^ v19) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v29[6] ^ v19;
      }
      v21[6] = v24;
      if ((v29[8] ^ v19) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v29[8] ^ v19;
      }
      v21[8] = v25;
      if ((v29[10] ^ v19) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v29[10] ^ v19;
      }
      v21[10] = v26;
      unsigned int v27 = v29[12] ^ v19;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v29[14] ^ v19;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      int8x16_t v21 = (unsigned int *)((char *)&v257 + v18);
      *int8x16_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8) ^ v19;
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16) ^ v19;
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24) ^ v19;
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32) ^ v19;
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40) ^ v19;
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48) ^ v19;
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56) ^ v19;
    }
    else
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7);
      int8x16_t v21 = (unsigned int *)((char *)&v257 + v18);
      *int8x16_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8);
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16);
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24);
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32);
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40);
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48);
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56);
    }
    v21[14] = v28;
    uint64_t v30 = &v275[v18 / 4 + 2];
    v275[v7 + 2] = v20;
    v276[v7] = v20;
    v275[v7] = 0;
    if (v236)
    {
      unsigned int v31 = v20;
      if (v238) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v31 = v20;
      if (v22 < v20)
      {
        v275[v7] = 1;
        v276[v7] = v22;
        unsigned int v31 = v22;
      }
      if (v20 >= v22) {
        int8x16_t v32 = &v275[v18 / 4 + 2];
      }
      else {
        int8x16_t v32 = (unsigned int *)(&v259 + v7);
      }
      unsigned int v20 = *v32;
      *uint64_t v30 = *v32;
      if (v238)
      {
LABEL_58:
        if (v237) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v31)
    {
      v275[v7] = 2;
      v276[v7] = v23;
      unsigned int v31 = v23;
    }
    if (v20 >= v23) {
      int8x16_t v33 = &v275[v18 / 4 + 2];
    }
    else {
      int8x16_t v33 = (unsigned int *)(&v261 + v7);
    }
    unsigned int v20 = *v33;
    *uint64_t v30 = *v33;
    if (v237)
    {
LABEL_59:
      if (v239) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v31)
    {
      v275[v7] = 3;
      v276[v7] = v24;
      unsigned int v31 = v24;
    }
    if (v20 >= v24) {
      unsigned int v34 = &v275[v18 / 4 + 2];
    }
    else {
      unsigned int v34 = (unsigned int *)(&v263 + v7);
    }
    unsigned int v20 = *v34;
    *uint64_t v30 = *v34;
    if (v239)
    {
LABEL_60:
      if (v241) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v31)
    {
      v275[v7] = 4;
      v276[v7] = v25;
      unsigned int v31 = v25;
    }
    if (v20 >= v25) {
      unsigned int v35 = &v275[v18 / 4 + 2];
    }
    else {
      unsigned int v35 = (unsigned int *)(&v265 + v7);
    }
    unsigned int v20 = *v35;
    *uint64_t v30 = *v35;
    if (v241)
    {
LABEL_61:
      if (v240) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v31)
    {
      v275[v7] = 5;
      v276[v7] = v26;
      unsigned int v31 = v26;
    }
    if (v20 >= v26) {
      unsigned int v36 = &v275[v18 / 4 + 2];
    }
    else {
      unsigned int v36 = (unsigned int *)(&v267 + v7);
    }
    unsigned int v20 = *v36;
    *uint64_t v30 = *v36;
    if (v240)
    {
LABEL_62:
      if (v242) {
        goto LABEL_105;
      }
LABEL_100:
      if (v28 < v31)
      {
        v275[v7] = 7;
        v276[v7] = v28;
        unsigned int v31 = v28;
      }
      unsigned int v38 = (unsigned int *)(&v271 + v7);
      if (v20 >= v28) {
        unsigned int v38 = v30;
      }
      unsigned int v20 = *v38;
      *uint64_t v30 = *v38;
      goto LABEL_105;
    }
LABEL_94:
    if (v27 < v31)
    {
      v275[v7] = 6;
      v276[v7] = v27;
      unsigned int v31 = v27;
    }
    if (v20 >= v27) {
      unsigned int v37 = &v275[v18 / 4 + 2];
    }
    else {
      unsigned int v37 = (unsigned int *)(&v269 + v7);
    }
    unsigned int v20 = *v37;
    *uint64_t v30 = *v37;
    if (!v242) {
      goto LABEL_100;
    }
LABEL_105:
    unsigned int v39 = __clz(v20 - v31);
    unsigned int v40 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::computeDquadMode(v17, 32 - v39, v31, v20);
    *(&v273 + v7) = v40;
    a3 = v243;
    if ((v243 | 2) != 3)
    {
      BOOL v41 = 0;
      uint64_t v42 = v15;
LABEL_110:
      unsigned int v43 = a5;
      goto LABEL_111;
    }
    BOOL v41 = 0;
    uint64_t v42 = v15;
    if (v20 < v19) {
      goto LABEL_110;
    }
    unsigned int v43 = a5;
    if (v31 < v19) {
      BOOL v41 = kDQuadParamTable[160 * v42 + 8 + 10 * v40] == 0;
    }
LABEL_111:
    if (v40 >= kDquadTransition[v42] || v41)
    {
      unsigned int v44 = kDQuadParamTable[160 * v42 + 4 + 10 * v40] - v41;
      if (v41) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v17 >= v44;
      unsigned int v46 = v17 - v44;
      BOOL v71 = v46 != 0 && v50;
      int v47 = v31 & ~(-1 << v46);
      if (!v71) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      BOOL v71 = v48 < 1;
      unsigned int v49 = __clz(v48 + v20 - v31);
      BOOL v50 = v71 || v49 >= v39;
      if (v50)
      {
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v273 + v7) = ++v40;
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      unsigned int v51 = kDquadMaxMode[v42];
      if (v51 >= v40) {
        unsigned int v51 = v40;
      }
      *(&v273 + v7) = v51;
    }
LABEL_22:
    char v6 = 1;
    uint64_t v7 = 1u;
  }
  while ((v16 & 1) == 0);
  int v53 = v254;
  int v52 = v255;
  unsigned int v54 = v273;
  unsigned int v55 = v274;
  BOOL v57 = v274 >= v273;
  BOOL v58 = v274 < v273;
  int v59 = kDQuadParamTable[160 * v255 + 6 + 10 * v274];
  int v251 = kDQuadParamTable[160 * v254 + 6 + 10 * v273];
  int v56 = v251;
  int v252 = v59;
  v253[0] = v251;
  v253[1] = v59;
  if (*(&v273 + v57) == *(&v273 + v58))
  {
    int v60 = v251;
  }
  else
  {
    int v61 = *(_DWORD *)((unint64_t)v253 | (4 * v58));
    int v60 = v251;
    if (v61 >= 1)
    {
      *(_DWORD *)((unint64_t)&v251 | (4 * v58)) = 0;
      *(_DWORD *)((unint64_t)&v251 | (4 * v57)) += v61;
      int v60 = v251;
    }
  }
  int v62 = &kDQuadParamTable[160 * v53 + 10 * v54];
  unint64_t v63 = *((void *)v62 + 1);
  unsigned int v65 = v62[4];
  unsigned int v64 = v62[5];
  if (a4) {
    BOOL v66 = v43 == 0;
  }
  else {
    BOOL v66 = 1;
  }
  int v67 = v66;
  int v235 = v67;
  unsigned int v249 = v65;
  unsigned int v247 = v64;
  int v68 = v60 - v56;
  if (v68 < 0)
  {
    if (kDQuadParamTable[160 * v53 + 7 + 10 * v54] < -v68)
    {
      unsigned int v247 = --v64;
      if (!kDQuadParamTable[160 * v53 + 8 + 10 * v54])
      {
        int v69 = -1;
LABEL_142:
        unsigned int v249 = v69 + v65;
      }
    }
  }
  else if (v68)
  {
    v64 += v68;
    unsigned int v247 = v64;
    int v69 = v68;
    goto LABEL_142;
  }
  BOOL v71 = v53 == 5 && v54 == 1 && v68 < 2;
  int v72 = v71;
  if (v243 == 4)
  {
    if (v53 == 3) {
      int v73 = 31744;
    }
    else {
      int v73 = 0;
    }
    if (v53 == 4) {
      int v74 = 2139095040;
    }
    else {
      int v74 = v73;
    }
    int v75 = 1 << (v277 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_163;
      }
LABEL_310:
      if ((v74 & ~v259) == 0 || v259 == v75) {
        int v72 = 1;
      }
      if (!v238) {
        goto LABEL_317;
      }
LABEL_164:
      if (v237) {
        goto LABEL_165;
      }
LABEL_324:
      if ((v74 & ~v263) == 0 || v263 == v75) {
        int v72 = 1;
      }
      if (!v239) {
        goto LABEL_331;
      }
LABEL_166:
      if (v241) {
        goto LABEL_167;
      }
LABEL_338:
      if ((v74 & ~v267) == 0 || v267 == v75) {
        int v72 = 1;
      }
      if (!v240) {
        goto LABEL_345;
      }
LABEL_168:
      if (!v242) {
        goto LABEL_169;
      }
    }
    else
    {
      if ((v74 & ~v257) == 0 || v257 == v75) {
        int v72 = 1;
      }
      if (!v236) {
        goto LABEL_310;
      }
LABEL_163:
      if (v238) {
        goto LABEL_164;
      }
LABEL_317:
      if ((v74 & ~v261) == 0 || v261 == v75) {
        int v72 = 1;
      }
      if (!v237) {
        goto LABEL_324;
      }
LABEL_165:
      if (v239) {
        goto LABEL_166;
      }
LABEL_331:
      if ((v74 & ~v265) == 0 || v265 == v75) {
        int v72 = 1;
      }
      if (!v241) {
        goto LABEL_338;
      }
LABEL_167:
      if (v240) {
        goto LABEL_168;
      }
LABEL_345:
      if ((v74 & ~v269) == 0 || v269 == v75) {
        int v72 = 1;
      }
      if (!v242)
      {
LABEL_169:
        if ((v74 & ~v271) == 0 || v271 == v75) {
          int v72 = 1;
        }
      }
    }
  }
  BOOL v71 = v63 >> v64 > 0x10;
  int v77 = v67;
  if (v71) {
    int v77 = 1;
  }
  int v78 = v77 | v72;
  int8x16_t v79 = &kDQuadParamTable[160 * v52 + 10 * v55];
  unint64_t v80 = *((void *)v79 + 1);
  unsigned int v81 = v79[4];
  unsigned int v82 = v79[5];
  unsigned int v250 = v81;
  unsigned int v248 = v82;
  int v83 = v252 - v59;
  if (v252 - v59 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v55] < v59 - v252)
    {
      unsigned int v248 = --v82;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v55])
      {
        int v84 = -1;
LABEL_181:
        unsigned int v250 = v84 + v81;
      }
    }
  }
  else if (v252 != v59)
  {
    v82 += v83;
    unsigned int v248 = v82;
    int v84 = v252 - v59;
    goto LABEL_181;
  }
  if (v52 == 5 && v55 == 1 && v83 < 2) {
    int v78 = 1;
  }
  if (v243 == 4)
  {
    if (v52 == 3) {
      int v85 = 31744;
    }
    else {
      int v85 = 0;
    }
    if (v52 == 4) {
      int v85 = 2139095040;
    }
    int v86 = 1 << (v278 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_196;
      }
LABEL_360:
      if ((v85 & ~v260) == 0 || v260 == v86) {
        int v78 = 1;
      }
      if (!v238) {
        goto LABEL_367;
      }
LABEL_197:
      if (v237) {
        goto LABEL_198;
      }
LABEL_374:
      if ((v85 & ~v264) == 0 || v264 == v86) {
        int v78 = 1;
      }
      if (!v239) {
        goto LABEL_381;
      }
LABEL_199:
      if (v241) {
        goto LABEL_200;
      }
LABEL_388:
      if ((v85 & ~v268) == 0 || v268 == v86) {
        int v78 = 1;
      }
      if (!v240) {
        goto LABEL_395;
      }
LABEL_201:
      if (!v242) {
        goto LABEL_202;
      }
    }
    else
    {
      if ((v85 & ~v258) == 0 || v258 == v86) {
        int v78 = 1;
      }
      if (!v236) {
        goto LABEL_360;
      }
LABEL_196:
      if (v238) {
        goto LABEL_197;
      }
LABEL_367:
      if ((v85 & ~v262) == 0 || v262 == v86) {
        int v78 = 1;
      }
      if (!v237) {
        goto LABEL_374;
      }
LABEL_198:
      if (v239) {
        goto LABEL_199;
      }
LABEL_381:
      if ((v85 & ~v266) == 0 || v266 == v86) {
        int v78 = 1;
      }
      if (!v241) {
        goto LABEL_388;
      }
LABEL_200:
      if (v240) {
        goto LABEL_201;
      }
LABEL_395:
      if ((v85 & ~v270) == 0 || v270 == v86) {
        int v78 = 1;
      }
      if (!v242)
      {
LABEL_202:
        if ((v85 & ~v272) == 0 || v272 == v86) {
          int v78 = 1;
        }
      }
    }
  }
  char v88 = 0;
  uint64_t v89 = 0;
  int v90 = v67;
  if (v80 >> v82 > 0x10) {
    int v90 = 1;
  }
  int v230 = v90;
  int v231 = v78;
  uint64_t v246 = 0;
  uint64_t v245 = 0;
  memset(v244, 0, sizeof(v244));
  do
  {
    uint64_t v91 = 0;
    unsigned int v92 = 0;
    unsigned int v93 = *(&v277 + v89);
    unsigned int v94 = *(&v249 + v89);
    if (v93 < v94) {
      unsigned int v94 = *(&v277 + v89);
    }
    *(&v249 + v89) = v94;
    int8x16_t v95 = &kDQuadParamTable[160 * *(&v254 + v89) + 10 * *(&v273 + v89)];
    if (v95[5]) {
      unsigned int v96 = v93;
    }
    else {
      unsigned int v96 = 0;
    }
    if (v96 >= *(&v247 + v89)) {
      int v97 = *(&v247 + v89);
    }
    else {
      int v97 = v96;
    }
    int v98 = v276[v89] & (-1 << (v93 - v94));
    int8x16_t v99 = &v257 + v89;
    int v100 = *v99 - v98;
    uint64_t v101 = 32 * v89;
    int8x16_t v102 = &v256[32 * v89];
    if (v235) {
      int v100 = 0;
    }
    int v103 = v99[2] - v98;
    if (v236) {
      int v103 = 0;
    }
    *int8x16_t v102 = v100;
    v102[1] = v103;
    int v104 = v99[4] - v98;
    if (v238) {
      int v104 = 0;
    }
    int v105 = v99[6] - v98;
    if (v237) {
      int v105 = 0;
    }
    v102[2] = v104;
    v102[3] = v105;
    int v106 = v99[8] - v98;
    if (v239) {
      int v106 = 0;
    }
    int v107 = v99[10] - v98;
    if (v241) {
      int v107 = 0;
    }
    v102[4] = v106;
    v102[5] = v107;
    int v108 = v99[12] - v98;
    if (v240) {
      int v108 = 0;
    }
    int v109 = v99[14] - v98;
    if (v242) {
      int v109 = 0;
    }
    v102[6] = v108;
    v102[7] = v109;
    char v110 = v88;
    uint64_t v111 = -1 << v93;
    *(&v247 + v89) = v97;
    unint64_t v112 = *((void *)v95 + 1);
    *((_DWORD *)&v246 + v89) = v98;
    unint64_t v113 = v112 >> v97;
    int v114 = ~v111;
    if (v113 <= 1) {
      unint64_t v115 = 1;
    }
    else {
      unint64_t v115 = v113;
    }
    uint64_t v116 = 2 * v275[v89];
    do
    {
      if (v116 != v91)
      {
        if (v97) {
          unint64_t v117 = *(unsigned int *)&v256[v101] / v115;
        }
        else {
          LODWORD(v117) = 0;
        }
        int8x16_t v118 = (int *)v244 + 7 * v89 + v92;
        *int8x16_t v118 = v117;
        if (v113 >= 2)
        {
          unint64_t v119 = *(unsigned int *)&v256[v101];
          if (v119)
          {
            if (v119 / v115 * v115 == v119 && ((v119 / v115) & 1) != 0)
            {
              if (v98 || v117 != 1)
              {
                if ((v243 | 2) != 3
                  || (uint64_t v121 = v99[v91], v122 = v253[v89 + 2], v121 != v122)
                  && ((v243 | 2) != 3 || v115 + v122 != v121))
                {
                  LODWORD(v117) = v117 - 1;
                  *int8x16_t v118 = v117;
                }
              }
              else
              {
                LODWORD(v117) = 1;
              }
            }
          }
        }
        if ((unint64_t)v117 >> v97 || v99[v91] == v114) {
          *int8x16_t v118 = ~(-1 << v97);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91 + 1) >= v43
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91) >= a4)
        {
          *int8x16_t v118 = 0;
        }
        ++v92;
      }
      v101 += 4;
      v91 += 2;
    }
    while (v91 != 16);
    char v88 = 1;
    uint64_t v89 = 1;
  }
  while ((v110 & 1) == 0);
  uint64_t result = v230 | v231;
  int8x16_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if (result == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v277;
    unsigned int v130 = v278;
    uint64_t v131 = v277 - 4;
    uint64_t v132 = v278 - 4;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= v43 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v257 + 2 * v127) >> 4;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      if (v129 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x40)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 4;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_289:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_293;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v257 + 2 * v127 + 1) >> 4;
        if (v132 <= 0x100)
        {
LABEL_293:
          if (v130 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x40)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 4;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return result;
      }
    }
  }
  unsigned int v147 = v273;
  char v148 = LOBYTE(v276[0]) | v273;
  if (v276[0] | v273)
  {
    char v148 = v273 - 2;
    if (v273 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v273 + 1;
      goto LABEL_404;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_404:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v274;
  if (v276[1] | v274)
  {
    char v169 = v274 - 2;
    if (v274 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v274 + 1;
      goto LABEL_410;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_410:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 62) >= 0xFFFFFFFFFFFFFFBFLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_427;
    }
LABEL_420:
    unsigned int v177 = v277;
    if (!v147) {
      goto LABEL_435;
    }
    goto LABEL_439;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x40) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_420;
  }
LABEL_427:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x40) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v277;
  if (!v147)
  {
LABEL_435:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v278;
      if (!v168) {
        goto LABEL_500;
      }
LABEL_447:
      unsigned int v192 = v250;
      if (v250 <= 0x100 && v250 && v167 - v126 + (v175 << 6) + (unint64_t)v250 <= 0x40)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v246) >> (v185 - v250));
        unint64_t v195 = v250;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_455;
    }
  }
LABEL_439:
  unsigned int v186 = v249;
  if (v249 <= 0x100 && v249 && v167 - v126 + (v175 << 6) + (unint64_t)v249 <= 0x40)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v246 >> (v177 - v249);
    unint64_t v189 = v249;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v278;
  if (v168) {
    goto LABEL_447;
  }
LABEL_500:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_447;
  }
LABEL_455:
  unint64_t v198 = v247;
  if (v247)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v275[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v248;
  if (v248)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v275[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 64 - v176;
  unsigned int v211 = (64 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x40)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x40)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v244 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x40)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v244[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_493:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x40)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_493;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return result;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int64x2_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7 + 14;
  uint64_t v10 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x33) {
    v10 |= *(void *)(v8 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v11 = 4 * v10;
  uint32x2_t v12 = (uint32x2_t)vdup_n_s32(v11);
  a5.i32[0] = v11;
  a7.i32[0] = a4 >> 6;
  v13.i32[0] = vorr_s8(a5, a7).u32[0];
  v13.i32[1] = vshr_n_u32(v12, 5uLL).i32[1];
  int16x4_t v14 = (int16x4_t)vand_s8(v13, (int8x8_t)0x1F0000001FLL);
  v14.i8[1] = v14.i8[4];
  int16x4_t v15 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v12, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v15.i8[1] = v15.i8[4];
  unint64_t v16 = v7 + 30;
  unint64_t v17 = v9 >> 6;
  unint64_t v18 = v9 & 0x3E;
  uint64_t v19 = *(void *)(v8 + 8 * v17) >> v18;
  if (v18 >= 0x31) {
    v19 |= *(void *)(v8 + 8 * v17 + 8) << -(char)v18;
  }
  unint64_t v20 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(v14, 0);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(v15, 0);
  v23.i64[0] = 0x303030303030303;
  v23.i64[1] = 0x303030303030303;
  int8x16_t v24 = vandq_s8(v21, v23);
  int8x16_t v25 = vbicq_s8(v22, vceqq_s8(v24, v23));
  v23.i64[0] = 0x202020202020202;
  v23.i64[1] = 0x202020202020202;
  int8x16_t v26 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v21.i8), (int8x8_t)0x4000400040004)))), v23);
  if (vmaxvq_s8(v26) < 1)
  {
    int v36 = 0;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    int8x16_t v38 = v25;
    int8x16_t v39 = v25;
    int8x16_t v40 = v25;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = v25;
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v44.i64[0] = -1;
    v44.i64[1] = -1;
  }
  else
  {
    int16x8_t v27 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v26, v26));
    int32x4_t v28 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v27, v27));
    unint64_t v29 = vpaddq_s32(v28, v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    int64x2_t v31 = v30;
    unint64_t v32 = vaddvq_s64(v30);
    unint64_t v33 = v32 + v16;
    if (v32 <= 0x80 && v20 >= v33)
    {
      unint64_t v45 = v16 & 0x3E;
      int64x2_t v46 = vaddq_s64(vzip1q_s64((int64x2_t)0, v31), vdupq_n_s64(v45));
      int v47 = (int64x2_t *)(v8 + ((v16 >> 3) & 8));
      int32x4_t v35 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v47, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47->i64[0], 0), (uint64x2_t)vnegq_s64(v46)));
      if (v32 + v45 < 0x81)
      {
        int v36 = 0;
      }
      else
      {
        int v36 = 0;
        int32x4_t v35 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v47[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v46))), (int8x16_t)v35);
      }
      unint64_t v16 = v33;
    }
    else
    {
      int32x4_t v35 = 0uLL;
      int v36 = 1;
    }
    int32x2_t v48 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
    v49.i64[0] = v48.u32[0];
    v49.i64[1] = v48.u32[1];
    int32x4_t v50 = (int32x4_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vnegq_s64(v49));
    *(int32x2_t *)v35.i8 = vmovn_s64((int64x2_t)v35);
    *(int32x2_t *)v50.i8 = vmovn_s64((int64x2_t)v50);
    int16x8_t v51 = (int16x8_t)vzip1q_s32(v35, v50);
    int16x8_t v52 = (int16x8_t)vshlq_u32((uint32x4_t)v51, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL)))));
    *(int16x4_t *)v51.i8 = vmovn_s32((int32x4_t)v51);
    *(int16x4_t *)v52.i8 = vmovn_s32((int32x4_t)v52);
    int16x8_t v53 = vzip1q_s16(v51, v52);
    *(int8x8_t *)v53.i8 = vzip1_s8(vmovn_s16(v53), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v53, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v26.i8, *(int8x8_t *)v21.i8))))));
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    int8x16_t v54 = vshlq_s8((int8x16_t)v51, v26);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54.i64[0] = vqtbl1q_s8(vandq_s8((int8x16_t)v53, vaddq_s8(v54, (int8x16_t)v51)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v55 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 1);
    int8x16_t v57 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 2);
    int8x16_t v58 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 3);
    int8x16_t v42 = vsubq_s8(v25, v55);
    int8x16_t v38 = vsubq_s8(v25, v56);
    int8x16_t v39 = vsubq_s8(v25, v57);
    int8x16_t v40 = vsubq_s8(v25, v58);
    int8x16_t v44 = vceqzq_s8(v55);
    int8x16_t v43 = vceqzq_s8(v56);
    int8x16_t v41 = vceqzq_s8(v57);
    int8x16_t v37 = vceqzq_s8(v58);
  }
  v59.i64[0] = 0x808080808080808;
  v59.i64[1] = 0x808080808080808;
  int32x4_t v60 = 0uLL;
  int8x16_t v61 = vandq_s8(vextq_s8(vtstq_s8(v21, v59), (int8x16_t)0, 0xEuLL), v25);
  int16x8_t v62 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v61, v61));
  int32x4_t v63 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v62, v62));
  unint64_t v64 = vpaddq_s32(v63, v63).u64[0];
  v65.i64[0] = v64;
  v65.i64[1] = HIDWORD(v64);
  int64x2_t v66 = v65;
  unint64_t v67 = vaddvq_s64(v65);
  unint64_t v68 = v67 + v16;
  if (v67 <= 0x80 && v20 >= v68)
  {
    unint64_t v70 = v16 & 0x3F;
    int64x2_t v71 = vaddq_s64(vzip1q_s64((int64x2_t)0, v66), vdupq_n_s64(v70));
    int v72 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v60 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v72, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72->i64[0], 0), (uint64x2_t)vnegq_s64(v71)));
    if (v67 + v70 >= 0x81) {
      int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), (int8x16_t)v60);
    }
    unint64_t v16 = v68;
  }
  else
  {
    int v36 = 1;
  }
  int v73 = v21.i8[0] & 3;
  if (v73 == 2)
  {
    BOOL v74 = v20 >= v16 + 4;
    if (v20 >= v16 + 4) {
      v16 += 4;
    }
    unint64_t v75 = v16 + 4;
    if (!v74 || v20 < v75) {
      int v36 = 1;
    }
    if (v20 >= v75) {
      v16 += 4;
    }
  }
  int32x4_t v77 = 0uLL;
  int8x16_t v78 = vextq_s8((int8x16_t)0, v42, 0xEuLL);
  int16x8_t v79 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v78, v78));
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v79, v79));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v84 + v16;
  if (v84 <= 0x80 && v20 >= v85)
  {
    unint64_t v88 = v16 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v88));
    int v90 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v87 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v84 + v88 >= 0x81) {
      int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v87);
    }
    unint64_t v16 = v85;
  }
  else
  {
    int v36 = 1;
    int32x4_t v87 = 0uLL;
  }
  int16x8_t v91 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v38, v38));
  int32x4_t v92 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v91, v91));
  unint64_t v93 = vpaddq_s32(v92, v92).u64[0];
  v94.i64[0] = v93;
  v94.i64[1] = HIDWORD(v93);
  int64x2_t v95 = v94;
  unint64_t v96 = vaddvq_s64(v94);
  if (v96 < 0x81)
  {
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v92.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v92, (int8x16_t)v92, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = v98;
    int32x4_t v100 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v91.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL)));
    int16x8_t v101 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)));
    unint64_t v102 = v96 + v16;
    if (v20 >= v96 + v16)
    {
      unint64_t v103 = v16 & 0x3F;
      int64x2_t v104 = vaddq_s64(vzip1q_s64((int64x2_t)0, v95), vdupq_n_s64(v103));
      int v105 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
      if (v96 + v103 >= 0x81) {
        int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), (int8x16_t)v77);
      }
      unint64_t v16 = v102;
    }
    else
    {
      int v36 = 1;
    }
    int32x4_t v106 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v99));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v106.i8 = vmovn_s64((int64x2_t)v106);
    int16x8_t v107 = (int16x8_t)vzip1q_s32(v77, v106);
    int16x8_t v108 = (int16x8_t)vshlq_u32((uint32x4_t)v107, (uint32x4_t)vnegq_s32(v100));
    *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v107);
    *(int16x4_t *)v108.i8 = vmovn_s32((int32x4_t)v108);
    int16x8_t v109 = vzip1q_s16(v107, v108);
    int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)v109, (uint16x8_t)vnegq_s16(v101));
    *(int8x8_t *)v109.i8 = vmovn_s16(v109);
    *(int8x8_t *)v110.i8 = vmovn_s16(v110);
    int32x4_t v77 = (int32x4_t)vzip1q_s8((int8x16_t)v109, (int8x16_t)v110);
  }
  else
  {
    int v36 = 1;
  }
  int16x8_t v111 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v39, v39));
  int32x4_t v112 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v111, v111));
  unint64_t v113 = vpaddq_s32(v112, v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v116 <= 0x80)
  {
    int32x2_t v118 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v112, (int8x16_t)v112, 8uLL));
    v119.i64[0] = v118.u32[0];
    v119.i64[1] = v118.u32[1];
    int64x2_t v120 = v119;
    int32x4_t v121 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL)));
    int16x8_t v122 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)));
    unint64_t v123 = v116 + v16;
    if (v20 >= v116 + v16)
    {
      unint64_t v125 = v16 & 0x3F;
      int64x2_t v126 = vaddq_s64(vzip1q_s64((int64x2_t)0, v115), vdupq_n_s64(v125));
      uint64_t v127 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v124 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
      if (v116 + v125 >= 0x81) {
        int32x4_t v124 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), (int8x16_t)v124);
      }
      unint64_t v16 = v123;
    }
    else
    {
      int32x4_t v124 = 0uLL;
      int v36 = 1;
    }
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vnegq_s64(v120));
    *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    int16x8_t v129 = (int16x8_t)vzip1q_s32(v124, v128);
    int16x8_t v130 = (int16x8_t)vshlq_u32((uint32x4_t)v129, (uint32x4_t)vnegq_s32(v121));
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    int16x8_t v131 = vzip1q_s16(v129, v130);
    int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)v131, (uint16x8_t)vnegq_s16(v122));
    *(int8x8_t *)v131.i8 = vmovn_s16(v131);
    *(int8x8_t *)v132.i8 = vmovn_s16(v132);
    int8x16_t v117 = vzip1q_s8((int8x16_t)v131, (int8x16_t)v132);
  }
  else
  {
    int v36 = 1;
    int8x16_t v117 = 0uLL;
  }
  int16x8_t v133 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v40, v40));
  int32x4_t v134 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v133, v133));
  unint64_t v135 = vpaddq_s32(v134, v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  if (v138 > 0x80 || v20 < v138 + v16) {
    goto LABEL_65;
  }
  int64x2_t v139 = vaddq_s64(vzip1q_s64((int64x2_t)0, v137), vdupq_n_s64(v16 & 0x3F));
  unint64_t v140 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
  int64x2_t v141 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
  if (v138 + (v16 & 0x3F) >= 0x81) {
    int64x2_t v141 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), (int8x16_t)v141);
  }
  if (v36 || (uint64_t v142 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v142) - (v138 + v16) >= 9))
  {
LABEL_65:
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v206;
LABEL_66:
    *(void *)(v143 & 0xFFFFFFFFFFFFFFF8) |= 255 << ((8 * v143) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 2 * a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 3 * a2) = 0;
    return v142;
  }
  if (v73 == 2)
  {
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v207;
    goto LABEL_66;
  }
  int32x2_t v145 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL));
  int32x2_t v146 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
  v147.i64[0] = v145.u32[0];
  v147.i64[1] = v145.u32[1];
  int64x2_t v148 = v147;
  v147.i64[0] = v146.u32[0];
  v147.i64[1] = v146.u32[1];
  int16x4_t v149 = (int16x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL).u64[0];
  int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v60, (uint64x2_t)vnegq_s64(v148));
  int32x4_t v151 = (int32x4_t)vshlq_u64((uint64x2_t)v87, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v60.i8 = vmovn_s64((int64x2_t)v60);
  *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
  *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
  *(int32x2_t *)v151.i8 = vmovn_s64((int64x2_t)v151);
  int16x8_t v152 = (int16x8_t)vzip1q_s32(v60, v150);
  int16x8_t v153 = (int16x8_t)vzip1q_s32(v87, v151);
  int16x8_t v154 = (int16x8_t)vshlq_u32((uint32x4_t)v152, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL)))));
  int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v153, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, v149))));
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
  *(int16x4_t *)v153.i8 = vmovn_s32((int32x4_t)v153);
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  int16x8_t v156 = vzip1q_s16(v152, v154);
  int16x8_t v157 = vzip1q_s16(v153, v155);
  int16x8_t v158 = (int16x8_t)vshlq_u16((uint16x8_t)v156, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
  int16x8_t v159 = (int16x8_t)vshlq_u16((uint16x8_t)v157, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int8x8_t *)v156.i8 = vmovn_s16(v156);
  *(int8x8_t *)v158.i8 = vmovn_s16(v158);
  *(int8x8_t *)v157.i8 = vmovn_s16(v157);
  *(int8x8_t *)v159.i8 = vmovn_s16(v159);
  v149.i32[0] = v19;
  v160.i64[0] = 0x808080808080808;
  v160.i64[1] = 0x808080808080808;
  int8x16_t v161 = vzip1q_s8((int8x16_t)v156, (int8x16_t)v158);
  v158.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v158.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v162 = vsubq_s8(v59, v61);
  int8x16_t v163 = vzip1q_s8((int8x16_t)v157, (int8x16_t)v159);
  v159.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v159.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v153.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v134, (int8x16_t)v134, 8uLL));
  v164.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v164.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v165.i64[0] = 0x808080808080808;
  v165.i64[1] = 0x808080808080808;
  v149.i8[1] = BYTE1(v19);
  int8x16_t v166 = vaddq_s8(v61, (int8x16_t)v158);
  int32x4_t v167 = (int32x4_t)vshlq_s8(v163, vsubq_s8(v160, v78));
  int8x16_t v168 = vshlq_s8(v117, vsubq_s8(v160, v39));
  v147.i64[0] = v153.u32[0];
  v147.i64[1] = v153.u32[1];
  int16x8_t v169 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v40.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
  int8x16_t v170 = vaddq_s8(v40, v164);
  int8x16_t v171 = vsubq_s8(v165, v40);
  int8x16_t v172 = (int8x16_t)vdupq_lane_s16(v149, 0);
  int8x16_t v173 = vshlq_s8(vshlq_s8(v161, v162), v166);
  int8x16_t v174 = vshlq_s8((int8x16_t)v167, vaddq_s8(v78, (int8x16_t)v159));
  int32x4_t v175 = (int32x4_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v167.i8 = vmovn_s64(v141);
  *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
  int16x8_t v176 = (int16x8_t)vzip1q_s32(v167, v175);
  int16x8_t v177 = (int16x8_t)vshlq_u32((uint32x4_t)v176, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v133, (int8x16_t)v133, 8uLL)))));
  *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
  *(int16x4_t *)v177.i8 = vmovn_s32((int32x4_t)v177);
  int16x8_t v178 = vzip1q_s16(v176, v177);
  int16x8_t v179 = (int16x8_t)vshlq_u16((uint16x8_t)v178, (uint16x8_t)vnegq_s16(v169));
  *(int8x8_t *)v178.i8 = vmovn_s16(v178);
  *(int8x8_t *)v179.i8 = vmovn_s16(v179);
  int8x16_t v180 = vaddq_s8(vandq_s8(v173, v44), v174);
  int8x16_t v181 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v173.i8, 0);
  int8x16_t v182 = vsubq_s8(v180, vandq_s8(v44, v181));
  int8x16_t v183 = vsubq_s8(vshlq_s8(vshlq_s8((int8x16_t)v77, vsubq_s8(v160, v38)), vaddq_s8(v38, (int8x16_t)v159)), vandq_s8(v43, v181));
  int8x16_t v184 = vsubq_s8(vshlq_s8(v168, vaddq_s8(v39, (int8x16_t)v159)), vandq_s8(v41, v181));
  int8x16_t v185 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v178, (int8x16_t)v179), v171), v170), vandq_s8(v37, v181));
  v186.i64[0] = 0x101010101010101;
  v186.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v24, v186)))
  {
    int8x16_t v187 = vandq_s8(v21, v186);
    int8x16_t v188 = v182;
    v188.i16[0] = v182.i16[7];
    v188.i16[7] = v182.i16[0];
    int8x16_t v189 = vnegq_s8(v187);
    int8x16_t v190 = vbslq_s8(v189, v188, v182);
    int8x16_t v191 = vaddq_s8(v190, vandq_s8(vqtbl1q_s8(v190, (int8x16_t)xmmword_242EA7480), v189));
    int8x16_t v182 = vaddq_s8(v191, vandq_s8(vqtbl1q_s8(v191, (int8x16_t)xmmword_242EA7490), v189));
    int8x16_t v192 = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA74A0), v189), v183);
    int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v192, (int8x16_t)xmmword_242EA74B0), v189), v192);
    int8x16_t v193 = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA74C0), v189), v184);
    int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v193, (int8x16_t)xmmword_242EA74D0), v189), v193);
    int8x16_t v194 = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA74E0), v189), v185);
    int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v194, (int8x16_t)xmmword_242EA74F0), v189), v194);
  }
  int8x16_t v195 = vaddq_s8(v182, v172);
  int8x16_t v196 = vaddq_s8(v183, v172);
  int8x16_t v197 = vaddq_s8(v184, v172);
  int8x16_t v198 = vaddq_s8(v185, v172);
  v199.i64[0] = 0x1010101010101010;
  v199.i64[1] = 0x1010101010101010;
  int8x16_t v200 = vceqzq_s8(vandq_s8(v21, v199));
  int64x2_t v201 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v195, (int8x16_t)xmmword_242EA7500), v200), v195);
  int64x2_t v202 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v196, (int8x16_t)xmmword_242EA7500), v200), v196);
  int64x2_t v203 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v197, (int8x16_t)xmmword_242EA7500), v200), v197);
  int64x2_t v204 = (int64x2_t)vaddq_s8(vbicq_s8(vqtbl1q_s8(v198, (int8x16_t)xmmword_242EA7500), v200), v198);
  *a1 = vzip1q_s64(v201, v202);
  *(int64x2_t *)((char *)a1 + a2) = vzip2q_s64(v201, v202);
  uint64_t v205 = (int64x2_t *)((char *)a1 + 2 * a2);
  *uint64_t v205 = vzip1q_s64(v203, v204);
  *(int64x2_t *)((char *)v205 + a2) = vzip2q_s64(v203, v204);
  return v142;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(__int16 *a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  uint64_t v60 = *MEMORY[0x263EF8340];
  if (a4) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v52, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v52, a5);
  }
  uint64_t v51 = v52;
  uint64_t v50 = v53;
  uint64_t v48 = v54;
  uint64_t v49 = v55;
  uint64_t v44 = v56;
  uint64_t v43 = v57;
  uint64_t v10 = a3 + 8;
  uint64_t v36 = v58;
  uint64_t v40 = v59;
  if ((a4 & 2) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v10, (uint64_t)&v52, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v10, (uint64_t)&v52, a5);
  }
  uint64_t v42 = v52;
  uint64_t v39 = v53;
  uint64_t v33 = v54;
  uint64_t v35 = v55;
  uint64_t v31 = v56;
  uint64_t v30 = v57;
  uint64_t v11 = a3 + 16;
  uint64_t v28 = v58;
  uint64_t v29 = v59;
  if ((a4 & 4) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v11, (uint64_t)&v52, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v11, (uint64_t)&v52, a5);
  }
  uint64_t v38 = v52;
  uint64_t v37 = v53;
  uint64_t v32 = v54;
  uint64_t v34 = v55;
  uint64_t v47 = v56;
  uint64_t v46 = v57;
  uint64_t v12 = a3 + 24;
  uint64_t v41 = v58;
  uint64_t v45 = v59;
  if ((a4 & 8) != 0) {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v12, (uint64_t)&v52, a5);
  }
  else {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v12, (uint64_t)&v52, a5);
  }
  v15.i64[0] = v30;
  v14.i64[0] = v31;
  v14.i64[1] = v28;
  v16.i64[0] = v44;
  v16.i64[1] = v36;
  v15.i64[1] = v29;
  v18.i64[0] = v42;
  v17.i64[0] = v43;
  v19.i64[0] = v39;
  v17.i64[1] = v40;
  int8x8_t v20 = vmovn_s16(vuzp1q_s16(v17, v15));
  *(int8x8_t *)v17.i8 = vmovn_s16(vuzp1q_s16(v16, v14));
  v18.i64[1] = v33;
  v15.i64[0] = v51;
  v15.i64[1] = v48;
  v19.i64[1] = v35;
  v16.i64[0] = v50;
  v16.i64[1] = v49;
  *(int8x8_t *)v14.i8 = vmovn_s16(vuzp1q_s16(v16, v19));
  *(int8x8_t *)v16.i8 = vmovn_s16(vuzp1q_s16(v15, v18));
  v15.i64[0] = v52;
  v18.i64[0] = v53;
  v15.i64[1] = v54;
  v21.i64[0] = v38;
  v21.i64[1] = v32;
  v18.i64[1] = v55;
  v19.i64[0] = v37;
  v19.i64[1] = v34;
  *(int8x8_t *)v19.i8 = vmovn_s16(vuzp1q_s16(v19, v18));
  *(int8x8_t *)v18.i8 = vmovn_s16(vuzp1q_s16(v21, v15));
  v15.i64[0] = v56;
  v22.i64[0] = v57;
  v15.i64[1] = v58;
  v23.i64[0] = v47;
  v23.i64[1] = v41;
  v22.i64[1] = v59;
  v21.i64[0] = v46;
  v21.i64[1] = v45;
  int8x8_t v24 = vmovn_s16(vuzp1q_s16(v21, v22));
  vst2_s16(a1, *(int16x4x2_t *)((char *)&v14 - 8));
  int8x16_t v25 = (__int16 *)((char *)a1 + a2);
  vst2_s16(v25, (int16x4x2_t)v17);
  int8x16_t v26 = (__int16 *)((char *)v25 + a2);
  vst2_s16(v26, (int16x4x2_t)v18);
  int16x8_t v27 = (__int16 *)((char *)v26 + a2);
  *(int8x8_t *)v21.i8 = vmovn_s16(vuzp1q_s16(v23, v15));
  vst2_s16(v27, (int16x4x2_t)v21);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  int8x8_t v13 = (int64x2_t *)result;
  if (a5 >= 4) {
    unsigned int v14 = 4;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  int16x8_t v16 = a4 + 1;
  if (a5 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    int v19 = 4;
  }
  else {
    int v19 = v18;
  }
  if (v19) {
    BOOL v20 = v15 == 0;
  }
  else {
    BOOL v20 = 1;
  }
  if (v20)
  {
    *int16x8_t v16 = 0;
  }
  else
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v16, v13 + 1, a2, v19, v15, a7);
    v11 += result;
  }
  uint64_t v36 = 4 * a2;
  int16x8_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v21, (int64x2_t *)((char *)v13 + v36), a2, v14, v24, a7);
    v11 += result;
    int8x16_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  else
  {
    *int16x8_t v21 = 0;
    int8x16_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v25, (int64x2_t *)((char *)v13 + v36 + 16), a2, v19, v24, a7);
    v11 += result;
    goto LABEL_37;
  }
LABEL_36:
  *int8x16_t v25 = 0;
LABEL_37:
  int8x16_t v26 = a4 + 4;
  if (a5 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a5;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v29 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v26, v13 + 2, a2, v29, v15, a7);
    v11 += result;
  }
  else
  {
    *int8x16_t v26 = 0;
  }
  uint64_t v30 = a4 + 5;
  if (a5 <= 12) {
    int v31 = 12;
  }
  else {
    int v31 = a5;
  }
  unsigned int v32 = v31 - 12;
  if (v32 >= 4) {
    int v33 = 4;
  }
  else {
    int v33 = v32;
  }
  if (v33 && v15)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v30, v13 + 3, a2, v33, v15, a7);
    v11 += result;
    uint64_t v34 = a4 + 6;
    if (!v29) {
      goto LABEL_61;
    }
  }
  else
  {
    *uint64_t v30 = 0;
    uint64_t v34 = a4 + 6;
    if (!v29) {
      goto LABEL_61;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v34, (int64x2_t *)((char *)v13 + v36 + 32), a2, v29, v24, a7);
    v11 += result;
    uint64_t v35 = a4 + 7;
    if (!v33) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *uint64_t v34 = 0;
  uint64_t v35 = a4 + 7;
  if (!v33)
  {
LABEL_66:
    *uint64_t v35 = 0;
    return result;
  }
LABEL_62:
  if (!v24) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v35, (int64x2_t *)((char *)v13 + v36 + 48), a2, v33, v24, a7);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int8x16_t v7 = *(int8x16_t *)a3;
  int8x16_t v8 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a3, 0);
  int8x16_t v9 = vsubq_s8(*(int8x16_t *)a3, v8);
  int8x16_t v10 = vsubq_s8(*(int8x16_t *)(a3 + a4), v8);
  int8x16_t v11 = vsubq_s8(*(int8x16_t *)(a3 + 16), v8);
  int8x16_t v12 = vsubq_s8(*(int8x16_t *)(a3 + a4 + 16), v8);
  int8x16_t v13 = vqtbl1q_s8(v9, (int8x16_t)xmmword_242EA7510);
  int8x16_t v14 = vpmaxq_s8(v13, v13);
  int8x16_t v15 = vpminq_s8(v13, v13);
  int8x16_t v16 = vpmaxq_s8(v14, v14);
  int8x16_t v17 = vpminq_s8(v15, v15);
  int8x16_t v18 = vpmaxq_s8(v16, v16);
  int8x16_t v19 = vpminq_s8(v17, v17);
  v20.i64[0] = 0x8080808080808080;
  v20.i64[1] = 0x8080808080808080;
  int8x16_t v21 = vmaxq_s8(v18, v20);
  v22.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v22.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v23 = vminq_s8(v19, v22);
  int8x16_t v24 = vzip1q_s8(v18, v19);
  v25.i64[0] = 0x808080808080808;
  v25.i64[1] = 0x808080808080808;
  int8x16_t v26 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v24)), vceqzq_s8(v24));
  int8x16_t v27 = vpmaxq_s8(v26, v26);
  int8x16_t v28 = vqtbl1q_s8(v10, (int8x16_t)xmmword_242EA7510);
  int8x16_t v29 = vpmaxq_s8(v28, v28);
  int8x16_t v30 = vpminq_s8(v28, v28);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  int8x16_t v33 = vpmaxq_s8(v31, v31);
  int8x16_t v34 = vpminq_s8(v32, v32);
  int8x16_t v35 = vmaxq_s8(v21, v33);
  int8x16_t v36 = vminq_s8(v23, v34);
  int8x16_t v37 = vzip1q_s8(v33, v34);
  int8x16_t v38 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v37)), vceqzq_s8(v37));
  int8x16_t v39 = vpmaxq_s8(v38, v38);
  int8x16_t v40 = vqtbl1q_s8(v11, (int8x16_t)xmmword_242EA7510);
  int8x16_t v41 = vpmaxq_s8(v40, v40);
  int8x16_t v42 = vpminq_s8(v40, v40);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vpmaxq_s8(v43, v43);
  int8x16_t v46 = vpminq_s8(v44, v44);
  int8x16_t v47 = vmaxq_s8(v35, v45);
  int8x16_t v48 = vminq_s8(v36, v46);
  int8x16_t v49 = vzip1q_s8(v45, v46);
  int8x16_t v50 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v49)), vceqzq_s8(v49));
  int8x16_t v51 = vpmaxq_s8(v50, v50);
  int8x16_t v52 = vqtbl1q_s8(v12, (int8x16_t)xmmword_242EA7510);
  int8x16_t v53 = vpmaxq_s8(v52, v52);
  int8x16_t v54 = vpminq_s8(v52, v52);
  int8x16_t v55 = vpmaxq_s8(v53, v53);
  int8x16_t v56 = vpminq_s8(v54, v54);
  int8x16_t v57 = vpmaxq_s8(v55, v55);
  int8x16_t v58 = vpminq_s8(v56, v56);
  int8x16_t v59 = vmaxq_s8(v47, v57);
  int8x16_t v60 = vminq_s8(v48, v58);
  int8x16_t v61 = vzip1q_s8(v57, v58);
  int8x16_t v62 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v61)), vceqzq_s8(v61));
  int8x16_t v63 = vpmaxq_s8(v62, v62);
  int8x16_t v64 = vmaxq_s8(vmaxq_s8(v27, v39), vmaxq_s8(v51, v63));
  int8x16_t v65 = vclzq_s8(vsubq_s8(v59, v60));
  int8x16_t v66 = vsubq_s8(v25, v65);
  int8x16_t v67 = vcgtq_s8(v64, v66);
  int8x16_t v68 = vbslq_s8(v67, v66, v64);
  if (!vmaxvq_s8(v68))
  {
    *(_WORD *)a1 = *(_WORD *)a3;
    *a2 = 1;
    return 2;
  }
  v69.i64[0] = -1;
  v69.i64[1] = -1;
  v70.i64[0] = 0x707070707070707;
  v70.i64[1] = 0x707070707070707;
  int8x16_t v407 = vandq_s8(vsubq_s8(vshlq_s8(v69, vsubq_s8(v70, v65)), v60), v67);
  v71.i64[0] = 0x303030303030303;
  v71.i64[1] = 0x303030303030303;
  int8x16_t v72 = vorrq_s8(vandq_s8(vceqzq_s8(v68), v71), vandq_s8(v67, v25));
  int8x16_t v73 = vmaxq_s8(vminq_s8(vsubq_s8(v68, v27), v71), (int8x16_t)0);
  int8x16_t v74 = vmaxq_s8(vminq_s8(vsubq_s8(v68, v39), v71), (int8x16_t)0);
  int8x16_t v75 = vmaxq_s8(vminq_s8(vsubq_s8(v68, v51), v71), (int8x16_t)0);
  int8x16_t v76 = vmaxq_s8(vminq_s8(vsubq_s8(v68, v63), v71), (int8x16_t)0);
  v77.i64[0] = 0x404040404040404;
  v77.i64[1] = 0x404040404040404;
  int8x16_t v78 = vorrq_s8(vbicq_s8(v77, vceqq_s8(vaddq_s8(v76, v75), vnegq_s8(vaddq_s8(v73, v74)))), v72);
  int8x16_t v79 = vsubq_s8(v10, vqtbl1q_s8(v10, (int8x16_t)xmmword_242EA7500));
  int8x16_t v80 = vsubq_s8(v11, vqtbl1q_s8(v11, (int8x16_t)xmmword_242EA7500));
  int8x16_t v81 = vsubq_s8(v12, vqtbl1q_s8(v12, (int8x16_t)xmmword_242EA7500));
  int8x16_t v405 = vsubq_s8(v9, vqtbl1q_s8(v9, (int8x16_t)xmmword_242EA7500));
  int8x16_t v82 = vqtbl1q_s8(v405, (int8x16_t)xmmword_242EA7510);
  int8x16_t v83 = v9;
  int8x16_t v84 = vpmaxq_s8(v82, v82);
  int8x16_t v85 = vpminq_s8(v82, v82);
  int8x16_t v86 = vpmaxq_s8(v84, v84);
  int8x16_t v87 = vpminq_s8(v85, v85);
  int8x16_t v88 = vpmaxq_s8(v86, v86);
  int8x16_t v89 = vpminq_s8(v87, v87);
  int8x16_t v90 = vmaxq_s8(v88, v20);
  int8x16_t v91 = vminq_s8(v89, v22);
  int8x16_t v92 = vzip1q_s8(v88, v89);
  int8x16_t v93 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v92)), vceqzq_s8(v92));
  int8x16_t v94 = vpmaxq_s8(v93, v93);
  int8x16_t v95 = vqtbl1q_s8(v79, (int8x16_t)xmmword_242EA7510);
  int8x16_t v96 = vpmaxq_s8(v95, v95);
  int8x16_t v97 = vpminq_s8(v95, v95);
  int8x16_t v98 = vpmaxq_s8(v96, v96);
  int8x16_t v99 = vpminq_s8(v97, v97);
  int8x16_t v100 = vpmaxq_s8(v98, v98);
  int8x16_t v101 = vpminq_s8(v99, v99);
  int8x16_t v102 = vmaxq_s8(v90, v100);
  int8x16_t v103 = vminq_s8(v91, v101);
  int8x16_t v104 = vzip1q_s8(v100, v101);
  int8x16_t v105 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v104)), vceqzq_s8(v104));
  int8x16_t v106 = vpmaxq_s8(v105, v105);
  int8x16_t v107 = vqtbl1q_s8(v80, (int8x16_t)xmmword_242EA7510);
  int8x16_t v108 = vpmaxq_s8(v107, v107);
  int8x16_t v109 = vpminq_s8(v107, v107);
  int8x16_t v110 = vpmaxq_s8(v108, v108);
  int8x16_t v111 = vpminq_s8(v109, v109);
  int8x16_t v112 = vpmaxq_s8(v110, v110);
  int8x16_t v113 = vpminq_s8(v111, v111);
  int8x16_t v114 = vmaxq_s8(v102, v112);
  int8x16_t v115 = vminq_s8(v103, v113);
  int8x16_t v116 = vzip1q_s8(v112, v113);
  int8x16_t v117 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v116)), vceqzq_s8(v116));
  int8x16_t v118 = vpmaxq_s8(v117, v117);
  int8x16_t v119 = vqtbl1q_s8(v81, (int8x16_t)xmmword_242EA7510);
  int8x16_t v120 = vpmaxq_s8(v119, v119);
  int8x16_t v121 = vpminq_s8(v119, v119);
  int8x16_t v122 = vpmaxq_s8(v120, v120);
  int8x16_t v123 = vpminq_s8(v121, v121);
  int8x16_t v124 = vpmaxq_s8(v122, v122);
  int8x16_t v125 = vpminq_s8(v123, v123);
  int8x16_t v126 = vmaxq_s8(v114, v124);
  int8x16_t v127 = vminq_s8(v115, v125);
  int8x16_t v128 = vzip1q_s8(v124, v125);
  int8x16_t v129 = vbicq_s8(vsubq_s8(v25, vclsq_s8(v128)), vceqzq_s8(v128));
  int8x16_t v130 = vpmaxq_s8(v129, v129);
  int8x16_t v131 = vmaxq_s8(vmaxq_s8(v94, v106), vmaxq_s8(v118, v130));
  int8x16_t v132 = vclzq_s8(vsubq_s8(v126, v127));
  int8x16_t v133 = vsubq_s8(v25, v132);
  int8x16_t v134 = vcgtq_s8(v131, v133);
  int8x16_t v135 = vbslq_s8(v134, v133, v131);
  v133.i64[0] = 0x1010101010101010;
  v133.i64[1] = 0x1010101010101010;
  v136.i64[0] = 0x1818181818181818;
  v136.i64[1] = 0x1818181818181818;
  int8x16_t v137 = vorrq_s8(vandq_s8(vceqzq_s8(v135), v71), vbslq_s8(v134, v136, v133));
  int8x16_t v138 = vmaxq_s8(vminq_s8(vsubq_s8(v135, v94), v71), (int8x16_t)0);
  int8x16_t v139 = vmaxq_s8(vminq_s8(vsubq_s8(v135, v106), v71), (int8x16_t)0);
  int8x16_t v140 = vmaxq_s8(vminq_s8(vsubq_s8(v135, v118), v71), (int8x16_t)0);
  int8x16_t v141 = vmaxq_s8(vminq_s8(vsubq_s8(v135, v130), v71), (int8x16_t)0);
  int8x16_t v142 = vsubq_s8(v135, v138);
  int8x16_t v143 = vsubq_s8(v135, v139);
  int8x16_t v144 = vsubq_s8(v135, v140);
  int8x16_t v145 = vsubq_s8(v135, v141);
  int8x16_t v146 = vorrq_s8(v137, vbicq_s8(v77, vceqq_s8(vaddq_s8(v141, v140), vnegq_s8(vaddq_s8(v138, v139)))));
  uint16x8_t v147 = vmovl_u8(*(uint8x8_t *)v146.i8);
  v139.i64[0] = 0x8000800080008;
  v139.i64[1] = 0x8000800080008;
  v138.i64[0] = 0x2000200020002;
  v138.i64[1] = 0x2000200020002;
  int16x8_t v148 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v144.i8, *(int8x8_t *)v143.i8), *(int8x8_t *)v145.i8), 3uLL), *(int8x8_t *)v142.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v146.i8, 1uLL), v139)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v135.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v147 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v138), v139));
  int8x16_t v149 = (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v78.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v138);
  int8x16_t v150 = vsubq_s8(v68, v73);
  int8x16_t v151 = vsubq_s8(v68, v74);
  int8x16_t v152 = vsubq_s8(v68, v75);
  int8x16_t v153 = vsubq_s8(v68, v76);
  int8x16_t v154 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v68.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v78.i8))),
                                                              (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v78.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8(v149, v139)), v148)), 0);
  if (vaddlvq_s8(v154))
  {
    v155.i64[0] = 0x707070707070707;
    v155.i64[1] = 0x707070707070707;
    v156.i64[0] = -1;
    v156.i64[1] = -1;
    int8x16_t v157 = vsubq_s8(vshlq_s8(v156, vsubq_s8(v155, v132)), v127);
    int8x16_t v8 = vbslq_s8(v154, vsubq_s8(v8, vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA7500)), v8);
    int8x16_t v406 = vbslq_s8(v154, v405, v83);
    int8x16_t v158 = vbslq_s8(v154, v79, v10);
    int8x16_t v150 = vbslq_s8(v154, v142, v150);
    int8x16_t v151 = vbslq_s8(v154, v143, v151);
    int8x16_t v152 = vbslq_s8(v154, v144, v152);
    int8x16_t v153 = vbslq_s8(v154, v145, v153);
    int8x16_t v159 = vbslq_s8(v154, vandq_s8(v157, v134), v407);
    int8x16_t v68 = vbslq_s8(v154, v135, v68);
    int8x16_t v78 = vbslq_s8(v154, v146, v78);
    int8x16_t v160 = vbslq_s8(v154, v81, v12);
    int8x16_t v161 = vbslq_s8(v154, v80, v11);
    if (a5 < 2) {
      goto LABEL_9;
    }
  }
  else
  {
    int8x16_t v406 = v83;
    int8x16_t v158 = v10;
    int8x16_t v160 = v12;
    int8x16_t v161 = v11;
    int8x16_t v159 = v407;
    if (a5 < 2) {
      goto LABEL_9;
    }
  }
  int8x16_t v163 = *(int8x16_t *)(a3 + a4);
  v163.i16[7] = HIWORD(*(_OWORD *)a3);
  int8x16_t v164 = vsubq_s8(v7, vqtbl1q_s8(v7, (int8x16_t)xmmword_242EA7520));
  int8x16_t v165 = vsubq_s8(*(int8x16_t *)(a3 + a4), vqtbl1q_s8(v163, (int8x16_t)xmmword_242EA7530));
  int8x16_t v166 = *(int8x16_t *)(a3 + 16);
  v166.i16[7] = HIWORD(*(_OWORD *)a3);
  int8x16_t v167 = vsubq_s8(*(int8x16_t *)(a3 + 16), vqtbl1q_s8(v166, (int8x16_t)xmmword_242EA7540));
  int8x16_t v168 = *(int8x16_t *)(a3 + a4 + 16);
  v168.i16[7] = HIWORD(*(_OWORD *)a3);
  int8x16_t v169 = vsubq_s8(*(int8x16_t *)(a3 + a4 + 16), vqtbl1q_s8(v168, (int8x16_t)xmmword_242EA7550));
  int8x16_t v170 = v164;
  v170.i16[0] = v164.i16[7];
  v170.i16[7] = v164.i16[0];
  int8x16_t v171 = vqtbl1q_s8(v170, (int8x16_t)xmmword_242EA7510);
  int8x16_t v172 = vpmaxq_s8(v171, v171);
  int8x16_t v173 = vpminq_s8(v171, v171);
  int8x16_t v174 = vpmaxq_s8(v172, v172);
  int8x16_t v175 = vpminq_s8(v173, v173);
  int8x16_t v176 = vpmaxq_s8(v174, v174);
  int8x16_t v177 = vpminq_s8(v175, v175);
  v178.i64[0] = 0x8080808080808080;
  v178.i64[1] = 0x8080808080808080;
  int8x16_t v179 = vmaxq_s8(v176, v178);
  v180.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v180.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v181 = vzip1q_s8(v176, v177);
  v182.i64[0] = 0x808080808080808;
  v182.i64[1] = 0x808080808080808;
  int8x16_t v183 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v181)), vceqzq_s8(v181));
  int8x16_t v184 = vpmaxq_s8(v183, v183);
  int8x16_t v185 = vqtbl1q_s8(v165, (int8x16_t)xmmword_242EA7510);
  int8x16_t v186 = vpmaxq_s8(v185, v185);
  int8x16_t v187 = vpminq_s8(v185, v185);
  int8x16_t v188 = vpmaxq_s8(v186, v186);
  int8x16_t v189 = vpminq_s8(v187, v187);
  int8x16_t v190 = vpmaxq_s8(v188, v188);
  int8x16_t v191 = vpminq_s8(v189, v189);
  int8x16_t v192 = vmaxq_s8(v179, v190);
  int8x16_t v193 = vminq_s8(vminq_s8(v177, v180), v191);
  int8x16_t v194 = vzip1q_s8(v190, v191);
  int8x16_t v195 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v194)), vceqzq_s8(v194));
  int8x16_t v196 = vpmaxq_s8(v195, v195);
  int8x16_t v197 = vqtbl1q_s8(v167, (int8x16_t)xmmword_242EA7510);
  int8x16_t v198 = vpmaxq_s8(v197, v197);
  int8x16_t v199 = vpminq_s8(v197, v197);
  int8x16_t v200 = vpmaxq_s8(v198, v198);
  int8x16_t v201 = vpminq_s8(v199, v199);
  int8x16_t v202 = vpmaxq_s8(v200, v200);
  int8x16_t v203 = vpminq_s8(v201, v201);
  int8x16_t v204 = vmaxq_s8(v192, v202);
  int8x16_t v205 = vminq_s8(v193, v203);
  int8x16_t v206 = vzip1q_s8(v202, v203);
  int8x16_t v207 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v206)), vceqzq_s8(v206));
  int8x16_t v208 = vpmaxq_s8(v207, v207);
  int8x16_t v209 = vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7510);
  int8x16_t v210 = vpmaxq_s8(v209, v209);
  int8x16_t v211 = vpminq_s8(v209, v209);
  int8x16_t v212 = vpmaxq_s8(v210, v210);
  int8x16_t v213 = vpminq_s8(v211, v211);
  int8x16_t v214 = vpmaxq_s8(v212, v212);
  int8x16_t v215 = vpminq_s8(v213, v213);
  int8x16_t v216 = vminq_s8(v205, v215);
  int8x16_t v217 = vzip1q_s8(v214, v215);
  int8x16_t v218 = vbicq_s8(vsubq_s8(v182, vclsq_s8(v217)), vceqzq_s8(v217));
  int8x16_t v219 = vpmaxq_s8(v218, v218);
  int8x16_t v220 = vmaxq_s8(vmaxq_s8(v184, v196), vmaxq_s8(v208, v219));
  int8x16_t v221 = vclzq_s8(vsubq_s8(vmaxq_s8(v204, v214), v216));
  int8x16_t v222 = vsubq_s8(v182, v221);
  int8x16_t v223 = vcgtq_s8(v220, v222);
  int8x16_t v224 = vbslq_s8(v223, v222, v220);
  v222.i64[0] = 0x909090909090909;
  v222.i64[1] = 0x909090909090909;
  v225.i64[0] = 0x202020202020202;
  v225.i64[1] = 0x202020202020202;
  int8x16_t v226 = vorrq_s8(vandq_s8(vceqzq_s8(v224), v225), vsubq_s8(vandq_s8(v223, v222), vmvnq_s8(v223)));
  v220.i64[0] = 0x303030303030303;
  v220.i64[1] = 0x303030303030303;
  int8x16_t v227 = vmaxq_s8(vminq_s8(vsubq_s8(v224, v184), v220), (int8x16_t)0);
  int8x16_t v228 = vmaxq_s8(vminq_s8(vsubq_s8(v224, v196), v220), (int8x16_t)0);
  int8x16_t v229 = vmaxq_s8(vminq_s8(vsubq_s8(v224, v208), v220), (int8x16_t)0);
  int8x16_t v230 = vmaxq_s8(vminq_s8(vsubq_s8(v224, v219), v220), (int8x16_t)0);
  int8x16_t v231 = vsubq_s8(v224, v227);
  int8x16_t v232 = vsubq_s8(v224, v228);
  int8x16_t v233 = vsubq_s8(v224, v229);
  int8x16_t v234 = vsubq_s8(v224, v230);
  int8x16_t v235 = vceqq_s8(vaddq_s8(v230, v229), vnegq_s8(vaddq_s8(v227, v228)));
  v230.i64[0] = 0x404040404040404;
  v230.i64[1] = 0x404040404040404;
  int8x16_t v236 = vorrq_s8(v226, vbicq_s8(v230, v235));
  v237.i64[0] = 0x3000300030003;
  v237.i64[1] = 0x3000300030003;
  int8x16_t v238 = (int8x16_t)vmovl_s8(*(int8x8_t *)v78.i8);
  v228.i64[0] = 0x8000800080008;
  v228.i64[1] = 0x8000800080008;
  int16x8_t v239 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v68.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v238, v228)));
  int16x8_t v240 = (int16x8_t)vandq_s8(v238, v237);
  v237.i64[0] = 0x2000200020002;
  v237.i64[1] = 0x2000200020002;
  int8x16_t v241 = (int8x16_t)vdupq_lane_s16((int16x4_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v239, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v78.i8, 1uLL), v228)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v240, (int16x8_t)v237), v228)), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8),
                                                                *(int8x8_t *)v153.i8),
                                                              3uLL)),
                                                          vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v233.i8, *(int8x8_t *)v232.i8), *(int8x8_t *)v234.i8), 3uLL), *(int8x8_t *)v231.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v236.i8, *(int8x8_t *)v236.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v224.i8, (int8x8_t)vcgt_u8(
                                                                          (uint8x8_t)0x808080808080808,
                                                                          *(uint8x8_t *)v236.i8))))),
                      0);
  if (vaddlvq_s8(v241))
  {
    v242.i64[0] = 0x707070707070707;
    v242.i64[1] = 0x707070707070707;
    v243.i64[0] = -1;
    v243.i64[1] = -1;
    int8x16_t v244 = vsubq_s8(vshlq_s8(v243, vsubq_s8(v242, v221)), v216);
    v8.i16[0] = vbslq_s8(v241, vextq_s8(v7, v7, 0xEuLL), v8).u16[0];
    int8x16_t v245 = vbslq_s8(v241, v170, v406);
    int8x16_t v158 = vbslq_s8(v241, v165, v158);
    int8x16_t v161 = vbslq_s8(v241, v167, v161);
    int8x16_t v160 = vbslq_s8(v241, v169, v160);
    int8x16_t v150 = vbslq_s8(v241, v231, v150);
    int8x16_t v151 = vbslq_s8(v241, v232, v151);
    int8x16_t v152 = vbslq_s8(v241, v233, v152);
    int8x16_t v153 = vbslq_s8(v241, v234, v153);
    int8x16_t v159 = vbslq_s8(v241, vandq_s8(v244, v223), v159);
    int8x16_t v68 = vbslq_s8(v241, v224, v68);
    int8x16_t v78 = vbslq_s8(v241, v236, v78);
    goto LABEL_10;
  }
LABEL_9:
  int8x16_t v245 = v406;
LABEL_10:
  int8x16_t v246 = (int8x16_t)vmovl_s8(*(int8x8_t *)v78.i8);
  v247.i64[0] = 0x8000800080008;
  v247.i64[1] = 0x8000800080008;
  int16x8_t v248 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v68.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v246, v247)));
  v249.i64[0] = 0x3000300030003;
  v249.i64[1] = 0x3000300030003;
  int16x8_t v250 = (int16x8_t)vandq_s8(v246, v249);
  v249.i64[0] = 0x2000200020002;
  v249.i64[1] = 0x2000200020002;
  int16x8_t v251 = vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8), 3uLL), *(int8x8_t *)v150.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v78.i8, 1uLL), v247)), v248), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v250, (int16x8_t)v249), v247));
  if ((unint64_t)(vpaddq_s16(v251, v251).i16[0] - 227) <= 0xFFFFFFFFFFFFFEF7)
  {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
    return 32;
  }
  else
  {
    int v252 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v253 = 8 * (a1 & 7);
    if (v253) {
      uint64_t v254 = *v252 & ~(-1 << v253);
    }
    else {
      uint64_t v254 = 0;
    }
    unint64_t v255 = (unint64_t)((v68.i8[0] - 1) & 7) << 10;
    if (!v68.i8[0]) {
      unint64_t v255 = 0;
    }
    if (v68.i8[1]) {
      uint64_t v256 = (unsigned __int16)((v68.u8[1] << 13) - 0x2000) & 0xE000;
    }
    else {
      uint64_t v256 = 0;
    }
    *a2 = v78.i8[0] << 6;
    unint64_t v257 = ((v255 | v256) & 0xFFFFFFFFFFFFFC1FLL | v78.i8[0] & 0x1C | (32 * (v78.i8[1] & 0x1F))) >> 2;
    unint64_t v258 = v254 | (v257 << v253);
    if (v253 >= 0x32)
    {
      *int v252 = v258;
      unint64_t v258 = v257 >> (-8 * (a1 & 7u));
    }
    unint64_t v259 = (v253 + 14) & 0x3E;
    unint64_t v260 = v258 | ((unint64_t)v8.u16[0] << v259);
    if (v259 >= 0x30)
    {
      *(void *)((char *)v252 + (((v253 + 14) >> 3) & 8)) = v260;
      unint64_t v260 = (unint64_t)v8.u16[0] >> -(char)v259;
    }
    unint64_t v261 = v253 + 30;
    int8x16_t v262 = vsubq_s8(v68, v150);
    int8x16_t v263 = vsubq_s8(v68, v151);
    int8x16_t v264 = vsubq_s8(v68, v152);
    int8x16_t v265 = vsubq_s8(v68, v153);
    v262.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v262, v263), (int16x8_t)vzip1q_s8(v264, v265)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v262, v263), (int16x8_t)vtrn2q_s8(v264, v265))).u64[0];
    v264.i64[0] = 0x202020202020202;
    v264.i64[1] = 0x202020202020202;
    int8x16_t v266 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v78.i8), (int8x8_t)0x4000400040004)))), v264);
    v264.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v264.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v265.i64[0] = -1;
    v265.i64[1] = -1;
    uint8x16_t v267 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v265, (uint8x16_t)vorrq_s8(v266, v264)), (int8x16_t)v262.u64[0]);
    int16x8_t v268 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v266.i8);
    uint16x8_t v269 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v267.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v268)), (int16x8_t)vmovl_high_u8(v267));
    uint16x8_t v270 = (uint16x8_t)vpaddq_s16(v268, (int16x8_t)vmovl_high_u8((uint8x16_t)v266));
    int32x4_t v271 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v270.i8);
    int32x4_t v272 = (int32x4_t)vmovl_high_u16(v270);
    int32x4_t v273 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v269.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v271)), (int32x4_t)vshlq_u32(vmovl_high_u16(v269), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v272)));
    int32x4_t v274 = vpaddq_s32(v271, v272);
    v275.i64[0] = v273.u32[0];
    v275.i64[1] = v273.u32[1];
    uint64x2_t v276 = (uint64x2_t)v275;
    v275.i64[0] = v273.u32[2];
    v275.i64[1] = v273.u32[3];
    uint64x2_t v277 = (uint64x2_t)v275;
    v275.i64[0] = v274.u32[0];
    v275.i64[1] = v274.u32[1];
    int64x2_t v278 = v275;
    v275.i64[0] = v274.u32[2];
    v275.i64[1] = v274.u32[3];
    int64x2_t v279 = vpaddq_s64((int64x2_t)vshlq_u64(v276, (uint64x2_t)vzip1q_s64((int64x2_t)0, v278)), (int64x2_t)vshlq_u64(v277, (uint64x2_t)vzip1q_s64((int64x2_t)0, v275)));
    int64x2_t v280 = vpaddq_s64(v278, v275);
    uint64_t v281 = (v253 + 30) & 0x3E;
    unint64_t v282 = (v279.i64[0] << v281) | v260;
    if ((unint64_t)(v280.i64[0] + v281) >= 0x40)
    {
      *(void *)((char *)v252 + ((v261 >> 3) & 8)) = v282;
      unint64_t v282 = (unint64_t)v279.i64[0] >> -(char)v281;
    }
    int8x16_t v283 = vceqq_s8(v68, v150);
    unint64_t v284 = v280.i64[0] + v261;
    unint64_t v285 = v282 | (v279.i64[1] << v284);
    if ((v284 & 0x3F) + v280.i64[1] >= 0x40)
    {
      *(void *)((char *)v252 + ((v284 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v285;
      unint64_t v285 = (unint64_t)v279.i64[1] >> -(v284 & 0x3F);
      if ((v284 & 0x3F) == 0) {
        unint64_t v285 = 0;
      }
    }
    int8x16_t v286 = vandq_s8(v159, v283);
    unint64_t v287 = v284 + v280.i64[1];
    v288.i64[0] = 0x808080808080808;
    v288.i64[1] = 0x808080808080808;
    v289.i64[0] = -1;
    v289.i64[1] = -1;
    int8x16_t v290 = vandq_s8(vextq_s8(vtstq_s8(v78, v288), (int8x16_t)0, 0xEuLL), v68);
    v291.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v291.i64[1] = 0xF8F8F8F8F8F8F8F8;
    uint8x16_t v292 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v289, (uint8x16_t)vaddq_s8(v290, v291)), v159);
    int16x8_t v293 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v290.i8);
    uint16x8_t v294 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v292.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v293)), (int16x8_t)vmovl_high_u8(v292));
    uint16x8_t v295 = (uint16x8_t)vpaddq_s16(v293, (int16x8_t)vmovl_high_u8((uint8x16_t)v290));
    int32x4_t v296 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v295.i8);
    int32x4_t v297 = (int32x4_t)vmovl_high_u16(v295);
    int32x4_t v298 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v294.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v296)), (int32x4_t)vshlq_u32(vmovl_high_u16(v294), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v297)));
    int32x4_t v299 = vpaddq_s32(v296, v297);
    v300.i64[0] = v298.u32[0];
    v300.i64[1] = v298.u32[1];
    uint64x2_t v301 = (uint64x2_t)v300;
    v300.i64[0] = v298.u32[2];
    v300.i64[1] = v298.u32[3];
    uint64x2_t v302 = (uint64x2_t)v300;
    v300.i64[0] = v299.u32[0];
    v300.i64[1] = v299.u32[1];
    int64x2_t v303 = v300;
    v300.i64[0] = v299.u32[2];
    v300.i64[1] = v299.u32[3];
    int64x2_t v304 = vpaddq_s64((int64x2_t)vshlq_u64(v301, (uint64x2_t)vzip1q_s64((int64x2_t)0, v303)), (int64x2_t)vshlq_u64(v302, (uint64x2_t)vzip1q_s64((int64x2_t)0, v300)));
    int64x2_t v305 = vpaddq_s64(v303, v300);
    unint64_t v306 = (v304.i64[0] << v287) | v285;
    if (v305.i64[0] + (v287 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v252 + ((v287 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v306;
      unint64_t v306 = (unint64_t)v304.i64[0] >> -(v287 & 0x3F);
      if ((v287 & 0x3F) == 0) {
        unint64_t v306 = 0;
      }
    }
    int8x16_t v307 = vceqq_s8(v68, v151);
    int8x16_t v308 = vaddq_s8(v286, v245);
    unint64_t v309 = v305.i64[0] + v287;
    unint64_t v310 = v306 | (v304.i64[1] << v309);
    if ((v309 & 0x3F) + v305.i64[1] >= 0x40)
    {
      *(void *)((char *)v252 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v310;
      unint64_t v310 = (unint64_t)v304.i64[1] >> -(v309 & 0x3F);
      if ((v309 & 0x3F) == 0) {
        unint64_t v310 = 0;
      }
    }
    int8x16_t v311 = vandq_s8(v159, v307);
    unint64_t v312 = v309 + v305.i64[1];
    int8x16_t v313 = vextq_s8((int8x16_t)0, v150, 0xEuLL);
    v314.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v314.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v315.i64[0] = -1;
    v315.i64[1] = -1;
    uint8x16_t v316 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v315, (uint8x16_t)vaddq_s8(v313, v314)), v308);
    int16x8_t v317 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v313.i8);
    int16x8_t v318 = (int16x8_t)vmovl_high_u8((uint8x16_t)v313);
    uint16x8_t v319 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v316.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v317)), (int16x8_t)vshlq_u16(vmovl_high_u8(v316), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v318)));
    uint16x8_t v320 = (uint16x8_t)vpaddq_s16(v317, v318);
    int32x4_t v321 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v320.i8);
    int32x4_t v322 = (int32x4_t)vmovl_high_u16(v320);
    int32x4_t v323 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v319.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v321)), (int32x4_t)vshlq_u32(vmovl_high_u16(v319), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v322)));
    int32x4_t v324 = vpaddq_s32(v321, v322);
    v325.i64[0] = v323.u32[0];
    v325.i64[1] = v323.u32[1];
    uint64x2_t v326 = (uint64x2_t)v325;
    v325.i64[0] = v323.u32[2];
    v325.i64[1] = v323.u32[3];
    uint64x2_t v327 = (uint64x2_t)v325;
    v325.i64[0] = v324.u32[0];
    v325.i64[1] = v324.u32[1];
    int64x2_t v328 = v325;
    v325.i64[0] = v324.u32[2];
    v325.i64[1] = v324.u32[3];
    int64x2_t v329 = vpaddq_s64((int64x2_t)vshlq_u64(v326, (uint64x2_t)vzip1q_s64((int64x2_t)0, v328)), (int64x2_t)vshlq_u64(v327, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)));
    int64x2_t v330 = vpaddq_s64(v328, v325);
    unint64_t v331 = (v329.i64[0] << v312) | v310;
    if (v330.i64[0] + (v312 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v252 + ((v312 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v331;
      unint64_t v331 = (unint64_t)v329.i64[0] >> -(v312 & 0x3F);
      if ((v312 & 0x3F) == 0) {
        unint64_t v331 = 0;
      }
    }
    int8x16_t v332 = vceqq_s8(v68, v152);
    int8x16_t v333 = vaddq_s8(v158, v311);
    unint64_t v334 = v330.i64[0] + v312;
    unint64_t v335 = v331 | (v329.i64[1] << v334);
    if ((v334 & 0x3F) + v330.i64[1] >= 0x40)
    {
      *(void *)((char *)v252 + ((v334 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v335;
      unint64_t v335 = (unint64_t)v329.i64[1] >> -(v334 & 0x3F);
      if ((v334 & 0x3F) == 0) {
        unint64_t v335 = 0;
      }
    }
    int8x16_t v336 = vandq_s8(v159, v332);
    unint64_t v337 = v334 + v330.i64[1];
    v338.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v338.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v339.i64[0] = -1;
    v339.i64[1] = -1;
    uint8x16_t v340 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v339, (uint8x16_t)vaddq_s8(v151, v338)), v333);
    int16x8_t v341 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v151.i8);
    int16x8_t v342 = (int16x8_t)vmovl_high_u8((uint8x16_t)v151);
    uint16x8_t v343 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v340.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v341)), (int16x8_t)vshlq_u16(vmovl_high_u8(v340), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v342)));
    uint16x8_t v344 = (uint16x8_t)vpaddq_s16(v341, v342);
    int32x4_t v345 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v344.i8);
    int32x4_t v346 = (int32x4_t)vmovl_high_u16(v344);
    int32x4_t v347 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v343.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v345)), (int32x4_t)vshlq_u32(vmovl_high_u16(v343), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)));
    int32x4_t v348 = vpaddq_s32(v345, v346);
    v349.i64[0] = v347.u32[0];
    v349.i64[1] = v347.u32[1];
    uint64x2_t v350 = (uint64x2_t)v349;
    v349.i64[0] = v347.u32[2];
    v349.i64[1] = v347.u32[3];
    uint64x2_t v351 = (uint64x2_t)v349;
    v349.i64[0] = v348.u32[0];
    v349.i64[1] = v348.u32[1];
    int64x2_t v352 = v349;
    v349.i64[0] = v348.u32[2];
    v349.i64[1] = v348.u32[3];
    int64x2_t v353 = vpaddq_s64((int64x2_t)vshlq_u64(v350, (uint64x2_t)vzip1q_s64((int64x2_t)0, v352)), (int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)));
    int64x2_t v354 = vpaddq_s64(v352, v349);
    unint64_t v355 = (v353.i64[0] << v337) | v335;
    if (v354.i64[0] + (v337 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v252 + ((v337 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v355;
      unint64_t v355 = (unint64_t)v353.i64[0] >> -(v337 & 0x3F);
      if ((v337 & 0x3F) == 0) {
        unint64_t v355 = 0;
      }
    }
    int8x16_t v356 = vceqq_s8(v68, v153);
    int8x16_t v357 = vaddq_s8(v161, v336);
    unint64_t v358 = v354.i64[0] + v337;
    unint64_t v359 = v355 | (v353.i64[1] << v358);
    if ((v358 & 0x3F) + v354.i64[1] >= 0x40)
    {
      *(void *)((char *)v252 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v359;
      unint64_t v359 = (unint64_t)v353.i64[1] >> -(v358 & 0x3F);
      if ((v358 & 0x3F) == 0) {
        unint64_t v359 = 0;
      }
    }
    int8x16_t v360 = vandq_s8(v159, v356);
    unint64_t v361 = v358 + v354.i64[1];
    v362.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v362.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v363.i64[0] = -1;
    v363.i64[1] = -1;
    uint8x16_t v364 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v363, (uint8x16_t)vaddq_s8(v152, v362)), v357);
    int16x8_t v365 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v152.i8);
    int16x8_t v366 = (int16x8_t)vmovl_high_u8((uint8x16_t)v152);
    uint16x8_t v367 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v364.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v365)), (int16x8_t)vshlq_u16(vmovl_high_u8(v364), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v366)));
    uint16x8_t v368 = (uint16x8_t)vpaddq_s16(v365, v366);
    int32x4_t v369 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v368.i8);
    int32x4_t v370 = (int32x4_t)vmovl_high_u16(v368);
    int32x4_t v371 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v367.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v369)), (int32x4_t)vshlq_u32(vmovl_high_u16(v367), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v370)));
    int32x4_t v372 = vpaddq_s32(v369, v370);
    v373.i64[0] = v371.u32[0];
    v373.i64[1] = v371.u32[1];
    uint64x2_t v374 = (uint64x2_t)v373;
    v373.i64[0] = v371.u32[2];
    v373.i64[1] = v371.u32[3];
    uint64x2_t v375 = (uint64x2_t)v373;
    v373.i64[0] = v372.u32[0];
    v373.i64[1] = v372.u32[1];
    int64x2_t v376 = v373;
    v373.i64[0] = v372.u32[2];
    v373.i64[1] = v372.u32[3];
    int64x2_t v377 = vpaddq_s64((int64x2_t)vshlq_u64(v374, (uint64x2_t)vzip1q_s64((int64x2_t)0, v376)), (int64x2_t)vshlq_u64(v375, (uint64x2_t)vzip1q_s64((int64x2_t)0, v373)));
    int64x2_t v378 = vpaddq_s64(v376, v373);
    unint64_t v379 = (v377.i64[0] << v361) | v359;
    if (v378.i64[0] + (v361 & 0x3F) >= 0x40)
    {
      *(void *)((char *)v252 + ((v361 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v379;
      unint64_t v379 = (unint64_t)v377.i64[0] >> -(v361 & 0x3F);
      if ((v361 & 0x3F) == 0) {
        unint64_t v379 = 0;
      }
    }
    int8x16_t v380 = vaddq_s8(v160, v360);
    unint64_t v381 = v378.i64[0] + v361;
    unint64_t v382 = v379 | (v377.i64[1] << v381);
    if ((v381 & 0x3F) + v378.i64[1] >= 0x40)
    {
      *(void *)((char *)v252 + ((v381 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v382;
      unint64_t v382 = (unint64_t)v377.i64[1] >> -(v381 & 0x3F);
      if ((v381 & 0x3F) == 0) {
        unint64_t v382 = 0;
      }
    }
    unint64_t v383 = v381 + v378.i64[1];
    v384.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v384.i64[1] = 0xF8F8F8F8F8F8F8F8;
    v385.i64[0] = -1;
    v385.i64[1] = -1;
    uint8x16_t v386 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v385, (uint8x16_t)vaddq_s8(v153, v384)), v380);
    int16x8_t v387 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v153.i8);
    int16x8_t v388 = (int16x8_t)vmovl_high_u8((uint8x16_t)v153);
    uint16x8_t v389 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v386.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v387)), (int16x8_t)vshlq_u16(vmovl_high_u8(v386), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v388)));
    uint16x8_t v390 = (uint16x8_t)vpaddq_s16(v387, v388);
    int32x4_t v391 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v390.i8);
    int32x4_t v392 = (int32x4_t)vmovl_high_u16(v390);
    int32x4_t v393 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v389.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v391)), (int32x4_t)vshlq_u32(vmovl_high_u16(v389), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v392)));
    int32x4_t v394 = vpaddq_s32(v391, v392);
    v395.i64[0] = v393.u32[0];
    v395.i64[1] = v393.u32[1];
    uint64x2_t v396 = (uint64x2_t)v395;
    v395.i64[0] = v393.u32[2];
    v395.i64[1] = v393.u32[3];
    uint64x2_t v397 = (uint64x2_t)v395;
    v395.i64[0] = v394.u32[0];
    v395.i64[1] = v394.u32[1];
    int64x2_t v398 = v395;
    v395.i64[0] = v394.u32[2];
    v395.i64[1] = v394.u32[3];
    int64x2_t v399 = vpaddq_s64((int64x2_t)vshlq_u64(v396, (uint64x2_t)vzip1q_s64((int64x2_t)0, v398)), (int64x2_t)vshlq_u64(v397, (uint64x2_t)vzip1q_s64((int64x2_t)0, v395)));
    int64x2_t v400 = vpaddq_s64(v398, v395);
    unint64_t v401 = (v399.i64[0] << v383) | v382;
    if (v400.i64[0] + (v383 & 0x3F) > 0x3F)
    {
      *(void *)((char *)v252 + ((v383 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v401;
      if ((v383 & 0x3F) != 0) {
        unint64_t v401 = (unint64_t)v399.i64[0] >> -(v383 & 0x3F);
      }
      else {
        unint64_t v401 = 0;
      }
    }
    unint64_t v402 = v400.i64[0] + v383;
    unint64_t v403 = v401 | (v399.i64[1] << v402);
    if ((v402 & 0x3F) + v400.i64[1] >= 0x40)
    {
      *(void *)((char *)v252 + ((v402 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v403;
      unint64_t v403 = (unint64_t)v399.i64[1] >> -(v402 & 0x3F);
      if ((v402 & 0x3F) == 0) {
        unint64_t v403 = 0;
      }
    }
    unint64_t v404 = v402 + v400.i64[1];
    if ((v404 & 0x3F) != 0) {
      *(void *)((char *)v252 + ((v404 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v403;
    }
    unint64_t result = (v404 - v253 + 7) >> 3;
    *a2 |= (_BYTE)result - 1;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v11 = 0;
  uint64_t v54 = *MEMORY[0x263EF8340];
  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  uint64_t v12 = a5;
  do
  {
    uint64_t v13 = 0;
    int8x16_t v14 = (_WORD *)(a3 + v11 * a4);
    do
    {
      int8x16_t v15 = &v50 + (v13 & 0x7F);
      uint64_t v16 = 4 * (v11 & 0x7F);
      *(_WORD *)((char *)v15 + v16) = *v14;
      int8x16_t v17 = (char *)&v50 + 8 * ((2 * v13) | 1u);
      *(_WORD *)&v17[v16] = v14[1];
      uint64_t v18 = 2 * ((2 * v11) | 1u);
      *(_WORD *)((char *)v15 + v18) = v14[2];
      LOWORD(v15) = v14[3];
      v14 += 4;
      ++v13;
      *(_WORD *)&v17[v18] = (_WORD)v15;
    }
    while (v12 != v13);
    ++v11;
  }
  while (v11 != a6);
  unsigned int v19 = 2 * (a6 & 0x7F);
  unsigned int v20 = 2 * (a5 & 0x7F);
  int v34 = v50;
  int v35 = BYTE1(v50);
  int v36 = BYTE8(v50);
  int v37 = BYTE9(v50);
  int v38 = BYTE2(v50);
  int v39 = BYTE3(v50);
  int v40 = BYTE10(v50);
  int v41 = BYTE11(v50);
  int v42 = v51;
  int v43 = BYTE1(v51);
  int v44 = BYTE8(v51);
  int v45 = BYTE9(v51);
  int v46 = BYTE2(v51);
  int v47 = BYTE3(v51);
  int v48 = BYTE10(v51);
  int v49 = BYTE11(v51);
  if (v20 >= 4) {
    unsigned int v21 = 4;
  }
  else {
    unsigned int v21 = 2 * (a5 & 0x7F);
  }
  if (v20 >= 4) {
    unsigned int v22 = v20 - 4;
  }
  else {
    unsigned int v22 = 0;
  }
  char v23 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v34, a7, v21, 2u);
  int v34 = BYTE4(v50);
  int v35 = BYTE5(v50);
  int v36 = BYTE12(v50);
  int v37 = BYTE13(v50);
  int v38 = BYTE6(v50);
  int v39 = BYTE7(v50);
  int v40 = BYTE14(v50);
  int v41 = HIBYTE(v50);
  int v42 = BYTE4(v51);
  int v43 = BYTE5(v51);
  int v44 = BYTE12(v51);
  int v45 = BYTE13(v51);
  int v46 = BYTE6(v51);
  int v47 = BYTE7(v51);
  unsigned int v24 = v19 - 2;
  if (v19 < 2) {
    unsigned int v24 = 0;
  }
  int v48 = BYTE14(v51);
  int v49 = HIBYTE(v51);
  if (a6 >= 2) {
    unsigned int v25 = 2;
  }
  else {
    unsigned int v25 = v24;
  }
  int v26 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, (uint64_t)&v34, a7, v21, v25);
  int v34 = v52;
  int v35 = BYTE1(v52);
  int v36 = BYTE8(v52);
  int v37 = BYTE9(v52);
  int v38 = BYTE2(v52);
  int v39 = BYTE3(v52);
  int v40 = BYTE10(v52);
  int v41 = BYTE11(v52);
  int v42 = v53;
  int v43 = BYTE1(v53);
  int v44 = BYTE8(v53);
  int v45 = BYTE9(v53);
  int v46 = BYTE2(v53);
  int v47 = BYTE3(v53);
  if (a5 >= 4) {
    unsigned int v27 = 4;
  }
  else {
    unsigned int v27 = v22;
  }
  int v48 = BYTE10(v53);
  int v49 = BYTE11(v53);
  int v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v34, a7, v27, 2u);
  int v34 = BYTE4(v52);
  int v35 = BYTE5(v52);
  int v36 = BYTE12(v52);
  int v37 = BYTE13(v52);
  int v38 = BYTE6(v52);
  int v39 = BYTE7(v52);
  int v40 = BYTE14(v52);
  int v41 = HIBYTE(v52);
  int v42 = BYTE4(v53);
  int v43 = BYTE5(v53);
  int v44 = BYTE12(v53);
  int v45 = BYTE13(v53);
  int v46 = BYTE6(v53);
  int v47 = BYTE7(v53);
  int v48 = BYTE14(v53);
  int v49 = HIBYTE(v53);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, (uint64_t)&v34, a7, v27, v25);
  if (v28) {
    char v30 = 4;
  }
  else {
    char v30 = 0;
  }
  if (v26) {
    char v31 = 2;
  }
  else {
    char v31 = 0;
  }
  if (result) {
    char v32 = -8;
  }
  else {
    char v32 = -16;
  }
  *a2 = v32 | v30 | v23 | v31;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v279 = *MEMORY[0x263EF8340];
  BOOL v8 = a5 < 2;
  BOOL v9 = a4 < 4 || a5 < 2;
  BOOL v242 = v9;
  int v243 = a3;
  BOOL v10 = a4 < 4 || a5 == 0;
  BOOL v241 = v10;
  BOOL v11 = a4 < 3 || a5 < 2;
  BOOL v240 = v11;
  BOOL v12 = a4 < 3 || a5 == 0;
  BOOL v239 = v12;
  if (a4) {
    BOOL v13 = a5 < 2;
  }
  else {
    BOOL v13 = 1;
  }
  if (a4 < 2) {
    BOOL v8 = 1;
  }
  BOOL v237 = v8;
  BOOL v238 = v13;
  BOOL v14 = a4 < 2 || a5 == 0;
  BOOL v236 = v14;
  do
  {
    uint64_t v15 = 0;
    char v16 = v6;
    unsigned int v17 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::compBits[v7];
    *(&v277 + v7) = v17;
    switch(v17)
    {
      case 2u:
        uint64_t v15 = 5;
        break;
      case 0xAu:
        uint64_t v15 = 1;
        break;
      case 0xCu:
        uint64_t v15 = 2;
        break;
      case 0x10u:
        uint64_t v15 = 3;
        break;
      case 0x20u:
        uint64_t v15 = 4;
        break;
      default:
        break;
    }
    unint64_t v18 = 4 * v7;
    *(int *)((char *)&v254 + v18) = v15;
    unsigned int v19 = 1 << (v17 - 1);
    v253[v18 / 4 + 2] = v19;
    if (a3 == 1)
    {
      int8x16_t v29 = (_DWORD *)(a2 + v18);
      unsigned int v21 = (unsigned int *)((char *)&v257 + v18);
      if ((*(_DWORD *)(a2 + 4 * v7) ^ v19) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      }
      *unsigned int v21 = v20;
      if ((v29[2] ^ v19) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v29[2] ^ v19;
      }
      v21[2] = v22;
      if ((v29[4] ^ v19) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v29[4] ^ v19;
      }
      v21[4] = v23;
      if ((v29[6] ^ v19) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v29[6] ^ v19;
      }
      v21[6] = v24;
      if ((v29[8] ^ v19) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v29[8] ^ v19;
      }
      v21[8] = v25;
      if ((v29[10] ^ v19) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v29[10] ^ v19;
      }
      v21[10] = v26;
      unsigned int v27 = v29[12] ^ v19;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v29[14] ^ v19;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      unsigned int v21 = (unsigned int *)((char *)&v257 + v18);
      *unsigned int v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8) ^ v19;
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16) ^ v19;
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24) ^ v19;
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32) ^ v19;
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40) ^ v19;
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48) ^ v19;
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56) ^ v19;
    }
    else
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7);
      unsigned int v21 = (unsigned int *)((char *)&v257 + v18);
      *unsigned int v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8);
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16);
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24);
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32);
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40);
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48);
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56);
    }
    v21[14] = v28;
    char v30 = &v275[v18 / 4 + 2];
    v275[v7 + 2] = v20;
    v276[v7] = v20;
    v275[v7] = 0;
    if (v236)
    {
      unsigned int v31 = v20;
      if (v238) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v31 = v20;
      if (v22 < v20)
      {
        v275[v7] = 1;
        v276[v7] = v22;
        unsigned int v31 = v22;
      }
      if (v20 >= v22) {
        char v32 = &v275[v18 / 4 + 2];
      }
      else {
        char v32 = (unsigned int *)(&v259 + v7);
      }
      unsigned int v20 = *v32;
      *char v30 = *v32;
      if (v238)
      {
LABEL_58:
        if (v237) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v31)
    {
      v275[v7] = 2;
      v276[v7] = v23;
      unsigned int v31 = v23;
    }
    if (v20 >= v23) {
      int8x16_t v33 = &v275[v18 / 4 + 2];
    }
    else {
      int8x16_t v33 = (unsigned int *)(&v261 + v7);
    }
    unsigned int v20 = *v33;
    *char v30 = *v33;
    if (v237)
    {
LABEL_59:
      if (v239) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v31)
    {
      v275[v7] = 3;
      v276[v7] = v24;
      unsigned int v31 = v24;
    }
    if (v20 >= v24) {
      int v34 = &v275[v18 / 4 + 2];
    }
    else {
      int v34 = (unsigned int *)(&v263 + v7);
    }
    unsigned int v20 = *v34;
    *char v30 = *v34;
    if (v239)
    {
LABEL_60:
      if (v241) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v31)
    {
      v275[v7] = 4;
      v276[v7] = v25;
      unsigned int v31 = v25;
    }
    if (v20 >= v25) {
      int v35 = &v275[v18 / 4 + 2];
    }
    else {
      int v35 = (unsigned int *)(&v265 + v7);
    }
    unsigned int v20 = *v35;
    *char v30 = *v35;
    if (v241)
    {
LABEL_61:
      if (v240) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v31)
    {
      v275[v7] = 5;
      v276[v7] = v26;
      unsigned int v31 = v26;
    }
    if (v20 >= v26) {
      int v36 = &v275[v18 / 4 + 2];
    }
    else {
      int v36 = (unsigned int *)(&v267 + v7);
    }
    unsigned int v20 = *v36;
    *char v30 = *v36;
    if (v240)
    {
LABEL_62:
      if (v242) {
        goto LABEL_105;
      }
LABEL_100:
      if (v28 < v31)
      {
        v275[v7] = 7;
        v276[v7] = v28;
        unsigned int v31 = v28;
      }
      int v38 = (unsigned int *)(&v271 + v7);
      if (v20 >= v28) {
        int v38 = v30;
      }
      unsigned int v20 = *v38;
      *char v30 = *v38;
      goto LABEL_105;
    }
LABEL_94:
    if (v27 < v31)
    {
      v275[v7] = 6;
      v276[v7] = v27;
      unsigned int v31 = v27;
    }
    if (v20 >= v27) {
      int v37 = &v275[v18 / 4 + 2];
    }
    else {
      int v37 = (unsigned int *)(&v269 + v7);
    }
    unsigned int v20 = *v37;
    *char v30 = *v37;
    if (!v242) {
      goto LABEL_100;
    }
LABEL_105:
    unsigned int v39 = __clz(v20 - v31);
    unsigned int v40 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)4,(AGXTextureFootprint)3>::computeDquadMode(v17, 32 - v39, v31, v20);
    *(&v273 + v7) = v40;
    a3 = v243;
    if ((v243 | 2) != 3)
    {
      BOOL v41 = 0;
      uint64_t v42 = v15;
LABEL_110:
      unsigned int v43 = a5;
      goto LABEL_111;
    }
    BOOL v41 = 0;
    uint64_t v42 = v15;
    if (v20 < v19) {
      goto LABEL_110;
    }
    unsigned int v43 = a5;
    if (v31 < v19) {
      BOOL v41 = kDQuadParamTable[160 * v42 + 8 + 10 * v40] == 0;
    }
LABEL_111:
    if (v40 >= kDquadTransition[v42] || v41)
    {
      unsigned int v44 = kDQuadParamTable[160 * v42 + 4 + 10 * v40] - v41;
      if (v41) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v17 >= v44;
      unsigned int v46 = v17 - v44;
      BOOL v71 = v46 != 0 && v50;
      int v47 = v31 & ~(-1 << v46);
      if (!v71) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      BOOL v71 = v48 < 1;
      unsigned int v49 = __clz(v48 + v20 - v31);
      BOOL v50 = v71 || v49 >= v39;
      if (v50)
      {
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v273 + v7) = ++v40;
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      unsigned int v51 = kDquadMaxMode[v42];
      if (v51 >= v40) {
        unsigned int v51 = v40;
      }
      *(&v273 + v7) = v51;
    }
LABEL_22:
    char v6 = 1;
    uint64_t v7 = 1u;
  }
  while ((v16 & 1) == 0);
  int v53 = v254;
  int v52 = v255;
  unsigned int v54 = v273;
  unsigned int v55 = v274;
  BOOL v57 = v274 >= v273;
  BOOL v58 = v274 < v273;
  int v59 = kDQuadParamTable[160 * v255 + 6 + 10 * v274];
  int v251 = kDQuadParamTable[160 * v254 + 6 + 10 * v273];
  int v56 = v251;
  int v252 = v59;
  v253[0] = v251;
  v253[1] = v59;
  if (*(&v273 + v57) == *(&v273 + v58))
  {
    int v60 = v251;
  }
  else
  {
    int v61 = *(_DWORD *)((unint64_t)v253 | (4 * v58));
    int v60 = v251;
    if (v61 >= 1)
    {
      *(_DWORD *)((unint64_t)&v251 | (4 * v58)) = 0;
      *(_DWORD *)((unint64_t)&v251 | (4 * v57)) += v61;
      int v60 = v251;
    }
  }
  int8x16_t v62 = &kDQuadParamTable[160 * v53 + 10 * v54];
  unint64_t v63 = *((void *)v62 + 1);
  unsigned int v65 = v62[4];
  unsigned int v64 = v62[5];
  if (a4) {
    BOOL v66 = v43 == 0;
  }
  else {
    BOOL v66 = 1;
  }
  int v67 = v66;
  int v235 = v67;
  unsigned int v249 = v65;
  unsigned int v247 = v64;
  int v68 = v60 - v56;
  if (v68 < 0)
  {
    if (kDQuadParamTable[160 * v53 + 7 + 10 * v54] < -v68)
    {
      unsigned int v247 = --v64;
      if (!kDQuadParamTable[160 * v53 + 8 + 10 * v54])
      {
        int v69 = -1;
LABEL_142:
        unsigned int v249 = v69 + v65;
      }
    }
  }
  else if (v68)
  {
    v64 += v68;
    unsigned int v247 = v64;
    int v69 = v68;
    goto LABEL_142;
  }
  BOOL v71 = v53 == 5 && v54 == 1 && v68 < 2;
  int v72 = v71;
  if (v243 == 4)
  {
    if (v53 == 3) {
      int v73 = 31744;
    }
    else {
      int v73 = 0;
    }
    if (v53 == 4) {
      int v74 = 2139095040;
    }
    else {
      int v74 = v73;
    }
    int v75 = 1 << (v277 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_163;
      }
LABEL_310:
      if ((v74 & ~v259) == 0 || v259 == v75) {
        int v72 = 1;
      }
      if (!v238) {
        goto LABEL_317;
      }
LABEL_164:
      if (v237) {
        goto LABEL_165;
      }
LABEL_324:
      if ((v74 & ~v263) == 0 || v263 == v75) {
        int v72 = 1;
      }
      if (!v239) {
        goto LABEL_331;
      }
LABEL_166:
      if (v241) {
        goto LABEL_167;
      }
LABEL_338:
      if ((v74 & ~v267) == 0 || v267 == v75) {
        int v72 = 1;
      }
      if (!v240) {
        goto LABEL_345;
      }
LABEL_168:
      if (!v242) {
        goto LABEL_169;
      }
    }
    else
    {
      if ((v74 & ~v257) == 0 || v257 == v75) {
        int v72 = 1;
      }
      if (!v236) {
        goto LABEL_310;
      }
LABEL_163:
      if (v238) {
        goto LABEL_164;
      }
LABEL_317:
      if ((v74 & ~v261) == 0 || v261 == v75) {
        int v72 = 1;
      }
      if (!v237) {
        goto LABEL_324;
      }
LABEL_165:
      if (v239) {
        goto LABEL_166;
      }
LABEL_331:
      if ((v74 & ~v265) == 0 || v265 == v75) {
        int v72 = 1;
      }
      if (!v241) {
        goto LABEL_338;
      }
LABEL_167:
      if (v240) {
        goto LABEL_168;
      }
LABEL_345:
      if ((v74 & ~v269) == 0 || v269 == v75) {
        int v72 = 1;
      }
      if (!v242)
      {
LABEL_169:
        if ((v74 & ~v271) == 0 || v271 == v75) {
          int v72 = 1;
        }
      }
    }
  }
  BOOL v71 = v63 >> v64 > 0x10;
  int v77 = v67;
  if (v71) {
    int v77 = 1;
  }
  int v78 = v77 | v72;
  int8x16_t v79 = &kDQuadParamTable[160 * v52 + 10 * v55];
  unint64_t v80 = *((void *)v79 + 1);
  unsigned int v81 = v79[4];
  unsigned int v82 = v79[5];
  unsigned int v250 = v81;
  unsigned int v248 = v82;
  int v83 = v252 - v59;
  if (v252 - v59 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v55] < v59 - v252)
    {
      unsigned int v248 = --v82;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v55])
      {
        int v84 = -1;
LABEL_181:
        unsigned int v250 = v84 + v81;
      }
    }
  }
  else if (v252 != v59)
  {
    v82 += v83;
    unsigned int v248 = v82;
    int v84 = v252 - v59;
    goto LABEL_181;
  }
  if (v52 == 5 && v55 == 1 && v83 < 2) {
    int v78 = 1;
  }
  if (v243 == 4)
  {
    if (v52 == 3) {
      int v85 = 31744;
    }
    else {
      int v85 = 0;
    }
    if (v52 == 4) {
      int v85 = 2139095040;
    }
    int v86 = 1 << (v278 - 1);
    if (v67)
    {
      if (v236) {
        goto LABEL_196;
      }
LABEL_360:
      if ((v85 & ~v260) == 0 || v260 == v86) {
        int v78 = 1;
      }
      if (!v238) {
        goto LABEL_367;
      }
LABEL_197:
      if (v237) {
        goto LABEL_198;
      }
LABEL_374:
      if ((v85 & ~v264) == 0 || v264 == v86) {
        int v78 = 1;
      }
      if (!v239) {
        goto LABEL_381;
      }
LABEL_199:
      if (v241) {
        goto LABEL_200;
      }
LABEL_388:
      if ((v85 & ~v268) == 0 || v268 == v86) {
        int v78 = 1;
      }
      if (!v240) {
        goto LABEL_395;
      }
LABEL_201:
      if (!v242) {
        goto LABEL_202;
      }
    }
    else
    {
      if ((v85 & ~v258) == 0 || v258 == v86) {
        int v78 = 1;
      }
      if (!v236) {
        goto LABEL_360;
      }
LABEL_196:
      if (v238) {
        goto LABEL_197;
      }
LABEL_367:
      if ((v85 & ~v262) == 0 || v262 == v86) {
        int v78 = 1;
      }
      if (!v237) {
        goto LABEL_374;
      }
LABEL_198:
      if (v239) {
        goto LABEL_199;
      }
LABEL_381:
      if ((v85 & ~v266) == 0 || v266 == v86) {
        int v78 = 1;
      }
      if (!v241) {
        goto LABEL_388;
      }
LABEL_200:
      if (v240) {
        goto LABEL_201;
      }
LABEL_395:
      if ((v85 & ~v270) == 0 || v270 == v86) {
        int v78 = 1;
      }
      if (!v242)
      {
LABEL_202:
        if ((v85 & ~v272) == 0 || v272 == v86) {
          int v78 = 1;
        }
      }
    }
  }
  char v88 = 0;
  uint64_t v89 = 0;
  int v90 = v67;
  if (v80 >> v82 > 0x10) {
    int v90 = 1;
  }
  int v230 = v90;
  int v231 = v78;
  uint64_t v246 = 0;
  uint64_t v245 = 0;
  memset(v244, 0, sizeof(v244));
  do
  {
    uint64_t v91 = 0;
    unsigned int v92 = 0;
    unsigned int v93 = *(&v277 + v89);
    unsigned int v94 = *(&v249 + v89);
    if (v93 < v94) {
      unsigned int v94 = *(&v277 + v89);
    }
    *(&v249 + v89) = v94;
    int8x16_t v95 = &kDQuadParamTable[160 * *(&v254 + v89) + 10 * *(&v273 + v89)];
    if (v95[5]) {
      unsigned int v96 = v93;
    }
    else {
      unsigned int v96 = 0;
    }
    if (v96 >= *(&v247 + v89)) {
      int v97 = *(&v247 + v89);
    }
    else {
      int v97 = v96;
    }
    int v98 = v276[v89] & (-1 << (v93 - v94));
    int8x16_t v99 = &v257 + v89;
    int v100 = *v99 - v98;
    uint64_t v101 = 32 * v89;
    int8x16_t v102 = &v256[32 * v89];
    if (v235) {
      int v100 = 0;
    }
    int v103 = v99[2] - v98;
    if (v236) {
      int v103 = 0;
    }
    *int8x16_t v102 = v100;
    v102[1] = v103;
    int v104 = v99[4] - v98;
    if (v238) {
      int v104 = 0;
    }
    int v105 = v99[6] - v98;
    if (v237) {
      int v105 = 0;
    }
    v102[2] = v104;
    v102[3] = v105;
    int v106 = v99[8] - v98;
    if (v239) {
      int v106 = 0;
    }
    int v107 = v99[10] - v98;
    if (v241) {
      int v107 = 0;
    }
    v102[4] = v106;
    v102[5] = v107;
    int v108 = v99[12] - v98;
    if (v240) {
      int v108 = 0;
    }
    int v109 = v99[14] - v98;
    if (v242) {
      int v109 = 0;
    }
    v102[6] = v108;
    v102[7] = v109;
    char v110 = v88;
    uint64_t v111 = -1 << v93;
    *(&v247 + v89) = v97;
    unint64_t v112 = *((void *)v95 + 1);
    *((_DWORD *)&v246 + v89) = v98;
    unint64_t v113 = v112 >> v97;
    int v114 = ~v111;
    if (v113 <= 1) {
      unint64_t v115 = 1;
    }
    else {
      unint64_t v115 = v113;
    }
    uint64_t v116 = 2 * v275[v89];
    do
    {
      if (v116 != v91)
      {
        if (v97) {
          unint64_t v117 = *(unsigned int *)&v256[v101] / v115;
        }
        else {
          LODWORD(v117) = 0;
        }
        int8x16_t v118 = (int *)v244 + 7 * v89 + v92;
        *int8x16_t v118 = v117;
        if (v113 >= 2)
        {
          unint64_t v119 = *(unsigned int *)&v256[v101];
          if (v119)
          {
            if (v119 / v115 * v115 == v119 && ((v119 / v115) & 1) != 0)
            {
              if (v98 || v117 != 1)
              {
                if ((v243 | 2) != 3
                  || (uint64_t v121 = v99[v91], v122 = v253[v89 + 2], v121 != v122)
                  && ((v243 | 2) != 3 || v115 + v122 != v121))
                {
                  LODWORD(v117) = v117 - 1;
                  *int8x16_t v118 = v117;
                }
              }
              else
              {
                LODWORD(v117) = 1;
              }
            }
          }
        }
        if ((unint64_t)v117 >> v97 || v99[v91] == v114) {
          *int8x16_t v118 = ~(-1 << v97);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91 + 1) >= v43
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91) >= a4)
        {
          *int8x16_t v118 = 0;
        }
        ++v92;
      }
      v101 += 4;
      v91 += 2;
    }
    while (v91 != 16);
    char v88 = 1;
    uint64_t v89 = 1;
  }
  while ((v110 & 1) == 0);
  uint64_t result = v230 | v231;
  int8x16_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if (result == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v277;
    unsigned int v130 = v278;
    uint64_t v131 = v277 - 4;
    uint64_t v132 = v278 - 4;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= v43 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v257 + 2 * v127) >> 4;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      if (v129 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x40)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 4;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_289:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_293;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v257 + 2 * v127 + 1) >> 4;
        if (v132 <= 0x100)
        {
LABEL_293:
          if (v130 != 4 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x40)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 4;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return result;
      }
    }
  }
  unsigned int v147 = v273;
  char v148 = LOBYTE(v276[0]) | v273;
  if (v276[0] | v273)
  {
    char v148 = v273 - 2;
    if (v273 <= 2)
    {
      char v148 = 0;
      char v149 = 0;
      unsigned int v150 = v273 + 1;
      goto LABEL_404;
    }
    unsigned int v166 = 0;
    unsigned int v150 = 0;
    int v165 = 0;
    char v149 = 1;
  }
  else
  {
    char v149 = 0;
    unsigned int v150 = 0;
LABEL_404:
    int v165 = 1;
    unsigned int v166 = 2;
  }
  *v125 |= (unint64_t)(v148 & 7) << v126;
  uint64_t v167 = v126 | 3;
  unsigned int v168 = v274;
  if (v276[1] | v274)
  {
    char v169 = v274 - 2;
    if (v274 <= 2)
    {
      char v169 = 0;
      char v170 = 0;
      unsigned int v171 = v274 + 1;
      goto LABEL_410;
    }
    unsigned int v173 = 0;
    unsigned int v171 = 0;
    int v172 = 0;
    char v170 = 1;
  }
  else
  {
    char v169 = 0;
    char v170 = 0;
    unsigned int v171 = 0;
LABEL_410:
    int v172 = 1;
    unsigned int v173 = 2;
  }
  if ((unint64_t)(v167 - v126 - 62) >= 0xFFFFFFFFFFFFFFBFLL)
  {
    *v125 |= (unint64_t)(v169 & 7) << v167;
    uint64_t v167 = v126 | 6;
  }
  if (!v165)
  {
    uint64_t v175 = 0;
    int v176 = 6;
    if (v172) {
      goto LABEL_427;
    }
LABEL_420:
    unsigned int v177 = v277;
    if (!v147) {
      goto LABEL_435;
    }
    goto LABEL_439;
  }
  unint64_t v174 = v166;
  if (v167 - v126 + (unint64_t)v166 > 0x40) {
    char v149 = 1;
  }
  if (v149)
  {
    uint64_t v175 = 0;
  }
  else
  {
    uint64_t v175 = 0;
    uint64_t v178 = 0;
    do
    {
      unint64_t v179 = 64 - v167;
      if (64 - v167 >= v174) {
        unint64_t v179 = v174;
      }
      v125[v175] |= (((unint64_t)v150 >> v178) & ~(-1 << v179)) << v167;
      v178 += v179;
      unint64_t v180 = v179 + v167;
      v175 += v180 >> 6;
      uint64_t v167 = v180 & 0x3F;
      v174 -= v179;
    }
    while (v174);
  }
  int v176 = v166 + 6;
  if (!v172) {
    goto LABEL_420;
  }
LABEL_427:
  unint64_t v181 = v173;
  if (v167 - v126 + (v175 << 6) + (unint64_t)v173 > 0x40) {
    char v170 = 1;
  }
  if ((v170 & 1) == 0)
  {
    uint64_t v182 = 0;
    do
    {
      unint64_t v183 = 64 - v167;
      if (64 - v167 >= v181) {
        unint64_t v183 = v181;
      }
      v125[v175] |= (((unint64_t)v171 >> v182) & ~(-1 << v183)) << v167;
      v182 += v183;
      unint64_t v184 = v183 + v167;
      v175 += v184 >> 6;
      uint64_t v167 = v184 & 0x3F;
      v181 -= v183;
    }
    while (v181);
  }
  v176 += v173;
  unsigned int v177 = v277;
  if (!v147)
  {
LABEL_435:
    if (v177 != 2 && v177 < 0x10)
    {
      unsigned int v185 = v278;
      if (!v168) {
        goto LABEL_500;
      }
LABEL_447:
      unsigned int v192 = v250;
      if (v250 <= 0x100 && v250 && v167 - v126 + (v175 << 6) + (unint64_t)v250 <= 0x40)
      {
        uint64_t v193 = 0;
        unint64_t v194 = (HIDWORD(v246) >> (v185 - v250));
        unint64_t v195 = v250;
        do
        {
          unint64_t v196 = 64 - v167;
          if (64 - v167 >= v195) {
            unint64_t v196 = v195;
          }
          v125[v175] |= ((v194 >> v193) & ~(-1 << v196)) << v167;
          v193 += v196;
          unint64_t v197 = v196 + v167;
          v175 += v197 >> 6;
          uint64_t v167 = v197 & 0x3F;
          v195 -= v196;
        }
        while (v195);
      }
      v176 += v192;
      goto LABEL_455;
    }
  }
LABEL_439:
  unsigned int v186 = v249;
  if (v249 <= 0x100 && v249 && v167 - v126 + (v175 << 6) + (unint64_t)v249 <= 0x40)
  {
    uint64_t v187 = 0;
    unint64_t v188 = v246 >> (v177 - v249);
    unint64_t v189 = v249;
    do
    {
      unint64_t v190 = 64 - v167;
      if (64 - v167 >= v189) {
        unint64_t v190 = v189;
      }
      v125[v175] |= ((v188 >> v187) & ~(-1 << v190)) << v167;
      v187 += v190;
      unint64_t v191 = v190 + v167;
      v175 += v191 >> 6;
      uint64_t v167 = v191 & 0x3F;
      v189 -= v190;
    }
    while (v189);
  }
  v176 += v186;
  unsigned int v185 = v278;
  if (v168) {
    goto LABEL_447;
  }
LABEL_500:
  if (v185 == 2 || v185 >= 0x10) {
    goto LABEL_447;
  }
LABEL_455:
  unint64_t v198 = v247;
  if (v247)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v199 = 0;
      unint64_t v200 = v275[0];
      unint64_t v201 = 3;
      do
      {
        unint64_t v202 = 64 - v167;
        if (64 - v167 >= v201) {
          unint64_t v202 = v201;
        }
        v125[v175] |= ((v200 >> v199) & ~(-1 << v202)) << v167;
        v199 += v202;
        unint64_t v203 = v202 + v167;
        v175 += v203 >> 6;
        uint64_t v167 = v203 & 0x3F;
        v201 -= v202;
      }
      while (v201);
    }
    v176 += 3;
  }
  unint64_t v204 = v248;
  if (v248)
  {
    if ((unint64_t)(v167 - v126 + (v175 << 6) + 3) <= 0x40)
    {
      uint64_t v205 = 0;
      unint64_t v206 = v275[1];
      unint64_t v207 = 3;
      do
      {
        unint64_t v208 = 64 - v167;
        if (64 - v167 >= v207) {
          unint64_t v208 = v207;
        }
        v125[v175] |= ((v206 >> v205) & ~(-1 << v208)) << v167;
        v205 += v208;
        unint64_t v209 = v208 + v167;
        v175 += v209 >> 6;
        uint64_t v167 = v209 & 0x3F;
        v207 -= v208;
      }
      while (v207);
    }
    v176 += 3;
  }
  unsigned int v210 = 64 - v176;
  unsigned int v211 = (64 - v176) / 7u;
  unint64_t v212 = v210 % 7;
  if ((v212 - 257) >= 0xFFFFFF00 && v167 - v126 + (v175 << 6) + v212 <= 0x40)
  {
    do
    {
      unint64_t v213 = 64 - v167;
      if (64 - v167 >= v212) {
        unint64_t v213 = v212;
      }
      unint64_t v214 = v213 + v167;
      v175 += v214 >> 6;
      uint64_t v167 = v214 & 0x3F;
      v212 -= v213;
    }
    while (v212);
  }
  uint64_t v215 = 0;
  int v216 = v204 + v198;
  while (2)
  {
    if (v198 && v198 <= 0x100 && v167 - v126 + (v175 << 6) + v198 <= 0x40)
    {
      uint64_t v217 = 0;
      unint64_t v218 = *((unsigned int *)v244 + v215);
      unint64_t v219 = v198;
      do
      {
        unint64_t v220 = 64 - v167;
        if (64 - v167 >= v219) {
          unint64_t v220 = v219;
        }
        v125[v175] |= ((v218 >> v217) & ~(-1 << v220)) << v167;
        v217 += v220;
        unint64_t v221 = v220 + v167;
        v175 += v221 >> 6;
        uint64_t v167 = v221 & 0x3F;
        v219 -= v220;
      }
      while (v219);
    }
    if (v204)
    {
      if (v204 <= 0x100 && v167 - v126 + (v175 << 6) + v204 <= 0x40)
      {
        uint64_t v222 = 0;
        unint64_t v223 = *((unsigned int *)&v244[1] + v215 + 3);
        unint64_t v224 = v204;
        do
        {
          unint64_t v225 = 64 - v167;
          if (64 - v167 >= v224) {
            unint64_t v225 = v224;
          }
          v125[v175] |= ((v223 >> v222) & ~(-1 << v225)) << v167;
          v222 += v225;
          unint64_t v226 = v225 + v167;
          v175 += v226 >> 6;
          uint64_t v167 = v226 & 0x3F;
          v224 -= v225;
        }
        while (v224);
      }
      unint64_t v227 = v211 - v216;
      if (v211 != v216)
      {
LABEL_493:
        if (v227 <= 0x100 && v167 - v126 + (v175 << 6) + v227 <= 0x40)
        {
          do
          {
            unint64_t v228 = 64 - v167;
            if (64 - v167 >= v227) {
              unint64_t v228 = v227;
            }
            unint64_t v229 = v228 + v167;
            v175 += v229 >> 6;
            uint64_t v167 = v229 & 0x3F;
            v227 -= v228;
          }
          while (v227);
        }
      }
    }
    else
    {
      unint64_t v227 = v211 - v198;
      if (v211 != v198) {
        goto LABEL_493;
      }
    }
    if (++v215 != 7) {
      continue;
    }
    return result;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int8x16_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int8x8_t a5, double a6, int8x8_t a7)
{
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7 + 14;
  uint64_t v10 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x33) {
    v10 |= *(void *)(v8 + 8) << (-8 * (a3 & 7u));
  }
  unsigned int v11 = 4 * v10;
  uint32x2_t v12 = (uint32x2_t)vdup_n_s32(v11);
  a5.i32[0] = v11;
  a7.i32[0] = a4 >> 6;
  v13.i32[0] = vorr_s8(a5, a7).u32[0];
  v13.i32[1] = vshr_n_u32(v12, 5uLL).i32[1];
  int16x4_t v14 = (int16x4_t)vand_s8(v13, (int8x8_t)0x1F0000001FLL);
  v14.i8[1] = v14.i8[4];
  int16x4_t v15 = (int16x4_t)vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(v12, (uint32x2_t)0xFFFFFFF3FFFFFFF6), (int8x8_t)0x700000007), (int32x2_t)0x100000001);
  v15.i8[1] = v15.i8[4];
  unint64_t v16 = v7 + 30;
  unint64_t v17 = v9 >> 6;
  unint64_t v18 = v9 & 0x3E;
  uint64_t v19 = *(void *)(v8 + 8 * v17) >> v18;
  if (v18 >= 0x31) {
    v19 |= *(void *)(v8 + 8 * v17 + 8) << -(char)v18;
  }
  unint64_t v20 = (8 * (a3 & 7)) | 0x100;
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(v14, 0);
  int8x16_t v22 = (int8x16_t)vdupq_lane_s16(v15, 0);
  v23.i64[0] = 0x303030303030303;
  v23.i64[1] = 0x303030303030303;
  int8x16_t v24 = vandq_s8(v21, v23);
  int8x16_t v25 = vbicq_s8(v22, vceqq_s8(v24, v23));
  v23.i64[0] = 0x202020202020202;
  v23.i64[1] = 0x202020202020202;
  int8x16_t v26 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v21.i8), (int8x8_t)0x4000400040004)))), v23);
  if (vmaxvq_s8(v26) < 1)
  {
    int v36 = 0;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    int8x16_t v38 = v25;
    int8x16_t v39 = v25;
    int8x16_t v40 = v25;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = v25;
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v44.i64[0] = -1;
    v44.i64[1] = -1;
  }
  else
  {
    int16x8_t v27 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v26, v26));
    int32x4_t v28 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v27, v27));
    unint64_t v29 = vpaddq_s32(v28, v28).u64[0];
    v30.i64[0] = v29;
    v30.i64[1] = HIDWORD(v29);
    int64x2_t v31 = v30;
    unint64_t v32 = vaddvq_s64(v30);
    unint64_t v33 = v32 + v16;
    if (v32 <= 0x80 && v20 >= v33)
    {
      unint64_t v45 = v16 & 0x3E;
      int64x2_t v46 = vaddq_s64(vzip1q_s64((int64x2_t)0, v31), vdupq_n_s64(v45));
      int v47 = (int64x2_t *)(v8 + ((v16 >> 3) & 8));
      int32x4_t v35 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v47, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47->i64[0], 0), (uint64x2_t)vnegq_s64(v46)));
      if (v32 + v45 < 0x81)
      {
        int v36 = 0;
      }
      else
      {
        int v36 = 0;
        int32x4_t v35 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v47[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v46)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v47[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v46))), (int8x16_t)v35);
      }
      unint64_t v16 = v33;
    }
    else
    {
      int32x4_t v35 = 0uLL;
      int v36 = 1;
    }
    int32x2_t v48 = vzip1_s32(*(int32x2_t *)v28.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL));
    v49.i64[0] = v48.u32[0];
    v49.i64[1] = v48.u32[1];
    int32x4_t v50 = (int32x4_t)vshlq_u64((uint64x2_t)v35, (uint64x2_t)vnegq_s64(v49));
    *(int32x2_t *)v35.i8 = vmovn_s64((int64x2_t)v35);
    *(int32x2_t *)v50.i8 = vmovn_s64((int64x2_t)v50);
    int16x8_t v51 = (int16x8_t)vzip1q_s32(v35, v50);
    int16x8_t v52 = (int16x8_t)vshlq_u32((uint32x4_t)v51, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v27.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL)))));
    *(int16x4_t *)v51.i8 = vmovn_s32((int32x4_t)v51);
    *(int16x4_t *)v52.i8 = vmovn_s32((int32x4_t)v52);
    int16x8_t v53 = vzip1q_s16(v51, v52);
    *(int8x8_t *)v53.i8 = vzip1_s8(vmovn_s16(v53), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v53, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v26.i8, *(int8x8_t *)v21.i8))))));
    v51.i64[0] = 0x101010101010101;
    v51.i64[1] = 0x101010101010101;
    int8x16_t v54 = vshlq_s8((int8x16_t)v51, v26);
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    v54.i64[0] = vqtbl1q_s8(vandq_s8((int8x16_t)v53, vaddq_s8(v54, (int8x16_t)v51)), (int8x16_t)xmmword_242EA7470).u64[0];
    int8x16_t v55 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 1);
    int8x16_t v57 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 2);
    int8x16_t v58 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v54.i8, 3);
    int8x16_t v42 = vsubq_s8(v25, v55);
    int8x16_t v38 = vsubq_s8(v25, v56);
    int8x16_t v39 = vsubq_s8(v25, v57);
    int8x16_t v40 = vsubq_s8(v25, v58);
    int8x16_t v44 = vceqzq_s8(v55);
    int8x16_t v43 = vceqzq_s8(v56);
    int8x16_t v41 = vceqzq_s8(v57);
    int8x16_t v37 = vceqzq_s8(v58);
  }
  v59.i64[0] = 0x808080808080808;
  v59.i64[1] = 0x808080808080808;
  int32x4_t v60 = 0uLL;
  int8x16_t v61 = vandq_s8(vextq_s8(vtstq_s8(v21, v59), (int8x16_t)0, 0xEuLL), v25);
  int16x8_t v62 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v61, v61));
  int32x4_t v63 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v62, v62));
  unint64_t v64 = vpaddq_s32(v63, v63).u64[0];
  v65.i64[0] = v64;
  v65.i64[1] = HIDWORD(v64);
  int64x2_t v66 = v65;
  unint64_t v67 = vaddvq_s64(v65);
  unint64_t v68 = v67 + v16;
  if (v67 <= 0x80 && v20 >= v68)
  {
    unint64_t v70 = v16 & 0x3F;
    int64x2_t v71 = vaddq_s64(vzip1q_s64((int64x2_t)0, v66), vdupq_n_s64(v70));
    int v72 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v60 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v72, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72->i64[0], 0), (uint64x2_t)vnegq_s64(v71)));
    if (v67 + v70 >= 0x81) {
      int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v72[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v71)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v72[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v71))), (int8x16_t)v60);
    }
    unint64_t v16 = v68;
  }
  else
  {
    int v36 = 1;
  }
  int v73 = v21.i8[0] & 3;
  if (v73 == 2)
  {
    BOOL v74 = v20 >= v16 + 4;
    if (v20 >= v16 + 4) {
      v16 += 4;
    }
    unint64_t v75 = v16 + 4;
    if (!v74 || v20 < v75) {
      int v36 = 1;
    }
    if (v20 >= v75) {
      v16 += 4;
    }
  }
  int32x4_t v77 = 0uLL;
  int8x16_t v78 = vextq_s8((int8x16_t)0, v42, 0xEuLL);
  int16x8_t v79 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v78, v78));
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v79, v79));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v84 + v16;
  if (v84 <= 0x80 && v20 >= v85)
  {
    unint64_t v88 = v16 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v88));
    int v90 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
    int32x4_t v87 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v84 + v88 >= 0x81) {
      int32x4_t v87 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v87);
    }
    unint64_t v16 = v85;
  }
  else
  {
    int v36 = 1;
    int32x4_t v87 = 0uLL;
  }
  int16x8_t v91 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v38, v38));
  int32x4_t v92 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v91, v91));
  unint64_t v93 = vpaddq_s32(v92, v92).u64[0];
  v94.i64[0] = v93;
  v94.i64[1] = HIDWORD(v93);
  int64x2_t v95 = v94;
  unint64_t v96 = vaddvq_s64(v94);
  if (v96 < 0x81)
  {
    int32x2_t v97 = vzip1_s32(*(int32x2_t *)v92.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v92, (int8x16_t)v92, 8uLL));
    v98.i64[0] = v97.u32[0];
    v98.i64[1] = v97.u32[1];
    int64x2_t v99 = v98;
    int32x4_t v100 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v91.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL)));
    int16x8_t v101 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)));
    unint64_t v102 = v96 + v16;
    if (v20 >= v96 + v16)
    {
      unint64_t v103 = v16 & 0x3F;
      int64x2_t v104 = vaddq_s64(vzip1q_s64((int64x2_t)0, v95), vdupq_n_s64(v103));
      int v105 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
      if (v96 + v103 >= 0x81) {
        int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), (int8x16_t)v77);
      }
      unint64_t v16 = v102;
    }
    else
    {
      int v36 = 1;
    }
    int32x4_t v106 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v99));
    *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
    *(int32x2_t *)v106.i8 = vmovn_s64((int64x2_t)v106);
    int16x8_t v107 = (int16x8_t)vzip1q_s32(v77, v106);
    int16x8_t v108 = (int16x8_t)vshlq_u32((uint32x4_t)v107, (uint32x4_t)vnegq_s32(v100));
    *(int16x4_t *)v107.i8 = vmovn_s32((int32x4_t)v107);
    *(int16x4_t *)v108.i8 = vmovn_s32((int32x4_t)v108);
    int16x8_t v109 = vzip1q_s16(v107, v108);
    int16x8_t v110 = (int16x8_t)vshlq_u16((uint16x8_t)v109, (uint16x8_t)vnegq_s16(v101));
    *(int8x8_t *)v109.i8 = vmovn_s16(v109);
    *(int8x8_t *)v110.i8 = vmovn_s16(v110);
    int32x4_t v77 = (int32x4_t)vzip1q_s8((int8x16_t)v109, (int8x16_t)v110);
  }
  else
  {
    int v36 = 1;
  }
  int16x8_t v111 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v39, v39));
  int32x4_t v112 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v111, v111));
  unint64_t v113 = vpaddq_s32(v112, v112).u64[0];
  v114.i64[0] = v113;
  v114.i64[1] = HIDWORD(v113);
  int64x2_t v115 = v114;
  unint64_t v116 = vaddvq_s64(v114);
  if (v116 <= 0x80)
  {
    int32x2_t v118 = vzip1_s32(*(int32x2_t *)v112.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v112, (int8x16_t)v112, 8uLL));
    v119.i64[0] = v118.u32[0];
    v119.i64[1] = v118.u32[1];
    int64x2_t v120 = v119;
    int32x4_t v121 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v111.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v111, (int8x16_t)v111, 8uLL)));
    int16x8_t v122 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)));
    unint64_t v123 = v116 + v16;
    if (v20 >= v116 + v16)
    {
      unint64_t v125 = v16 & 0x3F;
      int64x2_t v126 = vaddq_s64(vzip1q_s64((int64x2_t)0, v115), vdupq_n_s64(v125));
      uint64_t v127 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
      int32x4_t v124 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v127, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127->i64[0], 0), (uint64x2_t)vnegq_s64(v126)));
      if (v116 + v125 >= 0x81) {
        int32x4_t v124 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v127[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v126)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v127[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v126))), (int8x16_t)v124);
      }
      unint64_t v16 = v123;
    }
    else
    {
      int32x4_t v124 = 0uLL;
      int v36 = 1;
    }
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v124, (uint64x2_t)vnegq_s64(v120));
    *(int32x2_t *)v124.i8 = vmovn_s64((int64x2_t)v124);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    int16x8_t v129 = (int16x8_t)vzip1q_s32(v124, v128);
    int16x8_t v130 = (int16x8_t)vshlq_u32((uint32x4_t)v129, (uint32x4_t)vnegq_s32(v121));
    *(int16x4_t *)v129.i8 = vmovn_s32((int32x4_t)v129);
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    int16x8_t v131 = vzip1q_s16(v129, v130);
    int16x8_t v132 = (int16x8_t)vshlq_u16((uint16x8_t)v131, (uint16x8_t)vnegq_s16(v122));
    *(int8x8_t *)v131.i8 = vmovn_s16(v131);
    *(int8x8_t *)v132.i8 = vmovn_s16(v132);
    int8x16_t v117 = vzip1q_s8((int8x16_t)v131, (int8x16_t)v132);
  }
  else
  {
    int v36 = 1;
    int8x16_t v117 = 0uLL;
  }
  int16x8_t v133 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v40, v40));
  int32x4_t v134 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v133, v133));
  unint64_t v135 = vpaddq_s32(v134, v134).u64[0];
  v136.i64[0] = v135;
  v136.i64[1] = HIDWORD(v135);
  int64x2_t v137 = v136;
  unint64_t v138 = vaddvq_s64(v136);
  if (v138 > 0x80 || v20 < v138 + v16) {
    goto LABEL_65;
  }
  int64x2_t v139 = vaddq_s64(vzip1q_s64((int64x2_t)0, v137), vdupq_n_s64(v16 & 0x3F));
  unint64_t v140 = (int64x2_t *)(v8 + 8 * (v16 >> 6));
  int64x2_t v141 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v140, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140->i64[0], 0), (uint64x2_t)vnegq_s64(v139)));
  if (v138 + (v16 & 0x3F) >= 0x81) {
    int64x2_t v141 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v140[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v139)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v140[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v139))), (int8x16_t)v141);
  }
  if (v36 || (uint64_t v142 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v142) - (v138 + v16) >= 9))
  {
LABEL_65:
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v202;
LABEL_66:
    *(void *)(v143 & 0xFFFFFFFFFFFFFFF8) |= 255 << ((8 * v143) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
    return v142;
  }
  if (v73 == 2)
  {
    uint64_t v142 = 0;
    unint64_t v143 = (unint64_t)&v203;
    goto LABEL_66;
  }
  int32x2_t v145 = vzip1_s32(*(int32x2_t *)v63.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL));
  int32x2_t v146 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
  v147.i64[0] = v145.u32[0];
  v147.i64[1] = v145.u32[1];
  int64x2_t v148 = v147;
  v147.i64[0] = v146.u32[0];
  v147.i64[1] = v146.u32[1];
  int16x4_t v149 = (int16x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL).u64[0];
  int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v60, (uint64x2_t)vnegq_s64(v148));
  int32x4_t v151 = (int32x4_t)vshlq_u64((uint64x2_t)v87, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v60.i8 = vmovn_s64((int64x2_t)v60);
  *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
  *(int32x2_t *)v87.i8 = vmovn_s64((int64x2_t)v87);
  *(int32x2_t *)v151.i8 = vmovn_s64((int64x2_t)v151);
  int16x8_t v152 = (int16x8_t)vzip1q_s32(v60, v150);
  int16x8_t v153 = (int16x8_t)vzip1q_s32(v87, v151);
  int16x8_t v154 = (int16x8_t)vshlq_u32((uint32x4_t)v152, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v62.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL)))));
  int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v153, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, v149))));
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
  *(int16x4_t *)v153.i8 = vmovn_s32((int32x4_t)v153);
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  int16x8_t v156 = vzip1q_s16(v152, v154);
  int16x8_t v157 = vzip1q_s16(v153, v155);
  int16x8_t v158 = (int16x8_t)vshlq_u16((uint16x8_t)v156, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)))));
  int16x8_t v159 = (int16x8_t)vshlq_u16((uint16x8_t)v157, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)))));
  *(int8x8_t *)v156.i8 = vmovn_s16(v156);
  *(int8x8_t *)v158.i8 = vmovn_s16(v158);
  *(int8x8_t *)v157.i8 = vmovn_s16(v157);
  *(int8x8_t *)v159.i8 = vmovn_s16(v159);
  v149.i32[0] = v19;
  v160.i64[0] = 0x808080808080808;
  v160.i64[1] = 0x808080808080808;
  int8x16_t v161 = vzip1q_s8((int8x16_t)v156, (int8x16_t)v158);
  v158.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v158.i64[1] = 0xF8F8F8F8F8F8F8F8;
  int8x16_t v162 = vsubq_s8(v59, v61);
  int8x16_t v163 = vzip1q_s8((int8x16_t)v157, (int8x16_t)v159);
  v159.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v159.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int32x2_t *)v153.i8 = vzip1_s32(*(int32x2_t *)v134.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v134, (int8x16_t)v134, 8uLL));
  v164.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v164.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v165.i64[0] = 0x808080808080808;
  v165.i64[1] = 0x808080808080808;
  v149.i8[1] = BYTE1(v19);
  int8x16_t v166 = vaddq_s8(v61, (int8x16_t)v158);
  int32x4_t v167 = (int32x4_t)vshlq_s8(v163, vsubq_s8(v160, v78));
  int8x16_t v168 = vshlq_s8(v117, vsubq_s8(v160, v39));
  v147.i64[0] = v153.u32[0];
  v147.i64[1] = v153.u32[1];
  int16x8_t v169 = (int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v40.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
  int8x16_t v170 = vaddq_s8(v40, v164);
  int8x16_t v171 = vsubq_s8(v165, v40);
  int8x16_t v172 = (int8x16_t)vdupq_lane_s16(v149, 0);
  int8x16_t v173 = vshlq_s8(vshlq_s8(v161, v162), v166);
  int8x16_t v174 = vshlq_s8((int8x16_t)v167, vaddq_s8(v78, (int8x16_t)v159));
  int32x4_t v175 = (int32x4_t)vshlq_u64((uint64x2_t)v141, (uint64x2_t)vnegq_s64(v147));
  *(int32x2_t *)v167.i8 = vmovn_s64(v141);
  *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
  int16x8_t v176 = (int16x8_t)vzip1q_s32(v167, v175);
  int16x8_t v177 = (int16x8_t)vshlq_u32((uint32x4_t)v176, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v133.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v133, (int8x16_t)v133, 8uLL)))));
  *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
  *(int16x4_t *)v177.i8 = vmovn_s32((int32x4_t)v177);
  int16x8_t v178 = vzip1q_s16(v176, v177);
  int16x8_t v179 = (int16x8_t)vshlq_u16((uint16x8_t)v178, (uint16x8_t)vnegq_s16(v169));
  *(int8x8_t *)v178.i8 = vmovn_s16(v178);
  *(int8x8_t *)v179.i8 = vmovn_s16(v179);
  int8x16_t v180 = vaddq_s8(vandq_s8(v173, v44), v174);
  int8x16_t v181 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v173.i8, 0);
  int8x16_t v182 = vsubq_s8(v180, vandq_s8(v44, v181));
  int8x16_t v183 = vsubq_s8(vshlq_s8(vshlq_s8((int8x16_t)v77, vsubq_s8(v160, v38)), vaddq_s8(v38, (int8x16_t)v159)), vandq_s8(v43, v181));
  int8x16_t v184 = vsubq_s8(vshlq_s8(v168, vaddq_s8(v39, (int8x16_t)v159)), vandq_s8(v41, v181));
  int8x16_t v185 = vsubq_s8(vshlq_s8(vshlq_s8(vzip1q_s8((int8x16_t)v178, (int8x16_t)v179), v171), v170), vandq_s8(v37, v181));
  v186.i64[0] = 0x101010101010101;
  v186.i64[1] = 0x101010101010101;
  if (vaddlvq_s8(vceqq_s8(v24, v186)))
  {
    int8x16_t v187 = vandq_s8(v21, v186);
    int8x16_t v188 = v182;
    v188.i16[0] = v182.i16[7];
    v188.i16[7] = v182.i16[0];
    int8x16_t v189 = vnegq_s8(v187);
    int8x16_t v190 = vbslq_s8(v189, v188, v182);
    int8x16_t v191 = vaddq_s8(v190, vandq_s8(vqtbl1q_s8(v190, (int8x16_t)xmmword_242EA7480), v189));
    int8x16_t v182 = vaddq_s8(v191, vandq_s8(vqtbl1q_s8(v191, (int8x16_t)xmmword_242EA7490), v189));
    int8x16_t v192 = vaddq_s8(vandq_s8(vqtbl1q_s8(v183, (int8x16_t)xmmword_242EA74A0), v189), v183);
    int8x16_t v183 = vaddq_s8(vandq_s8(vqtbl1q_s8(v192, (int8x16_t)xmmword_242EA74B0), v189), v192);
    int8x16_t v193 = vaddq_s8(vandq_s8(vqtbl1q_s8(v184, (int8x16_t)xmmword_242EA74C0), v189), v184);
    int8x16_t v184 = vaddq_s8(vandq_s8(vqtbl1q_s8(v193, (int8x16_t)xmmword_242EA74D0), v189), v193);
    int8x16_t v194 = vaddq_s8(vandq_s8(vqtbl1q_s8(v185, (int8x16_t)xmmword_242EA74E0), v189), v185);
    int8x16_t v185 = vaddq_s8(vandq_s8(vqtbl1q_s8(v194, (int8x16_t)xmmword_242EA74F0), v189), v194);
  }
  int8x16_t v195 = vaddq_s8(v182, v172);
  int8x16_t v196 = vaddq_s8(v183, v172);
  int8x16_t v197 = vaddq_s8(v184, v172);
  int8x16_t v198 = vaddq_s8(v185, v172);
  v199.i64[0] = 0x1010101010101010;
  v199.i64[1] = 0x1010101010101010;
  int8x16_t v200 = vceqzq_s8(vandq_s8(v21, v199));
  *a1 = vaddq_s8(vbicq_s8(vqtbl1q_s8(v195, (int8x16_t)xmmword_242EA7500), v200), v195);
  a1[1] = vaddq_s8(vbicq_s8(vqtbl1q_s8(v197, (int8x16_t)xmmword_242EA7500), v200), v197);
  unint64_t v201 = (int8x16_t *)((char *)a1 + a2);
  *unint64_t v201 = vaddq_s8(vbicq_s8(vqtbl1q_s8(v196, (int8x16_t)xmmword_242EA7500), v200), v196);
  v201[1] = vaddq_s8(vbicq_s8(vqtbl1q_s8(v198, (int8x16_t)xmmword_242EA7500), v200), v198);
  return v142;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(_WORD *a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  uint64_t v98 = *MEMORY[0x263EF8340];
  if (a4) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v82, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v82, a5);
  }
  __int16 v61 = v83;
  unsigned __int8 v75 = v82;
  unsigned __int8 v76 = v84;
  __int16 v73 = v87;
  __int16 v74 = v85;
  unsigned __int8 v77 = v86;
  unsigned __int8 v78 = v88;
  __int16 v71 = v91;
  __int16 v72 = v89;
  unsigned __int8 v79 = v90;
  unsigned __int8 v80 = v92;
  __int16 v58 = v95;
  unsigned __int8 v59 = v94;
  uint64_t v9 = a3 + 8;
  unsigned __int8 v69 = v96;
  __int16 v70 = v93;
  __int16 v57 = v97;
  if ((a4 & 2) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v9, (uint64_t)&v82, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v9, (uint64_t)&v82, a5);
  }
  unsigned __int8 v67 = v84;
  unsigned __int8 v68 = v82;
  __int16 v50 = v85;
  __int16 v51 = v83;
  unsigned __int8 v65 = v88;
  unsigned __int8 v66 = v86;
  __int16 v48 = v89;
  __int16 v49 = v87;
  __int16 v47 = v91;
  unsigned __int8 v63 = v92;
  unsigned __int8 v64 = v90;
  unsigned __int8 v62 = v94;
  __int16 v45 = v95;
  __int16 v46 = v93;
  uint64_t v10 = a3 + 16;
  unsigned __int8 v60 = v96;
  __int16 v44 = v97;
  int v52 = a5;
  if ((a4 & 4) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v10, (uint64_t)&v82, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v10, (uint64_t)&v82, a5);
  }
  unsigned __int8 v55 = v84;
  unsigned __int8 v56 = v82;
  __int16 v42 = v85;
  __int16 v43 = v83;
  unsigned __int8 v53 = v88;
  unsigned __int8 v54 = v86;
  unsigned __int8 v11 = v90;
  __int16 v40 = v89;
  __int16 v41 = v87;
  __int16 v12 = v91;
  unsigned __int8 v13 = v92;
  __int16 v15 = v93;
  unsigned __int8 v14 = v94;
  uint64_t v16 = a3 + 24;
  __int16 v18 = v95;
  unsigned __int8 v17 = v96;
  __int16 v19 = v97;
  if ((a4 & 8) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v16, (uint64_t)&v82, v52);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v16, (uint64_t)&v82, v52);
  }
  a1[6] = v59 | (unsigned __int16)(v58 << 8);
  __int16 v20 = v82;
  *a1 = v75 | (unsigned __int16)(v61 << 8);
  __int16 v21 = v83;
  __int16 v22 = v84;
  a1[1] = v76 | (unsigned __int16)(v74 << 8);
  __int16 v23 = v85;
  __int16 v24 = v86;
  a1[2] = v77 | (unsigned __int16)(v73 << 8);
  __int16 v25 = v87;
  __int16 v26 = v88;
  a1[3] = v78 | (unsigned __int16)(v72 << 8);
  __int16 v27 = v89;
  __int16 v28 = v90;
  a1[4] = v79 | (unsigned __int16)(v71 << 8);
  __int16 v29 = v91;
  uint64_t result = v92;
  a1[5] = v80 | (unsigned __int16)(v70 << 8);
  __int16 v31 = v93;
  a1[7] = v69 | (unsigned __int16)(v57 << 8);
  __int16 v32 = v94;
  a1[8] = v56 | (unsigned __int16)(v43 << 8);
  __int16 v33 = v95;
  a1[9] = v55 | (unsigned __int16)(v42 << 8);
  __int16 v34 = v96;
  __int16 v35 = v20 | (v21 << 8);
  __int16 v36 = v97;
  a1[10] = v54 | (unsigned __int16)(v41 << 8);
  a1[11] = v53 | (unsigned __int16)(v40 << 8);
  __int16 v37 = v22 | (v23 << 8);
  a1[12] = v11 | (unsigned __int16)(v12 << 8);
  a1[13] = v13 | (unsigned __int16)(v15 << 8);
  __int16 v38 = v24 | (v25 << 8);
  a1[14] = v14 | (unsigned __int16)(v18 << 8);
  a1[15] = v17 | (unsigned __int16)(v19 << 8);
  int8x16_t v39 = (_WORD *)((char *)a1 + a2);
  *int8x16_t v39 = v68 | (unsigned __int16)(v51 << 8);
  v39[1] = v67 | (unsigned __int16)(v50 << 8);
  v39[2] = v66 | (unsigned __int16)(v49 << 8);
  v39[3] = v65 | (unsigned __int16)(v48 << 8);
  v39[4] = v64 | (unsigned __int16)(v47 << 8);
  v39[5] = v63 | (unsigned __int16)(v46 << 8);
  v39[6] = v62 | (unsigned __int16)(v45 << 8);
  v39[7] = v60 | (unsigned __int16)(v44 << 8);
  v39[8] = v35;
  v39[9] = v37;
  v39[10] = v38;
  v39[11] = v26 | (v27 << 8);
  v39[12] = v28 | (v29 << 8);
  v39[13] = result | (v31 << 8);
  v39[14] = v32 | (v33 << 8);
  v39[15] = v34 | (v36 << 8);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v10 = a3;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 2) {
    unsigned int v13 = 2;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t v14 = result;
    int v15 = a7;
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, result, a2, v12, v13, a7);
    v10 += result;
  }
  else
  {
    uint64_t v14 = result;
    int v15 = a7;
    *a4 = 0;
  }
  uint64_t v35 = 2 * a2;
  uint64_t v16 = a4 + 1;
  if (a6 <= 2) {
    int v17 = 2;
  }
  else {
    int v17 = a6;
  }
  unsigned int v18 = v17 - 2;
  if (v18 >= 2) {
    int v19 = 2;
  }
  else {
    int v19 = v18;
  }
  if (v12 && v19)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v16, v14 + v35, a2, v12, v19, v15);
    v10 += result;
  }
  else
  {
    *uint64_t v16 = 0;
  }
  __int16 v20 = a4 + 2;
  if (a5 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v13)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v20, v14 + 32, a2, v23, v13, v15);
    v10 += result;
    __int16 v24 = a4 + 3;
  }
  else
  {
    *__int16 v20 = 0;
    __int16 v24 = a4 + 3;
    if (!v23) {
      goto LABEL_33;
    }
  }
  if (v19)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v24, v14 + v35 + 32, a2, v23, v19, v15);
    v10 += result;
    goto LABEL_34;
  }
LABEL_33:
  *__int16 v24 = 0;
LABEL_34:
  __int16 v25 = a4 + 4;
  if (a6 <= 4) {
    int v26 = 4;
  }
  else {
    int v26 = a6;
  }
  unsigned int v27 = v26 - 4;
  if (v27 >= 2) {
    int v28 = 2;
  }
  else {
    int v28 = v27;
  }
  if (v12 && v28)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v25, v14 + 4 * a2, a2, v12, v28, v15);
    v10 += result;
  }
  else
  {
    *__int16 v25 = 0;
  }
  __int16 v29 = a4 + 5;
  if (a6 <= 6) {
    int v30 = 6;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 6;
  if (v31 >= 2) {
    int v32 = 2;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v29, v14 + 6 * a2, a2, v12, v32, v15);
    v10 += result;
    __int16 v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  else
  {
    *__int16 v29 = 0;
    __int16 v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  if (v28)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v33, v14 + 4 * a2 + 32, a2, v23, v28, v15);
    v10 += result;
    __int16 v34 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  unsigned char *v33 = 0;
  __int16 v34 = a4 + 7;
  if (!v23)
  {
LABEL_62:
    *__int16 v34 = 0;
    return result;
  }
LABEL_58:
  if (!v32) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)4,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v34, v14 + 6 * a2 + 32, a2, v23, v32, v15);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(_OWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v302 = 0;
  unint64_t v300 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v301 = (8 * (a3 & 7)) | 0x400;
  unint64_t v299 = 8 * (a3 & 7);
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v304, (uint64_t)v309, (float *)v303.i32, &v299, a4);
  v8.i64[0] = 0x303030303030303;
  v8.i64[1] = 0x303030303030303;
  int8x16_t v9 = vandq_s8(v304, v8);
  int8x16_t v10 = vbicq_s8(v309[0], vceqq_s8(v9, v8));
  v309[0] = v10;
  int8x16_t v305 = v10;
  int8x16_t v306 = v10;
  int8x16_t v307 = v10;
  int8x16_t v308 = v10;
  v11.i64[0] = 0x202020202020202;
  v11.i64[1] = 0x202020202020202;
  int8x16_t v12 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v304.i8), (int16x4_t)0x4000400040004)), v11);
  unint64_t v13 = v299;
  int8x16_t v298 = v9;
  if (vmaxvq_s8(v12) < 1)
  {
    v26.i64[0] = -1;
    v26.i64[1] = -1;
    v27.i64[0] = -1;
    v27.i64[1] = -1;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    v29.i64[0] = -1;
    v29.i64[1] = -1;
  }
  else
  {
    int8x16_t v14 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v12, v12));
    int8x16_t v15 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v14, (int16x8_t)v14));
    unint64_t v16 = vpaddq_s32((int32x4_t)v15, (int32x4_t)v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19;
    unint64_t v21 = v299 + v19;
    if (v301) {
      BOOL v22 = v301 >= v21;
    }
    else {
      BOOL v22 = 1;
    }
    int v23 = !v22;
    if (v19 <= 0x80 && v23 == 0)
    {
      v7.i64[0] = 63;
      int v30 = (int64x2_t *)(v300 + 8 * (v299 >> 6));
      int64x2_t v31 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v299, v7).i64[0], 0), vzip1q_s64((int64x2_t)0, v18));
      int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v30, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30->i64[0], 0), (uint64x2_t)vnegq_s64(v31)));
      if ((v299 & 0x3F) + v20 >= 0x81) {
        int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v30[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v31))), v25);
      }
      unint64_t v13 = v21;
    }
    else
    {
      unsigned __int8 v302 = 1;
      int8x16_t v25 = 0uLL;
    }
    int32x2_t v32 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    v33.i64[0] = v32.u32[0];
    v33.i64[1] = v32.u32[1];
    int64x2_t v34 = (int64x2_t)vshlq_u64((uint64x2_t)v25, (uint64x2_t)vnegq_s64(v33));
    *(int32x2_t *)v25.i8 = vmovn_s64((int64x2_t)v25);
    *(int32x2_t *)v34.i8 = vmovn_s64(v34);
    int16x8_t v35 = (int16x8_t)vzip1q_s32((int32x4_t)v25, (int32x4_t)v34);
    int16x8_t v36 = (int16x8_t)vshlq_u32((uint32x4_t)v35, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    *(int16x4_t *)v35.i8 = vmovn_s32((int32x4_t)v35);
    *(int16x4_t *)v36.i8 = vmovn_s32((int32x4_t)v36);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v35, v36);
    int8x16_t v38 = (int8x16_t)vshlq_u16((uint16x8_t)v37, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)))));
    *(int8x8_t *)v37.i8 = vmovn_s16((int16x8_t)v37);
    *(int8x8_t *)v38.i8 = vmovn_s16((int16x8_t)v38);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    v38.i64[0] = 0x101010101010101;
    v38.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8(v38, v12);
    v38.i64[0] = -1;
    v38.i64[1] = -1;
    int32x4_t v41 = (int32x4_t)vqtbl1q_s8(vandq_s8(v39, vaddq_s8(v40, v38)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
    int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
    int8x16_t v44 = (int8x16_t)vdupq_laneq_s32(v41, 2);
    int8x16_t v45 = (int8x16_t)vdupq_laneq_s32(v41, 3);
    int8x16_t v305 = vsubq_s8(v305, v42);
    int8x16_t v306 = vsubq_s8(v306, v43);
    int8x16_t v307 = vsubq_s8(v307, v44);
    int8x16_t v308 = vsubq_s8(v308, v45);
    int8x16_t v29 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v27 = vceqzq_s8(v44);
    int8x16_t v26 = vceqzq_s8(v45);
  }
  v46.i64[0] = 0x808080808080808;
  v46.i64[1] = 0x808080808080808;
  int8x16_t v47 = 0uLL;
  int8x16_t v48 = vandq_s8(vextq_s8(vtstq_s8(v304, v46), (int8x16_t)0, 0xCuLL), v10);
  int8x16_t v49 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v48, v48));
  int8x16_t v50 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v49, (int16x8_t)v49));
  unint64_t v51 = vpaddq_s32((int32x4_t)v50, (int32x4_t)v50).u64[0];
  v52.i64[0] = v51;
  v52.i64[1] = HIDWORD(v51);
  int64x2_t v53 = v52;
  unint64_t v54 = vaddvq_s64(v52);
  if (v301) {
    BOOL v55 = v301 >= v13 + v54;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = !v55;
  if (v54 <= 0x80 && v56 == 0)
  {
    int64x2_t v58 = vaddq_s64(vdupq_n_s64(v13 & 0x3F), vzip1q_s64((int64x2_t)0, v53));
    unsigned __int8 v59 = (int64x2_t *)(v300 + 8 * (v13 >> 6));
    int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v59, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59->i64[0], 0), (uint64x2_t)vnegq_s64(v58)));
    if ((v13 & 0x3F) + v54 >= 0x81) {
      int8x16_t v47 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v59[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v58))), v47);
    }
    v13 += v54;
  }
  else
  {
    unsigned __int8 v302 = 1;
  }
  int v60 = v304.i8[0] & 3;
  int8x16_t v296 = v26;
  int8x16_t v297 = v29;
  int8x16_t v294 = v28;
  int8x16_t v295 = v27;
  if (v60 == 2)
  {
    unint64_t v61 = v13 + 4;
    if (v301)
    {
      if (v301 < v61)
      {
        unsigned __int8 v302 = 1;
LABEL_39:
        unsigned __int8 v302 = 1;
        goto LABEL_40;
      }
      unint64_t v62 = v13 + 8;
      v13 += 4;
      if (v301 < v62) {
        goto LABEL_39;
      }
      unint64_t v61 = v13;
    }
    unint64_t v13 = v61 + 4;
  }
LABEL_40:
  int8x16_t v63 = 0uLL;
  int8x16_t v64 = vextq_s8((int8x16_t)0, v305, 0xCuLL);
  int8x16_t v65 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v64, v64));
  int8x16_t v66 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v65, (int16x8_t)v65));
  unint64_t v67 = vpaddq_s32((int32x4_t)v66, (int32x4_t)v66).u64[0];
  v68.i64[0] = v67;
  v68.i64[1] = HIDWORD(v67);
  int64x2_t v69 = v68;
  unint64_t v70 = vaddvq_s64(v68);
  unint64_t v71 = v13 + v70;
  if (v301) {
    BOOL v72 = v301 >= v71;
  }
  else {
    BOOL v72 = 1;
  }
  int v73 = !v72;
  if (v70 > 0x80 || v73)
  {
    int v78 = 1;
    unint64_t v76 = v300;
  }
  else
  {
    unint64_t v74 = v13 & 0x3F;
    int64x2_t v75 = vaddq_s64(vdupq_n_s64(v74), vzip1q_s64((int64x2_t)0, v69));
    unint64_t v76 = v300;
    unsigned __int8 v77 = (int64x2_t *)(v300 + 8 * (v13 >> 6));
    int8x16_t v63 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v77, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77->i64[0], 0), (uint64x2_t)vnegq_s64(v75)));
    if (v74 + v70 >= 0x81) {
      int8x16_t v63 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v77[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v75))), v63);
    }
    int v78 = v302;
    unint64_t v13 = v71;
  }
  int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v305, v305));
  int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
  unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v13 + v84;
  if (v301) {
    BOOL v86 = v301 >= v85;
  }
  else {
    BOOL v86 = 1;
  }
  char v87 = !v86;
  int8x16_t v88 = 0uLL;
  if (v84 > 0x80 || (v87 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v85 = v13;
    int8x16_t v92 = 0uLL;
  }
  else
  {
    unint64_t v89 = v13 & 0x3F;
    int64x2_t v90 = vaddq_s64(vdupq_n_s64(v89), vzip1q_s64((int64x2_t)0, v83));
    int v91 = (int64x2_t *)(v76 + 8 * (v13 >> 6));
    int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v90)));
    if (v89 + v84 >= 0x81) {
      int8x16_t v92 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v91[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v90))), v92);
    }
  }
  int8x16_t v93 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v306, v306));
  int8x16_t v94 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v93, (int16x8_t)v93));
  unint64_t v95 = vpaddq_s32((int32x4_t)v94, (int32x4_t)v94).u64[0];
  v96.i64[0] = v95;
  v96.i64[1] = HIDWORD(v95);
  int64x2_t v97 = v96;
  unint64_t v98 = vaddvq_s64(v96);
  unint64_t v99 = v98;
  unint64_t v100 = v85 + v98;
  if (v301) {
    BOOL v101 = v301 >= v100;
  }
  else {
    BOOL v101 = 1;
  }
  char v102 = !v101;
  if (v98 > 0x80 || (v102 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v100 = v85;
  }
  else
  {
    unint64_t v103 = v85 & 0x3F;
    int64x2_t v104 = vaddq_s64(vdupq_n_s64(v103), vzip1q_s64((int64x2_t)0, v97));
    int v105 = (int64x2_t *)(v76 + 8 * (v85 >> 6));
    int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
    if (v103 + v99 >= 0x81) {
      int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v88);
    }
  }
  unint64_t v106 = v100 + v99;
  if (v301) {
    BOOL v107 = v301 >= v106;
  }
  else {
    BOOL v107 = 1;
  }
  char v108 = !v107;
  int8x16_t v109 = 0uLL;
  if (v99 > 0x80 || (v108 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v106 = v100;
    int8x16_t v113 = 0uLL;
  }
  else
  {
    unint64_t v110 = v100 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v97));
    int32x4_t v112 = (int64x2_t *)(v76 + 8 * (v100 >> 6));
    int8x16_t v113 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v99 >= 0x81) {
      int8x16_t v113 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v113);
    }
  }
  int8x16_t v114 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v307, v307));
  int8x16_t v115 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v114, (int16x8_t)v114));
  unint64_t v116 = vpaddq_s32((int32x4_t)v115, (int32x4_t)v115).u64[0];
  v117.i64[0] = v116;
  v117.i64[1] = HIDWORD(v116);
  int64x2_t v118 = v117;
  unint64_t v119 = vaddvq_s64(v117);
  unint64_t v120 = v119;
  unint64_t v121 = v106 + v119;
  if (v301) {
    BOOL v122 = v301 >= v121;
  }
  else {
    BOOL v122 = 1;
  }
  char v123 = !v122;
  if (v119 > 0x80 || (v123 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v121 = v106;
  }
  else
  {
    unint64_t v124 = v106 & 0x3F;
    int64x2_t v125 = vaddq_s64(vdupq_n_s64(v124), vzip1q_s64((int64x2_t)0, v118));
    int64x2_t v126 = (int64x2_t *)(v76 + 8 * (v106 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v126, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126->i64[0], 0), (uint64x2_t)vnegq_s64(v125)));
    if (v124 + v120 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v126[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v125))), v109);
    }
  }
  unint64_t v127 = v121 + v120;
  if (v301) {
    BOOL v128 = v301 >= v127;
  }
  else {
    BOOL v128 = 1;
  }
  char v129 = !v128;
  int8x16_t v130 = 0uLL;
  if (v120 > 0x80 || (v129 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v127 = v121;
    int8x16_t v134 = 0uLL;
  }
  else
  {
    unint64_t v131 = v121 & 0x3F;
    int64x2_t v132 = vaddq_s64(vdupq_n_s64(v131), vzip1q_s64((int64x2_t)0, v118));
    int16x8_t v133 = (int64x2_t *)(v76 + 8 * (v121 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v132)));
    if (v131 + v120 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v132))), v134);
    }
  }
  int8x16_t v135 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v308, v308));
  int8x16_t v136 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v135, (int16x8_t)v135));
  unint64_t v137 = vpaddq_s32((int32x4_t)v136, (int32x4_t)v136).u64[0];
  v138.i64[0] = v137;
  v138.i64[1] = HIDWORD(v137);
  int64x2_t v139 = v138;
  unint64_t v140 = vaddvq_s64(v138);
  unint64_t v141 = v140;
  unint64_t v142 = v127 + v140;
  if (v301) {
    BOOL v143 = v301 >= v142;
  }
  else {
    BOOL v143 = 1;
  }
  char v144 = !v143;
  if (v140 > 0x80 || (v144 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v142 = v127;
  }
  else
  {
    unint64_t v145 = v127 & 0x3F;
    int64x2_t v146 = vaddq_s64(vdupq_n_s64(v145), vzip1q_s64((int64x2_t)0, v139));
    int64x2_t v147 = (int64x2_t *)(v76 + 8 * (v127 >> 6));
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v147, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147->i64[0], 0), (uint64x2_t)vnegq_s64(v146)));
    if (v145 + v141 >= 0x81) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v147[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v146))), v130);
    }
  }
  unint64_t v148 = v142 + v141;
  if (v301) {
    BOOL v149 = v301 >= v148;
  }
  else {
    BOOL v149 = 1;
  }
  char v150 = !v149;
  if (v141 > 0x80 || (v150 & 1) != 0) {
    goto LABEL_133;
  }
  int64x2_t v151 = vaddq_s64(vdupq_n_s64(v142 & 0x3F), vzip1q_s64((int64x2_t)0, v139));
  int16x8_t v152 = (int64x2_t *)(v76 + 8 * (v142 >> 6));
  int8x16_t v153 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v152, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152->i64[0], 0), (uint64x2_t)vnegq_s64(v151)));
  if ((v142 & 0x3F) + v141 >= 0x81) {
    int8x16_t v153 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v152[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v151))), v153);
  }
  if (v78 || v301 + 8 * result - v148 - 1024 >= 9 || v60 == 2)
  {
LABEL_133:
    uint64_t v154 = (8 * (&vars0 - 100)) & 0x20;
    uint64_t v155 = v310 | (255 << v154);
    uint64_t v310 = v155;
    unint64_t v156 = (32 * ((((unint64_t)&v310 + 4) >> 2) & 1)) | 8;
    unint64_t v157 = (((32 * ((((unint64_t)&v310 + 4) >> 2) & 1)) | 0x10) - v154) | 8;
    if (v156 - v154 > 0x18) {
      unint64_t v157 = v156 - v154 + 8;
    }
    if (v157 <= 0x20)
    {
      if (v156 - v154 <= 0x18) {
        LOBYTE(v156) = (32 * ((((unint64_t)&v310 + 4) & 4) != 0)) | 0x10;
      }
      uint64_t v158 = v155 | (255 << v156);
      uint64_t v310 = v158;
      uint64_t v159 = ((_BYTE)v156 + 8) & 0x38;
      if ((unint64_t)(v159 - v154 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v310 = v158 | (255 << v159);
      }
    }
    uint64_t result = 0;
    int8x16_t v160 = (_OWORD *)((char *)a1 + a2);
    *a1 = 0u;
    a1[1] = 0u;
    int8x16_t v161 = (_OWORD *)((char *)a1 + 2 * a2);
    *int8x16_t v160 = 0u;
    v160[1] = 0u;
    int8x16_t v162 = (_OWORD *)((char *)a1 + 2 * a2 + a2);
    *int8x16_t v161 = 0u;
    v161[1] = 0u;
    *int8x16_t v162 = 0u;
    v162[1] = 0u;
  }
  else
  {
    int32x2_t v163 = vzip1_s32(*(int32x2_t *)v50.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL));
    int32x2_t v164 = vzip1_s32(*(int32x2_t *)v94.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL));
    uint16x4_t v165 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v49.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
    int32x4_t v166 = (int32x4_t)vextq_s8(v93, v93, 8uLL);
    uint16x4_t v167 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v166.i8);
    v168.i64[0] = v163.u32[0];
    v168.i64[1] = v163.u32[1];
    int64x2_t v169 = v168;
    v168.i64[0] = v164.u32[0];
    v168.i64[1] = v164.u32[1];
    uint64x2_t v170 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v171 = (int64x2_t)vshlq_u64((uint64x2_t)v47, (uint64x2_t)vnegq_s64(v169));
    *(int32x2_t *)v166.i8 = vmovn_s64((int64x2_t)v47);
    *(int32x2_t *)v171.i8 = vmovn_s64(v171);
    int16x8_t v172 = (int16x8_t)vzip1q_s32(v166, (int32x4_t)v171);
    int64x2_t v173 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v170);
    *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)v88);
    *(int32x2_t *)v173.i8 = vmovn_s64(v173);
    int32x4_t v174 = vzip1q_s32((int32x4_t)v47, (int32x4_t)v173);
    int64x2_t v175 = (int64x2_t)vshlq_u64((uint64x2_t)v113, v170);
    *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v113);
    *(int32x2_t *)v175.i8 = vmovn_s64(v175);
    int16x8_t v176 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v175);
    int32x4_t v177 = (int32x4_t)vmovl_u16(v165);
    int16x8_t v178 = (int16x8_t)vmovl_u16(v167);
    uint32x4_t v179 = (uint32x4_t)vnegq_s32((int32x4_t)v178);
    int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v172, (uint32x4_t)vnegq_s32(v177));
    *(int16x4_t *)v172.i8 = vmovn_s32((int32x4_t)v172);
    *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
    int8x16_t v181 = (int8x16_t)vzip1q_s16(v172, v180);
    int16x8_t v182 = (int16x8_t)vshlq_u32((uint32x4_t)v174, v179);
    *(int16x4_t *)v178.i8 = vmovn_s32(v174);
    *(int16x4_t *)v182.i8 = vmovn_s32((int32x4_t)v182);
    int8x16_t v183 = (int8x16_t)vzip1q_s16(v178, v182);
    int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v176, v179);
    *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
    *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
    int8x16_t v185 = (int8x16_t)vzip1q_s16(v176, v184);
    uint16x8_t v186 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v306.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v306, v306, 8uLL))));
    int8x16_t v187 = (int8x16_t)vshlq_u16((uint16x8_t)v181, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v48.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))));
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    *(int8x8_t *)v187.i8 = vmovn_s16((int16x8_t)v187);
    int8x16_t v188 = vzip1q_s8(v181, v187);
    int8x16_t v189 = (int8x16_t)vshlq_u16((uint16x8_t)v183, v186);
    int8x16_t v190 = (int8x16_t)vshlq_u16((uint16x8_t)v185, v186);
    *(int8x8_t *)v183.i8 = vmovn_s16((int16x8_t)v183);
    *(int8x8_t *)v189.i8 = vmovn_s16((int16x8_t)v189);
    *(int8x8_t *)v185.i8 = vmovn_s16((int16x8_t)v185);
    *(int8x8_t *)v190.i8 = vmovn_s16((int16x8_t)v190);
    int8x16_t v191 = vzip1q_s8(v183, v189);
    v189.i64[0] = 0x808080808080808;
    v189.i64[1] = 0x808080808080808;
    int8x16_t v192 = vzip1q_s8(v185, v190);
    v190.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v190.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v193 = vsubq_s8(v189, v48);
    int8x16_t v194 = vaddq_s8(v48, v190);
    v190.i64[0] = 0x808080808080808;
    v190.i64[1] = 0x808080808080808;
    int8x16_t v195 = vshlq_s8(v188, v193);
    v193.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v193.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v196 = vsubq_s8(v190, v306);
    int8x16_t v197 = vaddq_s8(v306, v193);
    int8x16_t v198 = vshlq_s8(v191, v196);
    int8x16_t v199 = vshlq_s8(v192, v196);
    int8x16_t v200 = vshlq_s8(v195, v194);
    int8x16_t v201 = vshlq_s8(v198, v197);
    int8x16_t v202 = vshlq_s8(v199, v197);
    int8x16_t v203 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v200.i8, 0);
    int8x16_t v204 = vandq_s8(v294, v203);
    int8x16_t v205 = vsubq_s8(v201, v204);
    int8x16_t v206 = vsubq_s8(v202, v204);
    *(int32x2_t *)v201.i8 = vzip1_s32(*(int32x2_t *)v115.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL));
    *(int32x2_t *)v202.i8 = vzip1_s32(*(int32x2_t *)v136.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL));
    v168.i64[0] = v201.u32[0];
    v168.i64[1] = v201.u32[1];
    uint64x2_t v207 = (uint64x2_t)vnegq_s64(v168);
    *(int16x4_t *)v204.i8 = vuzp1_s16(*(int16x4_t *)v114.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL));
    int64x2_t v208 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
    *(int32x2_t *)v208.i8 = vmovn_s64(v208);
    int16x8_t v209 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v208);
    v168.i64[0] = v202.u32[0];
    v168.i64[1] = v202.u32[1];
    uint64x2_t v210 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v211 = (int64x2_t)vshlq_u64((uint64x2_t)v134, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v134);
    *(int32x2_t *)v211.i8 = vmovn_s64(v211);
    int16x8_t v212 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v211);
    int64x2_t v213 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v210);
    *(int32x2_t *)v114.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v213.i8 = vmovn_s64(v213);
    uint32x4_t v214 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v204.i8));
    int16x8_t v215 = (int16x8_t)vzip1q_s32((int32x4_t)v114, (int32x4_t)v213);
    int16x8_t v216 = (int16x8_t)vshlq_u32((uint32x4_t)v209, v214);
    *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
    *(int16x4_t *)v216.i8 = vmovn_s32((int32x4_t)v216);
    int8x16_t v217 = (int8x16_t)vzip1q_s16(v209, v216);
    uint32x4_t v218 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v135.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL))));
    int16x8_t v219 = (int16x8_t)vshlq_u32((uint32x4_t)v212, v214);
    *(int16x4_t *)v212.i8 = vmovn_s32((int32x4_t)v212);
    *(int16x4_t *)v219.i8 = vmovn_s32((int32x4_t)v219);
    int8x16_t v220 = (int8x16_t)vzip1q_s16(v212, v219);
    int16x8_t v221 = (int16x8_t)vshlq_u32((uint32x4_t)v215, v218);
    *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v215);
    *(int16x4_t *)v221.i8 = vmovn_s32((int32x4_t)v221);
    uint16x8_t v222 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v307.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v307, v307, 8uLL))));
    int8x16_t v223 = (int8x16_t)vzip1q_s16(v215, v221);
    int8x16_t v224 = (int8x16_t)vshlq_u16((uint16x8_t)v217, v222);
    int8x16_t v225 = (int8x16_t)vshlq_u16((uint16x8_t)v220, v222);
    *(int8x8_t *)v217.i8 = vmovn_s16((int16x8_t)v217);
    *(int8x8_t *)v224.i8 = vmovn_s16((int16x8_t)v224);
    *(int8x8_t *)v220.i8 = vmovn_s16((int16x8_t)v220);
    *(int8x8_t *)v225.i8 = vmovn_s16((int16x8_t)v225);
    int8x16_t v226 = vzip1q_s8(v217, v224);
    v224.i64[0] = 0x808080808080808;
    v224.i64[1] = 0x808080808080808;
    int8x16_t v227 = vzip1q_s8(v220, v225);
    v225.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v225.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v228 = vsubq_s8(v224, v307);
    int8x16_t v229 = vaddq_s8(v307, v225);
    int8x16_t v230 = vshlq_s8(v226, v228);
    int8x16_t v231 = vshlq_s8(v227, v228);
    uint16x8_t v232 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v308.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v308, v308, 8uLL))));
    int8x16_t v233 = vshlq_s8(v231, v229);
    int8x16_t v234 = vandq_s8(v295, v203);
    int8x16_t v235 = vsubq_s8(vshlq_s8(v230, v229), v234);
    int8x16_t v236 = vsubq_s8(v233, v234);
    int8x16_t v237 = (int8x16_t)vshlq_u16((uint16x8_t)v223, v232);
    *(int8x8_t *)v223.i8 = vmovn_s16((int16x8_t)v223);
    *(int8x8_t *)v237.i8 = vmovn_s16((int16x8_t)v237);
    v234.i64[0] = 0x808080808080808;
    v234.i64[1] = 0x808080808080808;
    int8x16_t v238 = vzip1q_s8(v223, v237);
    v223.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v223.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v239 = vsubq_s8(v234, v308);
    int8x16_t v240 = vaddq_s8(v308, v223);
    int64x2_t v241 = (int64x2_t)vshlq_u64((uint64x2_t)v153, v210);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    *(int32x2_t *)v241.i8 = vmovn_s64(v241);
    int16x8_t v242 = (int16x8_t)vzip1q_s32((int32x4_t)v153, (int32x4_t)v241);
    int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v242, v218);
    *(int16x4_t *)v242.i8 = vmovn_s32((int32x4_t)v242);
    *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
    int8x16_t v244 = (int8x16_t)vzip1q_s16(v242, v243);
    int8x16_t v245 = (int8x16_t)vshlq_u16((uint16x8_t)v244, v232);
    *(int8x8_t *)v244.i8 = vmovn_s16((int16x8_t)v244);
    *(int8x8_t *)v245.i8 = vmovn_s16((int16x8_t)v245);
    int8x16_t v246 = vshlq_s8(vshlq_s8(vzip1q_s8(v244, v245), v239), v240);
    int8x16_t v247 = vandq_s8(v296, v203);
    int8x16_t v248 = vsubq_s8(vshlq_s8(vshlq_s8(v238, v239), v240), v247);
    int8x16_t v249 = vsubq_s8(v246, v247);
    *(int32x2_t *)v238.i8 = vzip1_s32(*(int32x2_t *)v66.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL));
    *(int32x2_t *)v246.i8 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v168.i64[0] = v238.u32[0];
    v168.i64[1] = v238.u32[1];
    int64x2_t v250 = (int64x2_t)vshlq_u64((uint64x2_t)v63, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v63);
    *(int32x2_t *)v250.i8 = vmovn_s64(v250);
    int16x8_t v251 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v250);
    v168.i64[0] = v246.u32[0];
    v168.i64[1] = v246.u32[1];
    int64x2_t v252 = (int64x2_t)vshlq_u64((uint64x2_t)v92, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v92);
    *(int32x2_t *)v252.i8 = vmovn_s64(v252);
    int16x8_t v253 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v252);
    int16x8_t v254 = (int16x8_t)vshlq_u32((uint32x4_t)v251, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v65.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))));
    *(int16x4_t *)v251.i8 = vmovn_s32((int32x4_t)v251);
    *(int16x4_t *)v254.i8 = vmovn_s32((int32x4_t)v254);
    int8x16_t v255 = (int8x16_t)vzip1q_s16(v251, v254);
    int16x8_t v256 = (int16x8_t)vshlq_u32((uint32x4_t)v253, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v253.i8 = vmovn_s32((int32x4_t)v253);
    *(int16x4_t *)v256.i8 = vmovn_s32((int32x4_t)v256);
    int8x16_t v257 = (int8x16_t)vzip1q_s16(v253, v256);
    int8x16_t v258 = (int8x16_t)vshlq_u16((uint16x8_t)v255, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))));
    int8x16_t v259 = (int8x16_t)vshlq_u16((uint16x8_t)v257, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v305.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v305, v305, 8uLL)))));
    *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
    *(int8x8_t *)v258.i8 = vmovn_s16((int16x8_t)v258);
    *(int8x8_t *)v257.i8 = vmovn_s16((int16x8_t)v257);
    *(int8x8_t *)v259.i8 = vmovn_s16((int16x8_t)v259);
    int8x16_t v260 = vzip1q_s8(v255, v258);
    v258.i64[0] = 0x808080808080808;
    v258.i64[1] = 0x808080808080808;
    int8x16_t v261 = vzip1q_s8(v257, v259);
    v259.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v259.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v262 = vshlq_s8(vshlq_s8(v260, vsubq_s8(v258, v64)), vaddq_s8(v64, v259));
    int8x16_t v263 = vshlq_s8(vshlq_s8(v261, vsubq_s8(v258, v305)), vaddq_s8(v305, v259));
    v264.i64[0] = 0x101010101010101;
    v264.i64[1] = 0x101010101010101;
    int8x16_t v265 = vandq_s8(v297, v203);
    int8x16_t v266 = vsubq_s8(vaddq_s8(vandq_s8(v200, v297), v262), v265);
    int8x16_t v267 = vsubq_s8(v263, v265);
    if (vaddlvq_s8(vceqq_s8(v298, v264)))
    {
      int8x16_t v268 = vnegq_s8(vandq_s8(v304, v264));
      int8x16_t v269 = v267;
      v269.i32[3] = v266.i32[0];
      int8x16_t v270 = v266;
      v270.i32[0] = v267.i32[3];
      v312.val[0] = vbslq_s8(v268, v270, v266);
      v312.val[1] = vbslq_s8(v268, v269, v267);
      v271.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v271.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v313.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v312, (int8x16_t)xmmword_242EA7570), v268), v312.val[0]);
      v313.val[1] = vaddq_s8(v312.val[1], vandq_s8(vqtbl2q_s8(v312, v271), v268));
      int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, (int8x16_t)xmmword_242EA7580), v268), v313.val[0]);
      int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, v271), v268), v313.val[1]);
      v313.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA7590), v268), v205);
      v313.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA75A0), v268), v206);
      int8x16_t v205 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, (int8x16_t)xmmword_242EA75B0), v268), v313.val[0]);
      int8x16_t v206 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, v271), v268), v313.val[1]);
      v313.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA75C0), v268), v235);
      v313.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA7570), v268), v236);
      int8x16_t v235 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, v271), v268), v313.val[0]);
      int8x16_t v236 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, (int8x16_t)xmmword_242EA75D0), v268), v313.val[1]);
      v312.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA75E0), v268), v248);
      v312.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA7570), v268), v249);
      int8x16_t v248 = vaddq_s8(vandq_s8(vqtbl2q_s8(v312, v271), v268), v312.val[0]);
      int8x16_t v249 = vaddq_s8(vandq_s8(vqtbl2q_s8(v312, (int8x16_t)xmmword_242EA75F0), v268), v312.val[1]);
    }
    int8x16_t v272 = vaddq_s8(v303, v266);
    int8x16_t v273 = vaddq_s8(v267, v303);
    int8x16_t v274 = vaddq_s8(v205, v303);
    int8x16_t v275 = vaddq_s8(v206, v303);
    int8x16_t v276 = vaddq_s8(v235, v303);
    int8x16_t v277 = vaddq_s8(v236, v303);
    int8x16_t v278 = vaddq_s8(v248, v303);
    int8x16_t v279 = vaddq_s8(v249, v303);
    v280.i64[0] = 0x1010101010101010;
    v280.i64[1] = 0x1010101010101010;
    int8x16_t v281 = vtstq_s8(v304, v280);
    if ((v304.i8[1] & 0x10) != 0)
    {
      v281.i8[1] = v281.i8[2];
      v281.i8[2] = 0;
      int8x16_t v281 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v281.i8, 0);
      int8x16_t v282 = (int8x16_t)xmmword_242EA7610;
    }
    else
    {
      int8x16_t v282 = (int8x16_t)xmmword_242EA7600;
    }
    int64x2_t v283 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v272, v282), v281), v272);
    int64x2_t v284 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v273, v282), v281), v273);
    int64x2_t v285 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v274, v282), v281), v274);
    int64x2_t v286 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v275, v282), v281), v275);
    int64x2_t v287 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v276, v282), v281), v276);
    int64x2_t v288 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v277, v282), v281), v277);
    uint8x16_t v289 = (int64x2_t *)((char *)a1 + a2);
    *a1 = vzip1q_s64(v283, v284);
    a1[1] = vzip1q_s64(v287, v288);
    int8x16_t v290 = (int64x2_t *)((char *)a1 + 2 * a2);
    int64x2_t v291 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v278, v282), v281), v278);
    *uint8x16_t v289 = vzip2q_s64(v283, v284);
    v289[1] = vzip2q_s64(v287, v288);
    int64x2_t v292 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v279, v282), v281), v279);
    *int8x16_t v290 = vzip1q_s64(v285, v286);
    v290[1] = vzip1q_s64(v291, v292);
    int16x8_t v293 = (int64x2_t *)((char *)v290 + a2);
    *int16x8_t v293 = vzip2q_s64(v285, v286);
    v293[1] = vzip2q_s64(v291, v292);
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>(uint64_t a1, uint64_t a2, float *a3, unint64_t *a4, unsigned int a5)
{
  unint64_t v5 = a4[2];
  unint64_t v6 = *a4;
  unint64_t v7 = *a4 + 32;
  if (v5) {
    BOOL v8 = v5 >= v7;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    unint64_t v9 = v6 >> 6;
    unint64_t v10 = *a4 & 0x3F;
    unint64_t v11 = a4[1];
    uint64_t v12 = *(void *)(v11 + 8 * (v6 >> 6)) >> v6;
    if (v10 >= 0x21) {
      v12 |= *(void *)(v11 + 8 * v9 + 8) << -(char)v10;
    }
    *a4 = v7;
    unsigned int v13 = v12;
  }
  else
  {
    unsigned int v13 = 0;
    *((unsigned char *)a4 + 24) = 1;
  }
  *(unsigned char *)a1 = v13 & 0x1F;
  *(unsigned char *)(a1 + 1) = (v13 >> 5) & 0x1F;
  *(unsigned char *)(a1 + 2) = (v13 >> 10) & 0x1F;
  *(unsigned char *)(a1 + 3) = (v13 >> 15) & 0x1F;
  *(unsigned char *)a2 = ((v13 >> 20) & 7) + 1;
  *(unsigned char *)(a2 + 1) = ((v13 >> 23) & 7) + 1;
  *(unsigned char *)(a2 + 2) = ((v13 >> 26) & 7) + 1;
  *(unsigned char *)(a2 + 3) = (v13 >> 29) + 1;
  unint64_t v14 = a4[2];
  unint64_t v15 = *a4;
  unint64_t v16 = *a4 + 32;
  if (v14 && v14 < v16)
  {
    int v17 = 0;
    *((unsigned char *)a4 + 24) = 1;
  }
  else
  {
    unint64_t v18 = v15 >> 6;
    unint64_t v19 = *a4 & 0x3F;
    unint64_t v20 = a4[1];
    uint64_t v21 = *(void *)(v20 + 8 * (v15 >> 6)) >> v15;
    if (v19 >= 0x21) {
      v21 |= *(void *)(v20 + 8 * v18 + 8) << -(char)v19;
    }
    *a4 = v16;
    int v17 = v21;
  }
  *(_DWORD *)a3 = v17;
  float32x4_t v22 = vld1q_dup_f32((const float *)a1);
  *(float32x4_t *)a1 = v22;
  float32x4_t v23 = vld1q_dup_f32((const float *)a2);
  *(float32x4_t *)a2 = v23;
  float32x4_t v24 = vld1q_dup_f32(a3);
  *(float32x4_t *)a3 = v24;
  return a5 + 1;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(unint64_t a1, char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  int64x2_t v7 = a3[1];
  unint64_t v6 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v8 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v9 = *(int64x2_t *)((char *)&a3[1] + a4);
  int8x16_t v10 = (int8x16_t)vzip1q_s64(*a3, v8);
  int8x16_t v11 = (int8x16_t)vzip1q_s64(v7, v9);
  int8x16_t v12 = (int8x16_t)vzip2q_s64(v7, v9);
  int64x2_t v14 = *v6;
  int64x2_t v15 = v6[1];
  unsigned int v13 = (int64x2_t *)((char *)v6 + a4);
  int64x2_t v16 = v13[1];
  int8x16_t v17 = (int8x16_t)vzip2q_s64(v14, *v13);
  int8x16_t v18 = (int8x16_t)vzip2q_s64(v15, v16);
  int8x16_t v19 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v10.i8, 0);
  int8x16_t v20 = vsubq_s8(v10, v19);
  v468.val[0] = v10;
  v468.val[1] = (int8x16_t)vzip2q_s64(*a3, v8);
  int8x16_t v473 = vsubq_s8(v468.val[1], v19);
  int8x16_t v469 = (int8x16_t)vzip1q_s64(v14, *v13);
  int8x16_t v21 = vsubq_s8(v469, v19);
  int8x16_t v22 = vsubq_s8(v17, v19);
  int8x16_t v23 = vsubq_s8(v11, v19);
  int8x16_t v24 = vsubq_s8(v12, v19);
  int8x16_t v470 = (int8x16_t)vzip1q_s64(v15, v16);
  int8x16_t v25 = vsubq_s8(v470, v19);
  int8x16_t v26 = vsubq_s8(v18, v19);
  int8x16_t v27 = vqtbl1q_s8(vmaxq_s8(v20, v473), (int8x16_t)xmmword_242EA7560);
  int8x16_t v28 = vqtbl1q_s8(vminq_s8(v20, v473), (int8x16_t)xmmword_242EA7560);
  int8x16_t v29 = vpmaxq_s8(v27, v27);
  int8x16_t v30 = vpminq_s8(v28, v28);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  int8x16_t v33 = vmaxq_s8(v31, (int8x16_t)v8);
  v16.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v16.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v34 = vminq_s8(v32, (int8x16_t)v16);
  int8x16_t v35 = vzip1q_s8(v31, v32);
  v36.i64[0] = 0x808080808080808;
  v36.i64[1] = 0x808080808080808;
  int8x16_t v37 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v35)), vceqzq_s8(v35));
  int8x16_t v38 = vpmaxq_s8(v37, v37);
  int8x16_t v39 = vqtbl1q_s8(vmaxq_s8(v21, v22), (int8x16_t)xmmword_242EA7560);
  int8x16_t v40 = vqtbl1q_s8(vminq_s8(v21, v22), (int8x16_t)xmmword_242EA7560);
  int8x16_t v41 = vpmaxq_s8(v39, v39);
  int8x16_t v42 = vpminq_s8(v40, v40);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vmaxq_s8(v33, v43);
  int8x16_t v46 = vminq_s8(v34, v44);
  int8x16_t v47 = vzip1q_s8(v43, v44);
  int8x16_t v48 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v47)), vceqzq_s8(v47));
  int8x16_t v49 = vpmaxq_s8(v48, v48);
  int8x16_t v50 = vqtbl1q_s8(vmaxq_s8(v23, v24), (int8x16_t)xmmword_242EA7560);
  int8x16_t v51 = vqtbl1q_s8(vminq_s8(v23, v24), (int8x16_t)xmmword_242EA7560);
  int8x16_t v52 = vpmaxq_s8(v50, v50);
  int8x16_t v53 = vpminq_s8(v51, v51);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vmaxq_s8(v45, v54);
  int8x16_t v57 = vminq_s8(v46, v55);
  int8x16_t v58 = vzip1q_s8(v54, v55);
  int8x16_t v59 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v58)), vceqzq_s8(v58));
  int8x16_t v60 = vpmaxq_s8(v59, v59);
  int8x16_t v61 = vqtbl1q_s8(vmaxq_s8(v25, v26), (int8x16_t)xmmword_242EA7560);
  int8x16_t v62 = vqtbl1q_s8(vminq_s8(v25, v26), (int8x16_t)xmmword_242EA7560);
  int8x16_t v63 = vpmaxq_s8(v61, v61);
  int8x16_t v64 = vpminq_s8(v62, v62);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vmaxq_s8(v56, v65);
  int8x16_t v68 = vminq_s8(v57, v66);
  int8x16_t v69 = vzip1q_s8(v65, v66);
  int8x16_t v70 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v69)), vceqzq_s8(v69));
  int8x16_t v71 = vpmaxq_s8(v70, v70);
  int8x16_t v72 = vmaxq_s8(vmaxq_s8(v38, v49), vmaxq_s8(v60, v71));
  int8x16_t v73 = vclzq_s8(vsubq_s8(v67, v68));
  v56.i64[0] = 0x707070707070707;
  v56.i64[1] = 0x707070707070707;
  v74.i64[0] = -1;
  v74.i64[1] = -1;
  int8x16_t v75 = vshlq_s8(v74, vsubq_s8(v56, v73));
  int8x16_t v76 = vsubq_s8(v36, v73);
  int8x16_t v77 = vcgtq_s8(v72, v76);
  int8x16_t v78 = vbslq_s8(v77, v76, v72);
  int8x16_t v79 = vandq_s8(vsubq_s8(v75, v68), v77);
  v80.i64[0] = 0x303030303030303;
  v80.i64[1] = 0x303030303030303;
  int8x16_t v81 = vorrq_s8(vandq_s8(vceqzq_s8(v78), v80), vandq_s8(v77, v36));
  int v82 = vmaxvq_s8(v78);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v78, v38), v80), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v78, v49), v80), (int8x16_t)0);
  int8x16_t v85 = vmaxq_s8(vminq_s8(vsubq_s8(v78, v60), v80), (int8x16_t)0);
  int8x16_t v86 = vmaxq_s8(vminq_s8(vsubq_s8(v78, v71), v80), (int8x16_t)0);
  v77.i64[0] = 0x404040404040404;
  v77.i64[1] = 0x404040404040404;
  int8x16_t v87 = vorrq_s8(vbicq_s8(v77, vceqq_s8(vaddq_s8(v86, v85), vnegq_s8(vaddq_s8(v83, v84)))), v81);
  int8x16_t v471 = v20;
  int8x16_t v475 = v21;
  int8x16_t v476 = v22;
  int8x16_t v477 = v23;
  int8x16_t v478 = v24;
  int8x16_t v479 = v25;
  int8x16_t v480 = v26;
  int8x16_t v487 = v78;
  int8x16_t v488 = v68;
  int8x16_t v489 = v67;
  int8x16_t v490 = v79;
  int8x16_t v465 = v79;
  int8x16_t v88 = vsubq_s8(v78, v83);
  int8x16_t v89 = vsubq_s8(v78, v84);
  int8x16_t v483 = v88;
  int8x16_t v484 = v89;
  int8x16_t v90 = vsubq_s8(v78, v85);
  int8x16_t v91 = vsubq_s8(v78, v86);
  int8x16_t v485 = v90;
  int8x16_t v486 = v91;
  BOOL v93 = a5 < 4 || a6 < 2;
  int8x16_t v481 = v19;
  int8x16_t v482 = v87;
  if (v82)
  {
    int8x16_t v460 = v67;
    int8x16_t v462 = v17;
    int8x16_t v463 = v18;
    int8x16_t v464 = v12;
    int8x16_t v467 = v11;
    int8x16_t v452 = vsubq_s8(v20, vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7600));
    int8x16_t v450 = vsubq_s8(v21, vqtbl1q_s8(v21, (int8x16_t)xmmword_242EA7600));
    int8x16_t v451 = vsubq_s8(v473, vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA7600));
    int8x16_t v94 = vqtbl1q_s8(vmaxq_s8(v452, v451), (int8x16_t)xmmword_242EA7560);
    int8x16_t v95 = vqtbl1q_s8(vminq_s8(v452, v451), (int8x16_t)xmmword_242EA7560);
    int8x16_t v96 = vpmaxq_s8(v94, v94);
    int8x16_t v97 = vpminq_s8(v95, v95);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    v100.i64[0] = 0x8080808080808080;
    v100.i64[1] = 0x8080808080808080;
    int8x16_t v101 = vmaxq_s8(v98, v100);
    v102.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v102.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int8x16_t v103 = vminq_s8(v99, v102);
    int8x16_t v104 = vzip1q_s8(v98, v99);
    int8x16_t v105 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v104)), vceqzq_s8(v104));
    int8x16_t v106 = vpmaxq_s8(v105, v105);
    int8x16_t v449 = vsubq_s8(v476, vqtbl1q_s8(v476, (int8x16_t)xmmword_242EA7600));
    int8x16_t v107 = vqtbl1q_s8(vmaxq_s8(v450, v449), (int8x16_t)xmmword_242EA7560);
    int8x16_t v108 = vqtbl1q_s8(vminq_s8(v450, v449), (int8x16_t)xmmword_242EA7560);
    int8x16_t v109 = vpmaxq_s8(v107, v107);
    int8x16_t v110 = vpminq_s8(v108, v108);
    int8x16_t v111 = vpmaxq_s8(v109, v109);
    int8x16_t v112 = vpminq_s8(v110, v110);
    int8x16_t v113 = vmaxq_s8(v101, v111);
    int8x16_t v114 = vminq_s8(v103, v112);
    int8x16_t v115 = vzip1q_s8(v111, v112);
    int8x16_t v116 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v115)), vceqzq_s8(v115));
    int8x16_t v117 = vpmaxq_s8(v116, v116);
    int8x16_t v453 = vsubq_s8(v23, vqtbl1q_s8(v23, (int8x16_t)xmmword_242EA7600));
    int8x16_t v454 = vsubq_s8(v478, vqtbl1q_s8(v478, (int8x16_t)xmmword_242EA7600));
    int8x16_t v118 = vqtbl1q_s8(vmaxq_s8(v453, v454), (int8x16_t)xmmword_242EA7560);
    int8x16_t v119 = vqtbl1q_s8(vminq_s8(v453, v454), (int8x16_t)xmmword_242EA7560);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vmaxq_s8(v113, v122);
    int8x16_t v125 = vminq_s8(v114, v123);
    int8x16_t v126 = vzip1q_s8(v122, v123);
    int8x16_t v127 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v126)), vceqzq_s8(v126));
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v456 = vsubq_s8(v25, vqtbl1q_s8(v25, (int8x16_t)xmmword_242EA7600));
    int8x16_t v458 = vsubq_s8(v480, vqtbl1q_s8(v480, (int8x16_t)xmmword_242EA7600));
    int8x16_t v129 = vqtbl1q_s8(vmaxq_s8(v456, v458), (int8x16_t)xmmword_242EA7560);
    int8x16_t v130 = vqtbl1q_s8(vminq_s8(v456, v458), (int8x16_t)xmmword_242EA7560);
    int8x16_t v131 = vpmaxq_s8(v129, v129);
    int8x16_t v132 = vpminq_s8(v130, v130);
    int8x16_t v133 = vpmaxq_s8(v131, v131);
    int8x16_t v134 = vpminq_s8(v132, v132);
    int8x16_t v135 = vminq_s8(v125, v134);
    int8x16_t v136 = vzip1q_s8(v133, v134);
    int8x16_t v137 = vbicq_s8(vsubq_s8(v36, vclsq_s8(v136)), vceqzq_s8(v136));
    int8x16_t v138 = vpmaxq_s8(v137, v137);
    int8x16_t v139 = vmaxq_s8(vmaxq_s8(v106, v117), vmaxq_s8(v128, v138));
    int8x16_t v448 = vmaxq_s8(v124, v133);
    int8x16_t v140 = vclzq_s8(vsubq_s8(v448, v135));
    int8x16_t v141 = vsubq_s8(v36, v140);
    int8x16_t v142 = vcgtq_s8(v139, v141);
    int8x16_t v143 = vbslq_s8(v142, v141, v139);
    v139.i64[0] = 0x1010101010101010;
    v139.i64[1] = 0x1010101010101010;
    v144.i64[0] = 0x1818181818181818;
    v144.i64[1] = 0x1818181818181818;
    int8x16_t v145 = vorrq_s8(vandq_s8(vceqzq_s8(v143), v80), vbslq_s8(v142, v144, v139));
    int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v106), v80), (int8x16_t)0);
    int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v117), v80), (int8x16_t)0);
    int16x8_t v148 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v143, v128), v80), (int8x16_t)0);
    int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v138), v80), (int8x16_t)0);
    int8x16_t v150 = vsubq_s8(v143, v146);
    int8x16_t v151 = vsubq_s8(v143, v147);
    int8x16_t v152 = vsubq_s8(v143, (int8x16_t)v148);
    int8x16_t v153 = vsubq_s8(v143, v149);
    int8x16_t v154 = vceqq_s8(vaddq_s8(v149, (int8x16_t)v148), vnegq_s8(vaddq_s8(v146, v147)));
    v147.i64[0] = 0x404040404040404;
    v147.i64[1] = 0x404040404040404;
    int8x16_t v155 = vorrq_s8(v145, vbicq_s8(v147, v154));
    uint16x8_t v156 = vmovl_u8(*(uint8x8_t *)v155.i8);
    v147.i64[0] = 0x8000800080008;
    v147.i64[1] = 0x8000800080008;
    v148.i64[0] = 0x2000200020002;
    v148.i64[1] = 0x2000200020002;
    int8x16_t v157 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v90.i8, *(int8x8_t *)v89.i8), *(int8x8_t *)v91.i8), 3uLL), *(int8x8_t *)v88.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v78.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v87.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v87.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v87.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v148), v147)), vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v152.i8, *(int8x8_t *)v151.i8), *(int8x8_t *)v153.i8),
                                                                      3uLL),
                                                                    *(int8x8_t *)v150.i8,
                                                                    (int8x8_t)0x707070707070707),
                                                                  (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v155.i8, 1uLL), v147)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v143.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v156 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v156 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v148), v147)))), 0);
    if (vaddlvq_s8(v157))
    {
      int8x16_t v471 = vbslq_s8(v157, v452, v20);
      int8x16_t v473 = vbslq_s8(v157, v451, v473);
      v158.i64[0] = 0x707070707070707;
      v158.i64[1] = 0x707070707070707;
      int8x16_t v475 = vbslq_s8(v157, v450, v21);
      int8x16_t v476 = vbslq_s8(v157, v449, v22);
      v159.i64[0] = -1;
      v159.i64[1] = -1;
      int8x16_t v477 = vbslq_s8(v157, v453, v23);
      int8x16_t v478 = vbslq_s8(v157, v454, v24);
      int8x16_t v479 = vbslq_s8(v157, v456, v25);
      int8x16_t v480 = vbslq_s8(v157, v458, v26);
      int8x16_t v483 = vbslq_s8(v157, v150, v88);
      int8x16_t v484 = vbslq_s8(v157, v151, v89);
      int8x16_t v485 = vbslq_s8(v157, v152, v90);
      int8x16_t v486 = vbslq_s8(v157, v153, v91);
      int8x16_t v489 = vbslq_s8(v157, v448, v460);
      int8x16_t v490 = vbslq_s8(v157, vandq_s8(vsubq_s8(vshlq_s8(v159, vsubq_s8(v158, v140)), v135), v142), v465);
      int8x16_t v487 = vbslq_s8(v157, v143, v78);
      int8x16_t v488 = vbslq_s8(v157, v135, v68);
      int8x16_t v481 = vbslq_s8(v157, vsubq_s8(v19, vqtbl1q_s8(v19, (int8x16_t)xmmword_242EA7600)), v19);
      int8x16_t v482 = vbslq_s8(v157, v155, v87);
    }
    if (v93)
    {
      int8x16_t v161 = v484;
      int8x16_t v160 = v485;
      int8x16_t v163 = v486;
      int8x16_t v162 = v487;
      int8x16_t v164 = v490;
      int8x16_t v166 = v471;
      int8x16_t v165 = v473;
      int8x16_t v168 = v475;
      int8x16_t v167 = v476;
      int8x16_t v170 = v477;
      int8x16_t v169 = v478;
      int8x16_t v172 = v479;
      int8x16_t v171 = v480;
      v173.i64[0] = v482.i64[0];
      int8x16_t v174 = v483;
    }
    else
    {
      int8x16_t v186 = vsubq_s8(v468.val[0], vqtbl2q_s8(v468, (int8x16_t)xmmword_242EA7570));
      int8x16_t v177 = vsubq_s8(v468.val[1], vqtbl2q_s8(v468, (int8x16_t)xmmword_242EA7620));
      v491.val[0] = v469;
      v491.val[1] = v462;
      v491.val[1].i32[3] = v468.val[1].i32[3];
      int8x16_t v178 = vsubq_s8(v469, vqtbl2q_s8(v491, (int8x16_t)xmmword_242EA7590));
      int8x16_t v179 = vsubq_s8(v462, vqtbl2q_s8(v491, (int8x16_t)xmmword_242EA7630));
      v491.val[0] = v11;
      v491.val[1] = v464;
      v491.val[1].i32[3] = v468.val[1].i32[3];
      int8x16_t v180 = vsubq_s8(v11, vqtbl2q_s8(v491, (int8x16_t)xmmword_242EA7640));
      int8x16_t v181 = vsubq_s8(v464, vqtbl2q_s8(v491, (int8x16_t)xmmword_242EA7570));
      int8x16_t v182 = v470;
      v491.val[0] = v463;
      v491.val[0].i32[3] = v468.val[1].i32[3];
      int8x16_t v183 = vsubq_s8(v470, vqtbl2q_s8(v491, (int8x16_t)xmmword_242EA7650));
      int8x16_t v184 = vsubq_s8(v463, vqtbl2q_s8(v491, (int8x16_t)xmmword_242EA7570));
      int8x16_t v185 = v177;
      v185.i32[3] = v186.i32[0];
      v186.i32[0] = v177.i32[3];
      int8x16_t v187 = vqtbl1q_s8(vmaxq_s8(v186, v185), (int8x16_t)xmmword_242EA7560);
      int8x16_t v188 = vqtbl1q_s8(vminq_s8(v186, v185), (int8x16_t)xmmword_242EA7560);
      int8x16_t v189 = vpmaxq_s8(v187, v187);
      int8x16_t v190 = vpminq_s8(v188, v188);
      int8x16_t v191 = vpmaxq_s8(v189, v189);
      int8x16_t v192 = vpminq_s8(v190, v190);
      v193.i64[0] = 0x8080808080808080;
      v193.i64[1] = 0x8080808080808080;
      v182.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v182.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v194 = vminq_s8(v192, v182);
      int8x16_t v195 = vzip1q_s8(v191, v192);
      v196.i64[0] = 0x808080808080808;
      v196.i64[1] = 0x808080808080808;
      int8x16_t v197 = vbicq_s8(vsubq_s8(v196, vclsq_s8(v195)), vceqzq_s8(v195));
      v491.val[1] = vpmaxq_s8(v197, v197);
      int8x16_t v198 = vqtbl1q_s8(vmaxq_s8(v178, v179), (int8x16_t)xmmword_242EA7560);
      v491.val[0] = vqtbl1q_s8(vminq_s8(v178, v179), (int8x16_t)xmmword_242EA7560);
      int8x16_t v199 = vpmaxq_s8(v198, v198);
      v491.val[0] = vpminq_s8(v491.val[0], v491.val[0]);
      int8x16_t v200 = vpmaxq_s8(v199, v199);
      v491.val[0] = vpminq_s8(v491.val[0], v491.val[0]);
      int8x16_t v201 = vmaxq_s8(vmaxq_s8(v191, v193), v200);
      int8x16_t v202 = vminq_s8(v194, v491.val[0]);
      int8x16_t v203 = vzip1q_s8(v200, v491.val[0]);
      int8x16_t v204 = vbicq_s8(vsubq_s8(v196, vclsq_s8(v203)), vceqzq_s8(v203));
      int8x16_t v205 = vpmaxq_s8(v204, v204);
      int8x16_t v466 = v180;
      int8x16_t v459 = v183;
      int8x16_t v461 = v181;
      int8x16_t v206 = vqtbl1q_s8(vmaxq_s8(v180, v181), (int8x16_t)xmmword_242EA7560);
      v491.val[0] = vqtbl1q_s8(vminq_s8(v180, v181), (int8x16_t)xmmword_242EA7560);
      int8x16_t v207 = vpmaxq_s8(v206, v206);
      v491.val[0] = vpminq_s8(v491.val[0], v491.val[0]);
      int8x16_t v208 = vpmaxq_s8(v207, v207);
      v491.val[0] = vpminq_s8(v491.val[0], v491.val[0]);
      int8x16_t v209 = vmaxq_s8(v201, v208);
      int8x16_t v210 = vminq_s8(v202, v491.val[0]);
      int8x16_t v211 = vzip1q_s8(v208, v491.val[0]);
      int8x16_t v212 = vbicq_s8(vsubq_s8(v196, vclsq_s8(v211)), vceqzq_s8(v211));
      int8x16_t v213 = vpmaxq_s8(v212, v212);
      int8x16_t v457 = v184;
      int8x16_t v214 = vqtbl1q_s8(vmaxq_s8(v183, v184), (int8x16_t)xmmword_242EA7560);
      v491.val[0] = vqtbl1q_s8(vminq_s8(v183, v184), (int8x16_t)xmmword_242EA7560);
      int8x16_t v215 = vpmaxq_s8(v214, v214);
      v491.val[0] = vpminq_s8(v491.val[0], v491.val[0]);
      int8x16_t v216 = vpmaxq_s8(v215, v215);
      v491.val[0] = vpminq_s8(v491.val[0], v491.val[0]);
      int8x16_t v217 = vmaxq_s8(v209, v216);
      int8x16_t v218 = vminq_s8(v210, v491.val[0]);
      int8x16_t v219 = vzip1q_s8(v216, v491.val[0]);
      int8x16_t v220 = vbicq_s8(vsubq_s8(v196, vclsq_s8(v219)), vceqzq_s8(v219));
      int8x16_t v221 = vpmaxq_s8(v220, v220);
      int8x16_t v222 = vmaxq_s8(vmaxq_s8(v491.val[1], v205), vmaxq_s8(v213, v221));
      int8x16_t v223 = vclzq_s8(vsubq_s8(v217, v218));
      int8x16_t v224 = vsubq_s8(v196, v223);
      int8x16_t v225 = vcgtq_s8(v222, v224);
      int8x16_t v226 = vbslq_s8(v225, v224, v222);
      v224.i64[0] = 0x909090909090909;
      v224.i64[1] = 0x909090909090909;
      char v227 = 2;
      char v228 = 2;
      char v229 = 2;
      char v230 = 2;
      char v231 = 2;
      char v232 = 2;
      char v233 = 2;
      char v234 = 2;
      v173.i64[1] = 0x202020202020202;
      v183.i64[0] = 0x303030303030303;
      v183.i64[1] = 0x303030303030303;
      v491.val[1] = vmaxq_s8(vminq_s8(vsubq_s8(v226, v491.val[1]), v183), (int8x16_t)0);
      int8x16_t v235 = vmaxq_s8(vminq_s8(vsubq_s8(v226, v205), v183), (int8x16_t)0);
      int16x8_t v236 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v226, v213), v183), (int8x16_t)0);
      int8x16_t v237 = vmaxq_s8(vminq_s8(vsubq_s8(v226, v221), v183), (int8x16_t)0);
      int8x16_t v238 = vsubq_s8(v226, v491.val[1]);
      int8x16_t v239 = vsubq_s8(v226, v235);
      int8x16_t v240 = vsubq_s8(v226, (int8x16_t)v236);
      int8x16_t v241 = vsubq_s8(v226, v237);
      int8x16_t v242 = vceqq_s8(vaddq_s8(v237, (int8x16_t)v236), vnegq_s8(vaddq_s8(v491.val[1], v235)));
      v491.val[1].i64[0] = 0x404040404040404;
      v491.val[1].i64[1] = 0x404040404040404;
      int8x16_t v243 = vorrq_s8(vorrq_s8(vandq_s8(vceqzq_s8(v226), v173), vsubq_s8(vandq_s8(v225, v224), vmvnq_s8(v225))), vbicq_s8(v491.val[1], v242));
      v236.i64[0] = 0x3000300030003;
      v236.i64[1] = 0x3000300030003;
      v173.i64[0] = v482.i64[0];
      int8x16_t v174 = v483;
      v491.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v482.i8);
      v235.i64[0] = 0x8000800080008;
      v235.i64[1] = 0x8000800080008;
      int8x16_t v163 = v486;
      int8x16_t v162 = v487;
      int16x8_t v244 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v487.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v491.val[1], v235)));
      v491.val[1] = vandq_s8(v491.val[1], (int8x16_t)v236);
      v236.i64[0] = 0x2000200020002;
      v236.i64[1] = 0x2000200020002;
      int8x16_t v161 = v484;
      int8x16_t v160 = v485;
      int8x16_t v245 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v244, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v482.i8, 1uLL), v235)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)v491.val[1], v236), v235)), *(int8x8_t *)v483.i8, (int8x8_t)0x707070707070707), vshll_n_s8(
                                                                  vadd_s8(vadd_s8(*(int8x8_t *)v485.i8, *(int8x8_t *)v484.i8), *(int8x8_t *)v486.i8), 3uLL)), vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v240.i8, *(int8x8_t *)v239.i8), *(int8x8_t *)v241.i8), 3uLL), *(int8x8_t *)v238.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v243.i8, *(int8x8_t *)v243.i8),
                                                                                          (int8x8_t)0x808080808080808)),
                                                                vbic_s8(*(int8x8_t *)v226.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v243.i8))))), 0);
      int8x16_t v164 = v490;
      int8x16_t v166 = v471;
      int8x16_t v165 = v473;
      int8x16_t v168 = v475;
      int8x16_t v167 = v476;
      int8x16_t v170 = v477;
      int8x16_t v169 = v478;
      int8x16_t v172 = v479;
      int8x16_t v171 = v480;
      if (vaddlvq_s8(v245))
      {
        int8x16_t v455 = v241;
        int8x16_t v246 = v218;
        int8x16_t v247 = v179;
        int8x16_t v248 = v178;
        v249.i64[0] = 0x707070707070707;
        v249.i64[1] = 0x707070707070707;
        int8x16_t v250 = vsubq_s8(v249, v223);
        v251.i64[0] = -1;
        v251.i64[1] = -1;
        int8x16_t v166 = vbslq_s8(v245, v186, v471);
        int8x16_t v165 = vbslq_s8(v245, v185, v473);
        int8x16_t v168 = vbslq_s8(v245, v248, v475);
        int8x16_t v167 = vbslq_s8(v245, v247, v476);
        int8x16_t v170 = vbslq_s8(v245, v466, v477);
        int8x16_t v169 = vbslq_s8(v245, v461, v478);
        int8x16_t v172 = vbslq_s8(v245, v459, v479);
        int8x16_t v171 = vbslq_s8(v245, v457, v480);
        int8x16_t v174 = vbslq_s8(v245, v238, v483);
        int8x16_t v161 = vbslq_s8(v245, v239, v484);
        int8x16_t v160 = vbslq_s8(v245, v240, v485);
        int8x16_t v163 = vbslq_s8(v245, v455, v486);
        int8x16_t v164 = vbslq_s8(v245, vandq_s8(vsubq_s8(vshlq_s8(v251, v250), v246), v225), v490);
        int8x16_t v162 = vbslq_s8(v245, v226, v487);
        int8x16_t v173 = vbslq_s8(v245, v243, v482);
        int8x16_t v481 = vbslq_s8(v245, vextq_s8(v468.val[1], v468.val[1], 0xCuLL), v481);
        int8x16_t v482 = v173;
        int8x16_t v488 = vbslq_s8(v245, v246, v488);
        int8x16_t v489 = vbslq_s8(v245, v217, v489);
        int8x16_t v483 = v174;
        int8x16_t v484 = v161;
        int8x16_t v485 = v160;
        int8x16_t v486 = v163;
        int8x16_t v490 = v164;
        int8x16_t v487 = v162;
      }
    }
    int8x16_t v252 = vandq_s8(v164, vceqq_s8(v162, v174));
    int8x16_t v472 = vaddq_s8(v252, v166);
    int8x16_t v474 = vaddq_s8(v165, v252);
    int8x16_t v253 = vandq_s8(v164, vceqq_s8(v162, v161));
    int8x16_t v475 = vaddq_s8(v168, v253);
    int8x16_t v476 = vaddq_s8(v167, v253);
    int8x16_t v254 = vandq_s8(v164, vceqq_s8(v162, v160));
    int8x16_t v477 = vaddq_s8(v170, v254);
    int8x16_t v478 = vaddq_s8(v169, v254);
    int8x16_t v255 = vandq_s8(v164, vceqq_s8(v162, v163));
    int8x16_t v479 = vaddq_s8(v172, v255);
    int8x16_t v480 = vaddq_s8(v171, v255);
    int8x16_t v256 = (int8x16_t)vmovl_s8(*(int8x8_t *)v173.i8);
    v254.i64[0] = 0x8000800080008;
    v254.i64[1] = 0x8000800080008;
    int16x8_t v257 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v162.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v256, v254)));
    v258.i64[0] = 0x3000300030003;
    v258.i64[1] = 0x3000300030003;
    int16x8_t v259 = (int16x8_t)vandq_s8(v256, v258);
    v258.i64[0] = 0x2000200020002;
    v258.i64[1] = 0x2000200020002;
    int16x8_t v260 = vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v161.i8), *(int8x8_t *)v163.i8), 3uLL), *(int8x8_t *)v174.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v259, (int16x8_t)v258), v254)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v173.i8, 1uLL), v254), v257));
    int16x8_t v261 = vpaddq_s16(v260, v260);
    if ((unint64_t)(vpaddq_s16(v261, v261).i16[0] + 71) > 0x3FF)
    {
      *(int8x16_t *)a1 = v468.val[0];
      *(int8x16_t *)(a1 + 16) = v468.val[1];
      *(int8x16_t *)(a1 + 32) = v469;
      *(int8x16_t *)(a1 + 48) = v462;
      *(int8x16_t *)(a1 + 64) = v467;
      *(int8x16_t *)(a1 + 80) = v464;
      int8x16_t v265 = (int8x16_t *)(a1 + 96);
      char v175 = 127;
      unint64_t result = 128;
      *int8x16_t v265 = v470;
      v265[1] = v463;
    }
    else
    {
      int8x16_t v262 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v263 = 8 * (a1 & 7);
      if (v263) {
        uint64_t v264 = *v262 & ~(-1 << v263);
      }
      else {
        uint64_t v264 = 0;
      }
      *a2 = 0;
      __int32 v266 = v481.i32[0];
      int16x4_t v267 = (int16x4_t)vzip1_s8(*(int8x8_t *)v162.i8, *(int8x8_t *)v481.i8);
      int8x8_t v268 = (int8x8_t)vadd_s16(v267, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v269 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v267 & 0xFF00FF00FF00FFLL)));
      v270.i64[0] = v269.u32[0];
      v270.i64[1] = v269.u32[1];
      int8x16_t v271 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v270, 0x38uLL), 0x38uLL);
      v270.i64[0] = v269.u32[2];
      v270.i64[1] = v269.u32[3];
      int8x16_t v272 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v270, 0x38uLL), 0x38uLL);
      uint32x4_t v273 = vmovl_u16((uint16x4_t)vand_s8(v268, (int8x8_t)0x7000700070007));
      v270.i64[0] = v273.u32[2];
      v270.i64[1] = v273.u32[3];
      v274.i64[0] = 255;
      v274.i64[1] = 255;
      uint64x2_t v275 = (uint64x2_t)vandq_s8((int8x16_t)v270, v274);
      v270.i64[0] = v273.u32[0];
      v270.i64[1] = v273.u32[1];
      int8x16_t v276 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v270, v274), (uint64x2_t)xmmword_242EA7660), v271), vbicq_s8((int8x16_t)vshlq_u64(v275, (uint64x2_t)xmmword_242EA7670), v272));
      *(int8x8_t *)v276.i8 = vorr_s8(*(int8x8_t *)v276.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v276, v276, 8uLL));
      v270.i64[0] = v173.u8[1];
      v270.i64[1] = v173.u8[2];
      v276.i64[1] = (unint64_t)(v173.i8[3] & 0x1F) << 15;
      int64x2_t v277 = (int64x2_t)vorrq_s8(v276, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v270, v274), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v278 = vorrq_s8((int8x16_t)v277, (int8x16_t)vdupq_laneq_s64(v277, 1)).u64[0] | v173.i8[0] & 0x1F;
      unint64_t v279 = v264 | (v278 << v263);
      if (v263 >= 0x20)
      {
        *int8x16_t v262 = v279;
        unint64_t v279 = v278 >> (-8 * (a1 & 7u));
      }
      uint64_t v280 = (unsigned __int16)v266;
      v281.i64[0] = BYTE2(v266);
      v281.i64[1] = HIBYTE(v266);
      uint64x2_t v282 = vshlq_u64((uint64x2_t)vandq_s8(v281, v274), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v283 = v280 | v282.i64[0] | v282.i64[1];
      unint64_t v284 = (v263 + 32) & 0x38;
      unint64_t v285 = v279 | (v283 << v284);
      if (v284 >= 0x20)
      {
        *(void *)((char *)v262 + (((v263 + 32) >> 3) & 8)) = v285;
        unint64_t v285 = v283 >> -(char)v284;
      }
      int8x16_t v286 = vsubq_s8(v487, v483);
      int8x16_t v287 = vsubq_s8(v487, v484);
      int8x16_t v288 = vsubq_s8(v487, v485);
      int8x16_t v289 = vsubq_s8(v487, v486);
      int16x8_t v290 = (int16x8_t)vtrn1q_s8(v286, v287);
      int16x8_t v291 = (int16x8_t)vtrn2q_s8(v286, v287);
      int16x8_t v292 = (int16x8_t)vtrn1q_s8(v288, v289);
      int16x8_t v293 = (int16x8_t)vtrn2q_s8(v288, v289);
      int8x16_t v294 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v290, v292), (int32x4_t)vzip1q_s16(v291, v293)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v290, v292), (int32x4_t)vtrn2q_s16(v291, v293)));
      v292.i64[0] = 0x202020202020202;
      v292.i64[1] = 0x202020202020202;
      int8x16_t v295 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v482.i8), (int16x4_t)0x4000400040004)), (int8x16_t)v292);
      v292.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v292.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v288.i64[0] = -1;
      v288.i64[1] = -1;
      uint8x16_t v296 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v288, (uint8x16_t)vorrq_s8(v295, (int8x16_t)v292)), v294);
      int16x8_t v297 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v295.i8);
      int16x8_t v298 = (int16x8_t)vmovl_high_u8((uint8x16_t)v295);
      uint16x8_t v299 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v296.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v297)), (int16x8_t)vshlq_u16(vmovl_high_u8(v296), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v298)));
      uint16x8_t v300 = (uint16x8_t)vpaddq_s16(v297, v298);
      int32x4_t v301 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v300.i8);
      int32x4_t v302 = (int32x4_t)vmovl_high_u16(v300);
      int32x4_t v303 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v299.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v301)), (int32x4_t)vshlq_u32(vmovl_high_u16(v299), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v302)));
      int32x4_t v304 = vpaddq_s32(v301, v302);
      v305.i64[0] = v303.u32[0];
      v305.i64[1] = v303.u32[1];
      uint64x2_t v306 = (uint64x2_t)v305;
      v305.i64[0] = v303.u32[2];
      v305.i64[1] = v303.u32[3];
      uint64x2_t v307 = (uint64x2_t)v305;
      v305.i64[0] = v304.u32[0];
      v305.i64[1] = v304.u32[1];
      int64x2_t v308 = v305;
      v305.i64[0] = v304.u32[2];
      v305.i64[1] = v304.u32[3];
      int64x2_t v309 = vpaddq_s64((int64x2_t)vshlq_u64(v306, (uint64x2_t)vzip1q_s64((int64x2_t)0, v308)), (int64x2_t)vshlq_u64(v307, (uint64x2_t)vzip1q_s64((int64x2_t)0, v305)));
      int64x2_t v310 = vpaddq_s64(v308, v305);
      unint64_t v311 = (v309.i64[0] << v263) | v285;
      if (v310.i64[0] + v263 >= 0x40)
      {
        v262[1] = v311;
        unint64_t v311 = (unint64_t)v309.i64[0] >> (-8 * (a1 & 7u));
        if (!v263) {
          unint64_t v311 = 0;
        }
      }
      unint64_t v312 = v310.i64[0] + (v263 | 0x40);
      unint64_t v313 = v311 | (v309.i64[1] << v312);
      if ((v312 & 0x3F) + v310.i64[1] >= 0x40)
      {
        *(void *)((char *)v262 + ((v312 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v313;
        unint64_t v313 = (unint64_t)v309.i64[1] >> -(v312 & 0x3F);
        if ((v312 & 0x3F) == 0) {
          unint64_t v313 = 0;
        }
      }
      unint64_t v314 = v312 + v310.i64[1];
      v315.i64[0] = 0x808080808080808;
      v315.i64[1] = 0x808080808080808;
      v316.i64[0] = -1;
      v316.i64[1] = -1;
      int8x16_t v317 = vandq_s8(vextq_s8(vtstq_s8(v482, v315), (int8x16_t)0, 0xCuLL), v487);
      v318.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v318.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v319 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v316, (uint8x16_t)vaddq_s8(v317, v318)), v490);
      int16x8_t v320 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v317.i8);
      uint16x8_t v321 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v319.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v320)), (int16x8_t)vmovl_high_u8(v319));
      uint16x8_t v322 = (uint16x8_t)vpaddq_s16(v320, (int16x8_t)vmovl_high_u8((uint8x16_t)v317));
      int32x4_t v323 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v322.i8);
      int32x4_t v324 = (int32x4_t)vmovl_high_u16(v322);
      int32x4_t v325 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v321.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v323)), (int32x4_t)vshlq_u32(vmovl_high_u16(v321), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v324)));
      int32x4_t v326 = vpaddq_s32(v323, v324);
      v327.i64[0] = v325.u32[0];
      v327.i64[1] = v325.u32[1];
      uint64x2_t v328 = (uint64x2_t)v327;
      v327.i64[0] = v325.u32[2];
      v327.i64[1] = v325.u32[3];
      uint64x2_t v329 = (uint64x2_t)v327;
      v327.i64[0] = v326.u32[0];
      v327.i64[1] = v326.u32[1];
      int64x2_t v330 = v327;
      v327.i64[0] = v326.u32[2];
      v327.i64[1] = v326.u32[3];
      int64x2_t v331 = vpaddq_s64((int64x2_t)vshlq_u64(v328, (uint64x2_t)vzip1q_s64((int64x2_t)0, v330)), (int64x2_t)vshlq_u64(v329, (uint64x2_t)vzip1q_s64((int64x2_t)0, v327)));
      int64x2_t v332 = vpaddq_s64(v330, v327);
      unint64_t v333 = (v331.i64[0] << v314) | v313;
      if (v332.i64[0] + (v314 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v262 + ((v314 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v333;
        unint64_t v333 = (unint64_t)v331.i64[0] >> -(v314 & 0x3F);
        if ((v314 & 0x3F) == 0) {
          unint64_t v333 = 0;
        }
      }
      unint64_t v334 = v332.i64[0] + v314;
      unint64_t v335 = v333 | (v331.i64[1] << v334);
      if ((v334 & 0x3F) + v332.i64[1] >= 0x40)
      {
        *(void *)((char *)v262 + ((v334 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v335;
        unint64_t v335 = (unint64_t)v331.i64[1] >> -(v334 & 0x3F);
        if ((v334 & 0x3F) == 0) {
          unint64_t v335 = 0;
        }
      }
      unint64_t v336 = v334 + v332.i64[1];
      int8x16_t v337 = vextq_s8((int8x16_t)0, v483, 0xCuLL);
      v338.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v338.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v339.i64[0] = -1;
      v339.i64[1] = -1;
      uint8x16_t v340 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v339, (uint8x16_t)vaddq_s8(v337, v338)), v472);
      int16x8_t v341 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v337.i8);
      int16x8_t v342 = (int16x8_t)vmovl_high_u8((uint8x16_t)v337);
      uint16x8_t v343 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v340.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v341)), (int16x8_t)vshlq_u16(vmovl_high_u8(v340), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v342)));
      uint16x8_t v344 = (uint16x8_t)vpaddq_s16(v341, v342);
      int32x4_t v345 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v344.i8);
      int32x4_t v346 = (int32x4_t)vmovl_high_u16(v344);
      int32x4_t v347 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v343.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v345)), (int32x4_t)vshlq_u32(vmovl_high_u16(v343), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)));
      int32x4_t v348 = vpaddq_s32(v345, v346);
      v349.i64[0] = v347.u32[0];
      v349.i64[1] = v347.u32[1];
      uint64x2_t v350 = (uint64x2_t)v349;
      v349.i64[0] = v347.u32[2];
      v349.i64[1] = v347.u32[3];
      uint64x2_t v351 = (uint64x2_t)v349;
      v349.i64[0] = v348.u32[0];
      v349.i64[1] = v348.u32[1];
      int64x2_t v352 = v349;
      v349.i64[0] = v348.u32[2];
      v349.i64[1] = v348.u32[3];
      int64x2_t v353 = vpaddq_s64((int64x2_t)vshlq_u64(v350, (uint64x2_t)vzip1q_s64((int64x2_t)0, v352)), (int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)));
      int64x2_t v354 = vpaddq_s64(v352, v349);
      unint64_t v355 = (v353.i64[0] << v336) | v335;
      if (v354.i64[0] + (v336 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v262 + ((v336 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v355;
        unint64_t v355 = (unint64_t)v353.i64[0] >> -(v336 & 0x3F);
        if ((v336 & 0x3F) == 0) {
          unint64_t v355 = 0;
        }
      }
      unint64_t v356 = v354.i64[0] + v336;
      unint64_t v357 = v355 | (v353.i64[1] << v356);
      if ((v356 & 0x3F) + v354.i64[1] >= 0x40)
      {
        *(void *)((char *)v262 + ((v356 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v357;
        unint64_t v357 = (unint64_t)v353.i64[1] >> -(v356 & 0x3F);
        if ((v356 & 0x3F) == 0) {
          unint64_t v357 = 0;
        }
      }
      unint64_t v358 = v356 + v354.i64[1];
      v359.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v359.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v360.i64[0] = -1;
      v360.i64[1] = -1;
      uint8x16_t v361 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v360, (uint8x16_t)vaddq_s8(v483, v359)), v474);
      int16x8_t v362 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v483.i8);
      int16x8_t v363 = (int16x8_t)vmovl_high_u8((uint8x16_t)v483);
      uint16x8_t v364 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v361.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v362)), (int16x8_t)vshlq_u16(vmovl_high_u8(v361), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v363)));
      uint16x8_t v365 = (uint16x8_t)vpaddq_s16(v362, v363);
      int32x4_t v366 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v365.i8);
      int32x4_t v367 = (int32x4_t)vmovl_high_u16(v365);
      int32x4_t v368 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v364.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v366)), (int32x4_t)vshlq_u32(vmovl_high_u16(v364), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v367)));
      int32x4_t v369 = vpaddq_s32(v366, v367);
      v370.i64[0] = v368.u32[0];
      v370.i64[1] = v368.u32[1];
      uint64x2_t v371 = (uint64x2_t)v370;
      v370.i64[0] = v368.u32[2];
      v370.i64[1] = v368.u32[3];
      uint64x2_t v372 = (uint64x2_t)v370;
      v370.i64[0] = v369.u32[0];
      v370.i64[1] = v369.u32[1];
      int64x2_t v373 = v370;
      v370.i64[0] = v369.u32[2];
      v370.i64[1] = v369.u32[3];
      int64x2_t v374 = vpaddq_s64((int64x2_t)vshlq_u64(v371, (uint64x2_t)vzip1q_s64((int64x2_t)0, v373)), (int64x2_t)vshlq_u64(v372, (uint64x2_t)vzip1q_s64((int64x2_t)0, v370)));
      int64x2_t v375 = vpaddq_s64(v373, v370);
      unint64_t v376 = (v374.i64[0] << v358) | v357;
      if (v375.i64[0] + (v358 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v262 + ((v358 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v376;
        if ((v358 & 0x3F) != 0) {
          unint64_t v376 = (unint64_t)v374.i64[0] >> -(v358 & 0x3F);
        }
        else {
          unint64_t v376 = 0;
        }
      }
      uint64_t v377 = v375.i64[1];
      unint64_t v378 = v375.i64[0] + v358;
      uint64_t v379 = (v375.i64[0] + v358) & 0x3F;
      unint64_t v380 = v376 | (v374.i64[1] << v378);
      if ((unint64_t)(v379 + v375.i64[1]) >= 0x40)
      {
        *(void *)((char *)v262 + ((v378 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v380;
        unint64_t v380 = (unint64_t)v374.i64[1] >> -(char)v379;
        if (!v379) {
          unint64_t v380 = 0;
        }
      }
      uint64_t v381 = 0;
      v382.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v382.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v383.i64[0] = -1;
      v383.i64[1] = -1;
      unint64_t v384 = v378 + v377;
      char v385 = 1;
      do
      {
        char v386 = v385;
        uint8x16_t v387 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v383, (uint8x16_t)vaddq_s8(v484, v382)), *(&v475 + v381));
        int16x8_t v388 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v484.i8);
        int16x8_t v389 = (int16x8_t)vmovl_high_u8((uint8x16_t)v484);
        uint16x8_t v390 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v387.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v388)), (int16x8_t)vshlq_u16(vmovl_high_u8(v387), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v389)));
        uint16x8_t v391 = (uint16x8_t)vpaddq_s16(v388, v389);
        int32x4_t v392 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v391.i8);
        int32x4_t v393 = (int32x4_t)vmovl_high_u16(v391);
        int32x4_t v394 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v390.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v392)), (int32x4_t)vshlq_u32(vmovl_high_u16(v390), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v393)));
        int32x4_t v395 = vpaddq_s32(v392, v393);
        v396.i64[0] = v394.u32[0];
        v396.i64[1] = v394.u32[1];
        uint64x2_t v397 = (uint64x2_t)v396;
        v396.i64[0] = v394.u32[2];
        v396.i64[1] = v394.u32[3];
        uint64x2_t v398 = (uint64x2_t)v396;
        v396.i64[0] = v395.u32[0];
        v396.i64[1] = v395.u32[1];
        int64x2_t v399 = v396;
        v396.i64[0] = v395.u32[2];
        v396.i64[1] = v395.u32[3];
        int64x2_t v400 = vpaddq_s64((int64x2_t)vshlq_u64(v397, (uint64x2_t)vzip1q_s64((int64x2_t)0, v399)), (int64x2_t)vshlq_u64(v398, (uint64x2_t)vzip1q_s64((int64x2_t)0, v396)));
        int64x2_t v401 = vpaddq_s64(v399, v396);
        unint64_t v402 = (v400.i64[0] << v384) | v380;
        if (v401.i64[0] + (v384 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v262 + ((v384 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v402;
          unint64_t v402 = (unint64_t)v400.i64[0] >> -(v384 & 0x3F);
          if ((v384 & 0x3F) == 0) {
            unint64_t v402 = 0;
          }
        }
        unint64_t v403 = v401.i64[0] + v384;
        unint64_t v380 = v402 | (v400.i64[1] << v403);
        if ((v403 & 0x3F) + v401.i64[1] >= 0x40)
        {
          *(void *)((char *)v262 + ((v403 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v380;
          unint64_t v380 = (unint64_t)v400.i64[1] >> -(v403 & 0x3F);
          if ((v403 & 0x3F) == 0) {
            unint64_t v380 = 0;
          }
        }
        char v385 = 0;
        unint64_t v384 = v403 + v401.i64[1];
        uint64_t v381 = 1;
      }
      while ((v386 & 1) != 0);
      uint64_t v404 = 0;
      char v405 = 1;
      v406.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v406.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v407.i64[0] = -1;
      v407.i64[1] = -1;
      do
      {
        char v408 = v405;
        uint8x16_t v409 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v407, (uint8x16_t)vaddq_s8(v485, v406)), *(&v477 + v404));
        int16x8_t v410 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v485.i8);
        int16x8_t v411 = (int16x8_t)vmovl_high_u8((uint8x16_t)v485);
        uint16x8_t v412 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v409.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v410)), (int16x8_t)vshlq_u16(vmovl_high_u8(v409), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v411)));
        uint16x8_t v413 = (uint16x8_t)vpaddq_s16(v410, v411);
        int32x4_t v414 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v413.i8);
        int32x4_t v415 = (int32x4_t)vmovl_high_u16(v413);
        int32x4_t v416 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v412.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v414)), (int32x4_t)vshlq_u32(vmovl_high_u16(v412), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v415)));
        int32x4_t v417 = vpaddq_s32(v414, v415);
        v418.i64[0] = v416.u32[0];
        v418.i64[1] = v416.u32[1];
        uint64x2_t v419 = (uint64x2_t)v418;
        v418.i64[0] = v416.u32[2];
        v418.i64[1] = v416.u32[3];
        uint64x2_t v420 = (uint64x2_t)v418;
        v418.i64[0] = v417.u32[0];
        v418.i64[1] = v417.u32[1];
        int64x2_t v421 = v418;
        v418.i64[0] = v417.u32[2];
        v418.i64[1] = v417.u32[3];
        int64x2_t v422 = vpaddq_s64((int64x2_t)vshlq_u64(v419, (uint64x2_t)vzip1q_s64((int64x2_t)0, v421)), (int64x2_t)vshlq_u64(v420, (uint64x2_t)vzip1q_s64((int64x2_t)0, v418)));
        int64x2_t v423 = vpaddq_s64(v421, v418);
        unint64_t v424 = (v422.i64[0] << v384) | v380;
        if (v423.i64[0] + (v384 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v262 + ((v384 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v424;
          unint64_t v424 = (unint64_t)v422.i64[0] >> -(v384 & 0x3F);
          if ((v384 & 0x3F) == 0) {
            unint64_t v424 = 0;
          }
        }
        unint64_t v425 = v423.i64[0] + v384;
        unint64_t v380 = v424 | (v422.i64[1] << v425);
        if ((v425 & 0x3F) + v423.i64[1] >= 0x40)
        {
          *(void *)((char *)v262 + ((v425 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v380;
          unint64_t v380 = (unint64_t)v422.i64[1] >> -(v425 & 0x3F);
          if ((v425 & 0x3F) == 0) {
            unint64_t v380 = 0;
          }
        }
        char v405 = 0;
        unint64_t v384 = v425 + v423.i64[1];
        uint64_t v404 = 1;
      }
      while ((v408 & 1) != 0);
      uint64_t v426 = 0;
      char v427 = 1;
      v428.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v428.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v429.i64[0] = -1;
      v429.i64[1] = -1;
      do
      {
        char v430 = v427;
        uint8x16_t v431 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v429, (uint8x16_t)vaddq_s8(v486, v428)), *(&v479 + v426));
        int16x8_t v432 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v486.i8);
        int16x8_t v433 = (int16x8_t)vmovl_high_u8((uint8x16_t)v486);
        uint16x8_t v434 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v431.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v432)), (int16x8_t)vshlq_u16(vmovl_high_u8(v431), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v433)));
        uint16x8_t v435 = (uint16x8_t)vpaddq_s16(v432, v433);
        int32x4_t v436 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v435.i8);
        int32x4_t v437 = (int32x4_t)vmovl_high_u16(v435);
        int32x4_t v438 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v434.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v436)), (int32x4_t)vshlq_u32(vmovl_high_u16(v434), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v437)));
        int32x4_t v439 = vpaddq_s32(v436, v437);
        v440.i64[0] = v438.u32[0];
        v440.i64[1] = v438.u32[1];
        uint64x2_t v441 = (uint64x2_t)v440;
        v440.i64[0] = v438.u32[2];
        v440.i64[1] = v438.u32[3];
        uint64x2_t v442 = (uint64x2_t)v440;
        v440.i64[0] = v439.u32[0];
        v440.i64[1] = v439.u32[1];
        int64x2_t v443 = v440;
        v440.i64[0] = v439.u32[2];
        v440.i64[1] = v439.u32[3];
        int64x2_t v444 = vpaddq_s64((int64x2_t)vshlq_u64(v441, (uint64x2_t)vzip1q_s64((int64x2_t)0, v443)), (int64x2_t)vshlq_u64(v442, (uint64x2_t)vzip1q_s64((int64x2_t)0, v440)));
        int64x2_t v445 = vpaddq_s64(v443, v440);
        unint64_t v446 = (v444.i64[0] << v384) | v380;
        if (v445.i64[0] + (v384 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v262 + ((v384 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v446;
          unint64_t v446 = (unint64_t)v444.i64[0] >> -(v384 & 0x3F);
          if ((v384 & 0x3F) == 0) {
            unint64_t v446 = 0;
          }
        }
        unint64_t v447 = v445.i64[0] + v384;
        unint64_t v380 = v446 | (v444.i64[1] << v447);
        if ((v447 & 0x3F) + v445.i64[1] >= 0x40)
        {
          *(void *)((char *)v262 + ((v447 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v380;
          unint64_t v380 = (unint64_t)v444.i64[1] >> -(v447 & 0x3F);
          if ((v447 & 0x3F) == 0) {
            unint64_t v380 = 0;
          }
        }
        char v427 = 0;
        unint64_t v384 = v447 + v445.i64[1];
        uint64_t v426 = 1;
      }
      while ((v430 & 1) != 0);
      if ((v384 & 0x3F) != 0) {
        *(void *)((char *)v262 + ((v384 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v380;
      }
      unint64_t result = (v384 - v263 + 7) >> 3;
      char v175 = *a2 | (result - 1);
    }
  }
  else
  {
    *(_DWORD *)a1 = a3->i32[0];
    char v175 = 3;
    unint64_t result = 4;
  }
  *a2 = v175;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, char *a4, int a5, int a6)
{
  unint64_t v9 = a3;
  int8x16_t v11 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v12, v13);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v14 = 4 * a2;
  int64x2_t v15 = a4 + 1;
  if (a6 <= 4) {
    int v16 = 4;
  }
  else {
    int v16 = a6;
  }
  unsigned int v17 = v16 - 4;
  if (v17 >= 4) {
    int v18 = 4;
  }
  else {
    int v18 = v17;
  }
  if (v12 && v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v15, (int64x2_t *)((char *)v11 + v14), a2, v12, v18);
    v9 += result;
  }
  else
  {
    *int64x2_t v15 = 0;
  }
  int8x16_t v19 = a4 + 2;
  if (a5 <= 8) {
    int v20 = 8;
  }
  else {
    int v20 = a5;
  }
  unsigned int v21 = v20 - 8;
  if (v21 >= 8) {
    int v22 = 8;
  }
  else {
    int v22 = v21;
  }
  if (v22 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, v11 + 2, a2, v22, v13);
    v9 += result;
    int8x16_t v23 = a4 + 3;
  }
  else
  {
    *int8x16_t v19 = 0;
    int8x16_t v23 = a4 + 3;
    if (!v22) {
      goto LABEL_33;
    }
  }
  if (v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int64x2_t *)((char *)v11 + v14 + 32), a2, v22, v18);
    v9 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v23 = 0;
LABEL_34:
  int8x16_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int64x2_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    v9 += result;
  }
  else
  {
    *int8x16_t v24 = 0;
  }
  int8x16_t v28 = a4 + 5;
  if (a6 <= 12) {
    int v29 = 12;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 12;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v12 && v31)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int64x2_t *)((char *)v11 + 12 * a2), a2, v12, v31);
    v9 += result;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v28 = 0;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v32, (int64x2_t *)((char *)v11 + 8 * a2 + 32), a2, v22, v27);
    v9 += result;
    int8x16_t v33 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v32 = 0;
  int8x16_t v33 = a4 + 7;
  if (!v22)
  {
LABEL_62:
    char *v33 = 0;
    return result;
  }
LABEL_58:
  if (!v31) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int64x2_t *)((char *)v11 + 12 * a2 + 32), a2, v22, v31);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int8x16_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v294 = 0;
  unint64_t v292 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v293 = (8 * (a3 & 7)) | 0x400;
  unint64_t v291 = 8 * (a3 & 7);
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v296, (uint64_t)v301, (float *)v295.i32, &v291, a4);
  v8.i64[0] = 0x303030303030303;
  v8.i64[1] = 0x303030303030303;
  int8x16_t v9 = vandq_s8(v296, v8);
  int8x16_t v10 = vbicq_s8(v301[0], vceqq_s8(v9, v8));
  v301[0] = v10;
  int8x16_t v297 = v10;
  int8x16_t v298 = v10;
  int8x16_t v299 = v10;
  int8x16_t v300 = v10;
  v11.i64[0] = 0x202020202020202;
  v11.i64[1] = 0x202020202020202;
  int8x16_t v12 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v296.i8), (int16x4_t)0x4000400040004)), v11);
  unint64_t v13 = v291;
  int8x16_t v290 = v9;
  if (vmaxvq_s8(v12) < 1)
  {
    v26.i64[0] = -1;
    v26.i64[1] = -1;
    v27.i64[0] = -1;
    v27.i64[1] = -1;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    v29.i64[0] = -1;
    v29.i64[1] = -1;
  }
  else
  {
    int8x16_t v14 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v12, v12));
    int8x16_t v15 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v14, (int16x8_t)v14));
    unint64_t v16 = vpaddq_s32((int32x4_t)v15, (int32x4_t)v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19;
    unint64_t v21 = v291 + v19;
    if (v293) {
      BOOL v22 = v293 >= v21;
    }
    else {
      BOOL v22 = 1;
    }
    int v23 = !v22;
    if (v19 <= 0x80 && v23 == 0)
    {
      v7.i64[0] = 63;
      unsigned int v30 = (int64x2_t *)(v292 + 8 * (v291 >> 6));
      int64x2_t v31 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v291, v7).i64[0], 0), vzip1q_s64((int64x2_t)0, v18));
      int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v30, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30->i64[0], 0), (uint64x2_t)vnegq_s64(v31)));
      if ((v291 & 0x3F) + v20 >= 0x81) {
        int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v30[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v31))), v25);
      }
      unint64_t v13 = v21;
    }
    else
    {
      unsigned __int8 v294 = 1;
      int8x16_t v25 = 0uLL;
    }
    int32x2_t v32 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    v33.i64[0] = v32.u32[0];
    v33.i64[1] = v32.u32[1];
    int64x2_t v34 = (int64x2_t)vshlq_u64((uint64x2_t)v25, (uint64x2_t)vnegq_s64(v33));
    *(int32x2_t *)v25.i8 = vmovn_s64((int64x2_t)v25);
    *(int32x2_t *)v34.i8 = vmovn_s64(v34);
    int16x8_t v35 = (int16x8_t)vzip1q_s32((int32x4_t)v25, (int32x4_t)v34);
    int16x8_t v36 = (int16x8_t)vshlq_u32((uint32x4_t)v35, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    *(int16x4_t *)v35.i8 = vmovn_s32((int32x4_t)v35);
    *(int16x4_t *)v36.i8 = vmovn_s32((int32x4_t)v36);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v35, v36);
    int8x16_t v38 = (int8x16_t)vshlq_u16((uint16x8_t)v37, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)))));
    *(int8x8_t *)v37.i8 = vmovn_s16((int16x8_t)v37);
    *(int8x8_t *)v38.i8 = vmovn_s16((int16x8_t)v38);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    v38.i64[0] = 0x101010101010101;
    v38.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8(v38, v12);
    v38.i64[0] = -1;
    v38.i64[1] = -1;
    int32x4_t v41 = (int32x4_t)vqtbl1q_s8(vandq_s8(v39, vaddq_s8(v40, v38)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
    int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
    int8x16_t v44 = (int8x16_t)vdupq_laneq_s32(v41, 2);
    int8x16_t v45 = (int8x16_t)vdupq_laneq_s32(v41, 3);
    int8x16_t v297 = vsubq_s8(v297, v42);
    int8x16_t v298 = vsubq_s8(v298, v43);
    int8x16_t v299 = vsubq_s8(v299, v44);
    int8x16_t v300 = vsubq_s8(v300, v45);
    int8x16_t v29 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v27 = vceqzq_s8(v44);
    int8x16_t v26 = vceqzq_s8(v45);
  }
  v46.i64[0] = 0x808080808080808;
  v46.i64[1] = 0x808080808080808;
  int8x16_t v47 = 0uLL;
  int8x16_t v48 = vandq_s8(vextq_s8(vtstq_s8(v296, v46), (int8x16_t)0, 0xCuLL), v10);
  int8x16_t v49 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v48, v48));
  int8x16_t v50 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v49, (int16x8_t)v49));
  unint64_t v51 = vpaddq_s32((int32x4_t)v50, (int32x4_t)v50).u64[0];
  v52.i64[0] = v51;
  v52.i64[1] = HIDWORD(v51);
  int64x2_t v53 = v52;
  unint64_t v54 = vaddvq_s64(v52);
  if (v293) {
    BOOL v55 = v293 >= v13 + v54;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = !v55;
  if (v54 <= 0x80 && v56 == 0)
  {
    int64x2_t v58 = vaddq_s64(vdupq_n_s64(v13 & 0x3F), vzip1q_s64((int64x2_t)0, v53));
    int8x16_t v59 = (int64x2_t *)(v292 + 8 * (v13 >> 6));
    int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v59, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59->i64[0], 0), (uint64x2_t)vnegq_s64(v58)));
    if ((v13 & 0x3F) + v54 >= 0x81) {
      int8x16_t v47 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v59[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v58))), v47);
    }
    v13 += v54;
  }
  else
  {
    unsigned __int8 v294 = 1;
  }
  int v60 = v296.i8[0] & 3;
  int8x16_t v288 = v26;
  int8x16_t v289 = v29;
  int8x16_t v286 = v28;
  int8x16_t v287 = v27;
  if (v60 == 2)
  {
    unint64_t v61 = v13 + 4;
    if (v293)
    {
      if (v293 < v61)
      {
        unsigned __int8 v294 = 1;
LABEL_39:
        unsigned __int8 v294 = 1;
        goto LABEL_40;
      }
      unint64_t v62 = v13 + 8;
      v13 += 4;
      if (v293 < v62) {
        goto LABEL_39;
      }
      unint64_t v61 = v13;
    }
    unint64_t v13 = v61 + 4;
  }
LABEL_40:
  int8x16_t v63 = 0uLL;
  int8x16_t v64 = vextq_s8((int8x16_t)0, v297, 0xCuLL);
  int8x16_t v65 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v64, v64));
  int8x16_t v66 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v65, (int16x8_t)v65));
  unint64_t v67 = vpaddq_s32((int32x4_t)v66, (int32x4_t)v66).u64[0];
  v68.i64[0] = v67;
  v68.i64[1] = HIDWORD(v67);
  int64x2_t v69 = v68;
  unint64_t v70 = vaddvq_s64(v68);
  unint64_t v71 = v13 + v70;
  if (v293) {
    BOOL v72 = v293 >= v71;
  }
  else {
    BOOL v72 = 1;
  }
  int v73 = !v72;
  if (v70 > 0x80 || v73)
  {
    int v78 = 1;
    unint64_t v76 = v292;
  }
  else
  {
    unint64_t v74 = v13 & 0x3F;
    int64x2_t v75 = vaddq_s64(vdupq_n_s64(v74), vzip1q_s64((int64x2_t)0, v69));
    unint64_t v76 = v292;
    int8x16_t v77 = (int64x2_t *)(v292 + 8 * (v13 >> 6));
    int8x16_t v63 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v77, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77->i64[0], 0), (uint64x2_t)vnegq_s64(v75)));
    if (v74 + v70 >= 0x81) {
      int8x16_t v63 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v77[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v75))), v63);
    }
    int v78 = v294;
    unint64_t v13 = v71;
  }
  int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v297, v297));
  int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
  unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v13 + v84;
  if (v293) {
    BOOL v86 = v293 >= v85;
  }
  else {
    BOOL v86 = 1;
  }
  char v87 = !v86;
  int8x16_t v88 = 0uLL;
  if (v84 > 0x80 || (v87 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v85 = v13;
    int8x16_t v92 = 0uLL;
  }
  else
  {
    unint64_t v89 = v13 & 0x3F;
    int64x2_t v90 = vaddq_s64(vdupq_n_s64(v89), vzip1q_s64((int64x2_t)0, v83));
    int8x16_t v91 = (int64x2_t *)(v76 + 8 * (v13 >> 6));
    int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v90)));
    if (v89 + v84 >= 0x81) {
      int8x16_t v92 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v91[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v90))), v92);
    }
  }
  int8x16_t v93 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v298, v298));
  int8x16_t v94 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v93, (int16x8_t)v93));
  unint64_t v95 = vpaddq_s32((int32x4_t)v94, (int32x4_t)v94).u64[0];
  v96.i64[0] = v95;
  v96.i64[1] = HIDWORD(v95);
  int64x2_t v97 = v96;
  unint64_t v98 = vaddvq_s64(v96);
  unint64_t v99 = v98;
  unint64_t v100 = v85 + v98;
  if (v293) {
    BOOL v101 = v293 >= v100;
  }
  else {
    BOOL v101 = 1;
  }
  char v102 = !v101;
  if (v98 > 0x80 || (v102 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v100 = v85;
  }
  else
  {
    unint64_t v103 = v85 & 0x3F;
    int64x2_t v104 = vaddq_s64(vdupq_n_s64(v103), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v105 = (int64x2_t *)(v76 + 8 * (v85 >> 6));
    int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
    if (v103 + v99 >= 0x81) {
      int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v88);
    }
  }
  unint64_t v106 = v100 + v99;
  if (v293) {
    BOOL v107 = v293 >= v106;
  }
  else {
    BOOL v107 = 1;
  }
  char v108 = !v107;
  int8x16_t v109 = 0uLL;
  if (v99 > 0x80 || (v108 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v106 = v100;
    int8x16_t v113 = 0uLL;
  }
  else
  {
    unint64_t v110 = v100 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v112 = (int64x2_t *)(v76 + 8 * (v100 >> 6));
    int8x16_t v113 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v99 >= 0x81) {
      int8x16_t v113 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v113);
    }
  }
  int8x16_t v114 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v299, v299));
  int8x16_t v115 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v114, (int16x8_t)v114));
  unint64_t v116 = vpaddq_s32((int32x4_t)v115, (int32x4_t)v115).u64[0];
  v117.i64[0] = v116;
  v117.i64[1] = HIDWORD(v116);
  int64x2_t v118 = v117;
  unint64_t v119 = vaddvq_s64(v117);
  unint64_t v120 = v119;
  unint64_t v121 = v106 + v119;
  if (v293) {
    BOOL v122 = v293 >= v121;
  }
  else {
    BOOL v122 = 1;
  }
  char v123 = !v122;
  if (v119 > 0x80 || (v123 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v121 = v106;
  }
  else
  {
    unint64_t v124 = v106 & 0x3F;
    int64x2_t v125 = vaddq_s64(vdupq_n_s64(v124), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v126 = (int64x2_t *)(v76 + 8 * (v106 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v126, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126->i64[0], 0), (uint64x2_t)vnegq_s64(v125)));
    if (v124 + v120 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v126[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v125))), v109);
    }
  }
  unint64_t v127 = v121 + v120;
  if (v293) {
    BOOL v128 = v293 >= v127;
  }
  else {
    BOOL v128 = 1;
  }
  char v129 = !v128;
  int8x16_t v130 = 0uLL;
  if (v120 > 0x80 || (v129 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v127 = v121;
    int8x16_t v134 = 0uLL;
  }
  else
  {
    unint64_t v131 = v121 & 0x3F;
    int64x2_t v132 = vaddq_s64(vdupq_n_s64(v131), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v133 = (int64x2_t *)(v76 + 8 * (v121 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v132)));
    if (v131 + v120 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v132))), v134);
    }
  }
  int8x16_t v135 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v300, v300));
  int8x16_t v136 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v135, (int16x8_t)v135));
  unint64_t v137 = vpaddq_s32((int32x4_t)v136, (int32x4_t)v136).u64[0];
  v138.i64[0] = v137;
  v138.i64[1] = HIDWORD(v137);
  int64x2_t v139 = v138;
  unint64_t v140 = vaddvq_s64(v138);
  unint64_t v141 = v140;
  unint64_t v142 = v127 + v140;
  if (v293) {
    BOOL v143 = v293 >= v142;
  }
  else {
    BOOL v143 = 1;
  }
  char v144 = !v143;
  if (v140 > 0x80 || (v144 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v142 = v127;
  }
  else
  {
    unint64_t v145 = v127 & 0x3F;
    int64x2_t v146 = vaddq_s64(vdupq_n_s64(v145), vzip1q_s64((int64x2_t)0, v139));
    int8x16_t v147 = (int64x2_t *)(v76 + 8 * (v127 >> 6));
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v147, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147->i64[0], 0), (uint64x2_t)vnegq_s64(v146)));
    if (v145 + v141 >= 0x81) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v147[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v146))), v130);
    }
  }
  unint64_t v148 = v142 + v141;
  if (v293) {
    BOOL v149 = v293 >= v148;
  }
  else {
    BOOL v149 = 1;
  }
  char v150 = !v149;
  if (v141 > 0x80 || (v150 & 1) != 0) {
    goto LABEL_133;
  }
  int64x2_t v151 = vaddq_s64(vdupq_n_s64(v142 & 0x3F), vzip1q_s64((int64x2_t)0, v139));
  int8x16_t v152 = (int64x2_t *)(v76 + 8 * (v142 >> 6));
  int8x16_t v153 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v152, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152->i64[0], 0), (uint64x2_t)vnegq_s64(v151)));
  if ((v142 & 0x3F) + v141 >= 0x81) {
    int8x16_t v153 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v152[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v151))), v153);
  }
  if (v78 || v293 + 8 * result - v148 - 1024 >= 9 || v60 == 2)
  {
LABEL_133:
    uint64_t v154 = (8 * (&vars0 - 100)) & 0x20;
    uint64_t v155 = v302 | (255 << v154);
    uint64_t v302 = v155;
    unint64_t v156 = (32 * ((((unint64_t)&v302 + 4) >> 2) & 1)) | 8;
    unint64_t v157 = (((32 * ((((unint64_t)&v302 + 4) >> 2) & 1)) | 0x10) - v154) | 8;
    if (v156 - v154 > 0x18) {
      unint64_t v157 = v156 - v154 + 8;
    }
    if (v157 <= 0x20)
    {
      if (v156 - v154 <= 0x18) {
        LOBYTE(v156) = (32 * ((((unint64_t)&v302 + 4) & 4) != 0)) | 0x10;
      }
      uint64_t v158 = v155 | (255 << v156);
      uint64_t v302 = v158;
      uint64_t v159 = ((_BYTE)v156 + 8) & 0x38;
      if ((unint64_t)(v159 - v154 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v302 = v158 | (255 << v159);
      }
    }
    uint64_t result = 0;
    int8x16_t v160 = (uint64_t *)((char *)a1->i64 + a2);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int8x16_t v161 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *int8x16_t v160 = 0;
    v160[1] = 0;
    int8x16_t v162 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *int8x16_t v161 = 0;
    v161[1] = 0;
    *int8x16_t v162 = 0;
    v162[1] = 0;
  }
  else
  {
    int32x2_t v163 = vzip1_s32(*(int32x2_t *)v50.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL));
    int32x2_t v164 = vzip1_s32(*(int32x2_t *)v94.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL));
    uint16x4_t v165 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v49.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
    int32x4_t v166 = (int32x4_t)vextq_s8(v93, v93, 8uLL);
    uint16x4_t v167 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v166.i8);
    v168.i64[0] = v163.u32[0];
    v168.i64[1] = v163.u32[1];
    int64x2_t v169 = v168;
    v168.i64[0] = v164.u32[0];
    v168.i64[1] = v164.u32[1];
    uint64x2_t v170 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v171 = (int64x2_t)vshlq_u64((uint64x2_t)v47, (uint64x2_t)vnegq_s64(v169));
    *(int32x2_t *)v166.i8 = vmovn_s64((int64x2_t)v47);
    *(int32x2_t *)v171.i8 = vmovn_s64(v171);
    int16x8_t v172 = (int16x8_t)vzip1q_s32(v166, (int32x4_t)v171);
    int64x2_t v173 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v170);
    *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)v88);
    *(int32x2_t *)v173.i8 = vmovn_s64(v173);
    int32x4_t v174 = vzip1q_s32((int32x4_t)v47, (int32x4_t)v173);
    int64x2_t v175 = (int64x2_t)vshlq_u64((uint64x2_t)v113, v170);
    *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v113);
    *(int32x2_t *)v175.i8 = vmovn_s64(v175);
    int16x8_t v176 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v175);
    int32x4_t v177 = (int32x4_t)vmovl_u16(v165);
    int16x8_t v178 = (int16x8_t)vmovl_u16(v167);
    uint32x4_t v179 = (uint32x4_t)vnegq_s32((int32x4_t)v178);
    int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v172, (uint32x4_t)vnegq_s32(v177));
    *(int16x4_t *)v172.i8 = vmovn_s32((int32x4_t)v172);
    *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
    int8x16_t v181 = (int8x16_t)vzip1q_s16(v172, v180);
    int16x8_t v182 = (int16x8_t)vshlq_u32((uint32x4_t)v174, v179);
    *(int16x4_t *)v178.i8 = vmovn_s32(v174);
    *(int16x4_t *)v182.i8 = vmovn_s32((int32x4_t)v182);
    int8x16_t v183 = (int8x16_t)vzip1q_s16(v178, v182);
    int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v176, v179);
    *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
    *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
    int8x16_t v185 = (int8x16_t)vzip1q_s16(v176, v184);
    uint16x8_t v186 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v298.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v298, v298, 8uLL))));
    int8x16_t v187 = (int8x16_t)vshlq_u16((uint16x8_t)v181, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v48.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))));
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    *(int8x8_t *)v187.i8 = vmovn_s16((int16x8_t)v187);
    int8x16_t v188 = vzip1q_s8(v181, v187);
    int8x16_t v189 = (int8x16_t)vshlq_u16((uint16x8_t)v183, v186);
    int8x16_t v190 = (int8x16_t)vshlq_u16((uint16x8_t)v185, v186);
    *(int8x8_t *)v183.i8 = vmovn_s16((int16x8_t)v183);
    *(int8x8_t *)v189.i8 = vmovn_s16((int16x8_t)v189);
    *(int8x8_t *)v185.i8 = vmovn_s16((int16x8_t)v185);
    *(int8x8_t *)v190.i8 = vmovn_s16((int16x8_t)v190);
    int8x16_t v191 = vzip1q_s8(v183, v189);
    v189.i64[0] = 0x808080808080808;
    v189.i64[1] = 0x808080808080808;
    int8x16_t v192 = vzip1q_s8(v185, v190);
    v190.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v190.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v193 = vsubq_s8(v189, v48);
    int8x16_t v194 = vaddq_s8(v48, v190);
    v190.i64[0] = 0x808080808080808;
    v190.i64[1] = 0x808080808080808;
    int8x16_t v195 = vshlq_s8(v188, v193);
    v193.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v193.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v196 = vsubq_s8(v190, v298);
    int8x16_t v197 = vaddq_s8(v298, v193);
    int8x16_t v198 = vshlq_s8(v191, v196);
    int8x16_t v199 = vshlq_s8(v192, v196);
    int8x16_t v200 = vshlq_s8(v195, v194);
    int8x16_t v201 = vshlq_s8(v198, v197);
    int8x16_t v202 = vshlq_s8(v199, v197);
    int8x16_t v203 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v200.i8, 0);
    int8x16_t v204 = vandq_s8(v286, v203);
    int8x16_t v205 = vsubq_s8(v201, v204);
    int8x16_t v206 = vsubq_s8(v202, v204);
    *(int32x2_t *)v201.i8 = vzip1_s32(*(int32x2_t *)v115.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL));
    *(int32x2_t *)v202.i8 = vzip1_s32(*(int32x2_t *)v136.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL));
    v168.i64[0] = v201.u32[0];
    v168.i64[1] = v201.u32[1];
    uint64x2_t v207 = (uint64x2_t)vnegq_s64(v168);
    *(int16x4_t *)v204.i8 = vuzp1_s16(*(int16x4_t *)v114.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL));
    int64x2_t v208 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
    *(int32x2_t *)v208.i8 = vmovn_s64(v208);
    int16x8_t v209 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v208);
    v168.i64[0] = v202.u32[0];
    v168.i64[1] = v202.u32[1];
    uint64x2_t v210 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v211 = (int64x2_t)vshlq_u64((uint64x2_t)v134, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v134);
    *(int32x2_t *)v211.i8 = vmovn_s64(v211);
    int16x8_t v212 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v211);
    int64x2_t v213 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v210);
    *(int32x2_t *)v114.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v213.i8 = vmovn_s64(v213);
    uint32x4_t v214 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v204.i8));
    int16x8_t v215 = (int16x8_t)vzip1q_s32((int32x4_t)v114, (int32x4_t)v213);
    int16x8_t v216 = (int16x8_t)vshlq_u32((uint32x4_t)v209, v214);
    *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
    *(int16x4_t *)v216.i8 = vmovn_s32((int32x4_t)v216);
    int8x16_t v217 = (int8x16_t)vzip1q_s16(v209, v216);
    uint32x4_t v218 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v135.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL))));
    int16x8_t v219 = (int16x8_t)vshlq_u32((uint32x4_t)v212, v214);
    *(int16x4_t *)v212.i8 = vmovn_s32((int32x4_t)v212);
    *(int16x4_t *)v219.i8 = vmovn_s32((int32x4_t)v219);
    int8x16_t v220 = (int8x16_t)vzip1q_s16(v212, v219);
    int16x8_t v221 = (int16x8_t)vshlq_u32((uint32x4_t)v215, v218);
    *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v215);
    *(int16x4_t *)v221.i8 = vmovn_s32((int32x4_t)v221);
    uint16x8_t v222 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v299.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v299, v299, 8uLL))));
    int8x16_t v223 = (int8x16_t)vzip1q_s16(v215, v221);
    int8x16_t v224 = (int8x16_t)vshlq_u16((uint16x8_t)v217, v222);
    int8x16_t v225 = (int8x16_t)vshlq_u16((uint16x8_t)v220, v222);
    *(int8x8_t *)v217.i8 = vmovn_s16((int16x8_t)v217);
    *(int8x8_t *)v224.i8 = vmovn_s16((int16x8_t)v224);
    *(int8x8_t *)v220.i8 = vmovn_s16((int16x8_t)v220);
    *(int8x8_t *)v225.i8 = vmovn_s16((int16x8_t)v225);
    int8x16_t v226 = vzip1q_s8(v217, v224);
    v224.i64[0] = 0x808080808080808;
    v224.i64[1] = 0x808080808080808;
    int8x16_t v227 = vzip1q_s8(v220, v225);
    v225.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v225.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v228 = vsubq_s8(v224, v299);
    int8x16_t v229 = vaddq_s8(v299, v225);
    int8x16_t v230 = vshlq_s8(v226, v228);
    int8x16_t v231 = vshlq_s8(v227, v228);
    uint16x8_t v232 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v300.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v300, v300, 8uLL))));
    int8x16_t v233 = vshlq_s8(v231, v229);
    int8x16_t v234 = vandq_s8(v287, v203);
    int8x16_t v235 = vsubq_s8(vshlq_s8(v230, v229), v234);
    int8x16_t v236 = vsubq_s8(v233, v234);
    int8x16_t v237 = (int8x16_t)vshlq_u16((uint16x8_t)v223, v232);
    *(int8x8_t *)v223.i8 = vmovn_s16((int16x8_t)v223);
    *(int8x8_t *)v237.i8 = vmovn_s16((int16x8_t)v237);
    v234.i64[0] = 0x808080808080808;
    v234.i64[1] = 0x808080808080808;
    int8x16_t v238 = vzip1q_s8(v223, v237);
    v223.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v223.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v239 = vsubq_s8(v234, v300);
    int8x16_t v240 = vaddq_s8(v300, v223);
    int64x2_t v241 = (int64x2_t)vshlq_u64((uint64x2_t)v153, v210);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    *(int32x2_t *)v241.i8 = vmovn_s64(v241);
    int16x8_t v242 = (int16x8_t)vzip1q_s32((int32x4_t)v153, (int32x4_t)v241);
    int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v242, v218);
    *(int16x4_t *)v242.i8 = vmovn_s32((int32x4_t)v242);
    *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
    int8x16_t v244 = (int8x16_t)vzip1q_s16(v242, v243);
    int8x16_t v245 = (int8x16_t)vshlq_u16((uint16x8_t)v244, v232);
    *(int8x8_t *)v244.i8 = vmovn_s16((int16x8_t)v244);
    *(int8x8_t *)v245.i8 = vmovn_s16((int16x8_t)v245);
    int8x16_t v246 = vshlq_s8(vshlq_s8(vzip1q_s8(v244, v245), v239), v240);
    int8x16_t v247 = vandq_s8(v288, v203);
    int8x16_t v248 = vsubq_s8(vshlq_s8(vshlq_s8(v238, v239), v240), v247);
    int8x16_t v249 = vsubq_s8(v246, v247);
    *(int32x2_t *)v238.i8 = vzip1_s32(*(int32x2_t *)v66.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL));
    *(int32x2_t *)v246.i8 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v168.i64[0] = v238.u32[0];
    v168.i64[1] = v238.u32[1];
    int64x2_t v250 = (int64x2_t)vshlq_u64((uint64x2_t)v63, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v63);
    *(int32x2_t *)v250.i8 = vmovn_s64(v250);
    int16x8_t v251 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v250);
    v168.i64[0] = v246.u32[0];
    v168.i64[1] = v246.u32[1];
    int64x2_t v252 = (int64x2_t)vshlq_u64((uint64x2_t)v92, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v92);
    *(int32x2_t *)v252.i8 = vmovn_s64(v252);
    int16x8_t v253 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v252);
    int16x8_t v254 = (int16x8_t)vshlq_u32((uint32x4_t)v251, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v65.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))));
    *(int16x4_t *)v251.i8 = vmovn_s32((int32x4_t)v251);
    *(int16x4_t *)v254.i8 = vmovn_s32((int32x4_t)v254);
    int8x16_t v255 = (int8x16_t)vzip1q_s16(v251, v254);
    int16x8_t v256 = (int16x8_t)vshlq_u32((uint32x4_t)v253, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v253.i8 = vmovn_s32((int32x4_t)v253);
    *(int16x4_t *)v256.i8 = vmovn_s32((int32x4_t)v256);
    int8x16_t v257 = (int8x16_t)vzip1q_s16(v253, v256);
    int8x16_t v258 = (int8x16_t)vshlq_u16((uint16x8_t)v255, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))));
    int8x16_t v259 = (int8x16_t)vshlq_u16((uint16x8_t)v257, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v297.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v297, v297, 8uLL)))));
    *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
    *(int8x8_t *)v258.i8 = vmovn_s16((int16x8_t)v258);
    *(int8x8_t *)v257.i8 = vmovn_s16((int16x8_t)v257);
    *(int8x8_t *)v259.i8 = vmovn_s16((int16x8_t)v259);
    int8x16_t v260 = vzip1q_s8(v255, v258);
    v258.i64[0] = 0x808080808080808;
    v258.i64[1] = 0x808080808080808;
    int8x16_t v261 = vzip1q_s8(v257, v259);
    v259.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v259.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v262 = vshlq_s8(vshlq_s8(v260, vsubq_s8(v258, v64)), vaddq_s8(v64, v259));
    int8x16_t v263 = vshlq_s8(vshlq_s8(v261, vsubq_s8(v258, v297)), vaddq_s8(v297, v259));
    v264.i64[0] = 0x101010101010101;
    v264.i64[1] = 0x101010101010101;
    int8x16_t v265 = vandq_s8(v289, v203);
    int8x16_t v266 = vsubq_s8(vaddq_s8(vandq_s8(v200, v289), v262), v265);
    int8x16_t v267 = vsubq_s8(v263, v265);
    if (vaddlvq_s8(vceqq_s8(v290, v264)))
    {
      int8x16_t v268 = vnegq_s8(vandq_s8(v296, v264));
      int8x16_t v269 = v267;
      v269.i32[3] = v266.i32[0];
      int8x16_t v270 = v266;
      v270.i32[0] = v267.i32[3];
      v304.val[0] = vbslq_s8(v268, v270, v266);
      v304.val[1] = vbslq_s8(v268, v269, v267);
      v271.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v271.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v305.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v304, (int8x16_t)xmmword_242EA7570), v268), v304.val[0]);
      v305.val[1] = vaddq_s8(v304.val[1], vandq_s8(vqtbl2q_s8(v304, v271), v268));
      int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, (int8x16_t)xmmword_242EA7580), v268), v305.val[0]);
      int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, v271), v268), v305.val[1]);
      v305.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA7590), v268), v205);
      v305.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA75A0), v268), v206);
      int8x16_t v205 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, (int8x16_t)xmmword_242EA75B0), v268), v305.val[0]);
      int8x16_t v206 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, v271), v268), v305.val[1]);
      v305.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA75C0), v268), v235);
      v305.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA7570), v268), v236);
      int8x16_t v235 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, v271), v268), v305.val[0]);
      int8x16_t v236 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, (int8x16_t)xmmword_242EA75D0), v268), v305.val[1]);
      v304.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA75E0), v268), v248);
      v304.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA7570), v268), v249);
      int8x16_t v248 = vaddq_s8(vandq_s8(vqtbl2q_s8(v304, v271), v268), v304.val[0]);
      int8x16_t v249 = vaddq_s8(vandq_s8(vqtbl2q_s8(v304, (int8x16_t)xmmword_242EA75F0), v268), v304.val[1]);
    }
    int8x16_t v272 = vaddq_s8(v295, v266);
    int8x16_t v273 = vaddq_s8(v267, v295);
    int8x16_t v274 = vaddq_s8(v205, v295);
    int8x16_t v275 = vaddq_s8(v206, v295);
    int8x16_t v276 = vaddq_s8(v235, v295);
    int8x16_t v277 = vaddq_s8(v236, v295);
    int8x16_t v278 = vaddq_s8(v248, v295);
    int8x16_t v279 = vaddq_s8(v249, v295);
    v280.i64[0] = 0x1010101010101010;
    v280.i64[1] = 0x1010101010101010;
    int8x16_t v281 = vtstq_s8(v296, v280);
    if ((v296.i8[1] & 0x10) != 0)
    {
      v281.i8[1] = v281.i8[2];
      v281.i8[2] = 0;
      int8x16_t v281 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v281.i8, 0);
      int8x16_t v282 = (int8x16_t)xmmword_242EA7610;
    }
    else
    {
      int8x16_t v282 = (int8x16_t)xmmword_242EA7600;
    }
    unint64_t v283 = (int8x16_t *)((char *)a1 + a2);
    *a1 = vaddq_s8(vandq_s8(vqtbl1q_s8(v272, v282), v281), v272);
    a1[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v274, v282), v281), v274);
    unint64_t v284 = (int8x16_t *)((char *)a1 + 2 * a2);
    *unint64_t v283 = vaddq_s8(vandq_s8(vqtbl1q_s8(v273, v282), v281), v273);
    v283[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v275, v282), v281), v275);
    *unint64_t v284 = vaddq_s8(vandq_s8(vqtbl1q_s8(v276, v282), v281), v276);
    v284[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v278, v282), v281), v278);
    unint64_t v285 = (int8x16_t *)((char *)v284 + a2);
    *unint64_t v285 = vaddq_s8(vandq_s8(vqtbl1q_s8(v277, v282), v281), v277);
    v285[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v279, v282), v281), v279);
  }
  return result;
}

_OWORD *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(_OWORD *result, uint64_t a2, _OWORD *a3, char *a4, int a5, int a6)
{
  char v6 = 0;
  uint64_t v7 = 2 * a2;
  if (a5 >= 4) {
    int v8 = 4;
  }
  else {
    int v8 = a5;
  }
  if (a6 >= 4) {
    int v9 = 4;
  }
  else {
    int v9 = a6;
  }
  if (v8 && v9)
  {
    long long v10 = result[1];
    long long v11 = *(_OWORD *)((char *)result + a2);
    long long v12 = *(_OWORD *)((char *)result + a2 + 16);
    long long v14 = *(_OWORD *)((char *)result + 2 * a2);
    long long v15 = *(_OWORD *)((char *)result + v7 + 16);
    unint64_t v13 = (_OWORD *)((char *)result + v7 + a2);
    long long v16 = *v13;
    long long v17 = v13[1];
    *a3 = *result;
    a3[1] = v11;
    a3[2] = v10;
    a3[3] = v12;
    a3[4] = v14;
    a3[5] = v16;
    a3[6] = v15;
    a3[7] = v17;
    a3 += 8;
    char v6 = 127;
  }
  *a4 = v6;
  if (a5 <= 4) {
    int v18 = 4;
  }
  else {
    int v18 = a5;
  }
  unsigned int v19 = v18 - 4;
  if (v19 >= 4) {
    int v20 = 4;
  }
  else {
    int v20 = v19;
  }
  if (v20) {
    BOOL v21 = v9 == 0;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21)
  {
    char v32 = 0;
  }
  else
  {
    BOOL v22 = (_OWORD *)((char *)result + a2 + 32);
    long long v24 = result[3];
    int v23 = (_OWORD *)((char *)result + v7 + 32);
    long long v25 = *v22;
    long long v26 = v22[1];
    long long v28 = *v23;
    long long v29 = v23[1];
    int8x16_t v27 = (long long *)((char *)v23 + a2);
    long long v30 = *v27;
    long long v31 = v27[1];
    *a3 = result[2];
    a3[1] = v25;
    a3[2] = v24;
    a3[3] = v26;
    a3[4] = v28;
    a3[5] = v30;
    a3[6] = v29;
    a3[7] = v31;
    a3 += 8;
    char v32 = 127;
  }
  char v33 = 0;
  uint64_t v34 = 4 * a2;
  a4[1] = v32;
  if (a6 <= 4) {
    int v35 = 4;
  }
  else {
    int v35 = a6;
  }
  unsigned int v36 = v35 - 4;
  if (v36 >= 4) {
    int v37 = 4;
  }
  else {
    int v37 = v36;
  }
  if (v8 && v37)
  {
    int8x16_t v38 = (_OWORD *)((char *)result + v34 + a2);
    long long v40 = *(_OWORD *)((char *)result + v34 + 16);
    int8x16_t v39 = (_OWORD *)((char *)result + v34 + v7);
    long long v41 = *v38;
    long long v42 = v38[1];
    long long v44 = *v39;
    long long v45 = v39[1];
    int8x16_t v43 = (long long *)((char *)v39 + a2);
    long long v46 = *v43;
    long long v47 = v43[1];
    *a3 = *(_OWORD *)((char *)result + 4 * a2);
    a3[1] = v41;
    a3[2] = v40;
    a3[3] = v42;
    a3[4] = v44;
    a3[5] = v46;
    a3[6] = v45;
    a3[7] = v47;
    a3 += 8;
    char v33 = 127;
  }
  char v48 = 0;
  a4[2] = v33;
  if (v20 && v37)
  {
    int8x16_t v49 = (_OWORD *)((char *)result + v34 + 32);
    int8x16_t v50 = (long long *)((char *)v49 + a2);
    long long v52 = *v49;
    long long v53 = *(_OWORD *)((char *)result + v34 + 48);
    unint64_t v51 = (long long *)((char *)v49 + v7);
    long long v54 = *v50;
    long long v55 = v50[1];
    long long v57 = *v51;
    long long v58 = v51[1];
    int v56 = (long long *)((char *)v51 + a2);
    long long v59 = *v56;
    long long v60 = v56[1];
    *a3 = v52;
    a3[1] = v54;
    a3[2] = v53;
    a3[3] = v55;
    a3[4] = v57;
    a3[5] = v59;
    a3[6] = v58;
    a3[7] = v60;
    a3 += 8;
    char v48 = 127;
  }
  char v61 = 0;
  a4[3] = v48;
  if (a5 <= 8) {
    int v62 = 8;
  }
  else {
    int v62 = a5;
  }
  unsigned int v63 = v62 - 8;
  if (v63 >= 4) {
    unsigned int v63 = 4;
  }
  if (v63 && v9)
  {
    int8x16_t v64 = (_OWORD *)((char *)result + a2 + 64);
    long long v66 = result[5];
    int8x16_t v65 = (_OWORD *)((char *)result + v7 + 64);
    long long v67 = *v64;
    long long v68 = v64[1];
    long long v70 = *v65;
    long long v71 = v65[1];
    int64x2_t v69 = (long long *)((char *)v65 + a2);
    long long v72 = *v69;
    long long v73 = v69[1];
    *a3 = result[4];
    a3[1] = v67;
    a3[2] = v66;
    a3[3] = v68;
    a3[4] = v70;
    a3[5] = v72;
    a3[6] = v71;
    a3[7] = v73;
    a3 += 8;
    char v61 = 127;
  }
  char v74 = 0;
  a4[4] = v61;
  if (a5 <= 12) {
    int v75 = 12;
  }
  else {
    int v75 = a5;
  }
  unsigned int v76 = v75 - 12;
  if (v76 >= 4) {
    int v77 = 4;
  }
  else {
    int v77 = v76;
  }
  if (v77 && v9)
  {
    int v78 = (_OWORD *)((char *)result + a2 + 96);
    long long v80 = result[7];
    int8x16_t v79 = (_OWORD *)((char *)result + v7 + 96);
    long long v81 = *v78;
    long long v82 = v78[1];
    long long v84 = *v79;
    long long v85 = v79[1];
    int64x2_t v83 = (long long *)((char *)v79 + a2);
    long long v86 = *v83;
    long long v87 = v83[1];
    *a3 = result[6];
    a3[1] = v81;
    a3[2] = v80;
    a3[3] = v82;
    a3[4] = v84;
    a3[5] = v86;
    a3[6] = v85;
    a3[7] = v87;
    a3 += 8;
    char v74 = 127;
  }
  char v88 = 0;
  a4[5] = v74;
  if (v63 && v37)
  {
    unint64_t v89 = (_OWORD *)((char *)result + v34 + 64);
    int64x2_t v90 = (long long *)((char *)v89 + a2);
    long long v92 = *v89;
    long long v93 = *(_OWORD *)((char *)result + v34 + 80);
    int8x16_t v91 = (long long *)((char *)v89 + v7);
    long long v94 = *v90;
    long long v95 = v90[1];
    long long v97 = *v91;
    long long v98 = v91[1];
    int64x2_t v96 = (long long *)((char *)v91 + a2);
    long long v99 = *v96;
    long long v100 = v96[1];
    *a3 = v92;
    a3[1] = v94;
    a3[2] = v93;
    a3[3] = v95;
    a3[4] = v97;
    a3[5] = v99;
    a3[6] = v98;
    a3[7] = v100;
    a3 += 8;
    char v88 = 127;
  }
  char v101 = 0;
  a4[6] = v88;
  if (v77 && v37)
  {
    char v102 = (_OWORD *)((char *)result + v34 + 96);
    unint64_t v103 = (long long *)((char *)v102 + a2);
    long long v105 = *v102;
    long long v106 = v102[1];
    int64x2_t v104 = (long long *)((char *)v102 + v7);
    long long v107 = *v103;
    long long v108 = v103[1];
    long long v110 = *v104;
    long long v111 = v104[1];
    int8x16_t v109 = (long long *)((char *)v104 + a2);
    long long v112 = *v109;
    long long v113 = v109[1];
    *a3 = v105;
    a3[1] = v107;
    a3[2] = v106;
    a3[3] = v108;
    a3[4] = v110;
    a3[5] = v112;
    a3[6] = v111;
    a3[7] = v113;
    char v101 = 127;
  }
  a4[7] = v101;
  return result;
}

int8x16_t *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned int v6 = *a3;
  if (v6 == 127)
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    long long v9 = *(_OWORD *)(a2 + 32);
    long long v10 = *(_OWORD *)(a2 + 48);
    long long v11 = *(_OWORD *)(a2 + 80);
    long long v12 = *(_OWORD *)(a2 + 96);
    long long v13 = *(_OWORD *)(a2 + 112);
    long long v14 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 128) = v8;
    *(_OWORD *)(a1 + 144) = v10;
    *(_OWORD *)(a1 + 256) = v14;
    *(_OWORD *)(a1 + 272) = v12;
    *(_OWORD *)(a1 + 384) = v11;
    *(_OWORD *)(a1 + 400) = v13;
    uint64_t v7 = 128;
  }
  else if (v6 == 3)
  {
    float32x4_t v15 = vld1q_dup_f32((const float *)a2);
    *(float32x4_t *)a1 = v15;
    *(float32x4_t *)(a1 + 16) = v15;
    *(float32x4_t *)(a1 + 128) = v15;
    *(float32x4_t *)(a1 + 144) = v15;
    *(float32x4_t *)(a1 + 256) = v15;
    *(float32x4_t *)(a1 + 272) = v15;
    *(float32x4_t *)(a1 + 384) = v15;
    *(float32x4_t *)(a1 + 400) = v15;
    uint64_t v7 = 4;
  }
  else if (*a3)
  {
    uint64_t v7 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)a1, 128, a2, v6);
  }
  else
  {
    uint64_t v7 = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 256) = 0u;
    *(_OWORD *)(a1 + 272) = 0u;
    *(_OWORD *)(a1 + 384) = 0u;
    *(_OWORD *)(a1 + 400) = 0u;
  }
  uint64_t v16 = a2 + v7;
  long long v17 = (int8x16_t *)(a1 + 32);
  unsigned int v18 = a3[1];
  if (a3[1])
  {
    if (v18 == 3)
    {
      float32x4_t v27 = vld1q_dup_f32((const float *)v16);
      *(float32x4_t *)(a1 + 32) = v27;
      *(float32x4_t *)(a1 + 48) = v27;
      *(float32x4_t *)(a1 + 160) = v27;
      *(float32x4_t *)(a1 + 176) = v27;
      *(float32x4_t *)(a1 + 288) = v27;
      *(float32x4_t *)(a1 + 304) = v27;
      *(float32x4_t *)(a1 + 416) = v27;
      *(float32x4_t *)(a1 + 432) = v27;
      uint64_t v26 = 4;
    }
    else if (v18 == 127)
    {
      long long v19 = *(_OWORD *)(v16 + 16);
      long long v20 = *(_OWORD *)(v16 + 32);
      long long v21 = *(_OWORD *)(v16 + 48);
      long long v22 = *(_OWORD *)(v16 + 80);
      long long v23 = *(_OWORD *)(v16 + 96);
      long long v24 = *(_OWORD *)(v16 + 112);
      long long v25 = *(_OWORD *)(v16 + 64);
      *long long v17 = *(int8x16_t *)v16;
      *(_OWORD *)(a1 + 48) = v20;
      *(_OWORD *)(a1 + 160) = v19;
      *(_OWORD *)(a1 + 176) = v21;
      *(_OWORD *)(a1 + 288) = v25;
      *(_OWORD *)(a1 + 304) = v23;
      *(_OWORD *)(a1 + 416) = v22;
      *(_OWORD *)(a1 + 432) = v24;
      uint64_t v26 = 128;
    }
    else
    {
      uint64_t v26 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v17, 128, v16, v18);
    }
  }
  else
  {
    uint64_t v26 = 0;
    *long long v17 = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 288) = 0u;
    *(_OWORD *)(a1 + 304) = 0u;
    *(_OWORD *)(a1 + 416) = 0u;
    *(_OWORD *)(a1 + 432) = 0u;
  }
  uint64_t v28 = v16 + v26;
  long long v29 = (int8x16_t *)(a1 + 512);
  unsigned int v30 = a3[2];
  if (a3[2])
  {
    if (v30 == 3)
    {
      float32x4_t v39 = vld1q_dup_f32((const float *)v28);
      *(float32x4_t *)(a1 + 512) = v39;
      *(float32x4_t *)(a1 + 528) = v39;
      *(float32x4_t *)(a1 + 640) = v39;
      *(float32x4_t *)(a1 + 656) = v39;
      *(float32x4_t *)(a1 + 768) = v39;
      *(float32x4_t *)(a1 + 784) = v39;
      *(float32x4_t *)(a1 + 896) = v39;
      *(float32x4_t *)(a1 + 912) = v39;
      uint64_t v38 = 4;
    }
    else if (v30 == 127)
    {
      long long v31 = *(_OWORD *)(v28 + 16);
      long long v32 = *(_OWORD *)(v28 + 32);
      long long v33 = *(_OWORD *)(v28 + 48);
      long long v34 = *(_OWORD *)(v28 + 80);
      long long v35 = *(_OWORD *)(v28 + 96);
      long long v36 = *(_OWORD *)(v28 + 112);
      long long v37 = *(_OWORD *)(v28 + 64);
      *long long v29 = *(int8x16_t *)v28;
      *(_OWORD *)(a1 + 528) = v32;
      *(_OWORD *)(a1 + 640) = v31;
      *(_OWORD *)(a1 + 656) = v33;
      *(_OWORD *)(a1 + 768) = v37;
      *(_OWORD *)(a1 + 784) = v35;
      *(_OWORD *)(a1 + 896) = v34;
      *(_OWORD *)(a1 + 912) = v36;
      uint64_t v38 = 128;
    }
    else
    {
      uint64_t v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v29, 128, v28, v30);
    }
  }
  else
  {
    uint64_t v38 = 0;
    *long long v29 = 0u;
    *(_OWORD *)(a1 + 528) = 0u;
    *(_OWORD *)(a1 + 640) = 0u;
    *(_OWORD *)(a1 + 656) = 0u;
    *(_OWORD *)(a1 + 768) = 0u;
    *(_OWORD *)(a1 + 784) = 0u;
    *(_OWORD *)(a1 + 896) = 0u;
    *(_OWORD *)(a1 + 912) = 0u;
  }
  uint64_t v40 = v28 + v38;
  long long v41 = (int8x16_t *)(a1 + 544);
  unsigned int v42 = a3[3];
  if (a3[3])
  {
    if (v42 == 3)
    {
      float32x4_t v51 = vld1q_dup_f32((const float *)v40);
      *(float32x4_t *)(a1 + 544) = v51;
      *(float32x4_t *)(a1 + 560) = v51;
      *(float32x4_t *)(a1 + 672) = v51;
      *(float32x4_t *)(a1 + 688) = v51;
      *(float32x4_t *)(a1 + 800) = v51;
      *(float32x4_t *)(a1 + 816) = v51;
      *(float32x4_t *)(a1 + 928) = v51;
      *(float32x4_t *)(a1 + 944) = v51;
      uint64_t v50 = 4;
    }
    else if (v42 == 127)
    {
      long long v43 = *(_OWORD *)(v40 + 16);
      long long v44 = *(_OWORD *)(v40 + 32);
      long long v45 = *(_OWORD *)(v40 + 48);
      long long v46 = *(_OWORD *)(v40 + 80);
      long long v47 = *(_OWORD *)(v40 + 96);
      long long v48 = *(_OWORD *)(v40 + 112);
      long long v49 = *(_OWORD *)(v40 + 64);
      *long long v41 = *(int8x16_t *)v40;
      *(_OWORD *)(a1 + 560) = v44;
      *(_OWORD *)(a1 + 672) = v43;
      *(_OWORD *)(a1 + 688) = v45;
      *(_OWORD *)(a1 + 800) = v49;
      *(_OWORD *)(a1 + 816) = v47;
      *(_OWORD *)(a1 + 928) = v46;
      *(_OWORD *)(a1 + 944) = v48;
      uint64_t v50 = 128;
    }
    else
    {
      uint64_t v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v41, 128, v40, v42);
    }
  }
  else
  {
    uint64_t v50 = 0;
    *long long v41 = 0u;
    *(_OWORD *)(a1 + 560) = 0u;
    *(_OWORD *)(a1 + 672) = 0u;
    *(_OWORD *)(a1 + 688) = 0u;
    *(_OWORD *)(a1 + 800) = 0u;
    *(_OWORD *)(a1 + 816) = 0u;
    *(_OWORD *)(a1 + 928) = 0u;
    *(_OWORD *)(a1 + 944) = 0u;
  }
  uint64_t v52 = v40 + v50;
  long long v53 = (int8x16_t *)(a1 + 64);
  unsigned int v54 = a3[4];
  if (a3[4])
  {
    if (v54 == 3)
    {
      float32x4_t v63 = vld1q_dup_f32((const float *)v52);
      *(float32x4_t *)(a1 + 64) = v63;
      *(float32x4_t *)(a1 + 80) = v63;
      *(float32x4_t *)(a1 + 192) = v63;
      *(float32x4_t *)(a1 + 208) = v63;
      *(float32x4_t *)(a1 + 320) = v63;
      *(float32x4_t *)(a1 + 336) = v63;
      *(float32x4_t *)(a1 + 448) = v63;
      *(float32x4_t *)(a1 + 464) = v63;
      uint64_t v62 = 4;
    }
    else if (v54 == 127)
    {
      long long v55 = *(_OWORD *)(v52 + 16);
      long long v56 = *(_OWORD *)(v52 + 32);
      long long v57 = *(_OWORD *)(v52 + 48);
      long long v58 = *(_OWORD *)(v52 + 80);
      long long v59 = *(_OWORD *)(v52 + 96);
      long long v60 = *(_OWORD *)(v52 + 112);
      long long v61 = *(_OWORD *)(v52 + 64);
      *long long v53 = *(int8x16_t *)v52;
      *(_OWORD *)(a1 + 80) = v56;
      *(_OWORD *)(a1 + 192) = v55;
      *(_OWORD *)(a1 + 208) = v57;
      *(_OWORD *)(a1 + 320) = v61;
      *(_OWORD *)(a1 + 336) = v59;
      *(_OWORD *)(a1 + 448) = v58;
      *(_OWORD *)(a1 + 464) = v60;
      uint64_t v62 = 128;
    }
    else
    {
      uint64_t v62 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v53, 128, v52, v54);
    }
  }
  else
  {
    uint64_t v62 = 0;
    *long long v53 = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
    *(_OWORD *)(a1 + 208) = 0u;
    *(_OWORD *)(a1 + 320) = 0u;
    *(_OWORD *)(a1 + 336) = 0u;
    *(_OWORD *)(a1 + 448) = 0u;
    *(_OWORD *)(a1 + 464) = 0u;
  }
  uint64_t v64 = v52 + v62;
  int8x16_t v65 = (int8x16_t *)(a1 + 96);
  unsigned int v66 = a3[5];
  if (a3[5])
  {
    if (v66 == 3)
    {
      float32x4_t v75 = vld1q_dup_f32((const float *)v64);
      *(float32x4_t *)(a1 + 96) = v75;
      *(float32x4_t *)(a1 + 112) = v75;
      *(float32x4_t *)(a1 + 224) = v75;
      *(float32x4_t *)(a1 + 240) = v75;
      *(float32x4_t *)(a1 + 352) = v75;
      *(float32x4_t *)(a1 + 368) = v75;
      *(float32x4_t *)(a1 + 480) = v75;
      *(float32x4_t *)(a1 + 496) = v75;
      uint64_t v74 = 4;
    }
    else if (v66 == 127)
    {
      long long v67 = *(_OWORD *)(v64 + 16);
      long long v68 = *(_OWORD *)(v64 + 32);
      long long v69 = *(_OWORD *)(v64 + 48);
      long long v70 = *(_OWORD *)(v64 + 80);
      long long v71 = *(_OWORD *)(v64 + 96);
      long long v72 = *(_OWORD *)(v64 + 112);
      long long v73 = *(_OWORD *)(v64 + 64);
      *int8x16_t v65 = *(int8x16_t *)v64;
      *(_OWORD *)(a1 + 112) = v68;
      *(_OWORD *)(a1 + 224) = v67;
      *(_OWORD *)(a1 + 240) = v69;
      *(_OWORD *)(a1 + 352) = v73;
      *(_OWORD *)(a1 + 368) = v71;
      *(_OWORD *)(a1 + 480) = v70;
      *(_OWORD *)(a1 + 496) = v72;
      uint64_t v74 = 128;
    }
    else
    {
      uint64_t v74 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v65, 128, v64, v66);
    }
  }
  else
  {
    uint64_t v74 = 0;
    *int8x16_t v65 = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 224) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 368) = 0u;
    *(_OWORD *)(a1 + 480) = 0u;
    *(_OWORD *)(a1 + 496) = 0u;
  }
  uint64_t v76 = v64 + v74;
  int v77 = (int8x16_t *)(a1 + 576);
  unsigned int v78 = a3[6];
  if (a3[6])
  {
    if (v78 == 3)
    {
      float32x4_t v87 = vld1q_dup_f32((const float *)v76);
      *(float32x4_t *)(a1 + 576) = v87;
      *(float32x4_t *)(a1 + 592) = v87;
      *(float32x4_t *)(a1 + 704) = v87;
      *(float32x4_t *)(a1 + 720) = v87;
      *(float32x4_t *)(a1 + 832) = v87;
      *(float32x4_t *)(a1 + 848) = v87;
      *(float32x4_t *)(a1 + 960) = v87;
      *(float32x4_t *)(a1 + 976) = v87;
      uint64_t v86 = 4;
    }
    else if (v78 == 127)
    {
      long long v79 = *(_OWORD *)(v76 + 16);
      long long v80 = *(_OWORD *)(v76 + 32);
      long long v81 = *(_OWORD *)(v76 + 48);
      long long v82 = *(_OWORD *)(v76 + 80);
      long long v83 = *(_OWORD *)(v76 + 96);
      long long v84 = *(_OWORD *)(v76 + 112);
      long long v85 = *(_OWORD *)(v76 + 64);
      *int v77 = *(int8x16_t *)v76;
      *(_OWORD *)(a1 + 592) = v80;
      *(_OWORD *)(a1 + 704) = v79;
      *(_OWORD *)(a1 + 720) = v81;
      *(_OWORD *)(a1 + 832) = v85;
      *(_OWORD *)(a1 + 848) = v83;
      *(_OWORD *)(a1 + 960) = v82;
      *(_OWORD *)(a1 + 976) = v84;
      uint64_t v86 = 128;
    }
    else
    {
      uint64_t v86 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v77, 128, v76, v78);
    }
  }
  else
  {
    uint64_t v86 = 0;
    *int v77 = 0u;
    *(_OWORD *)(a1 + 592) = 0u;
    *(_OWORD *)(a1 + 704) = 0u;
    *(_OWORD *)(a1 + 720) = 0u;
    *(_OWORD *)(a1 + 832) = 0u;
    *(_OWORD *)(a1 + 848) = 0u;
    *(_OWORD *)(a1 + 960) = 0u;
    *(_OWORD *)(a1 + 976) = 0u;
  }
  uint64_t result = (int8x16_t *)(a1 + 608);
  unsigned int v89 = a3[7];
  if (!a3[7])
  {
    float32x4_t v98 = 0uLL;
    *uint64_t result = 0u;
    *(_OWORD *)(a1 + 624) = 0u;
LABEL_56:
    *(float32x4_t *)(a1 + 736) = v98;
    *(float32x4_t *)(a1 + 752) = v98;
    *(float32x4_t *)(a1 + 864) = v98;
    *(float32x4_t *)(a1 + 880) = v98;
    *(float32x4_t *)(a1 + 992) = v98;
    *(float32x4_t *)(a1 + 1008) = v98;
    return result;
  }
  uint64_t v90 = v76 + v86;
  if (v89 == 3)
  {
    float32x4_t v98 = vld1q_dup_f32((const float *)v90);
    *(float32x4_t *)(a1 + 608) = v98;
    *(float32x4_t *)(a1 + 624) = v98;
    goto LABEL_56;
  }
  if (v89 == 127)
  {
    long long v91 = *(_OWORD *)(v90 + 16);
    long long v92 = *(_OWORD *)(v90 + 32);
    long long v93 = *(_OWORD *)(v90 + 48);
    long long v94 = *(_OWORD *)(v90 + 80);
    long long v95 = *(_OWORD *)(v90 + 96);
    long long v96 = *(_OWORD *)(v90 + 112);
    long long v97 = *(_OWORD *)(v90 + 64);
    *uint64_t result = *(int8x16_t *)v90;
    *(_OWORD *)(a1 + 624) = v92;
    *(_OWORD *)(a1 + 736) = v91;
    *(_OWORD *)(a1 + 752) = v93;
    *(_OWORD *)(a1 + 864) = v97;
    *(_OWORD *)(a1 + 880) = v95;
    *(_OWORD *)(a1 + 992) = v94;
    *(_OWORD *)(a1 + 1008) = v96;
  }
  else
  {
    return (int8x16_t *)AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(result, 128, v90, v89);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int8x16_t *a1, char *a2, int8x16_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  unsigned int v6 = (int8x16_t *)((char *)a3 + 2 * a4);
  int8x16_t v7 = *a3;
  int8x16_t v8 = *(int8x16_t *)((char *)a3 + a4);
  int8x16_t v9 = *(int8x16_t *)((char *)&a3[1] + a4);
  int8x16_t v11 = *v6;
  int8x16_t v12 = v6[1];
  long long v10 = (int8x16_t *)((char *)v6 + a4);
  int8x16_t v13 = v11;
  int8x16_t v14 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a3->i8, 0);
  int8x16_t v15 = vsubq_s8(*a3, v14);
  int8x16_t v470 = vsubq_s8(v8, v14);
  int8x16_t v466 = a3[1];
  int8x16_t v16 = vsubq_s8(v466, v14);
  int8x16_t v17 = vsubq_s8(v9, v14);
  int8x16_t v18 = vsubq_s8(v11, v14);
  int8x16_t v19 = vsubq_s8(*v10, v14);
  int8x16_t v467 = v12;
  int8x16_t v20 = vsubq_s8(v12, v14);
  int8x16_t v463 = *v10;
  int8x16_t v464 = v10[1];
  int8x16_t v21 = vsubq_s8(v464, v14);
  int8x16_t v22 = vqtbl1q_s8(vmaxq_s8(v15, v470), (int8x16_t)xmmword_242EA7560);
  int8x16_t v23 = vqtbl1q_s8(vminq_s8(v15, v470), (int8x16_t)xmmword_242EA7560);
  int8x16_t v24 = vpmaxq_s8(v22, v22);
  int8x16_t v25 = vpminq_s8(v23, v23);
  int8x16_t v26 = vpmaxq_s8(v24, v24);
  int8x16_t v27 = vpminq_s8(v25, v25);
  v12.i64[0] = 0x8080808080808080;
  v12.i64[1] = 0x8080808080808080;
  int8x16_t v28 = vmaxq_s8(v26, v12);
  v29.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v29.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v30 = vminq_s8(v27, v29);
  int8x16_t v31 = vzip1q_s8(v26, v27);
  v32.i64[0] = 0x808080808080808;
  v32.i64[1] = 0x808080808080808;
  int8x16_t v33 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v31)), vceqzq_s8(v31));
  int8x16_t v34 = vpmaxq_s8(v33, v33);
  int8x16_t v35 = vqtbl1q_s8(vmaxq_s8(v16, v17), (int8x16_t)xmmword_242EA7560);
  int8x16_t v36 = vqtbl1q_s8(vminq_s8(v16, v17), (int8x16_t)xmmword_242EA7560);
  int8x16_t v37 = vpmaxq_s8(v35, v35);
  int8x16_t v38 = vpminq_s8(v36, v36);
  int8x16_t v39 = vpmaxq_s8(v37, v37);
  int8x16_t v40 = vpminq_s8(v38, v38);
  int8x16_t v41 = vmaxq_s8(v28, v39);
  int8x16_t v42 = vminq_s8(v30, v40);
  int8x16_t v43 = vzip1q_s8(v39, v40);
  int8x16_t v44 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v43)), vceqzq_s8(v43));
  int8x16_t v45 = vpmaxq_s8(v44, v44);
  int8x16_t v46 = vqtbl1q_s8(vmaxq_s8(v18, v19), (int8x16_t)xmmword_242EA7560);
  int8x16_t v47 = vqtbl1q_s8(vminq_s8(v18, v19), (int8x16_t)xmmword_242EA7560);
  int8x16_t v48 = vpmaxq_s8(v46, v46);
  int8x16_t v49 = vpminq_s8(v47, v47);
  int8x16_t v50 = vpmaxq_s8(v48, v48);
  int8x16_t v51 = vpminq_s8(v49, v49);
  int8x16_t v52 = vmaxq_s8(v41, v50);
  int8x16_t v53 = vminq_s8(v42, v51);
  int8x16_t v54 = vzip1q_s8(v50, v51);
  int8x16_t v55 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v54)), vceqzq_s8(v54));
  int8x16_t v56 = vpmaxq_s8(v55, v55);
  int8x16_t v57 = vqtbl1q_s8(vmaxq_s8(v20, v21), (int8x16_t)xmmword_242EA7560);
  int8x16_t v58 = vqtbl1q_s8(vminq_s8(v20, v21), (int8x16_t)xmmword_242EA7560);
  int8x16_t v59 = vpmaxq_s8(v57, v57);
  int8x16_t v60 = vpminq_s8(v58, v58);
  int8x16_t v61 = vpmaxq_s8(v59, v59);
  int8x16_t v62 = vpminq_s8(v60, v60);
  int8x16_t v63 = vmaxq_s8(v52, v61);
  int8x16_t v64 = vminq_s8(v53, v62);
  int8x16_t v65 = vzip1q_s8(v61, v62);
  int8x16_t v66 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v65)), vceqzq_s8(v65));
  int8x16_t v67 = vpmaxq_s8(v66, v66);
  int8x16_t v68 = vmaxq_s8(vmaxq_s8(v34, v45), vmaxq_s8(v56, v67));
  int8x16_t v69 = vclzq_s8(vsubq_s8(v63, v64));
  v52.i64[0] = 0x707070707070707;
  v52.i64[1] = 0x707070707070707;
  v70.i64[0] = -1;
  v70.i64[1] = -1;
  int8x16_t v71 = vshlq_s8(v70, vsubq_s8(v52, v69));
  int8x16_t v72 = vsubq_s8(v32, v69);
  int8x16_t v73 = vcgtq_s8(v68, v72);
  int8x16_t v74 = vbslq_s8(v73, v72, v68);
  int8x16_t v75 = vandq_s8(vsubq_s8(v71, v64), v73);
  v76.i64[0] = 0x303030303030303;
  v76.i64[1] = 0x303030303030303;
  int v77 = vmaxvq_s8(v74);
  int8x16_t v78 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v34), v76), (int8x16_t)0);
  int8x16_t v79 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v45), v76), (int8x16_t)0);
  int8x16_t v80 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v56), v76), (int8x16_t)0);
  int8x16_t v81 = vmaxq_s8(vminq_s8(vsubq_s8(v74, v67), v76), (int8x16_t)0);
  v71.i64[0] = 0x404040404040404;
  v71.i64[1] = 0x404040404040404;
  int8x16_t v82 = vorrq_s8(vbicq_s8(v71, vceqq_s8(vaddq_s8(v81, v80), vnegq_s8(vaddq_s8(v78, v79)))), vorrq_s8(vandq_s8(vceqzq_s8(v74), v76), vandq_s8(v73, v32)));
  int8x16_t v468 = v15;
  int8x16_t v472 = v16;
  int8x16_t v473 = v17;
  int8x16_t v474 = v18;
  int8x16_t v475 = v19;
  int8x16_t v476 = v20;
  int8x16_t v477 = v21;
  int8x16_t v484 = v74;
  int8x16_t v485 = v64;
  int8x16_t v459 = v75;
  int8x16_t v461 = v63;
  int8x16_t v486 = v63;
  int8x16_t v487 = v75;
  int8x16_t v83 = vsubq_s8(v74, v78);
  int8x16_t v84 = vsubq_s8(v74, v79);
  int8x16_t v480 = v83;
  int8x16_t v481 = v84;
  int8x16_t v85 = vsubq_s8(v74, v80);
  int8x16_t v86 = vsubq_s8(v74, v81);
  int8x16_t v482 = v85;
  int8x16_t v483 = v86;
  BOOL v88 = a5 < 2 || a6 < 2;
  int8x16_t v478 = v14;
  int8x16_t v479 = v82;
  if (v77)
  {
    int8x16_t v453 = v17;
    int8x16_t v455 = v21;
    int8x16_t v457 = v19;
    int8x16_t v465 = v13;
    int8x16_t v447 = vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7600));
    int8x16_t v445 = vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7600));
    int8x16_t v446 = vsubq_s8(v470, vqtbl1q_s8(v470, (int8x16_t)xmmword_242EA7600));
    int8x16_t v89 = vqtbl1q_s8(vmaxq_s8(v447, v446), (int8x16_t)xmmword_242EA7560);
    int8x16_t v90 = vqtbl1q_s8(vminq_s8(v447, v446), (int8x16_t)xmmword_242EA7560);
    int8x16_t v91 = vpmaxq_s8(v89, v89);
    int8x16_t v92 = vpminq_s8(v90, v90);
    int8x16_t v93 = vpmaxq_s8(v91, v91);
    int8x16_t v94 = vpminq_s8(v92, v92);
    v95.i64[0] = 0x8080808080808080;
    v95.i64[1] = 0x8080808080808080;
    int8x16_t v96 = vmaxq_s8(v93, v95);
    v97.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v97.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int8x16_t v98 = vminq_s8(v94, v97);
    int8x16_t v99 = vzip1q_s8(v93, v94);
    int8x16_t v100 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v99)), vceqzq_s8(v99));
    int8x16_t v101 = vpmaxq_s8(v100, v100);
    int8x16_t v444 = vsubq_s8(v473, vqtbl1q_s8(v473, (int8x16_t)xmmword_242EA7600));
    int8x16_t v102 = vqtbl1q_s8(vmaxq_s8(v445, v444), (int8x16_t)xmmword_242EA7560);
    int8x16_t v103 = vqtbl1q_s8(vminq_s8(v445, v444), (int8x16_t)xmmword_242EA7560);
    int8x16_t v104 = vpmaxq_s8(v102, v102);
    int8x16_t v105 = vpminq_s8(v103, v103);
    int8x16_t v106 = vpmaxq_s8(v104, v104);
    int8x16_t v107 = vpminq_s8(v105, v105);
    int8x16_t v108 = vmaxq_s8(v96, v106);
    int8x16_t v109 = vminq_s8(v98, v107);
    int8x16_t v110 = vzip1q_s8(v106, v107);
    int8x16_t v111 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v110)), vceqzq_s8(v110));
    int8x16_t v112 = vpmaxq_s8(v111, v111);
    int8x16_t v448 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7600));
    int8x16_t v449 = vsubq_s8(v475, vqtbl1q_s8(v475, (int8x16_t)xmmword_242EA7600));
    int8x16_t v113 = vqtbl1q_s8(vmaxq_s8(v448, v449), (int8x16_t)xmmword_242EA7560);
    int8x16_t v114 = vqtbl1q_s8(vminq_s8(v448, v449), (int8x16_t)xmmword_242EA7560);
    int8x16_t v115 = vpmaxq_s8(v113, v113);
    int8x16_t v116 = vpminq_s8(v114, v114);
    int8x16_t v117 = vpmaxq_s8(v115, v115);
    int8x16_t v118 = vpminq_s8(v116, v116);
    int8x16_t v119 = vmaxq_s8(v108, v117);
    int8x16_t v120 = vminq_s8(v109, v118);
    int8x16_t v121 = vzip1q_s8(v117, v118);
    int8x16_t v122 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v121)), vceqzq_s8(v121));
    int8x16_t v123 = vpmaxq_s8(v122, v122);
    int8x16_t v450 = vsubq_s8(v20, vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7600));
    int8x16_t v451 = vsubq_s8(v477, vqtbl1q_s8(v477, (int8x16_t)xmmword_242EA7600));
    int8x16_t v124 = vqtbl1q_s8(vmaxq_s8(v450, v451), (int8x16_t)xmmword_242EA7560);
    int8x16_t v125 = vqtbl1q_s8(vminq_s8(v450, v451), (int8x16_t)xmmword_242EA7560);
    int8x16_t v126 = vpmaxq_s8(v124, v124);
    int8x16_t v127 = vpminq_s8(v125, v125);
    int8x16_t v128 = vpmaxq_s8(v126, v126);
    int8x16_t v129 = vpminq_s8(v127, v127);
    int8x16_t v130 = vmaxq_s8(v119, v128);
    int8x16_t v131 = vminq_s8(v120, v129);
    int8x16_t v132 = vzip1q_s8(v128, v129);
    int8x16_t v133 = vbicq_s8(vsubq_s8(v32, vclsq_s8(v132)), vceqzq_s8(v132));
    int8x16_t v134 = vpmaxq_s8(v133, v133);
    int8x16_t v135 = vmaxq_s8(vmaxq_s8(v101, v112), vmaxq_s8(v123, v134));
    int8x16_t v443 = v130;
    int8x16_t v136 = vclzq_s8(vsubq_s8(v130, v131));
    int8x16_t v137 = vsubq_s8(v32, v136);
    int8x16_t v138 = vcgtq_s8(v135, v137);
    int8x16_t v139 = vbslq_s8(v138, v137, v135);
    v135.i64[0] = 0x1010101010101010;
    v135.i64[1] = 0x1010101010101010;
    v130.i64[0] = 0x1818181818181818;
    v130.i64[1] = 0x1818181818181818;
    int8x16_t v140 = vorrq_s8(vandq_s8(vceqzq_s8(v139), v76), vbslq_s8(v138, v130, v135));
    int8x16_t v141 = vmaxq_s8(vminq_s8(vsubq_s8(v139, v101), v76), (int8x16_t)0);
    int16x8_t v142 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v139, v112), v76), (int8x16_t)0);
    int8x16_t v143 = vmaxq_s8(vminq_s8(vsubq_s8(v139, v123), v76), (int8x16_t)0);
    int8x16_t v144 = vmaxq_s8(vminq_s8(vsubq_s8(v139, v134), v76), (int8x16_t)0);
    int8x16_t v145 = vsubq_s8(v139, v141);
    int8x16_t v146 = vsubq_s8(v139, (int8x16_t)v142);
    int8x16_t v147 = vsubq_s8(v139, v143);
    int8x16_t v148 = vsubq_s8(v139, v144);
    int8x16_t v149 = vceqq_s8(vaddq_s8(v144, v143), vnegq_s8(vaddq_s8(v141, (int8x16_t)v142)));
    v141.i64[0] = 0x404040404040404;
    v141.i64[1] = 0x404040404040404;
    int8x16_t v150 = vorrq_s8(v140, vbicq_s8(v141, v149));
    uint16x8_t v151 = vmovl_u8(*(uint8x8_t *)v150.i8);
    v141.i64[0] = 0x8000800080008;
    v141.i64[1] = 0x8000800080008;
    v142.i64[0] = 0x2000200020002;
    v142.i64[1] = 0x2000200020002;
    int8x16_t v152 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v85.i8, *(int8x8_t *)v84.i8), *(int8x8_t *)v86.i8), 3uLL), *(int8x8_t *)v83.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v74.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v82.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v82.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v82.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v142), v141)), vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v147.i8, *(int8x8_t *)v146.i8), *(int8x8_t *)v148.i8),
                                                                      3uLL),
                                                                    *(int8x8_t *)v145.i8,
                                                                    (int8x8_t)0x707070707070707),
                                                                  (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v150.i8, 1uLL), v141)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v139.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v151 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v151 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v142), v141)))), 0);
    if (vaddlvq_s8(v152))
    {
      int8x16_t v468 = vbslq_s8(v152, v447, v15);
      int8x16_t v470 = vbslq_s8(v152, v446, v470);
      v153.i64[0] = 0x707070707070707;
      v153.i64[1] = 0x707070707070707;
      int8x16_t v472 = vbslq_s8(v152, v445, v16);
      int8x16_t v473 = vbslq_s8(v152, v444, v453);
      v154.i64[0] = -1;
      v154.i64[1] = -1;
      int8x16_t v474 = vbslq_s8(v152, v448, v18);
      int8x16_t v475 = vbslq_s8(v152, v449, v457);
      int8x16_t v476 = vbslq_s8(v152, v450, v20);
      int8x16_t v477 = vbslq_s8(v152, v451, v455);
      int8x16_t v480 = vbslq_s8(v152, v145, v83);
      int8x16_t v481 = vbslq_s8(v152, v146, v84);
      int8x16_t v482 = vbslq_s8(v152, v147, v85);
      int8x16_t v483 = vbslq_s8(v152, v148, v86);
      int8x16_t v486 = vbslq_s8(v152, v443, v461);
      int8x16_t v487 = vbslq_s8(v152, vandq_s8(vsubq_s8(vshlq_s8(v154, vsubq_s8(v153, v136)), v131), v138), v459);
      int8x16_t v484 = vbslq_s8(v152, v139, v74);
      int8x16_t v485 = vbslq_s8(v152, v131, v64);
      int8x16_t v478 = vbslq_s8(v152, vsubq_s8(v14, vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7600)), v14);
      int8x16_t v479 = vbslq_s8(v152, v150, v82);
    }
    if (v88)
    {
      int8x16_t v156 = v481;
      int8x16_t v155 = v482;
      int8x16_t v157 = v483;
      int8x16_t v158 = v484;
      int8x16_t v159 = v487;
      int8x16_t v161 = v468;
      int8x16_t v160 = v470;
      int8x16_t v163 = v472;
      int8x16_t v162 = v473;
      int8x16_t v164 = v474;
      int8x16_t v165 = v475;
      int8x16_t v167 = v476;
      int8x16_t v166 = v477;
      v169.i64[0] = v479.i64[0];
      int8x16_t v168 = v480;
    }
    else
    {
      int8x16_t v182 = vsubq_s8(v7, vqtbl2q_s8(*(int8x16x2_t *)v7.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v172 = vsubq_s8(v8, vqtbl2q_s8(*(int8x16x2_t *)v7.i8, (int8x16_t)xmmword_242EA7620));
      v488.val[0] = v466;
      v488.val[1] = v9;
      v488.val[1].i32[3] = v8.i32[3];
      int8x16_t v173 = vsubq_s8(v466, vqtbl2q_s8(v488, (int8x16_t)xmmword_242EA7590));
      int8x16_t v174 = vsubq_s8(v9, vqtbl2q_s8(v488, (int8x16_t)xmmword_242EA7630));
      int8x16_t v175 = v465;
      v488.val[0] = v463;
      v488.val[0].i32[3] = v8.i32[3];
      int8x16_t v176 = vsubq_s8(v465, vqtbl2q_s8(v488, (int8x16_t)xmmword_242EA7640));
      int8x16_t v177 = vsubq_s8(v463, vqtbl2q_s8(v488, (int8x16_t)xmmword_242EA7570));
      int8x16_t v178 = v467;
      v488.val[0] = v464;
      v488.val[0].i32[3] = v8.i32[3];
      int8x16_t v179 = vsubq_s8(v467, vqtbl2q_s8(v488, (int8x16_t)xmmword_242EA7650));
      int8x16_t v180 = vsubq_s8(v464, vqtbl2q_s8(v488, (int8x16_t)xmmword_242EA7570));
      int8x16_t v181 = v172;
      v181.i32[3] = v182.i32[0];
      v182.i32[0] = v172.i32[3];
      int8x16_t v183 = vqtbl1q_s8(vmaxq_s8(v182, v181), (int8x16_t)xmmword_242EA7560);
      int8x16_t v184 = vqtbl1q_s8(vminq_s8(v182, v181), (int8x16_t)xmmword_242EA7560);
      int8x16_t v185 = vpmaxq_s8(v183, v183);
      int8x16_t v186 = vpminq_s8(v184, v184);
      int8x16_t v187 = vpmaxq_s8(v185, v185);
      int8x16_t v188 = vpminq_s8(v186, v186);
      v189.i64[0] = 0x8080808080808080;
      v189.i64[1] = 0x8080808080808080;
      v190.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v190.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v191 = vminq_s8(v188, v190);
      int8x16_t v192 = vzip1q_s8(v187, v188);
      v488.val[1].i64[0] = 0x808080808080808;
      v488.val[1].i64[1] = 0x808080808080808;
      int8x16_t v193 = vbicq_s8(vsubq_s8(v488.val[1], vclsq_s8(v192)), vceqzq_s8(v192));
      v488.val[0] = vpmaxq_s8(v193, v193);
      int8x16_t v194 = vqtbl1q_s8(vmaxq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v195 = vqtbl1q_s8(vminq_s8(v173, v174), (int8x16_t)xmmword_242EA7560);
      int8x16_t v196 = vpmaxq_s8(v194, v194);
      int8x16_t v197 = vpminq_s8(v195, v195);
      int8x16_t v198 = vpmaxq_s8(v196, v196);
      int8x16_t v199 = vpminq_s8(v197, v197);
      int8x16_t v200 = vmaxq_s8(vmaxq_s8(v187, v189), v198);
      int8x16_t v201 = vminq_s8(v191, v199);
      int8x16_t v202 = vzip1q_s8(v198, v199);
      int8x16_t v203 = vbicq_s8(vsubq_s8(v488.val[1], vclsq_s8(v202)), vceqzq_s8(v202));
      int8x16_t v204 = vpmaxq_s8(v203, v203);
      int8x16_t v205 = vqtbl1q_s8(vmaxq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v206 = vqtbl1q_s8(vminq_s8(v176, v177), (int8x16_t)xmmword_242EA7560);
      int8x16_t v207 = vpmaxq_s8(v205, v205);
      int8x16_t v208 = vpminq_s8(v206, v206);
      int8x16_t v209 = vpmaxq_s8(v207, v207);
      int8x16_t v210 = vpminq_s8(v208, v208);
      int8x16_t v211 = vmaxq_s8(v200, v209);
      int8x16_t v212 = vminq_s8(v201, v210);
      int8x16_t v213 = vzip1q_s8(v209, v210);
      int8x16_t v214 = vbicq_s8(vsubq_s8(v488.val[1], vclsq_s8(v213)), vceqzq_s8(v213));
      int8x16_t v215 = vpmaxq_s8(v214, v214);
      int8x16_t v216 = vqtbl1q_s8(vmaxq_s8(v179, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v217 = vqtbl1q_s8(vminq_s8(v179, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v218 = vpmaxq_s8(v216, v216);
      int8x16_t v219 = vpminq_s8(v217, v217);
      int8x16_t v220 = vpmaxq_s8(v218, v218);
      int8x16_t v221 = vpminq_s8(v219, v219);
      int8x16_t v222 = vmaxq_s8(v211, v220);
      int8x16_t v223 = vminq_s8(v212, v221);
      int8x16_t v224 = vzip1q_s8(v220, v221);
      int8x16_t v225 = vbicq_s8(vsubq_s8(v488.val[1], vclsq_s8(v224)), vceqzq_s8(v224));
      int8x16_t v226 = vpmaxq_s8(v225, v225);
      int8x16_t v227 = vmaxq_s8(vmaxq_s8(v488.val[0], v204), vmaxq_s8(v215, v226));
      int8x16_t v228 = vclzq_s8(vsubq_s8(v222, v223));
      v488.val[1] = vsubq_s8(v488.val[1], v228);
      int8x16_t v229 = vcgtq_s8(v227, v488.val[1]);
      int8x16_t v230 = vbslq_s8(v229, v488.val[1], v227);
      v488.val[1].i64[0] = 0x909090909090909;
      v488.val[1].i64[1] = 0x909090909090909;
      uint64_t v231 = 0x202020202020202;
      v169.i64[1] = 0x202020202020202;
      v232.i64[0] = 0x303030303030303;
      v232.i64[1] = 0x303030303030303;
      v488.val[0] = vmaxq_s8(vminq_s8(vsubq_s8(v230, v488.val[0]), v232), (int8x16_t)0);
      int8x16_t v233 = vmaxq_s8(vminq_s8(vsubq_s8(v230, v204), v232), (int8x16_t)0);
      int8x16_t v234 = vmaxq_s8(vminq_s8(vsubq_s8(v230, v215), v232), (int8x16_t)0);
      int8x16_t v235 = vmaxq_s8(vminq_s8(vsubq_s8(v230, v226), v232), (int8x16_t)0);
      int8x16_t v236 = vsubq_s8(v230, v233);
      int16x8_t v237 = (int16x8_t)vsubq_s8(v230, v235);
      int8x16_t v238 = vceqq_s8(vaddq_s8(v235, v234), vnegq_s8(vaddq_s8(v488.val[0], v233)));
      v233.i64[0] = 0x404040404040404;
      v233.i64[1] = 0x404040404040404;
      int8x16_t v458 = vsubq_s8(v230, v234);
      int8x16_t v460 = vorrq_s8(vorrq_s8(vandq_s8(vceqzq_s8(v230), v169), vsubq_s8(vandq_s8(v229, v488.val[1]), vmvnq_s8(v229))), vbicq_s8(v233, v238));
      int8x16_t v454 = v236;
      int8x16_t v456 = vsubq_s8(v230, v488.val[0]);
      int8x16_t v462 = (int8x16_t)v237;
      v488.val[1] = (int8x16_t)vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v458.i8, *(int8x8_t *)v236.i8), *(int8x8_t *)v237.i8), 3uLL);
      v237.i64[0] = 0x3000300030003;
      v237.i64[1] = 0x3000300030003;
      int16x8_t v239 = vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8((int16x8_t)v488.val[1], *(int8x8_t *)v456.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v460.i8, *(int8x8_t *)v460.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v230.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v460.i8)));
      v169.i64[0] = v479.i64[0];
      int8x16_t v168 = v480;
      int8x16_t v240 = (int8x16_t)vmovl_s8(*(int8x8_t *)v479.i8);
      v232.i64[0] = 0x8000800080008;
      v232.i64[1] = 0x8000800080008;
      int8x16_t v157 = v483;
      int8x16_t v158 = v484;
      int16x8_t v241 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v484.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v240, v232)));
      int16x8_t v242 = (int16x8_t)vandq_s8(v240, (int8x16_t)v237);
      v237.i64[0] = 0x2000200020002;
      v237.i64[1] = 0x2000200020002;
      int8x16_t v156 = v481;
      int8x16_t v155 = v482;
      int8x16_t v243 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v241, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v479.i8, 1uLL), v232)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v242, v237), v232)), *(int8x8_t *)v480.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v482.i8, *(int8x8_t *)v481.i8),
                                                                    *(int8x8_t *)v483.i8),
                                                                  3uLL)),
                                                              v239)),
                          0);
      int8x16_t v159 = v487;
      int8x16_t v161 = v468;
      int8x16_t v160 = v470;
      int8x16_t v163 = v472;
      int8x16_t v162 = v473;
      int8x16_t v164 = v474;
      int8x16_t v165 = v475;
      int8x16_t v167 = v476;
      int8x16_t v166 = v477;
      if (vaddlvq_s8(v243))
      {
        int8x16_t v452 = v173;
        v244.i64[0] = 0x707070707070707;
        v244.i64[1] = 0x707070707070707;
        int8x16_t v245 = vsubq_s8(v244, v228);
        v246.i64[0] = -1;
        v246.i64[1] = -1;
        int8x16_t v161 = vbslq_s8(v243, v182, v468);
        int8x16_t v160 = vbslq_s8(v243, v181, v470);
        int8x16_t v163 = vbslq_s8(v243, v452, v472);
        int8x16_t v162 = vbslq_s8(v243, v174, v473);
        int8x16_t v164 = vbslq_s8(v243, v176, v474);
        int8x16_t v165 = vbslq_s8(v243, v177, v475);
        int8x16_t v167 = vbslq_s8(v243, v179, v476);
        int8x16_t v166 = vbslq_s8(v243, v180, v477);
        int8x16_t v168 = vbslq_s8(v243, v456, v480);
        int8x16_t v156 = vbslq_s8(v243, v454, v481);
        int8x16_t v155 = vbslq_s8(v243, v458, v482);
        int8x16_t v157 = vbslq_s8(v243, v462, v483);
        int8x16_t v159 = vbslq_s8(v243, vandq_s8(vsubq_s8(vshlq_s8(v246, v245), v223), v229), v487);
        int8x16_t v158 = vbslq_s8(v243, v230, v484);
        int8x16_t v169 = vbslq_s8(v243, v460, v479);
        int8x16_t v478 = vbslq_s8(v243, vextq_s8(v8, v8, 0xCuLL), v478);
        int8x16_t v479 = v169;
        int8x16_t v485 = vbslq_s8(v243, v223, v485);
        int8x16_t v486 = vbslq_s8(v243, v222, v486);
        int8x16_t v480 = v168;
        int8x16_t v481 = v156;
        int8x16_t v482 = v155;
        int8x16_t v483 = v157;
        int8x16_t v487 = v159;
        int8x16_t v484 = v158;
      }
    }
    int8x16_t v247 = vandq_s8(v159, vceqq_s8(v158, v168));
    int8x16_t v469 = vaddq_s8(v247, v161);
    int8x16_t v471 = vaddq_s8(v160, v247);
    int8x16_t v248 = vandq_s8(v159, vceqq_s8(v158, v156));
    int8x16_t v472 = vaddq_s8(v163, v248);
    int8x16_t v473 = vaddq_s8(v162, v248);
    int8x16_t v249 = vandq_s8(v159, vceqq_s8(v158, v155));
    int8x16_t v474 = vaddq_s8(v164, v249);
    int8x16_t v475 = vaddq_s8(v165, v249);
    int8x16_t v250 = vandq_s8(v159, vceqq_s8(v158, v157));
    int8x16_t v476 = vaddq_s8(v167, v250);
    int8x16_t v477 = vaddq_s8(v166, v250);
    int8x16_t v251 = (int8x16_t)vmovl_s8(*(int8x8_t *)v169.i8);
    v249.i64[0] = 0x8000800080008;
    v249.i64[1] = 0x8000800080008;
    int16x8_t v252 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v158.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v251, v249)));
    v253.i64[0] = 0x3000300030003;
    v253.i64[1] = 0x3000300030003;
    int16x8_t v254 = (int16x8_t)vandq_s8(v251, v253);
    v253.i64[0] = 0x2000200020002;
    v253.i64[1] = 0x2000200020002;
    int16x8_t v255 = vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v155.i8, *(int8x8_t *)v156.i8), *(int8x8_t *)v157.i8), 3uLL), *(int8x8_t *)v168.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v254, (int16x8_t)v253), v249)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v169.i8, 1uLL), v249), v252));
    int16x8_t v256 = vpaddq_s16(v255, v255);
    if ((unint64_t)(vpaddq_s16(v256, v256).i16[0] + 71) > 0x3FF)
    {
      *a1 = v7;
      a1[1] = v8;
      a1[2] = v466;
      a1[3] = v9;
      a1[4] = v465;
      a1[5] = v463;
      int8x16_t v260 = a1 + 6;
      char v170 = 127;
      unint64_t result = 128;
      *int8x16_t v260 = v467;
      v260[1] = v464;
    }
    else
    {
      int8x16_t v257 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v258 = 8 * (a1 & 7);
      if (v258) {
        uint64_t v259 = *v257 & ~(-1 << v258);
      }
      else {
        uint64_t v259 = 0;
      }
      *a2 = 0;
      __int32 v261 = v478.i32[0];
      int16x4_t v262 = (int16x4_t)vzip1_s8(*(int8x8_t *)v158.i8, *(int8x8_t *)v478.i8);
      int8x8_t v263 = (int8x8_t)vadd_s16(v262, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v264 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v262 & 0xFF00FF00FF00FFLL)));
      v265.i64[0] = v264.u32[0];
      v265.i64[1] = v264.u32[1];
      int8x16_t v266 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v265, 0x38uLL), 0x38uLL);
      v265.i64[0] = v264.u32[2];
      v265.i64[1] = v264.u32[3];
      int8x16_t v267 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v265, 0x38uLL), 0x38uLL);
      uint32x4_t v268 = vmovl_u16((uint16x4_t)vand_s8(v263, (int8x8_t)0x7000700070007));
      v265.i64[0] = v268.u32[2];
      v265.i64[1] = v268.u32[3];
      v269.i64[0] = 255;
      v269.i64[1] = 255;
      uint64x2_t v270 = (uint64x2_t)vandq_s8((int8x16_t)v265, v269);
      v265.i64[0] = v268.u32[0];
      v265.i64[1] = v268.u32[1];
      int8x16_t v271 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v265, v269), (uint64x2_t)xmmword_242EA7660), v266), vbicq_s8((int8x16_t)vshlq_u64(v270, (uint64x2_t)xmmword_242EA7670), v267));
      *(int8x8_t *)v271.i8 = vorr_s8(*(int8x8_t *)v271.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v271, v271, 8uLL));
      v265.i64[0] = v169.u8[1];
      v265.i64[1] = v169.u8[2];
      v271.i64[1] = (unint64_t)(v169.i8[3] & 0x1F) << 15;
      int64x2_t v272 = (int64x2_t)vorrq_s8(v271, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v265, v269), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v273 = vorrq_s8((int8x16_t)v272, (int8x16_t)vdupq_laneq_s64(v272, 1)).u64[0] | v169.i8[0] & 0x1F;
      unint64_t v274 = v259 | (v273 << v258);
      if (v258 >= 0x20)
      {
        *int8x16_t v257 = v274;
        unint64_t v274 = v273 >> (-8 * (a1 & 7u));
      }
      uint64_t v275 = (unsigned __int16)v261;
      v276.i64[0] = BYTE2(v261);
      v276.i64[1] = HIBYTE(v261);
      uint64x2_t v277 = vshlq_u64((uint64x2_t)vandq_s8(v276, v269), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v278 = v275 | v277.i64[0] | v277.i64[1];
      unint64_t v279 = (v258 + 32) & 0x38;
      unint64_t v280 = v274 | (v278 << v279);
      if (v279 >= 0x20)
      {
        *(void *)((char *)v257 + (((v258 + 32) >> 3) & 8)) = v280;
        unint64_t v280 = v278 >> -(char)v279;
      }
      int8x16_t v281 = vsubq_s8(v484, v480);
      int8x16_t v282 = vsubq_s8(v484, v481);
      int8x16_t v283 = vsubq_s8(v484, v482);
      int8x16_t v284 = vsubq_s8(v484, v483);
      int16x8_t v285 = (int16x8_t)vtrn1q_s8(v281, v282);
      int16x8_t v286 = (int16x8_t)vtrn2q_s8(v281, v282);
      int16x8_t v287 = (int16x8_t)vtrn1q_s8(v283, v284);
      int16x8_t v288 = (int16x8_t)vtrn2q_s8(v283, v284);
      int8x16_t v289 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v285, v287), (int32x4_t)vzip1q_s16(v286, v288)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v285, v287), (int32x4_t)vtrn2q_s16(v286, v288)));
      v287.i64[0] = 0x202020202020202;
      v287.i64[1] = 0x202020202020202;
      int8x16_t v290 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v479.i8), (int16x4_t)0x4000400040004)), (int8x16_t)v287);
      v287.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v287.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v283.i64[0] = -1;
      v283.i64[1] = -1;
      uint8x16_t v291 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v283, (uint8x16_t)vorrq_s8(v290, (int8x16_t)v287)), v289);
      int16x8_t v292 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v290.i8);
      int16x8_t v293 = (int16x8_t)vmovl_high_u8((uint8x16_t)v290);
      uint16x8_t v294 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v291.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v292)), (int16x8_t)vshlq_u16(vmovl_high_u8(v291), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v293)));
      uint16x8_t v295 = (uint16x8_t)vpaddq_s16(v292, v293);
      int32x4_t v296 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v295.i8);
      int32x4_t v297 = (int32x4_t)vmovl_high_u16(v295);
      int32x4_t v298 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v294.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v296)), (int32x4_t)vshlq_u32(vmovl_high_u16(v294), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v297)));
      int32x4_t v299 = vpaddq_s32(v296, v297);
      v300.i64[0] = v298.u32[0];
      v300.i64[1] = v298.u32[1];
      uint64x2_t v301 = (uint64x2_t)v300;
      v300.i64[0] = v298.u32[2];
      v300.i64[1] = v298.u32[3];
      uint64x2_t v302 = (uint64x2_t)v300;
      v300.i64[0] = v299.u32[0];
      v300.i64[1] = v299.u32[1];
      int64x2_t v303 = v300;
      v300.i64[0] = v299.u32[2];
      v300.i64[1] = v299.u32[3];
      int64x2_t v304 = vpaddq_s64((int64x2_t)vshlq_u64(v301, (uint64x2_t)vzip1q_s64((int64x2_t)0, v303)), (int64x2_t)vshlq_u64(v302, (uint64x2_t)vzip1q_s64((int64x2_t)0, v300)));
      int64x2_t v305 = vpaddq_s64(v303, v300);
      unint64_t v306 = (v304.i64[0] << v258) | v280;
      if (v305.i64[0] + v258 >= 0x40)
      {
        v257[1] = v306;
        unint64_t v306 = (unint64_t)v304.i64[0] >> (-8 * (a1 & 7u));
        if (!v258) {
          unint64_t v306 = 0;
        }
      }
      unint64_t v307 = v305.i64[0] + (v258 | 0x40);
      unint64_t v308 = v306 | (v304.i64[1] << v307);
      if ((v307 & 0x3F) + v305.i64[1] >= 0x40)
      {
        *(void *)((char *)v257 + ((v307 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v308;
        unint64_t v308 = (unint64_t)v304.i64[1] >> -(v307 & 0x3F);
        if ((v307 & 0x3F) == 0) {
          unint64_t v308 = 0;
        }
      }
      unint64_t v309 = v307 + v305.i64[1];
      v310.i64[0] = 0x808080808080808;
      v310.i64[1] = 0x808080808080808;
      v311.i64[0] = -1;
      v311.i64[1] = -1;
      int8x16_t v312 = vandq_s8(vextq_s8(vtstq_s8(v479, v310), (int8x16_t)0, 0xCuLL), v484);
      v313.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v313.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v314 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v311, (uint8x16_t)vaddq_s8(v312, v313)), v487);
      int16x8_t v315 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v312.i8);
      uint16x8_t v316 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v314.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v315)), (int16x8_t)vmovl_high_u8(v314));
      uint16x8_t v317 = (uint16x8_t)vpaddq_s16(v315, (int16x8_t)vmovl_high_u8((uint8x16_t)v312));
      int32x4_t v318 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v317.i8);
      int32x4_t v319 = (int32x4_t)vmovl_high_u16(v317);
      int32x4_t v320 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v319)));
      int32x4_t v321 = vpaddq_s32(v318, v319);
      v322.i64[0] = v320.u32[0];
      v322.i64[1] = v320.u32[1];
      uint64x2_t v323 = (uint64x2_t)v322;
      v322.i64[0] = v320.u32[2];
      v322.i64[1] = v320.u32[3];
      uint64x2_t v324 = (uint64x2_t)v322;
      v322.i64[0] = v321.u32[0];
      v322.i64[1] = v321.u32[1];
      int64x2_t v325 = v322;
      v322.i64[0] = v321.u32[2];
      v322.i64[1] = v321.u32[3];
      int64x2_t v326 = vpaddq_s64((int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v325)), (int64x2_t)vshlq_u64(v324, (uint64x2_t)vzip1q_s64((int64x2_t)0, v322)));
      int64x2_t v327 = vpaddq_s64(v325, v322);
      unint64_t v328 = (v326.i64[0] << v309) | v308;
      if (v327.i64[0] + (v309 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v257 + ((v309 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v328;
        unint64_t v328 = (unint64_t)v326.i64[0] >> -(v309 & 0x3F);
        if ((v309 & 0x3F) == 0) {
          unint64_t v328 = 0;
        }
      }
      unint64_t v329 = v327.i64[0] + v309;
      unint64_t v330 = v328 | (v326.i64[1] << v329);
      if ((v329 & 0x3F) + v327.i64[1] >= 0x40)
      {
        *(void *)((char *)v257 + ((v329 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330;
        unint64_t v330 = (unint64_t)v326.i64[1] >> -(v329 & 0x3F);
        if ((v329 & 0x3F) == 0) {
          unint64_t v330 = 0;
        }
      }
      unint64_t v331 = v329 + v327.i64[1];
      int8x16_t v332 = vextq_s8((int8x16_t)0, v480, 0xCuLL);
      v333.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v333.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v334.i64[0] = -1;
      v334.i64[1] = -1;
      uint8x16_t v335 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v334, (uint8x16_t)vaddq_s8(v332, v333)), v469);
      int16x8_t v336 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v332.i8);
      int16x8_t v337 = (int16x8_t)vmovl_high_u8((uint8x16_t)v332);
      uint16x8_t v338 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v335.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v336)), (int16x8_t)vshlq_u16(vmovl_high_u8(v335), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v337)));
      uint16x8_t v339 = (uint16x8_t)vpaddq_s16(v336, v337);
      int32x4_t v340 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v339.i8);
      int32x4_t v341 = (int32x4_t)vmovl_high_u16(v339);
      int32x4_t v342 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v338.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v340)), (int32x4_t)vshlq_u32(vmovl_high_u16(v338), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v341)));
      int32x4_t v343 = vpaddq_s32(v340, v341);
      v344.i64[0] = v342.u32[0];
      v344.i64[1] = v342.u32[1];
      uint64x2_t v345 = (uint64x2_t)v344;
      v344.i64[0] = v342.u32[2];
      v344.i64[1] = v342.u32[3];
      uint64x2_t v346 = (uint64x2_t)v344;
      v344.i64[0] = v343.u32[0];
      v344.i64[1] = v343.u32[1];
      int64x2_t v347 = v344;
      v344.i64[0] = v343.u32[2];
      v344.i64[1] = v343.u32[3];
      int64x2_t v348 = vpaddq_s64((int64x2_t)vshlq_u64(v345, (uint64x2_t)vzip1q_s64((int64x2_t)0, v347)), (int64x2_t)vshlq_u64(v346, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)));
      int64x2_t v349 = vpaddq_s64(v347, v344);
      unint64_t v350 = (v348.i64[0] << v331) | v330;
      if (v349.i64[0] + (v331 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v257 + ((v331 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v350;
        unint64_t v350 = (unint64_t)v348.i64[0] >> -(v331 & 0x3F);
        if ((v331 & 0x3F) == 0) {
          unint64_t v350 = 0;
        }
      }
      unint64_t v351 = v349.i64[0] + v331;
      unint64_t v352 = v350 | (v348.i64[1] << v351);
      if ((v351 & 0x3F) + v349.i64[1] >= 0x40)
      {
        *(void *)((char *)v257 + ((v351 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        unint64_t v352 = (unint64_t)v348.i64[1] >> -(v351 & 0x3F);
        if ((v351 & 0x3F) == 0) {
          unint64_t v352 = 0;
        }
      }
      unint64_t v353 = v351 + v349.i64[1];
      v354.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v354.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v355.i64[0] = -1;
      v355.i64[1] = -1;
      uint8x16_t v356 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v355, (uint8x16_t)vaddq_s8(v480, v354)), v471);
      int16x8_t v357 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v480.i8);
      int16x8_t v358 = (int16x8_t)vmovl_high_u8((uint8x16_t)v480);
      uint16x8_t v359 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v356.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v357)), (int16x8_t)vshlq_u16(vmovl_high_u8(v356), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v358)));
      uint16x8_t v360 = (uint16x8_t)vpaddq_s16(v357, v358);
      int32x4_t v361 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v360.i8);
      int32x4_t v362 = (int32x4_t)vmovl_high_u16(v360);
      int32x4_t v363 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v359.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v361)), (int32x4_t)vshlq_u32(vmovl_high_u16(v359), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v362)));
      int32x4_t v364 = vpaddq_s32(v361, v362);
      v365.i64[0] = v363.u32[0];
      v365.i64[1] = v363.u32[1];
      uint64x2_t v366 = (uint64x2_t)v365;
      v365.i64[0] = v363.u32[2];
      v365.i64[1] = v363.u32[3];
      uint64x2_t v367 = (uint64x2_t)v365;
      v365.i64[0] = v364.u32[0];
      v365.i64[1] = v364.u32[1];
      int64x2_t v368 = v365;
      v365.i64[0] = v364.u32[2];
      v365.i64[1] = v364.u32[3];
      int64x2_t v369 = vpaddq_s64((int64x2_t)vshlq_u64(v366, (uint64x2_t)vzip1q_s64((int64x2_t)0, v368)), (int64x2_t)vshlq_u64(v367, (uint64x2_t)vzip1q_s64((int64x2_t)0, v365)));
      int64x2_t v370 = vpaddq_s64(v368, v365);
      unint64_t v371 = (v369.i64[0] << v353) | v352;
      if (v370.i64[0] + (v353 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v257 + ((v353 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v371;
        if ((v353 & 0x3F) != 0) {
          unint64_t v371 = (unint64_t)v369.i64[0] >> -(v353 & 0x3F);
        }
        else {
          unint64_t v371 = 0;
        }
      }
      uint64_t v372 = v370.i64[1];
      unint64_t v373 = v370.i64[0] + v353;
      uint64_t v374 = (v370.i64[0] + v353) & 0x3F;
      unint64_t v375 = v371 | (v369.i64[1] << v373);
      if ((unint64_t)(v374 + v370.i64[1]) >= 0x40)
      {
        *(void *)((char *)v257 + ((v373 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
        unint64_t v375 = (unint64_t)v369.i64[1] >> -(char)v374;
        if (!v374) {
          unint64_t v375 = 0;
        }
      }
      uint64_t v376 = 0;
      v377.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v377.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v378.i64[0] = -1;
      v378.i64[1] = -1;
      unint64_t v379 = v373 + v372;
      char v380 = 1;
      do
      {
        char v381 = v380;
        uint8x16_t v382 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v378, (uint8x16_t)vaddq_s8(v481, v377)), *(&v472 + v376));
        int16x8_t v383 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v481.i8);
        int16x8_t v384 = (int16x8_t)vmovl_high_u8((uint8x16_t)v481);
        uint16x8_t v385 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v382.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v383)), (int16x8_t)vshlq_u16(vmovl_high_u8(v382), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v384)));
        uint16x8_t v386 = (uint16x8_t)vpaddq_s16(v383, v384);
        int32x4_t v387 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v386.i8);
        int32x4_t v388 = (int32x4_t)vmovl_high_u16(v386);
        int32x4_t v389 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v385.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)), (int32x4_t)vshlq_u32(vmovl_high_u16(v385), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v388)));
        int32x4_t v390 = vpaddq_s32(v387, v388);
        v391.i64[0] = v389.u32[0];
        v391.i64[1] = v389.u32[1];
        uint64x2_t v392 = (uint64x2_t)v391;
        v391.i64[0] = v389.u32[2];
        v391.i64[1] = v389.u32[3];
        uint64x2_t v393 = (uint64x2_t)v391;
        v391.i64[0] = v390.u32[0];
        v391.i64[1] = v390.u32[1];
        int64x2_t v394 = v391;
        v391.i64[0] = v390.u32[2];
        v391.i64[1] = v390.u32[3];
        int64x2_t v395 = vpaddq_s64((int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v394)), (int64x2_t)vshlq_u64(v393, (uint64x2_t)vzip1q_s64((int64x2_t)0, v391)));
        int64x2_t v396 = vpaddq_s64(v394, v391);
        unint64_t v397 = (v395.i64[0] << v379) | v375;
        if (v396.i64[0] + (v379 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v257 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v397;
          unint64_t v397 = (unint64_t)v395.i64[0] >> -(v379 & 0x3F);
          if ((v379 & 0x3F) == 0) {
            unint64_t v397 = 0;
          }
        }
        unint64_t v398 = v396.i64[0] + v379;
        unint64_t v375 = v397 | (v395.i64[1] << v398);
        if ((v398 & 0x3F) + v396.i64[1] >= 0x40)
        {
          *(void *)((char *)v257 + ((v398 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
          unint64_t v375 = (unint64_t)v395.i64[1] >> -(v398 & 0x3F);
          if ((v398 & 0x3F) == 0) {
            unint64_t v375 = 0;
          }
        }
        char v380 = 0;
        unint64_t v379 = v398 + v396.i64[1];
        uint64_t v376 = 1;
      }
      while ((v381 & 1) != 0);
      uint64_t v399 = 0;
      char v400 = 1;
      v401.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v401.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v402.i64[0] = -1;
      v402.i64[1] = -1;
      do
      {
        char v403 = v400;
        uint8x16_t v404 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v402, (uint8x16_t)vaddq_s8(v482, v401)), *(&v474 + v399));
        int16x8_t v405 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v482.i8);
        int16x8_t v406 = (int16x8_t)vmovl_high_u8((uint8x16_t)v482);
        uint16x8_t v407 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v404.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v405)), (int16x8_t)vshlq_u16(vmovl_high_u8(v404), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v406)));
        uint16x8_t v408 = (uint16x8_t)vpaddq_s16(v405, v406);
        int32x4_t v409 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v408.i8);
        int32x4_t v410 = (int32x4_t)vmovl_high_u16(v408);
        int32x4_t v411 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v407.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v409)), (int32x4_t)vshlq_u32(vmovl_high_u16(v407), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v410)));
        int32x4_t v412 = vpaddq_s32(v409, v410);
        v413.i64[0] = v411.u32[0];
        v413.i64[1] = v411.u32[1];
        uint64x2_t v414 = (uint64x2_t)v413;
        v413.i64[0] = v411.u32[2];
        v413.i64[1] = v411.u32[3];
        uint64x2_t v415 = (uint64x2_t)v413;
        v413.i64[0] = v412.u32[0];
        v413.i64[1] = v412.u32[1];
        int64x2_t v416 = v413;
        v413.i64[0] = v412.u32[2];
        v413.i64[1] = v412.u32[3];
        int64x2_t v417 = vpaddq_s64((int64x2_t)vshlq_u64(v414, (uint64x2_t)vzip1q_s64((int64x2_t)0, v416)), (int64x2_t)vshlq_u64(v415, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)));
        int64x2_t v418 = vpaddq_s64(v416, v413);
        unint64_t v419 = (v417.i64[0] << v379) | v375;
        if (v418.i64[0] + (v379 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v257 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v419;
          unint64_t v419 = (unint64_t)v417.i64[0] >> -(v379 & 0x3F);
          if ((v379 & 0x3F) == 0) {
            unint64_t v419 = 0;
          }
        }
        unint64_t v420 = v418.i64[0] + v379;
        unint64_t v375 = v419 | (v417.i64[1] << v420);
        if ((v420 & 0x3F) + v418.i64[1] >= 0x40)
        {
          *(void *)((char *)v257 + ((v420 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
          unint64_t v375 = (unint64_t)v417.i64[1] >> -(v420 & 0x3F);
          if ((v420 & 0x3F) == 0) {
            unint64_t v375 = 0;
          }
        }
        char v400 = 0;
        unint64_t v379 = v420 + v418.i64[1];
        uint64_t v399 = 1;
      }
      while ((v403 & 1) != 0);
      uint64_t v421 = 0;
      char v422 = 1;
      v423.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v423.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v424.i64[0] = -1;
      v424.i64[1] = -1;
      do
      {
        char v425 = v422;
        uint8x16_t v426 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v424, (uint8x16_t)vaddq_s8(v483, v423)), *(&v476 + v421));
        int16x8_t v427 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v483.i8);
        int16x8_t v428 = (int16x8_t)vmovl_high_u8((uint8x16_t)v483);
        uint16x8_t v429 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v426.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v427)), (int16x8_t)vshlq_u16(vmovl_high_u8(v426), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v428)));
        uint16x8_t v430 = (uint16x8_t)vpaddq_s16(v427, v428);
        int32x4_t v431 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v430.i8);
        int32x4_t v432 = (int32x4_t)vmovl_high_u16(v430);
        int32x4_t v433 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v429.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v431)), (int32x4_t)vshlq_u32(vmovl_high_u16(v429), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v432)));
        int32x4_t v434 = vpaddq_s32(v431, v432);
        v435.i64[0] = v433.u32[0];
        v435.i64[1] = v433.u32[1];
        uint64x2_t v436 = (uint64x2_t)v435;
        v435.i64[0] = v433.u32[2];
        v435.i64[1] = v433.u32[3];
        uint64x2_t v437 = (uint64x2_t)v435;
        v435.i64[0] = v434.u32[0];
        v435.i64[1] = v434.u32[1];
        int64x2_t v438 = v435;
        v435.i64[0] = v434.u32[2];
        v435.i64[1] = v434.u32[3];
        int64x2_t v439 = vpaddq_s64((int64x2_t)vshlq_u64(v436, (uint64x2_t)vzip1q_s64((int64x2_t)0, v438)), (int64x2_t)vshlq_u64(v437, (uint64x2_t)vzip1q_s64((int64x2_t)0, v435)));
        int64x2_t v440 = vpaddq_s64(v438, v435);
        unint64_t v441 = (v439.i64[0] << v379) | v375;
        if (v440.i64[0] + (v379 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v257 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v441;
          unint64_t v441 = (unint64_t)v439.i64[0] >> -(v379 & 0x3F);
          if ((v379 & 0x3F) == 0) {
            unint64_t v441 = 0;
          }
        }
        unint64_t v442 = v440.i64[0] + v379;
        unint64_t v375 = v441 | (v439.i64[1] << v442);
        if ((v442 & 0x3F) + v440.i64[1] >= 0x40)
        {
          *(void *)((char *)v257 + ((v442 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
          unint64_t v375 = (unint64_t)v439.i64[1] >> -(v442 & 0x3F);
          if ((v442 & 0x3F) == 0) {
            unint64_t v375 = 0;
          }
        }
        char v422 = 0;
        unint64_t v379 = v442 + v440.i64[1];
        uint64_t v421 = 1;
      }
      while ((v425 & 1) != 0);
      if ((v379 & 0x3F) != 0) {
        *(void *)((char *)v257 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v375;
      }
      unint64_t result = (v379 - v258 + 7) >> 3;
      char v170 = *a2 | (result - 1);
    }
  }
  else
  {
    a1->i32[0] = a3->i32[0];
    char v170 = 3;
    unint64_t result = 4;
  }
  *a2 = v170;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int8x16_t *a3, char *a4, int a5, int a6)
{
  int8x16_t v9 = a3;
  int8x16_t v11 = (int8x16_t *)result;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int8x16_t *)result, a2, v12, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  int8x16_t v14 = a4 + 1;
  if (a5 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 4;
  if (v16 >= 4) {
    int v17 = 4;
  }
  else {
    int v17 = v16;
  }
  if (v17) {
    BOOL v18 = v13 == 0;
  }
  else {
    BOOL v18 = 1;
  }
  if (v18)
  {
    *int8x16_t v14 = 0;
  }
  else
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 2, a2, v17, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  uint64_t v19 = 4 * a2;
  int8x16_t v20 = a4 + 2;
  if (a6 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a6;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v12 && v23)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v20, (int8x16_t *)((char *)v11 + v19), a2, v12, v23);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v24 = a4 + 3;
    if (!v17) {
      goto LABEL_36;
    }
  }
  else
  {
    *int8x16_t v20 = 0;
    int8x16_t v24 = a4 + 3;
    if (!v17) {
      goto LABEL_36;
    }
  }
  if (v23)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int8x16_t *)((char *)v11 + v19 + 32), a2, v17, v23);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    goto LABEL_37;
  }
LABEL_36:
  *int8x16_t v24 = 0;
LABEL_37:
  int8x16_t v25 = a4 + 4;
  if (a5 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a5;
  }
  unsigned int v27 = v26 - 8;
  if (v27 >= 4) {
    int v28 = 4;
  }
  else {
    int v28 = v27;
  }
  if (v28 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v25, v11 + 4, a2, v28, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
  }
  else
  {
    *int8x16_t v25 = 0;
  }
  int8x16_t v29 = a4 + 5;
  if (a5 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a5;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v32 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v29, v11 + 6, a2, v32, v13);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v33 = a4 + 6;
    if (!v28) {
      goto LABEL_61;
    }
  }
  else
  {
    *int8x16_t v29 = 0;
    int8x16_t v33 = a4 + 6;
    if (!v28) {
      goto LABEL_61;
    }
  }
  if (v23)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int8x16_t *)((char *)v11 + v19 + 64), a2, v28, v23);
    int8x16_t v9 = (int8x16_t *)((char *)v9 + result);
    int8x16_t v34 = a4 + 7;
    if (!v32) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  char *v33 = 0;
  int8x16_t v34 = a4 + 7;
  if (!v32)
  {
LABEL_66:
    *int8x16_t v34 = 0;
    return result;
  }
LABEL_62:
  if (!v23) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v34, (int8x16_t *)((char *)v11 + v19 + 96), a2, v32, v23);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int8x16_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v291 = 0;
  unint64_t v289 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v290 = (8 * (a3 & 7)) | 0x400;
  unint64_t v288 = 8 * (a3 & 7);
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v293, (uint64_t)v298, (float *)v292.i32, &v288, a4);
  v8.i64[0] = 0x303030303030303;
  v8.i64[1] = 0x303030303030303;
  int8x16_t v9 = vandq_s8(v293, v8);
  int8x16_t v10 = vbicq_s8(v298[0], vceqq_s8(v9, v8));
  v298[0] = v10;
  int8x16_t v294 = v10;
  int8x16_t v295 = v10;
  int8x16_t v296 = v10;
  int8x16_t v297 = v10;
  v11.i64[0] = 0x202020202020202;
  v11.i64[1] = 0x202020202020202;
  int8x16_t v12 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v293.i8), (int16x4_t)0x4000400040004)), v11);
  unint64_t v13 = v288;
  int8x16_t v287 = v9;
  if (vmaxvq_s8(v12) < 1)
  {
    v26.i64[0] = -1;
    v26.i64[1] = -1;
    v27.i64[0] = -1;
    v27.i64[1] = -1;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    v29.i64[0] = -1;
    v29.i64[1] = -1;
  }
  else
  {
    int8x16_t v14 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v12, v12));
    int8x16_t v15 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v14, (int16x8_t)v14));
    unint64_t v16 = vpaddq_s32((int32x4_t)v15, (int32x4_t)v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19;
    unint64_t v21 = v288 + v19;
    if (v290) {
      BOOL v22 = v290 >= v21;
    }
    else {
      BOOL v22 = 1;
    }
    int v23 = !v22;
    if (v19 <= 0x80 && v23 == 0)
    {
      v7.i64[0] = 63;
      int v30 = (int64x2_t *)(v289 + 8 * (v288 >> 6));
      int64x2_t v31 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v288, v7).i64[0], 0), vzip1q_s64((int64x2_t)0, v18));
      int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v30, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30->i64[0], 0), (uint64x2_t)vnegq_s64(v31)));
      if ((v288 & 0x3F) + v20 >= 0x81) {
        int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v30[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v31))), v25);
      }
      unint64_t v13 = v21;
    }
    else
    {
      unsigned __int8 v291 = 1;
      int8x16_t v25 = 0uLL;
    }
    int32x2_t v32 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    v33.i64[0] = v32.u32[0];
    v33.i64[1] = v32.u32[1];
    int64x2_t v34 = (int64x2_t)vshlq_u64((uint64x2_t)v25, (uint64x2_t)vnegq_s64(v33));
    *(int32x2_t *)v25.i8 = vmovn_s64((int64x2_t)v25);
    *(int32x2_t *)v34.i8 = vmovn_s64(v34);
    int16x8_t v35 = (int16x8_t)vzip1q_s32((int32x4_t)v25, (int32x4_t)v34);
    int16x8_t v36 = (int16x8_t)vshlq_u32((uint32x4_t)v35, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    *(int16x4_t *)v35.i8 = vmovn_s32((int32x4_t)v35);
    *(int16x4_t *)v36.i8 = vmovn_s32((int32x4_t)v36);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v35, v36);
    int8x16_t v38 = (int8x16_t)vshlq_u16((uint16x8_t)v37, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)))));
    *(int8x8_t *)v37.i8 = vmovn_s16((int16x8_t)v37);
    *(int8x8_t *)v38.i8 = vmovn_s16((int16x8_t)v38);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    v38.i64[0] = 0x101010101010101;
    v38.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8(v38, v12);
    v38.i64[0] = -1;
    v38.i64[1] = -1;
    int32x4_t v41 = (int32x4_t)vqtbl1q_s8(vandq_s8(v39, vaddq_s8(v40, v38)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
    int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
    int8x16_t v44 = (int8x16_t)vdupq_laneq_s32(v41, 2);
    int8x16_t v45 = (int8x16_t)vdupq_laneq_s32(v41, 3);
    int8x16_t v294 = vsubq_s8(v294, v42);
    int8x16_t v295 = vsubq_s8(v295, v43);
    int8x16_t v296 = vsubq_s8(v296, v44);
    int8x16_t v297 = vsubq_s8(v297, v45);
    int8x16_t v29 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v27 = vceqzq_s8(v44);
    int8x16_t v26 = vceqzq_s8(v45);
  }
  v46.i64[0] = 0x808080808080808;
  v46.i64[1] = 0x808080808080808;
  int8x16_t v47 = 0uLL;
  int8x16_t v48 = vandq_s8(vextq_s8(vtstq_s8(v293, v46), (int8x16_t)0, 0xCuLL), v10);
  int8x16_t v49 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v48, v48));
  int8x16_t v50 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v49, (int16x8_t)v49));
  unint64_t v51 = vpaddq_s32((int32x4_t)v50, (int32x4_t)v50).u64[0];
  v52.i64[0] = v51;
  v52.i64[1] = HIDWORD(v51);
  int64x2_t v53 = v52;
  unint64_t v54 = vaddvq_s64(v52);
  if (v290) {
    BOOL v55 = v290 >= v13 + v54;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = !v55;
  if (v54 <= 0x80 && v56 == 0)
  {
    int64x2_t v58 = vaddq_s64(vdupq_n_s64(v13 & 0x3F), vzip1q_s64((int64x2_t)0, v53));
    int8x16_t v59 = (int64x2_t *)(v289 + 8 * (v13 >> 6));
    int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v59, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59->i64[0], 0), (uint64x2_t)vnegq_s64(v58)));
    if ((v13 & 0x3F) + v54 >= 0x81) {
      int8x16_t v47 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v59[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v58))), v47);
    }
    v13 += v54;
  }
  else
  {
    unsigned __int8 v291 = 1;
  }
  int v60 = v293.i8[0] & 3;
  int8x16_t v285 = v26;
  int8x16_t v286 = v29;
  int8x16_t v283 = v28;
  int8x16_t v284 = v27;
  if (v60 == 2)
  {
    unint64_t v61 = v13 + 4;
    if (v290)
    {
      if (v290 < v61)
      {
        unsigned __int8 v291 = 1;
LABEL_39:
        unsigned __int8 v291 = 1;
        goto LABEL_40;
      }
      unint64_t v62 = v13 + 8;
      v13 += 4;
      if (v290 < v62) {
        goto LABEL_39;
      }
      unint64_t v61 = v13;
    }
    unint64_t v13 = v61 + 4;
  }
LABEL_40:
  int8x16_t v63 = 0uLL;
  int8x16_t v64 = vextq_s8((int8x16_t)0, v294, 0xCuLL);
  int8x16_t v65 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v64, v64));
  int8x16_t v66 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v65, (int16x8_t)v65));
  unint64_t v67 = vpaddq_s32((int32x4_t)v66, (int32x4_t)v66).u64[0];
  v68.i64[0] = v67;
  v68.i64[1] = HIDWORD(v67);
  int64x2_t v69 = v68;
  unint64_t v70 = vaddvq_s64(v68);
  unint64_t v71 = v13 + v70;
  if (v290) {
    BOOL v72 = v290 >= v71;
  }
  else {
    BOOL v72 = 1;
  }
  int v73 = !v72;
  if (v70 > 0x80 || v73)
  {
    int v78 = 1;
    unint64_t v76 = v289;
  }
  else
  {
    unint64_t v74 = v13 & 0x3F;
    int64x2_t v75 = vaddq_s64(vdupq_n_s64(v74), vzip1q_s64((int64x2_t)0, v69));
    unint64_t v76 = v289;
    int v77 = (int64x2_t *)(v289 + 8 * (v13 >> 6));
    int8x16_t v63 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v77, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77->i64[0], 0), (uint64x2_t)vnegq_s64(v75)));
    if (v74 + v70 >= 0x81) {
      int8x16_t v63 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v77[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v75))), v63);
    }
    int v78 = v291;
    unint64_t v13 = v71;
  }
  int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v294, v294));
  int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
  unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v13 + v84;
  if (v290) {
    BOOL v86 = v290 >= v85;
  }
  else {
    BOOL v86 = 1;
  }
  char v87 = !v86;
  int8x16_t v88 = 0uLL;
  if (v84 > 0x80 || (v87 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v85 = v13;
    int8x16_t v92 = 0uLL;
  }
  else
  {
    unint64_t v89 = v13 & 0x3F;
    int64x2_t v90 = vaddq_s64(vdupq_n_s64(v89), vzip1q_s64((int64x2_t)0, v83));
    int8x16_t v91 = (int64x2_t *)(v76 + 8 * (v13 >> 6));
    int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v90)));
    if (v89 + v84 >= 0x81) {
      int8x16_t v92 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v91[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v90))), v92);
    }
  }
  int8x16_t v93 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v295, v295));
  int8x16_t v94 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v93, (int16x8_t)v93));
  unint64_t v95 = vpaddq_s32((int32x4_t)v94, (int32x4_t)v94).u64[0];
  v96.i64[0] = v95;
  v96.i64[1] = HIDWORD(v95);
  int64x2_t v97 = v96;
  unint64_t v98 = vaddvq_s64(v96);
  unint64_t v99 = v98;
  unint64_t v100 = v85 + v98;
  if (v290) {
    BOOL v101 = v290 >= v100;
  }
  else {
    BOOL v101 = 1;
  }
  char v102 = !v101;
  if (v98 > 0x80 || (v102 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v100 = v85;
  }
  else
  {
    unint64_t v103 = v85 & 0x3F;
    int64x2_t v104 = vaddq_s64(vdupq_n_s64(v103), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v105 = (int64x2_t *)(v76 + 8 * (v85 >> 6));
    int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
    if (v103 + v99 >= 0x81) {
      int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v88);
    }
  }
  unint64_t v106 = v100 + v99;
  if (v290) {
    BOOL v107 = v290 >= v106;
  }
  else {
    BOOL v107 = 1;
  }
  char v108 = !v107;
  int8x16_t v109 = 0uLL;
  if (v99 > 0x80 || (v108 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v106 = v100;
    int8x16_t v113 = 0uLL;
  }
  else
  {
    unint64_t v110 = v100 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v112 = (int64x2_t *)(v76 + 8 * (v100 >> 6));
    int8x16_t v113 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v99 >= 0x81) {
      int8x16_t v113 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v113);
    }
  }
  int8x16_t v114 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v296, v296));
  int8x16_t v115 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v114, (int16x8_t)v114));
  unint64_t v116 = vpaddq_s32((int32x4_t)v115, (int32x4_t)v115).u64[0];
  v117.i64[0] = v116;
  v117.i64[1] = HIDWORD(v116);
  int64x2_t v118 = v117;
  unint64_t v119 = vaddvq_s64(v117);
  unint64_t v120 = v119;
  unint64_t v121 = v106 + v119;
  if (v290) {
    BOOL v122 = v290 >= v121;
  }
  else {
    BOOL v122 = 1;
  }
  char v123 = !v122;
  if (v119 > 0x80 || (v123 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v121 = v106;
  }
  else
  {
    unint64_t v124 = v106 & 0x3F;
    int64x2_t v125 = vaddq_s64(vdupq_n_s64(v124), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v126 = (int64x2_t *)(v76 + 8 * (v106 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v126, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126->i64[0], 0), (uint64x2_t)vnegq_s64(v125)));
    if (v124 + v120 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v126[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v125))), v109);
    }
  }
  unint64_t v127 = v121 + v120;
  if (v290) {
    BOOL v128 = v290 >= v127;
  }
  else {
    BOOL v128 = 1;
  }
  char v129 = !v128;
  int8x16_t v130 = 0uLL;
  if (v120 > 0x80 || (v129 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v127 = v121;
    int8x16_t v134 = 0uLL;
  }
  else
  {
    unint64_t v131 = v121 & 0x3F;
    int64x2_t v132 = vaddq_s64(vdupq_n_s64(v131), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v133 = (int64x2_t *)(v76 + 8 * (v121 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v132)));
    if (v131 + v120 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v132))), v134);
    }
  }
  int8x16_t v135 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v297, v297));
  int8x16_t v136 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v135, (int16x8_t)v135));
  unint64_t v137 = vpaddq_s32((int32x4_t)v136, (int32x4_t)v136).u64[0];
  v138.i64[0] = v137;
  v138.i64[1] = HIDWORD(v137);
  int64x2_t v139 = v138;
  unint64_t v140 = vaddvq_s64(v138);
  unint64_t v141 = v140;
  unint64_t v142 = v127 + v140;
  if (v290) {
    BOOL v143 = v290 >= v142;
  }
  else {
    BOOL v143 = 1;
  }
  char v144 = !v143;
  if (v140 > 0x80 || (v144 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v142 = v127;
  }
  else
  {
    unint64_t v145 = v127 & 0x3F;
    int64x2_t v146 = vaddq_s64(vdupq_n_s64(v145), vzip1q_s64((int64x2_t)0, v139));
    int8x16_t v147 = (int64x2_t *)(v76 + 8 * (v127 >> 6));
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v147, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147->i64[0], 0), (uint64x2_t)vnegq_s64(v146)));
    if (v145 + v141 >= 0x81) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v147[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v146))), v130);
    }
  }
  unint64_t v148 = v142 + v141;
  if (v290) {
    BOOL v149 = v290 >= v148;
  }
  else {
    BOOL v149 = 1;
  }
  char v150 = !v149;
  if (v141 > 0x80 || (v150 & 1) != 0) {
    goto LABEL_133;
  }
  int64x2_t v151 = vaddq_s64(vdupq_n_s64(v142 & 0x3F), vzip1q_s64((int64x2_t)0, v139));
  int8x16_t v152 = (int64x2_t *)(v76 + 8 * (v142 >> 6));
  int8x16_t v153 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v152, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152->i64[0], 0), (uint64x2_t)vnegq_s64(v151)));
  if ((v142 & 0x3F) + v141 >= 0x81) {
    int8x16_t v153 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v152[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v151))), v153);
  }
  if (v78 || v290 + 8 * result - v148 - 1024 >= 9 || v60 == 2)
  {
LABEL_133:
    uint64_t v154 = (8 * (&vars0 - 100)) & 0x20;
    uint64_t v155 = v299 | (255 << v154);
    uint64_t v299 = v155;
    unint64_t v156 = (32 * ((((unint64_t)&v299 + 4) >> 2) & 1)) | 8;
    unint64_t v157 = (((32 * ((((unint64_t)&v299 + 4) >> 2) & 1)) | 0x10) - v154) | 8;
    if (v156 - v154 > 0x18) {
      unint64_t v157 = v156 - v154 + 8;
    }
    if (v157 <= 0x20)
    {
      if (v156 - v154 <= 0x18) {
        LOBYTE(v156) = (32 * ((((unint64_t)&v299 + 4) & 4) != 0)) | 0x10;
      }
      uint64_t v158 = v155 | (255 << v156);
      uint64_t v299 = v158;
      uint64_t v159 = ((_BYTE)v156 + 8) & 0x38;
      if ((unint64_t)(v159 - v154 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v299 = v158 | (255 << v159);
      }
    }
    uint64_t result = 0;
    int8x16_t v160 = (uint64_t *)((char *)a1->i64 + a2);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    *int8x16_t v160 = 0;
    v160[1] = 0;
  }
  else
  {
    int32x2_t v161 = vzip1_s32(*(int32x2_t *)v50.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL));
    int32x2_t v162 = vzip1_s32(*(int32x2_t *)v94.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL));
    uint16x4_t v163 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v49.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
    int32x4_t v164 = (int32x4_t)vextq_s8(v93, v93, 8uLL);
    uint16x4_t v165 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v164.i8);
    v166.i64[0] = v161.u32[0];
    v166.i64[1] = v161.u32[1];
    int64x2_t v167 = v166;
    v166.i64[0] = v162.u32[0];
    v166.i64[1] = v162.u32[1];
    uint64x2_t v168 = (uint64x2_t)vnegq_s64(v166);
    int64x2_t v169 = (int64x2_t)vshlq_u64((uint64x2_t)v47, (uint64x2_t)vnegq_s64(v167));
    *(int32x2_t *)v164.i8 = vmovn_s64((int64x2_t)v47);
    *(int32x2_t *)v169.i8 = vmovn_s64(v169);
    int16x8_t v170 = (int16x8_t)vzip1q_s32(v164, (int32x4_t)v169);
    int64x2_t v171 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v168);
    *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)v88);
    *(int32x2_t *)v171.i8 = vmovn_s64(v171);
    int32x4_t v172 = vzip1q_s32((int32x4_t)v47, (int32x4_t)v171);
    int64x2_t v173 = (int64x2_t)vshlq_u64((uint64x2_t)v113, v168);
    *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v113);
    *(int32x2_t *)v173.i8 = vmovn_s64(v173);
    int16x8_t v174 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v173);
    int32x4_t v175 = (int32x4_t)vmovl_u16(v163);
    int16x8_t v176 = (int16x8_t)vmovl_u16(v165);
    uint32x4_t v177 = (uint32x4_t)vnegq_s32((int32x4_t)v176);
    int16x8_t v178 = (int16x8_t)vshlq_u32((uint32x4_t)v170, (uint32x4_t)vnegq_s32(v175));
    *(int16x4_t *)v170.i8 = vmovn_s32((int32x4_t)v170);
    *(int16x4_t *)v178.i8 = vmovn_s32((int32x4_t)v178);
    int8x16_t v179 = (int8x16_t)vzip1q_s16(v170, v178);
    int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v172, v177);
    *(int16x4_t *)v176.i8 = vmovn_s32(v172);
    *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
    int8x16_t v181 = (int8x16_t)vzip1q_s16(v176, v180);
    int16x8_t v182 = (int16x8_t)vshlq_u32((uint32x4_t)v174, v177);
    *(int16x4_t *)v174.i8 = vmovn_s32((int32x4_t)v174);
    *(int16x4_t *)v182.i8 = vmovn_s32((int32x4_t)v182);
    int8x16_t v183 = (int8x16_t)vzip1q_s16(v174, v182);
    uint16x8_t v184 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v295.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v295, v295, 8uLL))));
    int8x16_t v185 = (int8x16_t)vshlq_u16((uint16x8_t)v179, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v48.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))));
    *(int8x8_t *)v179.i8 = vmovn_s16((int16x8_t)v179);
    *(int8x8_t *)v185.i8 = vmovn_s16((int16x8_t)v185);
    int8x16_t v186 = vzip1q_s8(v179, v185);
    int8x16_t v187 = (int8x16_t)vshlq_u16((uint16x8_t)v181, v184);
    int8x16_t v188 = (int8x16_t)vshlq_u16((uint16x8_t)v183, v184);
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    *(int8x8_t *)v187.i8 = vmovn_s16((int16x8_t)v187);
    *(int8x8_t *)v183.i8 = vmovn_s16((int16x8_t)v183);
    *(int8x8_t *)v188.i8 = vmovn_s16((int16x8_t)v188);
    int8x16_t v189 = vzip1q_s8(v181, v187);
    v187.i64[0] = 0x808080808080808;
    v187.i64[1] = 0x808080808080808;
    int8x16_t v190 = vzip1q_s8(v183, v188);
    v188.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v188.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v191 = vsubq_s8(v187, v48);
    int8x16_t v192 = vaddq_s8(v48, v188);
    v188.i64[0] = 0x808080808080808;
    v188.i64[1] = 0x808080808080808;
    int8x16_t v193 = vshlq_s8(v186, v191);
    v191.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v191.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v194 = vsubq_s8(v188, v295);
    int8x16_t v195 = vaddq_s8(v295, v191);
    int8x16_t v196 = vshlq_s8(v189, v194);
    int8x16_t v197 = vshlq_s8(v190, v194);
    int8x16_t v198 = vshlq_s8(v193, v192);
    int8x16_t v199 = vshlq_s8(v196, v195);
    int8x16_t v200 = vshlq_s8(v197, v195);
    int8x16_t v201 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v198.i8, 0);
    int8x16_t v202 = vandq_s8(v283, v201);
    int8x16_t v203 = vsubq_s8(v199, v202);
    int8x16_t v204 = vsubq_s8(v200, v202);
    *(int32x2_t *)v199.i8 = vzip1_s32(*(int32x2_t *)v115.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL));
    *(int32x2_t *)v200.i8 = vzip1_s32(*(int32x2_t *)v136.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL));
    v166.i64[0] = v199.u32[0];
    v166.i64[1] = v199.u32[1];
    uint64x2_t v205 = (uint64x2_t)vnegq_s64(v166);
    *(int16x4_t *)v202.i8 = vuzp1_s16(*(int16x4_t *)v114.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL));
    int64x2_t v206 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v205);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
    *(int32x2_t *)v206.i8 = vmovn_s64(v206);
    int16x8_t v207 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v206);
    v166.i64[0] = v200.u32[0];
    v166.i64[1] = v200.u32[1];
    uint64x2_t v208 = (uint64x2_t)vnegq_s64(v166);
    int64x2_t v209 = (int64x2_t)vshlq_u64((uint64x2_t)v134, v205);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v134);
    *(int32x2_t *)v209.i8 = vmovn_s64(v209);
    int16x8_t v210 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v209);
    int64x2_t v211 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v208);
    *(int32x2_t *)v114.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v211.i8 = vmovn_s64(v211);
    uint32x4_t v212 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v202.i8));
    int16x8_t v213 = (int16x8_t)vzip1q_s32((int32x4_t)v114, (int32x4_t)v211);
    int16x8_t v214 = (int16x8_t)vshlq_u32((uint32x4_t)v207, v212);
    *(int16x4_t *)v207.i8 = vmovn_s32((int32x4_t)v207);
    *(int16x4_t *)v214.i8 = vmovn_s32((int32x4_t)v214);
    int8x16_t v215 = (int8x16_t)vzip1q_s16(v207, v214);
    uint32x4_t v216 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v135.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL))));
    int16x8_t v217 = (int16x8_t)vshlq_u32((uint32x4_t)v210, v212);
    *(int16x4_t *)v210.i8 = vmovn_s32((int32x4_t)v210);
    *(int16x4_t *)v217.i8 = vmovn_s32((int32x4_t)v217);
    int8x16_t v218 = (int8x16_t)vzip1q_s16(v210, v217);
    int16x8_t v219 = (int16x8_t)vshlq_u32((uint32x4_t)v213, v216);
    *(int16x4_t *)v213.i8 = vmovn_s32((int32x4_t)v213);
    *(int16x4_t *)v219.i8 = vmovn_s32((int32x4_t)v219);
    uint16x8_t v220 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v296.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v296, v296, 8uLL))));
    int8x16_t v221 = (int8x16_t)vzip1q_s16(v213, v219);
    int8x16_t v222 = (int8x16_t)vshlq_u16((uint16x8_t)v215, v220);
    int8x16_t v223 = (int8x16_t)vshlq_u16((uint16x8_t)v218, v220);
    *(int8x8_t *)v215.i8 = vmovn_s16((int16x8_t)v215);
    *(int8x8_t *)v222.i8 = vmovn_s16((int16x8_t)v222);
    *(int8x8_t *)v218.i8 = vmovn_s16((int16x8_t)v218);
    *(int8x8_t *)v223.i8 = vmovn_s16((int16x8_t)v223);
    int8x16_t v224 = vzip1q_s8(v215, v222);
    v222.i64[0] = 0x808080808080808;
    v222.i64[1] = 0x808080808080808;
    int8x16_t v225 = vzip1q_s8(v218, v223);
    v223.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v223.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v226 = vsubq_s8(v222, v296);
    int8x16_t v227 = vaddq_s8(v296, v223);
    int8x16_t v228 = vshlq_s8(v224, v226);
    int8x16_t v229 = vshlq_s8(v225, v226);
    uint16x8_t v230 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v297.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v297, v297, 8uLL))));
    int8x16_t v231 = vshlq_s8(v229, v227);
    int8x16_t v232 = vandq_s8(v284, v201);
    int8x16_t v233 = vsubq_s8(vshlq_s8(v228, v227), v232);
    int8x16_t v234 = vsubq_s8(v231, v232);
    int8x16_t v235 = (int8x16_t)vshlq_u16((uint16x8_t)v221, v230);
    *(int8x8_t *)v221.i8 = vmovn_s16((int16x8_t)v221);
    *(int8x8_t *)v235.i8 = vmovn_s16((int16x8_t)v235);
    v232.i64[0] = 0x808080808080808;
    v232.i64[1] = 0x808080808080808;
    int8x16_t v236 = vzip1q_s8(v221, v235);
    v221.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v221.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v237 = vsubq_s8(v232, v297);
    int8x16_t v238 = vaddq_s8(v297, v221);
    int64x2_t v239 = (int64x2_t)vshlq_u64((uint64x2_t)v153, v208);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    *(int32x2_t *)v239.i8 = vmovn_s64(v239);
    int16x8_t v240 = (int16x8_t)vzip1q_s32((int32x4_t)v153, (int32x4_t)v239);
    int16x8_t v241 = (int16x8_t)vshlq_u32((uint32x4_t)v240, v216);
    *(int16x4_t *)v240.i8 = vmovn_s32((int32x4_t)v240);
    *(int16x4_t *)v241.i8 = vmovn_s32((int32x4_t)v241);
    int8x16_t v242 = (int8x16_t)vzip1q_s16(v240, v241);
    int8x16_t v243 = (int8x16_t)vshlq_u16((uint16x8_t)v242, v230);
    *(int8x8_t *)v242.i8 = vmovn_s16((int16x8_t)v242);
    *(int8x8_t *)v243.i8 = vmovn_s16((int16x8_t)v243);
    int8x16_t v244 = vshlq_s8(vshlq_s8(vzip1q_s8(v242, v243), v237), v238);
    int8x16_t v245 = vandq_s8(v285, v201);
    int8x16_t v246 = vsubq_s8(vshlq_s8(vshlq_s8(v236, v237), v238), v245);
    int8x16_t v247 = vsubq_s8(v244, v245);
    *(int32x2_t *)v236.i8 = vzip1_s32(*(int32x2_t *)v66.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL));
    *(int32x2_t *)v244.i8 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v166.i64[0] = v236.u32[0];
    v166.i64[1] = v236.u32[1];
    int64x2_t v248 = (int64x2_t)vshlq_u64((uint64x2_t)v63, (uint64x2_t)vnegq_s64(v166));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v63);
    *(int32x2_t *)v248.i8 = vmovn_s64(v248);
    int16x8_t v249 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v248);
    v166.i64[0] = v244.u32[0];
    v166.i64[1] = v244.u32[1];
    int64x2_t v250 = (int64x2_t)vshlq_u64((uint64x2_t)v92, (uint64x2_t)vnegq_s64(v166));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v92);
    *(int32x2_t *)v250.i8 = vmovn_s64(v250);
    int16x8_t v251 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v250);
    int16x8_t v252 = (int16x8_t)vshlq_u32((uint32x4_t)v249, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v65.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))));
    *(int16x4_t *)v249.i8 = vmovn_s32((int32x4_t)v249);
    *(int16x4_t *)v252.i8 = vmovn_s32((int32x4_t)v252);
    int8x16_t v253 = (int8x16_t)vzip1q_s16(v249, v252);
    int16x8_t v254 = (int16x8_t)vshlq_u32((uint32x4_t)v251, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v251.i8 = vmovn_s32((int32x4_t)v251);
    *(int16x4_t *)v254.i8 = vmovn_s32((int32x4_t)v254);
    int8x16_t v255 = (int8x16_t)vzip1q_s16(v251, v254);
    int8x16_t v256 = (int8x16_t)vshlq_u16((uint16x8_t)v253, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))));
    int8x16_t v257 = (int8x16_t)vshlq_u16((uint16x8_t)v255, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v294.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v294, v294, 8uLL)))));
    *(int8x8_t *)v253.i8 = vmovn_s16((int16x8_t)v253);
    *(int8x8_t *)v256.i8 = vmovn_s16((int16x8_t)v256);
    *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
    *(int8x8_t *)v257.i8 = vmovn_s16((int16x8_t)v257);
    int8x16_t v258 = vzip1q_s8(v253, v256);
    v256.i64[0] = 0x808080808080808;
    v256.i64[1] = 0x808080808080808;
    int8x16_t v259 = vzip1q_s8(v255, v257);
    v257.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v257.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v260 = vshlq_s8(vshlq_s8(v258, vsubq_s8(v256, v64)), vaddq_s8(v64, v257));
    int8x16_t v261 = vshlq_s8(vshlq_s8(v259, vsubq_s8(v256, v294)), vaddq_s8(v294, v257));
    v262.i64[0] = 0x101010101010101;
    v262.i64[1] = 0x101010101010101;
    int8x16_t v263 = vandq_s8(v286, v201);
    int8x16_t v264 = vsubq_s8(vaddq_s8(vandq_s8(v198, v286), v260), v263);
    int8x16_t v265 = vsubq_s8(v261, v263);
    if (vaddlvq_s8(vceqq_s8(v287, v262)))
    {
      int8x16_t v266 = vnegq_s8(vandq_s8(v293, v262));
      int8x16_t v267 = v265;
      v267.i32[3] = v264.i32[0];
      int8x16_t v268 = v264;
      v268.i32[0] = v265.i32[3];
      v301.val[0] = vbslq_s8(v266, v268, v264);
      v301.val[1] = vbslq_s8(v266, v267, v265);
      v269.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v269.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v302.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v301, (int8x16_t)xmmword_242EA7570), v266), v301.val[0]);
      v302.val[1] = vaddq_s8(v301.val[1], vandq_s8(vqtbl2q_s8(v301, v269), v266));
      int8x16_t v264 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, (int8x16_t)xmmword_242EA7580), v266), v302.val[0]);
      int8x16_t v265 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, v269), v266), v302.val[1]);
      v302.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v203.i8, (int8x16_t)xmmword_242EA7590), v266), v203);
      v302.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v203.i8, (int8x16_t)xmmword_242EA75A0), v266), v204);
      int8x16_t v203 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, (int8x16_t)xmmword_242EA75B0), v266), v302.val[0]);
      int8x16_t v204 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, v269), v266), v302.val[1]);
      v302.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v233.i8, (int8x16_t)xmmword_242EA75C0), v266), v233);
      v302.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v233.i8, (int8x16_t)xmmword_242EA7570), v266), v234);
      int8x16_t v233 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, v269), v266), v302.val[0]);
      int8x16_t v234 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, (int8x16_t)xmmword_242EA75D0), v266), v302.val[1]);
      v301.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v246.i8, (int8x16_t)xmmword_242EA75E0), v266), v246);
      v301.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v246.i8, (int8x16_t)xmmword_242EA7570), v266), v247);
      int8x16_t v246 = vaddq_s8(vandq_s8(vqtbl2q_s8(v301, v269), v266), v301.val[0]);
      int8x16_t v247 = vaddq_s8(vandq_s8(vqtbl2q_s8(v301, (int8x16_t)xmmword_242EA75F0), v266), v301.val[1]);
    }
    int8x16_t v270 = vaddq_s8(v292, v264);
    int8x16_t v271 = vaddq_s8(v265, v292);
    int8x16_t v272 = vaddq_s8(v203, v292);
    int8x16_t v273 = vaddq_s8(v204, v292);
    int8x16_t v274 = vaddq_s8(v233, v292);
    int8x16_t v275 = vaddq_s8(v234, v292);
    int8x16_t v276 = vaddq_s8(v246, v292);
    int8x16_t v277 = vaddq_s8(v247, v292);
    v278.i64[0] = 0x1010101010101010;
    v278.i64[1] = 0x1010101010101010;
    int8x16_t v279 = vtstq_s8(v293, v278);
    if ((v293.i8[1] & 0x10) != 0)
    {
      v279.i8[1] = v279.i8[2];
      v279.i8[2] = 0;
      int8x16_t v279 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v279.i8, 0);
      int8x16_t v280 = (int8x16_t)xmmword_242EA7610;
    }
    else
    {
      int8x16_t v280 = (int8x16_t)xmmword_242EA7600;
    }
    int8x16_t v281 = a1 + 2;
    *a1 = vaddq_s8(vandq_s8(vqtbl1q_s8(v270, v280), v279), v270);
    a1[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v271, v280), v279), v271);
    int8x16_t v282 = (int8x16_t *)((char *)a1 + a2);
    *int8x16_t v281 = vaddq_s8(vandq_s8(vqtbl1q_s8(v274, v280), v279), v274);
    v281[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v275, v280), v279), v275);
    *int8x16_t v282 = vaddq_s8(vandq_s8(vqtbl1q_s8(v272, v280), v279), v272);
    v282[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v273, v280), v279), v273);
    v282 += 2;
    *int8x16_t v282 = vaddq_s8(vandq_s8(vqtbl1q_s8(v276, v280), v279), v276);
    v282[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v277, v280), v279), v277);
  }
  return result;
}

_OWORD *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(_OWORD *result, uint64_t a2, _OWORD *a3, char *a4, int a5, int a6)
{
  char v6 = 0;
  if (a5 >= 4) {
    int v7 = 4;
  }
  else {
    int v7 = a5;
  }
  if (a6 >= 2) {
    int v8 = 2;
  }
  else {
    int v8 = a6;
  }
  if (v7 && v8)
  {
    long long v9 = result[1];
    long long v10 = result[2];
    long long v11 = result[3];
    long long v12 = *(_OWORD *)((char *)result + a2);
    long long v13 = *(_OWORD *)((char *)result + a2 + 16);
    long long v14 = *(_OWORD *)((char *)result + a2 + 32);
    long long v15 = *(_OWORD *)((char *)result + a2 + 48);
    *a3 = *result;
    a3[1] = v9;
    a3[2] = v12;
    a3[3] = v13;
    a3[4] = v10;
    a3[5] = v11;
    a3[6] = v14;
    a3[7] = v15;
    a3 += 8;
    char v6 = 127;
  }
  char v16 = 0;
  uint64_t v17 = 2 * a2;
  *a4 = v6;
  if (a6 <= 2) {
    int v18 = 2;
  }
  else {
    int v18 = a6;
  }
  unsigned int v19 = v18 - 2;
  if (v19 >= 2) {
    unsigned int v19 = 2;
  }
  if (v7 && v19)
  {
    long long v21 = *(_OWORD *)((char *)result + v17 + 16);
    unint64_t v20 = (_OWORD *)((char *)result + v17 + a2);
    long long v22 = *(_OWORD *)((char *)result + v17 + 32);
    long long v23 = *(_OWORD *)((char *)result + v17 + 48);
    long long v24 = *v20;
    long long v25 = v20[1];
    v20 += 2;
    long long v26 = *v20;
    long long v27 = v20[1];
    *a3 = *(_OWORD *)((char *)result + 2 * a2);
    a3[1] = v21;
    a3[2] = v24;
    a3[3] = v25;
    a3[4] = v22;
    a3[5] = v23;
    a3[6] = v26;
    a3[7] = v27;
    a3 += 8;
    char v16 = 127;
  }
  char v28 = 0;
  a4[1] = v16;
  if (a5 <= 4) {
    int v29 = 4;
  }
  else {
    int v29 = a5;
  }
  unsigned int v30 = v29 - 4;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v31 && v8)
  {
    long long v33 = result[5];
    int32x2_t v32 = (_OWORD *)((char *)result + a2 + 64);
    long long v34 = result[6];
    long long v35 = result[7];
    long long v36 = *v32;
    long long v37 = v32[1];
    v32 += 2;
    long long v38 = *v32;
    long long v39 = v32[1];
    *a3 = result[4];
    a3[1] = v33;
    a3[2] = v36;
    a3[3] = v37;
    a3[4] = v34;
    a3[5] = v35;
    a3[6] = v38;
    a3[7] = v39;
    a3 += 8;
    char v28 = 127;
  }
  char v40 = 0;
  a4[2] = v28;
  if (v31 && v19)
  {
    int32x4_t v41 = (_OWORD *)((char *)result + v17);
    long long v43 = v41[4];
    long long v44 = v41[5];
    int8x16_t v42 = (long long *)((char *)v41 + a2 + 64);
    v41 += 6;
    long long v45 = *v41;
    long long v46 = v41[1];
    long long v47 = *v42;
    long long v48 = v42[1];
    v42 += 2;
    long long v49 = *v42;
    long long v50 = v42[1];
    *a3 = v43;
    a3[1] = v44;
    a3[2] = v47;
    a3[3] = v48;
    a3[4] = v45;
    a3[5] = v46;
    a3[6] = v49;
    a3[7] = v50;
    a3 += 8;
    char v40 = 127;
  }
  char v51 = 0;
  a4[3] = v40;
  if (a6 <= 4) {
    int v52 = 4;
  }
  else {
    int v52 = a6;
  }
  unsigned int v53 = v52 - 4;
  if (v53 >= 2) {
    unsigned int v53 = 2;
  }
  if (v7 && v53)
  {
    unint64_t v54 = (_OWORD *)((char *)result + 4 * a2);
    BOOL v55 = v54 + 2;
    long long v57 = *v54;
    long long v58 = v54[1];
    int v56 = (long long *)((char *)v54 + a2);
    long long v59 = *v55;
    long long v60 = v55[1];
    long long v61 = *v56;
    long long v62 = v56[1];
    v56 += 2;
    long long v63 = *v56;
    long long v64 = v56[1];
    *a3 = v57;
    a3[1] = v58;
    a3[2] = v61;
    a3[3] = v62;
    a3[4] = v59;
    a3[5] = v60;
    a3[6] = v63;
    a3[7] = v64;
    a3 += 8;
    char v51 = 127;
  }
  char v65 = 0;
  a4[4] = v51;
  if (a6 <= 6) {
    int v66 = 6;
  }
  else {
    int v66 = a6;
  }
  unsigned int v67 = v66 - 6;
  if (v67 >= 2) {
    int v68 = 2;
  }
  else {
    int v68 = v67;
  }
  if (v7 && v68)
  {
    int64x2_t v69 = (_OWORD *)((char *)result + 6 * a2);
    unint64_t v70 = v69 + 2;
    long long v72 = *v69;
    long long v73 = v69[1];
    unint64_t v71 = (long long *)((char *)v69 + a2);
    long long v74 = *v70;
    long long v75 = v70[1];
    long long v76 = *v71;
    long long v77 = v71[1];
    v71 += 2;
    long long v78 = *v71;
    long long v79 = v71[1];
    *a3 = v72;
    a3[1] = v73;
    a3[2] = v76;
    a3[3] = v77;
    a3[4] = v74;
    a3[5] = v75;
    a3[6] = v78;
    a3[7] = v79;
    a3 += 8;
    char v65 = 127;
  }
  char v80 = 0;
  a4[5] = v65;
  if (v31 && v53)
  {
    unint64_t v81 = (_OWORD *)((char *)result + 4 * a2);
    long long v83 = v81[4];
    long long v84 = v81[5];
    int64x2_t v82 = (long long *)((char *)v81 + a2 + 64);
    v81 += 6;
    long long v85 = *v81;
    long long v86 = v81[1];
    long long v87 = *v82;
    long long v88 = v82[1];
    v82 += 2;
    long long v89 = *v82;
    long long v90 = v82[1];
    *a3 = v83;
    a3[1] = v84;
    a3[2] = v87;
    a3[3] = v88;
    a3[4] = v85;
    a3[5] = v86;
    a3[6] = v89;
    a3[7] = v90;
    a3 += 8;
    char v80 = 127;
  }
  char v91 = 0;
  a4[6] = v80;
  if (v31 && v68)
  {
    int8x16_t v92 = (_OWORD *)((char *)result + 6 * a2);
    long long v94 = v92[4];
    long long v95 = v92[5];
    int8x16_t v93 = (long long *)((char *)v92 + a2 + 64);
    v92 += 6;
    long long v96 = *v92;
    long long v97 = v92[1];
    long long v98 = *v93;
    long long v99 = v93[1];
    v93 += 2;
    long long v100 = *v93;
    long long v101 = v93[1];
    *a3 = v94;
    a3[1] = v95;
    a3[2] = v98;
    a3[3] = v99;
    a3[4] = v96;
    a3[5] = v97;
    a3[6] = v100;
    a3[7] = v101;
    char v91 = 127;
  }
  a4[7] = v91;
  return result;
}

int8x16_t *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned int v6 = *a3;
  if (v6 == 127)
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    long long v9 = *(_OWORD *)(a2 + 32);
    long long v10 = *(_OWORD *)(a2 + 48);
    long long v11 = *(_OWORD *)(a2 + 64);
    long long v12 = *(_OWORD *)(a2 + 80);
    long long v13 = *(_OWORD *)(a2 + 96);
    long long v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 128) = v9;
    *(_OWORD *)(a1 + 144) = v10;
    *(_OWORD *)(a1 + 160) = v13;
    *(_OWORD *)(a1 + 176) = v14;
    uint64_t v7 = 128;
  }
  else if (v6 == 3)
  {
    float32x4_t v15 = vld1q_dup_f32((const float *)a2);
    *(float32x4_t *)a1 = v15;
    *(float32x4_t *)(a1 + 16) = v15;
    *(float32x4_t *)(a1 + 32) = v15;
    *(float32x4_t *)(a1 + 48) = v15;
    *(float32x4_t *)(a1 + 128) = v15;
    *(float32x4_t *)(a1 + 144) = v15;
    *(float32x4_t *)(a1 + 160) = v15;
    *(float32x4_t *)(a1 + 176) = v15;
    uint64_t v7 = 4;
  }
  else if (*a3)
  {
    uint64_t v7 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int8x16_t *)a1, 128, a2, v6);
  }
  else
  {
    uint64_t v7 = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
  }
  uint64_t v16 = a2 + v7;
  uint64_t v17 = (int8x16_t *)(a1 + 256);
  unsigned int v18 = a3[1];
  if (a3[1])
  {
    if (v18 == 3)
    {
      float32x4_t v27 = vld1q_dup_f32((const float *)v16);
      *(float32x4_t *)(a1 + 256) = v27;
      *(float32x4_t *)(a1 + 272) = v27;
      *(float32x4_t *)(a1 + 288) = v27;
      *(float32x4_t *)(a1 + 304) = v27;
      *(float32x4_t *)(a1 + 384) = v27;
      *(float32x4_t *)(a1 + 400) = v27;
      *(float32x4_t *)(a1 + 416) = v27;
      *(float32x4_t *)(a1 + 432) = v27;
      uint64_t v26 = 4;
    }
    else if (v18 == 127)
    {
      long long v19 = *(_OWORD *)(v16 + 16);
      long long v20 = *(_OWORD *)(v16 + 32);
      long long v21 = *(_OWORD *)(v16 + 48);
      long long v22 = *(_OWORD *)(v16 + 64);
      long long v23 = *(_OWORD *)(v16 + 80);
      long long v24 = *(_OWORD *)(v16 + 96);
      long long v25 = *(_OWORD *)(v16 + 112);
      *uint64_t v17 = *(int8x16_t *)v16;
      *(_OWORD *)(a1 + 272) = v19;
      *(_OWORD *)(a1 + 288) = v22;
      *(_OWORD *)(a1 + 304) = v23;
      *(_OWORD *)(a1 + 384) = v20;
      *(_OWORD *)(a1 + 400) = v21;
      *(_OWORD *)(a1 + 416) = v24;
      *(_OWORD *)(a1 + 432) = v25;
      uint64_t v26 = 128;
    }
    else
    {
      uint64_t v26 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v17, 128, v16, v18);
    }
  }
  else
  {
    uint64_t v26 = 0;
    *(_OWORD *)(a1 + 288) = 0u;
    *(_OWORD *)(a1 + 304) = 0u;
    *uint64_t v17 = 0u;
    *(_OWORD *)(a1 + 272) = 0u;
    *(_OWORD *)(a1 + 384) = 0u;
    *(_OWORD *)(a1 + 400) = 0u;
    *(_OWORD *)(a1 + 416) = 0u;
    *(_OWORD *)(a1 + 432) = 0u;
  }
  uint64_t v28 = v16 + v26;
  int v29 = (int8x16_t *)(a1 + 64);
  unsigned int v30 = a3[2];
  if (a3[2])
  {
    if (v30 == 3)
    {
      float32x4_t v39 = vld1q_dup_f32((const float *)v28);
      *(float32x4_t *)(a1 + 64) = v39;
      *(float32x4_t *)(a1 + 80) = v39;
      *(float32x4_t *)(a1 + 96) = v39;
      *(float32x4_t *)(a1 + 112) = v39;
      *(float32x4_t *)(a1 + 192) = v39;
      *(float32x4_t *)(a1 + 208) = v39;
      *(float32x4_t *)(a1 + 224) = v39;
      *(float32x4_t *)(a1 + 240) = v39;
      uint64_t v38 = 4;
    }
    else if (v30 == 127)
    {
      long long v31 = *(_OWORD *)(v28 + 16);
      long long v32 = *(_OWORD *)(v28 + 32);
      long long v33 = *(_OWORD *)(v28 + 48);
      long long v34 = *(_OWORD *)(v28 + 64);
      long long v35 = *(_OWORD *)(v28 + 80);
      long long v36 = *(_OWORD *)(v28 + 96);
      long long v37 = *(_OWORD *)(v28 + 112);
      *int v29 = *(int8x16_t *)v28;
      *(_OWORD *)(a1 + 80) = v31;
      *(_OWORD *)(a1 + 96) = v34;
      *(_OWORD *)(a1 + 112) = v35;
      *(_OWORD *)(a1 + 192) = v32;
      *(_OWORD *)(a1 + 208) = v33;
      *(_OWORD *)(a1 + 224) = v36;
      *(_OWORD *)(a1 + 240) = v37;
      uint64_t v38 = 128;
    }
    else
    {
      uint64_t v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v29, 128, v28, v30);
    }
  }
  else
  {
    uint64_t v38 = 0;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *int v29 = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
    *(_OWORD *)(a1 + 208) = 0u;
    *(_OWORD *)(a1 + 224) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
  }
  uint64_t v40 = v28 + v38;
  int32x4_t v41 = (int8x16_t *)(a1 + 320);
  unsigned int v42 = a3[3];
  if (a3[3])
  {
    if (v42 == 3)
    {
      float32x4_t v51 = vld1q_dup_f32((const float *)v40);
      *(float32x4_t *)(a1 + 320) = v51;
      *(float32x4_t *)(a1 + 336) = v51;
      *(float32x4_t *)(a1 + 352) = v51;
      *(float32x4_t *)(a1 + 368) = v51;
      *(float32x4_t *)(a1 + 448) = v51;
      *(float32x4_t *)(a1 + 464) = v51;
      *(float32x4_t *)(a1 + 480) = v51;
      *(float32x4_t *)(a1 + 496) = v51;
      uint64_t v50 = 4;
    }
    else if (v42 == 127)
    {
      long long v43 = *(_OWORD *)(v40 + 16);
      long long v44 = *(_OWORD *)(v40 + 32);
      long long v45 = *(_OWORD *)(v40 + 48);
      long long v46 = *(_OWORD *)(v40 + 64);
      long long v47 = *(_OWORD *)(v40 + 80);
      long long v48 = *(_OWORD *)(v40 + 96);
      long long v49 = *(_OWORD *)(v40 + 112);
      *int32x4_t v41 = *(int8x16_t *)v40;
      *(_OWORD *)(a1 + 336) = v43;
      *(_OWORD *)(a1 + 352) = v46;
      *(_OWORD *)(a1 + 368) = v47;
      *(_OWORD *)(a1 + 448) = v44;
      *(_OWORD *)(a1 + 464) = v45;
      *(_OWORD *)(a1 + 480) = v48;
      *(_OWORD *)(a1 + 496) = v49;
      uint64_t v50 = 128;
    }
    else
    {
      uint64_t v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v41, 128, v40, v42);
    }
  }
  else
  {
    uint64_t v50 = 0;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 368) = 0u;
    *int32x4_t v41 = 0u;
    *(_OWORD *)(a1 + 336) = 0u;
    *(_OWORD *)(a1 + 448) = 0u;
    *(_OWORD *)(a1 + 464) = 0u;
    *(_OWORD *)(a1 + 480) = 0u;
    *(_OWORD *)(a1 + 496) = 0u;
  }
  uint64_t v52 = v40 + v50;
  unsigned int v53 = (int8x16_t *)(a1 + 512);
  unsigned int v54 = a3[4];
  if (a3[4])
  {
    if (v54 == 3)
    {
      float32x4_t v63 = vld1q_dup_f32((const float *)v52);
      *(float32x4_t *)(a1 + 512) = v63;
      *(float32x4_t *)(a1 + 528) = v63;
      *(float32x4_t *)(a1 + 544) = v63;
      *(float32x4_t *)(a1 + 560) = v63;
      *(float32x4_t *)(a1 + 640) = v63;
      *(float32x4_t *)(a1 + 656) = v63;
      *(float32x4_t *)(a1 + 672) = v63;
      *(float32x4_t *)(a1 + 688) = v63;
      uint64_t v62 = 4;
    }
    else if (v54 == 127)
    {
      long long v55 = *(_OWORD *)(v52 + 16);
      long long v56 = *(_OWORD *)(v52 + 32);
      long long v57 = *(_OWORD *)(v52 + 48);
      long long v58 = *(_OWORD *)(v52 + 64);
      long long v59 = *(_OWORD *)(v52 + 80);
      long long v60 = *(_OWORD *)(v52 + 96);
      long long v61 = *(_OWORD *)(v52 + 112);
      *unsigned int v53 = *(int8x16_t *)v52;
      *(_OWORD *)(a1 + 528) = v55;
      *(_OWORD *)(a1 + 544) = v58;
      *(_OWORD *)(a1 + 560) = v59;
      *(_OWORD *)(a1 + 640) = v56;
      *(_OWORD *)(a1 + 656) = v57;
      *(_OWORD *)(a1 + 672) = v60;
      *(_OWORD *)(a1 + 688) = v61;
      uint64_t v62 = 128;
    }
    else
    {
      uint64_t v62 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v53, 128, v52, v54);
    }
  }
  else
  {
    uint64_t v62 = 0;
    *(_OWORD *)(a1 + 544) = 0u;
    *(_OWORD *)(a1 + 560) = 0u;
    *unsigned int v53 = 0u;
    *(_OWORD *)(a1 + 528) = 0u;
    *(_OWORD *)(a1 + 640) = 0u;
    *(_OWORD *)(a1 + 656) = 0u;
    *(_OWORD *)(a1 + 672) = 0u;
    *(_OWORD *)(a1 + 688) = 0u;
  }
  uint64_t v64 = v52 + v62;
  char v65 = (int8x16_t *)(a1 + 768);
  unsigned int v66 = a3[5];
  if (a3[5])
  {
    if (v66 == 3)
    {
      float32x4_t v75 = vld1q_dup_f32((const float *)v64);
      *(float32x4_t *)(a1 + 768) = v75;
      *(float32x4_t *)(a1 + 784) = v75;
      *(float32x4_t *)(a1 + 800) = v75;
      *(float32x4_t *)(a1 + 816) = v75;
      *(float32x4_t *)(a1 + 896) = v75;
      *(float32x4_t *)(a1 + 912) = v75;
      *(float32x4_t *)(a1 + 928) = v75;
      *(float32x4_t *)(a1 + 944) = v75;
      uint64_t v74 = 4;
    }
    else if (v66 == 127)
    {
      long long v67 = *(_OWORD *)(v64 + 16);
      long long v68 = *(_OWORD *)(v64 + 32);
      long long v69 = *(_OWORD *)(v64 + 48);
      long long v70 = *(_OWORD *)(v64 + 64);
      long long v71 = *(_OWORD *)(v64 + 80);
      long long v72 = *(_OWORD *)(v64 + 96);
      long long v73 = *(_OWORD *)(v64 + 112);
      *char v65 = *(int8x16_t *)v64;
      *(_OWORD *)(a1 + 784) = v67;
      *(_OWORD *)(a1 + 800) = v70;
      *(_OWORD *)(a1 + 816) = v71;
      *(_OWORD *)(a1 + 896) = v68;
      *(_OWORD *)(a1 + 912) = v69;
      *(_OWORD *)(a1 + 928) = v72;
      *(_OWORD *)(a1 + 944) = v73;
      uint64_t v74 = 128;
    }
    else
    {
      uint64_t v74 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v65, 128, v64, v66);
    }
  }
  else
  {
    uint64_t v74 = 0;
    *(_OWORD *)(a1 + 800) = 0u;
    *(_OWORD *)(a1 + 816) = 0u;
    *char v65 = 0u;
    *(_OWORD *)(a1 + 784) = 0u;
    *(_OWORD *)(a1 + 896) = 0u;
    *(_OWORD *)(a1 + 912) = 0u;
    *(_OWORD *)(a1 + 928) = 0u;
    *(_OWORD *)(a1 + 944) = 0u;
  }
  uint64_t v76 = v64 + v74;
  long long v77 = (int8x16_t *)(a1 + 576);
  unsigned int v78 = a3[6];
  if (a3[6])
  {
    if (v78 == 3)
    {
      float32x4_t v87 = vld1q_dup_f32((const float *)v76);
      *(float32x4_t *)(a1 + 576) = v87;
      *(float32x4_t *)(a1 + 592) = v87;
      *(float32x4_t *)(a1 + 608) = v87;
      *(float32x4_t *)(a1 + 624) = v87;
      *(float32x4_t *)(a1 + 704) = v87;
      *(float32x4_t *)(a1 + 720) = v87;
      *(float32x4_t *)(a1 + 736) = v87;
      *(float32x4_t *)(a1 + 752) = v87;
      uint64_t v86 = 4;
    }
    else if (v78 == 127)
    {
      long long v79 = *(_OWORD *)(v76 + 16);
      long long v80 = *(_OWORD *)(v76 + 32);
      long long v81 = *(_OWORD *)(v76 + 48);
      long long v82 = *(_OWORD *)(v76 + 64);
      long long v83 = *(_OWORD *)(v76 + 80);
      long long v84 = *(_OWORD *)(v76 + 96);
      long long v85 = *(_OWORD *)(v76 + 112);
      *long long v77 = *(int8x16_t *)v76;
      *(_OWORD *)(a1 + 592) = v79;
      *(_OWORD *)(a1 + 608) = v82;
      *(_OWORD *)(a1 + 624) = v83;
      *(_OWORD *)(a1 + 704) = v80;
      *(_OWORD *)(a1 + 720) = v81;
      *(_OWORD *)(a1 + 736) = v84;
      *(_OWORD *)(a1 + 752) = v85;
      uint64_t v86 = 128;
    }
    else
    {
      uint64_t v86 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v77, 128, v76, v78);
    }
  }
  else
  {
    uint64_t v86 = 0;
    *(_OWORD *)(a1 + 608) = 0u;
    *(_OWORD *)(a1 + 624) = 0u;
    *long long v77 = 0u;
    *(_OWORD *)(a1 + 592) = 0u;
    *(_OWORD *)(a1 + 704) = 0u;
    *(_OWORD *)(a1 + 720) = 0u;
    *(_OWORD *)(a1 + 736) = 0u;
    *(_OWORD *)(a1 + 752) = 0u;
  }
  uint64_t result = (int8x16_t *)(a1 + 832);
  unsigned int v89 = a3[7];
  if (!a3[7])
  {
    float32x4_t v98 = 0uLL;
    *(_OWORD *)(a1 + 864) = 0u;
    *(_OWORD *)(a1 + 880) = 0u;
    *uint64_t result = 0u;
    *(_OWORD *)(a1 + 848) = 0u;
LABEL_56:
    *(float32x4_t *)(a1 + 960) = v98;
    *(float32x4_t *)(a1 + 976) = v98;
    *(float32x4_t *)(a1 + 992) = v98;
    *(float32x4_t *)(a1 + 1008) = v98;
    return result;
  }
  uint64_t v90 = v76 + v86;
  if (v89 == 3)
  {
    float32x4_t v98 = vld1q_dup_f32((const float *)v90);
    *(float32x4_t *)(a1 + 832) = v98;
    *(float32x4_t *)(a1 + 848) = v98;
    *(float32x4_t *)(a1 + 864) = v98;
    *(float32x4_t *)(a1 + 880) = v98;
    goto LABEL_56;
  }
  if (v89 == 127)
  {
    long long v91 = *(_OWORD *)(v90 + 16);
    long long v92 = *(_OWORD *)(v90 + 32);
    long long v93 = *(_OWORD *)(v90 + 48);
    long long v94 = *(_OWORD *)(v90 + 64);
    long long v95 = *(_OWORD *)(v90 + 80);
    long long v96 = *(_OWORD *)(v90 + 96);
    long long v97 = *(_OWORD *)(v90 + 112);
    *uint64_t result = *(int8x16_t *)v90;
    *(_OWORD *)(a1 + 848) = v91;
    *(_OWORD *)(a1 + 864) = v94;
    *(_OWORD *)(a1 + 880) = v95;
    *(_OWORD *)(a1 + 960) = v92;
    *(_OWORD *)(a1 + 976) = v93;
    *(_OWORD *)(a1 + 992) = v96;
    *(_OWORD *)(a1 + 1008) = v97;
  }
  else
  {
    return (int8x16_t *)AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(result, 128, v90, v89);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(unint64_t a1, char *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int8x16_t v5 = *(int8x16_t *)(a3 + 48);
  int8x16_t v6 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a3, 0);
  int8x16_t v7 = vsubq_s8(*(int8x16_t *)a3, v6);
  v445.val[0] = *(int8x16_t *)a3;
  v445.val[1] = *(int8x16_t *)(a3 + 16);
  int8x16_t v451 = vsubq_s8(v445.val[1], v6);
  int8x16_t v446 = *(int8x16_t *)(a3 + a4);
  int8x16_t v8 = vsubq_s8(v446, v6);
  int8x16_t v443 = *(int8x16_t *)(a3 + a4 + 16);
  int8x16_t v9 = vsubq_s8(v443, v6);
  int8x16_t v447 = *(int8x16_t *)(a3 + 32);
  int8x16_t v10 = vsubq_s8(v447, v6);
  int8x16_t v11 = vsubq_s8(v5, v6);
  int8x16_t v448 = *(int8x16_t *)(a3 + a4 + 32);
  int8x16_t v12 = vsubq_s8(v448, v6);
  int8x16_t v444 = *(int8x16_t *)(a3 + a4 + 48);
  int8x16_t v13 = vsubq_s8(v444, v6);
  int8x16_t v14 = vqtbl1q_s8(vmaxq_s8(v7, v451), (int8x16_t)xmmword_242EA7560);
  int8x16_t v15 = vqtbl1q_s8(vminq_s8(v7, v451), (int8x16_t)xmmword_242EA7560);
  int8x16_t v16 = vpmaxq_s8(v14, v14);
  int8x16_t v17 = vpminq_s8(v15, v15);
  int8x16_t v18 = vpmaxq_s8(v16, v16);
  int8x16_t v19 = vpminq_s8(v17, v17);
  v20.i64[0] = 0x8080808080808080;
  v20.i64[1] = 0x8080808080808080;
  int8x16_t v21 = vmaxq_s8(v18, v20);
  v22.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v22.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v23 = vminq_s8(v19, v22);
  int8x16_t v24 = vzip1q_s8(v18, v19);
  int8x16_t v25 = vceqzq_s8(v24);
  int8x16_t v26 = vclsq_s8(v24);
  v27.i64[0] = 0x808080808080808;
  v27.i64[1] = 0x808080808080808;
  int8x16_t v28 = vbicq_s8(vsubq_s8(v27, v26), v25);
  int8x16_t v29 = vqtbl1q_s8(vmaxq_s8(v8, v9), (int8x16_t)xmmword_242EA7560);
  int8x16_t v30 = vqtbl1q_s8(vminq_s8(v8, v9), (int8x16_t)xmmword_242EA7560);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  int8x16_t v33 = vpmaxq_s8(v31, v31);
  int8x16_t v34 = vpminq_s8(v32, v32);
  int8x16_t v35 = vmaxq_s8(v21, v33);
  int8x16_t v36 = vminq_s8(v23, v34);
  int8x16_t v37 = vzip1q_s8(v33, v34);
  int8x16_t v38 = vbicq_s8(vsubq_s8(v27, vclsq_s8(v37)), vceqzq_s8(v37));
  int8x16_t v39 = vqtbl1q_s8(vmaxq_s8(v10, v11), (int8x16_t)xmmword_242EA7560);
  int8x16_t v40 = vqtbl1q_s8(vminq_s8(v10, v11), (int8x16_t)xmmword_242EA7560);
  int8x16_t v41 = vpmaxq_s8(v39, v39);
  int8x16_t v42 = vpminq_s8(v40, v40);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vmaxq_s8(v35, v43);
  int8x16_t v46 = vminq_s8(v36, v44);
  int8x16_t v47 = vzip1q_s8(v43, v44);
  int8x16_t v48 = vbicq_s8(vsubq_s8(v27, vclsq_s8(v47)), vceqzq_s8(v47));
  int8x16_t v49 = vqtbl1q_s8(vmaxq_s8(v12, v13), (int8x16_t)xmmword_242EA7560);
  int8x16_t v50 = vqtbl1q_s8(vminq_s8(v12, v13), (int8x16_t)xmmword_242EA7560);
  int8x16_t v51 = vpmaxq_s8(v49, v49);
  int8x16_t v52 = vpminq_s8(v50, v50);
  int8x16_t v53 = vpmaxq_s8(v51, v51);
  int8x16_t v54 = vpminq_s8(v52, v52);
  int8x16_t v55 = vmaxq_s8(v45, v53);
  int8x16_t v56 = vminq_s8(v46, v54);
  int8x16_t v57 = vzip1q_s8(v53, v54);
  int8x16_t v58 = vbicq_s8(vsubq_s8(v27, vclsq_s8(v57)), vceqzq_s8(v57));
  int8x16_t v59 = vpmaxq_s8(v28, v28);
  int8x16_t v60 = vpmaxq_s8(v38, v38);
  int8x16_t v61 = vpmaxq_s8(v48, v48);
  int8x16_t v62 = vpmaxq_s8(v58, v58);
  int8x16_t v63 = vmaxq_s8(vmaxq_s8(v59, v60), vmaxq_s8(v61, v62));
  int8x16_t v64 = vclzq_s8(vsubq_s8(v55, v56));
  v54.i64[0] = 0x707070707070707;
  v54.i64[1] = 0x707070707070707;
  v65.i64[0] = -1;
  v65.i64[1] = -1;
  int8x16_t v66 = vshlq_s8(v65, vsubq_s8(v54, v64));
  int8x16_t v67 = vsubq_s8(v27, v64);
  int8x16_t v68 = vcgtq_s8(v63, v67);
  int8x16_t v69 = vbslq_s8(v68, v67, v63);
  int8x16_t v70 = vandq_s8(vsubq_s8(v66, v56), v68);
  v71.i64[0] = 0x303030303030303;
  v71.i64[1] = 0x303030303030303;
  int8x16_t v72 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v59), v71), (int8x16_t)0);
  int8x16_t v73 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v60), v71), (int8x16_t)0);
  int8x16_t v74 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v61), v71), (int8x16_t)0);
  int8x16_t v75 = vmaxq_s8(vminq_s8(vsubq_s8(v69, v62), v71), (int8x16_t)0);
  v66.i64[0] = 0x404040404040404;
  v66.i64[1] = 0x404040404040404;
  int8x16_t v76 = vorrq_s8(vbicq_s8(v66, vceqq_s8(vaddq_s8(v75, v74), vnegq_s8(vaddq_s8(v72, v73)))), vorrq_s8(vandq_s8(vceqzq_s8(v69), v71), vandq_s8(v68, v27)));
  int8x16_t v449 = v7;
  int8x16_t v453 = v8;
  int8x16_t v454 = v9;
  int8x16_t v455 = v10;
  int8x16_t v456 = v11;
  int8x16_t v457 = v12;
  int8x16_t v458 = v13;
  int8x16_t v465 = v69;
  int8x16_t v466 = v56;
  int8x16_t v467 = v55;
  int8x16_t v468 = v70;
  int8x16_t v77 = vsubq_s8(v69, v72);
  int8x16_t v78 = vsubq_s8(v69, v73);
  int8x16_t v461 = v77;
  int8x16_t v462 = v78;
  int8x16_t v79 = vsubq_s8(v69, v74);
  int8x16_t v80 = vsubq_s8(v69, v75);
  int8x16_t v463 = v79;
  int8x16_t v464 = v80;
  int8x16_t v459 = v6;
  int8x16_t v460 = v76;
  if (vmaxvq_s8(v69))
  {
    int8x16_t v427 = v11;
    int8x16_t v439 = v70;
    int8x16_t v442 = v5;
    int8x16_t v431 = vsubq_s8(v7, vqtbl1q_s8(v7, (int8x16_t)xmmword_242EA7600));
    int8x16_t v429 = vsubq_s8(v8, vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA7600));
    int8x16_t v430 = vsubq_s8(v451, vqtbl1q_s8(v451, (int8x16_t)xmmword_242EA7600));
    int8x16_t v81 = vqtbl1q_s8(vmaxq_s8(v431, v430), (int8x16_t)xmmword_242EA7560);
    int8x16_t v82 = vqtbl1q_s8(vminq_s8(v431, v430), (int8x16_t)xmmword_242EA7560);
    int8x16_t v83 = vpmaxq_s8(v81, v81);
    int8x16_t v84 = vpminq_s8(v82, v82);
    int8x16_t v85 = vpmaxq_s8(v83, v83);
    int8x16_t v86 = vpminq_s8(v84, v84);
    v87.i64[0] = 0x8080808080808080;
    v87.i64[1] = 0x8080808080808080;
    int8x16_t v88 = vmaxq_s8(v85, v87);
    int8x16_t v89 = vminq_s8(v86, v22);
    int8x16_t v90 = vzip1q_s8(v85, v86);
    int8x16_t v91 = vbicq_s8(vsubq_s8(v27, vclsq_s8(v90)), vceqzq_s8(v90));
    int8x16_t v92 = vpmaxq_s8(v91, v91);
    int8x16_t v428 = vsubq_s8(v454, vqtbl1q_s8(v454, (int8x16_t)xmmword_242EA7600));
    int8x16_t v93 = vqtbl1q_s8(vmaxq_s8(v429, v428), (int8x16_t)xmmword_242EA7560);
    int8x16_t v94 = vqtbl1q_s8(vminq_s8(v429, v428), (int8x16_t)xmmword_242EA7560);
    int8x16_t v95 = vpmaxq_s8(v93, v93);
    int8x16_t v96 = vpminq_s8(v94, v94);
    int8x16_t v97 = vpmaxq_s8(v95, v95);
    int8x16_t v98 = vpminq_s8(v96, v96);
    int8x16_t v99 = vmaxq_s8(v88, v97);
    int8x16_t v100 = vminq_s8(v89, v98);
    int8x16_t v101 = vzip1q_s8(v97, v98);
    int8x16_t v102 = vbicq_s8(vsubq_s8(v27, vclsq_s8(v101)), vceqzq_s8(v101));
    int8x16_t v103 = vpmaxq_s8(v102, v102);
    int8x16_t v432 = vsubq_s8(v10, vqtbl1q_s8(v10, (int8x16_t)xmmword_242EA7600));
    int8x16_t v433 = vsubq_s8(v456, vqtbl1q_s8(v456, (int8x16_t)xmmword_242EA7600));
    int8x16_t v104 = vqtbl1q_s8(vmaxq_s8(v432, v433), (int8x16_t)xmmword_242EA7560);
    int8x16_t v105 = vqtbl1q_s8(vminq_s8(v432, v433), (int8x16_t)xmmword_242EA7560);
    int8x16_t v106 = vpmaxq_s8(v104, v104);
    int8x16_t v107 = vpminq_s8(v105, v105);
    int8x16_t v108 = vpmaxq_s8(v106, v106);
    int8x16_t v109 = vpminq_s8(v107, v107);
    int8x16_t v110 = vmaxq_s8(v99, v108);
    int8x16_t v111 = vminq_s8(v100, v109);
    int8x16_t v112 = vzip1q_s8(v108, v109);
    int8x16_t v113 = vbicq_s8(vsubq_s8(v27, vclsq_s8(v112)), vceqzq_s8(v112));
    int8x16_t v114 = vpmaxq_s8(v113, v113);
    int8x16_t v435 = vsubq_s8(v12, vqtbl1q_s8(v12, (int8x16_t)xmmword_242EA7600));
    int8x16_t v437 = vsubq_s8(v458, vqtbl1q_s8(v458, (int8x16_t)xmmword_242EA7600));
    int8x16_t v115 = vqtbl1q_s8(vmaxq_s8(v435, v437), (int8x16_t)xmmword_242EA7560);
    int8x16_t v116 = vqtbl1q_s8(vminq_s8(v435, v437), (int8x16_t)xmmword_242EA7560);
    int8x16_t v117 = vpmaxq_s8(v115, v115);
    int8x16_t v118 = vpminq_s8(v116, v116);
    int8x16_t v119 = vpmaxq_s8(v117, v117);
    int8x16_t v120 = vpminq_s8(v118, v118);
    int8x16_t v121 = vmaxq_s8(v110, v119);
    int8x16_t v122 = vminq_s8(v111, v120);
    int8x16_t v123 = vzip1q_s8(v119, v120);
    int8x16_t v124 = vbicq_s8(vsubq_s8(v27, vclsq_s8(v123)), vceqzq_s8(v123));
    int8x16_t v125 = vpmaxq_s8(v124, v124);
    int8x16_t v126 = vmaxq_s8(vmaxq_s8(v92, v103), vmaxq_s8(v114, v125));
    int8x16_t v127 = vclzq_s8(vsubq_s8(v121, v122));
    int8x16_t v128 = vsubq_s8(v27, v127);
    int8x16_t v129 = vcgtq_s8(v126, v128);
    int8x16_t v130 = vbslq_s8(v129, v128, v126);
    v126.i64[0] = 0x1010101010101010;
    v126.i64[1] = 0x1010101010101010;
    v131.i64[0] = 0x1818181818181818;
    v131.i64[1] = 0x1818181818181818;
    int8x16_t v132 = vorrq_s8(vandq_s8(vceqzq_s8(v130), v71), vbslq_s8(v129, v131, v126));
    int8x16_t v133 = vmaxq_s8(vminq_s8(vsubq_s8(v130, v92), v71), (int8x16_t)0);
    int16x8_t v134 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v130, v103), v71), (int8x16_t)0);
    int8x16_t v135 = vmaxq_s8(vminq_s8(vsubq_s8(v130, v114), v71), (int8x16_t)0);
    int8x16_t v136 = vmaxq_s8(vminq_s8(vsubq_s8(v130, v125), v71), (int8x16_t)0);
    int8x16_t v137 = vsubq_s8(v130, v133);
    int8x16_t v138 = vsubq_s8(v130, (int8x16_t)v134);
    int8x16_t v139 = vsubq_s8(v130, v135);
    int8x16_t v140 = vsubq_s8(v130, v136);
    int8x16_t v141 = vceqq_s8(vaddq_s8(v136, v135), vnegq_s8(vaddq_s8(v133, (int8x16_t)v134)));
    v135.i64[0] = 0x404040404040404;
    v135.i64[1] = 0x404040404040404;
    int8x16_t v142 = vorrq_s8(v132, vbicq_s8(v135, v141));
    uint16x8_t v143 = vmovl_u8(*(uint8x8_t *)v142.i8);
    v135.i64[0] = 0x8000800080008;
    v135.i64[1] = 0x8000800080008;
    v134.i64[0] = 0x2000200020002;
    v134.i64[1] = 0x2000200020002;
    int8x16_t v144 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v79.i8, *(int8x8_t *)v78.i8), *(int8x8_t *)v80.i8), 3uLL), *(int8x8_t *)v77.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v69.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v76.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v76.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v76.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v134), v135)), vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v139.i8, *(int8x8_t *)v138.i8), *(int8x8_t *)v140.i8),
                                                                      3uLL),
                                                                    *(int8x8_t *)v137.i8,
                                                                    (int8x8_t)0x707070707070707),
                                                                  (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v142.i8, 1uLL), v135)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v130.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v143 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v143 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), v134), v135)))), 0);
    if (vaddlvq_s8(v144))
    {
      int8x16_t v449 = vbslq_s8(v144, v431, v7);
      int8x16_t v451 = vbslq_s8(v144, v430, v451);
      v145.i64[0] = 0x707070707070707;
      v145.i64[1] = 0x707070707070707;
      int8x16_t v453 = vbslq_s8(v144, v429, v8);
      int8x16_t v454 = vbslq_s8(v144, v428, v9);
      v146.i64[0] = -1;
      v146.i64[1] = -1;
      int8x16_t v455 = vbslq_s8(v144, v432, v10);
      int8x16_t v456 = vbslq_s8(v144, v433, v427);
      int8x16_t v457 = vbslq_s8(v144, v435, v12);
      int8x16_t v458 = vbslq_s8(v144, v437, v13);
      int8x16_t v461 = vbslq_s8(v144, v137, v77);
      int8x16_t v462 = vbslq_s8(v144, v138, v78);
      int8x16_t v463 = vbslq_s8(v144, v139, v79);
      int8x16_t v464 = vbslq_s8(v144, v140, v80);
      int8x16_t v467 = vbslq_s8(v144, v121, v55);
      int8x16_t v468 = vbslq_s8(v144, vandq_s8(vsubq_s8(vshlq_s8(v146, vsubq_s8(v145, v127)), v122), v129), v439);
      int8x16_t v465 = vbslq_s8(v144, v130, v69);
      int8x16_t v466 = vbslq_s8(v144, v122, v56);
      int8x16_t v459 = vbslq_s8(v144, vsubq_s8(v6, vqtbl1q_s8(v6, (int8x16_t)xmmword_242EA7600)), v6);
      int8x16_t v460 = vbslq_s8(v144, v142, v76);
    }
    if (a5 > 1)
    {
      int8x16_t v172 = vsubq_s8(v445.val[0], vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7570));
      int8x16_t v164 = vsubq_s8(v445.val[1], vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7620));
      v470.val[0] = v446;
      v470.val[1] = v443;
      v470.val[1].i32[3] = v445.val[1].i32[3];
      int8x16_t v165 = vsubq_s8(v446, vqtbl2q_s8(v470, (int8x16_t)xmmword_242EA7590));
      int8x16_t v166 = vsubq_s8(v443, vqtbl2q_s8(v470, (int8x16_t)xmmword_242EA7630));
      v470.val[0] = v447;
      v470.val[1] = v442;
      v470.val[1].i32[3] = v445.val[1].i32[3];
      int8x16_t v167 = vsubq_s8(v447, vqtbl2q_s8(v470, (int8x16_t)xmmword_242EA7640));
      int8x16_t v168 = vsubq_s8(v442, vqtbl2q_s8(v470, (int8x16_t)xmmword_242EA7570));
      v469.val[0] = v448;
      v469.val[1] = v444;
      v469.val[1].i32[3] = v445.val[1].i32[3];
      int8x16_t v169 = vsubq_s8(v448, vqtbl2q_s8(v469, (int8x16_t)xmmword_242EA7650));
      int8x16_t v170 = vsubq_s8(v444, vqtbl2q_s8(v469, (int8x16_t)xmmword_242EA7570));
      int8x16_t v171 = v164;
      v171.i32[3] = v172.i32[0];
      v172.i32[0] = v164.i32[3];
      int8x16_t v173 = vqtbl1q_s8(vmaxq_s8(v172, v171), (int8x16_t)xmmword_242EA7560);
      int8x16_t v174 = vqtbl1q_s8(vminq_s8(v172, v171), (int8x16_t)xmmword_242EA7560);
      int8x16_t v175 = vpmaxq_s8(v173, v173);
      int8x16_t v176 = vpminq_s8(v174, v174);
      int8x16_t v177 = vpmaxq_s8(v175, v175);
      int8x16_t v178 = vpminq_s8(v176, v176);
      v469.val[0].i64[0] = 0x8080808080808080;
      v469.val[0].i64[1] = 0x8080808080808080;
      v469.val[1].i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v469.val[1].i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v469.val[1] = vminq_s8(v178, v469.val[1]);
      int8x16_t v179 = vzip1q_s8(v177, v178);
      v470.val[1].i64[0] = 0x808080808080808;
      v470.val[1].i64[1] = 0x808080808080808;
      int8x16_t v180 = vbicq_s8(vsubq_s8(v470.val[1], vclsq_s8(v179)), vceqzq_s8(v179));
      v470.val[0] = vpmaxq_s8(v180, v180);
      int8x16_t v181 = vqtbl1q_s8(vmaxq_s8(v165, v166), (int8x16_t)xmmword_242EA7560);
      int8x16_t v182 = vqtbl1q_s8(vminq_s8(v165, v166), (int8x16_t)xmmword_242EA7560);
      int8x16_t v183 = vpmaxq_s8(v181, v181);
      int8x16_t v184 = vpminq_s8(v182, v182);
      int8x16_t v185 = vpmaxq_s8(v183, v183);
      int8x16_t v186 = vpminq_s8(v184, v184);
      v469.val[0] = vmaxq_s8(vmaxq_s8(v177, v469.val[0]), v185);
      v469.val[1] = vminq_s8(v469.val[1], v186);
      int8x16_t v187 = vzip1q_s8(v185, v186);
      int8x16_t v188 = vbicq_s8(vsubq_s8(v470.val[1], vclsq_s8(v187)), vceqzq_s8(v187));
      int8x16_t v189 = vpmaxq_s8(v188, v188);
      int8x16_t v440 = v168;
      int8x16_t v441 = v167;
      int8x16_t v190 = vqtbl1q_s8(vmaxq_s8(v167, v168), (int8x16_t)xmmword_242EA7560);
      int8x16_t v191 = vqtbl1q_s8(vminq_s8(v167, v168), (int8x16_t)xmmword_242EA7560);
      int8x16_t v192 = vpmaxq_s8(v190, v190);
      int8x16_t v193 = vpminq_s8(v191, v191);
      int8x16_t v194 = vpmaxq_s8(v192, v192);
      int8x16_t v195 = vpminq_s8(v193, v193);
      v469.val[0] = vmaxq_s8(v469.val[0], v194);
      v469.val[1] = vminq_s8(v469.val[1], v195);
      int8x16_t v196 = vzip1q_s8(v194, v195);
      int8x16_t v197 = vbicq_s8(vsubq_s8(v470.val[1], vclsq_s8(v196)), vceqzq_s8(v196));
      int8x16_t v198 = vpmaxq_s8(v197, v197);
      int8x16_t v199 = vqtbl1q_s8(vmaxq_s8(v169, v170), (int8x16_t)xmmword_242EA7560);
      int8x16_t v200 = vqtbl1q_s8(vminq_s8(v169, v170), (int8x16_t)xmmword_242EA7560);
      int8x16_t v201 = vpmaxq_s8(v199, v199);
      int8x16_t v202 = vpminq_s8(v200, v200);
      int8x16_t v203 = vpmaxq_s8(v201, v201);
      int8x16_t v204 = vpminq_s8(v202, v202);
      int8x16_t v205 = vmaxq_s8(v469.val[0], v203);
      int8x16_t v206 = vminq_s8(v469.val[1], v204);
      v469.val[1] = vzip1q_s8(v203, v204);
      v469.val[1] = vbicq_s8(vsubq_s8(v470.val[1], vclsq_s8(v469.val[1])), vceqzq_s8(v469.val[1]));
      int8x16_t v207 = vpmaxq_s8(v469.val[1], v469.val[1]);
      v469.val[1] = vmaxq_s8(vmaxq_s8(v470.val[0], v189), vmaxq_s8(v198, v207));
      int8x16_t v208 = vclzq_s8(vsubq_s8(v205, v206));
      v470.val[1] = vsubq_s8(v470.val[1], v208);
      int8x16_t v209 = vcgtq_s8(v469.val[1], v470.val[1]);
      int8x16_t v210 = vbslq_s8(v209, v470.val[1], v469.val[1]);
      v470.val[1].i64[0] = 0x909090909090909;
      v470.val[1].i64[1] = 0x909090909090909;
      v211.i64[0] = 0x202020202020202;
      v211.i64[1] = 0x202020202020202;
      v212.i64[0] = 0x303030303030303;
      v212.i64[1] = 0x303030303030303;
      v470.val[0] = vmaxq_s8(vminq_s8(vsubq_s8(v210, v470.val[0]), v212), (int8x16_t)0);
      int8x16_t v213 = vmaxq_s8(vminq_s8(vsubq_s8(v210, v189), v212), (int8x16_t)0);
      int16x8_t v214 = (int16x8_t)vmaxq_s8(vminq_s8(vsubq_s8(v210, v198), v212), (int8x16_t)0);
      int8x16_t v215 = vmaxq_s8(vminq_s8(vsubq_s8(v210, v207), v212), (int8x16_t)0);
      int8x16_t v216 = vsubq_s8(v210, v470.val[0]);
      int8x16_t v217 = vsubq_s8(v210, (int8x16_t)v214);
      int8x16_t v218 = vsubq_s8(v210, v215);
      int8x16_t v219 = vceqq_s8(vaddq_s8(v215, (int8x16_t)v214), vnegq_s8(vaddq_s8(v470.val[0], v213)));
      v470.val[0].i64[0] = 0x404040404040404;
      v470.val[0].i64[1] = 0x404040404040404;
      int8x16_t v220 = vorrq_s8(vorrq_s8(vandq_s8(vceqzq_s8(v210), v211), vsubq_s8(vandq_s8(v209, v470.val[1]), vmvnq_s8(v209))), vbicq_s8(v470.val[0], v219));
      int8x16_t v436 = vsubq_s8(v210, v213);
      int8x16_t v438 = v216;
      v214.i64[0] = 0x3000300030003;
      v214.i64[1] = 0x3000300030003;
      int16x8_t v221 = vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v217.i8, *(int8x8_t *)v436.i8), *(int8x8_t *)v218.i8), 3uLL), *(int8x8_t *)v216.i8, (int8x8_t)0x707070707070707), (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v220.i8, *(int8x8_t *)v220.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v210.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v220.i8)));
      v160.i64[0] = v460.i64[0];
      int8x16_t v161 = v461;
      v470.val[0] = (int8x16_t)vmovl_s8(*(int8x8_t *)v460.i8);
      v213.i64[0] = 0x8000800080008;
      v213.i64[1] = 0x8000800080008;
      int8x16_t v150 = v464;
      int8x16_t v149 = v465;
      int16x8_t v222 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v465.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v470.val[0], v213)));
      v470.val[0] = vandq_s8(v470.val[0], (int8x16_t)v214);
      v214.i64[0] = 0x2000200020002;
      v214.i64[1] = 0x2000200020002;
      int8x16_t v147 = v462;
      int8x16_t v148 = v463;
      int8x16_t v223 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v222, (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v460.i8, 1uLL), v213)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)v470.val[0], v214), v213)), *(int8x8_t *)v461.i8, (int8x8_t)0x707070707070707), vshll_n_s8(
                                                                  vadd_s8(vadd_s8(*(int8x8_t *)v463.i8, *(int8x8_t *)v462.i8), *(int8x8_t *)v464.i8), 3uLL)), v221)), 0);
      int8x16_t v151 = v468;
      int8x16_t v152 = v449;
      int8x16_t v153 = v451;
      int8x16_t v155 = v453;
      int8x16_t v154 = v454;
      int8x16_t v157 = v455;
      int8x16_t v156 = v456;
      int8x16_t v159 = v457;
      int8x16_t v158 = v458;
      if (vaddlvq_s8(v223))
      {
        int8x16_t v434 = v218;
        int8x16_t v224 = v170;
        int8x16_t v225 = v169;
        int8x16_t v226 = v165;
        v227.i64[0] = 0x707070707070707;
        v227.i64[1] = 0x707070707070707;
        int8x16_t v228 = vsubq_s8(v227, v208);
        v229.i64[0] = -1;
        v229.i64[1] = -1;
        int8x16_t v152 = vbslq_s8(v223, v172, v449);
        int8x16_t v153 = vbslq_s8(v223, v171, v451);
        int8x16_t v155 = vbslq_s8(v223, v226, v453);
        int8x16_t v154 = vbslq_s8(v223, v166, v454);
        int8x16_t v157 = vbslq_s8(v223, v441, v455);
        int8x16_t v156 = vbslq_s8(v223, v440, v456);
        int8x16_t v159 = vbslq_s8(v223, v225, v457);
        int8x16_t v158 = vbslq_s8(v223, v224, v458);
        int8x16_t v161 = vbslq_s8(v223, v438, v461);
        int8x16_t v147 = vbslq_s8(v223, v436, v462);
        int8x16_t v148 = vbslq_s8(v223, v217, v463);
        int8x16_t v150 = vbslq_s8(v223, v434, v464);
        int8x16_t v151 = vbslq_s8(v223, vandq_s8(vsubq_s8(vshlq_s8(v229, v228), v206), v209), v468);
        int8x16_t v149 = vbslq_s8(v223, v210, v465);
        int8x16_t v160 = vbslq_s8(v223, v220, v460);
        int8x16_t v459 = vbslq_s8(v223, vextq_s8(v445.val[1], v445.val[1], 0xCuLL), v459);
        int8x16_t v460 = v160;
        int8x16_t v466 = vbslq_s8(v223, v206, v466);
        int8x16_t v467 = vbslq_s8(v223, v205, v467);
        int8x16_t v461 = v161;
        int8x16_t v462 = v147;
        int8x16_t v463 = v148;
        int8x16_t v464 = v150;
        int8x16_t v468 = v151;
        int8x16_t v465 = v149;
      }
    }
    else
    {
      int8x16_t v147 = v462;
      int8x16_t v148 = v463;
      int8x16_t v150 = v464;
      int8x16_t v149 = v465;
      int8x16_t v151 = v468;
      int8x16_t v152 = v449;
      int8x16_t v153 = v451;
      int8x16_t v155 = v453;
      int8x16_t v154 = v454;
      int8x16_t v157 = v455;
      int8x16_t v156 = v456;
      int8x16_t v159 = v457;
      int8x16_t v158 = v458;
      v160.i64[0] = v460.i64[0];
      int8x16_t v161 = v461;
    }
    int8x16_t v230 = vandq_s8(v151, vceqq_s8(v149, v161));
    int8x16_t v450 = vaddq_s8(v230, v152);
    int8x16_t v452 = vaddq_s8(v153, v230);
    int8x16_t v231 = vandq_s8(v151, vceqq_s8(v149, v147));
    int8x16_t v453 = vaddq_s8(v155, v231);
    int8x16_t v454 = vaddq_s8(v154, v231);
    int8x16_t v232 = vandq_s8(v151, vceqq_s8(v149, v148));
    int8x16_t v455 = vaddq_s8(v157, v232);
    int8x16_t v456 = vaddq_s8(v156, v232);
    int8x16_t v233 = vandq_s8(v151, vceqq_s8(v149, v150));
    int8x16_t v457 = vaddq_s8(v159, v233);
    int8x16_t v458 = vaddq_s8(v158, v233);
    int8x16_t v234 = (int8x16_t)vmovl_s8(*(int8x8_t *)v160.i8);
    v235.i64[0] = 0x8000800080008;
    v235.i64[1] = 0x8000800080008;
    int16x8_t v236 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v149.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v234, v235)));
    v237.i64[0] = 0x3000300030003;
    v237.i64[1] = 0x3000300030003;
    int16x8_t v238 = (int16x8_t)vandq_s8(v234, v237);
    v237.i64[0] = 0x2000200020002;
    v237.i64[1] = 0x2000200020002;
    int16x8_t v239 = vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v148.i8, *(int8x8_t *)v147.i8), *(int8x8_t *)v150.i8), 3uLL), *(int8x8_t *)v161.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v238, (int16x8_t)v237), v235)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v160.i8, 1uLL), v235), v236));
    int16x8_t v240 = vpaddq_s16(v239, v239);
    if ((unint64_t)(vpaddq_s16(v240, v240).i16[0] + 71) > 0x3FF)
    {
      *(int8x16_t *)a1 = v445.val[0];
      *(int8x16_t *)(a1 + 16) = v445.val[1];
      *(int8x16_t *)(a1 + 32) = v446;
      *(int8x16_t *)(a1 + 48) = v443;
      *(int8x16_t *)(a1 + 64) = v447;
      *(int8x16_t *)(a1 + 80) = v442;
      int8x16_t v244 = (int8x16_t *)(a1 + 96);
      char v162 = 127;
      unint64_t result = 128;
      *int8x16_t v244 = v448;
      v244[1] = v444;
    }
    else
    {
      int16x8_t v241 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v242 = 8 * (a1 & 7);
      if (v242) {
        uint64_t v243 = *v241 & ~(-1 << v242);
      }
      else {
        uint64_t v243 = 0;
      }
      *a2 = 0;
      __int32 v245 = v459.i32[0];
      int16x4_t v246 = (int16x4_t)vzip1_s8(*(int8x8_t *)v149.i8, *(int8x8_t *)v459.i8);
      int8x8_t v247 = (int8x8_t)vadd_s16(v246, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v248 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v246 & 0xFF00FF00FF00FFLL)));
      v249.i64[0] = v248.u32[0];
      v249.i64[1] = v248.u32[1];
      int8x16_t v250 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v249, 0x38uLL), 0x38uLL);
      v249.i64[0] = v248.u32[2];
      v249.i64[1] = v248.u32[3];
      int8x16_t v251 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v249, 0x38uLL), 0x38uLL);
      uint32x4_t v252 = vmovl_u16((uint16x4_t)vand_s8(v247, (int8x8_t)0x7000700070007));
      v249.i64[0] = v252.u32[2];
      v249.i64[1] = v252.u32[3];
      v253.i64[0] = 255;
      v253.i64[1] = 255;
      uint64x2_t v254 = (uint64x2_t)vandq_s8((int8x16_t)v249, v253);
      v249.i64[0] = v252.u32[0];
      v249.i64[1] = v252.u32[1];
      int8x16_t v255 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v249, v253), (uint64x2_t)xmmword_242EA7660), v250), vbicq_s8((int8x16_t)vshlq_u64(v254, (uint64x2_t)xmmword_242EA7670), v251));
      *(int8x8_t *)v255.i8 = vorr_s8(*(int8x8_t *)v255.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v255, v255, 8uLL));
      v249.i64[0] = v160.u8[1];
      v249.i64[1] = v160.u8[2];
      v255.i64[1] = (unint64_t)(v160.i8[3] & 0x1F) << 15;
      int64x2_t v256 = (int64x2_t)vorrq_s8(v255, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v249, v253), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v257 = vorrq_s8((int8x16_t)v256, (int8x16_t)vdupq_laneq_s64(v256, 1)).u64[0] | v160.i8[0] & 0x1F;
      unint64_t v258 = v243 | (v257 << v242);
      if (v242 >= 0x20)
      {
        *int16x8_t v241 = v258;
        unint64_t v258 = v257 >> (-8 * (a1 & 7u));
      }
      uint64_t v259 = (unsigned __int16)v245;
      v260.i64[0] = BYTE2(v245);
      v260.i64[1] = HIBYTE(v245);
      uint64x2_t v261 = vshlq_u64((uint64x2_t)vandq_s8(v260, v253), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v262 = v259 | v261.i64[0] | v261.i64[1];
      unint64_t v263 = (v242 + 32) & 0x38;
      unint64_t v264 = v258 | (v262 << v263);
      if (v263 >= 0x20)
      {
        *(void *)((char *)v241 + (((v242 + 32) >> 3) & 8)) = v264;
        unint64_t v264 = v262 >> -(char)v263;
      }
      int8x16_t v265 = vsubq_s8(v465, v461);
      int8x16_t v266 = vsubq_s8(v465, v462);
      int8x16_t v267 = vsubq_s8(v465, v463);
      int8x16_t v268 = vsubq_s8(v465, v464);
      int16x8_t v269 = (int16x8_t)vtrn1q_s8(v265, v266);
      int16x8_t v270 = (int16x8_t)vtrn2q_s8(v265, v266);
      int16x8_t v271 = (int16x8_t)vtrn1q_s8(v267, v268);
      int16x8_t v272 = (int16x8_t)vtrn2q_s8(v267, v268);
      int8x16_t v273 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v269, v271), (int32x4_t)vzip1q_s16(v270, v272)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v269, v271), (int32x4_t)vtrn2q_s16(v270, v272)));
      v271.i64[0] = 0x202020202020202;
      v271.i64[1] = 0x202020202020202;
      int8x16_t v274 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v460.i8), (int16x4_t)0x4000400040004)), (int8x16_t)v271);
      v271.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v271.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v267.i64[0] = -1;
      v267.i64[1] = -1;
      uint8x16_t v275 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v267, (uint8x16_t)vorrq_s8(v274, (int8x16_t)v271)), v273);
      int16x8_t v276 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v274.i8);
      int16x8_t v277 = (int16x8_t)vmovl_high_u8((uint8x16_t)v274);
      uint16x8_t v278 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v275.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v276)), (int16x8_t)vshlq_u16(vmovl_high_u8(v275), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v277)));
      uint16x8_t v279 = (uint16x8_t)vpaddq_s16(v276, v277);
      int32x4_t v280 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v279.i8);
      int32x4_t v281 = (int32x4_t)vmovl_high_u16(v279);
      int32x4_t v282 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v278.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v280)), (int32x4_t)vshlq_u32(vmovl_high_u16(v278), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v281)));
      int32x4_t v283 = vpaddq_s32(v280, v281);
      v284.i64[0] = v282.u32[0];
      v284.i64[1] = v282.u32[1];
      uint64x2_t v285 = (uint64x2_t)v284;
      v284.i64[0] = v282.u32[2];
      v284.i64[1] = v282.u32[3];
      uint64x2_t v286 = (uint64x2_t)v284;
      v284.i64[0] = v283.u32[0];
      v284.i64[1] = v283.u32[1];
      int64x2_t v287 = v284;
      v284.i64[0] = v283.u32[2];
      v284.i64[1] = v283.u32[3];
      int64x2_t v288 = vpaddq_s64((int64x2_t)vshlq_u64(v285, (uint64x2_t)vzip1q_s64((int64x2_t)0, v287)), (int64x2_t)vshlq_u64(v286, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)));
      int64x2_t v289 = vpaddq_s64(v287, v284);
      unint64_t v290 = (v288.i64[0] << v242) | v264;
      if (v289.i64[0] + v242 >= 0x40)
      {
        v241[1] = v290;
        unint64_t v290 = (unint64_t)v288.i64[0] >> (-8 * (a1 & 7u));
        if (!v242) {
          unint64_t v290 = 0;
        }
      }
      unint64_t v291 = v289.i64[0] + (v242 | 0x40);
      unint64_t v292 = v290 | (v288.i64[1] << v291);
      if ((v291 & 0x3F) + v289.i64[1] >= 0x40)
      {
        *(void *)((char *)v241 + ((v291 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v292;
        unint64_t v292 = (unint64_t)v288.i64[1] >> -(v291 & 0x3F);
        if ((v291 & 0x3F) == 0) {
          unint64_t v292 = 0;
        }
      }
      unint64_t v293 = v291 + v289.i64[1];
      v294.i64[0] = 0x808080808080808;
      v294.i64[1] = 0x808080808080808;
      v295.i64[0] = -1;
      v295.i64[1] = -1;
      int8x16_t v296 = vandq_s8(vextq_s8(vtstq_s8(v460, v294), (int8x16_t)0, 0xCuLL), v465);
      v297.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v297.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v298 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v295, (uint8x16_t)vaddq_s8(v296, v297)), v468);
      int16x8_t v299 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v296.i8);
      uint16x8_t v300 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v298.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v299)), (int16x8_t)vmovl_high_u8(v298));
      uint16x8_t v301 = (uint16x8_t)vpaddq_s16(v299, (int16x8_t)vmovl_high_u8((uint8x16_t)v296));
      int32x4_t v302 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v301.i8);
      int32x4_t v303 = (int32x4_t)vmovl_high_u16(v301);
      int32x4_t v304 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v300.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v302)), (int32x4_t)vshlq_u32(vmovl_high_u16(v300), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v303)));
      int32x4_t v305 = vpaddq_s32(v302, v303);
      v306.i64[0] = v304.u32[0];
      v306.i64[1] = v304.u32[1];
      uint64x2_t v307 = (uint64x2_t)v306;
      v306.i64[0] = v304.u32[2];
      v306.i64[1] = v304.u32[3];
      uint64x2_t v308 = (uint64x2_t)v306;
      v306.i64[0] = v305.u32[0];
      v306.i64[1] = v305.u32[1];
      int64x2_t v309 = v306;
      v306.i64[0] = v305.u32[2];
      v306.i64[1] = v305.u32[3];
      int64x2_t v310 = vpaddq_s64((int64x2_t)vshlq_u64(v307, (uint64x2_t)vzip1q_s64((int64x2_t)0, v309)), (int64x2_t)vshlq_u64(v308, (uint64x2_t)vzip1q_s64((int64x2_t)0, v306)));
      int64x2_t v311 = vpaddq_s64(v309, v306);
      unint64_t v312 = (v310.i64[0] << v293) | v292;
      if (v311.i64[0] + (v293 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v241 + ((v293 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v312;
        unint64_t v312 = (unint64_t)v310.i64[0] >> -(v293 & 0x3F);
        if ((v293 & 0x3F) == 0) {
          unint64_t v312 = 0;
        }
      }
      unint64_t v313 = v311.i64[0] + v293;
      unint64_t v314 = v312 | (v310.i64[1] << v313);
      if ((v313 & 0x3F) + v311.i64[1] >= 0x40)
      {
        *(void *)((char *)v241 + ((v313 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v314;
        unint64_t v314 = (unint64_t)v310.i64[1] >> -(v313 & 0x3F);
        if ((v313 & 0x3F) == 0) {
          unint64_t v314 = 0;
        }
      }
      unint64_t v315 = v313 + v311.i64[1];
      int8x16_t v316 = vextq_s8((int8x16_t)0, v461, 0xCuLL);
      v317.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v317.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v318.i64[0] = -1;
      v318.i64[1] = -1;
      uint8x16_t v319 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v318, (uint8x16_t)vaddq_s8(v316, v317)), v450);
      int16x8_t v320 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v316.i8);
      int16x8_t v321 = (int16x8_t)vmovl_high_u8((uint8x16_t)v316);
      uint16x8_t v322 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v319.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v320)), (int16x8_t)vshlq_u16(vmovl_high_u8(v319), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v321)));
      uint16x8_t v323 = (uint16x8_t)vpaddq_s16(v320, v321);
      int32x4_t v324 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v323.i8);
      int32x4_t v325 = (int32x4_t)vmovl_high_u16(v323);
      int32x4_t v326 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v322.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v324)), (int32x4_t)vshlq_u32(vmovl_high_u16(v322), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v325)));
      int32x4_t v327 = vpaddq_s32(v324, v325);
      v328.i64[0] = v326.u32[0];
      v328.i64[1] = v326.u32[1];
      uint64x2_t v329 = (uint64x2_t)v328;
      v328.i64[0] = v326.u32[2];
      v328.i64[1] = v326.u32[3];
      uint64x2_t v330 = (uint64x2_t)v328;
      v328.i64[0] = v327.u32[0];
      v328.i64[1] = v327.u32[1];
      int64x2_t v331 = v328;
      v328.i64[0] = v327.u32[2];
      v328.i64[1] = v327.u32[3];
      int64x2_t v332 = vpaddq_s64((int64x2_t)vshlq_u64(v329, (uint64x2_t)vzip1q_s64((int64x2_t)0, v331)), (int64x2_t)vshlq_u64(v330, (uint64x2_t)vzip1q_s64((int64x2_t)0, v328)));
      int64x2_t v333 = vpaddq_s64(v331, v328);
      unint64_t v334 = (v332.i64[0] << v315) | v314;
      if (v333.i64[0] + (v315 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v241 + ((v315 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v334;
        unint64_t v334 = (unint64_t)v332.i64[0] >> -(v315 & 0x3F);
        if ((v315 & 0x3F) == 0) {
          unint64_t v334 = 0;
        }
      }
      unint64_t v335 = v333.i64[0] + v315;
      unint64_t v336 = v334 | (v332.i64[1] << v335);
      if ((v335 & 0x3F) + v333.i64[1] >= 0x40)
      {
        *(void *)((char *)v241 + ((v335 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v336;
        unint64_t v336 = (unint64_t)v332.i64[1] >> -(v335 & 0x3F);
        if ((v335 & 0x3F) == 0) {
          unint64_t v336 = 0;
        }
      }
      unint64_t v337 = v335 + v333.i64[1];
      v338.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v338.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v339.i64[0] = -1;
      v339.i64[1] = -1;
      uint8x16_t v340 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v339, (uint8x16_t)vaddq_s8(v461, v338)), v452);
      int16x8_t v341 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v461.i8);
      int16x8_t v342 = (int16x8_t)vmovl_high_u8((uint8x16_t)v461);
      uint16x8_t v343 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v340.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v341)), (int16x8_t)vshlq_u16(vmovl_high_u8(v340), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v342)));
      uint16x8_t v344 = (uint16x8_t)vpaddq_s16(v341, v342);
      int32x4_t v345 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v344.i8);
      int32x4_t v346 = (int32x4_t)vmovl_high_u16(v344);
      int32x4_t v347 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v343.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v345)), (int32x4_t)vshlq_u32(vmovl_high_u16(v343), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)));
      int32x4_t v348 = vpaddq_s32(v345, v346);
      v349.i64[0] = v347.u32[0];
      v349.i64[1] = v347.u32[1];
      uint64x2_t v350 = (uint64x2_t)v349;
      v349.i64[0] = v347.u32[2];
      v349.i64[1] = v347.u32[3];
      uint64x2_t v351 = (uint64x2_t)v349;
      v349.i64[0] = v348.u32[0];
      v349.i64[1] = v348.u32[1];
      int64x2_t v352 = v349;
      v349.i64[0] = v348.u32[2];
      v349.i64[1] = v348.u32[3];
      int64x2_t v353 = vpaddq_s64((int64x2_t)vshlq_u64(v350, (uint64x2_t)vzip1q_s64((int64x2_t)0, v352)), (int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)));
      int64x2_t v354 = vpaddq_s64(v352, v349);
      unint64_t v355 = (v353.i64[0] << v337) | v336;
      if (v354.i64[0] + (v337 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v241 + ((v337 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v355;
        if ((v337 & 0x3F) != 0) {
          unint64_t v355 = (unint64_t)v353.i64[0] >> -(v337 & 0x3F);
        }
        else {
          unint64_t v355 = 0;
        }
      }
      uint64_t v356 = v354.i64[1];
      unint64_t v357 = v354.i64[0] + v337;
      uint64_t v358 = (v354.i64[0] + v337) & 0x3F;
      unint64_t v359 = v355 | (v353.i64[1] << v357);
      if ((unint64_t)(v358 + v354.i64[1]) >= 0x40)
      {
        *(void *)((char *)v241 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v359;
        unint64_t v359 = (unint64_t)v353.i64[1] >> -(char)v358;
        if (!v358) {
          unint64_t v359 = 0;
        }
      }
      uint64_t v360 = 0;
      v361.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v361.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v362.i64[0] = -1;
      v362.i64[1] = -1;
      unint64_t v363 = v357 + v356;
      char v364 = 1;
      do
      {
        char v365 = v364;
        uint8x16_t v366 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v362, (uint8x16_t)vaddq_s8(v462, v361)), *(&v453 + v360));
        int16x8_t v367 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v462.i8);
        int16x8_t v368 = (int16x8_t)vmovl_high_u8((uint8x16_t)v462);
        uint16x8_t v369 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v366.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v367)), (int16x8_t)vshlq_u16(vmovl_high_u8(v366), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v368)));
        uint16x8_t v370 = (uint16x8_t)vpaddq_s16(v367, v368);
        int32x4_t v371 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v370.i8);
        int32x4_t v372 = (int32x4_t)vmovl_high_u16(v370);
        int32x4_t v373 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v369.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v371)), (int32x4_t)vshlq_u32(vmovl_high_u16(v369), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v372)));
        int32x4_t v374 = vpaddq_s32(v371, v372);
        v375.i64[0] = v373.u32[0];
        v375.i64[1] = v373.u32[1];
        uint64x2_t v376 = (uint64x2_t)v375;
        v375.i64[0] = v373.u32[2];
        v375.i64[1] = v373.u32[3];
        uint64x2_t v377 = (uint64x2_t)v375;
        v375.i64[0] = v374.u32[0];
        v375.i64[1] = v374.u32[1];
        int64x2_t v378 = v375;
        v375.i64[0] = v374.u32[2];
        v375.i64[1] = v374.u32[3];
        int64x2_t v379 = vpaddq_s64((int64x2_t)vshlq_u64(v376, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)), (int64x2_t)vshlq_u64(v377, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)));
        int64x2_t v380 = vpaddq_s64(v378, v375);
        unint64_t v381 = (v379.i64[0] << v363) | v359;
        if (v380.i64[0] + (v363 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v241 + ((v363 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v381;
          unint64_t v381 = (unint64_t)v379.i64[0] >> -(v363 & 0x3F);
          if ((v363 & 0x3F) == 0) {
            unint64_t v381 = 0;
          }
        }
        unint64_t v382 = v380.i64[0] + v363;
        unint64_t v359 = v381 | (v379.i64[1] << v382);
        if ((v382 & 0x3F) + v380.i64[1] >= 0x40)
        {
          *(void *)((char *)v241 + ((v382 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v359;
          unint64_t v359 = (unint64_t)v379.i64[1] >> -(v382 & 0x3F);
          if ((v382 & 0x3F) == 0) {
            unint64_t v359 = 0;
          }
        }
        char v364 = 0;
        unint64_t v363 = v382 + v380.i64[1];
        uint64_t v360 = 1;
      }
      while ((v365 & 1) != 0);
      uint64_t v383 = 0;
      char v384 = 1;
      v385.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v385.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v386.i64[0] = -1;
      v386.i64[1] = -1;
      do
      {
        char v387 = v384;
        uint8x16_t v388 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v386, (uint8x16_t)vaddq_s8(v463, v385)), *(&v455 + v383));
        int16x8_t v389 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v463.i8);
        int16x8_t v390 = (int16x8_t)vmovl_high_u8((uint8x16_t)v463);
        uint16x8_t v391 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v388.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v389)), (int16x8_t)vshlq_u16(vmovl_high_u8(v388), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v390)));
        uint16x8_t v392 = (uint16x8_t)vpaddq_s16(v389, v390);
        int32x4_t v393 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v392.i8);
        int32x4_t v394 = (int32x4_t)vmovl_high_u16(v392);
        int32x4_t v395 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v391.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v393)), (int32x4_t)vshlq_u32(vmovl_high_u16(v391), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v394)));
        int32x4_t v396 = vpaddq_s32(v393, v394);
        v397.i64[0] = v395.u32[0];
        v397.i64[1] = v395.u32[1];
        uint64x2_t v398 = (uint64x2_t)v397;
        v397.i64[0] = v395.u32[2];
        v397.i64[1] = v395.u32[3];
        uint64x2_t v399 = (uint64x2_t)v397;
        v397.i64[0] = v396.u32[0];
        v397.i64[1] = v396.u32[1];
        int64x2_t v400 = v397;
        v397.i64[0] = v396.u32[2];
        v397.i64[1] = v396.u32[3];
        int64x2_t v401 = vpaddq_s64((int64x2_t)vshlq_u64(v398, (uint64x2_t)vzip1q_s64((int64x2_t)0, v400)), (int64x2_t)vshlq_u64(v399, (uint64x2_t)vzip1q_s64((int64x2_t)0, v397)));
        int64x2_t v402 = vpaddq_s64(v400, v397);
        unint64_t v403 = (v401.i64[0] << v363) | v359;
        if (v402.i64[0] + (v363 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v241 + ((v363 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v403;
          unint64_t v403 = (unint64_t)v401.i64[0] >> -(v363 & 0x3F);
          if ((v363 & 0x3F) == 0) {
            unint64_t v403 = 0;
          }
        }
        unint64_t v404 = v402.i64[0] + v363;
        unint64_t v359 = v403 | (v401.i64[1] << v404);
        if ((v404 & 0x3F) + v402.i64[1] >= 0x40)
        {
          *(void *)((char *)v241 + ((v404 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v359;
          unint64_t v359 = (unint64_t)v401.i64[1] >> -(v404 & 0x3F);
          if ((v404 & 0x3F) == 0) {
            unint64_t v359 = 0;
          }
        }
        char v384 = 0;
        unint64_t v363 = v404 + v402.i64[1];
        uint64_t v383 = 1;
      }
      while ((v387 & 1) != 0);
      uint64_t v405 = 0;
      char v406 = 1;
      v407.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v407.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v408.i64[0] = -1;
      v408.i64[1] = -1;
      do
      {
        char v409 = v406;
        uint8x16_t v410 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v408, (uint8x16_t)vaddq_s8(v464, v407)), *(&v457 + v405));
        int16x8_t v411 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v464.i8);
        int16x8_t v412 = (int16x8_t)vmovl_high_u8((uint8x16_t)v464);
        uint16x8_t v413 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v410.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v411)), (int16x8_t)vshlq_u16(vmovl_high_u8(v410), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v412)));
        uint16x8_t v414 = (uint16x8_t)vpaddq_s16(v411, v412);
        int32x4_t v415 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v414.i8);
        int32x4_t v416 = (int32x4_t)vmovl_high_u16(v414);
        int32x4_t v417 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v413.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v415)), (int32x4_t)vshlq_u32(vmovl_high_u16(v413), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v416)));
        int32x4_t v418 = vpaddq_s32(v415, v416);
        v419.i64[0] = v417.u32[0];
        v419.i64[1] = v417.u32[1];
        uint64x2_t v420 = (uint64x2_t)v419;
        v419.i64[0] = v417.u32[2];
        v419.i64[1] = v417.u32[3];
        uint64x2_t v421 = (uint64x2_t)v419;
        v419.i64[0] = v418.u32[0];
        v419.i64[1] = v418.u32[1];
        int64x2_t v422 = v419;
        v419.i64[0] = v418.u32[2];
        v419.i64[1] = v418.u32[3];
        int64x2_t v423 = vpaddq_s64((int64x2_t)vshlq_u64(v420, (uint64x2_t)vzip1q_s64((int64x2_t)0, v422)), (int64x2_t)vshlq_u64(v421, (uint64x2_t)vzip1q_s64((int64x2_t)0, v419)));
        int64x2_t v424 = vpaddq_s64(v422, v419);
        unint64_t v425 = (v423.i64[0] << v363) | v359;
        if (v424.i64[0] + (v363 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v241 + ((v363 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v425;
          unint64_t v425 = (unint64_t)v423.i64[0] >> -(v363 & 0x3F);
          if ((v363 & 0x3F) == 0) {
            unint64_t v425 = 0;
          }
        }
        unint64_t v426 = v424.i64[0] + v363;
        unint64_t v359 = v425 | (v423.i64[1] << v426);
        if ((v426 & 0x3F) + v424.i64[1] >= 0x40)
        {
          *(void *)((char *)v241 + ((v426 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v359;
          unint64_t v359 = (unint64_t)v423.i64[1] >> -(v426 & 0x3F);
          if ((v426 & 0x3F) == 0) {
            unint64_t v359 = 0;
          }
        }
        char v406 = 0;
        unint64_t v363 = v426 + v424.i64[1];
        uint64_t v405 = 1;
      }
      while ((v409 & 1) != 0);
      if ((v363 & 0x3F) != 0) {
        *(void *)((char *)v241 + ((v363 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v359;
      }
      unint64_t result = (v363 - v242 + 7) >> 3;
      char v162 = *a2 | (result - 1);
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    char v162 = 3;
    unint64_t result = 4;
  }
  *a2 = v162;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, char *a4, int a5, int a6)
{
  unint64_t v9 = a3;
  uint64_t v11 = result;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 2) {
    int v13 = 2;
  }
  else {
    int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, result, a2, v12);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v14 = 2 * a2;
  int8x16_t v15 = a4 + 1;
  if (a6 <= 2) {
    int v16 = 2;
  }
  else {
    int v16 = a6;
  }
  unsigned int v17 = v16 - 2;
  if (v17 >= 2) {
    int v18 = 2;
  }
  else {
    int v18 = v17;
  }
  if (v12 && v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v15, v11 + v14, a2, v12);
    v9 += result;
  }
  else
  {
    *int8x16_t v15 = 0;
  }
  int8x16_t v19 = a4 + 2;
  if (a5 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a5;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v22 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, v11 + 64, a2, v22);
    v9 += result;
    int8x16_t v23 = a4 + 3;
  }
  else
  {
    *int8x16_t v19 = 0;
    int8x16_t v23 = a4 + 3;
    if (!v22) {
      goto LABEL_33;
    }
  }
  if (v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, v11 + v14 + 64, a2, v22);
    v9 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int8x16_t v23 = 0;
LABEL_34:
  int8x16_t v24 = a4 + 4;
  if (a6 <= 4) {
    int v25 = 4;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 4;
  if (v26 >= 2) {
    int v27 = 2;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, v11 + 4 * a2, a2, v12);
    v9 += result;
  }
  else
  {
    *int8x16_t v24 = 0;
  }
  int8x16_t v28 = a4 + 5;
  if (a6 <= 6) {
    int v29 = 6;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 6;
  if (v30 >= 2) {
    int v31 = 2;
  }
  else {
    int v31 = v30;
  }
  if (v12 && v31)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, v11 + 6 * a2, a2, v12);
    v9 += result;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v28 = 0;
    int8x16_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v32, v11 + 4 * a2 + 64, a2, v22);
    v9 += result;
    int8x16_t v33 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int8x16_t v32 = 0;
  int8x16_t v33 = a4 + 7;
  if (!v22)
  {
LABEL_62:
    char *v33 = 0;
    return result;
  }
LABEL_58:
  if (!v31) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, v11 + 6 * a2 + 64, a2, v22);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = *(int64x2_t *)(a3 + 16);
  int8x16_t v7 = (int64x2_t *)(a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)(a3 + a4);
  int64x2_t v10 = *(int64x2_t *)(a3 + a4 + 16);
  int8x16_t v11 = (int8x16_t)vzip1q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v12 = (int8x16_t)vzip2q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v13 = (int8x16_t)vzip1q_s64(v8, v10);
  int8x16_t v14 = (int8x16_t)vzip2q_s64(v8, v10);
  int64x2_t v16 = *v7;
  int64x2_t v17 = v7[1];
  int8x16_t v15 = (int8x16_t *)&v7->i8[a4];
  int8x16_t v18 = v15[1];
  int8x16_t v19 = (int8x16_t)vzip2q_s64(v16, *(int64x2_t *)v15);
  int8x16_t v20 = (int8x16_t)vzip2q_s64(v17, (int64x2_t)v18);
  int8x16_t v21 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v11.i8, 0);
  int8x16_t v22 = vsubq_s8(v11, v21);
  int8x16_t v482 = vsubq_s8(v12, v21);
  int8x16_t v472 = (int8x16_t)vzip1q_s64(v16, *(int64x2_t *)v15);
  int8x16_t v23 = vsubq_s8(v472, v21);
  int8x16_t v24 = vsubq_s8(v19, v21);
  int8x16_t v476 = v13;
  int8x16_t v25 = vsubq_s8(v13, v21);
  int8x16_t v26 = vsubq_s8(v14, v21);
  int8x16_t v474 = (int8x16_t)vzip1q_s64(v17, (int64x2_t)v18);
  int8x16_t v27 = vsubq_s8(v474, v21);
  int8x16_t v28 = vsubq_s8(v20, v21);
  int8x16_t v29 = vqtbl1q_s8(vmaxq_s8(v22, v482), (int8x16_t)xmmword_242EA7560);
  int8x16_t v30 = vqtbl1q_s8(vminq_s8(v22, v482), (int8x16_t)xmmword_242EA7560);
  int8x16_t v31 = vpmaxq_s8(v29, v29);
  int8x16_t v32 = vpminq_s8(v30, v30);
  int8x16_t v33 = vpmaxq_s8(v31, v31);
  int8x16_t v34 = vpminq_s8(v32, v32);
  v18.i64[0] = 0x8080808080808080;
  v18.i64[1] = 0x8080808080808080;
  int8x16_t v35 = vmaxq_s8(v33, v18);
  v13.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v13.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v36 = vminq_s8(v34, v13);
  int8x16_t v37 = vzip1q_s8(v33, v34);
  v38.i64[0] = 0x808080808080808;
  v38.i64[1] = 0x808080808080808;
  int8x16_t v39 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v37)), vceqzq_s8(v37));
  int8x16_t v40 = vpmaxq_s8(v39, v39);
  int8x16_t v41 = vqtbl1q_s8(vmaxq_s8(v23, v24), (int8x16_t)xmmword_242EA7560);
  int8x16_t v42 = vqtbl1q_s8(vminq_s8(v23, v24), (int8x16_t)xmmword_242EA7560);
  int8x16_t v43 = vpmaxq_s8(v41, v41);
  int8x16_t v44 = vpminq_s8(v42, v42);
  int8x16_t v45 = vpmaxq_s8(v43, v43);
  int8x16_t v46 = vpminq_s8(v44, v44);
  int8x16_t v47 = vmaxq_s8(v35, v45);
  int8x16_t v48 = vminq_s8(v36, v46);
  int8x16_t v49 = vzip1q_s8(v45, v46);
  int8x16_t v50 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v49)), vceqzq_s8(v49));
  int8x16_t v51 = vpmaxq_s8(v50, v50);
  int8x16_t v52 = vqtbl1q_s8(vmaxq_s8(v25, v26), (int8x16_t)xmmword_242EA7560);
  int8x16_t v53 = vqtbl1q_s8(vminq_s8(v25, v26), (int8x16_t)xmmword_242EA7560);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vpmaxq_s8(v54, v54);
  int8x16_t v57 = vpminq_s8(v55, v55);
  int8x16_t v58 = vmaxq_s8(v47, v56);
  int8x16_t v59 = vminq_s8(v48, v57);
  int8x16_t v60 = vzip1q_s8(v56, v57);
  int8x16_t v61 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v60)), vceqzq_s8(v60));
  int8x16_t v62 = vpmaxq_s8(v61, v61);
  int8x16_t v63 = vqtbl1q_s8(vmaxq_s8(v27, v28), (int8x16_t)xmmword_242EA7560);
  int8x16_t v64 = vqtbl1q_s8(vminq_s8(v27, v28), (int8x16_t)xmmword_242EA7560);
  int8x16_t v65 = vpmaxq_s8(v63, v63);
  int8x16_t v66 = vpminq_s8(v64, v64);
  int8x16_t v67 = vpmaxq_s8(v65, v65);
  int8x16_t v68 = vpminq_s8(v66, v66);
  int8x16_t v69 = vmaxq_s8(v58, v67);
  int8x16_t v70 = vminq_s8(v59, v68);
  int8x16_t v71 = vzip1q_s8(v67, v68);
  int8x16_t v72 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v71)), vceqzq_s8(v71));
  int8x16_t v73 = vpmaxq_s8(v72, v72);
  int8x16_t v74 = vmaxq_s8(vmaxq_s8(v40, v51), vmaxq_s8(v62, v73));
  int8x16_t v75 = vclzq_s8(vsubq_s8(v69, v70));
  v58.i64[0] = 0x707070707070707;
  v58.i64[1] = 0x707070707070707;
  v76.i64[0] = -1;
  v76.i64[1] = -1;
  int8x16_t v77 = vshlq_s8(v76, vsubq_s8(v58, v75));
  int8x16_t v78 = vsubq_s8(v38, v75);
  int8x16_t v79 = vcgtq_s8(v74, v78);
  int8x16_t v80 = vbslq_s8(v79, v78, v74);
  int8x16_t v81 = vandq_s8(vsubq_s8(v77, v70), v79);
  int8x16_t v82 = vandq_s8(v79, v38);
  v83.i64[0] = 0x303030303030303;
  v83.i64[1] = 0x303030303030303;
  int v84 = vmaxvq_s8(v80);
  int8x16_t v85 = vmaxq_s8(vminq_s8(vsubq_s8(v80, v40), v83), (int8x16_t)0);
  int8x16_t v86 = vmaxq_s8(vminq_s8(vsubq_s8(v80, v51), v83), (int8x16_t)0);
  int8x16_t v87 = vmaxq_s8(vminq_s8(vsubq_s8(v80, v62), v83), (int8x16_t)0);
  int8x16_t v88 = vmaxq_s8(vminq_s8(vsubq_s8(v80, v73), v83), (int8x16_t)0);
  v77.i64[0] = 0x404040404040404;
  v77.i64[1] = 0x404040404040404;
  int8x16_t v89 = vorrq_s8(vbicq_s8(v77, vceqq_s8(vaddq_s8(v88, v87), vnegq_s8(vaddq_s8(v85, v86)))), vorrq_s8(vandq_s8(vceqzq_s8(v80), v83), v82));
  int8x16_t v478 = v81;
  int8x16_t v480 = v22;
  int8x16_t v484 = v23;
  int8x16_t v485 = v24;
  int8x16_t v486 = v25;
  int8x16_t v487 = v26;
  int8x16_t v488 = v27;
  int8x16_t v489 = v28;
  int8x16_t v496 = v80;
  int8x16_t v497 = v70;
  int8x16_t v498 = v69;
  int8x16_t v499 = v81;
  int8x16_t v90 = vsubq_s8(v80, v85);
  int8x16_t v91 = vsubq_s8(v80, v86);
  int8x16_t v492 = v90;
  int8x16_t v493 = v91;
  int8x16_t v92 = vsubq_s8(v80, v87);
  int8x16_t v93 = vsubq_s8(v80, v88);
  int8x16_t v494 = v92;
  int8x16_t v495 = v93;
  BOOL v95 = a5 < 4 || a6 < 2;
  int8x16_t v490 = v21;
  int8x16_t v491 = v89;
  if (v84)
  {
    int8x16_t v469 = v28;
    int8x16_t v470 = v26;
    int8x16_t v458 = v20;
    int8x16_t v459 = v14;
    int8x16_t v464 = vsubq_s8(v22, vqtbl1q_s8(v22, (int8x16_t)xmmword_242EA7600));
    int8x16_t v462 = vsubq_s8(v23, vqtbl1q_s8(v23, (int8x16_t)xmmword_242EA7600));
    int8x16_t v463 = vsubq_s8(v482, vqtbl1q_s8(v482, (int8x16_t)xmmword_242EA7600));
    int8x16_t v96 = vqtbl1q_s8(vmaxq_s8(v464, v463), (int8x16_t)xmmword_242EA7560);
    int8x16_t v97 = vqtbl1q_s8(vminq_s8(v464, v463), (int8x16_t)xmmword_242EA7560);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    int8x16_t v100 = vpmaxq_s8(v98, v98);
    int8x16_t v101 = vpminq_s8(v99, v99);
    v102.i64[0] = 0x8080808080808080;
    v102.i64[1] = 0x8080808080808080;
    int8x16_t v103 = vmaxq_s8(v100, v102);
    v104.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v104.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int8x16_t v105 = vminq_s8(v101, v104);
    int8x16_t v106 = vzip1q_s8(v100, v101);
    int8x16_t v107 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v106)), vceqzq_s8(v106));
    int8x16_t v108 = vpmaxq_s8(v107, v107);
    int8x16_t v461 = vsubq_s8(v485, vqtbl1q_s8(v485, (int8x16_t)xmmword_242EA7600));
    int8x16_t v109 = vqtbl1q_s8(vmaxq_s8(v462, v461), (int8x16_t)xmmword_242EA7560);
    int8x16_t v110 = vqtbl1q_s8(vminq_s8(v462, v461), (int8x16_t)xmmword_242EA7560);
    int8x16_t v111 = vpmaxq_s8(v109, v109);
    int8x16_t v112 = vpminq_s8(v110, v110);
    int8x16_t v113 = vpmaxq_s8(v111, v111);
    int8x16_t v114 = vpminq_s8(v112, v112);
    int8x16_t v115 = vmaxq_s8(v103, v113);
    int8x16_t v116 = vminq_s8(v105, v114);
    int8x16_t v117 = vzip1q_s8(v113, v114);
    int8x16_t v118 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v117)), vceqzq_s8(v117));
    int8x16_t v119 = vpmaxq_s8(v118, v118);
    int8x16_t v465 = vsubq_s8(v25, vqtbl1q_s8(v25, (int8x16_t)xmmword_242EA7600));
    int8x16_t v466 = vsubq_s8(v487, vqtbl1q_s8(v487, (int8x16_t)xmmword_242EA7600));
    int8x16_t v120 = vqtbl1q_s8(vmaxq_s8(v465, v466), (int8x16_t)xmmword_242EA7560);
    int8x16_t v121 = vqtbl1q_s8(vminq_s8(v465, v466), (int8x16_t)xmmword_242EA7560);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vpmaxq_s8(v122, v122);
    int8x16_t v125 = vpminq_s8(v123, v123);
    int8x16_t v126 = vmaxq_s8(v115, v124);
    int8x16_t v127 = vminq_s8(v116, v125);
    int8x16_t v128 = vzip1q_s8(v124, v125);
    int8x16_t v129 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v128)), vceqzq_s8(v128));
    int8x16_t v130 = vpmaxq_s8(v129, v129);
    int8x16_t v467 = vsubq_s8(v27, vqtbl1q_s8(v27, (int8x16_t)xmmword_242EA7600));
    int8x16_t v468 = vsubq_s8(v489, vqtbl1q_s8(v489, (int8x16_t)xmmword_242EA7600));
    int8x16_t v131 = vqtbl1q_s8(vmaxq_s8(v467, v468), (int8x16_t)xmmword_242EA7560);
    int8x16_t v132 = vqtbl1q_s8(vminq_s8(v467, v468), (int8x16_t)xmmword_242EA7560);
    int8x16_t v133 = vpmaxq_s8(v131, v131);
    int8x16_t v134 = vpminq_s8(v132, v132);
    int8x16_t v135 = vpmaxq_s8(v133, v133);
    int8x16_t v136 = vpminq_s8(v134, v134);
    int8x16_t v137 = vmaxq_s8(v126, v135);
    int8x16_t v138 = vminq_s8(v127, v136);
    int8x16_t v139 = vzip1q_s8(v135, v136);
    int8x16_t v140 = vbicq_s8(vsubq_s8(v38, vclsq_s8(v139)), vceqzq_s8(v139));
    int8x16_t v141 = vpmaxq_s8(v140, v140);
    int8x16_t v142 = vmaxq_s8(vmaxq_s8(v108, v119), vmaxq_s8(v130, v141));
    int8x16_t v460 = v137;
    int8x16_t v143 = vclzq_s8(vsubq_s8(v137, v138));
    int8x16_t v144 = vsubq_s8(v38, v143);
    int8x16_t v145 = vcgtq_s8(v142, v144);
    int8x16_t v146 = vbslq_s8(v145, v144, v142);
    v142.i64[0] = 0x1010101010101010;
    v142.i64[1] = 0x1010101010101010;
    v137.i64[0] = 0x1818181818181818;
    v137.i64[1] = 0x1818181818181818;
    int8x16_t v147 = vorrq_s8(vandq_s8(vceqzq_s8(v146), v83), vbslq_s8(v145, v137, v142));
    int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v146, v108), v83), (int8x16_t)0);
    int8x16_t v149 = vmaxq_s8(vminq_s8(vsubq_s8(v146, v119), v83), (int8x16_t)0);
    int8x16_t v150 = vmaxq_s8(vminq_s8(vsubq_s8(v146, v130), v83), (int8x16_t)0);
    int8x16_t v151 = vmaxq_s8(vminq_s8(vsubq_s8(v146, v141), v83), (int8x16_t)0);
    int8x16_t v152 = vsubq_s8(v146, v148);
    int8x16_t v153 = vsubq_s8(v146, v149);
    int8x16_t v154 = vsubq_s8(v146, v150);
    int8x16_t v155 = vsubq_s8(v146, v151);
    int8x16_t v156 = vceqq_s8(vaddq_s8(v151, v150), vnegq_s8(vaddq_s8(v148, v149)));
    v150.i64[0] = 0x404040404040404;
    v150.i64[1] = 0x404040404040404;
    int8x16_t v157 = vorrq_s8(v147, vbicq_s8(v150, v156));
    uint16x8_t v158 = vmovl_u8(*(uint8x8_t *)v157.i8);
    v147.i64[0] = 0x8000800080008;
    v147.i64[1] = 0x8000800080008;
    v148.i64[0] = 0x2000200020002;
    v148.i64[1] = 0x2000200020002;
    int8x16_t v159 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v92.i8, *(int8x8_t *)v91.i8), *(int8x8_t *)v93.i8), 3uLL), *(int8x8_t *)v90.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v80.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v89.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v89.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v89.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v148), v147)), vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v154.i8, *(int8x8_t *)v153.i8), *(int8x8_t *)v155.i8),
                                                                      3uLL),
                                                                    *(int8x8_t *)v152.i8,
                                                                    (int8x8_t)0x707070707070707),
                                                                  (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v157.i8, 1uLL), v147)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v146.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v158 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v148), v147)))), 0);
    if (vaddlvq_s8(v159))
    {
      int8x16_t v480 = vbslq_s8(v159, v464, v22);
      int8x16_t v482 = vbslq_s8(v159, v463, v482);
      v160.i64[0] = 0x707070707070707;
      v160.i64[1] = 0x707070707070707;
      int8x16_t v484 = vbslq_s8(v159, v462, v23);
      int8x16_t v485 = vbslq_s8(v159, v461, v24);
      v161.i64[0] = -1;
      v161.i64[1] = -1;
      int8x16_t v486 = vbslq_s8(v159, v465, v25);
      int8x16_t v487 = vbslq_s8(v159, v466, v470);
      int8x16_t v488 = vbslq_s8(v159, v467, v27);
      int8x16_t v489 = vbslq_s8(v159, v468, v469);
      int8x16_t v492 = vbslq_s8(v159, v152, v90);
      int8x16_t v493 = vbslq_s8(v159, v153, v91);
      int8x16_t v494 = vbslq_s8(v159, v154, v92);
      int8x16_t v495 = vbslq_s8(v159, v155, v93);
      int8x16_t v498 = vbslq_s8(v159, v460, v69);
      int8x16_t v499 = vbslq_s8(v159, vandq_s8(vsubq_s8(vshlq_s8(v161, vsubq_s8(v160, v143)), v138), v145), v478);
      int8x16_t v496 = vbslq_s8(v159, v146, v80);
      int8x16_t v497 = vbslq_s8(v159, v138, v70);
      int8x16_t v490 = vbslq_s8(v159, vsubq_s8(v21, vqtbl1q_s8(v21, (int8x16_t)xmmword_242EA7600)), v21);
      int8x16_t v491 = vbslq_s8(v159, v157, v89);
    }
    if (v95)
    {
      int8x16_t v162 = v493;
      int8x16_t v163 = v494;
      int8x16_t v165 = v495;
      int8x16_t v164 = v496;
      int8x16_t v166 = v499;
      int8x16_t v168 = v480;
      int8x16_t v167 = v482;
      int8x16_t v170 = v484;
      int8x16_t v169 = v485;
      int8x16_t v171 = v486;
      int8x16_t v172 = v487;
      int8x16_t v174 = v488;
      int8x16_t v173 = v489;
      v175.i64[0] = v491.i64[0];
      int8x16_t v176 = v492;
    }
    else
    {
      int8x16_t v187 = vsubq_s8(v11, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v178 = vsubq_s8(v12, vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7620));
      v500.val[0] = v472;
      v500.val[1] = v19;
      v500.val[1].i32[3] = v12.i32[3];
      int8x16_t v179 = vsubq_s8(v472, vqtbl2q_s8(v500, (int8x16_t)xmmword_242EA7590));
      int8x16_t v180 = vsubq_s8(v19, vqtbl2q_s8(v500, (int8x16_t)xmmword_242EA7630));
      v500.val[0] = v476;
      v500.val[1] = v459;
      v500.val[1].i32[3] = v12.i32[3];
      int8x16_t v181 = vsubq_s8(v476, vqtbl2q_s8(v500, (int8x16_t)xmmword_242EA7640));
      int8x16_t v182 = vsubq_s8(v459, vqtbl2q_s8(v500, (int8x16_t)xmmword_242EA7570));
      v500.val[0] = v474;
      v500.val[1] = v458;
      v500.val[1].i32[3] = v12.i32[3];
      int8x16_t v183 = vqtbl2q_s8(v500, (int8x16_t)xmmword_242EA7570);
      int8x16_t v184 = vsubq_s8(v474, vqtbl2q_s8(v500, (int8x16_t)xmmword_242EA7650));
      int8x16_t v185 = vsubq_s8(v458, v183);
      int8x16_t v186 = v178;
      v186.i32[3] = v187.i32[0];
      v187.i32[0] = v178.i32[3];
      int8x16_t v188 = vqtbl1q_s8(vmaxq_s8(v187, v186), (int8x16_t)xmmword_242EA7560);
      int8x16_t v189 = vqtbl1q_s8(vminq_s8(v187, v186), (int8x16_t)xmmword_242EA7560);
      int8x16_t v190 = vpmaxq_s8(v188, v188);
      int8x16_t v191 = vpminq_s8(v189, v189);
      int8x16_t v192 = vpmaxq_s8(v190, v190);
      int8x16_t v193 = vpminq_s8(v191, v191);
      v194.i64[0] = 0x8080808080808080;
      v194.i64[1] = 0x8080808080808080;
      v195.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v195.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v196 = vminq_s8(v193, v195);
      int8x16_t v197 = vzip1q_s8(v192, v193);
      v198.i64[0] = 0x808080808080808;
      v198.i64[1] = 0x808080808080808;
      int8x16_t v199 = vbicq_s8(vsubq_s8(v198, vclsq_s8(v197)), vceqzq_s8(v197));
      int8x16_t v200 = vpmaxq_s8(v199, v199);
      int8x16_t v479 = v180;
      int8x16_t v201 = vqtbl1q_s8(vmaxq_s8(v179, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v202 = vqtbl1q_s8(vminq_s8(v179, v180), (int8x16_t)xmmword_242EA7560);
      int8x16_t v203 = vpmaxq_s8(v201, v201);
      int8x16_t v204 = vpminq_s8(v202, v202);
      int8x16_t v205 = vpmaxq_s8(v203, v203);
      int8x16_t v206 = vpminq_s8(v204, v204);
      int8x16_t v207 = vmaxq_s8(vmaxq_s8(v192, v194), v205);
      int8x16_t v208 = vminq_s8(v196, v206);
      int8x16_t v209 = vzip1q_s8(v205, v206);
      int8x16_t v210 = vbicq_s8(vsubq_s8(v198, vclsq_s8(v209)), vceqzq_s8(v209));
      int8x16_t v211 = vpmaxq_s8(v210, v210);
      int8x16_t v477 = v181;
      int8x16_t v475 = v182;
      int8x16_t v212 = vqtbl1q_s8(vmaxq_s8(v181, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v213 = vqtbl1q_s8(vminq_s8(v181, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v214 = vpmaxq_s8(v212, v212);
      int8x16_t v215 = vpminq_s8(v213, v213);
      int8x16_t v216 = vpmaxq_s8(v214, v214);
      int8x16_t v217 = vpminq_s8(v215, v215);
      int8x16_t v218 = vmaxq_s8(v207, v216);
      int8x16_t v219 = vminq_s8(v208, v217);
      int8x16_t v220 = vzip1q_s8(v216, v217);
      int8x16_t v221 = vbicq_s8(vsubq_s8(v198, vclsq_s8(v220)), vceqzq_s8(v220));
      int8x16_t v222 = vpmaxq_s8(v221, v221);
      int8x16_t v223 = vqtbl1q_s8(vmaxq_s8(v184, v185), (int8x16_t)xmmword_242EA7560);
      int8x16_t v224 = vqtbl1q_s8(vminq_s8(v184, v185), (int8x16_t)xmmword_242EA7560);
      int8x16_t v225 = vpmaxq_s8(v223, v223);
      int8x16_t v226 = vpminq_s8(v224, v224);
      int8x16_t v227 = vpmaxq_s8(v225, v225);
      int8x16_t v228 = vpminq_s8(v226, v226);
      int8x16_t v229 = vmaxq_s8(v218, v227);
      int8x16_t v230 = vminq_s8(v219, v228);
      int8x16_t v231 = vzip1q_s8(v227, v228);
      int8x16_t v232 = vbicq_s8(vsubq_s8(v198, vclsq_s8(v231)), vceqzq_s8(v231));
      int8x16_t v233 = vpmaxq_s8(v232, v232);
      int8x16_t v234 = vmaxq_s8(vmaxq_s8(v200, v211), vmaxq_s8(v222, v233));
      int8x16_t v235 = vclzq_s8(vsubq_s8(v229, v230));
      int8x16_t v236 = vsubq_s8(v198, v235);
      int8x16_t v237 = vcgtq_s8(v234, v236);
      int8x16_t v238 = vbslq_s8(v237, v236, v234);
      v234.i64[0] = 0x909090909090909;
      v234.i64[1] = 0x909090909090909;
      v198.i64[0] = 0x202020202020202;
      v198.i64[1] = 0x202020202020202;
      int8x16_t v239 = vorrq_s8(vandq_s8(vceqzq_s8(v238), v198), vsubq_s8(vandq_s8(v237, v234), vmvnq_s8(v237)));
      v236.i64[0] = 0x303030303030303;
      v236.i64[1] = 0x303030303030303;
      int8x16_t v240 = vmaxq_s8(vminq_s8(vsubq_s8(v238, v200), v236), (int8x16_t)0);
      int8x16_t v241 = vmaxq_s8(vminq_s8(vsubq_s8(v238, v211), v236), (int8x16_t)0);
      int8x16_t v242 = vmaxq_s8(vminq_s8(vsubq_s8(v238, v222), v236), (int8x16_t)0);
      int8x16_t v175 = vmaxq_s8(vminq_s8(vsubq_s8(v238, v233), v236), (int8x16_t)0);
      int8x16_t v243 = vsubq_s8(v238, v240);
      int8x16_t v244 = vsubq_s8(v238, v242);
      int8x16_t v245 = vsubq_s8(v238, v175);
      v192.i64[0] = 0x404040404040404;
      v192.i64[1] = 0x404040404040404;
      int8x16_t v246 = vorrq_s8(v239, vbicq_s8(v192, vceqq_s8(vaddq_s8(v175, v242), vnegq_s8(vaddq_s8(v240, v241)))));
      int8x16_t v473 = vsubq_s8(v238, v241);
      v241.i64[0] = 0x3000300030003;
      v241.i64[1] = 0x3000300030003;
      v175.i64[0] = v491.i64[0];
      int8x16_t v176 = v492;
      int8x16_t v247 = (int8x16_t)vmovl_s8(*(int8x8_t *)v491.i8);
      v248.i64[0] = 0x8000800080008;
      v248.i64[1] = 0x8000800080008;
      int8x16_t v165 = v495;
      int8x16_t v164 = v496;
      int16x8_t v249 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v496.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v247, v248)));
      int16x8_t v250 = (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v491.i8, 1uLL), v248);
      int16x8_t v251 = (int16x8_t)vandq_s8(v247, v241);
      v247.i64[0] = 0x2000200020002;
      v247.i64[1] = 0x2000200020002;
      int16x8_t v252 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v251, (int16x8_t)v247), v248);
      int8x16_t v162 = v493;
      int8x16_t v163 = v494;
      int8x16_t v253 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v249, v250), v252), *(int8x8_t *)v492.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v494.i8, *(int8x8_t *)v493.i8), *(int8x8_t *)v495.i8), 3uLL)), vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v244.i8, *(int8x8_t *)v473.i8),
                                                                                               *(int8x8_t *)v245.i8),
                                                                                             3uLL),
                                                                                           *(int8x8_t *)v243.i8,
                                                                                           (int8x8_t)0x707070707070707),
                                                                             (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v246.i8, *(int8x8_t *)v246.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v238.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v246.i8))))), 0);
      int8x16_t v166 = v499;
      int8x16_t v168 = v480;
      int8x16_t v167 = v482;
      int8x16_t v170 = v484;
      int8x16_t v169 = v485;
      int8x16_t v171 = v486;
      int8x16_t v172 = v487;
      int8x16_t v174 = v488;
      int8x16_t v173 = v489;
      if (vaddlvq_s8(v253))
      {
        int8x16_t v471 = v245;
        int8x16_t v254 = v229;
        int8x16_t v255 = v185;
        int8x16_t v256 = v184;
        int8x16_t v257 = v179;
        v258.i64[0] = 0x707070707070707;
        v258.i64[1] = 0x707070707070707;
        int8x16_t v259 = vsubq_s8(v258, v235);
        v260.i64[0] = -1;
        v260.i64[1] = -1;
        int8x16_t v168 = vbslq_s8(v253, v187, v480);
        int8x16_t v167 = vbslq_s8(v253, v186, v482);
        int8x16_t v170 = vbslq_s8(v253, v257, v484);
        int8x16_t v169 = vbslq_s8(v253, v479, v485);
        int8x16_t v171 = vbslq_s8(v253, v477, v486);
        int8x16_t v172 = vbslq_s8(v253, v475, v487);
        int8x16_t v174 = vbslq_s8(v253, v256, v488);
        int8x16_t v173 = vbslq_s8(v253, v255, v489);
        int8x16_t v176 = vbslq_s8(v253, v243, v492);
        int8x16_t v162 = vbslq_s8(v253, v473, v493);
        int8x16_t v163 = vbslq_s8(v253, v244, v494);
        int8x16_t v165 = vbslq_s8(v253, v471, v495);
        int8x16_t v166 = vbslq_s8(v253, vandq_s8(vsubq_s8(vshlq_s8(v260, v259), v230), v237), v499);
        int8x16_t v164 = vbslq_s8(v253, v238, v496);
        int8x16_t v175 = vbslq_s8(v253, v246, v491);
        int8x16_t v490 = vbslq_s8(v253, vextq_s8(v12, v12, 0xCuLL), v490);
        int8x16_t v491 = v175;
        int8x16_t v497 = vbslq_s8(v253, v230, v497);
        int8x16_t v498 = vbslq_s8(v253, v254, v498);
        int8x16_t v492 = v176;
        int8x16_t v493 = v162;
        int8x16_t v494 = v163;
        int8x16_t v495 = v165;
        int8x16_t v499 = v166;
        int8x16_t v496 = v164;
      }
    }
    int8x16_t v261 = vandq_s8(v166, vceqq_s8(v164, v176));
    int8x16_t v481 = vaddq_s8(v261, v168);
    int8x16_t v483 = vaddq_s8(v167, v261);
    int8x16_t v262 = vandq_s8(v166, vceqq_s8(v164, v162));
    int8x16_t v484 = vaddq_s8(v170, v262);
    int8x16_t v485 = vaddq_s8(v169, v262);
    int8x16_t v263 = vandq_s8(v166, vceqq_s8(v164, v163));
    int8x16_t v486 = vaddq_s8(v171, v263);
    int8x16_t v487 = vaddq_s8(v172, v263);
    int8x16_t v264 = vandq_s8(v166, vceqq_s8(v164, v165));
    int8x16_t v488 = vaddq_s8(v174, v264);
    int8x16_t v489 = vaddq_s8(v173, v264);
    int8x16_t v265 = (int8x16_t)vmovl_s8(*(int8x8_t *)v175.i8);
    v266.i64[0] = 0x8000800080008;
    v266.i64[1] = 0x8000800080008;
    int16x8_t v267 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v164.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v265, v266)));
    v268.i64[0] = 0x3000300030003;
    v268.i64[1] = 0x3000300030003;
    int16x8_t v269 = (int16x8_t)vandq_s8(v265, v268);
    v268.i64[0] = 0x2000200020002;
    v268.i64[1] = 0x2000200020002;
    int16x8_t v270 = vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v163.i8, *(int8x8_t *)v162.i8), *(int8x8_t *)v165.i8), 3uLL), *(int8x8_t *)v176.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v269, (int16x8_t)v268), v266)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v175.i8, 1uLL), v266), v267));
    int16x8_t v271 = vpaddq_s16(v270, v270);
    if ((unint64_t)(vpaddq_s16(v271, v271).i16[0] - 449) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      int16x8_t v272 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v273 = 8 * (a1 & 7);
      if (v273) {
        uint64_t v274 = *v272 & ~(-1 << v273);
      }
      else {
        uint64_t v274 = 0;
      }
      *a2 = 0;
      __int32 v275 = v490.i32[0];
      int16x4_t v276 = (int16x4_t)vzip1_s8(*(int8x8_t *)v164.i8, *(int8x8_t *)v490.i8);
      int8x8_t v277 = (int8x8_t)vadd_s16(v276, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v278 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v276 & 0xFF00FF00FF00FFLL)));
      v279.i64[0] = v278.u32[0];
      v279.i64[1] = v278.u32[1];
      int8x16_t v280 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v279, 0x38uLL), 0x38uLL);
      v279.i64[0] = v278.u32[2];
      v279.i64[1] = v278.u32[3];
      int8x16_t v281 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v279, 0x38uLL), 0x38uLL);
      uint32x4_t v282 = vmovl_u16((uint16x4_t)vand_s8(v277, (int8x8_t)0x7000700070007));
      v279.i64[0] = v282.u32[2];
      v279.i64[1] = v282.u32[3];
      v283.i64[0] = 255;
      v283.i64[1] = 255;
      uint64x2_t v284 = (uint64x2_t)vandq_s8((int8x16_t)v279, v283);
      v279.i64[0] = v282.u32[0];
      v279.i64[1] = v282.u32[1];
      uint64_t v285 = v175.i8[0] & 0x1F;
      int8x16_t v286 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v279, v283), (uint64x2_t)xmmword_242EA7660), v280), vbicq_s8((int8x16_t)vshlq_u64(v284, (uint64x2_t)xmmword_242EA7670), v281));
      *(int8x8_t *)v286.i8 = vorr_s8(*(int8x8_t *)v286.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v286, v286, 8uLL));
      v279.i64[0] = v175.u8[1];
      v279.i64[1] = v175.u8[2];
      v286.i64[1] = (unint64_t)(v175.i8[3] & 0x1F) << 15;
      int8x16_t v287 = vorrq_s8(v286, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v279, v283), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v288 = vorrq_s8(v287, (int8x16_t)vdupq_laneq_s64((int64x2_t)v287, 1)).u64[0] | v285;
      unint64_t v289 = v274 | (v288 << v273);
      if (v273 >= 0x20)
      {
        *int16x8_t v272 = v289;
        unint64_t v289 = v288 >> (-8 * (a1 & 7u));
      }
      uint64_t v290 = (unsigned __int16)v275;
      v291.i64[0] = BYTE2(v275);
      v291.i64[1] = HIBYTE(v275);
      uint64x2_t v292 = vshlq_u64((uint64x2_t)vandq_s8(v291, v283), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v293 = v290 | v292.i64[0] | v292.i64[1];
      unint64_t v294 = (v273 + 32) & 0x38;
      unint64_t v295 = v289 | (v293 << v294);
      if (v294 >= 0x20)
      {
        *(void *)((char *)v272 + (((v273 + 32) >> 3) & 8)) = v295;
        unint64_t v295 = v293 >> -(char)v294;
      }
      int8x16_t v296 = vsubq_s8(v496, v492);
      int8x16_t v297 = vsubq_s8(v496, v493);
      int8x16_t v298 = vsubq_s8(v496, v494);
      int8x16_t v299 = vsubq_s8(v496, v495);
      int16x8_t v300 = (int16x8_t)vtrn1q_s8(v296, v297);
      int16x8_t v301 = (int16x8_t)vtrn2q_s8(v296, v297);
      int8x16_t v302 = vtrn1q_s8(v298, v299);
      int16x8_t v303 = (int16x8_t)vtrn2q_s8(v298, v299);
      int8x16_t v304 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v300, (int16x8_t)v302), (int32x4_t)vzip1q_s16(v301, v303)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v300, (int16x8_t)v302), (int32x4_t)vtrn2q_s16(v301, v303)));
      v302.i64[0] = 0x202020202020202;
      v302.i64[1] = 0x202020202020202;
      int8x16_t v305 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v491.i8), (int16x4_t)0x4000400040004)), v302);
      v302.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v302.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v298.i64[0] = -1;
      v298.i64[1] = -1;
      uint8x16_t v306 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v298, (uint8x16_t)vorrq_s8(v305, v302)), v304);
      int16x8_t v307 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v305.i8);
      int16x8_t v308 = (int16x8_t)vmovl_high_u8((uint8x16_t)v305);
      uint16x8_t v309 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v306.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v307)), (int16x8_t)vshlq_u16(vmovl_high_u8(v306), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v308)));
      uint16x8_t v310 = (uint16x8_t)vpaddq_s16(v307, v308);
      int32x4_t v311 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v310.i8);
      int32x4_t v312 = (int32x4_t)vmovl_high_u16(v310);
      int32x4_t v313 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v309.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v311)), (int32x4_t)vshlq_u32(vmovl_high_u16(v309), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v312)));
      int32x4_t v314 = vpaddq_s32(v311, v312);
      v315.i64[0] = v313.u32[0];
      v315.i64[1] = v313.u32[1];
      uint64x2_t v316 = (uint64x2_t)v315;
      v315.i64[0] = v313.u32[2];
      v315.i64[1] = v313.u32[3];
      uint64x2_t v317 = (uint64x2_t)v315;
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      int64x2_t v318 = v315;
      v315.i64[0] = v314.u32[2];
      v315.i64[1] = v314.u32[3];
      int64x2_t v319 = vpaddq_s64((int64x2_t)vshlq_u64(v316, (uint64x2_t)vzip1q_s64((int64x2_t)0, v318)), (int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)));
      int64x2_t v320 = vpaddq_s64(v318, v315);
      unint64_t v321 = (v319.i64[0] << v273) | v295;
      if (v320.i64[0] + v273 >= 0x40)
      {
        v272[1] = v321;
        unint64_t v321 = (unint64_t)v319.i64[0] >> (-8 * (a1 & 7u));
        if (!v273) {
          unint64_t v321 = 0;
        }
      }
      unint64_t v322 = v320.i64[0] + (v273 | 0x40);
      unint64_t v323 = v321 | (v319.i64[1] << v322);
      if ((v322 & 0x3F) + v320.i64[1] >= 0x40)
      {
        *(void *)((char *)v272 + ((v322 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        unint64_t v323 = (unint64_t)v319.i64[1] >> -(v322 & 0x3F);
        if ((v322 & 0x3F) == 0) {
          unint64_t v323 = 0;
        }
      }
      unint64_t v324 = v322 + v320.i64[1];
      v325.i64[0] = 0x808080808080808;
      v325.i64[1] = 0x808080808080808;
      v326.i64[0] = -1;
      v326.i64[1] = -1;
      int8x16_t v327 = vandq_s8(vextq_s8(vtstq_s8(v491, v325), (int8x16_t)0, 0xCuLL), v496);
      v328.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v328.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v329 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v326, (uint8x16_t)vaddq_s8(v327, v328)), v499);
      int16x8_t v330 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v327.i8);
      uint16x8_t v331 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v329.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v330)), (int16x8_t)vmovl_high_u8(v329));
      uint16x8_t v332 = (uint16x8_t)vpaddq_s16(v330, (int16x8_t)vmovl_high_u8((uint8x16_t)v327));
      int32x4_t v333 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v332.i8);
      int32x4_t v334 = (int32x4_t)vmovl_high_u16(v332);
      int32x4_t v335 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v331.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v333)), (int32x4_t)vshlq_u32(vmovl_high_u16(v331), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v334)));
      int32x4_t v336 = vpaddq_s32(v333, v334);
      v337.i64[0] = v335.u32[0];
      v337.i64[1] = v335.u32[1];
      uint64x2_t v338 = (uint64x2_t)v337;
      v337.i64[0] = v335.u32[2];
      v337.i64[1] = v335.u32[3];
      uint64x2_t v339 = (uint64x2_t)v337;
      v337.i64[0] = v336.u32[0];
      v337.i64[1] = v336.u32[1];
      int64x2_t v340 = v337;
      v337.i64[0] = v336.u32[2];
      v337.i64[1] = v336.u32[3];
      int64x2_t v341 = vpaddq_s64((int64x2_t)vshlq_u64(v338, (uint64x2_t)vzip1q_s64((int64x2_t)0, v340)), (int64x2_t)vshlq_u64(v339, (uint64x2_t)vzip1q_s64((int64x2_t)0, v337)));
      int64x2_t v342 = vpaddq_s64(v340, v337);
      unint64_t v343 = (v341.i64[0] << v324) | v323;
      if (v342.i64[0] + (v324 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v324 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v343;
        unint64_t v343 = (unint64_t)v341.i64[0] >> -(v324 & 0x3F);
        if ((v324 & 0x3F) == 0) {
          unint64_t v343 = 0;
        }
      }
      unint64_t v344 = v342.i64[0] + v324;
      unint64_t v345 = v343 | (v341.i64[1] << v344);
      if ((v344 & 0x3F) + v342.i64[1] >= 0x40)
      {
        *(void *)((char *)v272 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v345;
        unint64_t v345 = (unint64_t)v341.i64[1] >> -(v344 & 0x3F);
        if ((v344 & 0x3F) == 0) {
          unint64_t v345 = 0;
        }
      }
      unint64_t v346 = v344 + v342.i64[1];
      int8x16_t v347 = vextq_s8((int8x16_t)0, v492, 0xCuLL);
      v348.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v348.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v349.i64[0] = -1;
      v349.i64[1] = -1;
      uint8x16_t v350 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v349, (uint8x16_t)vaddq_s8(v347, v348)), v481);
      int16x8_t v351 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v347.i8);
      int16x8_t v352 = (int16x8_t)vmovl_high_u8((uint8x16_t)v347);
      uint16x8_t v353 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v350.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v351)), (int16x8_t)vshlq_u16(vmovl_high_u8(v350), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v352)));
      uint16x8_t v354 = (uint16x8_t)vpaddq_s16(v351, v352);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16(v354);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)), (int32x4_t)vshlq_u32(vmovl_high_u16(v353), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v346) | v345;
      if (v364.i64[0] + (v346 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        unint64_t v365 = (unint64_t)v363.i64[0] >> -(v346 & 0x3F);
        if ((v346 & 0x3F) == 0) {
          unint64_t v365 = 0;
        }
      }
      unint64_t v366 = v364.i64[0] + v346;
      unint64_t v367 = v365 | (v363.i64[1] << v366);
      if ((v366 & 0x3F) + v364.i64[1] >= 0x40)
      {
        *(void *)((char *)v272 + ((v366 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v367;
        unint64_t v367 = (unint64_t)v363.i64[1] >> -(v366 & 0x3F);
        if ((v366 & 0x3F) == 0) {
          unint64_t v367 = 0;
        }
      }
      unint64_t v368 = v366 + v364.i64[1];
      v369.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v369.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v370.i64[0] = -1;
      v370.i64[1] = -1;
      uint8x16_t v371 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v370, (uint8x16_t)vaddq_s8(v492, v369)), v483);
      int16x8_t v372 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v492.i8);
      int16x8_t v373 = (int16x8_t)vmovl_high_u8((uint8x16_t)v492);
      uint16x8_t v374 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v371.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v372)), (int16x8_t)vshlq_u16(vmovl_high_u8(v371), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v373)));
      uint16x8_t v375 = (uint16x8_t)vpaddq_s16(v372, v373);
      int32x4_t v376 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v375.i8);
      int32x4_t v377 = (int32x4_t)vmovl_high_u16(v375);
      int32x4_t v378 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v374.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v376)), (int32x4_t)vshlq_u32(vmovl_high_u16(v374), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v377)));
      int32x4_t v379 = vpaddq_s32(v376, v377);
      v380.i64[0] = v378.u32[0];
      v380.i64[1] = v378.u32[1];
      uint64x2_t v381 = (uint64x2_t)v380;
      v380.i64[0] = v378.u32[2];
      v380.i64[1] = v378.u32[3];
      uint64x2_t v382 = (uint64x2_t)v380;
      v380.i64[0] = v379.u32[0];
      v380.i64[1] = v379.u32[1];
      int64x2_t v383 = v380;
      v380.i64[0] = v379.u32[2];
      v380.i64[1] = v379.u32[3];
      int64x2_t v384 = vpaddq_s64((int64x2_t)vshlq_u64(v381, (uint64x2_t)vzip1q_s64((int64x2_t)0, v383)), (int64x2_t)vshlq_u64(v382, (uint64x2_t)vzip1q_s64((int64x2_t)0, v380)));
      int64x2_t v385 = vpaddq_s64(v383, v380);
      unint64_t v386 = (v384.i64[0] << v368) | v367;
      if (v385.i64[0] + (v368 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v272 + ((v368 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v386;
        if ((v368 & 0x3F) != 0) {
          unint64_t v386 = (unint64_t)v384.i64[0] >> -(v368 & 0x3F);
        }
        else {
          unint64_t v386 = 0;
        }
      }
      uint64_t v387 = v385.i64[1];
      unint64_t v388 = v385.i64[0] + v368;
      uint64_t v389 = (v385.i64[0] + v368) & 0x3F;
      unint64_t v390 = v386 | (v384.i64[1] << v388);
      if ((unint64_t)(v389 + v385.i64[1]) >= 0x40)
      {
        *(void *)((char *)v272 + ((v388 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
        unint64_t v390 = (unint64_t)v384.i64[1] >> -(char)v389;
        if (!v389) {
          unint64_t v390 = 0;
        }
      }
      uint64_t v391 = 0;
      v392.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v392.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v393.i64[0] = -1;
      v393.i64[1] = -1;
      unint64_t v394 = v388 + v387;
      char v395 = 1;
      do
      {
        char v396 = v395;
        uint8x16_t v397 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v393, (uint8x16_t)vaddq_s8(v493, v392)), *(&v484 + v391));
        int16x8_t v398 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v493.i8);
        int16x8_t v399 = (int16x8_t)vmovl_high_u8((uint8x16_t)v493);
        uint16x8_t v400 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v397.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v398)), (int16x8_t)vshlq_u16(vmovl_high_u8(v397), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v399)));
        uint16x8_t v401 = (uint16x8_t)vpaddq_s16(v398, v399);
        int32x4_t v402 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v401.i8);
        int32x4_t v403 = (int32x4_t)vmovl_high_u16(v401);
        int32x4_t v404 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v400.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v402)), (int32x4_t)vshlq_u32(vmovl_high_u16(v400), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v403)));
        int32x4_t v405 = vpaddq_s32(v402, v403);
        v406.i64[0] = v404.u32[0];
        v406.i64[1] = v404.u32[1];
        uint64x2_t v407 = (uint64x2_t)v406;
        v406.i64[0] = v404.u32[2];
        v406.i64[1] = v404.u32[3];
        uint64x2_t v408 = (uint64x2_t)v406;
        v406.i64[0] = v405.u32[0];
        v406.i64[1] = v405.u32[1];
        int64x2_t v409 = v406;
        v406.i64[0] = v405.u32[2];
        v406.i64[1] = v405.u32[3];
        int64x2_t v410 = vpaddq_s64((int64x2_t)vshlq_u64(v407, (uint64x2_t)vzip1q_s64((int64x2_t)0, v409)), (int64x2_t)vshlq_u64(v408, (uint64x2_t)vzip1q_s64((int64x2_t)0, v406)));
        int64x2_t v411 = vpaddq_s64(v409, v406);
        unint64_t v412 = (v410.i64[0] << v394) | v390;
        if (v411.i64[0] + (v394 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v272 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v412;
          unint64_t v412 = (unint64_t)v410.i64[0] >> -(v394 & 0x3F);
          if ((v394 & 0x3F) == 0) {
            unint64_t v412 = 0;
          }
        }
        unint64_t v413 = v411.i64[0] + v394;
        unint64_t v390 = v412 | (v410.i64[1] << v413);
        if ((v413 & 0x3F) + v411.i64[1] >= 0x40)
        {
          *(void *)((char *)v272 + ((v413 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
          unint64_t v390 = (unint64_t)v410.i64[1] >> -(v413 & 0x3F);
          if ((v413 & 0x3F) == 0) {
            unint64_t v390 = 0;
          }
        }
        char v395 = 0;
        unint64_t v394 = v413 + v411.i64[1];
        uint64_t v391 = 1;
      }
      while ((v396 & 1) != 0);
      uint64_t v414 = 0;
      char v415 = 1;
      v416.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v416.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v417.i64[0] = -1;
      v417.i64[1] = -1;
      do
      {
        char v418 = v415;
        uint8x16_t v419 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v417, (uint8x16_t)vaddq_s8(v494, v416)), *(&v486 + v414));
        int16x8_t v420 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v494.i8);
        int16x8_t v421 = (int16x8_t)vmovl_high_u8((uint8x16_t)v494);
        uint16x8_t v422 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v419.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v420)), (int16x8_t)vshlq_u16(vmovl_high_u8(v419), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v421)));
        uint16x8_t v423 = (uint16x8_t)vpaddq_s16(v420, v421);
        int32x4_t v424 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v423.i8);
        int32x4_t v425 = (int32x4_t)vmovl_high_u16(v423);
        int32x4_t v426 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v422.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v424)), (int32x4_t)vshlq_u32(vmovl_high_u16(v422), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v425)));
        int32x4_t v427 = vpaddq_s32(v424, v425);
        v428.i64[0] = v426.u32[0];
        v428.i64[1] = v426.u32[1];
        uint64x2_t v429 = (uint64x2_t)v428;
        v428.i64[0] = v426.u32[2];
        v428.i64[1] = v426.u32[3];
        uint64x2_t v430 = (uint64x2_t)v428;
        v428.i64[0] = v427.u32[0];
        v428.i64[1] = v427.u32[1];
        int64x2_t v431 = v428;
        v428.i64[0] = v427.u32[2];
        v428.i64[1] = v427.u32[3];
        int64x2_t v432 = vpaddq_s64((int64x2_t)vshlq_u64(v429, (uint64x2_t)vzip1q_s64((int64x2_t)0, v431)), (int64x2_t)vshlq_u64(v430, (uint64x2_t)vzip1q_s64((int64x2_t)0, v428)));
        int64x2_t v433 = vpaddq_s64(v431, v428);
        unint64_t v434 = (v432.i64[0] << v394) | v390;
        if (v433.i64[0] + (v394 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v272 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v434;
          unint64_t v434 = (unint64_t)v432.i64[0] >> -(v394 & 0x3F);
          if ((v394 & 0x3F) == 0) {
            unint64_t v434 = 0;
          }
        }
        unint64_t v435 = v433.i64[0] + v394;
        unint64_t v390 = v434 | (v432.i64[1] << v435);
        if ((v435 & 0x3F) + v433.i64[1] >= 0x40)
        {
          *(void *)((char *)v272 + ((v435 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
          unint64_t v390 = (unint64_t)v432.i64[1] >> -(v435 & 0x3F);
          if ((v435 & 0x3F) == 0) {
            unint64_t v390 = 0;
          }
        }
        char v415 = 0;
        unint64_t v394 = v435 + v433.i64[1];
        uint64_t v414 = 1;
      }
      while ((v418 & 1) != 0);
      uint64_t v436 = 0;
      char v437 = 1;
      v438.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v438.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v439.i64[0] = -1;
      v439.i64[1] = -1;
      do
      {
        char v440 = v437;
        uint8x16_t v441 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v439, (uint8x16_t)vaddq_s8(v495, v438)), *(&v488 + v436));
        int16x8_t v442 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v495.i8);
        int16x8_t v443 = (int16x8_t)vmovl_high_u8((uint8x16_t)v495);
        uint16x8_t v444 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v441.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v442)), (int16x8_t)vshlq_u16(vmovl_high_u8(v441), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v443)));
        uint16x8_t v445 = (uint16x8_t)vpaddq_s16(v442, v443);
        int32x4_t v446 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v445.i8);
        int32x4_t v447 = (int32x4_t)vmovl_high_u16(v445);
        int32x4_t v448 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v444.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v446)), (int32x4_t)vshlq_u32(vmovl_high_u16(v444), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v447)));
        int32x4_t v449 = vpaddq_s32(v446, v447);
        v450.i64[0] = v448.u32[0];
        v450.i64[1] = v448.u32[1];
        uint64x2_t v451 = (uint64x2_t)v450;
        v450.i64[0] = v448.u32[2];
        v450.i64[1] = v448.u32[3];
        uint64x2_t v452 = (uint64x2_t)v450;
        v450.i64[0] = v449.u32[0];
        v450.i64[1] = v449.u32[1];
        int64x2_t v453 = v450;
        v450.i64[0] = v449.u32[2];
        v450.i64[1] = v449.u32[3];
        int64x2_t v454 = vpaddq_s64((int64x2_t)vshlq_u64(v451, (uint64x2_t)vzip1q_s64((int64x2_t)0, v453)), (int64x2_t)vshlq_u64(v452, (uint64x2_t)vzip1q_s64((int64x2_t)0, v450)));
        int64x2_t v455 = vpaddq_s64(v453, v450);
        unint64_t v456 = (v454.i64[0] << v394) | v390;
        if (v455.i64[0] + (v394 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v272 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v456;
          unint64_t v456 = (unint64_t)v454.i64[0] >> -(v394 & 0x3F);
          if ((v394 & 0x3F) == 0) {
            unint64_t v456 = 0;
          }
        }
        unint64_t v457 = v455.i64[0] + v394;
        unint64_t v390 = v456 | (v454.i64[1] << v457);
        if ((v457 & 0x3F) + v455.i64[1] >= 0x40)
        {
          *(void *)((char *)v272 + ((v457 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
          unint64_t v390 = (unint64_t)v454.i64[1] >> -(v457 & 0x3F);
          if ((v457 & 0x3F) == 0) {
            unint64_t v390 = 0;
          }
        }
        char v437 = 0;
        unint64_t v394 = v457 + v455.i64[1];
        uint64_t v436 = 1;
      }
      while ((v440 & 1) != 0);
      if ((v394 & 0x3F) != 0) {
        *(void *)((char *)v272 + ((v394 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v390;
      }
      unint64_t result = (v394 - v273 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v106 = *MEMORY[0x263EF8340];
  long long v104 = 0u;
  long long v105 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  uint64_t v11 = a6;
  if (a5 > 1)
  {
    uint64_t v21 = a5 & 0xFE;
    if (a5 == v21)
    {
      uint64_t v22 = 0;
      int8x16_t v23 = (int *)(a3 + 4);
      int8x16_t v24 = &v99;
      do
      {
        int8x16_t v25 = v24;
        int8x16_t v26 = v23;
        uint64_t v27 = a5;
        do
        {
          int v28 = *v26;
          *((_DWORD *)v25 - 4) = *(v26 - 1);
          *(_DWORD *)int8x16_t v25 = v28;
          v25 += 2;
          v26 += 2;
          v27 -= 2;
        }
        while (v27);
        ++v22;
        int8x16_t v23 = (int *)((char *)v23 + a4);
        int8x16_t v24 = (long long *)((char *)v24 + 4);
      }
      while (v22 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (int *)(a3 + 4);
      int8x16_t v31 = &v99;
      int8x16_t v32 = (char *)&v98 + ((16 * a5) & 0xFE0);
      do
      {
        int8x16_t v33 = v31;
        int8x16_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          int v36 = *v34;
          *((_DWORD *)v33 - 4) = *(v34 - 1);
          *(_DWORD *)int8x16_t v33 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 2;
        }
        while (v35);
        int8x16_t v37 = (int *)(a3 + v29 * a4 + 4 * v21);
        int8x16_t v38 = v32;
        uint64_t v39 = a5 - v21;
        do
        {
          int v40 = *v37++;
          *int8x16_t v38 = v40;
          v38 += 4;
          --v39;
        }
        while (v39);
        ++v29;
        int8x16_t v30 = (int *)((char *)v30 + a4);
        int8x16_t v31 = (long long *)((char *)v31 + 4);
        v32 += 4;
      }
      while (v29 != v11);
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v12 = a6 & 0xFE;
    int8x16_t v13 = (int *)(a3 + 1);
    int8x16_t v14 = (_DWORD *)&v98 + 1;
    uint64_t v15 = v12;
    do
    {
      int v16 = *(int *)((char *)v13 - 1);
      int v17 = *v13;
      int8x16_t v13 = (int *)((char *)v13 + 2);
      *(v14 - 1) = v16;
      *int8x16_t v14 = v17;
      v14 += 2;
      v15 -= 2;
    }
    while (v15);
    if (v12 != a6)
    {
LABEL_7:
      uint64_t v18 = a6 - v12;
      int8x16_t v19 = (_DWORD *)&v98 + v12;
      int8x16_t v20 = (_DWORD *)(a3 + v12 * a4);
      do
      {
        *v19++ = *v20;
        int8x16_t v20 = (_DWORD *)((char *)v20 + a4);
        --v18;
      }
      while (v18);
    }
  }
  uint16x4_t v41 = (uint16x4_t)vmovl_u8((uint8x8_t)v98).u64[0];
  uint32x4_t v42 = vmovl_u16(v41);
  v41.i32[0] = v99;
  uint32x4_t v43 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v41));
  uint32x4_t v90 = v42;
  uint32x4_t v91 = v43;
  v43.i32[0] = DWORD1(v98);
  v43.i64[0] = vmovl_u8(*(uint8x8_t *)v43.i8).u64[0];
  uint32x4_t v44 = vmovl_u16(*(uint16x4_t *)v43.i8);
  v43.i32[0] = DWORD1(v99);
  uint32x4_t v45 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v43.i8));
  uint32x4_t v92 = v44;
  uint32x4_t v93 = v45;
  v45.i32[0] = v100;
  v45.i64[0] = vmovl_u8(*(uint8x8_t *)v45.i8).u64[0];
  uint32x4_t v46 = vmovl_u16(*(uint16x4_t *)v45.i8);
  v45.i32[0] = v101;
  uint32x4_t v47 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v45.i8));
  uint32x4_t v94 = v46;
  uint32x4_t v95 = v47;
  v47.i32[0] = DWORD1(v100);
  v47.i64[0] = vmovl_u8(*(uint8x8_t *)v47.i8).u64[0];
  uint32x4_t v48 = vmovl_u16(*(uint16x4_t *)v47.i8);
  v47.i32[0] = DWORD1(v101);
  uint32x4_t v96 = v48;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v47.i8));
  if (a5 >= 4) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = a5;
  }
  if (a5 >= 4) {
    unsigned int v50 = a5 - 4;
  }
  else {
    unsigned int v50 = 0;
  }
  if (a6 >= 2) {
    unsigned int v51 = 2;
  }
  else {
    unsigned int v51 = a6;
  }
  if (a6 >= 2) {
    unsigned int v52 = a6 - 2;
  }
  else {
    unsigned int v52 = 0;
  }
  char v53 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v90, a7, v49, v51);
  v54.i32[0] = DWORD2(v98);
  uint16x4_t v55 = (uint16x4_t)vmovl_u8(v54).u64[0];
  uint32x4_t v56 = vmovl_u16(v55);
  v55.i32[0] = DWORD2(v99);
  uint32x4_t v57 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v55));
  uint32x4_t v90 = v56;
  uint32x4_t v91 = v57;
  v57.i32[0] = HIDWORD(v98);
  v57.i64[0] = vmovl_u8(*(uint8x8_t *)v57.i8).u64[0];
  uint32x4_t v58 = vmovl_u16(*(uint16x4_t *)v57.i8);
  v57.i32[0] = HIDWORD(v99);
  uint32x4_t v59 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v57.i8));
  uint32x4_t v92 = v58;
  uint32x4_t v93 = v59;
  v59.i32[0] = DWORD2(v100);
  v59.i64[0] = vmovl_u8(*(uint8x8_t *)v59.i8).u64[0];
  uint32x4_t v60 = vmovl_u16(*(uint16x4_t *)v59.i8);
  v59.i32[0] = DWORD2(v101);
  uint32x4_t v61 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v59.i8));
  uint32x4_t v94 = v60;
  uint32x4_t v95 = v61;
  v61.i32[0] = HIDWORD(v100);
  v61.i64[0] = vmovl_u8(*(uint8x8_t *)v61.i8).u64[0];
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)v61.i8);
  v61.i32[0] = HIDWORD(v101);
  uint32x4_t v96 = v62;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v61.i8));
  if (a6 >= 4) {
    unsigned int v63 = 2;
  }
  else {
    unsigned int v63 = v52;
  }
  int v64 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v90, a7, v49, v63);
  v65.i32[0] = v102;
  uint16x4_t v66 = (uint16x4_t)vmovl_u8(v65).u64[0];
  uint32x4_t v67 = vmovl_u16(v66);
  v66.i32[0] = v103;
  uint32x4_t v68 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v66));
  uint32x4_t v90 = v67;
  uint32x4_t v91 = v68;
  v68.i32[0] = DWORD1(v102);
  v68.i64[0] = vmovl_u8(*(uint8x8_t *)v68.i8).u64[0];
  uint32x4_t v69 = vmovl_u16(*(uint16x4_t *)v68.i8);
  v68.i32[0] = DWORD1(v103);
  uint32x4_t v70 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v68.i8));
  uint32x4_t v92 = v69;
  uint32x4_t v93 = v70;
  v70.i32[0] = v104;
  v70.i64[0] = vmovl_u8(*(uint8x8_t *)v70.i8).u64[0];
  uint32x4_t v71 = vmovl_u16(*(uint16x4_t *)v70.i8);
  v70.i32[0] = v105;
  uint32x4_t v72 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v70.i8));
  uint32x4_t v94 = v71;
  uint32x4_t v95 = v72;
  v72.i32[0] = DWORD1(v104);
  v72.i64[0] = vmovl_u8(*(uint8x8_t *)v72.i8).u64[0];
  uint32x4_t v73 = vmovl_u16(*(uint16x4_t *)v72.i8);
  v72.i32[0] = DWORD1(v105);
  uint32x4_t v96 = v73;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v72.i8));
  if (a5 >= 8) {
    unsigned int v74 = 4;
  }
  else {
    unsigned int v74 = v50;
  }
  int v75 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v90, a7, v74, v51);
  v76.i32[0] = DWORD2(v102);
  uint16x4_t v77 = (uint16x4_t)vmovl_u8(v76).u64[0];
  uint32x4_t v78 = vmovl_u16(v77);
  v77.i32[0] = DWORD2(v103);
  uint32x4_t v79 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v77));
  uint32x4_t v90 = v78;
  uint32x4_t v91 = v79;
  v79.i32[0] = HIDWORD(v102);
  v79.i64[0] = vmovl_u8(*(uint8x8_t *)v79.i8).u64[0];
  uint32x4_t v80 = vmovl_u16(*(uint16x4_t *)v79.i8);
  v79.i32[0] = HIDWORD(v103);
  uint32x4_t v81 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v79.i8));
  uint32x4_t v92 = v80;
  uint32x4_t v93 = v81;
  v81.i32[0] = DWORD2(v104);
  v81.i64[0] = vmovl_u8(*(uint8x8_t *)v81.i8).u64[0];
  uint32x4_t v82 = vmovl_u16(*(uint16x4_t *)v81.i8);
  v81.i32[0] = DWORD2(v105);
  uint32x4_t v83 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v81.i8));
  uint32x4_t v94 = v82;
  uint32x4_t v95 = v83;
  v83.i32[0] = HIDWORD(v104);
  v83.i64[0] = vmovl_u8(*(uint8x8_t *)v83.i8).u64[0];
  uint32x4_t v84 = vmovl_u16(*(uint16x4_t *)v83.i8);
  v83.i32[0] = HIDWORD(v105);
  uint32x4_t v96 = v84;
  uint32x4_t v97 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v83.i8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v90, a7, v74, v63);
  if (v75) {
    char v86 = 4;
  }
  else {
    char v86 = 0;
  }
  if (v64) {
    char v87 = 2;
  }
  else {
    char v87 = 0;
  }
  if (result) {
    char v88 = -8;
  }
  else {
    char v88 = -16;
  }
  *a2 = v88 | v86 | v53 | v87;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  unint64_t v8 = 0;
  uint64_t v331 = *MEMORY[0x263EF8340];
  BOOL v9 = a5 < 2;
  BOOL v10 = a4 < 4 || a5 < 2;
  BOOL v298 = v10;
  BOOL v11 = a4 < 4 || a5 == 0;
  BOOL v297 = v11;
  BOOL v12 = a4 < 3 || a5 < 2;
  BOOL v296 = v12;
  BOOL v13 = a4 < 3 || a5 == 0;
  BOOL v295 = v13;
  if (a4) {
    BOOL v14 = a5 < 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (a4 < 2) {
    BOOL v9 = 1;
  }
  BOOL v293 = v9;
  BOOL v294 = v14;
  BOOL v15 = a4 < 2 || a5 == 0;
  do
  {
    *(unsigned int *)((char *)&v327 + v8 * 4) = 8;
    v315[v8] = 0;
    *(_DWORD *)((char *)&v314[2] + v8 * 4) = 128;
    uint64_t v22 = (unsigned int *)(a2 + v8 * 4);
    if (a3 == 1)
    {
      int8x16_t v24 = &v317[v8];
      if ((*v22 ^ 0x80) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = *v22 ^ 0x80;
      }
      *int8x16_t v24 = v23;
      if ((v22[4] ^ 0x80) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v22[4] ^ 0x80;
      }
      v24[4] = v25;
      if ((v22[8] ^ 0x80) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v22[8] ^ 0x80;
      }
      v24[8] = v26;
      if ((v22[12] ^ 0x80) == 1) {
        unsigned int v27 = 0;
      }
      else {
        unsigned int v27 = v22[12] ^ 0x80;
      }
      v24[12] = v27;
      unsigned int v28 = v22[16] ^ 0x80;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
      v24[16] = v28;
      unsigned int v29 = v22[20] ^ 0x80;
      if (v29 == 1) {
        unsigned int v29 = 0;
      }
      v24[20] = v29;
      if ((v22[24] ^ 0x80) == 1) {
        unsigned int v30 = 0;
      }
      else {
        unsigned int v30 = v22[24] ^ 0x80;
      }
      v24[24] = v30;
      int v32 = v22[28] ^ 0x80;
      if (v32 == 1) {
        unsigned int v31 = 0;
      }
      else {
        unsigned int v31 = v32;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v23 = *v22 ^ 0x80;
      int8x16_t v24 = &v317[v8];
      *int8x16_t v24 = v23;
      unsigned int v25 = v22[4] ^ 0x80;
      v24[4] = v25;
      unsigned int v26 = v22[8] ^ 0x80;
      v24[8] = v26;
      unsigned int v27 = v22[12] ^ 0x80;
      v24[12] = v27;
      unsigned int v28 = v22[16] ^ 0x80;
      v24[16] = v28;
      unsigned int v29 = v22[20] ^ 0x80;
      v24[20] = v29;
      unsigned int v30 = v22[24] ^ 0x80;
      v24[24] = v30;
      unsigned int v31 = v22[28] ^ 0x80;
    }
    else
    {
      unsigned int v23 = *v22;
      int8x16_t v24 = &v317[v8];
      *int8x16_t v24 = *v22;
      unsigned int v25 = v22[4];
      v24[4] = v25;
      unsigned int v26 = v22[8];
      v24[8] = v26;
      unsigned int v27 = v22[12];
      v24[12] = v27;
      unsigned int v28 = v22[16];
      v24[16] = v28;
      unsigned int v29 = v22[20];
      v24[20] = v29;
      unsigned int v30 = v22[24];
      v24[24] = v30;
      unsigned int v31 = v22[28];
    }
    v24[28] = v31;
    int8x16_t v33 = &v322[v8 + 4];
    v322[v8 + 4] = v23;
    *(int *)((char *)&v323 + v8 * 4) = v23;
    v322[v8] = 0;
    unsigned int v34 = v23;
    if (v15)
    {
      if (v294) {
        goto LABEL_61;
      }
    }
    else
    {
      if (v25 < v23)
      {
        v322[v8] = 1;
        *(int *)((char *)&v323 + v8 * 4) = v25;
        unsigned int v34 = v25;
      }
      if (v23 >= v25) {
        uint64_t v35 = &v322[v8 + 4];
      }
      else {
        uint64_t v35 = &v317[v8 + 4];
      }
      unsigned int v23 = *v35;
      unsigned int *v33 = *v35;
      if (v294)
      {
LABEL_61:
        if (v293) {
          goto LABEL_62;
        }
        goto LABEL_79;
      }
    }
    if (v26 < v34)
    {
      v322[v8] = 2;
      *(int *)((char *)&v323 + v8 * 4) = v26;
      unsigned int v34 = v26;
    }
    if (v23 >= v26) {
      int v36 = &v322[v8 + 4];
    }
    else {
      int v36 = &v317[v8 + 8];
    }
    unsigned int v23 = *v36;
    unsigned int *v33 = *v36;
    if (v293)
    {
LABEL_62:
      if (v295) {
        goto LABEL_63;
      }
      goto LABEL_85;
    }
LABEL_79:
    if (v27 < v34)
    {
      v322[v8] = 3;
      *(int *)((char *)&v323 + v8 * 4) = v27;
      unsigned int v34 = v27;
    }
    if (v23 >= v27) {
      int8x16_t v37 = &v322[v8 + 4];
    }
    else {
      int8x16_t v37 = &v317[v8 + 12];
    }
    unsigned int v23 = *v37;
    unsigned int *v33 = *v37;
    if (v295)
    {
LABEL_63:
      if (v297) {
        goto LABEL_64;
      }
      goto LABEL_91;
    }
LABEL_85:
    if (v28 < v34)
    {
      v322[v8] = 4;
      *(int *)((char *)&v323 + v8 * 4) = v28;
      unsigned int v34 = v28;
    }
    if (v23 >= v28) {
      int8x16_t v38 = &v322[v8 + 4];
    }
    else {
      int8x16_t v38 = &v317[v8 + 16];
    }
    unsigned int v23 = *v38;
    unsigned int *v33 = *v38;
    if (v297)
    {
LABEL_64:
      if (v296) {
        goto LABEL_65;
      }
      goto LABEL_96;
    }
LABEL_91:
    if (v29 < v34)
    {
      v322[v8] = 5;
      *(int *)((char *)&v323 + v8 * 4) = v29;
      unsigned int v34 = v29;
    }
    uint64_t v39 = &v317[v8 + 20];
    if (v23 >= v29) {
      uint64_t v39 = &v322[v8 + 4];
    }
    unsigned int v23 = *v39;
    unsigned int *v33 = *v39;
    if (v296)
    {
LABEL_65:
      if (v298) {
        goto LABEL_106;
      }
LABEL_101:
      if (v31 < v34)
      {
        v322[v8] = 7;
        *(int *)((char *)&v323 + v8 * 4) = v31;
        unsigned int v34 = v31;
      }
      uint16x4_t v41 = &v317[v8 + 28];
      if (v23 >= v31) {
        uint16x4_t v41 = &v322[v8 + 4];
      }
      unsigned int v23 = *v41;
      unsigned int *v33 = *v41;
      goto LABEL_106;
    }
LABEL_96:
    if (v30 < v34)
    {
      v322[v8] = 6;
      *(int *)((char *)&v323 + v8 * 4) = v30;
      unsigned int v34 = v30;
    }
    int v40 = &v317[v8 + 24];
    if (v23 >= v30) {
      int v40 = &v322[v8 + 4];
    }
    unsigned int v23 = *v40;
    unsigned int *v33 = *v40;
    if (!v298) {
      goto LABEL_101;
    }
LABEL_106:
    int v42 = __clz(v23 - v34);
    unsigned int v43 = 32 - v42;
    if (v42 > 32) {
      unsigned int v43 = -1;
    }
    if (v34) {
      BOOL v44 = v34 == 255;
    }
    else {
      BOOL v44 = 1;
    }
    int v45 = !v44;
    if (v43 < 2 && v23 == v34) {
      unsigned int v47 = v45;
    }
    else {
      unsigned int v47 = v43 + 1;
    }
    *(unsigned int *)((char *)&v318 + v8 * 4) = v47;
    if ((a3 | 2) != 3)
    {
      BOOL v48 = 0;
LABEL_126:
      if (v47 <= 5) {
        goto LABEL_127;
      }
      goto LABEL_21;
    }
    BOOL v48 = 0;
    if (v23 >= 0x80)
    {
      if (v34 <= 0x7F)
      {
        BOOL v48 = kDQuadParamTable[10 * v47 + 8] == 0;
        if (v47 <= 5) {
          goto LABEL_127;
        }
        goto LABEL_21;
      }
      goto LABEL_126;
    }
    if (v47 <= 5)
    {
LABEL_127:
      if (!v48) {
        goto LABEL_32;
      }
    }
LABEL_21:
    unsigned int v16 = kDQuadParamTable[10 * v47 + 4] - v48;
    if (v48) {
      int v17 = 0;
    }
    else {
      int v17 = -2;
    }
    if (v16 >= 8) {
      int v18 = 0;
    }
    else {
      int v18 = v34 & ~(-1 << (8 - v16));
    }
    int v19 = v18 + v17;
    unsigned int v20 = __clz(v19 + v23 - v34);
    if (v19 >= 1 && v20 < v42) {
      *(unsigned int *)((char *)&v318 + v8 * 4) = v47 + 1;
    }
LABEL_32:
    ++v8;
  }
  while (v8 != 4);
  v314[0] = 0;
  v314[1] = 0;
  v313[0] = 0;
  v313[1] = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v315, &v318, v314, v313);
  int v49 = 0;
  if (a4) {
    BOOL v50 = a5 == 0;
  }
  else {
    BOOL v50 = 1;
  }
  int v51 = v50;
  unint64_t v52 = 0x30u;
  while (2)
  {
    int v54 = *(_DWORD *)((char *)v313 + v52);
    unsigned int v55 = v317[v52 / 4 + 20];
    uint32x4_t v56 = &kDQuadParamTable[160 * v54 + 10 * v55];
    unint64_t v57 = *((void *)v56 + 1);
    int v59 = v56[4];
    int v58 = v56[5];
    *(_DWORD *)((char *)&v302 + v52) = v59;
    uint32x4_t v60 = (char *)&v305 + v52;
    *(_DWORD *)((char *)&v301 + v52) = v58;
    int v61 = *(_DWORD *)((char *)&v303 + v52) - *(unsigned int *)((char *)&v305 + v52);
    if (v61 < 0)
    {
      if (kDQuadParamTable[160 * v54 + 7 + 10 * v55] < (signed int)(*(unsigned int *)((char *)&v305 + v52)
                                                                   - *(_DWORD *)((char *)&v303 + v52)))
      {
        *((_DWORD *)v60 - 12) = --v58;
        if (!kDQuadParamTable[160 * v54 + 8 + 10 * v55])
        {
          int v62 = -1;
LABEL_145:
          *(_DWORD *)((char *)&v302 + v52) = v62 + v59;
        }
      }
    }
    else if (v61)
    {
      v58 += v61;
      *((_DWORD *)v60 - 12) = v58;
      int v62 = v61;
      goto LABEL_145;
    }
    if (v54 == 5)
    {
      int v63 = (v61 < 2) | v49;
      if (v55 == 1) {
        int v49 = v63;
      }
    }
    if (a3 == 4)
    {
      if (v54 == 3) {
        int v64 = 31744;
      }
      else {
        int v64 = 0;
      }
      if (v54 == 4) {
        int v65 = 2139095040;
      }
      else {
        int v65 = v64;
      }
      int v66 = 1 << (v322[v52 / 4] - 1);
      if (v51)
      {
        if (v15) {
          goto LABEL_160;
        }
LABEL_174:
        int v70 = *(_DWORD *)((char *)&v316[6] + v52);
        BOOL v72 = (v65 & ~v70) == 0 || v70 == v66;
        v49 |= v72;
        if (!v294) {
          goto LABEL_181;
        }
LABEL_161:
        if (v293) {
          goto LABEL_162;
        }
LABEL_188:
        unsigned int v76 = v317[v52 / 4];
        BOOL v78 = (v65 & ~v76) == 0 || v76 == v66;
        v49 |= v78;
        if (!v295) {
          goto LABEL_195;
        }
LABEL_163:
        if (v297) {
          goto LABEL_164;
        }
LABEL_202:
        unsigned int v82 = v317[v52 / 4 + 8];
        BOOL v84 = (v65 & ~v82) == 0 || v82 == v66;
        v49 |= v84;
        if (!v296) {
          goto LABEL_209;
        }
LABEL_165:
        if (!v298) {
          goto LABEL_216;
        }
      }
      else
      {
        int v67 = *(_DWORD *)((char *)&v316[5] + v52);
        BOOL v69 = (v65 & ~v67) == 0 || v67 == v66;
        v49 |= v69;
        if (!v15) {
          goto LABEL_174;
        }
LABEL_160:
        if (v294) {
          goto LABEL_161;
        }
LABEL_181:
        int v73 = *(_DWORD *)((char *)&v316[7] + v52);
        BOOL v75 = (v65 & ~v73) == 0 || v73 == v66;
        v49 |= v75;
        if (!v293) {
          goto LABEL_188;
        }
LABEL_162:
        if (v295) {
          goto LABEL_163;
        }
LABEL_195:
        unsigned int v79 = v317[v52 / 4 + 4];
        BOOL v81 = (v65 & ~v79) == 0 || v79 == v66;
        v49 |= v81;
        if (!v297) {
          goto LABEL_202;
        }
LABEL_164:
        if (v296) {
          goto LABEL_165;
        }
LABEL_209:
        unsigned int v85 = v317[v52 / 4 + 12];
        BOOL v87 = (v65 & ~v85) == 0 || v85 == v66;
        v49 |= v87;
        if (!v298)
        {
LABEL_216:
          unsigned int v88 = v317[v52 / 4 + 16];
          BOOL v90 = (v65 & ~v88) == 0 || v88 == v66;
          v49 |= v90;
        }
      }
    }
    if (v57 >> v58 > 1 << *(_DWORD *)((char *)&AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)15,(AGXTextureFootprint)3>::lossyFallBackInfo
                                       + v52))
      int v53 = 1;
    else {
      int v53 = v51;
    }
    v49 |= v53;
    v52 += 4;
    if (v52 != 64) {
      continue;
    }
    break;
  }
  uint64_t v91 = 0;
  uint64_t v303 = 0;
  uint64_t v304 = 0;
  long long v301 = 0u;
  long long v302 = 0u;
  memset(v300, 0, sizeof(v300));
  uint32x4_t v92 = v317;
  uint32x4_t v93 = v316;
  do
  {
    uint64_t v94 = 0;
    unsigned int v95 = 0;
    unsigned int v96 = *(&v327 + v91);
    if (v96 >= *(&v309 + v91)) {
      unsigned int v97 = *(&v309 + v91);
    }
    else {
      unsigned int v97 = *(&v327 + v91);
    }
    *(&v309 + v91) = v97;
    long long v98 = &kDQuadParamTable[160 * v315[v91] + 10 * *(&v318 + v91)];
    unsigned int v99 = *(&v305 + v91);
    if (v98[5]) {
      unsigned int v100 = v96;
    }
    else {
      unsigned int v100 = 0;
    }
    if (v100 < v99) {
      unsigned int v99 = v100;
    }
    int v101 = *(&v323 + v91) & (-1 << (v96 - v97));
    long long v102 = &v317[v91];
    int v103 = *v102 - v101;
    long long v104 = &v316[2 * v91];
    if (v51) {
      int v103 = 0;
    }
    int v105 = v102[4] - v101;
    if (v15) {
      int v105 = 0;
    }
    *long long v104 = v103;
    v104[1] = v105;
    int v106 = v102[8] - v101;
    if (v294) {
      int v106 = 0;
    }
    int v107 = v102[12] - v101;
    if (v293) {
      int v107 = 0;
    }
    v104[2] = v106;
    v104[3] = v107;
    int v108 = v102[16] - v101;
    if (v295) {
      int v108 = 0;
    }
    int v109 = v102[20] - v101;
    if (v297) {
      int v109 = 0;
    }
    v104[4] = v108;
    v104[5] = v109;
    uint64_t v110 = -1 << v96;
    *(&v305 + v91) = v99;
    unint64_t v111 = *((void *)v98 + 1);
    *((_DWORD *)&v303 + v91) = v101;
    unint64_t v112 = v111 >> v99;
    int v113 = v102[24] - v101;
    if (v296) {
      int v113 = 0;
    }
    int v114 = v102[28] - v101;
    if (v298) {
      int v114 = 0;
    }
    v104[6] = v113;
    v104[7] = v114;
    if (v112 <= 1) {
      unint64_t v115 = 1;
    }
    else {
      unint64_t v115 = v112;
    }
    uint64_t v116 = 4 * v322[v91];
    int8x16_t v117 = &byte_242EA911D;
    do
    {
      if (v116 != v94)
      {
        if (v99) {
          unint64_t v118 = *(unsigned int *)((char *)v93 + v94) / v115;
        }
        else {
          LODWORD(v118) = 0;
        }
        int8x16_t v119 = (int *)v300 + 7 * v91 + v95;
        int *v119 = v118;
        if (v112 >= 2)
        {
          unint64_t v120 = *(unsigned int *)((char *)v93 + v94);
          if (v120)
          {
            if (v120 / v115 * v115 == v120 && ((v120 / v115) & 1) != 0)
            {
              if (v101 || v118 != 1)
              {
                if ((a3 | 2) != 3
                  || (uint64_t v122 = v92[v94], v123 = *((unsigned int *)&v314[2] + v91), v122 != v123)
                  && ((a3 | 2) != 3 || v115 + v123 != v122))
                {
                  LODWORD(v118) = v118 - 1;
                  int *v119 = v118;
                }
              }
              else
              {
                LODWORD(v118) = 1;
              }
            }
          }
        }
        if ((unint64_t)v118 >> v99 || v92[v94] == ~v110) {
          int *v119 = ~(-1 << v99);
        }
        if (*v117 >= a5 || *(v117 - 1) >= a4) {
          int *v119 = 0;
        }
        ++v95;
      }
      v94 += 4;
      v117 += 2;
    }
    while (v94 != 32);
    ++v91;
    v93 += 2;
    ++v92;
  }
  while (v91 != 4);
  int8x16_t v124 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v125 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (v49)
  {
    uint64_t v126 = 0;
    uint64_t v127 = 0;
    unsigned int v128 = v327;
    unsigned int v129 = v328;
    uint64_t v130 = v327 - 4;
    uint64_t v131 = v328 - 4;
    unsigned int v133 = v329;
    unsigned int v132 = v330;
    uint64_t v134 = v329 - 4;
    uint64_t v135 = v330 - 4;
    uint64_t v136 = 8 * (a1 & 7);
    while (1)
    {
      int8x16_t v137 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v126;
      BOOL v138 = v137[1] >= a5 || *v137 >= a4;
      char v139 = v138;
      if (v138)
      {
        unint64_t v140 = 0;
        if (v130 > 0x100) {
          goto LABEL_301;
        }
      }
      else
      {
        unint64_t v140 = (unint64_t)v317[4 * v126] >> 4;
        if (v130 > 0x100) {
          goto LABEL_301;
        }
      }
      if (v128 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v130) <= 0x80)
      {
        uint64_t v141 = 0;
        unint64_t v142 = v128 - 4;
        do
        {
          unint64_t v143 = 64 - v136;
          if (64 - v136 >= v142) {
            unint64_t v143 = v142;
          }
          v124[v127] |= ((v140 >> v141) & ~(-1 << v143)) << v136;
          v141 += v143;
          unint64_t v144 = v143 + v136;
          v127 += v144 >> 6;
          uint64_t v136 = v144 & 0x3F;
          v142 -= v143;
        }
        while (v142);
      }
LABEL_301:
      if (v139)
      {
        unint64_t v145 = 0;
        if (v131 > 0x100) {
          goto LABEL_311;
        }
      }
      else
      {
        unint64_t v145 = (unint64_t)v317[4 * v126 + 1] >> 4;
        if (v131 > 0x100) {
          goto LABEL_311;
        }
      }
      if (v129 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v131) <= 0x80)
      {
        uint64_t v146 = 0;
        unint64_t v147 = v129 - 4;
        do
        {
          unint64_t v148 = 64 - v136;
          if (64 - v136 >= v147) {
            unint64_t v148 = v147;
          }
          v124[v127] |= ((v145 >> v146) & ~(-1 << v148)) << v136;
          v146 += v148;
          unint64_t v149 = v148 + v136;
          v127 += v149 >> 6;
          uint64_t v136 = v149 & 0x3F;
          v147 -= v148;
        }
        while (v147);
      }
LABEL_311:
      if (v139)
      {
        unint64_t v150 = 0;
        if (v134 > 0x100) {
          goto LABEL_321;
        }
      }
      else
      {
        unint64_t v150 = (unint64_t)v317[4 * v126 + 2] >> 4;
        if (v134 > 0x100) {
          goto LABEL_321;
        }
      }
      if (v133 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v134) <= 0x80)
      {
        uint64_t v151 = 0;
        unint64_t v152 = v133 - 4;
        do
        {
          unint64_t v153 = 64 - v136;
          if (64 - v136 >= v152) {
            unint64_t v153 = v152;
          }
          v124[v127] |= ((v150 >> v151) & ~(-1 << v153)) << v136;
          v151 += v153;
          unint64_t v154 = v153 + v136;
          v127 += v154 >> 6;
          uint64_t v136 = v154 & 0x3F;
          v152 -= v153;
        }
        while (v152);
      }
LABEL_321:
      if (v139)
      {
        unint64_t v155 = 0;
        if (v135 <= 0x100) {
          goto LABEL_325;
        }
      }
      else
      {
        unint64_t v155 = (unint64_t)v317[4 * v126 + 3] >> 4;
        if (v135 <= 0x100)
        {
LABEL_325:
          if (v132 != 4 && (unint64_t)(v136 - v125 + (v127 << 6) + v135) <= 0x80)
          {
            uint64_t v156 = 0;
            unint64_t v157 = v132 - 4;
            do
            {
              unint64_t v158 = 64 - v136;
              if (64 - v136 >= v157) {
                unint64_t v158 = v157;
              }
              v124[v127] |= ((v155 >> v156) & ~(-1 << v158)) << v136;
              v156 += v158;
              unint64_t v159 = v158 + v136;
              v127 += v159 >> 6;
              uint64_t v136 = v159 & 0x3F;
              v157 -= v158;
            }
            while (v157);
          }
        }
      }
      if (++v126 == 8) {
        return v49 & 1;
      }
    }
  }
  unsigned int v160 = v318;
  char v161 = v323 | v318;
  if (v323 | v318)
  {
    char v161 = v318 - 2;
    if (v318 > 2)
    {
      unsigned int v164 = 0;
      unsigned int v163 = 0;
      char v162 = 1;
    }
    else
    {
      char v161 = 0;
      char v162 = 0;
      unsigned int v163 = v318 + 1;
      unsigned int v164 = 2;
    }
  }
  else
  {
    unsigned int v163 = 0;
    char v162 = 0;
    unsigned int v164 = 2;
  }
  unint64_t v165 = ((unint64_t)(v161 & 7) << v125) | *v124;
  *int8x16_t v124 = v165;
  uint64_t v166 = v125 | 3;
  unsigned int v167 = v319;
  char v168 = v324 | v319;
  if (v324 | v319)
  {
    if (v319 < 3)
    {
      char v168 = 0;
      char v169 = 0;
      unsigned int v170 = v319 + 1;
      goto LABEL_341;
    }
    unsigned int v171 = 0;
    unsigned int v170 = 0;
    char v168 = v319 - 2;
    char v169 = 1;
  }
  else
  {
    unsigned int v170 = 0;
    char v169 = 0;
LABEL_341:
    unsigned int v171 = 2;
  }
  if ((unint64_t)(v166 - v125) <= 0x7D)
  {
    *int8x16_t v124 = ((unint64_t)(v168 & 7) << v166) | v165;
    uint64_t v166 = v125 | 6;
  }
  unsigned int v172 = v320;
  if (v325 | v320)
  {
    if (v320 < 3)
    {
      unsigned int v173 = 0;
      char v174 = 0;
      unsigned int v299 = v320 + 1;
      goto LABEL_349;
    }
    unsigned int v175 = 0;
    unsigned int v299 = 0;
    unsigned int v173 = v320 - 2;
    char v174 = 1;
  }
  else
  {
    unsigned int v173 = 0;
    unsigned int v299 = 0;
    char v174 = 0;
LABEL_349:
    unsigned int v175 = 2;
  }
  if ((unint64_t)(v166 - v125 - 126) >= 0xFFFFFFFFFFFFFF7FLL)
  {
    uint64_t v176 = 0;
    uint64_t v177 = 0;
    unint64_t v178 = 3;
    do
    {
      unint64_t v179 = 64 - v166;
      if (64 - v166 >= v178) {
        unint64_t v179 = v178;
      }
      v124[v176] |= (((unint64_t)v173 >> v177) & ~(-1 << v179)) << v166;
      v177 += v179;
      unint64_t v180 = v179 + v166;
      v176 += v180 >> 6;
      uint64_t v166 = v180 & 0x3F;
      v178 -= v179;
    }
    while (v178);
  }
  else
  {
    uint64_t v176 = 0;
  }
  unsigned int v181 = v321;
  int v182 = v326 | v321;
  LODWORD(v183) = v321 - 2;
  if (v321 >= 3)
  {
    unsigned int v184 = 0;
  }
  else
  {
    LODWORD(v183) = 0;
    unsigned int v184 = 2;
  }
  if (v321 < 3) {
    unsigned int v185 = v321 + 1;
  }
  else {
    unsigned int v185 = 0;
  }
  BOOL v186 = v182 == 0;
  if (v182) {
    unint64_t v183 = v183;
  }
  else {
    unint64_t v183 = 0;
  }
  if (v182) {
    uint64_t v187 = v184;
  }
  else {
    uint64_t v187 = 2;
  }
  if (v186) {
    unint64_t v188 = 0;
  }
  else {
    unint64_t v188 = v185;
  }
  BOOL v189 = !v186 && v321 >= 3;
  if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0x80)
  {
    uint64_t v190 = 0;
    unint64_t v191 = 3;
    do
    {
      unint64_t v192 = 64 - v166;
      if (64 - v166 >= v191) {
        unint64_t v192 = v191;
      }
      v124[v176] |= ((v183 >> v190) & ~(-1 << v192)) << v166;
      v190 += v192;
      unint64_t v193 = v192 + v166;
      v176 += v193 >> 6;
      uint64_t v166 = v193 & 0x3F;
      v191 -= v192;
    }
    while (v191);
  }
  if (v162)
  {
    int v194 = 12;
    if (v169) {
      goto LABEL_395;
    }
LABEL_389:
    unint64_t v199 = v171;
    if (v166 - v125 + (v176 << 6) + (unint64_t)v171 <= 0x80)
    {
      uint64_t v200 = 0;
      do
      {
        unint64_t v201 = 64 - v166;
        if (64 - v166 >= v199) {
          unint64_t v201 = v199;
        }
        v124[v176] |= (((unint64_t)v170 >> v200) & ~(-1 << v201)) << v166;
        v200 += v201;
        unint64_t v202 = v201 + v166;
        v176 += v202 >> 6;
        uint64_t v166 = v202 & 0x3F;
        v199 -= v201;
      }
      while (v199);
    }
    v194 += v171;
  }
  else
  {
    unint64_t v195 = v164;
    if (v166 - v125 + (v176 << 6) + (unint64_t)v164 <= 0x80)
    {
      uint64_t v196 = 0;
      do
      {
        unint64_t v197 = 64 - v166;
        if (64 - v166 >= v195) {
          unint64_t v197 = v195;
        }
        v124[v176] |= (((unint64_t)v163 >> v196) & ~(-1 << v197)) << v166;
        v196 += v197;
        unint64_t v198 = v197 + v166;
        v176 += v198 >> 6;
        uint64_t v166 = v198 & 0x3F;
        v195 -= v197;
      }
      while (v195);
    }
    int v194 = v164 | 0xC;
    if ((v169 & 1) == 0) {
      goto LABEL_389;
    }
  }
LABEL_395:
  if (v174)
  {
    if (v189) {
      goto LABEL_397;
    }
LABEL_405:
    if ((unint64_t)(v166 - v125 + (v176 << 6) + v187) <= 0x80)
    {
      uint64_t v208 = 0;
      unint64_t v209 = v187;
      do
      {
        unint64_t v210 = 64 - v166;
        if (64 - v166 >= v209) {
          unint64_t v210 = v209;
        }
        v124[v176] |= ((v188 >> v208) & ~(-1 << v210)) << v166;
        v208 += v210;
        unint64_t v211 = v210 + v166;
        v176 += v211 >> 6;
        uint64_t v166 = v211 & 0x3F;
        v209 -= v210;
      }
      while (v209);
    }
    v194 += v187;
    unsigned int v203 = v327;
    if (!v160) {
      goto LABEL_411;
    }
LABEL_415:
    unsigned int v213 = v309;
    if (v309 <= 0x100 && v309 && v166 - v125 + (v176 << 6) + (unint64_t)v309 <= 0x80)
    {
      uint64_t v214 = 0;
      unint64_t v215 = v303 >> (v203 - v309);
      unint64_t v216 = v309;
      do
      {
        unint64_t v217 = 64 - v166;
        if (64 - v166 >= v216) {
          unint64_t v217 = v216;
        }
        v124[v176] |= ((v215 >> v214) & ~(-1 << v217)) << v166;
        v214 += v217;
        unint64_t v218 = v217 + v166;
        v176 += v218 >> 6;
        uint64_t v166 = v218 & 0x3F;
        v216 -= v217;
      }
      while (v216);
    }
    v194 += v213;
    unsigned int v212 = v328;
    if (v167) {
      goto LABEL_423;
    }
LABEL_524:
    if (v212 == 2 || v212 >= 0x10) {
      goto LABEL_423;
    }
  }
  else
  {
    unint64_t v204 = v175;
    if (v166 - v125 + (v176 << 6) + (unint64_t)v175 <= 0x80)
    {
      uint64_t v205 = 0;
      do
      {
        unint64_t v206 = 64 - v166;
        if (64 - v166 >= v204) {
          unint64_t v206 = v204;
        }
        v124[v176] |= (((unint64_t)v299 >> v205) & ~(-1 << v206)) << v166;
        v205 += v206;
        unint64_t v207 = v206 + v166;
        v176 += v207 >> 6;
        uint64_t v166 = v207 & 0x3F;
        v204 -= v206;
      }
      while (v204);
    }
    v194 += v175;
    if (!v189) {
      goto LABEL_405;
    }
LABEL_397:
    unsigned int v203 = v327;
    if (v160) {
      goto LABEL_415;
    }
LABEL_411:
    if (v203 == 2 || v203 >= 0x10) {
      goto LABEL_415;
    }
    unsigned int v212 = v328;
    if (!v167) {
      goto LABEL_524;
    }
LABEL_423:
    unsigned int v219 = v310;
    if (v310 <= 0x100 && v310 && v166 - v125 + (v176 << 6) + (unint64_t)v310 <= 0x80)
    {
      uint64_t v220 = 0;
      unint64_t v221 = (HIDWORD(v303) >> (v212 - v310));
      unint64_t v222 = v310;
      do
      {
        unint64_t v223 = 64 - v166;
        if (64 - v166 >= v222) {
          unint64_t v223 = v222;
        }
        v124[v176] |= ((v221 >> v220) & ~(-1 << v223)) << v166;
        v220 += v223;
        unint64_t v224 = v223 + v166;
        v176 += v224 >> 6;
        uint64_t v166 = v224 & 0x3F;
        v222 -= v223;
      }
      while (v222);
    }
    v194 += v219;
  }
  if (v172 || v329 == 2 || v329 >= 0x10)
  {
    unsigned int v225 = v311;
    if (v311 <= 0x100 && v311 && v166 - v125 + (v176 << 6) + (unint64_t)v311 <= 0x80)
    {
      uint64_t v226 = 0;
      unint64_t v227 = v304 >> (v329 - v311);
      unint64_t v228 = v311;
      do
      {
        unint64_t v229 = 64 - v166;
        if (64 - v166 >= v228) {
          unint64_t v229 = v228;
        }
        v124[v176] |= ((v227 >> v226) & ~(-1 << v229)) << v166;
        v226 += v229;
        unint64_t v230 = v229 + v166;
        v176 += v230 >> 6;
        uint64_t v166 = v230 & 0x3F;
        v228 -= v229;
      }
      while (v228);
    }
    v194 += v225;
  }
  if (v181 || v330 == 2 || v330 >= 0x10)
  {
    unsigned int v231 = v312;
    if (v312 <= 0x100 && v312 && v166 - v125 + (v176 << 6) + (unint64_t)v312 <= 0x80)
    {
      uint64_t v232 = 0;
      unint64_t v233 = (HIDWORD(v304) >> (v330 - v312));
      unint64_t v234 = v312;
      do
      {
        unint64_t v235 = 64 - v166;
        if (64 - v166 >= v234) {
          unint64_t v235 = v234;
        }
        v124[v176] |= ((v233 >> v232) & ~(-1 << v235)) << v166;
        v232 += v235;
        unint64_t v236 = v235 + v166;
        v176 += v236 >> 6;
        uint64_t v166 = v236 & 0x3F;
        v234 -= v235;
      }
      while (v234);
    }
    v194 += v231;
  }
  unint64_t v237 = v305;
  if (v305)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0x80)
    {
      uint64_t v238 = 0;
      unint64_t v239 = v322[0];
      unint64_t v240 = 3;
      do
      {
        unint64_t v241 = 64 - v166;
        if (64 - v166 >= v240) {
          unint64_t v241 = v240;
        }
        v124[v176] |= ((v239 >> v238) & ~(-1 << v241)) << v166;
        v238 += v241;
        unint64_t v242 = v241 + v166;
        v176 += v242 >> 6;
        uint64_t v166 = v242 & 0x3F;
        v240 -= v241;
      }
      while (v240);
    }
    v194 += 3;
  }
  unint64_t v243 = v306;
  if (v306)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0x80)
    {
      uint64_t v244 = 0;
      unint64_t v245 = v322[1];
      unint64_t v246 = 3;
      do
      {
        unint64_t v247 = 64 - v166;
        if (64 - v166 >= v246) {
          unint64_t v247 = v246;
        }
        v124[v176] |= ((v245 >> v244) & ~(-1 << v247)) << v166;
        v244 += v247;
        unint64_t v248 = v247 + v166;
        v176 += v248 >> 6;
        uint64_t v166 = v248 & 0x3F;
        v246 -= v247;
      }
      while (v246);
    }
    v194 += 3;
  }
  unint64_t v249 = v307;
  if (v307)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0x80)
    {
      uint64_t v250 = 0;
      unint64_t v251 = v322[2];
      unint64_t v252 = 3;
      do
      {
        unint64_t v253 = 64 - v166;
        if (64 - v166 >= v252) {
          unint64_t v253 = v252;
        }
        v124[v176] |= ((v251 >> v250) & ~(-1 << v253)) << v166;
        v250 += v253;
        unint64_t v254 = v253 + v166;
        v176 += v254 >> 6;
        uint64_t v166 = v254 & 0x3F;
        v252 -= v253;
      }
      while (v252);
    }
    v194 += 3;
  }
  unint64_t v255 = v308;
  if (v308)
  {
    if ((unint64_t)(v166 - v125 + (v176 << 6) + 3) <= 0x80)
    {
      uint64_t v256 = 0;
      unint64_t v257 = v322[3];
      unint64_t v258 = 3;
      do
      {
        unint64_t v259 = 64 - v166;
        if (64 - v166 >= v258) {
          unint64_t v259 = v258;
        }
        v124[v176] |= ((v257 >> v256) & ~(-1 << v259)) << v166;
        v256 += v259;
        unint64_t v260 = v259 + v166;
        v176 += v260 >> 6;
        uint64_t v166 = v260 & 0x3F;
        v258 -= v259;
      }
      while (v258);
    }
    v194 += 3;
  }
  unsigned int v261 = 128 - v194;
  unsigned int v262 = (128 - v194) / 7u;
  unint64_t v263 = v261 % 7;
  if ((v263 - 257) >= 0xFFFFFF00 && v166 - v125 + (v176 << 6) + v263 <= 0x80)
  {
    do
    {
      unint64_t v264 = 64 - v166;
      if (64 - v166 >= v263) {
        unint64_t v264 = v263;
      }
      unint64_t v265 = v264 + v166;
      v176 += v265 >> 6;
      uint64_t v166 = v265 & 0x3F;
      v263 -= v264;
    }
    while (v263);
  }
  uint64_t v266 = 0;
  while (2)
  {
    if (v237 && v237 <= 0x100 && v166 - v125 + (v176 << 6) + v237 <= 0x80)
    {
      uint64_t v267 = 0;
      unint64_t v268 = *((unsigned int *)v300 + v266);
      unint64_t v269 = v237;
      do
      {
        unint64_t v270 = 64 - v166;
        if (64 - v166 >= v269) {
          unint64_t v270 = v269;
        }
        v124[v176] |= ((v268 >> v267) & ~(-1 << v270)) << v166;
        v267 += v270;
        unint64_t v271 = v270 + v166;
        v176 += v271 >> 6;
        uint64_t v166 = v271 & 0x3F;
        v269 -= v270;
      }
      while (v269);
    }
    if (!v243)
    {
      int v277 = v237;
      if (!v249) {
        goto LABEL_508;
      }
      goto LABEL_501;
    }
    if (v243 <= 0x100 && v166 - v125 + (v176 << 6) + v243 <= 0x80)
    {
      uint64_t v272 = 0;
      unint64_t v273 = *((unsigned int *)&v300[1] + v266 + 3);
      unint64_t v274 = v243;
      do
      {
        unint64_t v275 = 64 - v166;
        if (64 - v166 >= v274) {
          unint64_t v275 = v274;
        }
        v124[v176] |= ((v273 >> v272) & ~(-1 << v275)) << v166;
        v272 += v275;
        unint64_t v276 = v275 + v166;
        v176 += v276 >> 6;
        uint64_t v166 = v276 & 0x3F;
        v274 -= v275;
      }
      while (v274);
    }
    int v277 = v243 + v237;
    if (v249)
    {
LABEL_501:
      if (v249 <= 0x100 && v166 - v125 + (v176 << 6) + v249 <= 0x80)
      {
        uint64_t v278 = 0;
        unint64_t v279 = *((unsigned int *)&v300[3] + v266 + 2);
        unint64_t v280 = v249;
        do
        {
          unint64_t v281 = 64 - v166;
          if (64 - v166 >= v280) {
            unint64_t v281 = v280;
          }
          v124[v176] |= ((v279 >> v278) & ~(-1 << v281)) << v166;
          v278 += v281;
          unint64_t v282 = v281 + v166;
          v176 += v282 >> 6;
          uint64_t v166 = v282 & 0x3F;
          v280 -= v281;
        }
        while (v280);
      }
      v277 += v249;
    }
LABEL_508:
    if (v255)
    {
      if (v255 <= 0x100 && v166 - v125 + (v176 << 6) + v255 <= 0x80)
      {
        uint64_t v283 = 0;
        unint64_t v284 = *((unsigned int *)&v301 + v266 + 1);
        unint64_t v285 = v255;
        do
        {
          unint64_t v286 = 64 - v166;
          if (64 - v166 >= v285) {
            unint64_t v286 = v285;
          }
          v124[v176] |= ((v284 >> v283) & ~(-1 << v286)) << v166;
          v283 += v286;
          unint64_t v287 = v286 + v166;
          v176 += v287 >> 6;
          uint64_t v166 = v287 & 0x3F;
          v285 -= v286;
        }
        while (v285);
      }
      v277 += v255;
    }
    unint64_t v288 = v262 - v277;
    if (v288 && v288 <= 0x100 && v166 - v125 + (v176 << 6) + v288 <= 0x80)
    {
      do
      {
        unint64_t v289 = 64 - v166;
        if (64 - v166 >= v288) {
          unint64_t v289 = v288;
        }
        unint64_t v290 = v289 + v166;
        v176 += v290 >> 6;
        uint64_t v166 = v290 & 0x3F;
        v288 -= v289;
      }
      while (v288);
    }
    if (++v266 != 7) {
      continue;
    }
    return v49 & 1;
  }
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(unsigned int *a1, unsigned int *a2, _DWORD *a3, _DWORD *a4)
{
  unsigned int v4 = *a2;
  unsigned int v5 = a1[1];
  int v6 = kDQuadParamTable[160 * *a1 + 6 + 10 * *a2];
  *a4 = v6;
  *a3 = v6;
  unsigned int v7 = a2[1];
  BOOL v8 = v7 >= v4;
  if (v7 <= v4) {
    unsigned int v9 = v4;
  }
  else {
    unsigned int v9 = a2[1];
  }
  unsigned int v10 = v7 < v4;
  if (v7 < v4) {
    unsigned int v4 = a2[1];
  }
  int v11 = kDQuadParamTable[160 * v5 + 6 + 10 * v7];
  a4[1] = v11;
  a3[1] = v11;
  unsigned int v12 = a2[2];
  if (v12 <= v9) {
    unsigned int v13 = v8;
  }
  else {
    unsigned int v13 = 2;
  }
  if (v12 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = a2[2];
  }
  if (v12 >= v4) {
    unsigned int v15 = v4;
  }
  else {
    unsigned int v15 = a2[2];
  }
  if (v12 < v4) {
    unsigned int v10 = 2;
  }
  unsigned int v17 = a1[2];
  uint64_t result = a1[3];
  int v18 = kDQuadParamTable[160 * v17 + 6 + 10 * v12];
  a4[2] = v18;
  a3[2] = v18;
  unsigned int v19 = a2[3];
  if (v19 <= v14) {
    uint64_t v20 = v13;
  }
  else {
    uint64_t v20 = 3;
  }
  if (v19 >= v15) {
    uint64_t v21 = v10;
  }
  else {
    uint64_t v21 = 3;
  }
  int v22 = kDQuadParamTable[160 * result + 6 + 10 * v19];
  a4[3] = v22;
  a3[3] = v22;
  unsigned int v23 = a2[v20];
  unsigned int v24 = a2[v21];
  LODWORD(v25) = v20 - 1;
  if (v20 > 1) {
    int v26 = -2;
  }
  else {
    int v26 = 1;
  }
  int v27 = v20 + v26;
  if (!v20) {
    LODWORD(v25) = 2;
  }
  if (v27 != v21) {
    LODWORD(v25) = v27;
  }
  unsigned int v28 = 6 - (v20 + v21) - v25;
  unsigned int v29 = a2[v25];
  unsigned int v30 = a2[v28];
  BOOL v31 = v29 > v30;
  if (v29 <= v30) {
    uint64_t v32 = v25;
  }
  else {
    uint64_t v32 = v28;
  }
  if (v31) {
    uint64_t v25 = v25;
  }
  else {
    uint64_t v25 = v28;
  }
  unsigned int v33 = a2[v32];
  if (v23 - v33 <= 1 && v24 <= 1)
  {
    uint64_t v38 = v21;
    a4[v38] = 0;
    a4[v32] += a3[v38] / 3;
    unint64_t v39 = 1431655766 * (a3[v38] + 1);
    a4[v25] += HIDWORD(v39) + (v39 >> 63);
    unint64_t v40 = 1431655766 * (a3[v38] + 2);
    a4[v20] += HIDWORD(v40) + (v40 >> 63);
    return result;
  }
  unsigned int v35 = a2[v25];
  if (v23 - v35 <= 1 && v24 <= 1)
  {
    uint64_t v41 = v21;
    a4[v41] = 0;
    uint64_t v42 = v32;
    int v43 = a3[v42] & ((int)a3[v42] >> 31);
    a4[v42] = v43;
    a4[v25] += (a3[v41] - v43 + a3[v42]) / 2;
    int v44 = a3[v41] + a3[v42] - a4[v42];
    if (v44 + 1 >= 0) {
      int v45 = v44 + 1;
    }
    else {
      int v45 = v44 + 2;
    }
    a4[v20] += v45 >> 1;
    return result;
  }
  if (v35 - v24 > 1)
  {
    if (v35 - v24 != 2) {
      goto LABEL_61;
    }
    int v37 = a3[v20];
  }
  else
  {
    int v37 = a3[v20];
    if ((v37 & 0x80000000) == 0) {
      goto LABEL_61;
    }
    if ((int)a3[v25] > 0)
    {
LABEL_58:
      int v46 = 0;
      a4[v21] = 0;
      a4[v32] = 0;
      if (a3[v32] + a3[v21] >= 6) {
        int v46 = a3[v25];
      }
      uint64_t v47 = v25;
      a4[v47] = v46;
      a4[v20] += a3[v21] - v46 + a3[v32] + a3[v47];
      return result;
    }
  }
  if (v37 <= -2 && (int)a3[v25] >= 1) {
    goto LABEL_58;
  }
LABEL_61:
  if (!v24 || (int)a3[v21] < 1 || (int)a3[v32] < 1 || (a3[v25] & 0x80000000) != 0 || (int)a3[v20] > -2)
  {
    if (v23 != v24 && (int)a3[v21] >= 1)
    {
      uint64_t v50 = v21;
      a4[v50] = 0;
      a4[v20] += a3[v50];
    }
    if (v35 != v33 && (int)a3[v32] >= 1)
    {
      a4[v32] = 0;
      a4[v25] += a3[v32];
    }
  }
  else
  {
    uint64_t v48 = v21;
    a4[v48] = 0;
    uint64_t v49 = v32;
    a4[v49] = 0;
    a4[v25] = a3[v25];
    a4[v20] += a3[v49] + a3[v48];
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(_OWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v302 = 0;
  unint64_t v300 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v301 = (8 * (a3 & 7)) | 0x200;
  unint64_t v299 = 8 * (a3 & 7);
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v304, (uint64_t)v309, (float *)v303.i32, &v299, a4);
  v8.i64[0] = 0x303030303030303;
  v8.i64[1] = 0x303030303030303;
  int8x16_t v9 = vandq_s8(v304, v8);
  int8x16_t v10 = vbicq_s8(v309[0], vceqq_s8(v9, v8));
  v309[0] = v10;
  int8x16_t v305 = v10;
  int8x16_t v306 = v10;
  int8x16_t v307 = v10;
  int8x16_t v308 = v10;
  v11.i64[0] = 0x202020202020202;
  v11.i64[1] = 0x202020202020202;
  int8x16_t v12 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v304.i8), (int16x4_t)0x4000400040004)), v11);
  unint64_t v13 = v299;
  int8x16_t v298 = v9;
  if (vmaxvq_s8(v12) < 1)
  {
    v26.i64[0] = -1;
    v26.i64[1] = -1;
    v27.i64[0] = -1;
    v27.i64[1] = -1;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    v29.i64[0] = -1;
    v29.i64[1] = -1;
  }
  else
  {
    int8x16_t v14 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v12, v12));
    int8x16_t v15 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v14, (int16x8_t)v14));
    unint64_t v16 = vpaddq_s32((int32x4_t)v15, (int32x4_t)v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19;
    unint64_t v21 = v299 + v19;
    if (v301) {
      BOOL v22 = v301 >= v21;
    }
    else {
      BOOL v22 = 1;
    }
    int v23 = !v22;
    if (v19 <= 0x80 && v23 == 0)
    {
      v7.i64[0] = 63;
      unsigned int v30 = (int64x2_t *)(v300 + 8 * (v299 >> 6));
      int64x2_t v31 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v299, v7).i64[0], 0), vzip1q_s64((int64x2_t)0, v18));
      int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v30, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30->i64[0], 0), (uint64x2_t)vnegq_s64(v31)));
      if ((v299 & 0x3F) + v20 >= 0x81) {
        int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v30[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v31))), v25);
      }
      unint64_t v13 = v21;
    }
    else
    {
      unsigned __int8 v302 = 1;
      int8x16_t v25 = 0uLL;
    }
    int32x2_t v32 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    v33.i64[0] = v32.u32[0];
    v33.i64[1] = v32.u32[1];
    int64x2_t v34 = (int64x2_t)vshlq_u64((uint64x2_t)v25, (uint64x2_t)vnegq_s64(v33));
    *(int32x2_t *)v25.i8 = vmovn_s64((int64x2_t)v25);
    *(int32x2_t *)v34.i8 = vmovn_s64(v34);
    int16x8_t v35 = (int16x8_t)vzip1q_s32((int32x4_t)v25, (int32x4_t)v34);
    int16x8_t v36 = (int16x8_t)vshlq_u32((uint32x4_t)v35, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    *(int16x4_t *)v35.i8 = vmovn_s32((int32x4_t)v35);
    *(int16x4_t *)v36.i8 = vmovn_s32((int32x4_t)v36);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v35, v36);
    int8x16_t v38 = (int8x16_t)vshlq_u16((uint16x8_t)v37, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)))));
    *(int8x8_t *)v37.i8 = vmovn_s16((int16x8_t)v37);
    *(int8x8_t *)v38.i8 = vmovn_s16((int16x8_t)v38);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    v38.i64[0] = 0x101010101010101;
    v38.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8(v38, v12);
    v38.i64[0] = -1;
    v38.i64[1] = -1;
    int32x4_t v41 = (int32x4_t)vqtbl1q_s8(vandq_s8(v39, vaddq_s8(v40, v38)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
    int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
    int8x16_t v44 = (int8x16_t)vdupq_laneq_s32(v41, 2);
    int8x16_t v45 = (int8x16_t)vdupq_laneq_s32(v41, 3);
    int8x16_t v305 = vsubq_s8(v305, v42);
    int8x16_t v306 = vsubq_s8(v306, v43);
    int8x16_t v307 = vsubq_s8(v307, v44);
    int8x16_t v308 = vsubq_s8(v308, v45);
    int8x16_t v29 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v27 = vceqzq_s8(v44);
    int8x16_t v26 = vceqzq_s8(v45);
  }
  v46.i64[0] = 0x808080808080808;
  v46.i64[1] = 0x808080808080808;
  int8x16_t v47 = 0uLL;
  int8x16_t v48 = vandq_s8(vextq_s8(vtstq_s8(v304, v46), (int8x16_t)0, 0xCuLL), v10);
  int8x16_t v49 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v48, v48));
  int8x16_t v50 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v49, (int16x8_t)v49));
  unint64_t v51 = vpaddq_s32((int32x4_t)v50, (int32x4_t)v50).u64[0];
  v52.i64[0] = v51;
  v52.i64[1] = HIDWORD(v51);
  int64x2_t v53 = v52;
  unint64_t v54 = vaddvq_s64(v52);
  if (v301) {
    BOOL v55 = v301 >= v13 + v54;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = !v55;
  if (v54 <= 0x80 && v56 == 0)
  {
    int64x2_t v58 = vaddq_s64(vdupq_n_s64(v13 & 0x3F), vzip1q_s64((int64x2_t)0, v53));
    int v59 = (int64x2_t *)(v300 + 8 * (v13 >> 6));
    int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v59, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59->i64[0], 0), (uint64x2_t)vnegq_s64(v58)));
    if ((v13 & 0x3F) + v54 >= 0x81) {
      int8x16_t v47 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v59[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v58))), v47);
    }
    v13 += v54;
  }
  else
  {
    unsigned __int8 v302 = 1;
  }
  int v60 = v304.i8[0] & 3;
  int8x16_t v296 = v26;
  int8x16_t v297 = v29;
  int8x16_t v294 = v28;
  int8x16_t v295 = v27;
  if (v60 == 2)
  {
    unint64_t v61 = v13 + 4;
    if (v301)
    {
      if (v301 < v61)
      {
        unsigned __int8 v302 = 1;
LABEL_39:
        unsigned __int8 v302 = 1;
        goto LABEL_40;
      }
      unint64_t v62 = v13 + 8;
      v13 += 4;
      if (v301 < v62) {
        goto LABEL_39;
      }
      unint64_t v61 = v13;
    }
    unint64_t v13 = v61 + 4;
  }
LABEL_40:
  int8x16_t v63 = 0uLL;
  int8x16_t v64 = vextq_s8((int8x16_t)0, v305, 0xCuLL);
  int8x16_t v65 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v64, v64));
  int8x16_t v66 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v65, (int16x8_t)v65));
  unint64_t v67 = vpaddq_s32((int32x4_t)v66, (int32x4_t)v66).u64[0];
  v68.i64[0] = v67;
  v68.i64[1] = HIDWORD(v67);
  int64x2_t v69 = v68;
  unint64_t v70 = vaddvq_s64(v68);
  unint64_t v71 = v13 + v70;
  if (v301) {
    BOOL v72 = v301 >= v71;
  }
  else {
    BOOL v72 = 1;
  }
  int v73 = !v72;
  if (v70 > 0x80 || v73)
  {
    int v78 = 1;
    unint64_t v76 = v300;
  }
  else
  {
    unint64_t v74 = v13 & 0x3F;
    int64x2_t v75 = vaddq_s64(vdupq_n_s64(v74), vzip1q_s64((int64x2_t)0, v69));
    unint64_t v76 = v300;
    uint16x4_t v77 = (int64x2_t *)(v300 + 8 * (v13 >> 6));
    int8x16_t v63 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v77, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77->i64[0], 0), (uint64x2_t)vnegq_s64(v75)));
    if (v74 + v70 >= 0x81) {
      int8x16_t v63 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v77[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v75))), v63);
    }
    int v78 = v302;
    unint64_t v13 = v71;
  }
  int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v305, v305));
  int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
  unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v13 + v84;
  if (v301) {
    BOOL v86 = v301 >= v85;
  }
  else {
    BOOL v86 = 1;
  }
  char v87 = !v86;
  int8x16_t v88 = 0uLL;
  if (v84 > 0x80 || (v87 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v85 = v13;
    int8x16_t v92 = 0uLL;
  }
  else
  {
    unint64_t v89 = v13 & 0x3F;
    int64x2_t v90 = vaddq_s64(vdupq_n_s64(v89), vzip1q_s64((int64x2_t)0, v83));
    uint64_t v91 = (int64x2_t *)(v76 + 8 * (v13 >> 6));
    int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v90)));
    if (v89 + v84 >= 0x81) {
      int8x16_t v92 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v91[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v90))), v92);
    }
  }
  int8x16_t v93 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v306, v306));
  int8x16_t v94 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v93, (int16x8_t)v93));
  unint64_t v95 = vpaddq_s32((int32x4_t)v94, (int32x4_t)v94).u64[0];
  v96.i64[0] = v95;
  v96.i64[1] = HIDWORD(v95);
  int64x2_t v97 = v96;
  unint64_t v98 = vaddvq_s64(v96);
  unint64_t v99 = v98;
  unint64_t v100 = v85 + v98;
  if (v301) {
    BOOL v101 = v301 >= v100;
  }
  else {
    BOOL v101 = 1;
  }
  char v102 = !v101;
  if (v98 > 0x80 || (v102 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v100 = v85;
  }
  else
  {
    unint64_t v103 = v85 & 0x3F;
    int64x2_t v104 = vaddq_s64(vdupq_n_s64(v103), vzip1q_s64((int64x2_t)0, v97));
    int v105 = (int64x2_t *)(v76 + 8 * (v85 >> 6));
    int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
    if (v103 + v99 >= 0x81) {
      int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v88);
    }
  }
  unint64_t v106 = v100 + v99;
  if (v301) {
    BOOL v107 = v301 >= v106;
  }
  else {
    BOOL v107 = 1;
  }
  char v108 = !v107;
  int8x16_t v109 = 0uLL;
  if (v99 > 0x80 || (v108 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v106 = v100;
    int8x16_t v113 = 0uLL;
  }
  else
  {
    unint64_t v110 = v100 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v97));
    unint64_t v112 = (int64x2_t *)(v76 + 8 * (v100 >> 6));
    int8x16_t v113 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v99 >= 0x81) {
      int8x16_t v113 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v113);
    }
  }
  int8x16_t v114 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v307, v307));
  int8x16_t v115 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v114, (int16x8_t)v114));
  unint64_t v116 = vpaddq_s32((int32x4_t)v115, (int32x4_t)v115).u64[0];
  v117.i64[0] = v116;
  v117.i64[1] = HIDWORD(v116);
  int64x2_t v118 = v117;
  unint64_t v119 = vaddvq_s64(v117);
  unint64_t v120 = v119;
  unint64_t v121 = v106 + v119;
  if (v301) {
    BOOL v122 = v301 >= v121;
  }
  else {
    BOOL v122 = 1;
  }
  char v123 = !v122;
  if (v119 > 0x80 || (v123 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v121 = v106;
  }
  else
  {
    unint64_t v124 = v106 & 0x3F;
    int64x2_t v125 = vaddq_s64(vdupq_n_s64(v124), vzip1q_s64((int64x2_t)0, v118));
    uint64_t v126 = (int64x2_t *)(v76 + 8 * (v106 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v126, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126->i64[0], 0), (uint64x2_t)vnegq_s64(v125)));
    if (v124 + v120 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v126[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v125))), v109);
    }
  }
  unint64_t v127 = v121 + v120;
  if (v301) {
    BOOL v128 = v301 >= v127;
  }
  else {
    BOOL v128 = 1;
  }
  char v129 = !v128;
  int8x16_t v130 = 0uLL;
  if (v120 > 0x80 || (v129 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v127 = v121;
    int8x16_t v134 = 0uLL;
  }
  else
  {
    unint64_t v131 = v121 & 0x3F;
    int64x2_t v132 = vaddq_s64(vdupq_n_s64(v131), vzip1q_s64((int64x2_t)0, v118));
    unsigned int v133 = (int64x2_t *)(v76 + 8 * (v121 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v132)));
    if (v131 + v120 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v132))), v134);
    }
  }
  int8x16_t v135 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v308, v308));
  int8x16_t v136 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v135, (int16x8_t)v135));
  unint64_t v137 = vpaddq_s32((int32x4_t)v136, (int32x4_t)v136).u64[0];
  v138.i64[0] = v137;
  v138.i64[1] = HIDWORD(v137);
  int64x2_t v139 = v138;
  unint64_t v140 = vaddvq_s64(v138);
  unint64_t v141 = v140;
  unint64_t v142 = v127 + v140;
  if (v301) {
    BOOL v143 = v301 >= v142;
  }
  else {
    BOOL v143 = 1;
  }
  char v144 = !v143;
  if (v140 > 0x80 || (v144 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v142 = v127;
  }
  else
  {
    unint64_t v145 = v127 & 0x3F;
    int64x2_t v146 = vaddq_s64(vdupq_n_s64(v145), vzip1q_s64((int64x2_t)0, v139));
    unint64_t v147 = (int64x2_t *)(v76 + 8 * (v127 >> 6));
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v147, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147->i64[0], 0), (uint64x2_t)vnegq_s64(v146)));
    if (v145 + v141 >= 0x81) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v147[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v146))), v130);
    }
  }
  unint64_t v148 = v142 + v141;
  if (v301) {
    BOOL v149 = v301 >= v148;
  }
  else {
    BOOL v149 = 1;
  }
  char v150 = !v149;
  if (v141 > 0x80 || (v150 & 1) != 0) {
    goto LABEL_133;
  }
  int64x2_t v151 = vaddq_s64(vdupq_n_s64(v142 & 0x3F), vzip1q_s64((int64x2_t)0, v139));
  unint64_t v152 = (int64x2_t *)(v76 + 8 * (v142 >> 6));
  int8x16_t v153 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v152, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152->i64[0], 0), (uint64x2_t)vnegq_s64(v151)));
  if ((v142 & 0x3F) + v141 >= 0x81) {
    int8x16_t v153 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v152[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v151))), v153);
  }
  if (v78 || v301 + 8 * result - v148 - 512 >= 9 || v60 == 2)
  {
LABEL_133:
    uint64_t v154 = (8 * (&vars0 - 100)) & 0x20;
    uint64_t v155 = v310 | (255 << v154);
    uint64_t v310 = v155;
    unint64_t v156 = (32 * ((((unint64_t)&v310 + 4) >> 2) & 1)) | 8;
    unint64_t v157 = (((32 * ((((unint64_t)&v310 + 4) >> 2) & 1)) | 0x10) - v154) | 8;
    if (v156 - v154 > 0x18) {
      unint64_t v157 = v156 - v154 + 8;
    }
    if (v157 <= 0x20)
    {
      if (v156 - v154 <= 0x18) {
        LOBYTE(v156) = (32 * ((((unint64_t)&v310 + 4) & 4) != 0)) | 0x10;
      }
      uint64_t v158 = v155 | (255 << v156);
      uint64_t v310 = v158;
      uint64_t v159 = ((_BYTE)v156 + 8) & 0x38;
      if ((unint64_t)(v159 - v154 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v310 = v158 | (255 << v159);
      }
    }
    uint64_t result = 0;
    unsigned int v160 = (_OWORD *)((char *)a1 + a2);
    *a1 = 0u;
    a1[1] = 0u;
    char v161 = (_OWORD *)((char *)a1 + 2 * a2);
    *unsigned int v160 = 0u;
    v160[1] = 0u;
    char v162 = (_OWORD *)((char *)a1 + 2 * a2 + a2);
    *char v161 = 0u;
    v161[1] = 0u;
    *char v162 = 0u;
    v162[1] = 0u;
  }
  else
  {
    int32x2_t v163 = vzip1_s32(*(int32x2_t *)v50.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL));
    int32x2_t v164 = vzip1_s32(*(int32x2_t *)v94.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL));
    uint16x4_t v165 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v49.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
    int32x4_t v166 = (int32x4_t)vextq_s8(v93, v93, 8uLL);
    uint16x4_t v167 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v166.i8);
    v168.i64[0] = v163.u32[0];
    v168.i64[1] = v163.u32[1];
    int64x2_t v169 = v168;
    v168.i64[0] = v164.u32[0];
    v168.i64[1] = v164.u32[1];
    uint64x2_t v170 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v171 = (int64x2_t)vshlq_u64((uint64x2_t)v47, (uint64x2_t)vnegq_s64(v169));
    *(int32x2_t *)v166.i8 = vmovn_s64((int64x2_t)v47);
    *(int32x2_t *)v171.i8 = vmovn_s64(v171);
    int16x8_t v172 = (int16x8_t)vzip1q_s32(v166, (int32x4_t)v171);
    int64x2_t v173 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v170);
    *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)v88);
    *(int32x2_t *)v173.i8 = vmovn_s64(v173);
    int32x4_t v174 = vzip1q_s32((int32x4_t)v47, (int32x4_t)v173);
    int64x2_t v175 = (int64x2_t)vshlq_u64((uint64x2_t)v113, v170);
    *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v113);
    *(int32x2_t *)v175.i8 = vmovn_s64(v175);
    int16x8_t v176 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v175);
    int32x4_t v177 = (int32x4_t)vmovl_u16(v165);
    int16x8_t v178 = (int16x8_t)vmovl_u16(v167);
    uint32x4_t v179 = (uint32x4_t)vnegq_s32((int32x4_t)v178);
    int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v172, (uint32x4_t)vnegq_s32(v177));
    *(int16x4_t *)v172.i8 = vmovn_s32((int32x4_t)v172);
    *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
    int8x16_t v181 = (int8x16_t)vzip1q_s16(v172, v180);
    int16x8_t v182 = (int16x8_t)vshlq_u32((uint32x4_t)v174, v179);
    *(int16x4_t *)v178.i8 = vmovn_s32(v174);
    *(int16x4_t *)v182.i8 = vmovn_s32((int32x4_t)v182);
    int8x16_t v183 = (int8x16_t)vzip1q_s16(v178, v182);
    int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v176, v179);
    *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
    *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
    int8x16_t v185 = (int8x16_t)vzip1q_s16(v176, v184);
    uint16x8_t v186 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v306.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v306, v306, 8uLL))));
    int8x16_t v187 = (int8x16_t)vshlq_u16((uint16x8_t)v181, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v48.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))));
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    *(int8x8_t *)v187.i8 = vmovn_s16((int16x8_t)v187);
    int8x16_t v188 = vzip1q_s8(v181, v187);
    int8x16_t v189 = (int8x16_t)vshlq_u16((uint16x8_t)v183, v186);
    int8x16_t v190 = (int8x16_t)vshlq_u16((uint16x8_t)v185, v186);
    *(int8x8_t *)v183.i8 = vmovn_s16((int16x8_t)v183);
    *(int8x8_t *)v189.i8 = vmovn_s16((int16x8_t)v189);
    *(int8x8_t *)v185.i8 = vmovn_s16((int16x8_t)v185);
    *(int8x8_t *)v190.i8 = vmovn_s16((int16x8_t)v190);
    int8x16_t v191 = vzip1q_s8(v183, v189);
    v189.i64[0] = 0x808080808080808;
    v189.i64[1] = 0x808080808080808;
    int8x16_t v192 = vzip1q_s8(v185, v190);
    v190.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v190.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v193 = vsubq_s8(v189, v48);
    int8x16_t v194 = vaddq_s8(v48, v190);
    v190.i64[0] = 0x808080808080808;
    v190.i64[1] = 0x808080808080808;
    int8x16_t v195 = vshlq_s8(v188, v193);
    v193.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v193.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v196 = vsubq_s8(v190, v306);
    int8x16_t v197 = vaddq_s8(v306, v193);
    int8x16_t v198 = vshlq_s8(v191, v196);
    int8x16_t v199 = vshlq_s8(v192, v196);
    int8x16_t v200 = vshlq_s8(v195, v194);
    int8x16_t v201 = vshlq_s8(v198, v197);
    int8x16_t v202 = vshlq_s8(v199, v197);
    int8x16_t v203 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v200.i8, 0);
    int8x16_t v204 = vandq_s8(v294, v203);
    int8x16_t v205 = vsubq_s8(v201, v204);
    int8x16_t v206 = vsubq_s8(v202, v204);
    *(int32x2_t *)v201.i8 = vzip1_s32(*(int32x2_t *)v115.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL));
    *(int32x2_t *)v202.i8 = vzip1_s32(*(int32x2_t *)v136.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL));
    v168.i64[0] = v201.u32[0];
    v168.i64[1] = v201.u32[1];
    uint64x2_t v207 = (uint64x2_t)vnegq_s64(v168);
    *(int16x4_t *)v204.i8 = vuzp1_s16(*(int16x4_t *)v114.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL));
    int64x2_t v208 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
    *(int32x2_t *)v208.i8 = vmovn_s64(v208);
    int16x8_t v209 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v208);
    v168.i64[0] = v202.u32[0];
    v168.i64[1] = v202.u32[1];
    uint64x2_t v210 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v211 = (int64x2_t)vshlq_u64((uint64x2_t)v134, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v134);
    *(int32x2_t *)v211.i8 = vmovn_s64(v211);
    int16x8_t v212 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v211);
    int64x2_t v213 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v210);
    *(int32x2_t *)v114.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v213.i8 = vmovn_s64(v213);
    uint32x4_t v214 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v204.i8));
    int16x8_t v215 = (int16x8_t)vzip1q_s32((int32x4_t)v114, (int32x4_t)v213);
    int16x8_t v216 = (int16x8_t)vshlq_u32((uint32x4_t)v209, v214);
    *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
    *(int16x4_t *)v216.i8 = vmovn_s32((int32x4_t)v216);
    int8x16_t v217 = (int8x16_t)vzip1q_s16(v209, v216);
    uint32x4_t v218 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v135.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL))));
    int16x8_t v219 = (int16x8_t)vshlq_u32((uint32x4_t)v212, v214);
    *(int16x4_t *)v212.i8 = vmovn_s32((int32x4_t)v212);
    *(int16x4_t *)v219.i8 = vmovn_s32((int32x4_t)v219);
    int8x16_t v220 = (int8x16_t)vzip1q_s16(v212, v219);
    int16x8_t v221 = (int16x8_t)vshlq_u32((uint32x4_t)v215, v218);
    *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v215);
    *(int16x4_t *)v221.i8 = vmovn_s32((int32x4_t)v221);
    uint16x8_t v222 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v307.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v307, v307, 8uLL))));
    int8x16_t v223 = (int8x16_t)vzip1q_s16(v215, v221);
    int8x16_t v224 = (int8x16_t)vshlq_u16((uint16x8_t)v217, v222);
    int8x16_t v225 = (int8x16_t)vshlq_u16((uint16x8_t)v220, v222);
    *(int8x8_t *)v217.i8 = vmovn_s16((int16x8_t)v217);
    *(int8x8_t *)v224.i8 = vmovn_s16((int16x8_t)v224);
    *(int8x8_t *)v220.i8 = vmovn_s16((int16x8_t)v220);
    *(int8x8_t *)v225.i8 = vmovn_s16((int16x8_t)v225);
    int8x16_t v226 = vzip1q_s8(v217, v224);
    v224.i64[0] = 0x808080808080808;
    v224.i64[1] = 0x808080808080808;
    int8x16_t v227 = vzip1q_s8(v220, v225);
    v225.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v225.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v228 = vsubq_s8(v224, v307);
    int8x16_t v229 = vaddq_s8(v307, v225);
    int8x16_t v230 = vshlq_s8(v226, v228);
    int8x16_t v231 = vshlq_s8(v227, v228);
    uint16x8_t v232 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v308.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v308, v308, 8uLL))));
    int8x16_t v233 = vshlq_s8(v231, v229);
    int8x16_t v234 = vandq_s8(v295, v203);
    int8x16_t v235 = vsubq_s8(vshlq_s8(v230, v229), v234);
    int8x16_t v236 = vsubq_s8(v233, v234);
    int8x16_t v237 = (int8x16_t)vshlq_u16((uint16x8_t)v223, v232);
    *(int8x8_t *)v223.i8 = vmovn_s16((int16x8_t)v223);
    *(int8x8_t *)v237.i8 = vmovn_s16((int16x8_t)v237);
    v234.i64[0] = 0x808080808080808;
    v234.i64[1] = 0x808080808080808;
    int8x16_t v238 = vzip1q_s8(v223, v237);
    v223.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v223.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v239 = vsubq_s8(v234, v308);
    int8x16_t v240 = vaddq_s8(v308, v223);
    int64x2_t v241 = (int64x2_t)vshlq_u64((uint64x2_t)v153, v210);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    *(int32x2_t *)v241.i8 = vmovn_s64(v241);
    int16x8_t v242 = (int16x8_t)vzip1q_s32((int32x4_t)v153, (int32x4_t)v241);
    int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v242, v218);
    *(int16x4_t *)v242.i8 = vmovn_s32((int32x4_t)v242);
    *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
    int8x16_t v244 = (int8x16_t)vzip1q_s16(v242, v243);
    int8x16_t v245 = (int8x16_t)vshlq_u16((uint16x8_t)v244, v232);
    *(int8x8_t *)v244.i8 = vmovn_s16((int16x8_t)v244);
    *(int8x8_t *)v245.i8 = vmovn_s16((int16x8_t)v245);
    int8x16_t v246 = vshlq_s8(vshlq_s8(vzip1q_s8(v244, v245), v239), v240);
    int8x16_t v247 = vandq_s8(v296, v203);
    int8x16_t v248 = vsubq_s8(vshlq_s8(vshlq_s8(v238, v239), v240), v247);
    int8x16_t v249 = vsubq_s8(v246, v247);
    *(int32x2_t *)v238.i8 = vzip1_s32(*(int32x2_t *)v66.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL));
    *(int32x2_t *)v246.i8 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v168.i64[0] = v238.u32[0];
    v168.i64[1] = v238.u32[1];
    int64x2_t v250 = (int64x2_t)vshlq_u64((uint64x2_t)v63, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v63);
    *(int32x2_t *)v250.i8 = vmovn_s64(v250);
    int16x8_t v251 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v250);
    v168.i64[0] = v246.u32[0];
    v168.i64[1] = v246.u32[1];
    int64x2_t v252 = (int64x2_t)vshlq_u64((uint64x2_t)v92, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v92);
    *(int32x2_t *)v252.i8 = vmovn_s64(v252);
    int16x8_t v253 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v252);
    int16x8_t v254 = (int16x8_t)vshlq_u32((uint32x4_t)v251, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v65.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))));
    *(int16x4_t *)v251.i8 = vmovn_s32((int32x4_t)v251);
    *(int16x4_t *)v254.i8 = vmovn_s32((int32x4_t)v254);
    int8x16_t v255 = (int8x16_t)vzip1q_s16(v251, v254);
    int16x8_t v256 = (int16x8_t)vshlq_u32((uint32x4_t)v253, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v253.i8 = vmovn_s32((int32x4_t)v253);
    *(int16x4_t *)v256.i8 = vmovn_s32((int32x4_t)v256);
    int8x16_t v257 = (int8x16_t)vzip1q_s16(v253, v256);
    int8x16_t v258 = (int8x16_t)vshlq_u16((uint16x8_t)v255, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))));
    int8x16_t v259 = (int8x16_t)vshlq_u16((uint16x8_t)v257, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v305.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v305, v305, 8uLL)))));
    *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
    *(int8x8_t *)v258.i8 = vmovn_s16((int16x8_t)v258);
    *(int8x8_t *)v257.i8 = vmovn_s16((int16x8_t)v257);
    *(int8x8_t *)v259.i8 = vmovn_s16((int16x8_t)v259);
    int8x16_t v260 = vzip1q_s8(v255, v258);
    v258.i64[0] = 0x808080808080808;
    v258.i64[1] = 0x808080808080808;
    int8x16_t v261 = vzip1q_s8(v257, v259);
    v259.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v259.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v262 = vshlq_s8(vshlq_s8(v260, vsubq_s8(v258, v64)), vaddq_s8(v64, v259));
    int8x16_t v263 = vshlq_s8(vshlq_s8(v261, vsubq_s8(v258, v305)), vaddq_s8(v305, v259));
    v264.i64[0] = 0x101010101010101;
    v264.i64[1] = 0x101010101010101;
    int8x16_t v265 = vandq_s8(v297, v203);
    int8x16_t v266 = vsubq_s8(vaddq_s8(vandq_s8(v200, v297), v262), v265);
    int8x16_t v267 = vsubq_s8(v263, v265);
    if (vaddlvq_s8(vceqq_s8(v298, v264)))
    {
      int8x16_t v268 = vnegq_s8(vandq_s8(v304, v264));
      int8x16_t v269 = v267;
      v269.i32[3] = v266.i32[0];
      int8x16_t v270 = v266;
      v270.i32[0] = v267.i32[3];
      v312.val[0] = vbslq_s8(v268, v270, v266);
      v312.val[1] = vbslq_s8(v268, v269, v267);
      v271.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v271.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v313.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v312, (int8x16_t)xmmword_242EA7570), v268), v312.val[0]);
      v313.val[1] = vaddq_s8(v312.val[1], vandq_s8(vqtbl2q_s8(v312, v271), v268));
      int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, (int8x16_t)xmmword_242EA7580), v268), v313.val[0]);
      int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, v271), v268), v313.val[1]);
      v313.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA7590), v268), v205);
      v313.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA75A0), v268), v206);
      int8x16_t v205 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, (int8x16_t)xmmword_242EA75B0), v268), v313.val[0]);
      int8x16_t v206 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, v271), v268), v313.val[1]);
      v313.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA75C0), v268), v235);
      v313.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA7570), v268), v236);
      int8x16_t v235 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, v271), v268), v313.val[0]);
      int8x16_t v236 = vaddq_s8(vandq_s8(vqtbl2q_s8(v313, (int8x16_t)xmmword_242EA75D0), v268), v313.val[1]);
      v312.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA75E0), v268), v248);
      v312.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA7570), v268), v249);
      int8x16_t v248 = vaddq_s8(vandq_s8(vqtbl2q_s8(v312, v271), v268), v312.val[0]);
      int8x16_t v249 = vaddq_s8(vandq_s8(vqtbl2q_s8(v312, (int8x16_t)xmmword_242EA75F0), v268), v312.val[1]);
    }
    int8x16_t v272 = vaddq_s8(v303, v266);
    int8x16_t v273 = vaddq_s8(v267, v303);
    int8x16_t v274 = vaddq_s8(v205, v303);
    int8x16_t v275 = vaddq_s8(v206, v303);
    int8x16_t v276 = vaddq_s8(v235, v303);
    int8x16_t v277 = vaddq_s8(v236, v303);
    int8x16_t v278 = vaddq_s8(v248, v303);
    int8x16_t v279 = vaddq_s8(v249, v303);
    v280.i64[0] = 0x1010101010101010;
    v280.i64[1] = 0x1010101010101010;
    int8x16_t v281 = vtstq_s8(v304, v280);
    if ((v304.i8[1] & 0x10) != 0)
    {
      v281.i8[1] = v281.i8[2];
      v281.i8[2] = 0;
      int8x16_t v281 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v281.i8, 0);
      int8x16_t v282 = (int8x16_t)xmmword_242EA7610;
    }
    else
    {
      int8x16_t v282 = (int8x16_t)xmmword_242EA7600;
    }
    int64x2_t v283 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v272, v282), v281), v272);
    int64x2_t v284 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v273, v282), v281), v273);
    int64x2_t v285 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v274, v282), v281), v274);
    int64x2_t v286 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v275, v282), v281), v275);
    int64x2_t v287 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v276, v282), v281), v276);
    int64x2_t v288 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v277, v282), v281), v277);
    unint64_t v289 = (int64x2_t *)((char *)a1 + a2);
    *a1 = vzip1q_s64(v283, v284);
    a1[1] = vzip1q_s64(v287, v288);
    unint64_t v290 = (int64x2_t *)((char *)a1 + 2 * a2);
    int64x2_t v291 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v278, v282), v281), v278);
    *unint64_t v289 = vzip2q_s64(v283, v284);
    v289[1] = vzip2q_s64(v287, v288);
    int64x2_t v292 = (int64x2_t)vaddq_s8(vandq_s8(vqtbl1q_s8(v279, v282), v281), v279);
    *unint64_t v290 = vzip1q_s64(v285, v286);
    v290[1] = vzip1q_s64(v291, v292);
    BOOL v293 = (int64x2_t *)((char *)v290 + a2);
    *BOOL v293 = vzip2q_s64(v285, v286);
    v293[1] = vzip2q_s64(v291, v292);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(_OWORD *a1, uint64_t a2, unint64_t a3, char a4, int a5)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  if (a4) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v79, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v79, a5);
  }
  int32x4_t v77 = v80;
  int32x4_t v78 = v79;
  int32x4_t v75 = v82;
  int32x4_t v76 = v81;
  int32x4_t v73 = v84;
  int32x4_t v74 = v83;
  unint64_t v17 = a3 + 16;
  int32x4_t v71 = v86;
  int32x4_t v72 = v85;
  if ((a4 & 2) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v17, (uint64_t)&v79, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v17, (uint64_t)&v79, a5);
  }
  int32x4_t v69 = v80;
  int32x4_t v70 = v79;
  int32x4_t v67 = v82;
  int32x4_t v68 = v81;
  int32x4_t v65 = v84;
  int32x4_t v66 = v83;
  unint64_t v18 = a3 + 32;
  int32x4_t v63 = v86;
  int32x4_t v64 = v85;
  if ((a4 & 4) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v18, (uint64_t)&v79, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v18, (uint64_t)&v79, a5);
  }
  int32x4_t v61 = v80;
  int32x4_t v62 = v79;
  int32x4_t v59 = v82;
  int32x4_t v60 = v81;
  int32x4_t v57 = v84;
  int32x4_t v58 = v83;
  unint64_t v19 = a3 + 48;
  int32x4_t v55 = v86;
  int32x4_t v56 = v85;
  if ((a4 & 8) != 0) {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v19, (uint64_t)&v79, a5);
  }
  else {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v19, (uint64_t)&v79, a5);
  }
  *(int16x4_t *)v26.i8 = vmovn_s32(v55);
  *(int16x4_t *)v30.i8 = vmovn_s32(v56);
  *(int16x4_t *)v35.i8 = vmovn_s32(v57);
  *(int16x4_t *)v23.i8 = vmovn_s32(v58);
  *(int16x4_t *)v32.i8 = vmovn_s32(v59);
  *(int16x4_t *)v33.i8 = vmovn_s32(v60);
  *(int16x4_t *)v37.i8 = vmovn_s32(v61);
  *(int16x4_t *)v5.i8 = vmovn_s32(v62);
  v38.i64[1] = v63.i64[1];
  v39.i64[1] = v64.i64[1];
  *(int16x4_t *)v38.i8 = vmovn_s32(v63);
  *(int16x4_t *)v39.i8 = vmovn_s32(v64);
  *(int16x4_t *)v22.i8 = vmovn_s32(v65);
  *(int16x4_t *)v24.i8 = vmovn_s32(v66);
  v40.i64[1] = v67.i64[1];
  *(int16x4_t *)v40.i8 = vmovn_s32(v67);
  *(int16x4_t *)v21.i8 = vmovn_s32(v68);
  *(int16x4_t *)v29.i8 = vmovn_s32(v69);
  *(int16x4_t *)v31.i8 = vmovn_s32(v70);
  *(int16x4_t *)v34.i8 = vmovn_s32(v71);
  *(int16x4_t *)v36.i8 = vmovn_s32(v72);
  *(int16x4_t *)v6.i8 = vmovn_s32(v73);
  *(int16x4_t *)v7.i8 = vmovn_s32(v74);
  *(int16x4_t *)v8.i8 = vmovn_s32(v75);
  *(int16x4_t *)v9.i8 = vmovn_s32(v76);
  *(int16x4_t *)v10.i8 = vmovn_s32(v77);
  *(int16x4_t *)v11.i8 = vmovn_s32(v78);
  v41.i64[1] = v80.i64[1];
  *(int16x4_t *)v27.i8 = vmovn_s32(v79);
  *(int16x4_t *)v25.i8 = vmovn_s32(v80);
  v42.i64[1] = v81.i64[1];
  *(int16x4_t *)v41.i8 = vmovn_s32(v81);
  *(int16x4_t *)v42.i8 = vmovn_s32(v82);
  v43.i64[1] = v84.i64[1];
  *(int16x4_t *)v28.i8 = vmovn_s32(v83);
  *(int16x4_t *)v43.i8 = vmovn_s32(v84);
  v44.i64[1] = v85.i64[1];
  *(int16x4_t *)v44.i8 = vmovn_s32(v85);
  LODWORD(v45) = vmovn_s16(v11).u32[0];
  DWORD1(v45) = vmovn_s16(v10).u32[0];
  DWORD2(v45) = vmovn_s16(v7).u32[0];
  HIDWORD(v45) = vmovn_s16(v6).u32[0];
  LODWORD(v46) = vmovn_s16(v5).u32[0];
  DWORD1(v46) = vmovn_s16(v37).u32[0];
  DWORD2(v46) = vmovn_s16(v23).u32[0];
  *(int16x4_t *)v23.i8 = vmovn_s32(v86);
  HIDWORD(v46) = vmovn_s16(v35).u32[0];
  *a1 = v45;
  a1[1] = v46;
  int8x16_t v47 = (_OWORD *)((char *)a1 + a2);
  LODWORD(v48) = vmovn_s16(v9).u32[0];
  DWORD1(v48) = vmovn_s16(v8).u32[0];
  DWORD2(v48) = vmovn_s16(v36).u32[0];
  HIDWORD(v48) = vmovn_s16(v34).u32[0];
  LODWORD(v49) = vmovn_s16(v33).u32[0];
  DWORD1(v49) = vmovn_s16(v32).u32[0];
  DWORD2(v49) = vmovn_s16(v30).u32[0];
  HIDWORD(v49) = vmovn_s16(v26).u32[0];
  *int8x16_t v47 = v48;
  v47[1] = v49;
  LODWORD(v50) = vmovn_s16(v31).u32[0];
  DWORD1(v50) = vmovn_s16(v29).u32[0];
  DWORD2(v50) = vmovn_s16(v24).u32[0];
  unint64_t v51 = (_OWORD *)((char *)a1 + a2 + a2);
  HIDWORD(v50) = vmovn_s16(v22).u32[0];
  LODWORD(v52) = vmovn_s16(v27).u32[0];
  DWORD1(v52) = vmovn_s16(v25).u32[0];
  DWORD2(v52) = vmovn_s16(v28).u32[0];
  HIDWORD(v52) = vmovn_s16(v43).u32[0];
  *unint64_t v51 = v50;
  v51[1] = v52;
  v53.i32[0] = vmovn_s16(v21).u32[0];
  v53.i32[1] = vmovn_s16(v40).u32[0];
  v53.i32[2] = vmovn_s16(v39).u32[0];
  v53.i32[3] = vmovn_s16(v38).u32[0];
  v38.i32[0] = vmovn_s16(v41).u32[0];
  v38.i32[1] = vmovn_s16(v42).u32[0];
  v38.i32[2] = vmovn_s16(v44).u32[0];
  v38.i32[3] = vmovn_s16(v23).u32[0];
  unint64_t v54 = (int16x8_t *)((char *)v51 + a2);
  *unint64_t v54 = v53;
  v54[1] = v38;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(unint64_t result, uint64_t a2, int a3)
{
  unint64_t v3 = result & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = 8 * (result & 7);
  unsigned int v5 = a3 & 0xFFFFFFFD;
  int v6 = ((a3 & 0xFFFFFFFD) == 1) << 7;
  if (a3 == 4)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 8 * (result & 7);
    while ((unint64_t)(v9 - v4 + (v8 << 6) - 125) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      char v11 = 0;
      uint64_t v12 = 0;
      unint64_t v13 = 4;
      do
      {
        unint64_t v14 = 64 - v9;
        if (64 - v9 >= v13) {
          unint64_t v14 = v13;
        }
        v11 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v14)) << v12;
        v12 += v14;
        unint64_t v15 = v14 + v9;
        v8 += v15 >> 6;
        uint64_t v9 = v15 & 0x3F;
        v13 -= v14;
      }
      while (v13);
      unint64_t result = 16 * v7;
      *(_DWORD *)(a2 + 16 * v7) = (16 * (v11 & 0xF)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 125) < 0xFFFFFFFFFFFFFF7FLL) {
        goto LABEL_4;
      }
      char v16 = 0;
      uint64_t v17 = 0;
      unint64_t v18 = 4;
      do
      {
        unint64_t v19 = 64 - v9;
        if (64 - v9 >= v18) {
          unint64_t v19 = v18;
        }
        v16 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v19)) << v17;
        v17 += v19;
        unint64_t v20 = v19 + v9;
        v8 += v20 >> 6;
        uint64_t v9 = v20 & 0x3F;
        v18 -= v19;
      }
      while (v18);
      unint64_t result = a2 + 16 * v7;
      *(_DWORD *)(result + 4) = (16 * (v16 & 0xF)) ^ v6;
      if ((unint64_t)(v9 - v4 + (v8 << 6) - 125) >= 0xFFFFFFFFFFFFFF7FLL)
      {
        char v21 = 0;
        uint64_t v22 = 0;
        unint64_t v23 = 4;
        do
        {
          unint64_t v24 = 64 - v9;
          if (64 - v9 >= v23) {
            unint64_t v24 = v23;
          }
          v21 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v24)) << v22;
          v22 += v24;
          unint64_t v25 = v24 + v9;
          v8 += v25 >> 6;
          uint64_t v9 = v25 & 0x3F;
          v23 -= v24;
        }
        while (v23);
        unint64_t result = a2 + 16 * v7;
        *(_DWORD *)(result + 8) = (16 * (v21 & 0xF)) ^ v6;
        if ((unint64_t)(v9 - v4 + (v8 << 6) - 125) >= 0xFFFFFFFFFFFFFF7FLL)
        {
          char v10 = 0;
          uint64_t v26 = 0;
          unint64_t result = 4;
          do
          {
            unint64_t v27 = 64 - v9;
            if (64 - v9 >= result) {
              unint64_t v27 = result;
            }
            v10 |= (unint64_t)((*(void *)(v3 + 8 * v8) >> v9) & ~(-1 << v27)) << v26;
            v26 += v27;
            unint64_t v28 = v27 + v9;
            v8 += v28 >> 6;
            uint64_t v9 = v28 & 0x3F;
            result -= v27;
          }
          while (result);
        }
        else
        {
          char v10 = 0;
        }
        goto LABEL_6;
      }
LABEL_5:
      char v10 = 0;
      *(_DWORD *)(a2 + 16 * v7 + 8) = v6;
LABEL_6:
      *(_DWORD *)(a2 + 16 * v7++ + 12) = (16 * (v10 & 0xF)) ^ v6;
      if (v7 == 8) {
        return result;
      }
    }
    *(_DWORD *)(a2 + 16 * v7) = v6;
LABEL_4:
    *(_DWORD *)(a2 + 16 * v7 + 4) = v6;
    goto LABEL_5;
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  unint64_t result = 8 * (result & 7);
  do
  {
    if (result - v4 + (v30 << 6) - 125 >= 0xFFFFFFFFFFFFFF7FLL)
    {
      char v31 = 0;
      uint64_t v32 = 0;
      unint64_t v33 = 4;
      do
      {
        unint64_t v34 = 64 - result;
        if (64 - result >= v33) {
          unint64_t v34 = v33;
        }
        v31 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v34)) << v32;
        v32 += v34;
        unint64_t v35 = v34 + result;
        v30 += v35 >> 6;
        unint64_t result = v35 & 0x3F;
        v33 -= v34;
      }
      while (v33);
    }
    else
    {
      char v31 = 0;
    }
    int v36 = 16 * (v31 & 0xF);
    BOOL v37 = v36 == 128 && v5 == 1;
    if (!v37 && v36)
    {
      if (v36 == 240) {
        int v36 = 255;
      }
      else {
        v36 |= 8 - (v31 & 1);
      }
    }
    *(_DWORD *)(a2 + 16 * v29) = v36 ^ v6;
    if (result - v4 + (v30 << 6) - 125 >= 0xFFFFFFFFFFFFFF7FLL)
    {
      char v38 = 0;
      uint64_t v39 = 0;
      unint64_t v40 = 4;
      do
      {
        unint64_t v41 = 64 - result;
        if (64 - result >= v40) {
          unint64_t v41 = v40;
        }
        v38 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v41)) << v39;
        v39 += v41;
        unint64_t v42 = v41 + result;
        v30 += v42 >> 6;
        unint64_t result = v42 & 0x3F;
        v40 -= v41;
      }
      while (v40);
    }
    else
    {
      char v38 = 0;
    }
    int v43 = 16 * (v38 & 0xF);
    if ((v43 != 128 || v5 != 1) && v43 != 0)
    {
      int v46 = (8 - (v38 & 1)) | v43;
      if (v43 == 240) {
        int v43 = 255;
      }
      else {
        int v43 = v46;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 4) = v43 ^ v6;
    if (result - v4 + (v30 << 6) - 125 >= 0xFFFFFFFFFFFFFF7FLL)
    {
      char v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 4;
      do
      {
        unint64_t v50 = 64 - result;
        if (64 - result >= v49) {
          unint64_t v50 = v49;
        }
        v47 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v50)) << v48;
        v48 += v50;
        unint64_t v51 = v50 + result;
        v30 += v51 >> 6;
        unint64_t result = v51 & 0x3F;
        v49 -= v50;
      }
      while (v49);
    }
    else
    {
      char v47 = 0;
    }
    int v52 = 16 * (v47 & 0xF);
    if ((v52 != 128 || v5 != 1) && v52 != 0)
    {
      int v55 = (8 - (v47 & 1)) | v52;
      if (v52 == 240) {
        int v52 = 255;
      }
      else {
        int v52 = v55;
      }
    }
    *(_DWORD *)(a2 + 16 * v29 + 8) = v52 ^ v6;
    if (result - v4 + (v30 << 6) - 125 >= 0xFFFFFFFFFFFFFF7FLL)
    {
      char v56 = 0;
      uint64_t v57 = 0;
      unint64_t v58 = 4;
      do
      {
        unint64_t v59 = 64 - result;
        if (64 - result >= v58) {
          unint64_t v59 = v58;
        }
        v56 |= (unint64_t)((*(void *)(v3 + 8 * v30) >> result) & ~(-1 << v59)) << v57;
        v57 += v59;
        unint64_t v60 = v59 + result;
        v30 += v60 >> 6;
        unint64_t result = v60 & 0x3F;
        v58 -= v59;
      }
      while (v58);
    }
    else
    {
      char v56 = 0;
    }
    int v61 = 16 * (v56 & 0xF);
    if ((v61 != 128 || v5 != 1) && v61 != 0)
    {
      int v64 = (8 - (v56 & 1)) | v61;
      if (v61 == 240) {
        int v61 = 255;
      }
      else {
        int v61 = v64;
      }
    }
    *(_DWORD *)(a2 + 16 * v29++ + 12) = v61 ^ v6;
  }
  while (v29 != 8);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v282 = *MEMORY[0x263EF8340];
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = 8 * (a1 & 7);
  unint64_t v6 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (v6 >> v5) & 7;
  uint64_t v8 = v5 | 3;
  uint64_t v9 = (v6 >> (v5 | 3u)) & 7;
  if ((v5 | 3uLL) - v5 <= 0x7D) {
    uint64_t v10 = ((8 * (a1 & 7)) | 6) - v5;
  }
  else {
    uint64_t v10 = v8 - v5;
  }
  if ((unint64_t)(v8 - v5) <= 0x7D) {
    uint64_t v11 = (8 * (a1 & 7)) | 6;
  }
  else {
    uint64_t v11 = (8 * (a1 & 7)) | 3;
  }
  if ((unint64_t)(v8 - v5) <= 0x7D) {
    int v12 = v9;
  }
  else {
    int v12 = 0;
  }
  int v261 = v12;
  if ((unint64_t)(v10 - 126) >= 0xFFFFFFFFFFFFFF7FLL)
  {
    uint64_t v15 = 0;
    int v13 = 0;
    uint64_t v17 = 0;
    unint64_t v18 = 3;
    do
    {
      unint64_t v19 = 64 - v11;
      if (64 - v11 >= v18) {
        unint64_t v19 = v18;
      }
      v13 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v19)) << v17);
      v17 += v19;
      v15 += (v19 + v11) >> 6;
      uint64_t v11 = (v19 + v11) & 0x3F;
      v18 -= v19;
    }
    while (v18);
    uint64_t v14 = v15 << 6;
    uint64_t v10 = v11 - v5;
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x80)
    {
      int v16 = 0;
      uint64_t v20 = 0;
      unint64_t v21 = 3;
      do
      {
        unint64_t v22 = 64 - v11;
        if (64 - v11 >= v21) {
          unint64_t v22 = v21;
        }
        v16 |= ((unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v22)) << v20);
        v20 += v22;
        v15 += (v22 + v11) >> 6;
        uint64_t v11 = (v22 + v11) & 0x3F;
        v21 -= v22;
      }
      while (v21);
      uint64_t v14 = v15 << 6;
      uint64_t v10 = v11 - v5;
    }
    else
    {
      int v16 = 0;
    }
  }
  else
  {
    int v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    int v16 = 0;
  }
  memset_pattern16(&__b, &unk_242EA8880, 0x10uLL);
  char v23 = 0;
  unint64_t v24 = 2 * (v7 == 0);
  int v264 = 2 * (v7 == 0);
  if (v7)
  {
    int v26 = v261;
    int v259 = 0;
    unsigned int v28 = v7 + 2;
  }
  else
  {
    if (v10 + v14 + v24 > 0x80)
    {
      int v26 = v261;
    }
    else
    {
      char v23 = 0;
      uint64_t v25 = 0;
      int v26 = v261;
      do
      {
        unint64_t v27 = 64 - v11;
        if (64 - v11 >= v24) {
          unint64_t v27 = v24;
        }
        v23 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v27)) << v25;
        v25 += v27;
        v15 += (v27 + v11) >> 6;
        uint64_t v11 = (v27 + v11) & 0x3F;
        v24 -= v27;
      }
      while (v24);
    }
    unsigned int v29 = v23 & 3;
    if (v29 == 3)
    {
      int v259 = 0;
      unsigned int v28 = 2;
    }
    else
    {
      uint64_t v30 = 4 * v29;
      int v259 = *(_DWORD *)((char *)&unk_242EA9110 + v30);
      unsigned int v28 = *(_DWORD *)((char *)&unk_242EAA17C + v30);
    }
  }
  char v31 = 0;
  v281[0] = v28;
  v280[0] = 0;
  unint64_t v32 = 2 * (v26 == 0);
  int v263 = 2 * (v26 == 0);
  if (!v26 && v11 - v5 + (v15 << 6) + v32 <= 0x80)
  {
    char v31 = 0;
    uint64_t v33 = 0;
    do
    {
      unint64_t v34 = 64 - v11;
      if (64 - v11 >= v32) {
        unint64_t v34 = v32;
      }
      v31 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v34)) << v33;
      v33 += v34;
      v15 += (v34 + v11) >> 6;
      uint64_t v11 = (v34 + v11) & 0x3F;
      v32 -= v34;
    }
    while (v32);
  }
  if (v26)
  {
    int v258 = 0;
    unsigned int v35 = v26 + 2;
  }
  else
  {
    unsigned int v36 = v31 & 3;
    if (v36 == 3)
    {
      int v258 = 0;
      unsigned int v35 = 2;
    }
    else
    {
      uint64_t v37 = 4 * v36;
      int v258 = *(_DWORD *)((char *)&unk_242EA9110 + v37);
      unsigned int v35 = *(_DWORD *)((char *)&unk_242EAA17C + v37);
    }
  }
  char v38 = 0;
  v281[1] = v35;
  v280[1] = 0;
  unint64_t v39 = 2 * (v13 == 0);
  int v262 = 2 * (v13 == 0);
  if (!v13 && v11 - v5 + (v15 << 6) + v39 <= 0x80)
  {
    char v38 = 0;
    uint64_t v40 = 0;
    do
    {
      unint64_t v41 = 64 - v11;
      if (64 - v11 >= v39) {
        unint64_t v41 = v39;
      }
      v38 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v41)) << v40;
      v40 += v41;
      v15 += (v41 + v11) >> 6;
      uint64_t v11 = (v41 + v11) & 0x3F;
      v39 -= v41;
    }
    while (v39);
  }
  if ((v13 & 7) != 0)
  {
    int v257 = 0;
    int v42 = (v13 & 7) + 2;
  }
  else
  {
    unsigned int v43 = v38 & 3;
    if (v43 == 3)
    {
      int v257 = 0;
      int v42 = 2;
    }
    else
    {
      uint64_t v44 = 4 * v43;
      int v257 = *(_DWORD *)((char *)&unk_242EA9110 + v44);
      int v42 = *(_DWORD *)((char *)&unk_242EAA17C + v44);
    }
  }
  char v45 = 0;
  v281[2] = v42;
  v280[2] = 0;
  uint64_t v46 = 2 * (v16 == 0);
  if (!v16 && (unint64_t)(v11 - v5 + (v15 << 6) + v46) <= 0x80)
  {
    char v45 = 0;
    uint64_t v47 = 0;
    unint64_t v48 = 2 * (v16 == 0);
    do
    {
      unint64_t v49 = 64 - v11;
      if (64 - v11 >= v48) {
        unint64_t v49 = v48;
      }
      v45 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v49)) << v47;
      v47 += v49;
      v15 += (v49 + v11) >> 6;
      uint64_t v11 = (v49 + v11) & 0x3F;
      v48 -= v49;
    }
    while (v48);
  }
  int v50 = v16 & 7;
  if ((v16 & 7) != 0)
  {
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    int v256 = 0;
    unsigned int v53 = v50 + 2;
  }
  else
  {
    unsigned int v54 = v45 & 3;
    unsigned int v51 = v35;
    unsigned int v52 = v28;
    if (v54 == 3)
    {
      int v256 = 0;
      unsigned int v53 = 2;
    }
    else
    {
      uint64_t v55 = 4 * v54;
      int v256 = *(_DWORD *)((char *)&unk_242EA9110 + v55);
      unsigned int v53 = *(_DWORD *)((char *)&unk_242EAA17C + v55);
    }
  }
  unsigned int v56 = v53;
  v281[3] = v53;
  v280[3] = 0;
  uint64_t v274 = 0;
  uint64_t v275 = 0;
  uint64_t v272 = 0;
  uint64_t v273 = 0;
  AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::deriveLossyDQuadBitSharing(v280, v281, &v274, &v272);
  unsigned int v57 = v52;
  unint64_t v58 = &kDQuadParamTable[10 * v52];
  unsigned int v60 = v58[4];
  unsigned int v59 = v58[5];
  int v61 = v272 - v274;
  if ((int)v272 - (int)v274 >= 0)
  {
    unsigned int v62 = v59;
    unsigned int v63 = v51;
    int v64 = v42;
    unsigned int v65 = v56;
    int v66 = v264;
    if (!v61) {
      goto LABEL_77;
    }
    unsigned int v62 = v61 + v59;
    goto LABEL_71;
  }
  unsigned int v67 = v52;
  int v68 = kDQuadParamTable[10 * v52 + 7];
  unsigned int v63 = v51;
  int v64 = v42;
  if (v68 >= (int)v274 - (int)v272)
  {
    unsigned int v62 = v59;
    unsigned int v65 = v56;
  }
  else
  {
    unsigned int v62 = v59 - 1;
    unsigned int v65 = v56;
    if (!kDQuadParamTable[10 * v67 + 8])
    {
      int v61 = -1;
      int v66 = v264;
LABEL_71:
      v60 += v61;
      goto LABEL_77;
    }
  }
  int v66 = v264;
LABEL_77:
  int v69 = v66 | 0xC;
  if (__b >= v60) {
    unint64_t v70 = v60;
  }
  else {
    unint64_t v70 = __b;
  }
  v271[0] = v70;
  if (v59) {
    LODWORD(v71) = __b;
  }
  else {
    LODWORD(v71) = 0;
  }
  if (v71 >= v62) {
    unint64_t v71 = v62;
  }
  else {
    unint64_t v71 = v71;
  }
  v270[0] = v71;
  int32x4_t v72 = &kDQuadParamTable[10 * v63];
  unsigned int v74 = v72[4];
  unsigned int v73 = v72[5];
  int v75 = HIDWORD(v272) - HIDWORD(v274);
  if (HIDWORD(v272) - HIDWORD(v274) >= 0)
  {
    unsigned int v76 = v73;
    if (!v75) {
      goto LABEL_94;
    }
    unsigned int v76 = v75 + v73;
    goto LABEL_89;
  }
  if (kDQuadParamTable[10 * v63 + 7] >= HIDWORD(v274) - HIDWORD(v272))
  {
    unsigned int v76 = v73;
  }
  else
  {
    unsigned int v76 = v73 - 1;
    if (!kDQuadParamTable[10 * v63 + 8])
    {
      int v75 = -1;
LABEL_89:
      v74 += v75;
    }
  }
LABEL_94:
  int v77 = v69 + v263;
  if (v277 >= v74) {
    unint64_t v78 = v74;
  }
  else {
    unint64_t v78 = v277;
  }
  v271[1] = v78;
  if (v73) {
    LODWORD(v79) = v277;
  }
  else {
    LODWORD(v79) = 0;
  }
  if (v79 >= v76) {
    unint64_t v79 = v76;
  }
  else {
    unint64_t v79 = v79;
  }
  v270[1] = v79;
  int32x4_t v80 = &kDQuadParamTable[10 * v64];
  unsigned int v82 = v80[4];
  unsigned int v81 = v80[5];
  int v83 = v273 - v275;
  if ((int)v273 - (int)v275 >= 0)
  {
    unsigned int v84 = v81;
    if (!v83) {
      goto LABEL_111;
    }
    unsigned int v84 = v83 + v81;
    goto LABEL_106;
  }
  if (kDQuadParamTable[10 * v64 + 7] >= (int)v275 - (int)v273)
  {
    unsigned int v84 = v81;
  }
  else
  {
    unsigned int v84 = v81 - 1;
    if (!kDQuadParamTable[10 * v64 + 8])
    {
      int v83 = -1;
LABEL_106:
      v82 += v83;
    }
  }
LABEL_111:
  int v85 = v77 + v262;
  if (v278 >= v82) {
    unint64_t v86 = v82;
  }
  else {
    unint64_t v86 = v278;
  }
  v271[2] = v86;
  if (v81) {
    unsigned int v87 = v278;
  }
  else {
    unsigned int v87 = 0;
  }
  if (v87 >= v84) {
    unint64_t v88 = v84;
  }
  else {
    unint64_t v88 = v87;
  }
  v270[2] = v88;
  unint64_t v89 = &kDQuadParamTable[10 * v65];
  LODWORD(v90) = v89[4];
  unsigned int v91 = v89[5];
  int v92 = HIDWORD(v273) - HIDWORD(v275);
  if (HIDWORD(v273) - HIDWORD(v275) >= 0)
  {
    unsigned int v93 = v91;
    if (!v92) {
      goto LABEL_128;
    }
    unsigned int v93 = v92 + v91;
    goto LABEL_123;
  }
  if (kDQuadParamTable[10 * v65 + 7] >= HIDWORD(v275) - HIDWORD(v273))
  {
    unsigned int v93 = v91;
  }
  else
  {
    unsigned int v93 = v91 - 1;
    if (!kDQuadParamTable[10 * v65 + 8])
    {
      int v92 = -1;
LABEL_123:
      LODWORD(v90) = v92 + v90;
    }
  }
LABEL_128:
  if (v279 >= v90) {
    unint64_t v90 = v90;
  }
  else {
    unint64_t v90 = v279;
  }
  v271[3] = v90;
  if (v91) {
    LODWORD(v94) = v279;
  }
  else {
    LODWORD(v94) = 0;
  }
  if (v94 >= v93) {
    unint64_t v94 = v93;
  }
  else {
    unint64_t v94 = v94;
  }
  v270[3] = v94;
  int v95 = v85 + v46;
  uint64_t v268 = 0;
  uint64_t v269 = 0;
  if (v57 || __b - 8 > 4)
  {
    if (v70 <= 0x20)
    {
      int v96 = 0;
      if (v70 && v11 - v5 + (v15 << 6) + v70 <= 0x80)
      {
        int v96 = 0;
        uint64_t v97 = 0;
        unint64_t v98 = v70;
        do
        {
          unint64_t v99 = 64 - v11;
          if (64 - v11 >= v98) {
            unint64_t v99 = v98;
          }
          v96 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v99)) << v97;
          v97 += v99;
          unint64_t v100 = v99 + v11;
          v15 += v100 >> 6;
          uint64_t v11 = v100 & 0x3F;
          v98 -= v99;
        }
        while (v98);
      }
    }
    else
    {
      int v96 = 0;
    }
    LODWORD(v268) = v96 << (__b - v70);
    v95 += v70;
    if (v63)
    {
LABEL_153:
      if (v78 <= 0x20)
      {
        int v101 = 0;
        if (v78 && v11 - v5 + (v15 << 6) + v78 <= 0x80)
        {
          int v101 = 0;
          uint64_t v102 = 0;
          unint64_t v103 = v78;
          do
          {
            unint64_t v104 = 64 - v11;
            if (64 - v11 >= v103) {
              unint64_t v104 = v103;
            }
            v101 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v104)) << v102;
            v102 += v104;
            v15 += (v104 + v11) >> 6;
            uint64_t v11 = (v104 + v11) & 0x3F;
            v103 -= v104;
          }
          while (v103);
        }
      }
      else
      {
        int v101 = 0;
      }
      HIDWORD(v268) = v101 << (v277 - v78);
      v95 += v78;
      if (v64) {
        goto LABEL_165;
      }
      goto LABEL_162;
    }
  }
  else
  {
    LODWORD(v268) = v259;
    if (v63) {
      goto LABEL_153;
    }
  }
  if (v277 - 8 >= 5) {
    goto LABEL_153;
  }
  HIDWORD(v268) = v258;
  if (v64) {
    goto LABEL_165;
  }
LABEL_162:
  if (v278 - 8 < 5)
  {
    LODWORD(v269) = v257;
    if (v65) {
      goto LABEL_177;
    }
    goto LABEL_174;
  }
LABEL_165:
  if (v86 <= 0x20)
  {
    int v105 = 0;
    if (v86 && v11 - v5 + (v15 << 6) + v86 <= 0x80)
    {
      int v105 = 0;
      uint64_t v106 = 0;
      unint64_t v107 = v86;
      do
      {
        unint64_t v108 = 64 - v11;
        if (64 - v11 >= v107) {
          unint64_t v108 = v107;
        }
        v105 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v108)) << v106;
        v106 += v108;
        v15 += (v108 + v11) >> 6;
        uint64_t v11 = (v108 + v11) & 0x3F;
        v107 -= v108;
      }
      while (v107);
    }
  }
  else
  {
    int v105 = 0;
  }
  LODWORD(v269) = v105 << (v278 - v86);
  v95 += v86;
  if (v65)
  {
LABEL_177:
    if (v90 <= 0x20)
    {
      int v110 = 0;
      if (v90)
      {
        uint64_t v109 = a2;
        if (v11 - v5 + (v15 << 6) + v90 <= 0x80)
        {
          int v110 = 0;
          uint64_t v111 = 0;
          unint64_t v112 = v90;
          do
          {
            unint64_t v113 = 64 - v11;
            if (64 - v11 >= v112) {
              unint64_t v113 = v112;
            }
            v110 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v113)) << v111;
            v111 += v113;
            v15 += (v113 + v11) >> 6;
            uint64_t v11 = (v113 + v11) & 0x3F;
            v112 -= v113;
          }
          while (v112);
        }
LABEL_187:
        HIDWORD(v269) = v110 << (v279 - v90);
        v95 += v90;
        uint64_t v266 = 0;
        uint64_t v267 = 0;
        if (v71) {
          goto LABEL_188;
        }
        goto LABEL_195;
      }
    }
    else
    {
      int v110 = 0;
    }
    uint64_t v109 = a2;
    goto LABEL_187;
  }
LABEL_174:
  if (v279 - 8 >= 5) {
    goto LABEL_177;
  }
  HIDWORD(v269) = v256;
  uint64_t v109 = a2;
  uint64_t v266 = 0;
  uint64_t v267 = 0;
  if (v71)
  {
LABEL_188:
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x80)
    {
      int v114 = 0;
      uint64_t v115 = 0;
      unint64_t v116 = 3;
      do
      {
        unint64_t v117 = 64 - v11;
        if (64 - v11 >= v116) {
          unint64_t v117 = v116;
        }
        v114 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v117)) << v115;
        v115 += v117;
        v15 += (v117 + v11) >> 6;
        uint64_t v11 = (v117 + v11) & 0x3F;
        v116 -= v117;
      }
      while (v116);
    }
    else
    {
      int v114 = 0;
    }
    LODWORD(v266) = v114;
    v95 += 3;
  }
LABEL_195:
  if (v79)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x80)
    {
      int v118 = 0;
      uint64_t v119 = 0;
      unint64_t v120 = 3;
      do
      {
        unint64_t v121 = 64 - v11;
        if (64 - v11 >= v120) {
          unint64_t v121 = v120;
        }
        v118 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v121)) << v119;
        v119 += v121;
        v15 += (v121 + v11) >> 6;
        uint64_t v11 = (v121 + v11) & 0x3F;
        v120 -= v121;
      }
      while (v120);
    }
    else
    {
      int v118 = 0;
    }
    HIDWORD(v266) = v118;
    v95 += 3;
  }
  if (v88)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x80)
    {
      int v122 = 0;
      uint64_t v123 = 0;
      unint64_t v124 = 3;
      do
      {
        unint64_t v125 = 64 - v11;
        if (64 - v11 >= v124) {
          unint64_t v125 = v124;
        }
        v122 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v125)) << v123;
        v123 += v125;
        v15 += (v125 + v11) >> 6;
        uint64_t v11 = (v125 + v11) & 0x3F;
        v124 -= v125;
      }
      while (v124);
    }
    else
    {
      int v122 = 0;
    }
    LODWORD(v267) = v122;
    v95 += 3;
  }
  if (v94)
  {
    if ((unint64_t)(v11 - v5 + (v15 << 6) + 3) <= 0x80)
    {
      int v126 = 0;
      uint64_t v127 = 0;
      unint64_t v128 = 3;
      do
      {
        unint64_t v129 = 64 - v11;
        if (64 - v11 >= v128) {
          unint64_t v129 = v128;
        }
        v126 |= (unint64_t)((*(void *)(v4 + 8 * v15) >> v11) & ~(-1 << v129)) << v127;
        v127 += v129;
        v15 += (v129 + v11) >> 6;
        uint64_t v11 = (v129 + v11) & 0x3F;
        v128 -= v129;
      }
      while (v128);
    }
    else
    {
      int v126 = 0;
    }
    HIDWORD(v267) = v126;
    v95 += 3;
  }
  uint64_t v130 = 0;
  unsigned int v131 = a3 & 0xFFFFFFFD;
  unsigned int v132 = 128 - v95;
  unsigned int v133 = (128 - v95) / 7u;
  unint64_t v134 = (v11 | (v15 << 6)) + v132 % 7;
  memset(v265, 0, sizeof(v265));
  do
  {
    unint64_t v137 = v134 >> 6;
    unint64_t v138 = v134 & 0x3F;
    if (v71)
    {
      if (v71 <= 0x20 && v138 - v5 + (v134 & 0xFFFFFFFFFFFFFFC0) + v71 <= 0x80)
      {
        int v139 = 0;
        uint64_t v140 = 0;
        unint64_t v141 = v71;
        do
        {
          unint64_t v142 = 64 - v138;
          if (64 - v138 >= v141) {
            unint64_t v142 = v141;
          }
          v139 |= (unint64_t)((*(void *)(v4 + 8 * v137) >> v138) & ~(-1 << v142)) << v140;
          v140 += v142;
          unint64_t v143 = v142 + v138;
          v137 += v143 >> 6;
          unint64_t v138 = v143 & 0x3F;
          v141 -= v142;
        }
        while (v141);
      }
      else
      {
        int v139 = 0;
      }
      *((_DWORD *)v265 + v130) = v139;
    }
    if (!v79)
    {
      int v136 = v71;
      if (!v88) {
        goto LABEL_251;
      }
LABEL_243:
      if (v88 <= 0x20 && v138 - v5 + (v137 << 6) + v88 <= 0x80)
      {
        int v149 = 0;
        uint64_t v150 = 0;
        unint64_t v151 = v88;
        do
        {
          unint64_t v152 = 64 - v138;
          if (64 - v138 >= v151) {
            unint64_t v152 = v151;
          }
          v149 |= (unint64_t)((*(void *)(v4 + 8 * v137) >> v138) & ~(-1 << v152)) << v150;
          v150 += v152;
          unint64_t v153 = v152 + v138;
          v137 += v153 >> 6;
          unint64_t v138 = v153 & 0x3F;
          v151 -= v152;
        }
        while (v151);
      }
      else
      {
        int v149 = 0;
      }
      *((_DWORD *)&v265[3] + v130 + 2) = v149;
      v136 += v88;
      goto LABEL_251;
    }
    if (v79 <= 0x20 && v138 - v5 + (v137 << 6) + v79 <= 0x80)
    {
      int v144 = 0;
      uint64_t v145 = 0;
      unint64_t v146 = v79;
      do
      {
        unint64_t v147 = 64 - v138;
        if (64 - v138 >= v146) {
          unint64_t v147 = v146;
        }
        v144 |= (unint64_t)((*(void *)(v4 + 8 * v137) >> v138) & ~(-1 << v147)) << v145;
        v145 += v147;
        unint64_t v148 = v147 + v138;
        v137 += v148 >> 6;
        unint64_t v138 = v148 & 0x3F;
        v146 -= v147;
      }
      while (v146);
    }
    else
    {
      int v144 = 0;
    }
    *((_DWORD *)&v265[1] + v130 + 3) = v144;
    int v136 = v79 + v71;
    if (v88) {
      goto LABEL_243;
    }
LABEL_251:
    if (v94)
    {
      if (v94 > 0x20 || v138 - v5 + (v137 << 6) + v94 > 0x80)
      {
        int v135 = 0;
      }
      else
      {
        int v135 = 0;
        uint64_t v154 = 0;
        unint64_t v155 = v94;
        do
        {
          unint64_t v156 = 64 - v138;
          if (64 - v138 >= v155) {
            unint64_t v156 = v155;
          }
          v135 |= (unint64_t)((*(void *)(v4 + 8 * v137) >> v138) & ~(-1 << v156)) << v154;
          v154 += v156;
          unint64_t v157 = v156 + v138;
          v137 += v157 >> 6;
          unint64_t v138 = v157 & 0x3F;
          v155 -= v156;
        }
        while (v155);
      }
      *((_DWORD *)&v265[5] + v130 + 1) = v135;
      v136 += v94;
    }
    unint64_t v134 = (v138 | (v137 << 6)) + v133 - v136;
    ++v130;
  }
  while (v130 != 7);
  unint64_t v158 = 0;
  uint64_t v159 = 0;
  uint64_t v160 = v109 + 112;
  do
  {
    unint64_t v165 = *(void *)&kDQuadParamTable[160 * v280[v158 / 4] + 2 + 10 * v281[v158 / 4]];
    int v166 = v270[v158 / 4];
    unint64_t v167 = v165 >> v166;
    if (v165 >> v166 <= 1) {
      unint64_t v167 = 1;
    }
    int v168 = *(unsigned int *)((char *)&__b + v158);
    unint64_t v169 = v167 >> 1;
    unint64_t v170 = (unint64_t)(1 << (v168 - v271[v158 / 4])) >> 1;
    if (v167 >> 1 < v170) {
      unint64_t v170 = v167 >> 1;
    }
    unint64_t v171 = (1 << (v168 - 1));
    unint64_t v172 = *(unsigned int *)((char *)&v268 + v158);
    unint64_t v173 = v171 - v172;
    unint64_t v174 = 1 << v168;
    int v175 = (1 << v168) - 1;
    if (v172) {
      unint64_t v176 = v170;
    }
    else {
      unint64_t v176 = 0;
    }
    BOOL v177 = v172 == v171;
    BOOL v178 = v168 == 16;
    if (v168 == 16) {
      unint64_t result = 31744;
    }
    else {
      unint64_t result = 2139095040;
    }
    if (v168 == 16) {
      unint64_t v180 = 64512;
    }
    else {
      unint64_t v180 = 4286578688;
    }
    unint64_t v181 = 2143289344;
    if (v178) {
      unint64_t v181 = 32256;
    }
    unint64_t v182 = 4290772992;
    if (v178) {
      unint64_t v182 = 65024;
    }
    unint64_t v183 = (v180 - 1);
    if (v166)
    {
      unint64_t v184 = v165 + v172;
      uint64_t v185 = ~(-1 << v166);
      int v186 = *(_DWORD *)((char *)&v266 + v158);
      unint64_t v187 = v173 / v167;
      if (!v186)
      {
        uint64_t v196 = 0;
        unint64_t v190 = v176;
        BOOL v189 = v172 == v171;
        goto LABEL_322;
      }
      uint64_t v188 = *(unsigned int *)((char *)v265 + v159);
      BOOL v189 = v187 == v188;
      if (v172 | v188)
      {
        if (v184 >= v174 && v188 == v185)
        {
          uint64_t v196 = 1;
          unint64_t v190 = v174 - 1;
          goto LABEL_322;
        }
        unint64_t v190 = v169 + v167 * v188;
      }
      else
      {
        unint64_t v190 = 0;
      }
      uint64_t v196 = 1;
LABEL_322:
      unint64_t v197 = v190 + v172;
      unint64_t v198 = v197;
      if (a3 == 4)
      {
        BOOL v199 = v197 < result || v197 >= v181;
        unint64_t v198 = (result - 1);
        if (v199)
        {
          BOOL v200 = v197 < v181 || v197 >= v171;
          unint64_t v198 = v171;
          if (v200)
          {
            if (v197 < v182 && v197 >= v180) {
              unint64_t v198 = (v180 - 1);
            }
            else {
              unint64_t v198 = v197;
            }
          }
        }
      }
      if (v198 >= v174) {
        int v202 = v175;
      }
      else {
        int v202 = v198;
      }
      if (v189) {
        int v203 = 0;
      }
      else {
        int v203 = v202 ^ v171;
      }
      if (v131 != 1) {
        int v203 = v202;
      }
      *(_DWORD *)(v160 + v158 - 112) = v203;
      if (v186 == 1)
      {
        unint64_t v204 = v176;
        BOOL v205 = v172 == v171;
      }
      else
      {
        uint64_t v206 = *(unsigned int *)(((unint64_t)v265 | (4 * v196)) + v159);
        BOOL v205 = v187 == v206;
        if (v172 | v206)
        {
          if (v184 < v174 || (unint64_t v204 = v174 - 1, v206 != v185)) {
            unint64_t v204 = v169 + v167 * v206;
          }
        }
        else
        {
          unint64_t v204 = 0;
        }
        ++v196;
      }
      unint64_t v207 = v204 + v172;
      unint64_t v208 = v207;
      if (a3 == 4)
      {
        BOOL v209 = v207 < result || v207 >= v181;
        unint64_t v208 = (result - 1);
        if (v209)
        {
          if (v207 < v181 || (unint64_t v208 = v171, v207 >= v171))
          {
            if (v207 < v182 && v207 >= v180) {
              unint64_t v208 = (v180 - 1);
            }
            else {
              unint64_t v208 = v207;
            }
          }
        }
      }
      if (v208 >= v174) {
        int v211 = v175;
      }
      else {
        int v211 = v208;
      }
      if (v205) {
        int v212 = 0;
      }
      else {
        int v212 = v211 ^ v171;
      }
      if (v131 != 1) {
        int v212 = v211;
      }
      *(_DWORD *)(v160 + v158 - 96) = v212;
      if (v186 == 2)
      {
        unint64_t v213 = v176;
        BOOL v214 = v172 == v171;
      }
      else
      {
        uint64_t v215 = *(unsigned int *)(((unint64_t)v265 | (4 * v196)) + v159);
        BOOL v214 = v187 == v215;
        if (v172 | v215)
        {
          if (v184 < v174 || (unint64_t v213 = v174 - 1, v215 != v185)) {
            unint64_t v213 = v169 + v167 * v215;
          }
        }
        else
        {
          unint64_t v213 = 0;
        }
        ++v196;
      }
      unint64_t v216 = v213 + v172;
      unint64_t v217 = v216;
      if (a3 == 4)
      {
        if (v216 < result || (unint64_t v217 = (result - 1), v216 >= v181))
        {
          if (v216 < v181 || (unint64_t v217 = v171, v216 >= v171))
          {
            if (v216 < v182 && v216 >= v180) {
              unint64_t v217 = (v180 - 1);
            }
            else {
              unint64_t v217 = v216;
            }
          }
        }
      }
      if (v217 >= v174) {
        int v219 = v175;
      }
      else {
        int v219 = v217;
      }
      if (v214) {
        int v220 = 0;
      }
      else {
        int v220 = v219 ^ v171;
      }
      if (v131 != 1) {
        int v220 = v219;
      }
      *(_DWORD *)(v160 + v158 - 80) = v220;
      if (v186 == 3)
      {
        unint64_t v221 = v176;
        BOOL v222 = v172 == v171;
      }
      else
      {
        uint64_t v223 = *(unsigned int *)((char *)v265 + 4 * v196 + v159);
        BOOL v222 = v187 == v223;
        if (v172 | v223)
        {
          if (v184 < v174 || (unint64_t v221 = v174 - 1, v223 != v185)) {
            unint64_t v221 = v169 + v167 * v223;
          }
        }
        else
        {
          unint64_t v221 = 0;
        }
        ++v196;
      }
      unint64_t v224 = v221 + v172;
      unint64_t v225 = v224;
      if (a3 == 4)
      {
        if (v224 < result || (unint64_t v225 = (result - 1), v224 >= v181))
        {
          if (v224 < v181 || (unint64_t v225 = v171, v224 >= v171))
          {
            if (v224 < v182 && v224 >= v180) {
              unint64_t v225 = (v180 - 1);
            }
            else {
              unint64_t v225 = v224;
            }
          }
        }
      }
      if (v225 >= v174) {
        int v227 = v175;
      }
      else {
        int v227 = v225;
      }
      if (v222) {
        int v228 = 0;
      }
      else {
        int v228 = v227 ^ v171;
      }
      if (v131 != 1) {
        int v228 = v227;
      }
      *(_DWORD *)(v160 + v158 - 64) = v228;
      if (v186 == 4)
      {
        unint64_t v229 = v176;
        BOOL v230 = v172 == v171;
      }
      else
      {
        uint64_t v231 = *(unsigned int *)((char *)v265 + 4 * v196 + v159);
        BOOL v230 = v187 == v231;
        if (v172 | v231)
        {
          if (v184 < v174 || (unint64_t v229 = v174 - 1, v231 != v185)) {
            unint64_t v229 = v169 + v167 * v231;
          }
        }
        else
        {
          unint64_t v229 = 0;
        }
        ++v196;
      }
      unint64_t v232 = v229 + v172;
      unint64_t v233 = v232;
      if (a3 == 4)
      {
        if (v232 < result || (unint64_t v233 = (result - 1), v232 >= v181))
        {
          if (v232 < v181 || (unint64_t v233 = v171, v232 >= v171))
          {
            if (v232 < v182 && v232 >= v180) {
              unint64_t v233 = (v180 - 1);
            }
            else {
              unint64_t v233 = v232;
            }
          }
        }
      }
      if (v233 >= v174) {
        int v235 = v175;
      }
      else {
        int v235 = v233;
      }
      if (v230) {
        int v236 = 0;
      }
      else {
        int v236 = v235 ^ v171;
      }
      if (v131 != 1) {
        int v236 = v235;
      }
      *(_DWORD *)(v160 + v158 - 48) = v236;
      if (v186 == 5)
      {
        unint64_t v237 = v176;
        BOOL v238 = v172 == v171;
      }
      else
      {
        uint64_t v239 = *(unsigned int *)((char *)v265 + 4 * v196 + v159);
        BOOL v238 = v187 == v239;
        if (v172 | v239)
        {
          if (v184 < v174 || (unint64_t v237 = v174 - 1, v239 != v185)) {
            unint64_t v237 = v169 + v167 * v239;
          }
        }
        else
        {
          unint64_t v237 = 0;
        }
        ++v196;
      }
      unint64_t v240 = v237 + v172;
      unint64_t v241 = v240;
      if (a3 == 4)
      {
        if (v240 < result || (unint64_t v241 = (result - 1), v240 >= v181))
        {
          if (v240 < v181 || (unint64_t v241 = v171, v240 >= v171))
          {
            if (v240 < v182 && v240 >= v180) {
              unint64_t v241 = (v180 - 1);
            }
            else {
              unint64_t v241 = v240;
            }
          }
        }
      }
      if (v241 >= v174) {
        int v243 = v175;
      }
      else {
        int v243 = v241;
      }
      if (v238) {
        int v244 = 0;
      }
      else {
        int v244 = v243 ^ v171;
      }
      if (v131 != 1) {
        int v244 = v243;
      }
      *(_DWORD *)(v160 + v158 - 32) = v244;
      if (v186 == 6)
      {
        unint64_t v245 = v176;
        BOOL v246 = v172 == v171;
      }
      else
      {
        uint64_t v247 = *(unsigned int *)((char *)v265 + 4 * v196 + v159);
        BOOL v246 = v187 == v247;
        if (v172 | v247)
        {
          if (v184 < v174 || (unint64_t v245 = v174 - 1, v247 != v185)) {
            unint64_t v245 = v169 + v167 * v247;
          }
        }
        else
        {
          unint64_t v245 = 0;
        }
        ++v196;
      }
      unint64_t v248 = v245 + v172;
      unint64_t v249 = v248;
      if (a3 == 4)
      {
        if (v248 < result || (unint64_t v249 = (result - 1), v248 >= v181))
        {
          if (v248 < v181 || (unint64_t v249 = v171, v248 >= v171))
          {
            if (v248 < v182 && v248 >= v180) {
              unint64_t v249 = (v180 - 1);
            }
            else {
              unint64_t v249 = v248;
            }
          }
        }
      }
      if (v249 >= v174) {
        int v251 = v175;
      }
      else {
        int v251 = v249;
      }
      if (v246) {
        int v252 = 0;
      }
      else {
        int v252 = v251 ^ v171;
      }
      if (v131 != 1) {
        int v252 = v251;
      }
      *(_DWORD *)(v160 + v158 - 16) = v252;
      if (v186 != 7)
      {
        uint64_t v253 = *(unsigned int *)((char *)v265 + 4 * v196 + v159);
        BOOL v177 = v187 == v253;
        if (v172 | v253)
        {
          if (v184 >= v174 && v253 == v185) {
            unint64_t v176 = v174 - 1;
          }
          else {
            unint64_t v176 = v169 + v167 * v253;
          }
        }
        else
        {
          unint64_t v176 = 0;
        }
      }
      unint64_t v254 = v176 + v172;
      unint64_t v162 = v176 + v172;
      if (a3 == 4)
      {
        if (v254 < result || (unint64_t v162 = (result - 1), v254 >= v181))
        {
          if (v254 < v181 || (unint64_t v162 = v171, v254 >= v171))
          {
            if (v254 < v182 && v254 >= v180) {
              unint64_t v162 = (v180 - 1);
            }
            else {
              unint64_t v162 = v176 + v172;
            }
          }
        }
      }
      if (v162 >= v174) {
        int v163 = v175;
      }
      else {
        int v163 = v162;
      }
      int v164 = v163 ^ v171;
      if (v177) {
        int v164 = 0;
      }
      if (v131 == 1) {
        int v163 = v164;
      }
      goto LABEL_273;
    }
    BOOL v192 = v181 <= v172 && v172 < v171;
    BOOL v194 = v172 >= v180 && v182 > v172;
    if (a3 == 4)
    {
      if (v172 < result || v181 <= v172)
      {
        if (v192)
        {
          if (v174 <= v171) {
            LODWORD(v195) = v175;
          }
          else {
            LODWORD(v195) = v171;
          }
        }
        else
        {
          if (v194) {
            unint64_t v195 = v183;
          }
          else {
            unint64_t v195 = *(unsigned int *)((char *)&v268 + v158);
          }
          if (v195 >= v174) {
            LODWORD(v195) = v175;
          }
        }
      }
      else if (v174 <= (result - 1))
      {
        LODWORD(v195) = v175;
      }
      else
      {
        LODWORD(v195) = result - 1;
      }
    }
    else if (v174 <= v172)
    {
      LODWORD(v195) = v175;
    }
    else
    {
      LODWORD(v195) = *(_DWORD *)((char *)&v268 + v158);
    }
    if (v167 <= v173) {
      int v163 = v195 ^ v171;
    }
    else {
      int v163 = 0;
    }
    if (v131 != 1) {
      int v163 = v195;
    }
    uint64_t v255 = v160 + v158;
    *(_DWORD *)(v255 - 112) = v163;
    *(_DWORD *)(v255 - 96) = v163;
    *(_DWORD *)(v255 - 80) = v163;
    *(_DWORD *)(v255 - 64) = v163;
    *(_DWORD *)(v255 - 48) = v163;
    *(_DWORD *)(v255 - 32) = v163;
    *(_DWORD *)(v255 - 16) = v163;
LABEL_273:
    *(_DWORD *)(v160 + v158) = v163;
    v159 += 28;
    v158 += 4;
  }
  while (v159 != 112);
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v10 = a3;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t v14 = result;
    int v15 = a7;
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, result, a2, v12, v13, a7);
    v10 += result;
  }
  else
  {
    uint64_t v14 = result;
    int v15 = a7;
    *a4 = 0;
  }
  uint64_t v35 = 4 * a2;
  int v16 = a4 + 1;
  if (a6 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a6;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    int v19 = 4;
  }
  else {
    int v19 = v18;
  }
  if (v12 && v19)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v16, v14 + v35, a2, v12, v19, v15);
    v10 += result;
  }
  else
  {
    *int v16 = 0;
  }
  uint64_t v20 = a4 + 2;
  if (a5 <= 8) {
    int v21 = 8;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 8;
  if (v22 >= 8) {
    int v23 = 8;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v20, v14 + 32, a2, v23, v13, v15);
    v10 += result;
    unint64_t v24 = a4 + 3;
  }
  else
  {
    *uint64_t v20 = 0;
    unint64_t v24 = a4 + 3;
    if (!v23) {
      goto LABEL_33;
    }
  }
  if (v19)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v24, v14 + v35 + 32, a2, v23, v19, v15);
    v10 += result;
    goto LABEL_34;
  }
LABEL_33:
  *unint64_t v24 = 0;
LABEL_34:
  uint64_t v25 = a4 + 4;
  if (a6 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a6;
  }
  unsigned int v27 = v26 - 8;
  if (v27 >= 4) {
    int v28 = 4;
  }
  else {
    int v28 = v27;
  }
  if (v12 && v28)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v25, v14 + 8 * a2, a2, v12, v28, v15);
    v10 += result;
  }
  else
  {
    *uint64_t v25 = 0;
  }
  unsigned int v29 = a4 + 5;
  if (a6 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v29, v14 + 12 * a2, a2, v12, v32, v15);
    v10 += result;
    uint64_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  else
  {
    *unsigned int v29 = 0;
    uint64_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  if (v28)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v33, v14 + 8 * a2 + 32, a2, v23, v28, v15);
    v10 += result;
    unint64_t v34 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  unsigned char *v33 = 0;
  unint64_t v34 = a4 + 7;
  if (!v23)
  {
LABEL_62:
    *unint64_t v34 = 0;
    return result;
  }
LABEL_58:
  if (!v32) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v34, v14 + 12 * a2 + 32, a2, v23, v32, v15);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v7 = (int8x16_t *)(a3 + 2 * a4);
  int8x16_t v8 = *(int8x16_t *)a3;
  int8x16_t v9 = *(int8x16_t *)(a3 + a4);
  int8x16_t v10 = *(int8x16_t *)(a3 + a4 + 16);
  int8x16_t v12 = *v7;
  int8x16_t v13 = v7[1];
  uint64_t v11 = (int8x16_t *)((char *)v7 + a4);
  int8x16_t v14 = *v11;
  int8x16_t v15 = v11[1];
  int8x16_t v16 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a3, 0);
  int8x16_t v17 = vsubq_s8(*(int8x16_t *)a3, v16);
  int8x16_t v464 = vsubq_s8(v9, v16);
  int8x16_t v457 = *(int8x16_t *)(a3 + 16);
  int8x16_t v18 = vsubq_s8(v457, v16);
  int8x16_t v19 = vsubq_s8(v10, v16);
  int8x16_t v454 = v12;
  int8x16_t v20 = vsubq_s8(v12, v16);
  int8x16_t v21 = vsubq_s8(*v11, v16);
  int8x16_t v459 = v13;
  int8x16_t v22 = vsubq_s8(v13, v16);
  int8x16_t v23 = vsubq_s8(v15, v16);
  int8x16_t v24 = vqtbl1q_s8(vmaxq_s8(v17, v464), (int8x16_t)xmmword_242EA7560);
  int8x16_t v25 = vqtbl1q_s8(vminq_s8(v17, v464), (int8x16_t)xmmword_242EA7560);
  int8x16_t v26 = vpmaxq_s8(v24, v24);
  int8x16_t v27 = vpminq_s8(v25, v25);
  int8x16_t v28 = vpmaxq_s8(v26, v26);
  int8x16_t v29 = vpminq_s8(v27, v27);
  v30.i64[0] = 0x8080808080808080;
  v30.i64[1] = 0x8080808080808080;
  int8x16_t v31 = vmaxq_s8(v28, v30);
  v32.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v32.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v33 = vminq_s8(v29, v32);
  int8x16_t v34 = vzip1q_s8(v28, v29);
  v35.i64[0] = 0x808080808080808;
  v35.i64[1] = 0x808080808080808;
  int8x16_t v36 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v34)), vceqzq_s8(v34));
  int8x16_t v37 = vpmaxq_s8(v36, v36);
  int8x16_t v38 = vqtbl1q_s8(vmaxq_s8(v18, v19), (int8x16_t)xmmword_242EA7560);
  int8x16_t v39 = vqtbl1q_s8(vminq_s8(v18, v19), (int8x16_t)xmmword_242EA7560);
  int8x16_t v40 = vpmaxq_s8(v38, v38);
  int8x16_t v41 = vpminq_s8(v39, v39);
  int8x16_t v42 = vpmaxq_s8(v40, v40);
  int8x16_t v43 = vpminq_s8(v41, v41);
  int8x16_t v44 = vmaxq_s8(v31, v42);
  int8x16_t v45 = vminq_s8(v33, v43);
  int8x16_t v46 = vzip1q_s8(v42, v43);
  int8x16_t v47 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v46)), vceqzq_s8(v46));
  int8x16_t v48 = vpmaxq_s8(v47, v47);
  int8x16_t v49 = vqtbl1q_s8(vmaxq_s8(v20, v21), (int8x16_t)xmmword_242EA7560);
  int8x16_t v50 = vqtbl1q_s8(vminq_s8(v20, v21), (int8x16_t)xmmword_242EA7560);
  int8x16_t v51 = vpmaxq_s8(v49, v49);
  int8x16_t v52 = vpminq_s8(v50, v50);
  int8x16_t v53 = vpmaxq_s8(v51, v51);
  int8x16_t v54 = vpminq_s8(v52, v52);
  int8x16_t v55 = vmaxq_s8(v44, v53);
  int8x16_t v56 = vminq_s8(v45, v54);
  int8x16_t v57 = vzip1q_s8(v53, v54);
  int8x16_t v58 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v57)), vceqzq_s8(v57));
  int8x16_t v59 = vpmaxq_s8(v58, v58);
  int8x16_t v60 = vqtbl1q_s8(vmaxq_s8(v22, v23), (int8x16_t)xmmword_242EA7560);
  int8x16_t v61 = vqtbl1q_s8(vminq_s8(v22, v23), (int8x16_t)xmmword_242EA7560);
  int8x16_t v62 = vpmaxq_s8(v60, v60);
  int8x16_t v63 = vpminq_s8(v61, v61);
  int8x16_t v64 = vpmaxq_s8(v62, v62);
  int8x16_t v65 = vpminq_s8(v63, v63);
  int8x16_t v66 = vmaxq_s8(v55, v64);
  int8x16_t v67 = vminq_s8(v56, v65);
  int8x16_t v68 = vzip1q_s8(v64, v65);
  int8x16_t v69 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v68)), vceqzq_s8(v68));
  int8x16_t v70 = vpmaxq_s8(v69, v69);
  int8x16_t v71 = vmaxq_s8(vmaxq_s8(v37, v48), vmaxq_s8(v59, v70));
  int8x16_t v72 = vclzq_s8(vsubq_s8(v66, v67));
  v56.i64[0] = 0x707070707070707;
  v56.i64[1] = 0x707070707070707;
  v73.i64[0] = -1;
  v73.i64[1] = -1;
  int8x16_t v74 = vshlq_s8(v73, vsubq_s8(v56, v72));
  int8x16_t v75 = vsubq_s8(v35, v72);
  int8x16_t v76 = vcgtq_s8(v71, v75);
  int8x16_t v77 = vbslq_s8(v76, v75, v71);
  int8x16_t v78 = vandq_s8(vsubq_s8(v74, v67), v76);
  v79.i64[0] = 0x303030303030303;
  v79.i64[1] = 0x303030303030303;
  int8x16_t v80 = vorrq_s8(vandq_s8(vceqzq_s8(v77), v79), vandq_s8(v76, v35));
  int v81 = vmaxvq_s8(v77);
  int8x16_t v82 = vmaxq_s8(vminq_s8(vsubq_s8(v77, v37), v79), (int8x16_t)0);
  int8x16_t v83 = vmaxq_s8(vminq_s8(vsubq_s8(v77, v48), v79), (int8x16_t)0);
  int8x16_t v84 = vmaxq_s8(vminq_s8(vsubq_s8(v77, v59), v79), (int8x16_t)0);
  int8x16_t v85 = vmaxq_s8(vminq_s8(vsubq_s8(v77, v70), v79), (int8x16_t)0);
  v76.i64[0] = 0x404040404040404;
  v76.i64[1] = 0x404040404040404;
  int8x16_t v86 = vorrq_s8(vbicq_s8(v76, vceqq_s8(vaddq_s8(v85, v84), vnegq_s8(vaddq_s8(v82, v83)))), v80);
  int8x16_t v460 = v78;
  int8x16_t v462 = v17;
  int8x16_t v466 = v18;
  int8x16_t v467 = v19;
  int8x16_t v468 = v20;
  int8x16_t v469 = v21;
  int8x16_t v470 = v22;
  int8x16_t v471 = v23;
  int8x16_t v478 = v77;
  int8x16_t v479 = v67;
  int8x16_t v480 = v66;
  int8x16_t v481 = v78;
  int8x16_t v87 = vsubq_s8(v77, v82);
  int8x16_t v88 = vsubq_s8(v77, v83);
  int8x16_t v474 = v87;
  int8x16_t v475 = v88;
  int8x16_t v89 = vsubq_s8(v77, v84);
  int8x16_t v90 = vsubq_s8(v77, v85);
  int8x16_t v476 = v89;
  int8x16_t v477 = v90;
  BOOL v92 = a5 < 2 || a6 < 2;
  int8x16_t v472 = v16;
  int8x16_t v473 = v86;
  if (v81)
  {
    int8x16_t v449 = v23;
    int8x16_t v450 = v21;
    v452.val[0] = v14;
    v452.val[1] = v15;
    int8x16_t v444 = vsubq_s8(v17, vqtbl1q_s8(v17, (int8x16_t)xmmword_242EA7600));
    int8x16_t v442 = vsubq_s8(v18, vqtbl1q_s8(v18, (int8x16_t)xmmword_242EA7600));
    int8x16_t v443 = vsubq_s8(v464, vqtbl1q_s8(v464, (int8x16_t)xmmword_242EA7600));
    int8x16_t v93 = vqtbl1q_s8(vmaxq_s8(v444, v443), (int8x16_t)xmmword_242EA7560);
    int8x16_t v94 = vqtbl1q_s8(vminq_s8(v444, v443), (int8x16_t)xmmword_242EA7560);
    int8x16_t v95 = vpmaxq_s8(v93, v93);
    int8x16_t v96 = vpminq_s8(v94, v94);
    int8x16_t v97 = vpmaxq_s8(v95, v95);
    int8x16_t v98 = vpminq_s8(v96, v96);
    v99.i64[0] = 0x8080808080808080;
    v99.i64[1] = 0x8080808080808080;
    int8x16_t v100 = vmaxq_s8(v97, v99);
    v101.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v101.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    int8x16_t v102 = vminq_s8(v98, v101);
    int8x16_t v103 = vzip1q_s8(v97, v98);
    int8x16_t v104 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v103)), vceqzq_s8(v103));
    int8x16_t v105 = vpmaxq_s8(v104, v104);
    int8x16_t v441 = vsubq_s8(v467, vqtbl1q_s8(v467, (int8x16_t)xmmword_242EA7600));
    int8x16_t v106 = vqtbl1q_s8(vmaxq_s8(v442, v441), (int8x16_t)xmmword_242EA7560);
    int8x16_t v107 = vqtbl1q_s8(vminq_s8(v442, v441), (int8x16_t)xmmword_242EA7560);
    int8x16_t v108 = vpmaxq_s8(v106, v106);
    int8x16_t v109 = vpminq_s8(v107, v107);
    int8x16_t v110 = vpmaxq_s8(v108, v108);
    int8x16_t v111 = vpminq_s8(v109, v109);
    int8x16_t v112 = vmaxq_s8(v100, v110);
    int8x16_t v113 = vminq_s8(v102, v111);
    int8x16_t v114 = vzip1q_s8(v110, v111);
    int8x16_t v115 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v114)), vceqzq_s8(v114));
    int8x16_t v116 = vpmaxq_s8(v115, v115);
    int8x16_t v445 = vsubq_s8(v20, vqtbl1q_s8(v20, (int8x16_t)xmmword_242EA7600));
    int8x16_t v446 = vsubq_s8(v469, vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA7600));
    int8x16_t v117 = vqtbl1q_s8(vmaxq_s8(v445, v446), (int8x16_t)xmmword_242EA7560);
    int8x16_t v118 = vqtbl1q_s8(vminq_s8(v445, v446), (int8x16_t)xmmword_242EA7560);
    int8x16_t v119 = vpmaxq_s8(v117, v117);
    int8x16_t v120 = vpminq_s8(v118, v118);
    int8x16_t v121 = vpmaxq_s8(v119, v119);
    int8x16_t v122 = vpminq_s8(v120, v120);
    int8x16_t v123 = vmaxq_s8(v112, v121);
    int8x16_t v124 = vminq_s8(v113, v122);
    int8x16_t v125 = vzip1q_s8(v121, v122);
    int8x16_t v126 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v125)), vceqzq_s8(v125));
    int8x16_t v127 = vpmaxq_s8(v126, v126);
    int8x16_t v447 = vsubq_s8(v22, vqtbl1q_s8(v22, (int8x16_t)xmmword_242EA7600));
    int8x16_t v448 = vsubq_s8(v471, vqtbl1q_s8(v471, (int8x16_t)xmmword_242EA7600));
    int8x16_t v128 = vqtbl1q_s8(vmaxq_s8(v447, v448), (int8x16_t)xmmword_242EA7560);
    int8x16_t v129 = vqtbl1q_s8(vminq_s8(v447, v448), (int8x16_t)xmmword_242EA7560);
    int8x16_t v130 = vpmaxq_s8(v128, v128);
    int8x16_t v131 = vpminq_s8(v129, v129);
    int8x16_t v132 = vpmaxq_s8(v130, v130);
    int8x16_t v133 = vpminq_s8(v131, v131);
    int8x16_t v134 = vmaxq_s8(v123, v132);
    int8x16_t v135 = vminq_s8(v124, v133);
    int8x16_t v136 = vzip1q_s8(v132, v133);
    int8x16_t v137 = vbicq_s8(vsubq_s8(v35, vclsq_s8(v136)), vceqzq_s8(v136));
    int8x16_t v138 = vpmaxq_s8(v137, v137);
    int8x16_t v139 = vmaxq_s8(vmaxq_s8(v105, v116), vmaxq_s8(v127, v138));
    int8x16_t v440 = v134;
    int8x16_t v140 = vclzq_s8(vsubq_s8(v134, v135));
    int8x16_t v141 = vsubq_s8(v35, v140);
    int8x16_t v142 = vcgtq_s8(v139, v141);
    int8x16_t v143 = vbslq_s8(v142, v141, v139);
    v139.i64[0] = 0x1010101010101010;
    v139.i64[1] = 0x1010101010101010;
    v134.i64[0] = 0x1818181818181818;
    v134.i64[1] = 0x1818181818181818;
    int8x16_t v144 = vorrq_s8(vandq_s8(vceqzq_s8(v143), v79), vbslq_s8(v142, v134, v139));
    int8x16_t v145 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v105), v79), (int8x16_t)0);
    int8x16_t v146 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v116), v79), (int8x16_t)0);
    int8x16_t v147 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v127), v79), (int8x16_t)0);
    int8x16_t v148 = vmaxq_s8(vminq_s8(vsubq_s8(v143, v138), v79), (int8x16_t)0);
    int8x16_t v149 = vsubq_s8(v143, v145);
    int8x16_t v150 = vsubq_s8(v143, v146);
    int8x16_t v151 = vsubq_s8(v143, v147);
    int8x16_t v152 = vsubq_s8(v143, v148);
    v138.i64[0] = 0x404040404040404;
    v138.i64[1] = 0x404040404040404;
    int8x16_t v153 = vorrq_s8(v144, vbicq_s8(v138, vceqq_s8(vaddq_s8(v148, v147), vnegq_s8(vaddq_s8(v145, v146)))));
    uint16x8_t v154 = vmovl_u8(*(uint8x8_t *)v153.i8);
    v145.i64[0] = 0x8000800080008;
    v145.i64[1] = 0x8000800080008;
    v146.i64[0] = 0x2000200020002;
    v146.i64[1] = 0x2000200020002;
    int8x16_t v155 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v89.i8, *(int8x8_t *)v88.i8), *(int8x8_t *)v90.i8), 3uLL), *(int8x8_t *)v87.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v77.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v86.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v86.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v86.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v146), v145)), vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v151.i8, *(int8x8_t *)v150.i8), *(int8x8_t *)v152.i8),
                                                                      3uLL),
                                                                    *(int8x8_t *)v149.i8,
                                                                    (int8x8_t)0x707070707070707),
                                                                  (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v153.i8, 1uLL), v145)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v143.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v146), v145)))), 0);
    if (vaddlvq_s8(v155))
    {
      int8x16_t v462 = vbslq_s8(v155, v444, v17);
      int8x16_t v464 = vbslq_s8(v155, v443, v464);
      v156.i64[0] = 0x707070707070707;
      v156.i64[1] = 0x707070707070707;
      int8x16_t v466 = vbslq_s8(v155, v442, v18);
      int8x16_t v467 = vbslq_s8(v155, v441, v19);
      v157.i64[0] = -1;
      v157.i64[1] = -1;
      int8x16_t v468 = vbslq_s8(v155, v445, v20);
      int8x16_t v469 = vbslq_s8(v155, v446, v450);
      int8x16_t v470 = vbslq_s8(v155, v447, v22);
      int8x16_t v471 = vbslq_s8(v155, v448, v449);
      int8x16_t v474 = vbslq_s8(v155, v149, v87);
      int8x16_t v475 = vbslq_s8(v155, v150, v88);
      int8x16_t v476 = vbslq_s8(v155, v151, v89);
      int8x16_t v477 = vbslq_s8(v155, v152, v90);
      int8x16_t v480 = vbslq_s8(v155, v440, v66);
      int8x16_t v481 = vbslq_s8(v155, vandq_s8(vsubq_s8(vshlq_s8(v157, vsubq_s8(v156, v140)), v135), v142), v460);
      int8x16_t v478 = vbslq_s8(v155, v143, v77);
      int8x16_t v479 = vbslq_s8(v155, v135, v67);
      int8x16_t v472 = vbslq_s8(v155, vsubq_s8(v16, vqtbl1q_s8(v16, (int8x16_t)xmmword_242EA7600)), v16);
      int8x16_t v473 = vbslq_s8(v155, v153, v86);
    }
    if (v92)
    {
      int8x16_t v158 = v475;
      int8x16_t v159 = v476;
      int8x16_t v161 = v477;
      int8x16_t v160 = v478;
      int8x16_t v162 = v481;
      int8x16_t v164 = v462;
      int8x16_t v163 = v464;
      int8x16_t v166 = v466;
      int8x16_t v165 = v467;
      int8x16_t v168 = v468;
      int8x16_t v167 = v469;
      int8x16_t v170 = v470;
      int8x16_t v169 = v471;
      v171.i64[0] = v473.i64[0];
      int8x16_t v172 = v474;
    }
    else
    {
      int8x16_t v183 = vsubq_s8(v8, vqtbl2q_s8(*(int8x16x2_t *)v8.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v174 = vsubq_s8(v9, vqtbl2q_s8(*(int8x16x2_t *)v8.i8, (int8x16_t)xmmword_242EA7620));
      v482.val[0] = v457;
      v482.val[1] = v10;
      v482.val[1].i32[3] = v9.i32[3];
      int8x16_t v175 = vsubq_s8(v457, vqtbl2q_s8(v482, (int8x16_t)xmmword_242EA7590));
      int8x16_t v176 = vsubq_s8(v10, vqtbl2q_s8(v482, (int8x16_t)xmmword_242EA7630));
      int8x16_t v177 = v454;
      int8x16x2_t v483 = v452;
      v483.val[0].i32[3] = v9.i32[3];
      int8x16_t v178 = vsubq_s8(v454, vqtbl2q_s8(*(int8x16x2_t *)v177.i8, (int8x16_t)xmmword_242EA7640));
      int8x16_t v179 = vsubq_s8(v452.val[0], vqtbl2q_s8(*(int8x16x2_t *)v177.i8, (int8x16_t)xmmword_242EA7570));
      int8x16_t v180 = vsubq_s8(v459, vqtbl2q_s8(v452, (int8x16_t)xmmword_242EA7650));
      int8x16_t v181 = vsubq_s8(v452.val[1], vqtbl2q_s8(v452, (int8x16_t)xmmword_242EA7570));
      int8x16_t v182 = v174;
      v182.i32[3] = v183.i32[0];
      v183.i32[0] = v174.i32[3];
      int8x16_t v184 = vqtbl1q_s8(vmaxq_s8(v183, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v185 = vqtbl1q_s8(vminq_s8(v183, v182), (int8x16_t)xmmword_242EA7560);
      int8x16_t v186 = vpmaxq_s8(v184, v184);
      int8x16_t v187 = vpminq_s8(v185, v185);
      int8x16_t v188 = vpmaxq_s8(v186, v186);
      int8x16_t v189 = vpminq_s8(v187, v187);
      v177.i64[0] = 0x8080808080808080;
      v177.i64[1] = 0x8080808080808080;
      v483.val[0].i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v483.val[0].i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v483.val[0] = vminq_s8(v189, v483.val[0]);
      int8x16_t v190 = vzip1q_s8(v188, v189);
      v191.i64[0] = 0x808080808080808;
      v191.i64[1] = 0x808080808080808;
      int8x16_t v192 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v190)), vceqzq_s8(v190));
      int8x16_t v193 = vpmaxq_s8(v192, v192);
      int8x16_t v461 = v175;
      int8x16_t v458 = v176;
      v483.val[1] = vqtbl1q_s8(vmaxq_s8(v175, v176), (int8x16_t)xmmword_242EA7560);
      int8x16_t v194 = vqtbl1q_s8(vminq_s8(v175, v176), (int8x16_t)xmmword_242EA7560);
      v483.val[1] = vpmaxq_s8(v483.val[1], v483.val[1]);
      int8x16_t v195 = vpminq_s8(v194, v194);
      v483.val[1] = vpmaxq_s8(v483.val[1], v483.val[1]);
      int8x16_t v196 = vpminq_s8(v195, v195);
      int8x16_t v197 = vmaxq_s8(vmaxq_s8(v188, v177), v483.val[1]);
      v483.val[0] = vminq_s8(v483.val[0], v196);
      v483.val[1] = vzip1q_s8(v483.val[1], v196);
      v483.val[1] = vbicq_s8(vsubq_s8(v191, vclsq_s8(v483.val[1])), vceqzq_s8(v483.val[1]));
      v483.val[1] = vpmaxq_s8(v483.val[1], v483.val[1]);
      int8x16_t v456 = v178;
      int8x16_t v455 = v179;
      int8x16_t v198 = vqtbl1q_s8(vmaxq_s8(v178, v179), (int8x16_t)xmmword_242EA7560);
      int8x16_t v199 = vqtbl1q_s8(vminq_s8(v178, v179), (int8x16_t)xmmword_242EA7560);
      int8x16_t v200 = vpmaxq_s8(v198, v198);
      int8x16_t v201 = vpminq_s8(v199, v199);
      int8x16_t v202 = vpmaxq_s8(v200, v200);
      int8x16_t v203 = vpminq_s8(v201, v201);
      int8x16_t v204 = vmaxq_s8(v197, v202);
      v483.val[0] = vminq_s8(v483.val[0], v203);
      int8x16_t v205 = vzip1q_s8(v202, v203);
      int8x16_t v206 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v205)), vceqzq_s8(v205));
      int8x16_t v207 = vpmaxq_s8(v206, v206);
      int8x16_t v208 = vqtbl1q_s8(vmaxq_s8(v180, v181), (int8x16_t)xmmword_242EA7560);
      int8x16_t v209 = vqtbl1q_s8(vminq_s8(v180, v181), (int8x16_t)xmmword_242EA7560);
      int8x16_t v210 = vpmaxq_s8(v208, v208);
      int8x16_t v211 = vpminq_s8(v209, v209);
      int8x16_t v212 = vpmaxq_s8(v210, v210);
      int8x16_t v213 = vpminq_s8(v211, v211);
      int8x16_t v214 = vmaxq_s8(v204, v212);
      int8x16_t v215 = vminq_s8(v483.val[0], v213);
      int8x16_t v216 = vzip1q_s8(v212, v213);
      int8x16_t v217 = vbicq_s8(vsubq_s8(v191, vclsq_s8(v216)), vceqzq_s8(v216));
      int8x16_t v218 = vpmaxq_s8(v217, v217);
      int8x16_t v219 = vmaxq_s8(vmaxq_s8(v193, v483.val[1]), vmaxq_s8(v207, v218));
      int8x16_t v220 = vclzq_s8(vsubq_s8(v214, v215));
      v483.val[0] = vsubq_s8(v191, v220);
      int8x16_t v221 = vcgtq_s8(v219, v483.val[0]);
      int8x16_t v222 = vbslq_s8(v221, v483.val[0], v219);
      v219.i64[0] = 0x909090909090909;
      v219.i64[1] = 0x909090909090909;
      v191.i64[0] = 0x202020202020202;
      v191.i64[1] = 0x202020202020202;
      int8x16_t v223 = vorrq_s8(vandq_s8(vceqzq_s8(v222), v191), vsubq_s8(vandq_s8(v221, v219), vmvnq_s8(v221)));
      v483.val[0].i64[0] = 0x303030303030303;
      v483.val[0].i64[1] = 0x303030303030303;
      int8x16_t v224 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v193), v483.val[0]), (int8x16_t)0);
      int8x16_t v225 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v483.val[1]), v483.val[0]), (int8x16_t)0);
      int8x16_t v226 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v207), v483.val[0]), (int8x16_t)0);
      int8x16_t v171 = vmaxq_s8(vminq_s8(vsubq_s8(v222, v218), v483.val[0]), (int8x16_t)0);
      int8x16_t v227 = vsubq_s8(v222, v224);
      int8x16_t v228 = vsubq_s8(v222, v226);
      int8x16_t v229 = vsubq_s8(v222, v171);
      v188.i64[0] = 0x404040404040404;
      v188.i64[1] = 0x404040404040404;
      int8x16_t v230 = vorrq_s8(v223, vbicq_s8(v188, vceqq_s8(vaddq_s8(v171, v226), vnegq_s8(vaddq_s8(v224, v225)))));
      int8x16_t v453 = vsubq_s8(v222, v225);
      v225.i64[0] = 0x3000300030003;
      v225.i64[1] = 0x3000300030003;
      v171.i64[0] = v473.i64[0];
      int8x16_t v172 = v474;
      int8x16_t v231 = (int8x16_t)vmovl_s8(*(int8x8_t *)v473.i8);
      v232.i64[0] = 0x8000800080008;
      v232.i64[1] = 0x8000800080008;
      int8x16_t v161 = v477;
      int8x16_t v160 = v478;
      int16x8_t v233 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v478.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v231, v232)));
      int16x8_t v234 = (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v473.i8, 1uLL), v232);
      int16x8_t v235 = (int16x8_t)vandq_s8(v231, v225);
      v231.i64[0] = 0x2000200020002;
      v231.i64[1] = 0x2000200020002;
      int16x8_t v236 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v235, (int16x8_t)v231), v232);
      int8x16_t v158 = v475;
      int8x16_t v159 = v476;
      int8x16_t v237 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v233, v234), v236), *(int8x8_t *)v474.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v476.i8, *(int8x8_t *)v475.i8), *(int8x8_t *)v477.i8), 3uLL)), vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v228.i8, *(int8x8_t *)v453.i8),
                                                                                               *(int8x8_t *)v229.i8),
                                                                                             3uLL),
                                                                                           *(int8x8_t *)v227.i8,
                                                                                           (int8x8_t)0x707070707070707),
                                                                             (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v230.i8, *(int8x8_t *)v230.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v222.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v230.i8))))), 0);
      int8x16_t v162 = v481;
      int8x16_t v164 = v462;
      int8x16_t v163 = v464;
      int8x16_t v166 = v466;
      int8x16_t v165 = v467;
      int8x16_t v168 = v468;
      int8x16_t v167 = v469;
      int8x16_t v170 = v470;
      int8x16_t v169 = v471;
      if (vaddlvq_s8(v237))
      {
        int8x16_t v451 = v229;
        int8x16_t v238 = v214;
        int8x16_t v239 = v181;
        int8x16_t v240 = v180;
        v241.i64[0] = 0x707070707070707;
        v241.i64[1] = 0x707070707070707;
        int8x16_t v242 = vsubq_s8(v241, v220);
        v243.i64[0] = -1;
        v243.i64[1] = -1;
        int8x16_t v164 = vbslq_s8(v237, v183, v462);
        int8x16_t v163 = vbslq_s8(v237, v182, v464);
        int8x16_t v166 = vbslq_s8(v237, v461, v466);
        int8x16_t v165 = vbslq_s8(v237, v458, v467);
        int8x16_t v168 = vbslq_s8(v237, v456, v468);
        int8x16_t v167 = vbslq_s8(v237, v455, v469);
        int8x16_t v170 = vbslq_s8(v237, v240, v470);
        int8x16_t v169 = vbslq_s8(v237, v239, v471);
        int8x16_t v172 = vbslq_s8(v237, v227, v474);
        int8x16_t v158 = vbslq_s8(v237, v453, v475);
        int8x16_t v159 = vbslq_s8(v237, v228, v476);
        int8x16_t v161 = vbslq_s8(v237, v451, v477);
        int8x16_t v162 = vbslq_s8(v237, vandq_s8(vsubq_s8(vshlq_s8(v243, v242), v215), v221), v481);
        int8x16_t v160 = vbslq_s8(v237, v222, v478);
        int8x16_t v171 = vbslq_s8(v237, v230, v473);
        int8x16_t v472 = vbslq_s8(v237, vextq_s8(v9, v9, 0xCuLL), v472);
        int8x16_t v473 = v171;
        int8x16_t v479 = vbslq_s8(v237, v215, v479);
        int8x16_t v480 = vbslq_s8(v237, v238, v480);
        int8x16_t v474 = v172;
        int8x16_t v475 = v158;
        int8x16_t v476 = v159;
        int8x16_t v477 = v161;
        int8x16_t v481 = v162;
        int8x16_t v478 = v160;
      }
    }
    int8x16_t v244 = vandq_s8(v162, vceqq_s8(v160, v172));
    int8x16_t v463 = vaddq_s8(v244, v164);
    int8x16_t v465 = vaddq_s8(v163, v244);
    int8x16_t v245 = vandq_s8(v162, vceqq_s8(v160, v158));
    int8x16_t v466 = vaddq_s8(v166, v245);
    int8x16_t v467 = vaddq_s8(v165, v245);
    int8x16_t v246 = vandq_s8(v162, vceqq_s8(v160, v159));
    int8x16_t v468 = vaddq_s8(v168, v246);
    int8x16_t v469 = vaddq_s8(v167, v246);
    int8x16_t v247 = vandq_s8(v162, vceqq_s8(v160, v161));
    int8x16_t v470 = vaddq_s8(v170, v247);
    int8x16_t v471 = vaddq_s8(v169, v247);
    int8x16_t v248 = (int8x16_t)vmovl_s8(*(int8x8_t *)v171.i8);
    v249.i64[0] = 0x8000800080008;
    v249.i64[1] = 0x8000800080008;
    int16x8_t v250 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v160.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v248, v249)));
    v251.i64[0] = 0x3000300030003;
    v251.i64[1] = 0x3000300030003;
    int16x8_t v252 = (int16x8_t)vandq_s8(v248, v251);
    v251.i64[0] = 0x2000200020002;
    v251.i64[1] = 0x2000200020002;
    int16x8_t v253 = vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v159.i8, *(int8x8_t *)v158.i8), *(int8x8_t *)v161.i8), 3uLL), *(int8x8_t *)v172.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v252, (int16x8_t)v251), v249)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v171.i8, 1uLL), v249), v250));
    int16x8_t v254 = vpaddq_s16(v253, v253);
    if ((unint64_t)(vpaddq_s16(v254, v254).i16[0] - 449) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      uint64_t v255 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v256 = 8 * (a1 & 7);
      if (v256) {
        uint64_t v257 = *v255 & ~(-1 << v256);
      }
      else {
        uint64_t v257 = 0;
      }
      *a2 = 0;
      __int32 v258 = v472.i32[0];
      int16x4_t v259 = (int16x4_t)vzip1_s8(*(int8x8_t *)v160.i8, *(int8x8_t *)v472.i8);
      int8x8_t v260 = (int8x8_t)vadd_s16(v259, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v261 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v259 & 0xFF00FF00FF00FFLL)));
      v262.i64[0] = v261.u32[0];
      v262.i64[1] = v261.u32[1];
      int8x16_t v263 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v262, 0x38uLL), 0x38uLL);
      v262.i64[0] = v261.u32[2];
      v262.i64[1] = v261.u32[3];
      int8x16_t v264 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v262, 0x38uLL), 0x38uLL);
      uint32x4_t v265 = vmovl_u16((uint16x4_t)vand_s8(v260, (int8x8_t)0x7000700070007));
      v262.i64[0] = v265.u32[2];
      v262.i64[1] = v265.u32[3];
      v266.i64[0] = 255;
      v266.i64[1] = 255;
      uint64x2_t v267 = (uint64x2_t)vandq_s8((int8x16_t)v262, v266);
      v262.i64[0] = v265.u32[0];
      v262.i64[1] = v265.u32[1];
      int8x16_t v268 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v262, v266), (uint64x2_t)xmmword_242EA7660), v263), vbicq_s8((int8x16_t)vshlq_u64(v267, (uint64x2_t)xmmword_242EA7670), v264));
      *(int8x8_t *)v268.i8 = vorr_s8(*(int8x8_t *)v268.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v268, v268, 8uLL));
      v262.i64[0] = v171.u8[1];
      v262.i64[1] = v171.u8[2];
      v268.i64[1] = (unint64_t)(v171.i8[3] & 0x1F) << 15;
      int8x16_t v269 = vorrq_s8(v268, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v262, v266), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v270 = vorrq_s8(v269, (int8x16_t)vdupq_laneq_s64((int64x2_t)v269, 1)).u64[0] | v171.i8[0] & 0x1F;
      unint64_t v271 = v257 | (v270 << v256);
      if (v256 >= 0x20)
      {
        *uint64_t v255 = v271;
        unint64_t v271 = v270 >> (-8 * (a1 & 7u));
      }
      uint64_t v272 = (unsigned __int16)v258;
      v273.i64[0] = BYTE2(v258);
      v273.i64[1] = HIBYTE(v258);
      uint64x2_t v274 = vshlq_u64((uint64x2_t)vandq_s8(v273, v266), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v275 = v272 | v274.i64[0] | v274.i64[1];
      unint64_t v276 = (v256 + 32) & 0x38;
      unint64_t v277 = v271 | (v275 << v276);
      if (v276 >= 0x20)
      {
        *(void *)((char *)v255 + (((v256 + 32) >> 3) & 8)) = v277;
        unint64_t v277 = v275 >> -(char)v276;
      }
      int8x16_t v278 = vsubq_s8(v478, v474);
      int8x16_t v279 = vsubq_s8(v478, v475);
      int8x16_t v280 = vsubq_s8(v478, v476);
      int8x16_t v281 = vsubq_s8(v478, v477);
      int16x8_t v282 = (int16x8_t)vtrn1q_s8(v278, v279);
      int16x8_t v283 = (int16x8_t)vtrn2q_s8(v278, v279);
      int8x16_t v284 = vtrn1q_s8(v280, v281);
      int16x8_t v285 = (int16x8_t)vtrn2q_s8(v280, v281);
      int8x16_t v286 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v282, (int16x8_t)v284), (int32x4_t)vzip1q_s16(v283, v285)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v282, (int16x8_t)v284), (int32x4_t)vtrn2q_s16(v283, v285)));
      v284.i64[0] = 0x202020202020202;
      v284.i64[1] = 0x202020202020202;
      int8x16_t v287 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v473.i8), (int16x4_t)0x4000400040004)), v284);
      v284.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v284.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v280.i64[0] = -1;
      v280.i64[1] = -1;
      uint8x16_t v288 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v280, (uint8x16_t)vorrq_s8(v287, v284)), v286);
      int16x8_t v289 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v287.i8);
      int16x8_t v290 = (int16x8_t)vmovl_high_u8((uint8x16_t)v287);
      uint16x8_t v291 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v288.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v289)), (int16x8_t)vshlq_u16(vmovl_high_u8(v288), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v290)));
      uint16x8_t v292 = (uint16x8_t)vpaddq_s16(v289, v290);
      int32x4_t v293 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v292.i8);
      int32x4_t v294 = (int32x4_t)vmovl_high_u16(v292);
      int32x4_t v295 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v291.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)), (int32x4_t)vshlq_u32(vmovl_high_u16(v291), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v294)));
      int32x4_t v296 = vpaddq_s32(v293, v294);
      v297.i64[0] = v295.u32[0];
      v297.i64[1] = v295.u32[1];
      uint64x2_t v298 = (uint64x2_t)v297;
      v297.i64[0] = v295.u32[2];
      v297.i64[1] = v295.u32[3];
      uint64x2_t v299 = (uint64x2_t)v297;
      v297.i64[0] = v296.u32[0];
      v297.i64[1] = v296.u32[1];
      int64x2_t v300 = v297;
      v297.i64[0] = v296.u32[2];
      v297.i64[1] = v296.u32[3];
      int64x2_t v301 = vpaddq_s64((int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v300)), (int64x2_t)vshlq_u64(v299, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)));
      int64x2_t v302 = vpaddq_s64(v300, v297);
      unint64_t v303 = (v301.i64[0] << v256) | v277;
      if (v302.i64[0] + v256 >= 0x40)
      {
        v255[1] = v303;
        unint64_t v303 = (unint64_t)v301.i64[0] >> (-8 * (a1 & 7u));
        if (!v256) {
          unint64_t v303 = 0;
        }
      }
      unint64_t v304 = v302.i64[0] + (v256 | 0x40);
      unint64_t v305 = v303 | (v301.i64[1] << v304);
      if ((v304 & 0x3F) + v302.i64[1] >= 0x40)
      {
        *(void *)((char *)v255 + ((v304 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v301.i64[1] >> -(v304 & 0x3F);
        if ((v304 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      unint64_t v306 = v304 + v302.i64[1];
      v307.i64[0] = 0x808080808080808;
      v307.i64[1] = 0x808080808080808;
      v308.i64[0] = -1;
      v308.i64[1] = -1;
      int8x16_t v309 = vandq_s8(vextq_s8(vtstq_s8(v473, v307), (int8x16_t)0, 0xCuLL), v478);
      v310.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v310.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v311 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v308, (uint8x16_t)vaddq_s8(v309, v310)), v481);
      int16x8_t v312 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v309.i8);
      uint16x8_t v313 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v311.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v312)), (int16x8_t)vmovl_high_u8(v311));
      uint16x8_t v314 = (uint16x8_t)vpaddq_s16(v312, (int16x8_t)vmovl_high_u8((uint8x16_t)v309));
      int32x4_t v315 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v314.i8);
      int32x4_t v316 = (int32x4_t)vmovl_high_u16(v314);
      int32x4_t v317 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v313.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v315)), (int32x4_t)vshlq_u32(vmovl_high_u16(v313), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v316)));
      int32x4_t v318 = vpaddq_s32(v315, v316);
      v319.i64[0] = v317.u32[0];
      v319.i64[1] = v317.u32[1];
      uint64x2_t v320 = (uint64x2_t)v319;
      v319.i64[0] = v317.u32[2];
      v319.i64[1] = v317.u32[3];
      uint64x2_t v321 = (uint64x2_t)v319;
      v319.i64[0] = v318.u32[0];
      v319.i64[1] = v318.u32[1];
      int64x2_t v322 = v319;
      v319.i64[0] = v318.u32[2];
      v319.i64[1] = v318.u32[3];
      int64x2_t v323 = vpaddq_s64((int64x2_t)vshlq_u64(v320, (uint64x2_t)vzip1q_s64((int64x2_t)0, v322)), (int64x2_t)vshlq_u64(v321, (uint64x2_t)vzip1q_s64((int64x2_t)0, v319)));
      int64x2_t v324 = vpaddq_s64(v322, v319);
      unint64_t v325 = (v323.i64[0] << v306) | v305;
      if (v324.i64[0] + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v255 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v325;
        unint64_t v325 = (unint64_t)v323.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v325 = 0;
        }
      }
      unint64_t v326 = v324.i64[0] + v306;
      unint64_t v327 = v325 | (v323.i64[1] << v326);
      if ((v326 & 0x3F) + v324.i64[1] >= 0x40)
      {
        *(void *)((char *)v255 + ((v326 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v327;
        unint64_t v327 = (unint64_t)v323.i64[1] >> -(v326 & 0x3F);
        if ((v326 & 0x3F) == 0) {
          unint64_t v327 = 0;
        }
      }
      unint64_t v328 = v326 + v324.i64[1];
      int8x16_t v329 = vextq_s8((int8x16_t)0, v474, 0xCuLL);
      v330.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v330.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v331.i64[0] = -1;
      v331.i64[1] = -1;
      uint8x16_t v332 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v331, (uint8x16_t)vaddq_s8(v329, v330)), v463);
      int16x8_t v333 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v329.i8);
      int16x8_t v334 = (int16x8_t)vmovl_high_u8((uint8x16_t)v329);
      uint16x8_t v335 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v332.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v333)), (int16x8_t)vshlq_u16(vmovl_high_u8(v332), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v334)));
      uint16x8_t v336 = (uint16x8_t)vpaddq_s16(v333, v334);
      int32x4_t v337 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v336.i8);
      int32x4_t v338 = (int32x4_t)vmovl_high_u16(v336);
      int32x4_t v339 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v335.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v337)), (int32x4_t)vshlq_u32(vmovl_high_u16(v335), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v338)));
      int32x4_t v340 = vpaddq_s32(v337, v338);
      v341.i64[0] = v339.u32[0];
      v341.i64[1] = v339.u32[1];
      uint64x2_t v342 = (uint64x2_t)v341;
      v341.i64[0] = v339.u32[2];
      v341.i64[1] = v339.u32[3];
      uint64x2_t v343 = (uint64x2_t)v341;
      v341.i64[0] = v340.u32[0];
      v341.i64[1] = v340.u32[1];
      int64x2_t v344 = v341;
      v341.i64[0] = v340.u32[2];
      v341.i64[1] = v340.u32[3];
      int64x2_t v345 = vpaddq_s64((int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v344)), (int64x2_t)vshlq_u64(v343, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)));
      int64x2_t v346 = vpaddq_s64(v344, v341);
      unint64_t v347 = (v345.i64[0] << v328) | v327;
      if (v346.i64[0] + (v328 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v255 + ((v328 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v347;
        unint64_t v347 = (unint64_t)v345.i64[0] >> -(v328 & 0x3F);
        if ((v328 & 0x3F) == 0) {
          unint64_t v347 = 0;
        }
      }
      unint64_t v348 = v346.i64[0] + v328;
      unint64_t v349 = v347 | (v345.i64[1] << v348);
      if ((v348 & 0x3F) + v346.i64[1] >= 0x40)
      {
        *(void *)((char *)v255 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v345.i64[1] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348 + v346.i64[1];
      v351.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v351.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v352.i64[0] = -1;
      v352.i64[1] = -1;
      uint8x16_t v353 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v352, (uint8x16_t)vaddq_s8(v474, v351)), v465);
      int16x8_t v354 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v474.i8);
      int16x8_t v355 = (int16x8_t)vmovl_high_u8((uint8x16_t)v474);
      uint16x8_t v356 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v353.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v354)), (int16x8_t)vshlq_u16(vmovl_high_u8(v353), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v355)));
      uint16x8_t v357 = (uint16x8_t)vpaddq_s16(v354, v355);
      int32x4_t v358 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v357.i8);
      int32x4_t v359 = (int32x4_t)vmovl_high_u16(v357);
      int32x4_t v360 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v356.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v358)), (int32x4_t)vshlq_u32(vmovl_high_u16(v356), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v359)));
      int32x4_t v361 = vpaddq_s32(v358, v359);
      v362.i64[0] = v360.u32[0];
      v362.i64[1] = v360.u32[1];
      uint64x2_t v363 = (uint64x2_t)v362;
      v362.i64[0] = v360.u32[2];
      v362.i64[1] = v360.u32[3];
      uint64x2_t v364 = (uint64x2_t)v362;
      v362.i64[0] = v361.u32[0];
      v362.i64[1] = v361.u32[1];
      int64x2_t v365 = v362;
      v362.i64[0] = v361.u32[2];
      v362.i64[1] = v361.u32[3];
      int64x2_t v366 = vpaddq_s64((int64x2_t)vshlq_u64(v363, (uint64x2_t)vzip1q_s64((int64x2_t)0, v365)), (int64x2_t)vshlq_u64(v364, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)));
      int64x2_t v367 = vpaddq_s64(v365, v362);
      unint64_t v368 = (v366.i64[0] << v350) | v349;
      if (v367.i64[0] + (v350 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v255 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v368;
        if ((v350 & 0x3F) != 0) {
          unint64_t v368 = (unint64_t)v366.i64[0] >> -(v350 & 0x3F);
        }
        else {
          unint64_t v368 = 0;
        }
      }
      uint64_t v369 = v367.i64[1];
      unint64_t v370 = v367.i64[0] + v350;
      uint64_t v371 = (v367.i64[0] + v350) & 0x3F;
      unint64_t v372 = v368 | (v366.i64[1] << v370);
      if ((unint64_t)(v371 + v367.i64[1]) >= 0x40)
      {
        *(void *)((char *)v255 + ((v370 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v372;
        unint64_t v372 = (unint64_t)v366.i64[1] >> -(char)v371;
        if (!v371) {
          unint64_t v372 = 0;
        }
      }
      uint64_t v373 = 0;
      v374.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v374.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v375.i64[0] = -1;
      v375.i64[1] = -1;
      unint64_t v376 = v370 + v369;
      char v377 = 1;
      do
      {
        char v378 = v377;
        uint8x16_t v379 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v375, (uint8x16_t)vaddq_s8(v475, v374)), *(&v466 + v373));
        int16x8_t v380 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v475.i8);
        int16x8_t v381 = (int16x8_t)vmovl_high_u8((uint8x16_t)v475);
        uint16x8_t v382 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v379.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v380)), (int16x8_t)vshlq_u16(vmovl_high_u8(v379), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v381)));
        uint16x8_t v383 = (uint16x8_t)vpaddq_s16(v380, v381);
        int32x4_t v384 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v383.i8);
        int32x4_t v385 = (int32x4_t)vmovl_high_u16(v383);
        int32x4_t v386 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v382.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v384)), (int32x4_t)vshlq_u32(vmovl_high_u16(v382), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v385)));
        int32x4_t v387 = vpaddq_s32(v384, v385);
        v388.i64[0] = v386.u32[0];
        v388.i64[1] = v386.u32[1];
        uint64x2_t v389 = (uint64x2_t)v388;
        v388.i64[0] = v386.u32[2];
        v388.i64[1] = v386.u32[3];
        uint64x2_t v390 = (uint64x2_t)v388;
        v388.i64[0] = v387.u32[0];
        v388.i64[1] = v387.u32[1];
        int64x2_t v391 = v388;
        v388.i64[0] = v387.u32[2];
        v388.i64[1] = v387.u32[3];
        int64x2_t v392 = vpaddq_s64((int64x2_t)vshlq_u64(v389, (uint64x2_t)vzip1q_s64((int64x2_t)0, v391)), (int64x2_t)vshlq_u64(v390, (uint64x2_t)vzip1q_s64((int64x2_t)0, v388)));
        int64x2_t v393 = vpaddq_s64(v391, v388);
        unint64_t v394 = (v392.i64[0] << v376) | v372;
        if (v393.i64[0] + (v376 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v255 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v394;
          unint64_t v394 = (unint64_t)v392.i64[0] >> -(v376 & 0x3F);
          if ((v376 & 0x3F) == 0) {
            unint64_t v394 = 0;
          }
        }
        unint64_t v395 = v393.i64[0] + v376;
        unint64_t v372 = v394 | (v392.i64[1] << v395);
        if ((v395 & 0x3F) + v393.i64[1] >= 0x40)
        {
          *(void *)((char *)v255 + ((v395 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v372;
          unint64_t v372 = (unint64_t)v392.i64[1] >> -(v395 & 0x3F);
          if ((v395 & 0x3F) == 0) {
            unint64_t v372 = 0;
          }
        }
        char v377 = 0;
        unint64_t v376 = v395 + v393.i64[1];
        uint64_t v373 = 1;
      }
      while ((v378 & 1) != 0);
      uint64_t v396 = 0;
      char v397 = 1;
      v398.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v398.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v399.i64[0] = -1;
      v399.i64[1] = -1;
      do
      {
        char v400 = v397;
        uint8x16_t v401 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v399, (uint8x16_t)vaddq_s8(v476, v398)), *(&v468 + v396));
        int16x8_t v402 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v476.i8);
        int16x8_t v403 = (int16x8_t)vmovl_high_u8((uint8x16_t)v476);
        uint16x8_t v404 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v401.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v402)), (int16x8_t)vshlq_u16(vmovl_high_u8(v401), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v403)));
        uint16x8_t v405 = (uint16x8_t)vpaddq_s16(v402, v403);
        int32x4_t v406 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v405.i8);
        int32x4_t v407 = (int32x4_t)vmovl_high_u16(v405);
        int32x4_t v408 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v404.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v406)), (int32x4_t)vshlq_u32(vmovl_high_u16(v404), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v407)));
        int32x4_t v409 = vpaddq_s32(v406, v407);
        v410.i64[0] = v408.u32[0];
        v410.i64[1] = v408.u32[1];
        uint64x2_t v411 = (uint64x2_t)v410;
        v410.i64[0] = v408.u32[2];
        v410.i64[1] = v408.u32[3];
        uint64x2_t v412 = (uint64x2_t)v410;
        v410.i64[0] = v409.u32[0];
        v410.i64[1] = v409.u32[1];
        int64x2_t v413 = v410;
        v410.i64[0] = v409.u32[2];
        v410.i64[1] = v409.u32[3];
        int64x2_t v414 = vpaddq_s64((int64x2_t)vshlq_u64(v411, (uint64x2_t)vzip1q_s64((int64x2_t)0, v413)), (int64x2_t)vshlq_u64(v412, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)));
        int64x2_t v415 = vpaddq_s64(v413, v410);
        unint64_t v416 = (v414.i64[0] << v376) | v372;
        if (v415.i64[0] + (v376 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v255 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v416;
          unint64_t v416 = (unint64_t)v414.i64[0] >> -(v376 & 0x3F);
          if ((v376 & 0x3F) == 0) {
            unint64_t v416 = 0;
          }
        }
        unint64_t v417 = v415.i64[0] + v376;
        unint64_t v372 = v416 | (v414.i64[1] << v417);
        if ((v417 & 0x3F) + v415.i64[1] >= 0x40)
        {
          *(void *)((char *)v255 + ((v417 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v372;
          unint64_t v372 = (unint64_t)v414.i64[1] >> -(v417 & 0x3F);
          if ((v417 & 0x3F) == 0) {
            unint64_t v372 = 0;
          }
        }
        char v397 = 0;
        unint64_t v376 = v417 + v415.i64[1];
        uint64_t v396 = 1;
      }
      while ((v400 & 1) != 0);
      uint64_t v418 = 0;
      char v419 = 1;
      v420.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v420.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v421.i64[0] = -1;
      v421.i64[1] = -1;
      do
      {
        char v422 = v419;
        uint8x16_t v423 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v421, (uint8x16_t)vaddq_s8(v477, v420)), *(&v470 + v418));
        int16x8_t v424 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v477.i8);
        int16x8_t v425 = (int16x8_t)vmovl_high_u8((uint8x16_t)v477);
        uint16x8_t v426 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v423.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v424)), (int16x8_t)vshlq_u16(vmovl_high_u8(v423), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v425)));
        uint16x8_t v427 = (uint16x8_t)vpaddq_s16(v424, v425);
        int32x4_t v428 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v427.i8);
        int32x4_t v429 = (int32x4_t)vmovl_high_u16(v427);
        int32x4_t v430 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v426.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v428)), (int32x4_t)vshlq_u32(vmovl_high_u16(v426), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v429)));
        int32x4_t v431 = vpaddq_s32(v428, v429);
        v432.i64[0] = v430.u32[0];
        v432.i64[1] = v430.u32[1];
        uint64x2_t v433 = (uint64x2_t)v432;
        v432.i64[0] = v430.u32[2];
        v432.i64[1] = v430.u32[3];
        uint64x2_t v434 = (uint64x2_t)v432;
        v432.i64[0] = v431.u32[0];
        v432.i64[1] = v431.u32[1];
        int64x2_t v435 = v432;
        v432.i64[0] = v431.u32[2];
        v432.i64[1] = v431.u32[3];
        int64x2_t v436 = vpaddq_s64((int64x2_t)vshlq_u64(v433, (uint64x2_t)vzip1q_s64((int64x2_t)0, v435)), (int64x2_t)vshlq_u64(v434, (uint64x2_t)vzip1q_s64((int64x2_t)0, v432)));
        int64x2_t v437 = vpaddq_s64(v435, v432);
        unint64_t v438 = (v436.i64[0] << v376) | v372;
        if (v437.i64[0] + (v376 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v255 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v438;
          unint64_t v438 = (unint64_t)v436.i64[0] >> -(v376 & 0x3F);
          if ((v376 & 0x3F) == 0) {
            unint64_t v438 = 0;
          }
        }
        unint64_t v439 = v437.i64[0] + v376;
        unint64_t v372 = v438 | (v436.i64[1] << v439);
        if ((v439 & 0x3F) + v437.i64[1] >= 0x40)
        {
          *(void *)((char *)v255 + ((v439 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v372;
          unint64_t v372 = (unint64_t)v436.i64[1] >> -(v439 & 0x3F);
          if ((v439 & 0x3F) == 0) {
            unint64_t v372 = 0;
          }
        }
        char v419 = 0;
        unint64_t v376 = v439 + v437.i64[1];
        uint64_t v418 = 1;
      }
      while ((v422 & 1) != 0);
      if ((v376 & 0x3F) != 0) {
        *(void *)((char *)v255 + ((v376 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v372;
      }
      unint64_t result = (v376 - v256 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v103 = *MEMORY[0x263EF8340];
  DWORD1(v11) = 0;
  long long v101 = 0u;
  long long v102 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  if (a5 > 3)
  {
    uint64_t v19 = a5 & 0xFC;
    uint64_t v20 = a5 - v19;
    if (a5 == v19)
    {
      unsigned __int8 v21 = 0;
      do
      {
        int8x16_t v22 = &v96 + v21;
        int8x16_t v23 = (const float *)a3;
        uint64_t v24 = a5;
        do
        {
          *(float32x4x2_t *)&long long v11 = vld2q_f32(v23);
          v23 += 8;
          *(v22 - 1) = v11;
          *v22++ = v25;
          v24 -= 4;
        }
        while (v24);
        ++v20;
        v21 += 2;
        a3 += a4;
      }
      while (v20 != a6);
    }
    else
    {
      unsigned __int8 v26 = 0;
      uint64_t v27 = 0;
      do
      {
        uint64_t v28 = 16 * v26;
        int8x16_t v29 = (_DWORD *)((char *)&v96 + ((4 * a5) & 0x3F0) + v28);
        int8x16_t v30 = (long long *)((char *)&v96 + v28);
        int8x16_t v31 = (const float *)a3;
        uint64_t v32 = a5 & 0xFC;
        do
        {
          *(float32x4x2_t *)&long long v11 = vld2q_f32(v31);
          v31 += 8;
          *(v30 - 1) = v11;
          *v30++ = v33;
          v32 -= 4;
        }
        while (v32);
        uint64_t v34 = 8 * v19;
        uint64_t v35 = a5 - v19;
        do
        {
          int v36 = *(_DWORD *)(a3 + v34 + 4);
          *(v29 - 4) = *(_DWORD *)(a3 + v34);
          *v29++ = v36;
          v34 += 8;
          --v35;
        }
        while (v35);
        ++v27;
        v26 += 2;
        a3 += a4;
      }
      while (v27 != a6);
    }
  }
  else
  {
    uint64_t v12 = 0;
    int8x16_t v13 = (_DWORD *)(a3 + 12);
    do
    {
      uint64_t v14 = (2 * v12) | 1u;
      int v15 = *(v13 - 2);
      *((_DWORD *)&v95 + 8 * (v12 & 0x7F)) = *(v13 - 3);
      *((_DWORD *)&v95 + 4 * v14) = v15;
      if (a5 != 1)
      {
        int8x16_t v16 = &v95 + 2 * (v12 & 0x7F);
        *((_DWORD *)v16 + 1) = *(v13 - 1);
        int8x16_t v17 = &v95 + v14;
        *((_DWORD *)v17 + 1) = *v13;
        if (a5 != 2)
        {
          int v18 = v13[2];
          *((_DWORD *)v16 + 2) = v13[1];
          *((_DWORD *)v17 + 2) = v18;
        }
      }
      ++v12;
      int8x16_t v13 = (_DWORD *)((char *)v13 + a4);
    }
    while (a6 != v12);
  }
  unsigned int v37 = 2 * (a5 & 0x7F);
  LODWORD(v11) = v95;
  uint16x4_t v38 = (uint16x4_t)vmovl_u8(*(uint8x8_t *)&v11).u64[0];
  uint32x4_t v39 = vmovl_u16(v38);
  v38.i32[0] = v96;
  uint32x4_t v40 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v38));
  uint32x4_t v87 = v39;
  uint32x4_t v88 = v40;
  v40.i32[0] = DWORD1(v95);
  v40.i64[0] = vmovl_u8(*(uint8x8_t *)v40.i8).u64[0];
  uint32x4_t v41 = vmovl_u16(*(uint16x4_t *)v40.i8);
  v40.i32[0] = DWORD1(v96);
  uint32x4_t v42 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v40.i8));
  uint32x4_t v89 = v41;
  uint32x4_t v90 = v42;
  v42.i32[0] = v97;
  v42.i64[0] = vmovl_u8(*(uint8x8_t *)v42.i8).u64[0];
  uint32x4_t v43 = vmovl_u16(*(uint16x4_t *)v42.i8);
  v42.i32[0] = v98;
  uint32x4_t v44 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v42.i8));
  uint32x4_t v91 = v43;
  uint32x4_t v92 = v44;
  v44.i32[0] = DWORD1(v97);
  v44.i64[0] = vmovl_u8(*(uint8x8_t *)v44.i8).u64[0];
  uint32x4_t v45 = vmovl_u16(*(uint16x4_t *)v44.i8);
  v44.i32[0] = DWORD1(v98);
  uint32x4_t v93 = v45;
  uint32x4_t v94 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v44.i8));
  if (v37 >= 4) {
    unsigned int v46 = 4;
  }
  else {
    unsigned int v46 = 2 * (a5 & 0x7F);
  }
  if (v37 >= 4) {
    unsigned int v47 = v37 - 4;
  }
  else {
    unsigned int v47 = 0;
  }
  if (a6 >= 2) {
    unsigned int v48 = 2;
  }
  else {
    unsigned int v48 = a6;
  }
  if (a6 >= 2) {
    unsigned int v49 = a6 - 2;
  }
  else {
    unsigned int v49 = 0;
  }
  char v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v87, a7, v46, v48);
  v51.i32[0] = DWORD2(v95);
  uint16x4_t v52 = (uint16x4_t)vmovl_u8(v51).u64[0];
  uint32x4_t v53 = vmovl_u16(v52);
  v52.i32[0] = DWORD2(v96);
  uint32x4_t v54 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v52));
  uint32x4_t v87 = v53;
  uint32x4_t v88 = v54;
  v54.i32[0] = HIDWORD(v95);
  v54.i64[0] = vmovl_u8(*(uint8x8_t *)v54.i8).u64[0];
  uint32x4_t v55 = vmovl_u16(*(uint16x4_t *)v54.i8);
  v54.i32[0] = HIDWORD(v96);
  uint32x4_t v56 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v54.i8));
  uint32x4_t v89 = v55;
  uint32x4_t v90 = v56;
  v56.i32[0] = DWORD2(v97);
  v56.i64[0] = vmovl_u8(*(uint8x8_t *)v56.i8).u64[0];
  uint32x4_t v57 = vmovl_u16(*(uint16x4_t *)v56.i8);
  v56.i32[0] = DWORD2(v98);
  uint32x4_t v58 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v56.i8));
  uint32x4_t v91 = v57;
  uint32x4_t v92 = v58;
  v58.i32[0] = HIDWORD(v97);
  v58.i64[0] = vmovl_u8(*(uint8x8_t *)v58.i8).u64[0];
  uint32x4_t v59 = vmovl_u16(*(uint16x4_t *)v58.i8);
  v58.i32[0] = HIDWORD(v98);
  uint32x4_t v93 = v59;
  uint32x4_t v94 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v58.i8));
  if (a6 >= 4) {
    unsigned int v60 = 2;
  }
  else {
    unsigned int v60 = v49;
  }
  int v61 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v87, a7, v46, v60);
  v62.i32[0] = v99;
  uint16x4_t v63 = (uint16x4_t)vmovl_u8(v62).u64[0];
  uint32x4_t v64 = vmovl_u16(v63);
  v63.i32[0] = v100;
  uint32x4_t v65 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v63));
  uint32x4_t v87 = v64;
  uint32x4_t v88 = v65;
  v65.i32[0] = DWORD1(v99);
  v65.i64[0] = vmovl_u8(*(uint8x8_t *)v65.i8).u64[0];
  uint32x4_t v66 = vmovl_u16(*(uint16x4_t *)v65.i8);
  v65.i32[0] = DWORD1(v100);
  uint32x4_t v67 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v65.i8));
  uint32x4_t v89 = v66;
  uint32x4_t v90 = v67;
  v67.i32[0] = v101;
  v67.i64[0] = vmovl_u8(*(uint8x8_t *)v67.i8).u64[0];
  uint32x4_t v68 = vmovl_u16(*(uint16x4_t *)v67.i8);
  v67.i32[0] = v102;
  uint32x4_t v69 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v67.i8));
  uint32x4_t v91 = v68;
  uint32x4_t v92 = v69;
  v69.i32[0] = DWORD1(v101);
  v69.i64[0] = vmovl_u8(*(uint8x8_t *)v69.i8).u64[0];
  uint32x4_t v70 = vmovl_u16(*(uint16x4_t *)v69.i8);
  v69.i32[0] = DWORD1(v102);
  uint32x4_t v93 = v70;
  uint32x4_t v94 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v69.i8));
  if (a5 >= 4) {
    unsigned int v71 = 4;
  }
  else {
    unsigned int v71 = v47;
  }
  int v72 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v87, a7, v71, v48);
  v73.i32[0] = DWORD2(v99);
  uint16x4_t v74 = (uint16x4_t)vmovl_u8(v73).u64[0];
  uint32x4_t v75 = vmovl_u16(v74);
  v74.i32[0] = DWORD2(v100);
  uint32x4_t v76 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v74));
  uint32x4_t v87 = v75;
  uint32x4_t v88 = v76;
  v76.i32[0] = HIDWORD(v99);
  v76.i64[0] = vmovl_u8(*(uint8x8_t *)v76.i8).u64[0];
  uint32x4_t v77 = vmovl_u16(*(uint16x4_t *)v76.i8);
  v76.i32[0] = HIDWORD(v100);
  uint32x4_t v78 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v76.i8));
  uint32x4_t v89 = v77;
  uint32x4_t v90 = v78;
  v78.i32[0] = DWORD2(v101);
  v78.i64[0] = vmovl_u8(*(uint8x8_t *)v78.i8).u64[0];
  uint32x4_t v79 = vmovl_u16(*(uint16x4_t *)v78.i8);
  v78.i32[0] = DWORD2(v102);
  uint32x4_t v80 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v78.i8));
  uint32x4_t v91 = v79;
  uint32x4_t v92 = v80;
  v80.i32[0] = HIDWORD(v101);
  v80.i64[0] = vmovl_u8(*(uint8x8_t *)v80.i8).u64[0];
  uint32x4_t v81 = vmovl_u16(*(uint16x4_t *)v80.i8);
  v80.i32[0] = HIDWORD(v102);
  uint32x4_t v93 = v81;
  uint32x4_t v94 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v80.i8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v87, a7, v71, v60);
  if (v72) {
    char v83 = 4;
  }
  else {
    char v83 = 0;
  }
  if (v61) {
    char v84 = 2;
  }
  else {
    char v84 = 0;
  }
  if (result) {
    char v85 = -8;
  }
  else {
    char v85 = -16;
  }
  *a2 = v85 | v83 | v50 | v84;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int8x16_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v294 = 0;
  unint64_t v292 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v293 = (8 * (a3 & 7)) | 0x200;
  unint64_t v291 = 8 * (a3 & 7);
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v296, (uint64_t)v301, (float *)v295.i32, &v291, a4);
  v8.i64[0] = 0x303030303030303;
  v8.i64[1] = 0x303030303030303;
  int8x16_t v9 = vandq_s8(v296, v8);
  int8x16_t v10 = vbicq_s8(v301[0], vceqq_s8(v9, v8));
  v301[0] = v10;
  int8x16_t v297 = v10;
  int8x16_t v298 = v10;
  int8x16_t v299 = v10;
  int8x16_t v300 = v10;
  v11.i64[0] = 0x202020202020202;
  v11.i64[1] = 0x202020202020202;
  int8x16_t v12 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v296.i8), (int16x4_t)0x4000400040004)), v11);
  unint64_t v13 = v291;
  int8x16_t v290 = v9;
  if (vmaxvq_s8(v12) < 1)
  {
    v26.i64[0] = -1;
    v26.i64[1] = -1;
    v27.i64[0] = -1;
    v27.i64[1] = -1;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    v29.i64[0] = -1;
    v29.i64[1] = -1;
  }
  else
  {
    int8x16_t v14 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v12, v12));
    int8x16_t v15 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v14, (int16x8_t)v14));
    unint64_t v16 = vpaddq_s32((int32x4_t)v15, (int32x4_t)v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19;
    unint64_t v21 = v291 + v19;
    if (v293) {
      BOOL v22 = v293 >= v21;
    }
    else {
      BOOL v22 = 1;
    }
    int v23 = !v22;
    if (v19 <= 0x80 && v23 == 0)
    {
      v7.i64[0] = 63;
      int8x16_t v30 = (int64x2_t *)(v292 + 8 * (v291 >> 6));
      int64x2_t v31 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v291, v7).i64[0], 0), vzip1q_s64((int64x2_t)0, v18));
      int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v30, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30->i64[0], 0), (uint64x2_t)vnegq_s64(v31)));
      if ((v291 & 0x3F) + v20 >= 0x81) {
        int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v30[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v31))), v25);
      }
      unint64_t v13 = v21;
    }
    else
    {
      unsigned __int8 v294 = 1;
      int8x16_t v25 = 0uLL;
    }
    int32x2_t v32 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    v33.i64[0] = v32.u32[0];
    v33.i64[1] = v32.u32[1];
    int64x2_t v34 = (int64x2_t)vshlq_u64((uint64x2_t)v25, (uint64x2_t)vnegq_s64(v33));
    *(int32x2_t *)v25.i8 = vmovn_s64((int64x2_t)v25);
    *(int32x2_t *)v34.i8 = vmovn_s64(v34);
    int16x8_t v35 = (int16x8_t)vzip1q_s32((int32x4_t)v25, (int32x4_t)v34);
    int16x8_t v36 = (int16x8_t)vshlq_u32((uint32x4_t)v35, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    *(int16x4_t *)v35.i8 = vmovn_s32((int32x4_t)v35);
    *(int16x4_t *)v36.i8 = vmovn_s32((int32x4_t)v36);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v35, v36);
    int8x16_t v38 = (int8x16_t)vshlq_u16((uint16x8_t)v37, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)))));
    *(int8x8_t *)v37.i8 = vmovn_s16((int16x8_t)v37);
    *(int8x8_t *)v38.i8 = vmovn_s16((int16x8_t)v38);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    v38.i64[0] = 0x101010101010101;
    v38.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8(v38, v12);
    v38.i64[0] = -1;
    v38.i64[1] = -1;
    int32x4_t v41 = (int32x4_t)vqtbl1q_s8(vandq_s8(v39, vaddq_s8(v40, v38)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
    int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
    int8x16_t v44 = (int8x16_t)vdupq_laneq_s32(v41, 2);
    int8x16_t v45 = (int8x16_t)vdupq_laneq_s32(v41, 3);
    int8x16_t v297 = vsubq_s8(v297, v42);
    int8x16_t v298 = vsubq_s8(v298, v43);
    int8x16_t v299 = vsubq_s8(v299, v44);
    int8x16_t v300 = vsubq_s8(v300, v45);
    int8x16_t v29 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v27 = vceqzq_s8(v44);
    int8x16_t v26 = vceqzq_s8(v45);
  }
  v46.i64[0] = 0x808080808080808;
  v46.i64[1] = 0x808080808080808;
  int8x16_t v47 = 0uLL;
  int8x16_t v48 = vandq_s8(vextq_s8(vtstq_s8(v296, v46), (int8x16_t)0, 0xCuLL), v10);
  int8x16_t v49 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v48, v48));
  int8x16_t v50 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v49, (int16x8_t)v49));
  unint64_t v51 = vpaddq_s32((int32x4_t)v50, (int32x4_t)v50).u64[0];
  v52.i64[0] = v51;
  v52.i64[1] = HIDWORD(v51);
  int64x2_t v53 = v52;
  unint64_t v54 = vaddvq_s64(v52);
  if (v293) {
    BOOL v55 = v293 >= v13 + v54;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = !v55;
  if (v54 <= 0x80 && v56 == 0)
  {
    int64x2_t v58 = vaddq_s64(vdupq_n_s64(v13 & 0x3F), vzip1q_s64((int64x2_t)0, v53));
    uint32x4_t v59 = (int64x2_t *)(v292 + 8 * (v13 >> 6));
    int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v59, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59->i64[0], 0), (uint64x2_t)vnegq_s64(v58)));
    if ((v13 & 0x3F) + v54 >= 0x81) {
      int8x16_t v47 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v59[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v58))), v47);
    }
    v13 += v54;
  }
  else
  {
    unsigned __int8 v294 = 1;
  }
  int v60 = v296.i8[0] & 3;
  int8x16_t v288 = v26;
  int8x16_t v289 = v29;
  int8x16_t v286 = v28;
  int8x16_t v287 = v27;
  if (v60 == 2)
  {
    unint64_t v61 = v13 + 4;
    if (v293)
    {
      if (v293 < v61)
      {
        unsigned __int8 v294 = 1;
LABEL_39:
        unsigned __int8 v294 = 1;
        goto LABEL_40;
      }
      unint64_t v62 = v13 + 8;
      v13 += 4;
      if (v293 < v62) {
        goto LABEL_39;
      }
      unint64_t v61 = v13;
    }
    unint64_t v13 = v61 + 4;
  }
LABEL_40:
  int8x16_t v63 = 0uLL;
  int8x16_t v64 = vextq_s8((int8x16_t)0, v297, 0xCuLL);
  int8x16_t v65 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v64, v64));
  int8x16_t v66 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v65, (int16x8_t)v65));
  unint64_t v67 = vpaddq_s32((int32x4_t)v66, (int32x4_t)v66).u64[0];
  v68.i64[0] = v67;
  v68.i64[1] = HIDWORD(v67);
  int64x2_t v69 = v68;
  unint64_t v70 = vaddvq_s64(v68);
  unint64_t v71 = v13 + v70;
  if (v293) {
    BOOL v72 = v293 >= v71;
  }
  else {
    BOOL v72 = 1;
  }
  int v73 = !v72;
  if (v70 > 0x80 || v73)
  {
    int v78 = 1;
    unint64_t v76 = v292;
  }
  else
  {
    unint64_t v74 = v13 & 0x3F;
    int64x2_t v75 = vaddq_s64(vdupq_n_s64(v74), vzip1q_s64((int64x2_t)0, v69));
    unint64_t v76 = v292;
    uint32x4_t v77 = (int64x2_t *)(v292 + 8 * (v13 >> 6));
    int8x16_t v63 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v77, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77->i64[0], 0), (uint64x2_t)vnegq_s64(v75)));
    if (v74 + v70 >= 0x81) {
      int8x16_t v63 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v77[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v75))), v63);
    }
    int v78 = v294;
    unint64_t v13 = v71;
  }
  int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v297, v297));
  int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
  unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v13 + v84;
  if (v293) {
    BOOL v86 = v293 >= v85;
  }
  else {
    BOOL v86 = 1;
  }
  char v87 = !v86;
  int8x16_t v88 = 0uLL;
  if (v84 > 0x80 || (v87 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v85 = v13;
    int8x16_t v92 = 0uLL;
  }
  else
  {
    unint64_t v89 = v13 & 0x3F;
    int64x2_t v90 = vaddq_s64(vdupq_n_s64(v89), vzip1q_s64((int64x2_t)0, v83));
    uint32x4_t v91 = (int64x2_t *)(v76 + 8 * (v13 >> 6));
    int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v90)));
    if (v89 + v84 >= 0x81) {
      int8x16_t v92 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v91[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v90))), v92);
    }
  }
  int8x16_t v93 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v298, v298));
  int8x16_t v94 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v93, (int16x8_t)v93));
  unint64_t v95 = vpaddq_s32((int32x4_t)v94, (int32x4_t)v94).u64[0];
  v96.i64[0] = v95;
  v96.i64[1] = HIDWORD(v95);
  int64x2_t v97 = v96;
  unint64_t v98 = vaddvq_s64(v96);
  unint64_t v99 = v98;
  unint64_t v100 = v85 + v98;
  if (v293) {
    BOOL v101 = v293 >= v100;
  }
  else {
    BOOL v101 = 1;
  }
  char v102 = !v101;
  if (v98 > 0x80 || (v102 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v100 = v85;
  }
  else
  {
    unint64_t v103 = v85 & 0x3F;
    int64x2_t v104 = vaddq_s64(vdupq_n_s64(v103), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v105 = (int64x2_t *)(v76 + 8 * (v85 >> 6));
    int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
    if (v103 + v99 >= 0x81) {
      int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v88);
    }
  }
  unint64_t v106 = v100 + v99;
  if (v293) {
    BOOL v107 = v293 >= v106;
  }
  else {
    BOOL v107 = 1;
  }
  char v108 = !v107;
  int8x16_t v109 = 0uLL;
  if (v99 > 0x80 || (v108 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v106 = v100;
    int8x16_t v113 = 0uLL;
  }
  else
  {
    unint64_t v110 = v100 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v112 = (int64x2_t *)(v76 + 8 * (v100 >> 6));
    int8x16_t v113 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v99 >= 0x81) {
      int8x16_t v113 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v113);
    }
  }
  int8x16_t v114 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v299, v299));
  int8x16_t v115 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v114, (int16x8_t)v114));
  unint64_t v116 = vpaddq_s32((int32x4_t)v115, (int32x4_t)v115).u64[0];
  v117.i64[0] = v116;
  v117.i64[1] = HIDWORD(v116);
  int64x2_t v118 = v117;
  unint64_t v119 = vaddvq_s64(v117);
  unint64_t v120 = v119;
  unint64_t v121 = v106 + v119;
  if (v293) {
    BOOL v122 = v293 >= v121;
  }
  else {
    BOOL v122 = 1;
  }
  char v123 = !v122;
  if (v119 > 0x80 || (v123 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v121 = v106;
  }
  else
  {
    unint64_t v124 = v106 & 0x3F;
    int64x2_t v125 = vaddq_s64(vdupq_n_s64(v124), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v126 = (int64x2_t *)(v76 + 8 * (v106 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v126, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126->i64[0], 0), (uint64x2_t)vnegq_s64(v125)));
    if (v124 + v120 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v126[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v125))), v109);
    }
  }
  unint64_t v127 = v121 + v120;
  if (v293) {
    BOOL v128 = v293 >= v127;
  }
  else {
    BOOL v128 = 1;
  }
  char v129 = !v128;
  int8x16_t v130 = 0uLL;
  if (v120 > 0x80 || (v129 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v127 = v121;
    int8x16_t v134 = 0uLL;
  }
  else
  {
    unint64_t v131 = v121 & 0x3F;
    int64x2_t v132 = vaddq_s64(vdupq_n_s64(v131), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v133 = (int64x2_t *)(v76 + 8 * (v121 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v132)));
    if (v131 + v120 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v132))), v134);
    }
  }
  int8x16_t v135 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v300, v300));
  int8x16_t v136 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v135, (int16x8_t)v135));
  unint64_t v137 = vpaddq_s32((int32x4_t)v136, (int32x4_t)v136).u64[0];
  v138.i64[0] = v137;
  v138.i64[1] = HIDWORD(v137);
  int64x2_t v139 = v138;
  unint64_t v140 = vaddvq_s64(v138);
  unint64_t v141 = v140;
  unint64_t v142 = v127 + v140;
  if (v293) {
    BOOL v143 = v293 >= v142;
  }
  else {
    BOOL v143 = 1;
  }
  char v144 = !v143;
  if (v140 > 0x80 || (v144 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v142 = v127;
  }
  else
  {
    unint64_t v145 = v127 & 0x3F;
    int64x2_t v146 = vaddq_s64(vdupq_n_s64(v145), vzip1q_s64((int64x2_t)0, v139));
    int8x16_t v147 = (int64x2_t *)(v76 + 8 * (v127 >> 6));
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v147, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147->i64[0], 0), (uint64x2_t)vnegq_s64(v146)));
    if (v145 + v141 >= 0x81) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v147[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v146))), v130);
    }
  }
  unint64_t v148 = v142 + v141;
  if (v293) {
    BOOL v149 = v293 >= v148;
  }
  else {
    BOOL v149 = 1;
  }
  char v150 = !v149;
  if (v141 > 0x80 || (v150 & 1) != 0) {
    goto LABEL_133;
  }
  int64x2_t v151 = vaddq_s64(vdupq_n_s64(v142 & 0x3F), vzip1q_s64((int64x2_t)0, v139));
  int8x16_t v152 = (int64x2_t *)(v76 + 8 * (v142 >> 6));
  int8x16_t v153 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v152, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152->i64[0], 0), (uint64x2_t)vnegq_s64(v151)));
  if ((v142 & 0x3F) + v141 >= 0x81) {
    int8x16_t v153 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v152[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v151))), v153);
  }
  if (v78 || v293 + 8 * result - v148 - 512 >= 9 || v60 == 2)
  {
LABEL_133:
    uint64_t v154 = (8 * (&vars0 - 100)) & 0x20;
    uint64_t v155 = v302 | (255 << v154);
    uint64_t v302 = v155;
    unint64_t v156 = (32 * ((((unint64_t)&v302 + 4) >> 2) & 1)) | 8;
    unint64_t v157 = (((32 * ((((unint64_t)&v302 + 4) >> 2) & 1)) | 0x10) - v154) | 8;
    if (v156 - v154 > 0x18) {
      unint64_t v157 = v156 - v154 + 8;
    }
    if (v157 <= 0x20)
    {
      if (v156 - v154 <= 0x18) {
        LOBYTE(v156) = (32 * ((((unint64_t)&v302 + 4) & 4) != 0)) | 0x10;
      }
      uint64_t v158 = v155 | (255 << v156);
      uint64_t v302 = v158;
      uint64_t v159 = ((_BYTE)v156 + 8) & 0x38;
      if ((unint64_t)(v159 - v154 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v302 = v158 | (255 << v159);
      }
    }
    uint64_t result = 0;
    int8x16_t v160 = (uint64_t *)((char *)a1->i64 + a2);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int8x16_t v161 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *int8x16_t v160 = 0;
    v160[1] = 0;
    int8x16_t v162 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *int8x16_t v161 = 0;
    v161[1] = 0;
    *int8x16_t v162 = 0;
    v162[1] = 0;
  }
  else
  {
    int32x2_t v163 = vzip1_s32(*(int32x2_t *)v50.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL));
    int32x2_t v164 = vzip1_s32(*(int32x2_t *)v94.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL));
    uint16x4_t v165 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v49.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
    int32x4_t v166 = (int32x4_t)vextq_s8(v93, v93, 8uLL);
    uint16x4_t v167 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v166.i8);
    v168.i64[0] = v163.u32[0];
    v168.i64[1] = v163.u32[1];
    int64x2_t v169 = v168;
    v168.i64[0] = v164.u32[0];
    v168.i64[1] = v164.u32[1];
    uint64x2_t v170 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v171 = (int64x2_t)vshlq_u64((uint64x2_t)v47, (uint64x2_t)vnegq_s64(v169));
    *(int32x2_t *)v166.i8 = vmovn_s64((int64x2_t)v47);
    *(int32x2_t *)v171.i8 = vmovn_s64(v171);
    int16x8_t v172 = (int16x8_t)vzip1q_s32(v166, (int32x4_t)v171);
    int64x2_t v173 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v170);
    *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)v88);
    *(int32x2_t *)v173.i8 = vmovn_s64(v173);
    int32x4_t v174 = vzip1q_s32((int32x4_t)v47, (int32x4_t)v173);
    int64x2_t v175 = (int64x2_t)vshlq_u64((uint64x2_t)v113, v170);
    *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v113);
    *(int32x2_t *)v175.i8 = vmovn_s64(v175);
    int16x8_t v176 = (int16x8_t)vzip1q_s32((int32x4_t)v173, (int32x4_t)v175);
    int32x4_t v177 = (int32x4_t)vmovl_u16(v165);
    int16x8_t v178 = (int16x8_t)vmovl_u16(v167);
    uint32x4_t v179 = (uint32x4_t)vnegq_s32((int32x4_t)v178);
    int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v172, (uint32x4_t)vnegq_s32(v177));
    *(int16x4_t *)v172.i8 = vmovn_s32((int32x4_t)v172);
    *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
    int8x16_t v181 = (int8x16_t)vzip1q_s16(v172, v180);
    int16x8_t v182 = (int16x8_t)vshlq_u32((uint32x4_t)v174, v179);
    *(int16x4_t *)v178.i8 = vmovn_s32(v174);
    *(int16x4_t *)v182.i8 = vmovn_s32((int32x4_t)v182);
    int8x16_t v183 = (int8x16_t)vzip1q_s16(v178, v182);
    int16x8_t v184 = (int16x8_t)vshlq_u32((uint32x4_t)v176, v179);
    *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
    *(int16x4_t *)v184.i8 = vmovn_s32((int32x4_t)v184);
    int8x16_t v185 = (int8x16_t)vzip1q_s16(v176, v184);
    uint16x8_t v186 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v298.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v298, v298, 8uLL))));
    int8x16_t v187 = (int8x16_t)vshlq_u16((uint16x8_t)v181, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v48.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))));
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    *(int8x8_t *)v187.i8 = vmovn_s16((int16x8_t)v187);
    int8x16_t v188 = vzip1q_s8(v181, v187);
    int8x16_t v189 = (int8x16_t)vshlq_u16((uint16x8_t)v183, v186);
    int8x16_t v190 = (int8x16_t)vshlq_u16((uint16x8_t)v185, v186);
    *(int8x8_t *)v183.i8 = vmovn_s16((int16x8_t)v183);
    *(int8x8_t *)v189.i8 = vmovn_s16((int16x8_t)v189);
    *(int8x8_t *)v185.i8 = vmovn_s16((int16x8_t)v185);
    *(int8x8_t *)v190.i8 = vmovn_s16((int16x8_t)v190);
    int8x16_t v191 = vzip1q_s8(v183, v189);
    v189.i64[0] = 0x808080808080808;
    v189.i64[1] = 0x808080808080808;
    int8x16_t v192 = vzip1q_s8(v185, v190);
    v190.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v190.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v193 = vsubq_s8(v189, v48);
    int8x16_t v194 = vaddq_s8(v48, v190);
    v190.i64[0] = 0x808080808080808;
    v190.i64[1] = 0x808080808080808;
    int8x16_t v195 = vshlq_s8(v188, v193);
    v193.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v193.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v196 = vsubq_s8(v190, v298);
    int8x16_t v197 = vaddq_s8(v298, v193);
    int8x16_t v198 = vshlq_s8(v191, v196);
    int8x16_t v199 = vshlq_s8(v192, v196);
    int8x16_t v200 = vshlq_s8(v195, v194);
    int8x16_t v201 = vshlq_s8(v198, v197);
    int8x16_t v202 = vshlq_s8(v199, v197);
    int8x16_t v203 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v200.i8, 0);
    int8x16_t v204 = vandq_s8(v286, v203);
    int8x16_t v205 = vsubq_s8(v201, v204);
    int8x16_t v206 = vsubq_s8(v202, v204);
    *(int32x2_t *)v201.i8 = vzip1_s32(*(int32x2_t *)v115.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL));
    *(int32x2_t *)v202.i8 = vzip1_s32(*(int32x2_t *)v136.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL));
    v168.i64[0] = v201.u32[0];
    v168.i64[1] = v201.u32[1];
    uint64x2_t v207 = (uint64x2_t)vnegq_s64(v168);
    *(int16x4_t *)v204.i8 = vuzp1_s16(*(int16x4_t *)v114.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL));
    int64x2_t v208 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
    *(int32x2_t *)v208.i8 = vmovn_s64(v208);
    int16x8_t v209 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v208);
    v168.i64[0] = v202.u32[0];
    v168.i64[1] = v202.u32[1];
    uint64x2_t v210 = (uint64x2_t)vnegq_s64(v168);
    int64x2_t v211 = (int64x2_t)vshlq_u64((uint64x2_t)v134, v207);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v134);
    *(int32x2_t *)v211.i8 = vmovn_s64(v211);
    int16x8_t v212 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v211);
    int64x2_t v213 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v210);
    *(int32x2_t *)v114.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v213.i8 = vmovn_s64(v213);
    uint32x4_t v214 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v204.i8));
    int16x8_t v215 = (int16x8_t)vzip1q_s32((int32x4_t)v114, (int32x4_t)v213);
    int16x8_t v216 = (int16x8_t)vshlq_u32((uint32x4_t)v209, v214);
    *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
    *(int16x4_t *)v216.i8 = vmovn_s32((int32x4_t)v216);
    int8x16_t v217 = (int8x16_t)vzip1q_s16(v209, v216);
    uint32x4_t v218 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v135.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL))));
    int16x8_t v219 = (int16x8_t)vshlq_u32((uint32x4_t)v212, v214);
    *(int16x4_t *)v212.i8 = vmovn_s32((int32x4_t)v212);
    *(int16x4_t *)v219.i8 = vmovn_s32((int32x4_t)v219);
    int8x16_t v220 = (int8x16_t)vzip1q_s16(v212, v219);
    int16x8_t v221 = (int16x8_t)vshlq_u32((uint32x4_t)v215, v218);
    *(int16x4_t *)v215.i8 = vmovn_s32((int32x4_t)v215);
    *(int16x4_t *)v221.i8 = vmovn_s32((int32x4_t)v221);
    uint16x8_t v222 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v299.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v299, v299, 8uLL))));
    int8x16_t v223 = (int8x16_t)vzip1q_s16(v215, v221);
    int8x16_t v224 = (int8x16_t)vshlq_u16((uint16x8_t)v217, v222);
    int8x16_t v225 = (int8x16_t)vshlq_u16((uint16x8_t)v220, v222);
    *(int8x8_t *)v217.i8 = vmovn_s16((int16x8_t)v217);
    *(int8x8_t *)v224.i8 = vmovn_s16((int16x8_t)v224);
    *(int8x8_t *)v220.i8 = vmovn_s16((int16x8_t)v220);
    *(int8x8_t *)v225.i8 = vmovn_s16((int16x8_t)v225);
    int8x16_t v226 = vzip1q_s8(v217, v224);
    v224.i64[0] = 0x808080808080808;
    v224.i64[1] = 0x808080808080808;
    int8x16_t v227 = vzip1q_s8(v220, v225);
    v225.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v225.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v228 = vsubq_s8(v224, v299);
    int8x16_t v229 = vaddq_s8(v299, v225);
    int8x16_t v230 = vshlq_s8(v226, v228);
    int8x16_t v231 = vshlq_s8(v227, v228);
    uint16x8_t v232 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v300.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v300, v300, 8uLL))));
    int8x16_t v233 = vshlq_s8(v231, v229);
    int8x16_t v234 = vandq_s8(v287, v203);
    int8x16_t v235 = vsubq_s8(vshlq_s8(v230, v229), v234);
    int8x16_t v236 = vsubq_s8(v233, v234);
    int8x16_t v237 = (int8x16_t)vshlq_u16((uint16x8_t)v223, v232);
    *(int8x8_t *)v223.i8 = vmovn_s16((int16x8_t)v223);
    *(int8x8_t *)v237.i8 = vmovn_s16((int16x8_t)v237);
    v234.i64[0] = 0x808080808080808;
    v234.i64[1] = 0x808080808080808;
    int8x16_t v238 = vzip1q_s8(v223, v237);
    v223.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v223.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v239 = vsubq_s8(v234, v300);
    int8x16_t v240 = vaddq_s8(v300, v223);
    int64x2_t v241 = (int64x2_t)vshlq_u64((uint64x2_t)v153, v210);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    *(int32x2_t *)v241.i8 = vmovn_s64(v241);
    int16x8_t v242 = (int16x8_t)vzip1q_s32((int32x4_t)v153, (int32x4_t)v241);
    int16x8_t v243 = (int16x8_t)vshlq_u32((uint32x4_t)v242, v218);
    *(int16x4_t *)v242.i8 = vmovn_s32((int32x4_t)v242);
    *(int16x4_t *)v243.i8 = vmovn_s32((int32x4_t)v243);
    int8x16_t v244 = (int8x16_t)vzip1q_s16(v242, v243);
    int8x16_t v245 = (int8x16_t)vshlq_u16((uint16x8_t)v244, v232);
    *(int8x8_t *)v244.i8 = vmovn_s16((int16x8_t)v244);
    *(int8x8_t *)v245.i8 = vmovn_s16((int16x8_t)v245);
    int8x16_t v246 = vshlq_s8(vshlq_s8(vzip1q_s8(v244, v245), v239), v240);
    int8x16_t v247 = vandq_s8(v288, v203);
    int8x16_t v248 = vsubq_s8(vshlq_s8(vshlq_s8(v238, v239), v240), v247);
    int8x16_t v249 = vsubq_s8(v246, v247);
    *(int32x2_t *)v238.i8 = vzip1_s32(*(int32x2_t *)v66.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL));
    *(int32x2_t *)v246.i8 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v168.i64[0] = v238.u32[0];
    v168.i64[1] = v238.u32[1];
    int64x2_t v250 = (int64x2_t)vshlq_u64((uint64x2_t)v63, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v63);
    *(int32x2_t *)v250.i8 = vmovn_s64(v250);
    int16x8_t v251 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v250);
    v168.i64[0] = v246.u32[0];
    v168.i64[1] = v246.u32[1];
    int64x2_t v252 = (int64x2_t)vshlq_u64((uint64x2_t)v92, (uint64x2_t)vnegq_s64(v168));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v92);
    *(int32x2_t *)v252.i8 = vmovn_s64(v252);
    int16x8_t v253 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v252);
    int16x8_t v254 = (int16x8_t)vshlq_u32((uint32x4_t)v251, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v65.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))));
    *(int16x4_t *)v251.i8 = vmovn_s32((int32x4_t)v251);
    *(int16x4_t *)v254.i8 = vmovn_s32((int32x4_t)v254);
    int8x16_t v255 = (int8x16_t)vzip1q_s16(v251, v254);
    int16x8_t v256 = (int16x8_t)vshlq_u32((uint32x4_t)v253, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v253.i8 = vmovn_s32((int32x4_t)v253);
    *(int16x4_t *)v256.i8 = vmovn_s32((int32x4_t)v256);
    int8x16_t v257 = (int8x16_t)vzip1q_s16(v253, v256);
    int8x16_t v258 = (int8x16_t)vshlq_u16((uint16x8_t)v255, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))));
    int8x16_t v259 = (int8x16_t)vshlq_u16((uint16x8_t)v257, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v297.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v297, v297, 8uLL)))));
    *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
    *(int8x8_t *)v258.i8 = vmovn_s16((int16x8_t)v258);
    *(int8x8_t *)v257.i8 = vmovn_s16((int16x8_t)v257);
    *(int8x8_t *)v259.i8 = vmovn_s16((int16x8_t)v259);
    int8x16_t v260 = vzip1q_s8(v255, v258);
    v258.i64[0] = 0x808080808080808;
    v258.i64[1] = 0x808080808080808;
    int8x16_t v261 = vzip1q_s8(v257, v259);
    v259.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v259.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v262 = vshlq_s8(vshlq_s8(v260, vsubq_s8(v258, v64)), vaddq_s8(v64, v259));
    int8x16_t v263 = vshlq_s8(vshlq_s8(v261, vsubq_s8(v258, v297)), vaddq_s8(v297, v259));
    v264.i64[0] = 0x101010101010101;
    v264.i64[1] = 0x101010101010101;
    int8x16_t v265 = vandq_s8(v289, v203);
    int8x16_t v266 = vsubq_s8(vaddq_s8(vandq_s8(v200, v289), v262), v265);
    int8x16_t v267 = vsubq_s8(v263, v265);
    if (vaddlvq_s8(vceqq_s8(v290, v264)))
    {
      int8x16_t v268 = vnegq_s8(vandq_s8(v296, v264));
      int8x16_t v269 = v267;
      v269.i32[3] = v266.i32[0];
      int8x16_t v270 = v266;
      v270.i32[0] = v267.i32[3];
      v304.val[0] = vbslq_s8(v268, v270, v266);
      v304.val[1] = vbslq_s8(v268, v269, v267);
      v271.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v271.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v305.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v304, (int8x16_t)xmmword_242EA7570), v268), v304.val[0]);
      v305.val[1] = vaddq_s8(v304.val[1], vandq_s8(vqtbl2q_s8(v304, v271), v268));
      int8x16_t v266 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, (int8x16_t)xmmword_242EA7580), v268), v305.val[0]);
      int8x16_t v267 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, v271), v268), v305.val[1]);
      v305.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA7590), v268), v205);
      v305.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v205.i8, (int8x16_t)xmmword_242EA75A0), v268), v206);
      int8x16_t v205 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, (int8x16_t)xmmword_242EA75B0), v268), v305.val[0]);
      int8x16_t v206 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, v271), v268), v305.val[1]);
      v305.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA75C0), v268), v235);
      v305.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v235.i8, (int8x16_t)xmmword_242EA7570), v268), v236);
      int8x16_t v235 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, v271), v268), v305.val[0]);
      int8x16_t v236 = vaddq_s8(vandq_s8(vqtbl2q_s8(v305, (int8x16_t)xmmword_242EA75D0), v268), v305.val[1]);
      v304.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA75E0), v268), v248);
      v304.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v248.i8, (int8x16_t)xmmword_242EA7570), v268), v249);
      int8x16_t v248 = vaddq_s8(vandq_s8(vqtbl2q_s8(v304, v271), v268), v304.val[0]);
      int8x16_t v249 = vaddq_s8(vandq_s8(vqtbl2q_s8(v304, (int8x16_t)xmmword_242EA75F0), v268), v304.val[1]);
    }
    int8x16_t v272 = vaddq_s8(v295, v266);
    int8x16_t v273 = vaddq_s8(v267, v295);
    int8x16_t v274 = vaddq_s8(v205, v295);
    int8x16_t v275 = vaddq_s8(v206, v295);
    int8x16_t v276 = vaddq_s8(v235, v295);
    int8x16_t v277 = vaddq_s8(v236, v295);
    int8x16_t v278 = vaddq_s8(v248, v295);
    int8x16_t v279 = vaddq_s8(v249, v295);
    v280.i64[0] = 0x1010101010101010;
    v280.i64[1] = 0x1010101010101010;
    int8x16_t v281 = vtstq_s8(v296, v280);
    if ((v296.i8[1] & 0x10) != 0)
    {
      v281.i8[1] = v281.i8[2];
      v281.i8[2] = 0;
      int8x16_t v281 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v281.i8, 0);
      int8x16_t v282 = (int8x16_t)xmmword_242EA7610;
    }
    else
    {
      int8x16_t v282 = (int8x16_t)xmmword_242EA7600;
    }
    int16x8_t v283 = (int8x16_t *)((char *)a1 + a2);
    *a1 = vaddq_s8(vandq_s8(vqtbl1q_s8(v272, v282), v281), v272);
    a1[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v274, v282), v281), v274);
    int8x16_t v284 = (int8x16_t *)((char *)a1 + 2 * a2);
    *int16x8_t v283 = vaddq_s8(vandq_s8(vqtbl1q_s8(v273, v282), v281), v273);
    v283[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v275, v282), v281), v275);
    *int8x16_t v284 = vaddq_s8(vandq_s8(vqtbl1q_s8(v276, v282), v281), v276);
    v284[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v278, v282), v281), v278);
    int16x8_t v285 = (int8x16_t *)((char *)v284 + a2);
    *int16x8_t v285 = vaddq_s8(vandq_s8(vqtbl1q_s8(v277, v282), v281), v277);
    v285[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v279, v282), v281), v279);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(_OWORD *a1, uint64_t a2, unint64_t a3, char a4, int a5)
{
  uint64_t v86 = *MEMORY[0x263EF8340];
  if (a4) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v78, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v78, a5);
  }
  int32x4_t v76 = v79;
  int32x4_t v77 = v78;
  int32x4_t v74 = v81;
  int32x4_t v75 = v80;
  int32x4_t v72 = v83;
  int32x4_t v73 = v82;
  unint64_t v17 = a3 + 16;
  int32x4_t v70 = v85;
  int32x4_t v71 = v84;
  if ((a4 & 2) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v17, (uint64_t)&v78, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v17, (uint64_t)&v78, a5);
  }
  int32x4_t v68 = v79;
  int32x4_t v69 = v78;
  int32x4_t v66 = v81;
  int32x4_t v67 = v80;
  int32x4_t v64 = v83;
  int32x4_t v65 = v82;
  unint64_t v18 = a3 + 32;
  int32x4_t v62 = v85;
  int32x4_t v63 = v84;
  if ((a4 & 4) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v18, (uint64_t)&v78, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v18, (uint64_t)&v78, a5);
  }
  int32x4_t v60 = v79;
  int32x4_t v61 = v78;
  int32x4_t v58 = v81;
  int32x4_t v59 = v80;
  int32x4_t v56 = v83;
  int32x4_t v57 = v82;
  unint64_t v19 = a3 + 48;
  int32x4_t v54 = v85;
  int32x4_t v55 = v84;
  if ((a4 & 8) != 0) {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v19, (uint64_t)&v78, a5);
  }
  else {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v19, (uint64_t)&v78, a5);
  }
  v39.i64[1] = v54.i64[1];
  v40.i64[1] = v55.i64[1];
  *(int16x4_t *)v39.i8 = vmovn_s32(v54);
  *(int16x4_t *)v40.i8 = vmovn_s32(v55);
  v41.i64[1] = v56.i64[1];
  v42.i64[1] = v57.i64[1];
  *(int16x4_t *)v41.i8 = vmovn_s32(v56);
  *(int16x4_t *)v42.i8 = vmovn_s32(v57);
  *(int16x4_t *)v22.i8 = vmovn_s32(v58);
  *(int16x4_t *)v23.i8 = vmovn_s32(v59);
  *(int16x4_t *)v26.i8 = vmovn_s32(v60);
  *(int16x4_t *)v29.i8 = vmovn_s32(v61);
  *(int16x4_t *)v31.i8 = vmovn_s32(v62);
  *(int16x4_t *)v32.i8 = vmovn_s32(v63);
  *(int16x4_t *)v33.i8 = vmovn_s32(v64);
  *(int16x4_t *)v34.i8 = vmovn_s32(v65);
  *(int16x4_t *)v38.i8 = vmovn_s32(v66);
  *(int16x4_t *)v25.i8 = vmovn_s32(v67);
  *(int16x4_t *)v5.i8 = vmovn_s32(v68);
  *(int16x4_t *)v6.i8 = vmovn_s32(v69);
  *(int16x4_t *)v35.i8 = vmovn_s32(v70);
  *(int16x4_t *)v36.i8 = vmovn_s32(v71);
  *(int16x4_t *)v37.i8 = vmovn_s32(v72);
  *(int16x4_t *)v7.i8 = vmovn_s32(v73);
  *(int16x4_t *)v8.i8 = vmovn_s32(v74);
  *(int16x4_t *)v9.i8 = vmovn_s32(v75);
  *(int16x4_t *)v10.i8 = vmovn_s32(v76);
  *(int16x4_t *)v11.i8 = vmovn_s32(v77);
  *(int16x4_t *)v30.i8 = vmovn_s32(v78);
  *(int16x4_t *)v28.i8 = vmovn_s32(v79);
  *(int16x4_t *)v27.i8 = vmovn_s32(v80);
  *(int16x4_t *)v24.i8 = vmovn_s32(v81);
  v43.i64[1] = v83.i64[1];
  *(int16x4_t *)v21.i8 = vmovn_s32(v82);
  *(int16x4_t *)v43.i8 = vmovn_s32(v83);
  v44.i64[1] = v84.i64[1];
  *(int16x4_t *)v44.i8 = vmovn_s32(v84);
  LODWORD(v45) = vmovn_s16(v11).u32[0];
  DWORD1(v45) = vmovn_s16(v10).u32[0];
  DWORD2(v45) = vmovn_s16(v9).u32[0];
  HIDWORD(v45) = vmovn_s16(v8).u32[0];
  LODWORD(v46) = vmovn_s16(v6).u32[0];
  DWORD1(v46) = vmovn_s16(v5).u32[0];
  DWORD2(v46) = vmovn_s16(v25).u32[0];
  *(int16x4_t *)v25.i8 = vmovn_s32(v85);
  HIDWORD(v46) = vmovn_s16(v38).u32[0];
  *a1 = v45;
  a1[1] = v46;
  int8x16_t v47 = (_OWORD *)((char *)a1 + a2);
  LODWORD(v48) = vmovn_s16(v7).u32[0];
  DWORD1(v48) = vmovn_s16(v37).u32[0];
  DWORD2(v48) = vmovn_s16(v36).u32[0];
  HIDWORD(v48) = vmovn_s16(v35).u32[0];
  LODWORD(v49) = vmovn_s16(v34).u32[0];
  DWORD1(v49) = vmovn_s16(v33).u32[0];
  DWORD2(v49) = vmovn_s16(v32).u32[0];
  HIDWORD(v49) = vmovn_s16(v31).u32[0];
  *int8x16_t v47 = v48;
  v47[1] = v49;
  LODWORD(v50) = vmovn_s16(v29).u32[0];
  DWORD1(v50) = vmovn_s16(v26).u32[0];
  DWORD2(v50) = vmovn_s16(v23).u32[0];
  unint64_t v51 = (_OWORD *)((char *)a1 + a2 + a2);
  HIDWORD(v50) = vmovn_s16(v22).u32[0];
  LODWORD(v52) = vmovn_s16(v30).u32[0];
  DWORD1(v52) = vmovn_s16(v28).u32[0];
  DWORD2(v52) = vmovn_s16(v27).u32[0];
  HIDWORD(v52) = vmovn_s16(v24).u32[0];
  *unint64_t v51 = v50;
  v51[1] = v52;
  v42.i32[0] = vmovn_s16(v42).u32[0];
  v42.i32[1] = vmovn_s16(v41).u32[0];
  v42.i32[2] = vmovn_s16(v40).u32[0];
  v42.i32[3] = vmovn_s16(v39).u32[0];
  v39.i32[0] = vmovn_s16(v21).u32[0];
  v39.i32[1] = vmovn_s16(v43).u32[0];
  v39.i32[2] = vmovn_s16(v44).u32[0];
  v39.i32[3] = vmovn_s16(v25).u32[0];
  int64x2_t v53 = (int16x8_t *)((char *)v51 + a2);
  *int64x2_t v53 = v42;
  v53[1] = v39;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v11 = a3;
  uint64_t v13 = result;
  if (a5 >= 4) {
    unsigned int v14 = 4;
  }
  else {
    unsigned int v14 = a5;
  }
  if (a6 >= 4) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = a6;
  }
  if (v14 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, result, a2, v14, v15, a7);
    v11 += result;
  }
  else
  {
    *a4 = 0;
  }
  unint64_t v16 = a4 + 1;
  if (a5 <= 4) {
    int v17 = 4;
  }
  else {
    int v17 = a5;
  }
  unsigned int v18 = v17 - 4;
  if (v18 >= 4) {
    int v19 = 4;
  }
  else {
    int v19 = v18;
  }
  if (v19) {
    BOOL v20 = v15 == 0;
  }
  else {
    BOOL v20 = 1;
  }
  if (v20)
  {
    *unint64_t v16 = 0;
  }
  else
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v16, v13 + 32, a2, v19, v15, a7);
    v11 += result;
  }
  uint64_t v36 = 4 * a2;
  int16x8_t v21 = a4 + 2;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v14 && v24)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v21, v13 + v36, a2, v14, v24, a7);
    v11 += result;
    int16x8_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  else
  {
    *int16x8_t v21 = 0;
    int16x8_t v25 = a4 + 3;
    if (!v19) {
      goto LABEL_36;
    }
  }
  if (v24)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v25, v13 + v36 + 32, a2, v19, v24, a7);
    v11 += result;
    goto LABEL_37;
  }
LABEL_36:
  *int16x8_t v25 = 0;
LABEL_37:
  int16x8_t v26 = a4 + 4;
  if (a5 <= 8) {
    int v27 = 8;
  }
  else {
    int v27 = a5;
  }
  unsigned int v28 = v27 - 8;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v29 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v26, v13 + 64, a2, v29, v15, a7);
    v11 += result;
  }
  else
  {
    *int16x8_t v26 = 0;
  }
  int16x8_t v30 = a4 + 5;
  if (a5 <= 12) {
    int v31 = 12;
  }
  else {
    int v31 = a5;
  }
  unsigned int v32 = v31 - 12;
  if (v32 >= 4) {
    int v33 = 4;
  }
  else {
    int v33 = v32;
  }
  if (v33 && v15)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v30, v13 + 96, a2, v33, v15, a7);
    v11 += result;
    int16x8_t v34 = a4 + 6;
    if (!v29) {
      goto LABEL_61;
    }
  }
  else
  {
    *int16x8_t v30 = 0;
    int16x8_t v34 = a4 + 6;
    if (!v29) {
      goto LABEL_61;
    }
  }
  if (v24)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v34, v13 + v36 + 64, a2, v29, v24, a7);
    v11 += result;
    int16x8_t v35 = a4 + 7;
    if (!v33) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *int16x8_t v34 = 0;
  int16x8_t v35 = a4 + 7;
  if (!v33)
  {
LABEL_66:
    *int16x8_t v35 = 0;
    return result;
  }
LABEL_62:
  if (!v24) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v11, v35, v13 + v36 + 96, a2, v33, v24, a7);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int8x16_t v7 = *(int8x16_t *)a3;
  int8x16_t v8 = *(int8x16_t *)(a3 + 16);
  int8x16_t v9 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a3, 0);
  int8x16_t v10 = vsubq_s8(*(int8x16_t *)a3, v9);
  int8x16_t v462 = vsubq_s8(v8, v9);
  int8x16_t v449 = *(int8x16_t *)(a3 + a4);
  int8x16_t v11 = vsubq_s8(v449, v9);
  int8x16_t v451 = *(int8x16_t *)(a3 + a4 + 16);
  int8x16_t v12 = vsubq_s8(v451, v9);
  int8x16_t v452 = *(int8x16_t *)(a3 + 32);
  int8x16_t v13 = vsubq_s8(v452, v9);
  int8x16_t v457 = *(int8x16_t *)(a3 + 48);
  int8x16_t v14 = vsubq_s8(v457, v9);
  int8x16_t v454 = *(int8x16_t *)(a3 + a4 + 32);
  int8x16_t v15 = vsubq_s8(v454, v9);
  int8x16_t v459 = *(int8x16_t *)(a3 + a4 + 48);
  int8x16_t v16 = vsubq_s8(v459, v9);
  int8x16_t v17 = vqtbl1q_s8(vmaxq_s8(v10, v462), (int8x16_t)xmmword_242EA7560);
  int8x16_t v18 = vqtbl1q_s8(vminq_s8(v10, v462), (int8x16_t)xmmword_242EA7560);
  int8x16_t v19 = vpmaxq_s8(v17, v17);
  int8x16_t v20 = vpminq_s8(v18, v18);
  int8x16_t v21 = vpmaxq_s8(v19, v19);
  int8x16_t v22 = vpminq_s8(v20, v20);
  v23.i64[0] = 0x8080808080808080;
  v23.i64[1] = 0x8080808080808080;
  int8x16_t v24 = vmaxq_s8(v21, v23);
  v25.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v25.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  int8x16_t v26 = vminq_s8(v22, v25);
  int8x16_t v27 = vzip1q_s8(v21, v22);
  v28.i64[0] = 0x808080808080808;
  v28.i64[1] = 0x808080808080808;
  int8x16_t v29 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v27)), vceqzq_s8(v27));
  int8x16_t v30 = vqtbl1q_s8(vmaxq_s8(v11, v12), (int8x16_t)xmmword_242EA7560);
  int8x16_t v31 = vqtbl1q_s8(vminq_s8(v11, v12), (int8x16_t)xmmword_242EA7560);
  int8x16_t v32 = vpmaxq_s8(v30, v30);
  int8x16_t v33 = vpminq_s8(v31, v31);
  int8x16_t v34 = vpmaxq_s8(v32, v32);
  int8x16_t v35 = vpminq_s8(v33, v33);
  int8x16_t v36 = vmaxq_s8(v24, v34);
  int8x16_t v37 = vminq_s8(v26, v35);
  int8x16_t v38 = vzip1q_s8(v34, v35);
  int8x16_t v39 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v38)), vceqzq_s8(v38));
  int8x16_t v40 = vqtbl1q_s8(vmaxq_s8(v13, v14), (int8x16_t)xmmword_242EA7560);
  int8x16_t v41 = vqtbl1q_s8(vminq_s8(v13, v14), (int8x16_t)xmmword_242EA7560);
  int8x16_t v42 = vpmaxq_s8(v40, v40);
  int8x16_t v43 = vpminq_s8(v41, v41);
  int8x16_t v44 = vpmaxq_s8(v42, v42);
  int8x16_t v45 = vpminq_s8(v43, v43);
  int8x16_t v46 = vmaxq_s8(v36, v44);
  int8x16_t v47 = vminq_s8(v37, v45);
  int8x16_t v48 = vzip1q_s8(v44, v45);
  int8x16_t v49 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v48)), vceqzq_s8(v48));
  int8x16_t v50 = vqtbl1q_s8(vmaxq_s8(v15, v16), (int8x16_t)xmmword_242EA7560);
  int8x16_t v51 = vqtbl1q_s8(vminq_s8(v15, v16), (int8x16_t)xmmword_242EA7560);
  int8x16_t v52 = vpmaxq_s8(v50, v50);
  int8x16_t v53 = vpminq_s8(v51, v51);
  int8x16_t v54 = vpmaxq_s8(v52, v52);
  int8x16_t v55 = vpminq_s8(v53, v53);
  int8x16_t v56 = vmaxq_s8(v46, v54);
  int8x16_t v57 = vminq_s8(v47, v55);
  int8x16_t v58 = vzip1q_s8(v54, v55);
  int8x16_t v59 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v58)), vceqzq_s8(v58));
  int8x16_t v60 = vpmaxq_s8(v29, v29);
  int8x16_t v61 = vpmaxq_s8(v39, v39);
  int8x16_t v62 = vpmaxq_s8(v49, v49);
  int8x16_t v63 = vpmaxq_s8(v59, v59);
  int8x16_t v64 = vmaxq_s8(vmaxq_s8(v60, v61), vmaxq_s8(v62, v63));
  int8x16_t v65 = vclzq_s8(vsubq_s8(v56, v57));
  v55.i64[0] = 0x707070707070707;
  v55.i64[1] = 0x707070707070707;
  v66.i64[0] = -1;
  v66.i64[1] = -1;
  int8x16_t v67 = vshlq_s8(v66, vsubq_s8(v55, v65));
  int8x16_t v68 = vsubq_s8(v28, v65);
  int8x16_t v69 = vcgtq_s8(v64, v68);
  int8x16_t v70 = vbslq_s8(v69, v68, v64);
  int8x16_t v71 = vandq_s8(vsubq_s8(v67, v57), v69);
  v72.i64[0] = 0x303030303030303;
  v72.i64[1] = 0x303030303030303;
  int8x16_t v73 = vorrq_s8(vandq_s8(vceqzq_s8(v70), v72), vandq_s8(v69, v28));
  int8x16_t v74 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v60), v72), (int8x16_t)0);
  int8x16_t v75 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v61), v72), (int8x16_t)0);
  int8x16_t v76 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v62), v72), (int8x16_t)0);
  int8x16_t v77 = vmaxq_s8(vminq_s8(vsubq_s8(v70, v63), v72), (int8x16_t)0);
  v69.i64[0] = 0x404040404040404;
  v69.i64[1] = 0x404040404040404;
  int8x16_t v78 = vorrq_s8(vbicq_s8(v69, vceqq_s8(vaddq_s8(v77, v76), vnegq_s8(vaddq_s8(v74, v75)))), v73);
  int8x16_t v460 = v10;
  int8x16_t v464 = v11;
  int8x16_t v465 = v12;
  int8x16_t v466 = v13;
  int8x16_t v467 = v14;
  int8x16_t v468 = v15;
  int8x16_t v469 = v16;
  int8x16_t v476 = v70;
  int8x16_t v477 = v57;
  int8x16_t v478 = v56;
  int8x16_t v479 = v71;
  int8x16_t v79 = vsubq_s8(v70, v74);
  int8x16_t v80 = vsubq_s8(v70, v75);
  int8x16_t v472 = v79;
  int8x16_t v473 = v80;
  int8x16_t v81 = vsubq_s8(v70, v76);
  int8x16_t v82 = vsubq_s8(v70, v77);
  int8x16_t v474 = v81;
  int8x16_t v475 = v82;
  int8x16_t v470 = v9;
  int8x16_t v471 = v78;
  if (vmaxvq_s8(v70))
  {
    int8x16_t v445 = v71;
    int8x16_t v446 = v56;
    int8x16_t v447 = v16;
    int8x16_t v448 = v14;
    v437.val[0] = v7;
    v437.val[1] = v8;
    int8x16_t v440 = vsubq_s8(v10, vqtbl1q_s8(v10, (int8x16_t)xmmword_242EA7600));
    int8x16_t v83 = vsubq_s8(v11, vqtbl1q_s8(v11, (int8x16_t)xmmword_242EA7600));
    int8x16_t v84 = vsubq_s8(v465, vqtbl1q_s8(v465, (int8x16_t)xmmword_242EA7600));
    int8x16_t v439 = vsubq_s8(v462, vqtbl1q_s8(v462, (int8x16_t)xmmword_242EA7600));
    int8x16_t v85 = vqtbl1q_s8(vmaxq_s8(v440, v439), (int8x16_t)xmmword_242EA7560);
    int8x16_t v86 = vqtbl1q_s8(vminq_s8(v440, v439), (int8x16_t)xmmword_242EA7560);
    int8x16_t v87 = vpmaxq_s8(v85, v85);
    int8x16_t v88 = vpminq_s8(v86, v86);
    int8x16_t v89 = vpmaxq_s8(v87, v87);
    int8x16_t v90 = vpminq_s8(v88, v88);
    int8x16_t v91 = vmaxq_s8(v89, v23);
    int8x16_t v92 = vminq_s8(v90, v25);
    int8x16_t v93 = vzip1q_s8(v89, v90);
    int8x16_t v94 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v93)), vceqzq_s8(v93));
    int8x16_t v95 = vpmaxq_s8(v94, v94);
    int8x16_t v96 = vqtbl1q_s8(vmaxq_s8(v83, v84), (int8x16_t)xmmword_242EA7560);
    int8x16_t v97 = vqtbl1q_s8(vminq_s8(v83, v84), (int8x16_t)xmmword_242EA7560);
    int8x16_t v98 = vpmaxq_s8(v96, v96);
    int8x16_t v99 = vpminq_s8(v97, v97);
    int8x16_t v100 = vpmaxq_s8(v98, v98);
    int8x16_t v101 = vpminq_s8(v99, v99);
    int8x16_t v102 = vmaxq_s8(v91, v100);
    int8x16_t v103 = vminq_s8(v92, v101);
    int8x16_t v104 = vzip1q_s8(v100, v101);
    int8x16_t v105 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v104)), vceqzq_s8(v104));
    int8x16_t v106 = vpmaxq_s8(v105, v105);
    int8x16_t v441 = vsubq_s8(v13, vqtbl1q_s8(v13, (int8x16_t)xmmword_242EA7600));
    int8x16_t v442 = vsubq_s8(v467, vqtbl1q_s8(v467, (int8x16_t)xmmword_242EA7600));
    int8x16_t v107 = vqtbl1q_s8(vmaxq_s8(v441, v442), (int8x16_t)xmmword_242EA7560);
    int8x16_t v108 = vqtbl1q_s8(vminq_s8(v441, v442), (int8x16_t)xmmword_242EA7560);
    int8x16_t v109 = vpmaxq_s8(v107, v107);
    int8x16_t v110 = vpminq_s8(v108, v108);
    int8x16_t v111 = vpmaxq_s8(v109, v109);
    int8x16_t v112 = vpminq_s8(v110, v110);
    int8x16_t v113 = vmaxq_s8(v102, v111);
    int8x16_t v114 = vminq_s8(v103, v112);
    int8x16_t v115 = vzip1q_s8(v111, v112);
    int8x16_t v116 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v115)), vceqzq_s8(v115));
    int8x16_t v117 = vpmaxq_s8(v116, v116);
    int8x16_t v443 = vsubq_s8(v15, vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA7600));
    int8x16_t v444 = vsubq_s8(v469, vqtbl1q_s8(v469, (int8x16_t)xmmword_242EA7600));
    int8x16_t v118 = vqtbl1q_s8(vmaxq_s8(v443, v444), (int8x16_t)xmmword_242EA7560);
    int8x16_t v119 = vqtbl1q_s8(vminq_s8(v443, v444), (int8x16_t)xmmword_242EA7560);
    int8x16_t v120 = vpmaxq_s8(v118, v118);
    int8x16_t v121 = vpminq_s8(v119, v119);
    int8x16_t v122 = vpmaxq_s8(v120, v120);
    int8x16_t v123 = vpminq_s8(v121, v121);
    int8x16_t v124 = vmaxq_s8(v113, v122);
    int8x16_t v125 = vminq_s8(v114, v123);
    int8x16_t v126 = vzip1q_s8(v122, v123);
    int8x16_t v127 = vbicq_s8(vsubq_s8(v28, vclsq_s8(v126)), vceqzq_s8(v126));
    int8x16_t v128 = vpmaxq_s8(v127, v127);
    int8x16_t v129 = vmaxq_s8(vmaxq_s8(v95, v106), vmaxq_s8(v117, v128));
    int8x16_t v438 = v124;
    int8x16_t v130 = vclzq_s8(vsubq_s8(v124, v125));
    int8x16_t v131 = vsubq_s8(v28, v130);
    int8x16_t v132 = vcgtq_s8(v129, v131);
    int8x16_t v133 = vbslq_s8(v132, v131, v129);
    v129.i64[0] = 0x1010101010101010;
    v129.i64[1] = 0x1010101010101010;
    v134.i64[0] = 0x1818181818181818;
    v134.i64[1] = 0x1818181818181818;
    int8x16_t v135 = vorrq_s8(vandq_s8(vceqzq_s8(v133), v72), vbslq_s8(v132, v134, v129));
    int8x16_t v136 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v95), v72), (int8x16_t)0);
    int8x16_t v137 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v106), v72), (int8x16_t)0);
    int8x16_t v138 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v117), v72), (int8x16_t)0);
    int8x16_t v139 = vmaxq_s8(vminq_s8(vsubq_s8(v133, v128), v72), (int8x16_t)0);
    int8x16_t v140 = vsubq_s8(v133, v136);
    int8x16_t v141 = vsubq_s8(v133, v137);
    int8x16_t v142 = vsubq_s8(v133, v138);
    int8x16_t v143 = vsubq_s8(v133, v139);
    v124.i64[0] = 0x404040404040404;
    v124.i64[1] = 0x404040404040404;
    int8x16_t v144 = vorrq_s8(v135, vbicq_s8(v124, vceqq_s8(vaddq_s8(v139, v138), vnegq_s8(vaddq_s8(v136, v137)))));
    uint16x8_t v145 = vmovl_u8(*(uint8x8_t *)v144.i8);
    v138.i64[0] = 0x8000800080008;
    v138.i64[1] = 0x8000800080008;
    v135.i64[0] = 0x2000200020002;
    v135.i64[1] = 0x2000200020002;
    int8x16_t v146 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vaddq_s16(vaddw_s8(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v81.i8, *(int8x8_t *)v80.i8), *(int8x8_t *)v82.i8), 3uLL), *(int8x8_t *)v79.i8, (int8x8_t)0x707070707070707), vbic_s8(*(int8x8_t *)v70.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v78.i8))),
                                                                (int16x8_t)(*(_OWORD *)&vshll_n_u8(*(uint8x8_t *)v78.i8, 1uLL) & __PAIR128__(0xFFE9FFE9FFE9FFE9, 0xFFE9FFE9FFE9FFE9))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v78.i8) & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), (int16x8_t)v135), v138)), vaddq_s16(vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v142.i8, *(int8x8_t *)v141.i8), *(int8x8_t *)v143.i8),
                                                                      3uLL),
                                                                    *(int8x8_t *)v140.i8,
                                                                    (int8x8_t)0x707070707070707),
                                                                  (int16x8_t)vandq_s8((int8x16_t)vshll_n_u8(*(uint8x8_t *)v144.i8, 1uLL), v138)), (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v133.i8), (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v145 & __PAIR128__(0xFFE8FFE8FFE8FFE8, 0xFFE8FFE8FFE8FFE8))))), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v145 & __PAIR128__(0xFFE3FFE3FFE3FFE3, 0xFFE3FFE3FFE3FFE3)), (int16x8_t)v135), v138)))), 0);
    if (vaddlvq_s8(v146))
    {
      int8x16_t v460 = vbslq_s8(v146, v440, v10);
      int8x16_t v462 = vbslq_s8(v146, v439, v462);
      int8x16_t v147 = vbslq_s8(v146, v83, v11);
      v148.i64[0] = 0x707070707070707;
      v148.i64[1] = 0x707070707070707;
      int8x16_t v464 = v147;
      int8x16_t v465 = vbslq_s8(v146, v84, v12);
      v147.i64[0] = -1;
      v147.i64[1] = -1;
      int8x16_t v466 = vbslq_s8(v146, v441, v13);
      int8x16_t v467 = vbslq_s8(v146, v442, v448);
      int8x16_t v468 = vbslq_s8(v146, v443, v15);
      int8x16_t v469 = vbslq_s8(v146, v444, v447);
      int8x16_t v472 = vbslq_s8(v146, v140, v79);
      int8x16_t v473 = vbslq_s8(v146, v141, v80);
      int8x16_t v474 = vbslq_s8(v146, v142, v81);
      int8x16_t v475 = vbslq_s8(v146, v143, v82);
      int8x16_t v478 = vbslq_s8(v146, v438, v446);
      int8x16_t v479 = vbslq_s8(v146, vandq_s8(vsubq_s8(vshlq_s8(v147, vsubq_s8(v148, v130)), v125), v132), v445);
      int8x16_t v476 = vbslq_s8(v146, v133, v70);
      int8x16_t v477 = vbslq_s8(v146, v125, v57);
      int8x16_t v470 = vbslq_s8(v146, vsubq_s8(v9, vqtbl1q_s8(v9, (int8x16_t)xmmword_242EA7600)), v9);
      int8x16_t v471 = vbslq_s8(v146, v144, v78);
    }
    if (a5 > 1)
    {
      int8x16_t v174 = vsubq_s8(v437.val[0], vqtbl2q_s8(v437, (int8x16_t)xmmword_242EA7570));
      int8x16_t v165 = vsubq_s8(v437.val[1], vqtbl2q_s8(v437, (int8x16_t)xmmword_242EA7620));
      v480.val[0] = v449;
      v480.val[1] = v451;
      v480.val[1].i32[3] = v437.val[1].i32[3];
      int8x16_t v166 = vsubq_s8(v449, vqtbl2q_s8(v480, (int8x16_t)xmmword_242EA7590));
      int8x16_t v167 = vsubq_s8(v451, vqtbl2q_s8(v480, (int8x16_t)xmmword_242EA7630));
      v480.val[0] = v452;
      v480.val[1] = v457;
      v480.val[1].i32[3] = v437.val[1].i32[3];
      int8x16_t v168 = vsubq_s8(v452, vqtbl2q_s8(v480, (int8x16_t)xmmword_242EA7640));
      int8x16_t v169 = vsubq_s8(v457, vqtbl2q_s8(v480, (int8x16_t)xmmword_242EA7570));
      v480.val[0] = v454;
      v480.val[1] = v459;
      v480.val[1].i32[3] = v437.val[1].i32[3];
      int8x16_t v170 = vqtbl2q_s8(v480, (int8x16_t)xmmword_242EA7570);
      int8x16_t v171 = vsubq_s8(v454, vqtbl2q_s8(v480, (int8x16_t)xmmword_242EA7650));
      int8x16_t v172 = vsubq_s8(v459, v170);
      int8x16_t v173 = v165;
      v173.i32[3] = v174.i32[0];
      v174.i32[0] = v165.i32[3];
      int8x16_t v175 = vqtbl1q_s8(vmaxq_s8(v174, v173), (int8x16_t)xmmword_242EA7560);
      int8x16_t v176 = vqtbl1q_s8(vminq_s8(v174, v173), (int8x16_t)xmmword_242EA7560);
      int8x16_t v177 = vpmaxq_s8(v175, v175);
      int8x16_t v178 = vpminq_s8(v176, v176);
      int8x16_t v179 = vpmaxq_s8(v177, v177);
      int8x16_t v180 = vpminq_s8(v178, v178);
      v181.i64[0] = 0x8080808080808080;
      v181.i64[1] = 0x8080808080808080;
      v182.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v182.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      int8x16_t v183 = vminq_s8(v180, v182);
      int8x16_t v184 = vzip1q_s8(v179, v180);
      v185.i64[0] = 0x808080808080808;
      v185.i64[1] = 0x808080808080808;
      int8x16_t v186 = vbicq_s8(vsubq_s8(v185, vclsq_s8(v184)), vceqzq_s8(v184));
      int8x16_t v187 = vpmaxq_s8(v186, v186);
      int8x16_t v458 = v167;
      v480.val[1] = vqtbl1q_s8(vmaxq_s8(v166, v167), (int8x16_t)xmmword_242EA7560);
      int8x16_t v188 = vqtbl1q_s8(vminq_s8(v166, v167), (int8x16_t)xmmword_242EA7560);
      v480.val[1] = vpmaxq_s8(v480.val[1], v480.val[1]);
      int8x16_t v189 = vpminq_s8(v188, v188);
      v480.val[1] = vpmaxq_s8(v480.val[1], v480.val[1]);
      int8x16_t v190 = vpminq_s8(v189, v189);
      int8x16_t v191 = vmaxq_s8(vmaxq_s8(v179, v181), v480.val[1]);
      int8x16_t v192 = vminq_s8(v183, v190);
      v480.val[1] = vzip1q_s8(v480.val[1], v190);
      v480.val[1] = vbicq_s8(vsubq_s8(v185, vclsq_s8(v480.val[1])), vceqzq_s8(v480.val[1]));
      v480.val[1] = vpmaxq_s8(v480.val[1], v480.val[1]);
      int8x16_t v456 = v168;
      int8x16_t v455 = v169;
      int8x16_t v193 = vqtbl1q_s8(vmaxq_s8(v168, v169), (int8x16_t)xmmword_242EA7560);
      int8x16_t v194 = vqtbl1q_s8(vminq_s8(v168, v169), (int8x16_t)xmmword_242EA7560);
      int8x16_t v195 = vpmaxq_s8(v193, v193);
      int8x16_t v196 = vpminq_s8(v194, v194);
      int8x16_t v197 = vpmaxq_s8(v195, v195);
      int8x16_t v198 = vpminq_s8(v196, v196);
      int8x16_t v199 = vmaxq_s8(v191, v197);
      int8x16_t v200 = vminq_s8(v192, v198);
      int8x16_t v201 = vzip1q_s8(v197, v198);
      int8x16_t v202 = vbicq_s8(vsubq_s8(v185, vclsq_s8(v201)), vceqzq_s8(v201));
      int8x16_t v203 = vpmaxq_s8(v202, v202);
      int8x16_t v204 = vqtbl1q_s8(vmaxq_s8(v171, v172), (int8x16_t)xmmword_242EA7560);
      int8x16_t v205 = vqtbl1q_s8(vminq_s8(v171, v172), (int8x16_t)xmmword_242EA7560);
      int8x16_t v206 = vpmaxq_s8(v204, v204);
      int8x16_t v207 = vpminq_s8(v205, v205);
      int8x16_t v208 = vpmaxq_s8(v206, v206);
      int8x16_t v209 = vpminq_s8(v207, v207);
      int8x16_t v210 = vmaxq_s8(v199, v208);
      int8x16_t v211 = vminq_s8(v200, v209);
      int8x16_t v212 = vzip1q_s8(v208, v209);
      int8x16_t v213 = vbicq_s8(vsubq_s8(v185, vclsq_s8(v212)), vceqzq_s8(v212));
      int8x16_t v162 = vpmaxq_s8(v213, v213);
      int8x16_t v214 = vmaxq_s8(vmaxq_s8(v187, v480.val[1]), vmaxq_s8(v203, v162));
      int8x16_t v215 = vclzq_s8(vsubq_s8(v210, v211));
      int8x16_t v216 = vsubq_s8(v185, v215);
      int8x16_t v217 = vcgtq_s8(v214, v216);
      int8x16_t v218 = vbslq_s8(v217, v216, v214);
      v214.i64[0] = 0x909090909090909;
      v214.i64[1] = 0x909090909090909;
      v185.i64[0] = 0x202020202020202;
      v185.i64[1] = 0x202020202020202;
      int8x16_t v219 = vorrq_s8(vandq_s8(vceqzq_s8(v218), v185), vsubq_s8(vandq_s8(v217, v214), vmvnq_s8(v217)));
      v216.i64[0] = 0x303030303030303;
      v216.i64[1] = 0x303030303030303;
      int8x16_t v220 = vmaxq_s8(vminq_s8(vsubq_s8(v218, v187), v216), (int8x16_t)0);
      v480.val[1] = vmaxq_s8(vminq_s8(vsubq_s8(v218, v480.val[1]), v216), (int8x16_t)0);
      int8x16_t v221 = vmaxq_s8(vminq_s8(vsubq_s8(v218, v203), v216), (int8x16_t)0);
      int8x16_t v222 = vmaxq_s8(vminq_s8(vsubq_s8(v218, v162), v216), (int8x16_t)0);
      int8x16_t v223 = vsubq_s8(v218, v220);
      int8x16_t v224 = vsubq_s8(v218, v221);
      int8x16_t v225 = vsubq_s8(v218, v222);
      int8x16_t v226 = vceqq_s8(vaddq_s8(v222, v221), vnegq_s8(vaddq_s8(v220, v480.val[1])));
      v220.i64[0] = 0x404040404040404;
      v220.i64[1] = 0x404040404040404;
      int8x16_t v227 = vorrq_s8(v219, vbicq_s8(v220, v226));
      int8x16_t v453 = vsubq_s8(v218, v480.val[1]);
      v203.i64[0] = 0x3000300030003;
      v203.i64[1] = 0x3000300030003;
      v162.i64[0] = v471.i64[0];
      int8x16_t v163 = v472;
      int8x16_t v228 = (int8x16_t)vmovl_s8(*(int8x8_t *)v471.i8);
      v169.i64[0] = 0x8000800080008;
      v169.i64[1] = 0x8000800080008;
      int8x16_t v152 = v475;
      int8x16_t v151 = v476;
      int16x8_t v229 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v476.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v228, v169)));
      int16x8_t v230 = (int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v471.i8, 1uLL), v169);
      int16x8_t v231 = (int16x8_t)vandq_s8(v228, v203);
      v203.i64[0] = 0x2000200020002;
      v203.i64[1] = 0x2000200020002;
      int16x8_t v232 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v231, (int16x8_t)v203), v169);
      int8x16_t v149 = v473;
      int8x16_t v150 = v474;
      int8x16_t v233 = (int8x16_t)vdupq_lane_s32((int32x2_t)vqmovn_u16((uint16x8_t)vcgtq_s16(vaddq_s16(vmlal_s8(vaddq_s16(vaddq_s16(v229, v230), v232), *(int8x8_t *)v472.i8, (int8x8_t)0x707070707070707), vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v474.i8, *(int8x8_t *)v473.i8), *(int8x8_t *)v475.i8), 3uLL)), vaddw_s8((int16x8_t)vaddw_u8((uint16x8_t)vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v224.i8, *(int8x8_t *)v453.i8),
                                                                                               *(int8x8_t *)v225.i8),
                                                                                             3uLL),
                                                                                           *(int8x8_t *)v223.i8,
                                                                                           (int8x8_t)0x707070707070707),
                                                                             (uint8x8_t)vand_s8(vadd_s8(*(int8x8_t *)v227.i8, *(int8x8_t *)v227.i8), (int8x8_t)0x808080808080808)), vbic_s8(*(int8x8_t *)v218.i8, (int8x8_t)vcgt_u8((uint8x8_t)0x808080808080808, *(uint8x8_t *)v227.i8))))), 0);
      int8x16_t v153 = v479;
      int8x16_t v155 = v460;
      int8x16_t v154 = v462;
      int8x16_t v156 = v464;
      int8x16_t v157 = v465;
      int8x16_t v159 = v466;
      int8x16_t v158 = v467;
      int8x16_t v161 = v468;
      int8x16_t v160 = v469;
      if (vaddlvq_s8(v233))
      {
        int8x16_t v450 = v225;
        int8x16_t v234 = v210;
        int8x16_t v235 = v172;
        int8x16_t v236 = v171;
        v237.i64[0] = 0x707070707070707;
        v237.i64[1] = 0x707070707070707;
        int8x16_t v238 = vsubq_s8(v237, v215);
        v239.i64[0] = -1;
        v239.i64[1] = -1;
        int8x16_t v155 = vbslq_s8(v233, v174, v460);
        int8x16_t v154 = vbslq_s8(v233, v173, v462);
        int8x16_t v156 = vbslq_s8(v233, v166, v464);
        int8x16_t v157 = vbslq_s8(v233, v458, v465);
        int8x16_t v159 = vbslq_s8(v233, v456, v466);
        int8x16_t v158 = vbslq_s8(v233, v455, v467);
        int8x16_t v161 = vbslq_s8(v233, v236, v468);
        int8x16_t v160 = vbslq_s8(v233, v235, v469);
        int8x16_t v163 = vbslq_s8(v233, v223, v472);
        int8x16_t v149 = vbslq_s8(v233, v453, v473);
        int8x16_t v150 = vbslq_s8(v233, v224, v474);
        int8x16_t v152 = vbslq_s8(v233, v450, v475);
        int8x16_t v153 = vbslq_s8(v233, vandq_s8(vsubq_s8(vshlq_s8(v239, v238), v211), v217), v479);
        int8x16_t v151 = vbslq_s8(v233, v218, v476);
        int8x16_t v162 = vbslq_s8(v233, v227, v471);
        int8x16_t v470 = vbslq_s8(v233, vextq_s8(v437.val[1], v437.val[1], 0xCuLL), v470);
        int8x16_t v471 = v162;
        int8x16_t v477 = vbslq_s8(v233, v211, v477);
        int8x16_t v478 = vbslq_s8(v233, v234, v478);
        int8x16_t v472 = v163;
        int8x16_t v473 = v149;
        int8x16_t v474 = v150;
        int8x16_t v475 = v152;
        int8x16_t v479 = v153;
        int8x16_t v476 = v151;
      }
    }
    else
    {
      int8x16_t v149 = v473;
      int8x16_t v150 = v474;
      int8x16_t v152 = v475;
      int8x16_t v151 = v476;
      int8x16_t v153 = v479;
      int8x16_t v155 = v460;
      int8x16_t v154 = v462;
      int8x16_t v156 = v464;
      int8x16_t v157 = v465;
      int8x16_t v159 = v466;
      int8x16_t v158 = v467;
      int8x16_t v161 = v468;
      int8x16_t v160 = v469;
      v162.i64[0] = v471.i64[0];
      int8x16_t v163 = v472;
    }
    int8x16_t v240 = vandq_s8(v153, vceqq_s8(v151, v163));
    int8x16_t v461 = vaddq_s8(v240, v155);
    int8x16_t v463 = vaddq_s8(v154, v240);
    int8x16_t v241 = vandq_s8(v153, vceqq_s8(v151, v149));
    int8x16_t v464 = vaddq_s8(v156, v241);
    int8x16_t v465 = vaddq_s8(v157, v241);
    int8x16_t v242 = vandq_s8(v153, vceqq_s8(v151, v150));
    int8x16_t v466 = vaddq_s8(v159, v242);
    int8x16_t v467 = vaddq_s8(v158, v242);
    int8x16_t v243 = vandq_s8(v153, vceqq_s8(v151, v152));
    int8x16_t v468 = vaddq_s8(v161, v243);
    int8x16_t v469 = vaddq_s8(v160, v243);
    int8x16_t v244 = (int8x16_t)vmovl_s8(*(int8x8_t *)v162.i8);
    v245.i64[0] = 0x8000800080008;
    v245.i64[1] = 0x8000800080008;
    int16x8_t v246 = (int16x8_t)vbicq_s8((int8x16_t)vmovl_s8(*(int8x8_t *)v151.i8), (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v244, v245)));
    v247.i64[0] = 0x3000300030003;
    v247.i64[1] = 0x3000300030003;
    int16x8_t v248 = (int16x8_t)vandq_s8(v244, v247);
    v247.i64[0] = 0x2000200020002;
    v247.i64[1] = 0x2000200020002;
    int16x8_t v249 = vaddq_s16(vaddq_s16(vmlal_s8(vshll_n_s8(vadd_s8(vadd_s8(*(int8x8_t *)v150.i8, *(int8x8_t *)v149.i8), *(int8x8_t *)v152.i8), 3uLL), *(int8x8_t *)v163.i8, (int8x8_t)0x707070707070707), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v248, (int16x8_t)v247), v245)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vshll_n_s8(*(int8x8_t *)v162.i8, 1uLL), v245), v246));
    int16x8_t v250 = vpaddq_s16(v249, v249);
    if ((unint64_t)(vpaddq_s16(v250, v250).i16[0] - 449) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      int16x8_t v251 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v252 = 8 * (a1 & 7);
      if (v252) {
        uint64_t v253 = *v251 & ~(-1 << v252);
      }
      else {
        uint64_t v253 = 0;
      }
      *a2 = 0;
      __int32 v254 = v470.i32[0];
      int16x4_t v255 = (int16x4_t)vzip1_s8(*(int8x8_t *)v151.i8, *(int8x8_t *)v470.i8);
      int8x8_t v256 = (int8x8_t)vadd_s16(v255, (int16x4_t)0xFF00FF00FF00FFLL);
      uint32x4_t v257 = vmovl_u16((uint16x4_t)vceqz_s16((int16x4_t)(*(void *)&v255 & 0xFF00FF00FF00FFLL)));
      v258.i64[0] = v257.u32[0];
      v258.i64[1] = v257.u32[1];
      int8x16_t v259 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v258, 0x38uLL), 0x38uLL);
      v258.i64[0] = v257.u32[2];
      v258.i64[1] = v257.u32[3];
      int8x16_t v260 = (int8x16_t)vshrq_n_s64(vshlq_n_s64(v258, 0x38uLL), 0x38uLL);
      uint32x4_t v261 = vmovl_u16((uint16x4_t)vand_s8(v256, (int8x8_t)0x7000700070007));
      v258.i64[0] = v261.u32[2];
      v258.i64[1] = v261.u32[3];
      v262.i64[0] = 255;
      v262.i64[1] = 255;
      uint64x2_t v263 = (uint64x2_t)vandq_s8((int8x16_t)v258, v262);
      v258.i64[0] = v261.u32[0];
      v258.i64[1] = v261.u32[1];
      uint64_t v264 = v162.i8[0] & 0x1F;
      int8x16_t v265 = vorrq_s8(vbicq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v258, v262), (uint64x2_t)xmmword_242EA7660), v259), vbicq_s8((int8x16_t)vshlq_u64(v263, (uint64x2_t)xmmword_242EA7670), v260));
      *(int8x8_t *)v265.i8 = vorr_s8(*(int8x8_t *)v265.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v265, v265, 8uLL));
      v258.i64[0] = v162.u8[1];
      v258.i64[1] = v162.u8[2];
      v265.i64[1] = (unint64_t)(v162.i8[3] & 0x1F) << 15;
      int8x16_t v266 = vorrq_s8(v265, vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v258, v262), (uint64x2_t)xmmword_242EA7680), (int8x16_t)xmmword_242EA7690));
      unint64_t v267 = vorrq_s8(v266, (int8x16_t)vdupq_laneq_s64((int64x2_t)v266, 1)).u64[0] | v264;
      unint64_t v268 = v253 | (v267 << v252);
      if (v252 >= 0x20)
      {
        *int16x8_t v251 = v268;
        unint64_t v268 = v267 >> (-8 * (a1 & 7u));
      }
      uint64_t v269 = (unsigned __int16)v254;
      v270.i64[0] = BYTE2(v254);
      v270.i64[1] = HIBYTE(v254);
      uint64x2_t v271 = vshlq_u64((uint64x2_t)vandq_s8(v270, v262), (uint64x2_t)xmmword_242EA76A0);
      unint64_t v272 = v269 | v271.i64[0] | v271.i64[1];
      unint64_t v273 = (v252 + 32) & 0x38;
      unint64_t v274 = v268 | (v272 << v273);
      if (v273 >= 0x20)
      {
        *(void *)((char *)v251 + (((v252 + 32) >> 3) & 8)) = v274;
        unint64_t v274 = v272 >> -(char)v273;
      }
      int8x16_t v275 = vsubq_s8(v476, v472);
      int8x16_t v276 = vsubq_s8(v476, v473);
      int8x16_t v277 = vsubq_s8(v476, v474);
      int8x16_t v278 = vsubq_s8(v476, v475);
      int16x8_t v279 = (int16x8_t)vtrn1q_s8(v275, v276);
      int16x8_t v280 = (int16x8_t)vtrn2q_s8(v275, v276);
      int8x16_t v281 = vtrn1q_s8(v277, v278);
      int16x8_t v282 = (int16x8_t)vtrn2q_s8(v277, v278);
      int8x16_t v283 = (int8x16_t)vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vzip1q_s16(v279, (int16x8_t)v281), (int32x4_t)vzip1q_s16(v280, v282)), (int64x2_t)vzip1q_s32((int32x4_t)vtrn2q_s16(v279, (int16x8_t)v281), (int32x4_t)vtrn2q_s16(v280, v282)));
      v281.i64[0] = 0x202020202020202;
      v281.i64[1] = 0x202020202020202;
      int8x16_t v284 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v471.i8), (int16x4_t)0x4000400040004)), v281);
      v281.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v281.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v277.i64[0] = -1;
      v277.i64[1] = -1;
      uint8x16_t v285 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v277, (uint8x16_t)vorrq_s8(v284, v281)), v283);
      int16x8_t v286 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v284.i8);
      int16x8_t v287 = (int16x8_t)vmovl_high_u8((uint8x16_t)v284);
      uint16x8_t v288 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v285.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v286)), (int16x8_t)vshlq_u16(vmovl_high_u8(v285), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v287)));
      uint16x8_t v289 = (uint16x8_t)vpaddq_s16(v286, v287);
      int32x4_t v290 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v289.i8);
      int32x4_t v291 = (int32x4_t)vmovl_high_u16(v289);
      int32x4_t v292 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v288.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v290)), (int32x4_t)vshlq_u32(vmovl_high_u16(v288), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v291)));
      int32x4_t v293 = vpaddq_s32(v290, v291);
      v294.i64[0] = v292.u32[0];
      v294.i64[1] = v292.u32[1];
      uint64x2_t v295 = (uint64x2_t)v294;
      v294.i64[0] = v292.u32[2];
      v294.i64[1] = v292.u32[3];
      uint64x2_t v296 = (uint64x2_t)v294;
      v294.i64[0] = v293.u32[0];
      v294.i64[1] = v293.u32[1];
      int64x2_t v297 = v294;
      v294.i64[0] = v293.u32[2];
      v294.i64[1] = v293.u32[3];
      int64x2_t v298 = vpaddq_s64((int64x2_t)vshlq_u64(v295, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)), (int64x2_t)vshlq_u64(v296, (uint64x2_t)vzip1q_s64((int64x2_t)0, v294)));
      int64x2_t v299 = vpaddq_s64(v297, v294);
      unint64_t v300 = (v298.i64[0] << v252) | v274;
      if (v299.i64[0] + v252 >= 0x40)
      {
        v251[1] = v300;
        unint64_t v300 = (unint64_t)v298.i64[0] >> (-8 * (a1 & 7u));
        if (!v252) {
          unint64_t v300 = 0;
        }
      }
      unint64_t v301 = v299.i64[0] + (v252 | 0x40);
      unint64_t v302 = v300 | (v298.i64[1] << v301);
      if ((v301 & 0x3F) + v299.i64[1] >= 0x40)
      {
        *(void *)((char *)v251 + ((v301 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v298.i64[1] >> -(v301 & 0x3F);
        if ((v301 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      unint64_t v303 = v301 + v299.i64[1];
      v304.i64[0] = 0x808080808080808;
      v304.i64[1] = 0x808080808080808;
      v305.i64[0] = -1;
      v305.i64[1] = -1;
      int8x16_t v306 = vandq_s8(vextq_s8(vtstq_s8(v471, v304), (int8x16_t)0, 0xCuLL), v476);
      v307.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v307.i64[1] = 0xF8F8F8F8F8F8F8F8;
      uint8x16_t v308 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v305, (uint8x16_t)vaddq_s8(v306, v307)), v479);
      int16x8_t v309 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v306.i8);
      uint16x8_t v310 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v308.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v309)), (int16x8_t)vmovl_high_u8(v308));
      uint16x8_t v311 = (uint16x8_t)vpaddq_s16(v309, (int16x8_t)vmovl_high_u8((uint8x16_t)v306));
      int32x4_t v312 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v311.i8);
      int32x4_t v313 = (int32x4_t)vmovl_high_u16(v311);
      int32x4_t v314 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v310.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v312)), (int32x4_t)vshlq_u32(vmovl_high_u16(v310), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v313)));
      int32x4_t v315 = vpaddq_s32(v312, v313);
      v316.i64[0] = v314.u32[0];
      v316.i64[1] = v314.u32[1];
      uint64x2_t v317 = (uint64x2_t)v316;
      v316.i64[0] = v314.u32[2];
      v316.i64[1] = v314.u32[3];
      uint64x2_t v318 = (uint64x2_t)v316;
      v316.i64[0] = v315.u32[0];
      v316.i64[1] = v315.u32[1];
      int64x2_t v319 = v316;
      v316.i64[0] = v315.u32[2];
      v316.i64[1] = v315.u32[3];
      int64x2_t v320 = vpaddq_s64((int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v319)), (int64x2_t)vshlq_u64(v318, (uint64x2_t)vzip1q_s64((int64x2_t)0, v316)));
      int64x2_t v321 = vpaddq_s64(v319, v316);
      unint64_t v322 = (v320.i64[0] << v303) | v302;
      if (v321.i64[0] + (v303 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v251 + ((v303 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v322;
        unint64_t v322 = (unint64_t)v320.i64[0] >> -(v303 & 0x3F);
        if ((v303 & 0x3F) == 0) {
          unint64_t v322 = 0;
        }
      }
      unint64_t v323 = v321.i64[0] + v303;
      unint64_t v324 = v322 | (v320.i64[1] << v323);
      if ((v323 & 0x3F) + v321.i64[1] >= 0x40)
      {
        *(void *)((char *)v251 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v320.i64[1] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v324 = 0;
        }
      }
      unint64_t v325 = v323 + v321.i64[1];
      int8x16_t v326 = vextq_s8((int8x16_t)0, v472, 0xCuLL);
      v327.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v327.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v328.i64[0] = -1;
      v328.i64[1] = -1;
      uint8x16_t v329 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v328, (uint8x16_t)vaddq_s8(v326, v327)), v461);
      int16x8_t v330 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v326.i8);
      int16x8_t v331 = (int16x8_t)vmovl_high_u8((uint8x16_t)v326);
      uint16x8_t v332 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v329.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v330)), (int16x8_t)vshlq_u16(vmovl_high_u8(v329), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v331)));
      uint16x8_t v333 = (uint16x8_t)vpaddq_s16(v330, v331);
      int32x4_t v334 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v333.i8);
      int32x4_t v335 = (int32x4_t)vmovl_high_u16(v333);
      int32x4_t v336 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v332.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v334)), (int32x4_t)vshlq_u32(vmovl_high_u16(v332), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v335)));
      int32x4_t v337 = vpaddq_s32(v334, v335);
      v338.i64[0] = v336.u32[0];
      v338.i64[1] = v336.u32[1];
      uint64x2_t v339 = (uint64x2_t)v338;
      v338.i64[0] = v336.u32[2];
      v338.i64[1] = v336.u32[3];
      uint64x2_t v340 = (uint64x2_t)v338;
      v338.i64[0] = v337.u32[0];
      v338.i64[1] = v337.u32[1];
      int64x2_t v341 = v338;
      v338.i64[0] = v337.u32[2];
      v338.i64[1] = v337.u32[3];
      int64x2_t v342 = vpaddq_s64((int64x2_t)vshlq_u64(v339, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)), (int64x2_t)vshlq_u64(v340, (uint64x2_t)vzip1q_s64((int64x2_t)0, v338)));
      int64x2_t v343 = vpaddq_s64(v341, v338);
      unint64_t v344 = (v342.i64[0] << v325) | v324;
      if (v343.i64[0] + (v325 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v251 + ((v325 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v344;
        unint64_t v344 = (unint64_t)v342.i64[0] >> -(v325 & 0x3F);
        if ((v325 & 0x3F) == 0) {
          unint64_t v344 = 0;
        }
      }
      unint64_t v345 = v343.i64[0] + v325;
      unint64_t v346 = v344 | (v342.i64[1] << v345);
      if ((v345 & 0x3F) + v343.i64[1] >= 0x40)
      {
        *(void *)((char *)v251 + ((v345 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v346;
        unint64_t v346 = (unint64_t)v342.i64[1] >> -(v345 & 0x3F);
        if ((v345 & 0x3F) == 0) {
          unint64_t v346 = 0;
        }
      }
      unint64_t v347 = v345 + v343.i64[1];
      v348.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v348.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v349.i64[0] = -1;
      v349.i64[1] = -1;
      uint8x16_t v350 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v349, (uint8x16_t)vaddq_s8(v472, v348)), v463);
      int16x8_t v351 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v472.i8);
      int16x8_t v352 = (int16x8_t)vmovl_high_u8((uint8x16_t)v472);
      uint16x8_t v353 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v350.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v351)), (int16x8_t)vshlq_u16(vmovl_high_u8(v350), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v352)));
      uint16x8_t v354 = (uint16x8_t)vpaddq_s16(v351, v352);
      int32x4_t v355 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v354.i8);
      int32x4_t v356 = (int32x4_t)vmovl_high_u16(v354);
      int32x4_t v357 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)), (int32x4_t)vshlq_u32(vmovl_high_u16(v353), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)));
      int32x4_t v358 = vpaddq_s32(v355, v356);
      v359.i64[0] = v357.u32[0];
      v359.i64[1] = v357.u32[1];
      uint64x2_t v360 = (uint64x2_t)v359;
      v359.i64[0] = v357.u32[2];
      v359.i64[1] = v357.u32[3];
      uint64x2_t v361 = (uint64x2_t)v359;
      v359.i64[0] = v358.u32[0];
      v359.i64[1] = v358.u32[1];
      int64x2_t v362 = v359;
      v359.i64[0] = v358.u32[2];
      v359.i64[1] = v358.u32[3];
      int64x2_t v363 = vpaddq_s64((int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v362)), (int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v359)));
      int64x2_t v364 = vpaddq_s64(v362, v359);
      unint64_t v365 = (v363.i64[0] << v347) | v346;
      if (v364.i64[0] + (v347 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v251 + ((v347 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v365;
        if ((v347 & 0x3F) != 0) {
          unint64_t v365 = (unint64_t)v363.i64[0] >> -(v347 & 0x3F);
        }
        else {
          unint64_t v365 = 0;
        }
      }
      uint64_t v366 = v364.i64[1];
      unint64_t v367 = v364.i64[0] + v347;
      uint64_t v368 = (v364.i64[0] + v347) & 0x3F;
      unint64_t v369 = v365 | (v363.i64[1] << v367);
      if ((unint64_t)(v368 + v364.i64[1]) >= 0x40)
      {
        *(void *)((char *)v251 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v369;
        unint64_t v369 = (unint64_t)v363.i64[1] >> -(char)v368;
        if (!v368) {
          unint64_t v369 = 0;
        }
      }
      uint64_t v370 = 0;
      v371.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v371.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v372.i64[0] = -1;
      v372.i64[1] = -1;
      unint64_t v373 = v367 + v366;
      char v374 = 1;
      do
      {
        char v375 = v374;
        uint8x16_t v376 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v372, (uint8x16_t)vaddq_s8(v473, v371)), *(&v464 + v370));
        int16x8_t v377 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v473.i8);
        int16x8_t v378 = (int16x8_t)vmovl_high_u8((uint8x16_t)v473);
        uint16x8_t v379 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v376.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v377)), (int16x8_t)vshlq_u16(vmovl_high_u8(v376), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v378)));
        uint16x8_t v380 = (uint16x8_t)vpaddq_s16(v377, v378);
        int32x4_t v381 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v380.i8);
        int32x4_t v382 = (int32x4_t)vmovl_high_u16(v380);
        int32x4_t v383 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v379.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v381)), (int32x4_t)vshlq_u32(vmovl_high_u16(v379), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v382)));
        int32x4_t v384 = vpaddq_s32(v381, v382);
        v385.i64[0] = v383.u32[0];
        v385.i64[1] = v383.u32[1];
        uint64x2_t v386 = (uint64x2_t)v385;
        v385.i64[0] = v383.u32[2];
        v385.i64[1] = v383.u32[3];
        uint64x2_t v387 = (uint64x2_t)v385;
        v385.i64[0] = v384.u32[0];
        v385.i64[1] = v384.u32[1];
        int64x2_t v388 = v385;
        v385.i64[0] = v384.u32[2];
        v385.i64[1] = v384.u32[3];
        int64x2_t v389 = vpaddq_s64((int64x2_t)vshlq_u64(v386, (uint64x2_t)vzip1q_s64((int64x2_t)0, v388)), (int64x2_t)vshlq_u64(v387, (uint64x2_t)vzip1q_s64((int64x2_t)0, v385)));
        int64x2_t v390 = vpaddq_s64(v388, v385);
        unint64_t v391 = (v389.i64[0] << v373) | v369;
        if (v390.i64[0] + (v373 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v251 + ((v373 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v391;
          unint64_t v391 = (unint64_t)v389.i64[0] >> -(v373 & 0x3F);
          if ((v373 & 0x3F) == 0) {
            unint64_t v391 = 0;
          }
        }
        unint64_t v392 = v390.i64[0] + v373;
        unint64_t v369 = v391 | (v389.i64[1] << v392);
        if ((v392 & 0x3F) + v390.i64[1] >= 0x40)
        {
          *(void *)((char *)v251 + ((v392 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v369;
          unint64_t v369 = (unint64_t)v389.i64[1] >> -(v392 & 0x3F);
          if ((v392 & 0x3F) == 0) {
            unint64_t v369 = 0;
          }
        }
        char v374 = 0;
        unint64_t v373 = v392 + v390.i64[1];
        uint64_t v370 = 1;
      }
      while ((v375 & 1) != 0);
      uint64_t v393 = 0;
      char v394 = 1;
      v395.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v395.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v396.i64[0] = -1;
      v396.i64[1] = -1;
      do
      {
        char v397 = v394;
        uint8x16_t v398 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v396, (uint8x16_t)vaddq_s8(v474, v395)), *(&v466 + v393));
        int16x8_t v399 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v474.i8);
        int16x8_t v400 = (int16x8_t)vmovl_high_u8((uint8x16_t)v474);
        uint16x8_t v401 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v398.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v399)), (int16x8_t)vshlq_u16(vmovl_high_u8(v398), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v400)));
        uint16x8_t v402 = (uint16x8_t)vpaddq_s16(v399, v400);
        int32x4_t v403 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v402.i8);
        int32x4_t v404 = (int32x4_t)vmovl_high_u16(v402);
        int32x4_t v405 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v401.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v403)), (int32x4_t)vshlq_u32(vmovl_high_u16(v401), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v404)));
        int32x4_t v406 = vpaddq_s32(v403, v404);
        v407.i64[0] = v405.u32[0];
        v407.i64[1] = v405.u32[1];
        uint64x2_t v408 = (uint64x2_t)v407;
        v407.i64[0] = v405.u32[2];
        v407.i64[1] = v405.u32[3];
        uint64x2_t v409 = (uint64x2_t)v407;
        v407.i64[0] = v406.u32[0];
        v407.i64[1] = v406.u32[1];
        int64x2_t v410 = v407;
        v407.i64[0] = v406.u32[2];
        v407.i64[1] = v406.u32[3];
        int64x2_t v411 = vpaddq_s64((int64x2_t)vshlq_u64(v408, (uint64x2_t)vzip1q_s64((int64x2_t)0, v410)), (int64x2_t)vshlq_u64(v409, (uint64x2_t)vzip1q_s64((int64x2_t)0, v407)));
        int64x2_t v412 = vpaddq_s64(v410, v407);
        unint64_t v413 = (v411.i64[0] << v373) | v369;
        if (v412.i64[0] + (v373 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v251 + ((v373 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v413;
          unint64_t v413 = (unint64_t)v411.i64[0] >> -(v373 & 0x3F);
          if ((v373 & 0x3F) == 0) {
            unint64_t v413 = 0;
          }
        }
        unint64_t v414 = v412.i64[0] + v373;
        unint64_t v369 = v413 | (v411.i64[1] << v414);
        if ((v414 & 0x3F) + v412.i64[1] >= 0x40)
        {
          *(void *)((char *)v251 + ((v414 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v369;
          unint64_t v369 = (unint64_t)v411.i64[1] >> -(v414 & 0x3F);
          if ((v414 & 0x3F) == 0) {
            unint64_t v369 = 0;
          }
        }
        char v394 = 0;
        unint64_t v373 = v414 + v412.i64[1];
        uint64_t v393 = 1;
      }
      while ((v397 & 1) != 0);
      uint64_t v415 = 0;
      char v416 = 1;
      v417.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v417.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v418.i64[0] = -1;
      v418.i64[1] = -1;
      do
      {
        char v419 = v416;
        uint8x16_t v420 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8(v418, (uint8x16_t)vaddq_s8(v475, v417)), *(&v468 + v415));
        int16x8_t v421 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v475.i8);
        int16x8_t v422 = (int16x8_t)vmovl_high_u8((uint8x16_t)v475);
        uint16x8_t v423 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v420.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v421)), (int16x8_t)vshlq_u16(vmovl_high_u8(v420), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v422)));
        uint16x8_t v424 = (uint16x8_t)vpaddq_s16(v421, v422);
        int32x4_t v425 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v424.i8);
        int32x4_t v426 = (int32x4_t)vmovl_high_u16(v424);
        int32x4_t v427 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v423.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v425)), (int32x4_t)vshlq_u32(vmovl_high_u16(v423), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v426)));
        int32x4_t v428 = vpaddq_s32(v425, v426);
        v429.i64[0] = v427.u32[0];
        v429.i64[1] = v427.u32[1];
        uint64x2_t v430 = (uint64x2_t)v429;
        v429.i64[0] = v427.u32[2];
        v429.i64[1] = v427.u32[3];
        uint64x2_t v431 = (uint64x2_t)v429;
        v429.i64[0] = v428.u32[0];
        v429.i64[1] = v428.u32[1];
        int64x2_t v432 = v429;
        v429.i64[0] = v428.u32[2];
        v429.i64[1] = v428.u32[3];
        int64x2_t v433 = vpaddq_s64((int64x2_t)vshlq_u64(v430, (uint64x2_t)vzip1q_s64((int64x2_t)0, v432)), (int64x2_t)vshlq_u64(v431, (uint64x2_t)vzip1q_s64((int64x2_t)0, v429)));
        int64x2_t v434 = vpaddq_s64(v432, v429);
        unint64_t v435 = (v433.i64[0] << v373) | v369;
        if (v434.i64[0] + (v373 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v251 + ((v373 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v435;
          unint64_t v435 = (unint64_t)v433.i64[0] >> -(v373 & 0x3F);
          if ((v373 & 0x3F) == 0) {
            unint64_t v435 = 0;
          }
        }
        unint64_t v436 = v434.i64[0] + v373;
        unint64_t v369 = v435 | (v433.i64[1] << v436);
        if ((v436 & 0x3F) + v434.i64[1] >= 0x40)
        {
          *(void *)((char *)v251 + ((v436 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v369;
          unint64_t v369 = (unint64_t)v433.i64[1] >> -(v436 & 0x3F);
          if ((v436 & 0x3F) == 0) {
            unint64_t v369 = 0;
          }
        }
        char v416 = 0;
        unint64_t v373 = v436 + v434.i64[1];
        uint64_t v415 = 1;
      }
      while ((v419 & 1) != 0);
      if ((v373 & 0x3F) != 0) {
        *(void *)((char *)v251 + ((v373 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v369;
      }
      unint64_t result = (v373 - v252 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v11 = 0;
  uint64_t v88 = *MEMORY[0x263EF8340];
  long long v86 = 0u;
  long long v87 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  long long v80 = 0u;
  long long v81 = 0u;
  uint64_t v12 = a6;
  uint64_t v13 = a5;
  do
  {
    uint64_t v14 = 0;
    int8x16_t v15 = (_DWORD *)(a3 + v11 * a4);
    do
    {
      int8x16_t v16 = &v80 + 2 * (v14 & 0x7F);
      uint64_t v17 = 8 * (v11 & 0x7F);
      int v18 = v15[1];
      *(_DWORD *)((char *)v16 + v17) = *v15;
      int8x16_t v19 = &v80 + ((2 * v14) | 1u);
      *(_DWORD *)((char *)v19 + v17) = v18;
      int v20 = v15[3];
      uint64_t v21 = 4 * ((2 * v11) | 1u);
      *(_DWORD *)((char *)v16 + v21) = v15[2];
      v15 += 4;
      ++v14;
      *(_DWORD *)((char *)v19 + v21) = v20;
    }
    while (v13 != v14);
    ++v11;
  }
  while (v11 != v12);
  unsigned int v22 = 2 * (a6 & 0x7F);
  unsigned int v23 = 2 * (a5 & 0x7F);
  uint16x4_t v24 = (uint16x4_t)vmovl_u8((uint8x8_t)v80).u64[0];
  uint32x4_t v25 = vmovl_u16(v24);
  v24.i32[0] = v81;
  uint32x4_t v26 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v24));
  uint32x4_t v72 = v25;
  uint32x4_t v73 = v26;
  v26.i32[0] = DWORD1(v80);
  v26.i64[0] = vmovl_u8(*(uint8x8_t *)v26.i8).u64[0];
  uint32x4_t v27 = vmovl_u16(*(uint16x4_t *)v26.i8);
  v26.i32[0] = DWORD1(v81);
  uint32x4_t v28 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v26.i8));
  uint32x4_t v74 = v27;
  uint32x4_t v75 = v28;
  v28.i32[0] = v82;
  v28.i64[0] = vmovl_u8(*(uint8x8_t *)v28.i8).u64[0];
  uint32x4_t v29 = vmovl_u16(*(uint16x4_t *)v28.i8);
  v28.i32[0] = v83;
  uint32x4_t v30 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v28.i8));
  uint32x4_t v76 = v29;
  uint32x4_t v77 = v30;
  v30.i32[0] = DWORD1(v82);
  v30.i64[0] = vmovl_u8(*(uint8x8_t *)v30.i8).u64[0];
  uint32x4_t v31 = vmovl_u16(*(uint16x4_t *)v30.i8);
  v30.i32[0] = DWORD1(v83);
  uint32x4_t v78 = v31;
  uint32x4_t v79 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v30.i8));
  if (v23 >= 4) {
    unsigned int v32 = 4;
  }
  else {
    unsigned int v32 = 2 * (a5 & 0x7F);
  }
  if (v23 >= 4) {
    unsigned int v33 = v23 - 4;
  }
  else {
    unsigned int v33 = 0;
  }
  char v34 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v72, a7, v32, 2u);
  v35.i32[0] = DWORD2(v80);
  uint16x4_t v36 = (uint16x4_t)vmovl_u8(v35).u64[0];
  uint32x4_t v37 = vmovl_u16(v36);
  v36.i32[0] = DWORD2(v81);
  uint32x4_t v38 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v36));
  uint32x4_t v72 = v37;
  uint32x4_t v73 = v38;
  v38.i32[0] = HIDWORD(v80);
  v38.i64[0] = vmovl_u8(*(uint8x8_t *)v38.i8).u64[0];
  uint32x4_t v39 = vmovl_u16(*(uint16x4_t *)v38.i8);
  v38.i32[0] = HIDWORD(v81);
  uint32x4_t v40 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v38.i8));
  uint32x4_t v74 = v39;
  uint32x4_t v75 = v40;
  v40.i32[0] = DWORD2(v82);
  v40.i64[0] = vmovl_u8(*(uint8x8_t *)v40.i8).u64[0];
  uint32x4_t v41 = vmovl_u16(*(uint16x4_t *)v40.i8);
  v40.i32[0] = DWORD2(v83);
  uint32x4_t v42 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v40.i8));
  uint32x4_t v76 = v41;
  uint32x4_t v77 = v42;
  v42.i32[0] = HIDWORD(v82);
  v42.i64[0] = vmovl_u8(*(uint8x8_t *)v42.i8).u64[0];
  uint32x4_t v43 = vmovl_u16(*(uint16x4_t *)v42.i8);
  v42.i32[0] = HIDWORD(v83);
  uint32x4_t v78 = v43;
  uint32x4_t v79 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v42.i8));
  unsigned int v44 = v22 - 2;
  if (v22 < 2) {
    unsigned int v44 = 0;
  }
  if (a6 >= 2) {
    unsigned int v45 = 2;
  }
  else {
    unsigned int v45 = v44;
  }
  int v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v72, a7, v32, v45);
  v47.i32[0] = v84;
  uint16x4_t v48 = (uint16x4_t)vmovl_u8(v47).u64[0];
  uint32x4_t v49 = vmovl_u16(v48);
  v48.i32[0] = v85;
  uint32x4_t v50 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v48));
  uint32x4_t v72 = v49;
  uint32x4_t v73 = v50;
  v50.i32[0] = DWORD1(v84);
  v50.i64[0] = vmovl_u8(*(uint8x8_t *)v50.i8).u64[0];
  uint32x4_t v51 = vmovl_u16(*(uint16x4_t *)v50.i8);
  v50.i32[0] = DWORD1(v85);
  uint32x4_t v52 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v50.i8));
  uint32x4_t v74 = v51;
  uint32x4_t v75 = v52;
  v52.i32[0] = v86;
  v52.i64[0] = vmovl_u8(*(uint8x8_t *)v52.i8).u64[0];
  uint32x4_t v53 = vmovl_u16(*(uint16x4_t *)v52.i8);
  v52.i32[0] = v87;
  uint32x4_t v54 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v52.i8));
  uint32x4_t v76 = v53;
  uint32x4_t v77 = v54;
  v54.i32[0] = DWORD1(v86);
  v54.i64[0] = vmovl_u8(*(uint8x8_t *)v54.i8).u64[0];
  uint32x4_t v55 = vmovl_u16(*(uint16x4_t *)v54.i8);
  v54.i32[0] = DWORD1(v87);
  uint32x4_t v78 = v55;
  uint32x4_t v79 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v54.i8));
  if (a5 >= 4) {
    unsigned int v56 = 4;
  }
  else {
    unsigned int v56 = v33;
  }
  int v57 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v72, a7, v56, 2u);
  v58.i32[0] = DWORD2(v84);
  uint16x4_t v59 = (uint16x4_t)vmovl_u8(v58).u64[0];
  uint32x4_t v60 = vmovl_u16(v59);
  v59.i32[0] = DWORD2(v85);
  uint32x4_t v61 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)v59));
  uint32x4_t v72 = v60;
  uint32x4_t v73 = v61;
  v61.i32[0] = HIDWORD(v84);
  v61.i64[0] = vmovl_u8(*(uint8x8_t *)v61.i8).u64[0];
  uint32x4_t v62 = vmovl_u16(*(uint16x4_t *)v61.i8);
  v61.i32[0] = HIDWORD(v85);
  uint32x4_t v63 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v61.i8));
  uint32x4_t v74 = v62;
  uint32x4_t v75 = v63;
  v63.i32[0] = DWORD2(v86);
  v63.i64[0] = vmovl_u8(*(uint8x8_t *)v63.i8).u64[0];
  uint32x4_t v64 = vmovl_u16(*(uint16x4_t *)v63.i8);
  v63.i32[0] = DWORD2(v87);
  uint32x4_t v65 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v63.i8));
  uint32x4_t v76 = v64;
  uint32x4_t v77 = v65;
  v65.i32[0] = HIDWORD(v86);
  v65.i64[0] = vmovl_u8(*(uint8x8_t *)v65.i8).u64[0];
  uint32x4_t v66 = vmovl_u16(*(uint16x4_t *)v65.i8);
  v65.i32[0] = HIDWORD(v87);
  uint32x4_t v78 = v66;
  uint32x4_t v79 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v65.i8));
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v72, a7, v56, v45);
  if (v57) {
    char v68 = 4;
  }
  else {
    char v68 = 0;
  }
  if (v46) {
    char v69 = 2;
  }
  else {
    char v69 = 0;
  }
  if (result) {
    char v70 = -8;
  }
  else {
    char v70 = -16;
  }
  *a2 = v70 | v68 | v34 | v69;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int8x16_t *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned __int8 v291 = 0;
  unint64_t v289 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v290 = (8 * (a3 & 7)) | 0x200;
  unint64_t v288 = 8 * (a3 & 7);
  uint64_t result = AGX::AppleCompressionGen2::readHeader<(AGX::AppleCompressionGen2::PixelFormat)15,AGX::AppleCompressionGen2::Vec<signed char>>((uint64_t)&v293, (uint64_t)v298, (float *)v292.i32, &v288, a4);
  v8.i64[0] = 0x303030303030303;
  v8.i64[1] = 0x303030303030303;
  int8x16_t v9 = vandq_s8(v293, v8);
  int8x16_t v10 = vbicq_s8(v298[0], vceqq_s8(v9, v8));
  v298[0] = v10;
  int8x16_t v294 = v10;
  int8x16_t v295 = v10;
  int8x16_t v296 = v10;
  int8x16_t v297 = v10;
  v11.i64[0] = 0x202020202020202;
  v11.i64[1] = 0x202020202020202;
  int8x16_t v12 = vandq_s8((int8x16_t)vmovl_s16(vtst_s16((int16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v293.i8), (int16x4_t)0x4000400040004)), v11);
  unint64_t v13 = v288;
  int8x16_t v287 = v9;
  if (vmaxvq_s8(v12) < 1)
  {
    v26.i64[0] = -1;
    v26.i64[1] = -1;
    v27.i64[0] = -1;
    v27.i64[1] = -1;
    v28.i64[0] = -1;
    v28.i64[1] = -1;
    v29.i64[0] = -1;
    v29.i64[1] = -1;
  }
  else
  {
    int8x16_t v14 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v12, v12));
    int8x16_t v15 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v14, (int16x8_t)v14));
    unint64_t v16 = vpaddq_s32((int32x4_t)v15, (int32x4_t)v15).u64[0];
    v17.i64[0] = v16;
    v17.i64[1] = HIDWORD(v16);
    int64x2_t v18 = v17;
    unint64_t v19 = vaddvq_s64(v17);
    unint64_t v20 = v19;
    unint64_t v21 = v288 + v19;
    if (v290) {
      BOOL v22 = v290 >= v21;
    }
    else {
      BOOL v22 = 1;
    }
    int v23 = !v22;
    if (v19 <= 0x80 && v23 == 0)
    {
      v7.i64[0] = 63;
      uint32x4_t v30 = (int64x2_t *)(v289 + 8 * (v288 >> 6));
      int64x2_t v31 = vaddq_s64(vdupq_lane_s64(vandq_s8((int8x16_t)v288, v7).i64[0], 0), vzip1q_s64((int64x2_t)0, v18));
      int8x16_t v25 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v30, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30->i64[0], 0), (uint64x2_t)vnegq_s64(v31)));
      if ((v288 & 0x3F) + v20 >= 0x81) {
        int8x16_t v25 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v30[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v31)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v30[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v31))), v25);
      }
      unint64_t v13 = v21;
    }
    else
    {
      unsigned __int8 v291 = 1;
      int8x16_t v25 = 0uLL;
    }
    int32x2_t v32 = vzip1_s32(*(int32x2_t *)v15.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    v33.i64[0] = v32.u32[0];
    v33.i64[1] = v32.u32[1];
    int64x2_t v34 = (int64x2_t)vshlq_u64((uint64x2_t)v25, (uint64x2_t)vnegq_s64(v33));
    *(int32x2_t *)v25.i8 = vmovn_s64((int64x2_t)v25);
    *(int32x2_t *)v34.i8 = vmovn_s64(v34);
    int16x8_t v35 = (int16x8_t)vzip1q_s32((int32x4_t)v25, (int32x4_t)v34);
    int16x8_t v36 = (int16x8_t)vshlq_u32((uint32x4_t)v35, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    *(int16x4_t *)v35.i8 = vmovn_s32((int32x4_t)v35);
    *(int16x4_t *)v36.i8 = vmovn_s32((int32x4_t)v36);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v35, v36);
    int8x16_t v38 = (int8x16_t)vshlq_u16((uint16x8_t)v37, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)))));
    *(int8x8_t *)v37.i8 = vmovn_s16((int16x8_t)v37);
    *(int8x8_t *)v38.i8 = vmovn_s16((int16x8_t)v38);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    v38.i64[0] = 0x101010101010101;
    v38.i64[1] = 0x101010101010101;
    int8x16_t v40 = vshlq_s8(v38, v12);
    v38.i64[0] = -1;
    v38.i64[1] = -1;
    int32x4_t v41 = (int32x4_t)vqtbl1q_s8(vandq_s8(v39, vaddq_s8(v40, v38)), (int8x16_t)xmmword_242EA7560);
    int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
    int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
    int8x16_t v44 = (int8x16_t)vdupq_laneq_s32(v41, 2);
    int8x16_t v45 = (int8x16_t)vdupq_laneq_s32(v41, 3);
    int8x16_t v294 = vsubq_s8(v294, v42);
    int8x16_t v295 = vsubq_s8(v295, v43);
    int8x16_t v296 = vsubq_s8(v296, v44);
    int8x16_t v297 = vsubq_s8(v297, v45);
    int8x16_t v29 = vceqzq_s8(v42);
    int8x16_t v28 = vceqzq_s8(v43);
    int8x16_t v27 = vceqzq_s8(v44);
    int8x16_t v26 = vceqzq_s8(v45);
  }
  v46.i64[0] = 0x808080808080808;
  v46.i64[1] = 0x808080808080808;
  int8x16_t v47 = 0uLL;
  int8x16_t v48 = vandq_s8(vextq_s8(vtstq_s8(v293, v46), (int8x16_t)0, 0xCuLL), v10);
  int8x16_t v49 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v48, v48));
  int8x16_t v50 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v49, (int16x8_t)v49));
  unint64_t v51 = vpaddq_s32((int32x4_t)v50, (int32x4_t)v50).u64[0];
  v52.i64[0] = v51;
  v52.i64[1] = HIDWORD(v51);
  int64x2_t v53 = v52;
  unint64_t v54 = vaddvq_s64(v52);
  if (v290) {
    BOOL v55 = v290 >= v13 + v54;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = !v55;
  if (v54 <= 0x80 && v56 == 0)
  {
    int64x2_t v58 = vaddq_s64(vdupq_n_s64(v13 & 0x3F), vzip1q_s64((int64x2_t)0, v53));
    uint16x4_t v59 = (int64x2_t *)(v289 + 8 * (v13 >> 6));
    int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v59, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59->i64[0], 0), (uint64x2_t)vnegq_s64(v58)));
    if ((v13 & 0x3F) + v54 >= 0x81) {
      int8x16_t v47 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v59[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v58)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v59[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v58))), v47);
    }
    v13 += v54;
  }
  else
  {
    unsigned __int8 v291 = 1;
  }
  int v60 = v293.i8[0] & 3;
  int8x16_t v285 = v26;
  int8x16_t v286 = v29;
  int8x16_t v283 = v28;
  int8x16_t v284 = v27;
  if (v60 == 2)
  {
    unint64_t v61 = v13 + 4;
    if (v290)
    {
      if (v290 < v61)
      {
        unsigned __int8 v291 = 1;
LABEL_39:
        unsigned __int8 v291 = 1;
        goto LABEL_40;
      }
      unint64_t v62 = v13 + 8;
      v13 += 4;
      if (v290 < v62) {
        goto LABEL_39;
      }
      unint64_t v61 = v13;
    }
    unint64_t v13 = v61 + 4;
  }
LABEL_40:
  int8x16_t v63 = 0uLL;
  int8x16_t v64 = vextq_s8((int8x16_t)0, v294, 0xCuLL);
  int8x16_t v65 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v64, v64));
  int8x16_t v66 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v65, (int16x8_t)v65));
  unint64_t v67 = vpaddq_s32((int32x4_t)v66, (int32x4_t)v66).u64[0];
  v68.i64[0] = v67;
  v68.i64[1] = HIDWORD(v67);
  int64x2_t v69 = v68;
  unint64_t v70 = vaddvq_s64(v68);
  unint64_t v71 = v13 + v70;
  if (v290) {
    BOOL v72 = v290 >= v71;
  }
  else {
    BOOL v72 = 1;
  }
  int v73 = !v72;
  if (v70 > 0x80 || v73)
  {
    int v78 = 1;
    unint64_t v76 = v289;
  }
  else
  {
    unint64_t v74 = v13 & 0x3F;
    int64x2_t v75 = vaddq_s64(vdupq_n_s64(v74), vzip1q_s64((int64x2_t)0, v69));
    unint64_t v76 = v289;
    uint32x4_t v77 = (int64x2_t *)(v289 + 8 * (v13 >> 6));
    int8x16_t v63 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v77, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77->i64[0], 0), (uint64x2_t)vnegq_s64(v75)));
    if (v74 + v70 >= 0x81) {
      int8x16_t v63 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v77[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v75)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v77[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v75))), v63);
    }
    int v78 = v291;
    unint64_t v13 = v71;
  }
  int8x16_t v79 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v294, v294));
  int8x16_t v80 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v79, (int16x8_t)v79));
  unint64_t v81 = vpaddq_s32((int32x4_t)v80, (int32x4_t)v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  unint64_t v85 = v13 + v84;
  if (v290) {
    BOOL v86 = v290 >= v85;
  }
  else {
    BOOL v86 = 1;
  }
  char v87 = !v86;
  int8x16_t v88 = 0uLL;
  if (v84 > 0x80 || (v87 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v85 = v13;
    int8x16_t v92 = 0uLL;
  }
  else
  {
    unint64_t v89 = v13 & 0x3F;
    int64x2_t v90 = vaddq_s64(vdupq_n_s64(v89), vzip1q_s64((int64x2_t)0, v83));
    int8x16_t v91 = (int64x2_t *)(v76 + 8 * (v13 >> 6));
    int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v91, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91->i64[0], 0), (uint64x2_t)vnegq_s64(v90)));
    if (v89 + v84 >= 0x81) {
      int8x16_t v92 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v91[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v90)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v91[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v90))), v92);
    }
  }
  int8x16_t v93 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v295, v295));
  int8x16_t v94 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v93, (int16x8_t)v93));
  unint64_t v95 = vpaddq_s32((int32x4_t)v94, (int32x4_t)v94).u64[0];
  v96.i64[0] = v95;
  v96.i64[1] = HIDWORD(v95);
  int64x2_t v97 = v96;
  unint64_t v98 = vaddvq_s64(v96);
  unint64_t v99 = v98;
  unint64_t v100 = v85 + v98;
  if (v290) {
    BOOL v101 = v290 >= v100;
  }
  else {
    BOOL v101 = 1;
  }
  char v102 = !v101;
  if (v98 > 0x80 || (v102 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v100 = v85;
  }
  else
  {
    unint64_t v103 = v85 & 0x3F;
    int64x2_t v104 = vaddq_s64(vdupq_n_s64(v103), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v105 = (int64x2_t *)(v76 + 8 * (v85 >> 6));
    int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v105, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105->i64[0], 0), (uint64x2_t)vnegq_s64(v104)));
    if (v103 + v99 >= 0x81) {
      int8x16_t v88 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v105[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v104)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v105[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v104))), v88);
    }
  }
  unint64_t v106 = v100 + v99;
  if (v290) {
    BOOL v107 = v290 >= v106;
  }
  else {
    BOOL v107 = 1;
  }
  char v108 = !v107;
  int8x16_t v109 = 0uLL;
  if (v99 > 0x80 || (v108 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v106 = v100;
    int8x16_t v113 = 0uLL;
  }
  else
  {
    unint64_t v110 = v100 & 0x3F;
    int64x2_t v111 = vaddq_s64(vdupq_n_s64(v110), vzip1q_s64((int64x2_t)0, v97));
    int8x16_t v112 = (int64x2_t *)(v76 + 8 * (v100 >> 6));
    int8x16_t v113 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v112, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112->i64[0], 0), (uint64x2_t)vnegq_s64(v111)));
    if (v110 + v99 >= 0x81) {
      int8x16_t v113 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v112[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v111)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v112[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v111))), v113);
    }
  }
  int8x16_t v114 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v296, v296));
  int8x16_t v115 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v114, (int16x8_t)v114));
  unint64_t v116 = vpaddq_s32((int32x4_t)v115, (int32x4_t)v115).u64[0];
  v117.i64[0] = v116;
  v117.i64[1] = HIDWORD(v116);
  int64x2_t v118 = v117;
  unint64_t v119 = vaddvq_s64(v117);
  unint64_t v120 = v119;
  unint64_t v121 = v106 + v119;
  if (v290) {
    BOOL v122 = v290 >= v121;
  }
  else {
    BOOL v122 = 1;
  }
  char v123 = !v122;
  if (v119 > 0x80 || (v123 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v121 = v106;
  }
  else
  {
    unint64_t v124 = v106 & 0x3F;
    int64x2_t v125 = vaddq_s64(vdupq_n_s64(v124), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v126 = (int64x2_t *)(v76 + 8 * (v106 >> 6));
    int8x16_t v109 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v126, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126->i64[0], 0), (uint64x2_t)vnegq_s64(v125)));
    if (v124 + v120 >= 0x81) {
      int8x16_t v109 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v126[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v125)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v126[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v125))), v109);
    }
  }
  unint64_t v127 = v121 + v120;
  if (v290) {
    BOOL v128 = v290 >= v127;
  }
  else {
    BOOL v128 = 1;
  }
  char v129 = !v128;
  int8x16_t v130 = 0uLL;
  if (v120 > 0x80 || (v129 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v127 = v121;
    int8x16_t v134 = 0uLL;
  }
  else
  {
    unint64_t v131 = v121 & 0x3F;
    int64x2_t v132 = vaddq_s64(vdupq_n_s64(v131), vzip1q_s64((int64x2_t)0, v118));
    int8x16_t v133 = (int64x2_t *)(v76 + 8 * (v121 >> 6));
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v133, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133->i64[0], 0), (uint64x2_t)vnegq_s64(v132)));
    if (v131 + v120 >= 0x81) {
      int8x16_t v134 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v133[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v132)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v133[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v132))), v134);
    }
  }
  int8x16_t v135 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v297, v297));
  int8x16_t v136 = (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v135, (int16x8_t)v135));
  unint64_t v137 = vpaddq_s32((int32x4_t)v136, (int32x4_t)v136).u64[0];
  v138.i64[0] = v137;
  v138.i64[1] = HIDWORD(v137);
  int64x2_t v139 = v138;
  unint64_t v140 = vaddvq_s64(v138);
  unint64_t v141 = v140;
  unint64_t v142 = v127 + v140;
  if (v290) {
    BOOL v143 = v290 >= v142;
  }
  else {
    BOOL v143 = 1;
  }
  char v144 = !v143;
  if (v140 > 0x80 || (v144 & 1) != 0)
  {
    int v78 = 1;
    unint64_t v142 = v127;
  }
  else
  {
    unint64_t v145 = v127 & 0x3F;
    int64x2_t v146 = vaddq_s64(vdupq_n_s64(v145), vzip1q_s64((int64x2_t)0, v139));
    int8x16_t v147 = (int64x2_t *)(v76 + 8 * (v127 >> 6));
    int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v147, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147->i64[0], 0), (uint64x2_t)vnegq_s64(v146)));
    if (v145 + v141 >= 0x81) {
      int8x16_t v130 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v147[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v146)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v147[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v146))), v130);
    }
  }
  unint64_t v148 = v142 + v141;
  if (v290) {
    BOOL v149 = v290 >= v148;
  }
  else {
    BOOL v149 = 1;
  }
  char v150 = !v149;
  if (v141 > 0x80 || (v150 & 1) != 0) {
    goto LABEL_133;
  }
  int64x2_t v151 = vaddq_s64(vdupq_n_s64(v142 & 0x3F), vzip1q_s64((int64x2_t)0, v139));
  int8x16_t v152 = (int64x2_t *)(v76 + 8 * (v142 >> 6));
  int8x16_t v153 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v152, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152->i64[0], 0), (uint64x2_t)vnegq_s64(v151)));
  if ((v142 & 0x3F) + v141 >= 0x81) {
    int8x16_t v153 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v152[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v151)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v152[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v151))), v153);
  }
  if (v78 || v290 + 8 * result - v148 - 512 >= 9 || v60 == 2)
  {
LABEL_133:
    uint64_t v154 = (8 * (&vars0 - 100)) & 0x20;
    uint64_t v155 = v299 | (255 << v154);
    uint64_t v299 = v155;
    unint64_t v156 = (32 * ((((unint64_t)&v299 + 4) >> 2) & 1)) | 8;
    unint64_t v157 = (((32 * ((((unint64_t)&v299 + 4) >> 2) & 1)) | 0x10) - v154) | 8;
    if (v156 - v154 > 0x18) {
      unint64_t v157 = v156 - v154 + 8;
    }
    if (v157 <= 0x20)
    {
      if (v156 - v154 <= 0x18) {
        LOBYTE(v156) = (32 * ((((unint64_t)&v299 + 4) & 4) != 0)) | 0x10;
      }
      uint64_t v158 = v155 | (255 << v156);
      uint64_t v299 = v158;
      uint64_t v159 = ((_BYTE)v156 + 8) & 0x38;
      if ((unint64_t)(v159 - v154 - 25) >= 0xFFFFFFFFFFFFFFDFLL) {
        uint64_t v299 = v158 | (255 << v159);
      }
    }
    uint64_t result = 0;
    int8x16_t v160 = (uint64_t *)((char *)a1->i64 + a2);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    *int8x16_t v160 = 0;
    v160[1] = 0;
  }
  else
  {
    int32x2_t v161 = vzip1_s32(*(int32x2_t *)v50.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL));
    int32x2_t v162 = vzip1_s32(*(int32x2_t *)v94.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL));
    uint16x4_t v163 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v49.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
    int32x4_t v164 = (int32x4_t)vextq_s8(v93, v93, 8uLL);
    uint16x4_t v165 = (uint16x4_t)vuzp1_s16(*(int16x4_t *)v93.i8, *(int16x4_t *)v164.i8);
    v166.i64[0] = v161.u32[0];
    v166.i64[1] = v161.u32[1];
    int64x2_t v167 = v166;
    v166.i64[0] = v162.u32[0];
    v166.i64[1] = v162.u32[1];
    uint64x2_t v168 = (uint64x2_t)vnegq_s64(v166);
    int64x2_t v169 = (int64x2_t)vshlq_u64((uint64x2_t)v47, (uint64x2_t)vnegq_s64(v167));
    *(int32x2_t *)v164.i8 = vmovn_s64((int64x2_t)v47);
    *(int32x2_t *)v169.i8 = vmovn_s64(v169);
    int16x8_t v170 = (int16x8_t)vzip1q_s32(v164, (int32x4_t)v169);
    int64x2_t v171 = (int64x2_t)vshlq_u64((uint64x2_t)v88, v168);
    *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)v88);
    *(int32x2_t *)v171.i8 = vmovn_s64(v171);
    int32x4_t v172 = vzip1q_s32((int32x4_t)v47, (int32x4_t)v171);
    int64x2_t v173 = (int64x2_t)vshlq_u64((uint64x2_t)v113, v168);
    *(int32x2_t *)v171.i8 = vmovn_s64((int64x2_t)v113);
    *(int32x2_t *)v173.i8 = vmovn_s64(v173);
    int16x8_t v174 = (int16x8_t)vzip1q_s32((int32x4_t)v171, (int32x4_t)v173);
    int32x4_t v175 = (int32x4_t)vmovl_u16(v163);
    int16x8_t v176 = (int16x8_t)vmovl_u16(v165);
    uint32x4_t v177 = (uint32x4_t)vnegq_s32((int32x4_t)v176);
    int16x8_t v178 = (int16x8_t)vshlq_u32((uint32x4_t)v170, (uint32x4_t)vnegq_s32(v175));
    *(int16x4_t *)v170.i8 = vmovn_s32((int32x4_t)v170);
    *(int16x4_t *)v178.i8 = vmovn_s32((int32x4_t)v178);
    int8x16_t v179 = (int8x16_t)vzip1q_s16(v170, v178);
    int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v172, v177);
    *(int16x4_t *)v176.i8 = vmovn_s32(v172);
    *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
    int8x16_t v181 = (int8x16_t)vzip1q_s16(v176, v180);
    int16x8_t v182 = (int16x8_t)vshlq_u32((uint32x4_t)v174, v177);
    *(int16x4_t *)v174.i8 = vmovn_s32((int32x4_t)v174);
    *(int16x4_t *)v182.i8 = vmovn_s32((int32x4_t)v182);
    int8x16_t v183 = (int8x16_t)vzip1q_s16(v174, v182);
    uint16x8_t v184 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v295.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v295, v295, 8uLL))));
    int8x16_t v185 = (int8x16_t)vshlq_u16((uint16x8_t)v179, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v48.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))));
    *(int8x8_t *)v179.i8 = vmovn_s16((int16x8_t)v179);
    *(int8x8_t *)v185.i8 = vmovn_s16((int16x8_t)v185);
    int8x16_t v186 = vzip1q_s8(v179, v185);
    int8x16_t v187 = (int8x16_t)vshlq_u16((uint16x8_t)v181, v184);
    int8x16_t v188 = (int8x16_t)vshlq_u16((uint16x8_t)v183, v184);
    *(int8x8_t *)v181.i8 = vmovn_s16((int16x8_t)v181);
    *(int8x8_t *)v187.i8 = vmovn_s16((int16x8_t)v187);
    *(int8x8_t *)v183.i8 = vmovn_s16((int16x8_t)v183);
    *(int8x8_t *)v188.i8 = vmovn_s16((int16x8_t)v188);
    int8x16_t v189 = vzip1q_s8(v181, v187);
    v187.i64[0] = 0x808080808080808;
    v187.i64[1] = 0x808080808080808;
    int8x16_t v190 = vzip1q_s8(v183, v188);
    v188.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v188.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v191 = vsubq_s8(v187, v48);
    int8x16_t v192 = vaddq_s8(v48, v188);
    v188.i64[0] = 0x808080808080808;
    v188.i64[1] = 0x808080808080808;
    int8x16_t v193 = vshlq_s8(v186, v191);
    v191.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v191.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v194 = vsubq_s8(v188, v295);
    int8x16_t v195 = vaddq_s8(v295, v191);
    int8x16_t v196 = vshlq_s8(v189, v194);
    int8x16_t v197 = vshlq_s8(v190, v194);
    int8x16_t v198 = vshlq_s8(v193, v192);
    int8x16_t v199 = vshlq_s8(v196, v195);
    int8x16_t v200 = vshlq_s8(v197, v195);
    int8x16_t v201 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v198.i8, 0);
    int8x16_t v202 = vandq_s8(v283, v201);
    int8x16_t v203 = vsubq_s8(v199, v202);
    int8x16_t v204 = vsubq_s8(v200, v202);
    *(int32x2_t *)v199.i8 = vzip1_s32(*(int32x2_t *)v115.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL));
    *(int32x2_t *)v200.i8 = vzip1_s32(*(int32x2_t *)v136.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL));
    v166.i64[0] = v199.u32[0];
    v166.i64[1] = v199.u32[1];
    uint64x2_t v205 = (uint64x2_t)vnegq_s64(v166);
    *(int16x4_t *)v202.i8 = vuzp1_s16(*(int16x4_t *)v114.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL));
    int64x2_t v206 = (int64x2_t)vshlq_u64((uint64x2_t)v109, v205);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v109);
    *(int32x2_t *)v206.i8 = vmovn_s64(v206);
    int16x8_t v207 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v206);
    v166.i64[0] = v200.u32[0];
    v166.i64[1] = v200.u32[1];
    uint64x2_t v208 = (uint64x2_t)vnegq_s64(v166);
    int64x2_t v209 = (int64x2_t)vshlq_u64((uint64x2_t)v134, v205);
    *(int32x2_t *)v109.i8 = vmovn_s64((int64x2_t)v134);
    *(int32x2_t *)v209.i8 = vmovn_s64(v209);
    int16x8_t v210 = (int16x8_t)vzip1q_s32((int32x4_t)v109, (int32x4_t)v209);
    int64x2_t v211 = (int64x2_t)vshlq_u64((uint64x2_t)v130, v208);
    *(int32x2_t *)v114.i8 = vmovn_s64((int64x2_t)v130);
    *(int32x2_t *)v211.i8 = vmovn_s64(v211);
    uint32x4_t v212 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v202.i8));
    int16x8_t v213 = (int16x8_t)vzip1q_s32((int32x4_t)v114, (int32x4_t)v211);
    int16x8_t v214 = (int16x8_t)vshlq_u32((uint32x4_t)v207, v212);
    *(int16x4_t *)v207.i8 = vmovn_s32((int32x4_t)v207);
    *(int16x4_t *)v214.i8 = vmovn_s32((int32x4_t)v214);
    int8x16_t v215 = (int8x16_t)vzip1q_s16(v207, v214);
    uint32x4_t v216 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v135.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL))));
    int16x8_t v217 = (int16x8_t)vshlq_u32((uint32x4_t)v210, v212);
    *(int16x4_t *)v210.i8 = vmovn_s32((int32x4_t)v210);
    *(int16x4_t *)v217.i8 = vmovn_s32((int32x4_t)v217);
    int8x16_t v218 = (int8x16_t)vzip1q_s16(v210, v217);
    int16x8_t v219 = (int16x8_t)vshlq_u32((uint32x4_t)v213, v216);
    *(int16x4_t *)v213.i8 = vmovn_s32((int32x4_t)v213);
    *(int16x4_t *)v219.i8 = vmovn_s32((int32x4_t)v219);
    uint16x8_t v220 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v296.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v296, v296, 8uLL))));
    int8x16_t v221 = (int8x16_t)vzip1q_s16(v213, v219);
    int8x16_t v222 = (int8x16_t)vshlq_u16((uint16x8_t)v215, v220);
    int8x16_t v223 = (int8x16_t)vshlq_u16((uint16x8_t)v218, v220);
    *(int8x8_t *)v215.i8 = vmovn_s16((int16x8_t)v215);
    *(int8x8_t *)v222.i8 = vmovn_s16((int16x8_t)v222);
    *(int8x8_t *)v218.i8 = vmovn_s16((int16x8_t)v218);
    *(int8x8_t *)v223.i8 = vmovn_s16((int16x8_t)v223);
    int8x16_t v224 = vzip1q_s8(v215, v222);
    v222.i64[0] = 0x808080808080808;
    v222.i64[1] = 0x808080808080808;
    int8x16_t v225 = vzip1q_s8(v218, v223);
    v223.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v223.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v226 = vsubq_s8(v222, v296);
    int8x16_t v227 = vaddq_s8(v296, v223);
    int8x16_t v228 = vshlq_s8(v224, v226);
    int8x16_t v229 = vshlq_s8(v225, v226);
    uint16x8_t v230 = (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v297.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v297, v297, 8uLL))));
    int8x16_t v231 = vshlq_s8(v229, v227);
    int8x16_t v232 = vandq_s8(v284, v201);
    int8x16_t v233 = vsubq_s8(vshlq_s8(v228, v227), v232);
    int8x16_t v234 = vsubq_s8(v231, v232);
    int8x16_t v235 = (int8x16_t)vshlq_u16((uint16x8_t)v221, v230);
    *(int8x8_t *)v221.i8 = vmovn_s16((int16x8_t)v221);
    *(int8x8_t *)v235.i8 = vmovn_s16((int16x8_t)v235);
    v232.i64[0] = 0x808080808080808;
    v232.i64[1] = 0x808080808080808;
    int8x16_t v236 = vzip1q_s8(v221, v235);
    v221.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v221.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v237 = vsubq_s8(v232, v297);
    int8x16_t v238 = vaddq_s8(v297, v221);
    int64x2_t v239 = (int64x2_t)vshlq_u64((uint64x2_t)v153, v208);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    *(int32x2_t *)v239.i8 = vmovn_s64(v239);
    int16x8_t v240 = (int16x8_t)vzip1q_s32((int32x4_t)v153, (int32x4_t)v239);
    int16x8_t v241 = (int16x8_t)vshlq_u32((uint32x4_t)v240, v216);
    *(int16x4_t *)v240.i8 = vmovn_s32((int32x4_t)v240);
    *(int16x4_t *)v241.i8 = vmovn_s32((int32x4_t)v241);
    int8x16_t v242 = (int8x16_t)vzip1q_s16(v240, v241);
    int8x16_t v243 = (int8x16_t)vshlq_u16((uint16x8_t)v242, v230);
    *(int8x8_t *)v242.i8 = vmovn_s16((int16x8_t)v242);
    *(int8x8_t *)v243.i8 = vmovn_s16((int16x8_t)v243);
    int8x16_t v244 = vshlq_s8(vshlq_s8(vzip1q_s8(v242, v243), v237), v238);
    int8x16_t v245 = vandq_s8(v285, v201);
    int8x16_t v246 = vsubq_s8(vshlq_s8(vshlq_s8(v236, v237), v238), v245);
    int8x16_t v247 = vsubq_s8(v244, v245);
    *(int32x2_t *)v236.i8 = vzip1_s32(*(int32x2_t *)v66.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL));
    *(int32x2_t *)v244.i8 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
    v166.i64[0] = v236.u32[0];
    v166.i64[1] = v236.u32[1];
    int64x2_t v248 = (int64x2_t)vshlq_u64((uint64x2_t)v63, (uint64x2_t)vnegq_s64(v166));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v63);
    *(int32x2_t *)v248.i8 = vmovn_s64(v248);
    int16x8_t v249 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v248);
    v166.i64[0] = v244.u32[0];
    v166.i64[1] = v244.u32[1];
    int64x2_t v250 = (int64x2_t)vshlq_u64((uint64x2_t)v92, (uint64x2_t)vnegq_s64(v166));
    *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v92);
    *(int32x2_t *)v250.i8 = vmovn_s64(v250);
    int16x8_t v251 = (int16x8_t)vzip1q_s32((int32x4_t)v63, (int32x4_t)v250);
    int16x8_t v252 = (int16x8_t)vshlq_u32((uint32x4_t)v249, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v65.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))));
    *(int16x4_t *)v249.i8 = vmovn_s32((int32x4_t)v249);
    *(int16x4_t *)v252.i8 = vmovn_s32((int32x4_t)v252);
    int8x16_t v253 = (int8x16_t)vzip1q_s16(v249, v252);
    int16x8_t v254 = (int16x8_t)vshlq_u32((uint32x4_t)v251, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v79.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v79, v79, 8uLL)))));
    *(int16x4_t *)v251.i8 = vmovn_s32((int32x4_t)v251);
    *(int16x4_t *)v254.i8 = vmovn_s32((int32x4_t)v254);
    int8x16_t v255 = (int8x16_t)vzip1q_s16(v251, v254);
    int8x16_t v256 = (int8x16_t)vshlq_u16((uint16x8_t)v253, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)))));
    int8x16_t v257 = (int8x16_t)vshlq_u16((uint16x8_t)v255, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v294.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v294, v294, 8uLL)))));
    *(int8x8_t *)v253.i8 = vmovn_s16((int16x8_t)v253);
    *(int8x8_t *)v256.i8 = vmovn_s16((int16x8_t)v256);
    *(int8x8_t *)v255.i8 = vmovn_s16((int16x8_t)v255);
    *(int8x8_t *)v257.i8 = vmovn_s16((int16x8_t)v257);
    int8x16_t v258 = vzip1q_s8(v253, v256);
    v256.i64[0] = 0x808080808080808;
    v256.i64[1] = 0x808080808080808;
    int8x16_t v259 = vzip1q_s8(v255, v257);
    v257.i64[0] = 0xF8F8F8F8F8F8F8F8;
    v257.i64[1] = 0xF8F8F8F8F8F8F8F8;
    int8x16_t v260 = vshlq_s8(vshlq_s8(v258, vsubq_s8(v256, v64)), vaddq_s8(v64, v257));
    int8x16_t v261 = vshlq_s8(vshlq_s8(v259, vsubq_s8(v256, v294)), vaddq_s8(v294, v257));
    v262.i64[0] = 0x101010101010101;
    v262.i64[1] = 0x101010101010101;
    int8x16_t v263 = vandq_s8(v286, v201);
    int8x16_t v264 = vsubq_s8(vaddq_s8(vandq_s8(v198, v286), v260), v263);
    int8x16_t v265 = vsubq_s8(v261, v263);
    if (vaddlvq_s8(vceqq_s8(v287, v262)))
    {
      int8x16_t v266 = vnegq_s8(vandq_s8(v293, v262));
      int8x16_t v267 = v265;
      v267.i32[3] = v264.i32[0];
      int8x16_t v268 = v264;
      v268.i32[0] = v265.i32[3];
      v301.val[0] = vbslq_s8(v266, v268, v264);
      v301.val[1] = vbslq_s8(v266, v267, v265);
      v269.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
      v269.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
      v302.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(v301, (int8x16_t)xmmword_242EA7570), v266), v301.val[0]);
      v302.val[1] = vaddq_s8(v301.val[1], vandq_s8(vqtbl2q_s8(v301, v269), v266));
      int8x16_t v264 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, (int8x16_t)xmmword_242EA7580), v266), v302.val[0]);
      int8x16_t v265 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, v269), v266), v302.val[1]);
      v302.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v203.i8, (int8x16_t)xmmword_242EA7590), v266), v203);
      v302.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v203.i8, (int8x16_t)xmmword_242EA75A0), v266), v204);
      int8x16_t v203 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, (int8x16_t)xmmword_242EA75B0), v266), v302.val[0]);
      int8x16_t v204 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, v269), v266), v302.val[1]);
      v302.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v233.i8, (int8x16_t)xmmword_242EA75C0), v266), v233);
      v302.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v233.i8, (int8x16_t)xmmword_242EA7570), v266), v234);
      int8x16_t v233 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, v269), v266), v302.val[0]);
      int8x16_t v234 = vaddq_s8(vandq_s8(vqtbl2q_s8(v302, (int8x16_t)xmmword_242EA75D0), v266), v302.val[1]);
      v301.val[0] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v246.i8, (int8x16_t)xmmword_242EA75E0), v266), v246);
      v301.val[1] = vaddq_s8(vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v246.i8, (int8x16_t)xmmword_242EA7570), v266), v247);
      int8x16_t v246 = vaddq_s8(vandq_s8(vqtbl2q_s8(v301, v269), v266), v301.val[0]);
      int8x16_t v247 = vaddq_s8(vandq_s8(vqtbl2q_s8(v301, (int8x16_t)xmmword_242EA75F0), v266), v301.val[1]);
    }
    int8x16_t v270 = vaddq_s8(v292, v264);
    int8x16_t v271 = vaddq_s8(v265, v292);
    int8x16_t v272 = vaddq_s8(v203, v292);
    int8x16_t v273 = vaddq_s8(v204, v292);
    int8x16_t v274 = vaddq_s8(v233, v292);
    int8x16_t v275 = vaddq_s8(v234, v292);
    int8x16_t v276 = vaddq_s8(v246, v292);
    int8x16_t v277 = vaddq_s8(v247, v292);
    v278.i64[0] = 0x1010101010101010;
    v278.i64[1] = 0x1010101010101010;
    int8x16_t v279 = vtstq_s8(v293, v278);
    if ((v293.i8[1] & 0x10) != 0)
    {
      v279.i8[1] = v279.i8[2];
      v279.i8[2] = 0;
      int8x16_t v279 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v279.i8, 0);
      int8x16_t v280 = (int8x16_t)xmmword_242EA7610;
    }
    else
    {
      int8x16_t v280 = (int8x16_t)xmmword_242EA7600;
    }
    int8x16_t v281 = a1 + 2;
    *a1 = vaddq_s8(vandq_s8(vqtbl1q_s8(v270, v280), v279), v270);
    a1[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v271, v280), v279), v271);
    int16x8_t v282 = (int8x16_t *)((char *)a1 + a2);
    *int8x16_t v281 = vaddq_s8(vandq_s8(vqtbl1q_s8(v274, v280), v279), v274);
    v281[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v275, v280), v279), v275);
    *int16x8_t v282 = vaddq_s8(vandq_s8(vqtbl1q_s8(v272, v280), v279), v272);
    v282[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v273, v280), v279), v273);
    v282 += 2;
    *int16x8_t v282 = vaddq_s8(vandq_s8(vqtbl1q_s8(v276, v280), v279), v276);
    v282[1] = vaddq_s8(vandq_s8(vqtbl1q_s8(v277, v280), v279), v277);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(_OWORD *a1, uint64_t a2, unint64_t a3, char a4, int a5)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  if (a4) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(a3, (uint64_t)&v76, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(a3, (uint64_t)&v76, a5);
  }
  int32x4_t v74 = v77;
  int32x4_t v75 = v76;
  int32x4_t v72 = v79;
  int32x4_t v73 = v78;
  int32x4_t v70 = v81;
  int32x4_t v71 = v80;
  unint64_t v16 = a3 + 16;
  int32x4_t v68 = v83;
  int32x4_t v69 = v82;
  if ((a4 & 2) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v16, (uint64_t)&v76, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v16, (uint64_t)&v76, a5);
  }
  int32x4_t v66 = v77;
  int32x4_t v67 = v76;
  int32x4_t v64 = v79;
  int32x4_t v65 = v78;
  int32x4_t v62 = v81;
  int32x4_t v63 = v80;
  unint64_t v17 = a3 + 32;
  int32x4_t v60 = v83;
  int32x4_t v61 = v82;
  if ((a4 & 4) != 0) {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v17, (uint64_t)&v76, a5);
  }
  else {
    AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v17, (uint64_t)&v76, a5);
  }
  int32x4_t v58 = v77;
  int32x4_t v59 = v76;
  int32x4_t v56 = v79;
  int32x4_t v57 = v78;
  int32x4_t v54 = v81;
  int32x4_t v55 = v80;
  unint64_t v18 = a3 + 48;
  int32x4_t v52 = v83;
  int32x4_t v53 = v82;
  if ((a4 & 8) != 0) {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockFallback(v18, (uint64_t)&v76, a5);
  }
  else {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblockDQuad(v18, (uint64_t)&v76, a5);
  }
  *(int16x4_t *)v31.i8 = vmovn_s32(v52);
  *(int16x4_t *)v33.i8 = vmovn_s32(v53);
  *(int16x4_t *)v35.i8 = vmovn_s32(v54);
  *(int16x4_t *)v37.i8 = vmovn_s32(v55);
  *(int16x4_t *)v38.i8 = vmovn_s32(v56);
  *(int16x4_t *)v36.i8 = vmovn_s32(v57);
  *(int16x4_t *)v39.i8 = vmovn_s32(v58);
  *(int16x4_t *)v40.i8 = vmovn_s32(v59);
  *(int16x4_t *)v20.i8 = vmovn_s32(v60);
  *(int16x4_t *)v22.i8 = vmovn_s32(v61);
  *(int16x4_t *)v25.i8 = vmovn_s32(v62);
  *(int16x4_t *)v27.i8 = vmovn_s32(v63);
  *(int16x4_t *)v29.i8 = vmovn_s32(v64);
  *(int16x4_t *)v30.i8 = vmovn_s32(v65);
  *(int16x4_t *)v32.i8 = vmovn_s32(v66);
  *(int16x4_t *)v34.i8 = vmovn_s32(v67);
  *(int16x4_t *)v5.i8 = vmovn_s32(v68);
  *(int16x4_t *)v6.i8 = vmovn_s32(v69);
  *(int16x4_t *)v7.i8 = vmovn_s32(v70);
  *(int16x4_t *)v8.i8 = vmovn_s32(v71);
  *(int16x4_t *)v28.i8 = vmovn_s32(v72);
  *(int16x4_t *)v9.i8 = vmovn_s32(v73);
  *(int16x4_t *)v10.i8 = vmovn_s32(v74);
  *(int16x4_t *)v41.i8 = vmovn_s32(v75);
  *(int16x4_t *)v26.i8 = vmovn_s32(v76);
  *(int16x4_t *)v24.i8 = vmovn_s32(v77);
  v42.i64[1] = v79.i64[1];
  *(int16x4_t *)v23.i8 = vmovn_s32(v78);
  *(int16x4_t *)v21.i8 = vmovn_s32(v79);
  v43.i64[1] = v80.i64[1];
  *(int16x4_t *)v42.i8 = vmovn_s32(v80);
  *(int16x4_t *)v43.i8 = vmovn_s32(v81);
  LODWORD(v44) = vmovn_s16(v41).u32[0];
  DWORD1(v44) = vmovn_s16(v10).u32[0];
  DWORD2(v44) = vmovn_s16(v9).u32[0];
  HIDWORD(v44) = vmovn_s16(v28).u32[0];
  *(int16x4_t *)v28.i8 = vmovn_s32(v82);
  LODWORD(v45) = vmovn_s16(v8).u32[0];
  DWORD1(v45) = vmovn_s16(v7).u32[0];
  DWORD2(v45) = vmovn_s16(v6).u32[0];
  HIDWORD(v45) = vmovn_s16(v5).u32[0];
  LODWORD(v46) = vmovn_s16(v40).u32[0];
  DWORD1(v46) = vmovn_s16(v39).u32[0];
  DWORD2(v46) = vmovn_s16(v36).u32[0];
  *(int16x4_t *)v36.i8 = vmovn_s32(v83);
  HIDWORD(v46) = vmovn_s16(v38).u32[0];
  LODWORD(v47) = vmovn_s16(v37).u32[0];
  DWORD1(v47) = vmovn_s16(v35).u32[0];
  DWORD2(v47) = vmovn_s16(v33).u32[0];
  *a1 = v44;
  a1[1] = v45;
  HIDWORD(v47) = vmovn_s16(v31).u32[0];
  LODWORD(v48) = vmovn_s16(v34).u32[0];
  DWORD1(v48) = vmovn_s16(v32).u32[0];
  DWORD2(v48) = vmovn_s16(v30).u32[0];
  a1[2] = v46;
  a1[3] = v47;
  HIDWORD(v48) = vmovn_s16(v29).u32[0];
  LODWORD(v49) = vmovn_s16(v27).u32[0];
  DWORD1(v49) = vmovn_s16(v25).u32[0];
  DWORD2(v49) = vmovn_s16(v22).u32[0];
  HIDWORD(v49) = vmovn_s16(v20).u32[0];
  LODWORD(v50) = vmovn_s16(v26).u32[0];
  DWORD1(v50) = vmovn_s16(v24).u32[0];
  DWORD2(v50) = vmovn_s16(v23).u32[0];
  HIDWORD(v50) = vmovn_s16(v21).u32[0];
  unint64_t v51 = (char *)a1 + a2;
  v42.i32[0] = vmovn_s16(v42).u32[0];
  v42.i32[1] = vmovn_s16(v43).u32[0];
  v42.i32[2] = vmovn_s16(v28).u32[0];
  v42.i32[3] = vmovn_s16(v36).u32[0];
  *(_OWORD *)unint64_t v51 = v48;
  *((_OWORD *)v51 + 1) = v49;
  *((_OWORD *)v51 + 2) = v50;
  *((int16x8_t *)v51 + 3) = v42;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7)
{
  unint64_t v10 = a3;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 2) {
    unsigned int v13 = 2;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    uint64_t v14 = result;
    int v15 = a7;
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, result, a2, v12, v13, a7);
    v10 += result;
  }
  else
  {
    uint64_t v14 = result;
    int v15 = a7;
    *a4 = 0;
  }
  uint64_t v35 = 2 * a2;
  unint64_t v16 = a4 + 1;
  if (a6 <= 2) {
    int v17 = 2;
  }
  else {
    int v17 = a6;
  }
  unsigned int v18 = v17 - 2;
  if (v18 >= 2) {
    int v19 = 2;
  }
  else {
    int v19 = v18;
  }
  if (v12 && v19)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v16, v14 + v35, a2, v12, v19, v15);
    v10 += result;
  }
  else
  {
    *unint64_t v16 = 0;
  }
  int16x8_t v20 = a4 + 2;
  if (a5 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a5;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v23 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v20, v14 + 64, a2, v23, v13, v15);
    v10 += result;
    int16x8_t v24 = a4 + 3;
  }
  else
  {
    *int16x8_t v20 = 0;
    int16x8_t v24 = a4 + 3;
    if (!v23) {
      goto LABEL_33;
    }
  }
  if (v19)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v24, v14 + v35 + 64, a2, v23, v19, v15);
    v10 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int16x8_t v24 = 0;
LABEL_34:
  int16x8_t v25 = a4 + 4;
  if (a6 <= 4) {
    int v26 = 4;
  }
  else {
    int v26 = a6;
  }
  unsigned int v27 = v26 - 4;
  if (v27 >= 2) {
    int v28 = 2;
  }
  else {
    int v28 = v27;
  }
  if (v12 && v28)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v25, v14 + 4 * a2, a2, v12, v28, v15);
    v10 += result;
  }
  else
  {
    *int16x8_t v25 = 0;
  }
  int16x8_t v29 = a4 + 5;
  if (a6 <= 6) {
    int v30 = 6;
  }
  else {
    int v30 = a6;
  }
  unsigned int v31 = v30 - 6;
  if (v31 >= 2) {
    int v32 = 2;
  }
  else {
    int v32 = v31;
  }
  if (v12 && v32)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v29, v14 + 6 * a2, a2, v12, v32, v15);
    v10 += result;
    int16x8_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  else
  {
    *int16x8_t v29 = 0;
    int16x8_t v33 = a4 + 6;
    if (!v23) {
      goto LABEL_57;
    }
  }
  if (v28)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v33, v14 + 4 * a2 + 64, a2, v23, v28, v15);
    v10 += result;
    int16x8_t v34 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  unsigned char *v33 = 0;
  int16x8_t v34 = a4 + 7;
  if (!v23)
  {
LABEL_62:
    *int16x8_t v34 = 0;
    return result;
  }
LABEL_58:
  if (!v32) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)15,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v10, v34, v14 + 6 * a2 + 64, a2, v23, v32, v15);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int32x4_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, double a5, double a6, double a7, int8x8_t a8)
{
  unint64_t v8 = 8 * (a3 & 7);
  unint64_t v9 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 + 22;
  unint64_t v11 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v8;
  if (v8 >= 0x2B) {
    v11 |= *(void *)(v9 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v12 = (8 * (a3 & 7)) | 0x200;
  int v13 = (a4 >> 6) | (4 * v11);
  uint16x8_t v14 = (uint16x8_t)vdupq_n_s16(v13 & 0xF);
  a8.i32[0] = v13 & 0xF;
  v15.i64[0] = 0x3000300030003;
  v15.i64[1] = 0x3000300030003;
  int16x8_t v16 = (int16x8_t)vbicq_s8((int8x16_t)vdupq_n_s16(((v11 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v15));
  int8x16_t v17 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v18.i64[0] = 0x202020202020202;
  v18.i64[1] = 0x202020202020202;
  int8x16_t v19 = vandq_s8(v17, v18);
  if (vmaxvq_s8(v19) < 1)
  {
    int v29 = 0;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    int16x8_t v31 = v16;
    int16x8_t v32 = v16;
    int16x8_t v33 = v16;
    v34.i64[0] = -1;
    v34.i64[1] = -1;
    int8x16_t v35 = (int8x16_t)v16;
    v36.i64[0] = -1;
    v36.i64[1] = -1;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
  }
  else
  {
    int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v19, v19));
    int32x4_t v21 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v20, v20));
    unint64_t v22 = vpaddq_s32(v21, v21).u64[0];
    v23.i64[0] = v22;
    v23.i64[1] = HIDWORD(v22);
    int64x2_t v24 = v23;
    unint64_t v25 = vaddvq_s64(v23);
    unint64_t v26 = v25 + v10;
    if (v25 <= 0x80 && v12 >= v26)
    {
      int64x2_t v38 = vaddq_s64(vzip1q_s64((int64x2_t)0, v24), vdupq_n_s64(v10 & 0x3E));
      int16x8_t v39 = (int64x2_t *)(v9 + ((v10 >> 3) & 8));
      int32x4_t v28 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v39, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39->i64[0], 0), (uint64x2_t)vnegq_s64(v38)));
      if (v25 + (v10 & 0x3E) < 0x81)
      {
        int v29 = 0;
      }
      else
      {
        int v29 = 0;
        int32x4_t v28 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v39[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v38))), (int8x16_t)v28);
      }
      unint64_t v10 = v26;
    }
    else
    {
      int32x4_t v28 = 0uLL;
      int v29 = 1;
    }
    int32x2_t v40 = vzip1_s32(*(int32x2_t *)v21.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL));
    v41.i64[0] = v40.u32[0];
    v41.i64[1] = v40.u32[1];
    int32x4_t v42 = (int32x4_t)vshlq_u64((uint64x2_t)v28, (uint64x2_t)vnegq_s64(v41));
    *(int32x2_t *)v28.i8 = vmovn_s64((int64x2_t)v28);
    *(int32x2_t *)v42.i8 = vmovn_s64((int64x2_t)v42);
    int16x8_t v43 = (int16x8_t)vzip1q_s32(v28, v42);
    int16x8_t v44 = (int16x8_t)vshlq_u32((uint32x4_t)v43, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v20.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v20, (int8x16_t)v20, 8uLL)))));
    *(int16x4_t *)v43.i8 = vmovn_s32((int32x4_t)v43);
    *(int16x4_t *)v44.i8 = vmovn_s32((int32x4_t)v44);
    int16x8_t v45 = vzip1q_s16(v43, v44);
    *(int8x8_t *)v45.i8 = vzip1_s8(vmovn_s16(v45), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v45, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v19.i8, *(int8x8_t *)v14.i8))))));
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    int8x16_t v46 = vshlq_s8((int8x16_t)v43, v19);
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v46.i32[0] = vandq_s8((int8x16_t)v45, vaddq_s8(v46, (int8x16_t)v43)).u32[0];
    int16x8_t v47 = vdupq_n_s16(v46.i8[0]);
    int16x8_t v48 = vdupq_n_s16(v46.i8[1]);
    int16x8_t v49 = vdupq_n_s16(v46.i8[2]);
    int16x8_t v50 = vdupq_n_s16(v46.i8[3]);
    int8x16_t v35 = (int8x16_t)vsubq_s16(v16, v47);
    int16x8_t v33 = vsubq_s16(v16, v48);
    int16x8_t v32 = vsubq_s16(v16, v49);
    int16x8_t v31 = vsubq_s16(v16, v50);
    int8x16_t v37 = (int8x16_t)vceqzq_s16(v47);
    int8x16_t v36 = (int8x16_t)vceqzq_s16(v48);
    int8x16_t v34 = (int8x16_t)vceqzq_s16(v49);
    int8x16_t v30 = (int8x16_t)vceqzq_s16(v50);
  }
  v51.i64[0] = 0x7000700070007;
  v51.i64[1] = 0x7000700070007;
  int32x4_t v52 = 0uLL;
  int16x8_t v53 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v14, v51), (int8x16_t)0, 0xEuLL), (int8x16_t)v16);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v53, v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  if (v58 <= 0x80 && v12 >= v58 + v10)
  {
    int64x2_t v60 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v10 & 0x3F));
    int32x4_t v61 = (int64x2_t *)(v9 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v61, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61->i64[0], 0), (uint64x2_t)vnegq_s64(v60)));
    if (v58 + (v10 & 0x3F) >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v61[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v60))), (int8x16_t)v52);
    }
    v10 += v58;
  }
  else
  {
    int v29 = 1;
  }
  int v62 = a4 >> 6;
  if (v62 != 2)
  {
    LODWORD(v65) = 0;
    LODWORD(v64) = 0;
    unint64_t v66 = v10;
    goto LABEL_34;
  }
  unint64_t v63 = v10 + 8;
  if (v12 < v10 + 8)
  {
    LODWORD(v64) = 0;
    unint64_t v63 = v10;
LABEL_33:
    LODWORD(v65) = 0;
    int v29 = 1;
    unint64_t v66 = v63;
    goto LABEL_34;
  }
  uint64_t v64 = *(void *)(v9 + 8 * (v10 >> 6)) >> v10;
  if ((v10 & 0x3F) >= 0x39) {
    v64 |= *(void *)(v9 + 8 * (v10 >> 6) + 8) << -(v10 & 0x3F);
  }
  unint64_t v66 = v10 + 16;
  LODWORD(v64) = (char)v64;
  if (v12 < v10 + 16) {
    goto LABEL_33;
  }
  uint64_t v65 = *(void *)(v9 + 8 * (v63 >> 6)) >> v63;
  if ((v63 & 0x3F) >= 0x39) {
    v65 |= *(void *)(v9 + 8 * (v63 >> 6) + 8) << -(v63 & 0x3F);
  }
  LODWORD(v65) = (char)v65;
LABEL_34:
  int16x8_t v67 = 0uLL;
  int16x8_t v68 = (int16x8_t)vextq_s8((int8x16_t)0, v35, 0xEuLL);
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v66;
  if (v73 <= 0x80 && v12 >= v74)
  {
    unint64_t v77 = v66 & 0x3F;
    int64x2_t v78 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v77));
    int32x4_t v79 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
    int32x4_t v76 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v78)));
    if (v73 + v77 >= 0x81) {
      int32x4_t v76 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v78))), (int8x16_t)v76);
    }
    unint64_t v66 = v74;
  }
  else
  {
    int v29 = 1;
    int32x4_t v76 = 0uLL;
  }
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v33, v33));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  if (v84 < 0x81)
  {
    int32x2_t v85 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
    v86.i64[0] = v85.u32[0];
    v86.i64[1] = v85.u32[1];
    int64x2_t v87 = v86;
    int32x4_t v88 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL)));
    unint64_t v89 = v84 + v66;
    if (v12 >= v84 + v66)
    {
      unint64_t v90 = v66 & 0x3F;
      int64x2_t v91 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v90));
      int8x16_t v92 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int16x8_t v67 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
      if (v84 + v90 >= 0x81) {
        int16x8_t v67 = (int16x8_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), (int8x16_t)v67);
      }
      unint64_t v66 = v89;
    }
    else
    {
      int v29 = 1;
    }
    int32x4_t v93 = (int32x4_t)vshlq_u64((uint64x2_t)v67, (uint64x2_t)vnegq_s64(v87));
    *(int32x2_t *)v67.i8 = vmovn_s64((int64x2_t)v67);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    int16x8_t v94 = (int16x8_t)vzip1q_s32((int32x4_t)v67, v93);
    int16x8_t v95 = (int16x8_t)vshlq_u32((uint32x4_t)v94, (uint32x4_t)vnegq_s32(v88));
    *(int16x4_t *)v94.i8 = vmovn_s32((int32x4_t)v94);
    *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v95);
    int16x8_t v67 = vzip1q_s16(v94, v95);
  }
  else
  {
    int v29 = 1;
  }
  int32x4_t v96 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
  unint64_t v97 = vpaddq_s32(v96, v96).u64[0];
  v98.i64[0] = v97;
  v98.i64[1] = HIDWORD(v97);
  int64x2_t v99 = v98;
  unint64_t v100 = vaddvq_s64(v98);
  if (v100 <= 0x80)
  {
    int32x2_t v102 = vzip1_s32(*(int32x2_t *)v96.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v96, (int8x16_t)v96, 8uLL));
    v103.i64[0] = v102.u32[0];
    v103.i64[1] = v102.u32[1];
    int64x2_t v104 = v103;
    int32x4_t v105 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL)));
    unint64_t v106 = v100 + v66;
    if (v12 >= v100 + v66)
    {
      unint64_t v108 = v66 & 0x3F;
      int64x2_t v109 = vaddq_s64(vzip1q_s64((int64x2_t)0, v99), vdupq_n_s64(v108));
      unint64_t v110 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int32x4_t v107 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v110, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
      if (v100 + v108 >= 0x81) {
        int32x4_t v107 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v110[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), (int8x16_t)v107);
      }
      unint64_t v66 = v106;
    }
    else
    {
      int32x4_t v107 = 0uLL;
      int v29 = 1;
    }
    int32x4_t v111 = (int32x4_t)vshlq_u64((uint64x2_t)v107, (uint64x2_t)vnegq_s64(v104));
    *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    int16x8_t v112 = (int16x8_t)vzip1q_s32(v107, v111);
    int16x8_t v113 = (int16x8_t)vshlq_u32((uint32x4_t)v112, (uint32x4_t)vnegq_s32(v105));
    *(int16x4_t *)v112.i8 = vmovn_s32((int32x4_t)v112);
    *(int16x4_t *)v113.i8 = vmovn_s32((int32x4_t)v113);
    int16x8_t v101 = vzip1q_s16(v112, v113);
  }
  else
  {
    int v29 = 1;
    int16x8_t v101 = 0uLL;
  }
  int32x4_t v114 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v31, v31));
  unint64_t v115 = vpaddq_s32(v114, v114).u64[0];
  v116.i64[0] = v115;
  v116.i64[1] = HIDWORD(v115);
  int64x2_t v117 = v116;
  unint64_t v118 = vaddvq_s64(v116);
  if (v118 > 0x80 || v12 < v118 + v66) {
    goto LABEL_64;
  }
  int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v117), vdupq_n_s64(v66 & 0x3F));
  unint64_t v120 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
  int64x2_t v121 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
  if (v118 + (v66 & 0x3F) >= 0x81) {
    int64x2_t v121 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), (int8x16_t)v121);
  }
  if (v29 || (uint64_t v122 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v122) - (v118 + v66) >= 9))
  {
LABEL_64:
    uint64_t v122 = 0;
    v179 |= 0xFFFFLL << ((8 * (&v179 + 6)) & 0x30);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    char v123 = (uint64_t *)((char *)a1->i64 + a2);
    unint64_t v124 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *char v123 = 0;
    v123[1] = 0;
    int64x2_t v125 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *unint64_t v124 = 0;
    v124[1] = 0;
    *int64x2_t v125 = 0;
    v125[1] = 0;
  }
  else
  {
    int32x2_t v127 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
    int32x2_t v128 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v129.i64[0] = v127.u32[0];
    v129.i64[1] = v127.u32[1];
    int64x2_t v130 = v129;
    v129.i64[0] = v128.u32[0];
    v129.i64[1] = v128.u32[1];
    int32x4_t v131 = (int32x4_t)vshlq_u64((uint64x2_t)v52, (uint64x2_t)vnegq_s64(v130));
    int32x4_t v132 = (int32x4_t)vshlq_u64((uint64x2_t)v76, (uint64x2_t)vnegq_s64(v129));
    *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
    *(int32x2_t *)v131.i8 = vmovn_s64((int64x2_t)v131);
    *(int32x2_t *)v76.i8 = vmovn_s64((int64x2_t)v76);
    *(int32x2_t *)v132.i8 = vmovn_s64((int64x2_t)v132);
    int16x8_t v133 = (int16x8_t)vzip1q_s32(v52, v131);
    int16x8_t v134 = (int16x8_t)vzip1q_s32(v76, v132);
    int16x8_t v135 = (int16x8_t)vshlq_u32((uint32x4_t)v133, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL)))));
    int16x8_t v136 = (int16x8_t)vshlq_u32((uint32x4_t)v134, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v133);
    *(int16x4_t *)v135.i8 = vmovn_s32((int32x4_t)v135);
    *(int16x4_t *)v134.i8 = vmovn_s32((int32x4_t)v134);
    *(int16x4_t *)v136.i8 = vmovn_s32((int32x4_t)v136);
    v137.i64[0] = 0x10001000100010;
    v137.i64[1] = 0x10001000100010;
    v138.i64[0] = 0x10001000100010;
    v138.i64[1] = 0x10001000100010;
    unint64_t v139 = v11 >> 6;
    int16x8_t v140 = vzip1q_s16(v133, v135);
    v135.i64[0] = 0xF000F000F000FLL;
    v135.i64[1] = 0xF000F000F000FLL;
    int16x8_t v141 = vsubq_s16(v137, v53);
    int16x8_t v142 = vzip1q_s16(v134, v136);
    v136.i64[0] = 0xF000F000F000FLL;
    v136.i64[1] = 0xF000F000F000FLL;
    int32x2_t v143 = vzip1_s32(*(int32x2_t *)v114.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v114, (int8x16_t)v114, 8uLL));
    v144.i64[0] = 0xF000F000F000FLL;
    v144.i64[1] = 0xF000F000F000FLL;
    v145.i64[0] = 0x10001000100010;
    v145.i64[1] = 0x10001000100010;
    int16x8_t v146 = vaddq_s16(v53, v135);
    int16x8_t v147 = vaddq_s16(v68, v136);
    int16x8_t v148 = vshlq_s16(v142, vsubq_s16(v138, v68));
    v129.i64[0] = v143.u32[0];
    v129.i64[1] = v143.u32[1];
    int8x16_t v149 = (int8x16_t)vshlq_s16(vshlq_s16(v140, v141), v146);
    int16x8_t v150 = vshlq_s16(v148, v147);
    int16x8_t v151 = vshlq_s16(vshlq_s16(v67, vsubq_s16(v138, v33)), vaddq_s16(v33, v136));
    int16x8_t v152 = vshlq_s16(vshlq_s16(v101, vsubq_s16(v138, v32)), vaddq_s16(v32, v136));
    int32x4_t v153 = (int32x4_t)vshlq_u64((uint64x2_t)v121, (uint64x2_t)vnegq_s64(v129));
    *(int32x2_t *)v148.i8 = vmovn_s64(v121);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    int16x8_t v154 = (int16x8_t)vzip1q_s32((int32x4_t)v148, v153);
    int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v154, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v31.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL)))));
    *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
    *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
    int16x8_t v156 = vshlq_s16(vshlq_s16(vzip1q_s16(v154, v155), vsubq_s16(v145, v31)), vaddq_s16(v31, v144));
    if (v62 == 2)
    {
      v157.i64[0] = 0xFFFFFFFF00000000;
      v157.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v158 = vmlal_s8((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v65), v157), vdup_n_s8(v64), (int8x8_t)0x302030201000100);
      int16x8_t v150 = vaddq_s16(v150, v158);
      int16x8_t v151 = vaddq_s16(vaddq_s16(vdupq_n_s16(2 * (int)v65), v158), v151);
      int16x8_t v152 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64), v158), v152);
      int16x8_t v156 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64 + 2 * (int)v65), v158), v156);
    }
    int16x8_t v159 = vdupq_n_s16(v139);
    int16x8_t v160 = vaddq_s16((int16x8_t)vandq_s8(v149, v37), v150);
    int8x16_t v161 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v149.i8, 0);
    int16x8_t v162 = vsubq_s16(v160, (int16x8_t)vandq_s8(v161, v37));
    int16x8_t v163 = vsubq_s16(v151, (int16x8_t)vandq_s8(v161, v36));
    int16x8_t v164 = vsubq_s16(v152, (int16x8_t)vandq_s8(v161, v34));
    int16x8_t v165 = vsubq_s16(v156, (int16x8_t)vandq_s8(v161, v30));
    v166.i64[0] = 0x1000100010001;
    v166.i64[1] = 0x1000100010001;
    if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v166)))
    {
      int8x16_t v167 = (int8x16_t)v162;
      v167.i16[0] = v162.i16[7];
      v167.i16[7] = v162.i16[0];
      int8x16_t v168 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
      int16x8_t v169 = (int16x8_t)vbslq_s8(v168, v167, (int8x16_t)v162);
      int16x8_t v170 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_242EA7480), v168), v169);
      int16x8_t v162 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_242EA7490), v168), v170);
      int16x8_t v171 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v163, (int8x16_t)xmmword_242EA74A0), v168), v163);
      int16x8_t v163 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v171, (int8x16_t)xmmword_242EA74B0), v168), v171);
      int16x8_t v172 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v164, (int8x16_t)xmmword_242EA74C0), v168), v164);
      int16x8_t v164 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v172, (int8x16_t)xmmword_242EA74D0), v168), v172);
      int16x8_t v173 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v165, (int8x16_t)xmmword_242EA74E0), v168), v165);
      int16x8_t v165 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v173, (int8x16_t)xmmword_242EA74F0), v168), v173);
    }
    int32x4_t v174 = (int32x4_t)vaddq_s16(v159, v162);
    int32x4_t v175 = (int32x4_t)vaddq_s16(v163, v159);
    int32x4_t v176 = (int32x4_t)vaddq_s16(v164, v159);
    int32x4_t v177 = (int32x4_t)vaddq_s16(v165, v159);
    *a1 = vuzp1q_s32(v174, v176);
    *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v174, v176);
    int16x8_t v178 = (int32x4_t *)((char *)a1 + 2 * a2);
    *int16x8_t v178 = vuzp1q_s32(v175, v177);
    *(int32x4_t *)((char *)v178 + a2) = vuzp2q_s32(v175, v177);
  }
  return v122;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, __n128 a4, int32x4_t a5, int32x4_t a6, int32x4_t a7)
{
  unsigned int v10 = *a3;
  if (v10 == 63)
  {
    int32x4_t v12 = *(int32x4_t *)a2;
    a5 = *(int32x4_t *)(a2 + 16);
    a6 = *(int32x4_t *)(a2 + 32);
    a7 = *(int32x4_t *)(a2 + 48);
    *(int32x4_t *)a1 = vuzp1q_s32(*(int32x4_t *)a2, a6);
    *(int32x4_t *)(a1 + 32) = vuzp2q_s32(v12, a6);
    *(int32x4_t *)(a1 + 64) = vuzp1q_s32(a5, a7);
    a4 = (__n128)vuzp2q_s32(a5, a7);
    *(__n128 *)(a1 + 96) = a4;
    uint64_t v11 = 64;
  }
  else if (v10 == 1)
  {
    a4 = (__n128)vld1q_dup_s16((const __int16 *)a2);
    *(__n128 *)a1 = a4;
    *(__n128 *)(a1 + 32) = a4;
    *(__n128 *)(a1 + 64) = a4;
    *(__n128 *)(a1 + 96) = a4;
    uint64_t v11 = 2;
  }
  else if (*a3)
  {
    uint64_t v11 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)a1, 32, a2, v10, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
  }
  else
  {
    uint64_t v11 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
  }
  uint64_t v13 = a2 + v11;
  unsigned int v14 = a3[1];
  if (a3[1])
  {
    if (v14 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v13);
      *(__n128 *)(a1 + 128) = a4;
      *(__n128 *)(a1 + 160) = a4;
      *(__n128 *)(a1 + 192) = a4;
      *(__n128 *)(a1 + 224) = a4;
      uint64_t v16 = 2;
    }
    else if (v14 == 63)
    {
      int32x4_t v15 = *(int32x4_t *)v13;
      a5 = *(int32x4_t *)(v13 + 16);
      a6 = *(int32x4_t *)(v13 + 32);
      a7 = *(int32x4_t *)(v13 + 48);
      *(int32x4_t *)(a1 + 128) = vuzp1q_s32(*(int32x4_t *)v13, a6);
      *(int32x4_t *)(a1 + 160) = vuzp2q_s32(v15, a6);
      *(int32x4_t *)(a1 + 192) = vuzp1q_s32(a5, a7);
      a4 = (__n128)vuzp2q_s32(a5, a7);
      *(__n128 *)(a1 + 224) = a4;
      uint64_t v16 = 64;
    }
    else
    {
      uint64_t v16 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 128), 32, v13, v14, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
    }
  }
  else
  {
    uint64_t v16 = 0;
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 192) = 0;
    *(void *)(a1 + 200) = 0;
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
  }
  uint64_t v17 = v13 + v16;
  unsigned int v18 = a3[2];
  if (a3[2])
  {
    if (v18 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v17);
      *(__n128 *)(a1 + 16) = a4;
      *(__n128 *)(a1 + 48) = a4;
      *(__n128 *)(a1 + 80) = a4;
      *(__n128 *)(a1 + 112) = a4;
      uint64_t v20 = 2;
    }
    else if (v18 == 63)
    {
      int32x4_t v19 = *(int32x4_t *)v17;
      a5 = *(int32x4_t *)(v17 + 16);
      a6 = *(int32x4_t *)(v17 + 32);
      a7 = *(int32x4_t *)(v17 + 48);
      *(int32x4_t *)(a1 + 16) = vuzp1q_s32(*(int32x4_t *)v17, a6);
      *(int32x4_t *)(a1 + 48) = vuzp2q_s32(v19, a6);
      *(int32x4_t *)(a1 + 80) = vuzp1q_s32(a5, a7);
      a4 = (__n128)vuzp2q_s32(a5, a7);
      *(__n128 *)(a1 + 112) = a4;
      uint64_t v20 = 64;
    }
    else
    {
      uint64_t v20 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 16), 32, v17, v18, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
    }
  }
  else
  {
    uint64_t v20 = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
  }
  uint64_t v21 = v17 + v20;
  unsigned int v22 = a3[3];
  if (a3[3])
  {
    if (v22 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v21);
      *(__n128 *)(a1 + 144) = a4;
      *(__n128 *)(a1 + 176) = a4;
      *(__n128 *)(a1 + 208) = a4;
      *(__n128 *)(a1 + 240) = a4;
      uint64_t v24 = 2;
    }
    else if (v22 == 63)
    {
      int32x4_t v23 = *(int32x4_t *)v21;
      a5 = *(int32x4_t *)(v21 + 16);
      a6 = *(int32x4_t *)(v21 + 32);
      a7 = *(int32x4_t *)(v21 + 48);
      *(int32x4_t *)(a1 + 144) = vuzp1q_s32(*(int32x4_t *)v21, a6);
      *(int32x4_t *)(a1 + 176) = vuzp2q_s32(v23, a6);
      *(int32x4_t *)(a1 + 208) = vuzp1q_s32(a5, a7);
      a4 = (__n128)vuzp2q_s32(a5, a7);
      *(__n128 *)(a1 + 240) = a4;
      uint64_t v24 = 64;
    }
    else
    {
      uint64_t v24 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 144), 32, v21, v22, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
    }
  }
  else
  {
    uint64_t v24 = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
    *(void *)(a1 + 240) = 0;
    *(void *)(a1 + 248) = 0;
  }
  uint64_t v25 = v21 + v24;
  unsigned int v26 = a3[4];
  if (a3[4])
  {
    if (v26 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v25);
      *(__n128 *)(a1 + 256) = a4;
      *(__n128 *)(a1 + 288) = a4;
      *(__n128 *)(a1 + 320) = a4;
      *(__n128 *)(a1 + 352) = a4;
      uint64_t v28 = 2;
    }
    else if (v26 == 63)
    {
      int32x4_t v27 = *(int32x4_t *)v25;
      a5 = *(int32x4_t *)(v25 + 16);
      a6 = *(int32x4_t *)(v25 + 32);
      a7 = *(int32x4_t *)(v25 + 48);
      *(int32x4_t *)(a1 + 256) = vuzp1q_s32(*(int32x4_t *)v25, a6);
      *(int32x4_t *)(a1 + 288) = vuzp2q_s32(v27, a6);
      *(int32x4_t *)(a1 + 320) = vuzp1q_s32(a5, a7);
      a4 = (__n128)vuzp2q_s32(a5, a7);
      *(__n128 *)(a1 + 352) = a4;
      uint64_t v28 = 64;
    }
    else
    {
      uint64_t v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 256), 32, v25, v26, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
    }
  }
  else
  {
    uint64_t v28 = 0;
    *(void *)(a1 + 256) = 0;
    *(void *)(a1 + 264) = 0;
    *(void *)(a1 + 288) = 0;
    *(void *)(a1 + 296) = 0;
    *(void *)(a1 + 320) = 0;
    *(void *)(a1 + 328) = 0;
    *(void *)(a1 + 352) = 0;
    *(void *)(a1 + 360) = 0;
  }
  uint64_t v29 = v25 + v28;
  unsigned int v30 = a3[5];
  if (a3[5])
  {
    if (v30 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v29);
      *(__n128 *)(a1 + 384) = a4;
      *(__n128 *)(a1 + 416) = a4;
      *(__n128 *)(a1 + 448) = a4;
      *(__n128 *)(a1 + 480) = a4;
      uint64_t v32 = 2;
    }
    else if (v30 == 63)
    {
      int32x4_t v31 = *(int32x4_t *)v29;
      a5 = *(int32x4_t *)(v29 + 16);
      a6 = *(int32x4_t *)(v29 + 32);
      a7 = *(int32x4_t *)(v29 + 48);
      *(int32x4_t *)(a1 + 384) = vuzp1q_s32(*(int32x4_t *)v29, a6);
      *(int32x4_t *)(a1 + 416) = vuzp2q_s32(v31, a6);
      *(int32x4_t *)(a1 + 448) = vuzp1q_s32(a5, a7);
      a4 = (__n128)vuzp2q_s32(a5, a7);
      *(__n128 *)(a1 + 480) = a4;
      uint64_t v32 = 64;
    }
    else
    {
      uint64_t v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 384), 32, v29, v30, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
    }
  }
  else
  {
    uint64_t v32 = 0;
    *(void *)(a1 + 384) = 0;
    *(void *)(a1 + 392) = 0;
    *(void *)(a1 + 416) = 0;
    *(void *)(a1 + 424) = 0;
    *(void *)(a1 + 448) = 0;
    *(void *)(a1 + 456) = 0;
    *(void *)(a1 + 480) = 0;
    *(void *)(a1 + 488) = 0;
  }
  uint64_t v33 = v29 + v32;
  unsigned int v34 = a3[6];
  if (a3[6])
  {
    if (v34 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v33);
      *(__n128 *)(a1 + 272) = a4;
      *(__n128 *)(a1 + 304) = a4;
      *(__n128 *)(a1 + 336) = a4;
      *(__n128 *)(a1 + 368) = a4;
      uint64_t result = 2;
    }
    else if (v34 == 63)
    {
      int32x4_t v35 = *(int32x4_t *)v33;
      a5 = *(int32x4_t *)(v33 + 16);
      a6 = *(int32x4_t *)(v33 + 32);
      a7 = *(int32x4_t *)(v33 + 48);
      *(int32x4_t *)(a1 + 272) = vuzp1q_s32(*(int32x4_t *)v33, a6);
      *(int32x4_t *)(a1 + 304) = vuzp2q_s32(v35, a6);
      *(int32x4_t *)(a1 + 336) = vuzp1q_s32(a5, a7);
      a4 = (__n128)vuzp2q_s32(a5, a7);
      *(__n128 *)(a1 + 368) = a4;
      uint64_t result = 64;
    }
    else
    {
      uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 272), 32, v33, v34, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
    }
  }
  else
  {
    uint64_t result = 0;
    *(void *)(a1 + 272) = 0;
    *(void *)(a1 + 280) = 0;
    *(void *)(a1 + 304) = 0;
    *(void *)(a1 + 312) = 0;
    *(void *)(a1 + 336) = 0;
    *(void *)(a1 + 344) = 0;
    *(void *)(a1 + 368) = 0;
    *(void *)(a1 + 376) = 0;
  }
  unsigned int v37 = a3[7];
  if (!a3[7])
  {
    *(void *)(a1 + 400) = 0;
    *(void *)(a1 + 408) = 0;
    *(void *)(a1 + 432) = 0;
    *(void *)(a1 + 440) = 0;
    *(void *)(a1 + 464) = 0;
    *(void *)(a1 + 472) = 0;
    *(void *)(a1 + 496) = 0;
    *(void *)(a1 + 504) = 0;
    return result;
  }
  uint64_t v38 = v33 + result;
  if (v37 == 1)
  {
    int16x8_t v43 = vld1q_dup_s16((const __int16 *)v38);
    *(int16x8_t *)(a1 + 400) = v43;
    *(int16x8_t *)(a1 + 432) = v43;
    *(int16x8_t *)(a1 + 464) = v43;
    goto LABEL_56;
  }
  if (v37 == 63)
  {
    int32x4_t v39 = *(int32x4_t *)v38;
    int32x4_t v40 = *(int32x4_t *)(v38 + 16);
    int32x4_t v41 = *(int32x4_t *)(v38 + 32);
    int32x4_t v42 = *(int32x4_t *)(v38 + 48);
    *(int32x4_t *)(a1 + 400) = vuzp1q_s32(*(int32x4_t *)v38, v41);
    *(int32x4_t *)(a1 + 432) = vuzp2q_s32(v39, v41);
    *(int32x4_t *)(a1 + 464) = vuzp1q_s32(v40, v42);
    int16x8_t v43 = (int16x8_t)vuzp2q_s32(v40, v42);
LABEL_56:
    *(int16x8_t *)(a1 + 496) = v43;
    return result;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int32x4_t *)(a1 + 400), 32, v38, v37, a4.n128_f64[0], *(double *)a5.i64, *(double *)a6.i64, *(int8x8_t *)a7.i8);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int16x8_t *a1, char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, int16x4_t a14)
{
  int32x4_t v14 = *(int32x4_t *)((char *)a3 + a4);
  int16x8_t v15 = (int16x8_t)vzip1q_s32(*a3, v14);
  int16x8_t v16 = (int16x8_t)vzip2q_s32(*a3, v14);
  uint64_t v17 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v18 = *v17;
  int32x4_t v19 = *(int32x4_t *)((char *)v17 + a4);
  int16x8_t v20 = (int16x8_t)vzip1q_s32(*v17, v19);
  int16x8_t v21 = (int16x8_t)vzip2q_s32(*v17, v19);
  int16x8_t v22 = vdupq_lane_s16(*(int16x4_t *)v15.i8, 0);
  int16x8_t v23 = vsubq_s16(v15, v22);
  int16x8_t v24 = vsubq_s16(v20, v22);
  int16x8_t v25 = vsubq_s16(v16, v22);
  int16x8_t v26 = vsubq_s16(v21, v22);
  v18.i16[0] = vmaxvq_s16(v23);
  v19.i16[0] = vminvq_s16(v23);
  int16x8_t v27 = vdupq_lane_s16(*(int16x4_t *)v18.i8, 0);
  int16x8_t v28 = vdupq_lane_s16(*(int16x4_t *)v19.i8, 0);
  v29.i64[0] = 0x8000800080008000;
  v29.i64[1] = 0x8000800080008000;
  int16x8_t v30 = vmaxq_s16(v27, v29);
  v31.i64[0] = 0x8000800080008000;
  v31.i64[1] = 0x8000800080008000;
  int16x8_t v32 = vminq_s16(v28, v31);
  int16x8_t v33 = vzip1q_s16(v27, v28);
  int8x16_t v34 = (int8x16_t)vceqzq_s16(v33);
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v36 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v33)), v34);
  v34.i16[0] = vmaxvq_s16(v24);
  a14.i16[0] = vminvq_s16(v24);
  int16x8_t v37 = vdupq_lane_s16(*(int16x4_t *)v34.i8, 0);
  int16x8_t v38 = vdupq_lane_s16(a14, 0);
  int16x8_t v39 = vpmaxq_s16(v36, v36);
  int16x8_t v40 = vmaxq_s16(v30, v37);
  int16x8_t v41 = vminq_s16(v32, v38);
  int16x8_t v42 = vzip1q_s16(v37, v38);
  int8x16_t v43 = (int8x16_t)vceqzq_s16(v42);
  int16x8_t v44 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v42)), v43);
  int16x8_t v45 = vpmaxq_s16(v44, v44);
  v43.i16[0] = vmaxvq_s16(v25);
  int16x8_t v46 = vdupq_lane_s16(*(int16x4_t *)v43.i8, 0);
  v37.i16[0] = vminvq_s16(v25);
  int16x8_t v47 = vdupq_lane_s16(*(int16x4_t *)v37.i8, 0);
  int16x8_t v48 = vmaxq_s16(v40, v46);
  int16x8_t v49 = vminq_s16(v41, v47);
  int16x8_t v50 = vzip1q_s16(v46, v47);
  int8x16_t v51 = (int8x16_t)vceqzq_s16(v50);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v50)), v51);
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  v51.i16[0] = vmaxvq_s16(v26);
  v47.i16[0] = vminvq_s16(v26);
  int16x8_t v54 = vdupq_lane_s16(*(int16x4_t *)v51.i8, 0);
  int16x8_t v55 = vdupq_lane_s16(*(int16x4_t *)v47.i8, 0);
  int16x8_t v56 = vmaxq_s16(v48, v54);
  int16x8_t v57 = vminq_s16(v49, v55);
  int16x8_t v58 = vzip1q_s16(v54, v55);
  int16x8_t v59 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v58)), (int8x16_t)vceqzq_s16(v58));
  int16x8_t v60 = vpmaxq_s16(v59, v59);
  int16x8_t v61 = vmaxq_s16(vmaxq_s16(v39, v45), vmaxq_s16(v53, v60));
  int16x8_t v62 = vclzq_s16(vsubq_s16(v56, v57));
  int16x8_t v63 = vsubq_s16(v35, v62);
  int8x16_t v64 = (int8x16_t)vcgtq_s16(v61, v63);
  int16x8_t v65 = (int16x8_t)vbslq_s8(v64, (int8x16_t)v63, (int8x16_t)v61);
  if (vmaxvq_s16(v65))
  {
    char v66 = 0;
    unint64_t v67 = 0;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    v69.i64[0] = 0xF000F000F000FLL;
    v69.i64[1] = 0xF000F000F000FLL;
    int8x16_t v70 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v68, vsubq_s16(v69, v62)), v57), v64);
    v71.i64[0] = 0x8000800080008;
    v71.i64[1] = 0x8000800080008;
    v68.i64[0] = 0x3000300030003;
    v68.i64[1] = 0x3000300030003;
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v39), v68), (int16x8_t)0);
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v45), v68), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v53), v68), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v60), v68), (int16x8_t)0);
    int16x8_t v76 = vsubq_s16(v65, v72);
    int16x8_t v77 = vsubq_s16(v65, v73);
    int16x8_t v78 = vsubq_s16(v65, v74);
    int16x8_t v79 = vsubq_s16(v65, v75);
    int8x16_t v80 = (int8x16_t)vceqq_s16(vaddq_s16(v75, v74), vnegq_s16(vaddq_s16(v72, v73)));
    v73.i64[0] = 0x4000400040004;
    v73.i64[1] = 0x4000400040004;
    int16x8_t v81 = (int16x8_t)vbicq_s8((int8x16_t)v73, v80);
    int16x8_t v82 = (int16x8_t)vorrq_s8((int8x16_t)v81, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v65), (int8x16_t)v68), vandq_s8(v64, v71)));
    if (a5 >= 4 && a6 >= 2)
    {
      int16x8_t v376 = v20;
      int16x8_t v377 = v21;
      int16x8_t v378 = v16;
      int8x16_t v375 = v70;
      v83.i32[0] = v15.u16[2];
      v83.i32[1] = v15.u16[1];
      int32x2_t v84 = vshl_n_s32(vsub_s32(v83, vdup_n_s32(v15.u16[0])), 0x18uLL);
      int v85 = v84.i32[1] >> 24;
      int16x4_t v86 = (int16x4_t)vshl_s32(v84, (int32x2_t)0xFFFFFFEAFFFFFFE9);
      unsigned __int32 v87 = v84.i32[0];
      v88.i64[0] = 0xFFFFFFFF00000000;
      v88.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v89 = vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v84.i32[0] >> 24), v88), vdupq_n_s16(v84.i32[1] >> 24), (int16x8_t)xmmword_242EA76B0);
      int16x8_t v90 = vsubq_s16(v23, v89);
      int16x8_t v91 = vsubq_s16(vaddq_s16(vdupq_n_s16(-v86.i32[0]), v24), v89);
      int16x8_t v92 = vsubq_s16(vaddq_s16(vdupq_n_s16(-v86.i32[1]), v25), v89);
      int16x8_t v93 = vaddq_s16(vdupq_n_s16(-v86.i32[0] - v86.i32[1]), v26);
      int16x8_t v94 = vsubq_s16(v93, v89);
      v93.i16[0] = vmaxvq_s16(v90);
      v86.i16[0] = vminvq_s16(v90);
      int16x8_t v95 = vdupq_lane_s16(*(int16x4_t *)v93.i8, 0);
      int16x8_t v96 = vdupq_lane_s16(v86, 0);
      v97.i64[0] = 0x8000800080008000;
      v97.i64[1] = 0x8000800080008000;
      int16x8_t v98 = vmaxq_s16(v95, v97);
      v97.i64[0] = 0x8000800080008000;
      v97.i64[1] = 0x8000800080008000;
      int8x16_t v379 = (int8x16_t)v26;
      int16x8_t v99 = vminq_s16(v96, v97);
      int16x8_t v100 = vzip1q_s16(v95, v96);
      int8x16_t v101 = (int8x16_t)vceqzq_s16(v100);
      v102.i64[0] = 0x10001000100010;
      v102.i64[1] = 0x10001000100010;
      int16x8_t v103 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v100)), v101);
      int16x8_t v104 = vpmaxq_s16(v103, v103);
      v101.i16[0] = vmaxvq_s16(v91);
      v16.i16[0] = vminvq_s16(v91);
      int16x8_t v105 = vdupq_lane_s16(*(int16x4_t *)v101.i8, 0);
      int16x8_t v106 = vdupq_lane_s16(*(int16x4_t *)v16.i8, 0);
      int16x8_t v107 = vmaxq_s16(v98, v105);
      int16x8_t v108 = vminq_s16(v99, v106);
      int16x8_t v109 = vzip1q_s16(v105, v106);
      int8x16_t v110 = (int8x16_t)vceqzq_s16(v109);
      int16x8_t v111 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v109)), v110);
      v110.i16[0] = vmaxvq_s16(v92);
      int8x16_t v112 = (int8x16_t)v25;
      int16x8_t v113 = v79;
      v79.i16[0] = vminvq_s16(v92);
      int16x8_t v114 = vdupq_lane_s16(*(int16x4_t *)v110.i8, 0);
      int16x8_t v115 = vdupq_lane_s16(*(int16x4_t *)v79.i8, 0);
      int16x8_t v116 = vpmaxq_s16(v111, v111);
      int16x8_t v117 = vmaxq_s16(v107, v114);
      int16x8_t v118 = vminq_s16(v108, v115);
      int16x8_t v119 = vzip1q_s16(v114, v115);
      int8x16_t v120 = (int8x16_t)vceqzq_s16(v119);
      int16x8_t v121 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v119)), v120);
      int8x16_t v122 = (int8x16_t)v23;
      int16x8_t v123 = v78;
      int16x8_t v124 = vpmaxq_s16(v121, v121);
      v121.i16[0] = vmaxvq_s16(v94);
      int16x8_t v125 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      v120.i16[0] = vminvq_s16(v94);
      int16x8_t v126 = vdupq_lane_s16(*(int16x4_t *)v120.i8, 0);
      int16x8_t v127 = vminq_s16(v118, v126);
      int16x8_t v128 = vzip1q_s16(v125, v126);
      int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
      int16x8_t v130 = vpmaxq_s16(v129, v129);
      int16x8_t v131 = vmaxq_s16(vmaxq_s16(v104, v116), vmaxq_s16(v124, v130));
      int16x8_t v132 = vclzq_s16(vsubq_s16(vmaxq_s16(v117, v125), v127));
      int16x8_t v133 = vsubq_s16(v102, v132);
      int8x16_t v134 = (int8x16_t)vcgtq_s16(v131, v133);
      int16x8_t v135 = (int16x8_t)vbslq_s8(v134, (int8x16_t)v133, (int8x16_t)v131);
      v131.i64[0] = 0x1000100010001;
      v131.i64[1] = 0x1000100010001;
      int16x8_t v136 = vmaxq_s16(v135, v131);
      v135.i64[0] = 0x3000300030003;
      v135.i64[1] = 0x3000300030003;
      int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v104), v135), (int16x8_t)0);
      int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v116), v135), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v124), v135), (int16x8_t)0);
      int16x8_t v140 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v130), v135), (int16x8_t)0);
      int16x8_t v141 = vsubq_s16(v136, v137);
      int16x8_t v142 = vsubq_s16(v136, v138);
      int16x8_t v143 = vsubq_s16(v136, v139);
      int16x8_t v144 = vsubq_s16(v136, v140);
      int8x16_t v145 = (int8x16_t)vceqq_s16(vaddq_s16(v140, v139), vnegq_s16(vaddq_s16(v137, v138)));
      v140.i64[0] = 0x4000400040004;
      v140.i64[1] = 0x4000400040004;
      int16x8_t v146 = (int16x8_t)vbicq_s8((int8x16_t)v140, v145);
      v147.i64[0] = 0x7000700070007;
      v147.i64[1] = 0x7000700070007;
      int16x8_t v148 = (int16x8_t)vandq_s8((int8x16_t)v63, v64);
      int16x8_t v149 = vmulq_s16(v76, v147);
      int16x8_t v150 = vshlq_n_s16(vaddq_s16(vaddq_s16(v123, v77), v113), 3uLL);
      int16x8_t v151 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v149, v148), v150), vaddq_s16(v81, v81)), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbslq_s8(v134, (int8x16_t)vaddq_s16(v136, v102), (int8x16_t)v102), v141, v147), vshlq_n_s16(vaddq_s16(vaddq_s16(v143, v142), v144), 3uLL)), vaddq_s16(v146, v146))), 0);
      v140.i16[0] = vaddvq_s16(v151);
      int v152 = v140.u16[0];
      unint64_t v67 = v85 | HIWORD(v87);
      if (v140.i16[0])
      {
        v153.i64[0] = 0x2000200020002;
        v153.i64[1] = 0x2000200020002;
        v154.i64[0] = 0xA000A000A000ALL;
        v154.i64[1] = 0xA000A000A000ALL;
        int16x8_t v155 = (int16x8_t)vbslq_s8(v134, v154, v153);
        v154.i64[0] = -1;
        v154.i64[1] = -1;
        int8x16_t v156 = vorrq_s8((int8x16_t)v146, (int8x16_t)v155);
        v155.i64[0] = 0xF000F000F000FLL;
        v155.i64[1] = 0xF000F000F000FLL;
        int8x16_t v157 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v154, vsubq_s16(v155, v132)), v127), v134);
        int8x16_t v158 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v151, 0xFuLL));
        int8x16_t v371 = vbslq_s8(v158, (int8x16_t)v91, (int8x16_t)v24);
        int8x16_t v373 = vbslq_s8(v158, (int8x16_t)v92, v112);
        int8x16_t v379 = vbslq_s8(v158, (int8x16_t)v94, v379);
        int16x8_t v77 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v142, (int8x16_t)v77);
        int8x16_t v70 = vbslq_s8(v158, v157, v375);
        int16x8_t v65 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v136, (int8x16_t)v65);
        int16x8_t v82 = (int16x8_t)vbslq_s8(v158, v156, (int8x16_t)v82);
        int8x16_t v369 = vbslq_s8(v158, (int8x16_t)v90, v122);
        int16x8_t v370 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v141, (int8x16_t)v76);
        int16x8_t v149 = vmulq_s16(v370, v147);
        int16x8_t v372 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v143, (int8x16_t)v123);
        int16x8_t v374 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v144, (int8x16_t)v113);
        int16x8_t v150 = vshlq_n_s16(vaddq_s16(vaddq_s16(v372, v77), v374), 3uLL);
      }
      else
      {
        int8x16_t v369 = v122;
        int16x8_t v370 = v76;
        int8x16_t v371 = (int8x16_t)v24;
        int16x8_t v372 = v123;
        int8x16_t v373 = v112;
        int16x8_t v374 = v113;
        int8x16_t v70 = v375;
      }
      int16x4_t v161 = *(int16x4_t *)v377.i8;
      v162.i64[0] = 0x8000800080008000;
      v162.i64[1] = 0x8000800080008000;
      v163.i64[0] = 0x8000800080008000;
      v163.i64[1] = 0x8000800080008000;
      v164.i64[0] = 0x7000700070007;
      v164.i64[1] = 0x7000700070007;
      v165.i64[0] = 0x3000300030003;
      v165.i64[1] = 0x3000300030003;
      int16x8_t v166 = vsubq_s16(v15, (int16x8_t)vqtbl1q_s8((int8x16_t)v15, (int8x16_t)xmmword_242EA7520));
      int8x16_t v167 = (int8x16_t)v376;
      v167.i16[7] = v15.i16[7];
      int16x8_t v168 = vsubq_s16(v376, (int16x8_t)vqtbl1q_s8(v167, (int8x16_t)xmmword_242EA7530));
      int8x16_t v169 = (int8x16_t)v378;
      v169.i16[7] = v15.i16[7];
      int16x8_t v170 = vsubq_s16(v378, (int16x8_t)vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7540));
      int8x16_t v171 = (int8x16_t)v377;
      v171.i16[7] = v15.i16[7];
      int16x4_t v172 = (int16x4_t)0x100010001000F0ELL;
      int16x8_t v173 = v166;
      v173.i16[0] = v166.i16[7];
      v173.i16[7] = v166.i16[0];
      v166.i16[0] = vmaxvq_s16(v173);
      v172.i16[0] = vminvq_s16(v173);
      int16x8_t v174 = vdupq_lane_s16(*(int16x4_t *)v166.i8, 0);
      int16x8_t v175 = vdupq_lane_s16(v172, 0);
      int16x8_t v176 = vsubq_s16(v377, (int16x8_t)vqtbl1q_s8(v171, (int8x16_t)xmmword_242EA7550));
      int16x8_t v177 = vmaxq_s16(v174, v162);
      int16x8_t v178 = vminq_s16(v175, v163);
      int16x8_t v179 = vzip1q_s16(v174, v175);
      int8x16_t v180 = (int8x16_t)vceqzq_s16(v179);
      int16x8_t v181 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v179)), v180);
      int16x8_t v182 = vpmaxq_s16(v181, v181);
      v180.i16[0] = vmaxvq_s16(v168);
      int16x8_t v183 = vdupq_lane_s16(*(int16x4_t *)v180.i8, 0);
      v161.i16[0] = vminvq_s16(v168);
      int16x8_t v184 = vdupq_lane_s16(v161, 0);
      int16x8_t v185 = vmaxq_s16(v177, v183);
      int16x8_t v186 = vminq_s16(v178, v184);
      int16x8_t v187 = vzip1q_s16(v183, v184);
      int8x16_t v188 = (int8x16_t)vceqzq_s16(v187);
      int16x8_t v189 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v187)), v188);
      int16x8_t v190 = vpmaxq_s16(v189, v189);
      v188.i16[0] = vmaxvq_s16(v170);
      v162.i16[0] = vminvq_s16(v170);
      int16x8_t v191 = vdupq_lane_s16(*(int16x4_t *)v188.i8, 0);
      int16x8_t v192 = vdupq_lane_s16(*(int16x4_t *)v162.i8, 0);
      int16x8_t v193 = vmaxq_s16(v185, v191);
      int16x8_t v194 = vminq_s16(v186, v192);
      int16x8_t v195 = vzip1q_s16(v191, v192);
      int8x16_t v196 = (int8x16_t)vceqzq_s16(v195);
      int16x8_t v197 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v195)), v196);
      v196.i16[0] = vmaxvq_s16(v176);
      v134.i16[0] = vminvq_s16(v176);
      int16x8_t v198 = vdupq_lane_s16(*(int16x4_t *)v196.i8, 0);
      int16x8_t v199 = vdupq_lane_s16(*(int16x4_t *)v134.i8, 0);
      int16x8_t v200 = vpmaxq_s16(v197, v197);
      int16x8_t v201 = vmaxq_s16(v193, v198);
      int16x8_t v202 = vminq_s16(v194, v199);
      int16x8_t v203 = vzip1q_s16(v198, v199);
      int16x8_t v204 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v203)), (int8x16_t)vceqzq_s16(v203));
      int16x8_t v205 = vpmaxq_s16(v204, v204);
      int16x8_t v206 = vmaxq_s16(vmaxq_s16(v182, v190), vmaxq_s16(v200, v205));
      int16x8_t v207 = vclzq_s16(vsubq_s16(v201, v202));
      int16x8_t v208 = vsubq_s16(v102, v207);
      int8x16_t v209 = (int8x16_t)vcgtq_s16(v206, v208);
      int16x8_t v210 = (int16x8_t)vbslq_s8(v209, (int8x16_t)v208, (int8x16_t)v206);
      int16x8_t v211 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v182), v165), (int16x8_t)0);
      int16x8_t v212 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v190), v165), (int16x8_t)0);
      int16x8_t v213 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v200), v165), (int16x8_t)0);
      int16x8_t v214 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v205), v165), (int16x8_t)0);
      int16x8_t v215 = vsubq_s16(v210, v211);
      int16x8_t v216 = vsubq_s16(v210, v212);
      int16x8_t v217 = vsubq_s16(v210, v213);
      int16x8_t v218 = vsubq_s16(v210, v214);
      int8x16_t v219 = (int8x16_t)vceqq_s16(vaddq_s16(v214, v213), vnegq_s16(vaddq_s16(v211, v212)));
      v212.i64[0] = 0x4000400040004;
      v212.i64[1] = 0x4000400040004;
      int16x8_t v220 = (int16x8_t)vbicq_s8((int8x16_t)v212, v219);
      v213.i64[0] = 0x8000800080008;
      v213.i64[1] = 0x8000800080008;
      int16x8_t v221 = (int16x8_t)vandq_s8((int8x16_t)v82, (int8x16_t)v165);
      v222.i64[0] = 0x2000200020002;
      v222.i64[1] = 0x2000200020002;
      int16x8_t v223 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)v65, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8((int8x16_t)v82, (int8x16_t)v213))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16(v82, v82), (int8x16_t)v213)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v221, v222), (int8x16_t)v102), v149)), v150), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)v208, v209), v215, v164), vshlq_n_s16(vaddq_s16(vaddq_s16(v217, v216), v218), 3uLL)), vaddq_s16(v220, v220))),
               0);
      v213.i16[0] = vaddvq_s16(v223);
      int v224 = v213.u16[0];
      if (v213.i16[0])
      {
        v225.i64[0] = 0x9000900090009;
        v225.i64[1] = 0x9000900090009;
        v226.i64[0] = -1;
        v226.i64[1] = -1;
        int8x16_t v227 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v210), (int8x16_t)v222), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v209, v225), (int16x8_t)vmvnq_s8(v209))), (int8x16_t)v220);
        v228.i64[0] = 0xF000F000F000FLL;
        v228.i64[1] = 0xF000F000F000FLL;
        int8x16_t v229 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v226, vsubq_s16(v228, v207)), v202), v209);
        int8x16_t v230 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v223, 0xFuLL));
        v22.i16[0] = vbslq_s8(v230, vextq_s8((int8x16_t)v15, (int8x16_t)v15, 0xEuLL), (int8x16_t)v22).u16[0];
        int16x8_t v23 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v173, v369);
        int16x8_t v24 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v168, v371);
        int16x8_t v25 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v170, v373);
        int16x8_t v26 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v176, v379);
        int16x8_t v76 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v215, (int8x16_t)v370);
        int16x8_t v77 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v216, (int8x16_t)v77);
        int16x8_t v78 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v217, (int8x16_t)v372);
        int16x8_t v79 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v218, (int8x16_t)v374);
        int8x16_t v70 = vbslq_s8(v230, v229, v70);
        int16x8_t v65 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v210, (int8x16_t)v65);
        int16x8_t v82 = (int16x8_t)vbslq_s8(v230, v227, (int8x16_t)v82);
      }
      else
      {
        int16x8_t v26 = (int16x8_t)v379;
        int16x8_t v25 = (int16x8_t)v373;
        int16x8_t v79 = v374;
        int16x8_t v24 = (int16x8_t)v371;
        int16x8_t v78 = v372;
        int16x8_t v23 = (int16x8_t)v369;
        int16x8_t v76 = v370;
      }
      int16x8_t v21 = v377;
      int16x8_t v16 = v378;
      int16x8_t v20 = v376;
      if (v152) {
        BOOL v231 = v224 == 0;
      }
      else {
        BOOL v231 = 0;
      }
      char v66 = v231;
    }
    v232.i64[0] = 0x8000800080008;
    v232.i64[1] = 0x8000800080008;
    int16x8_t v233 = (int16x8_t)vandq_s8((int8x16_t)v82, v232);
    v234.i64[0] = 0x3000300030003;
    v234.i64[1] = 0x3000300030003;
    v235.i64[0] = 0x2000200020002;
    v235.i64[1] = 0x2000200020002;
    int8x16_t v236 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8((int8x16_t)v82, v234), v235);
    v235.i64[0] = 0x10001000100010;
    v235.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(7 * v76.i16[0]
                                    + 8 * vaddq_s16(v78, vaddq_s16(v77, v79)).u16[0]
                                    + ((2 * v82.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)v65, (int8x16_t)vceqzq_s16(v233)).u16[0]
                                    + vandq_s8(v236, (int8x16_t)v235).u16[0])
                          + 29) >= 0x200)
    {
      *a1 = v15;
      a1[1] = v20;
      char v159 = 63;
      unint64_t v160 = 64;
      a1[2] = v16;
      a1[3] = v21;
    }
    else
    {
      int8x16_t v237 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v238 = 8 * (a1 & 7);
      if (v238) {
        uint64_t v239 = *v237 & ~(-1 << v238);
      }
      else {
        uint64_t v239 = 0;
      }
      if (v65.i16[0]) {
        uint64_t v240 = (16 * v65.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v240 = 0;
      }
      *a2 = v82.i8[0] << 6;
      unint64_t v241 = (v240 & 0xFFFFFFFFFF0000F0 | ((unint64_t)v22.u16[0] << 8) | v82.i8[0] & 0xF) >> 2;
      unint64_t v242 = (v241 << v238) | v239;
      if (v238 >= 0x2A)
      {
        *int8x16_t v237 = v242;
        unint64_t v242 = v241 >> (-8 * (a1 & 7u));
      }
      unint64_t v243 = v238 + 22;
      int8x16_t v244 = (int8x16_t)vsubq_s16(v65, v76);
      int8x16_t v245 = (int8x16_t)vsubq_s16(v65, v77);
      int8x16_t v246 = (int8x16_t)vsubq_s16(v65, v78);
      int8x16_t v247 = (int8x16_t)vsubq_s16(v65, v79);
      *(uint8x8_t *)v244.i8 = vqmovn_u16((uint16x8_t)v244);
      *(uint8x8_t *)v245.i8 = vqmovn_u16((uint16x8_t)v245);
      *(uint8x8_t *)v246.i8 = vqmovn_u16((uint16x8_t)v246);
      *(uint8x8_t *)v247.i8 = vqmovn_u16((uint16x8_t)v247);
      v244.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v244, v245), (int16x8_t)vzip1q_s8(v246, v247)).u32[0];
      v246.i64[0] = 0x202020202020202;
      v246.i64[1] = 0x202020202020202;
      int8x16_t v248 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v82.i8, (int8x8_t)0x4000400040004)))), v246);
      v246.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v246.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v247.i64[0] = -1;
      v247.i64[1] = -1;
      uint8x16_t v249 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v247, (uint8x16_t)vorrq_s8(v248, v246)), (int8x16_t)v244.u32[0]);
      int16x8_t v250 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v248.i8);
      uint16x8_t v251 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v249.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v250)), (int16x8_t)vmovl_high_u8(v249));
      uint16x8_t v252 = (uint16x8_t)vpaddq_s16(v250, (int16x8_t)vmovl_high_u8((uint8x16_t)v248));
      int32x4_t v253 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v252.i8);
      int32x4_t v254 = (int32x4_t)vmovl_high_u16(v252);
      int32x4_t v255 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v251.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v253)), (int32x4_t)vshlq_u32(vmovl_high_u16(v251), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v254)));
      int32x4_t v256 = vpaddq_s32(v253, v254);
      v257.i64[0] = v255.u32[0];
      v257.i64[1] = v255.u32[1];
      uint64x2_t v258 = (uint64x2_t)v257;
      v257.i64[0] = v255.u32[2];
      v257.i64[1] = v255.u32[3];
      uint64x2_t v259 = (uint64x2_t)v257;
      v257.i64[0] = v256.u32[0];
      v257.i64[1] = v256.u32[1];
      int64x2_t v260 = v257;
      v257.i64[0] = v256.u32[2];
      v257.i64[1] = v256.u32[3];
      int64x2_t v261 = vpaddq_s64((int64x2_t)vshlq_u64(v258, (uint64x2_t)vzip1q_s64((int64x2_t)0, v260)), (int64x2_t)vshlq_u64(v259, (uint64x2_t)vzip1q_s64((int64x2_t)0, v257)));
      int64x2_t v262 = vpaddq_s64(v260, v257);
      uint64_t v263 = (v238 + 22) & 0x3E;
      unint64_t v264 = (v261.i64[0] << v263) | v242;
      if ((unint64_t)(v262.i64[0] + v263) >= 0x40)
      {
        *(void *)((char *)v237 + ((v243 >> 3) & 8)) = v264;
        unint64_t v264 = (unint64_t)v261.i64[0] >> -(char)v263;
      }
      unint64_t v265 = v262.i64[0] + v243;
      unint64_t v266 = v264 | (v261.i64[1] << v265);
      if ((v265 & 0x3F) + v262.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v265 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v266;
        unint64_t v266 = (unint64_t)v261.i64[1] >> -(v265 & 0x3F);
        if ((v265 & 0x3F) == 0) {
          unint64_t v266 = 0;
        }
      }
      int8x16_t v267 = (int8x16_t)vceqq_s16(v65, v76);
      unint64_t v268 = v265 + v262.i64[1];
      v269.i64[0] = -1;
      v269.i64[1] = -1;
      int16x8_t v270 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v233, v233), (int8x16_t)0, 0xEuLL), (int8x16_t)v65);
      v271.i64[0] = 0xF000F000F000FLL;
      v271.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v272 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v269, (uint16x8_t)vaddq_s16(v270, v271)), v70);
      int32x4_t v273 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v270.i8);
      int32x4_t v274 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v272.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v273)), (int32x4_t)vmovl_high_u16(v272));
      int32x4_t v275 = vpaddq_s32(v273, (int32x4_t)vmovl_high_u16((uint16x8_t)v270));
      v276.i64[0] = v274.u32[0];
      v276.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)v276;
      v276.i64[0] = v274.u32[2];
      v276.i64[1] = v274.u32[3];
      uint64x2_t v278 = (uint64x2_t)v276;
      v276.i64[0] = v275.u32[0];
      v276.i64[1] = v275.u32[1];
      int64x2_t v279 = v276;
      v276.i64[0] = v275.u32[2];
      v276.i64[1] = v275.u32[3];
      int64x2_t v280 = vpaddq_s64((int64x2_t)vshlq_u64(v277, (uint64x2_t)vzip1q_s64((int64x2_t)0, v279)), (int64x2_t)vshlq_u64(v278, (uint64x2_t)vzip1q_s64((int64x2_t)0, v276)));
      int64x2_t v281 = vpaddq_s64(v279, v276);
      unint64_t v282 = (v280.i64[0] << v268) | v266;
      if (v281.i64[0] + (v268 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v268 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v282;
        unint64_t v282 = (unint64_t)v280.i64[0] >> -(v268 & 0x3F);
        if ((v268 & 0x3F) == 0) {
          unint64_t v282 = 0;
        }
      }
      int16x8_t v283 = (int16x8_t)vandq_s8(v70, v267);
      uint64_t v284 = v281.i64[1];
      unint64_t v285 = v281.i64[0] + v268;
      unint64_t v286 = v282 | (v280.i64[1] << v285);
      if ((v285 & 0x3F) + v281.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
        unint64_t v286 = (unint64_t)v280.i64[1] >> -(v285 & 0x3F);
        if ((v285 & 0x3F) == 0) {
          unint64_t v286 = 0;
        }
      }
      int8x16_t v287 = (int8x16_t)vceqq_s16(v65, v77);
      int8x16_t v288 = (int8x16_t)vaddq_s16(v283, v23);
      unint64_t v289 = v285 + v284;
      if (v66)
      {
        v286 |= v67 << v289;
        if ((v289 & 0x3F) >= 0x30)
        {
          *(void *)((char *)v237 + ((v289 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
          unint64_t v286 = v67 >> -(v289 & 0x3F);
        }
        v289 += 16;
      }
      int16x8_t v290 = (int16x8_t)vandq_s8(v70, v287);
      int16x8_t v291 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v76, 0xEuLL);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      v293.i64[0] = -1;
      v293.i64[1] = -1;
      uint16x8_t v294 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v293, (uint16x8_t)vaddq_s16(v291, v292)), v288);
      int32x4_t v295 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v296 = (int32x4_t)vmovl_high_u16((uint16x8_t)v291);
      int32x4_t v297 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v294.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v295)), (int32x4_t)vshlq_u32(vmovl_high_u16(v294), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v296)));
      int32x4_t v298 = vpaddq_s32(v295, v296);
      v299.i64[0] = v297.u32[0];
      v299.i64[1] = v297.u32[1];
      uint64x2_t v300 = (uint64x2_t)v299;
      v299.i64[0] = v297.u32[2];
      v299.i64[1] = v297.u32[3];
      uint64x2_t v301 = (uint64x2_t)v299;
      v299.i64[0] = v298.u32[0];
      v299.i64[1] = v298.u32[1];
      int64x2_t v302 = v299;
      v299.i64[0] = v298.u32[2];
      v299.i64[1] = v298.u32[3];
      int64x2_t v303 = vpaddq_s64((int64x2_t)vshlq_u64(v300, (uint64x2_t)vzip1q_s64((int64x2_t)0, v302)), (int64x2_t)vshlq_u64(v301, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)));
      int64x2_t v304 = vpaddq_s64(v302, v299);
      unint64_t v305 = (v303.i64[0] << v289) | v286;
      if (v304.i64[0] + (v289 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v289 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v303.i64[0] >> -(v289 & 0x3F);
        if ((v289 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      int8x16_t v306 = (int8x16_t)vceqq_s16(v65, v78);
      int8x16_t v307 = (int8x16_t)vaddq_s16(v24, v290);
      unint64_t v308 = v304.i64[0] + v289;
      uint64_t v309 = (v304.i64[0] + v289) & 0x3F;
      unint64_t v310 = v305 | (v303.i64[1] << v308);
      if ((v308 & 0x3F) + v304.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v308 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v310;
        unint64_t v310 = (unint64_t)v303.i64[1] >> -(char)v309;
        if (!v309) {
          unint64_t v310 = 0;
        }
      }
      int16x8_t v311 = (int16x8_t)vandq_s8(v70, v306);
      unint64_t v312 = v308 + v304.i64[1];
      v313.i64[0] = 0xF000F000F000FLL;
      v313.i64[1] = 0xF000F000F000FLL;
      v314.i64[0] = -1;
      v314.i64[1] = -1;
      uint16x8_t v315 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v314, (uint16x8_t)vaddq_s16(v77, v313)), v307);
      int32x4_t v316 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v317 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v318 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v315.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v316)), (int32x4_t)vshlq_u32(vmovl_high_u16(v315), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v317)));
      int32x4_t v319 = vpaddq_s32(v316, v317);
      v320.i64[0] = v318.u32[0];
      v320.i64[1] = v318.u32[1];
      uint64x2_t v321 = (uint64x2_t)v320;
      v320.i64[0] = v318.u32[2];
      v320.i64[1] = v318.u32[3];
      uint64x2_t v322 = (uint64x2_t)v320;
      v320.i64[0] = v319.u32[0];
      v320.i64[1] = v319.u32[1];
      int64x2_t v323 = v320;
      v320.i64[0] = v319.u32[2];
      v320.i64[1] = v319.u32[3];
      int64x2_t v324 = vpaddq_s64((int64x2_t)vshlq_u64(v321, (uint64x2_t)vzip1q_s64((int64x2_t)0, v323)), (int64x2_t)vshlq_u64(v322, (uint64x2_t)vzip1q_s64((int64x2_t)0, v320)));
      int64x2_t v325 = vpaddq_s64(v323, v320);
      unint64_t v326 = (v324.i64[0] << v312) | v310;
      if (v325.i64[0] + (v312 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v312 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v326;
        unint64_t v326 = (unint64_t)v324.i64[0] >> -(v312 & 0x3F);
        if ((v312 & 0x3F) == 0) {
          unint64_t v326 = 0;
        }
      }
      int8x16_t v327 = (int8x16_t)vceqq_s16(v65, v79);
      int8x16_t v328 = (int8x16_t)vaddq_s16(v25, v311);
      unint64_t v329 = v325.i64[0] + v312;
      unint64_t v330 = v326 | (v324.i64[1] << v329);
      if ((v329 & 0x3F) + v325.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v329 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330;
        unint64_t v330 = (unint64_t)v324.i64[1] >> -(v329 & 0x3F);
        if ((v329 & 0x3F) == 0) {
          unint64_t v330 = 0;
        }
      }
      int16x8_t v331 = (int16x8_t)vandq_s8(v70, v327);
      unint64_t v332 = v329 + v325.i64[1];
      v333.i64[0] = 0xF000F000F000FLL;
      v333.i64[1] = 0xF000F000F000FLL;
      v334.i64[0] = -1;
      v334.i64[1] = -1;
      uint16x8_t v335 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v334, (uint16x8_t)vaddq_s16(v78, v333)), v328);
      int32x4_t v336 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v337 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v338 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v335.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v336)), (int32x4_t)vshlq_u32(vmovl_high_u16(v335), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v337)));
      int32x4_t v339 = vpaddq_s32(v336, v337);
      v340.i64[0] = v338.u32[0];
      v340.i64[1] = v338.u32[1];
      uint64x2_t v341 = (uint64x2_t)v340;
      v340.i64[0] = v338.u32[2];
      v340.i64[1] = v338.u32[3];
      uint64x2_t v342 = (uint64x2_t)v340;
      v340.i64[0] = v339.u32[0];
      v340.i64[1] = v339.u32[1];
      int64x2_t v343 = v340;
      v340.i64[0] = v339.u32[2];
      v340.i64[1] = v339.u32[3];
      int64x2_t v344 = vpaddq_s64((int64x2_t)vshlq_u64(v341, (uint64x2_t)vzip1q_s64((int64x2_t)0, v343)), (int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v340)));
      int64x2_t v345 = vpaddq_s64(v343, v340);
      unint64_t v346 = (v344.i64[0] << v332) | v330;
      if (v345.i64[0] + (v332 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v346;
        unint64_t v346 = (unint64_t)v344.i64[0] >> -(v332 & 0x3F);
        if ((v332 & 0x3F) == 0) {
          unint64_t v346 = 0;
        }
      }
      int8x16_t v347 = (int8x16_t)vaddq_s16(v26, v331);
      unint64_t v348 = v345.i64[0] + v332;
      unint64_t v349 = v346 | (v344.i64[1] << v348);
      if ((v348 & 0x3F) + v345.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v344.i64[1] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348 + v345.i64[1];
      v351.i64[0] = 0xF000F000F000FLL;
      v351.i64[1] = 0xF000F000F000FLL;
      v352.i64[0] = -1;
      v352.i64[1] = -1;
      uint16x8_t v353 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v352, (uint16x8_t)vaddq_s16(v79, v351)), v347);
      int32x4_t v354 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v355 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v356 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)), (int32x4_t)vshlq_u32(vmovl_high_u16(v353), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)));
      int32x4_t v357 = vpaddq_s32(v354, v355);
      v358.i64[0] = v356.u32[0];
      v358.i64[1] = v356.u32[1];
      uint64x2_t v359 = (uint64x2_t)v358;
      v358.i64[0] = v356.u32[2];
      v358.i64[1] = v356.u32[3];
      uint64x2_t v360 = (uint64x2_t)v358;
      v358.i64[0] = v357.u32[0];
      v358.i64[1] = v357.u32[1];
      int64x2_t v361 = v358;
      v358.i64[0] = v357.u32[2];
      v358.i64[1] = v357.u32[3];
      int64x2_t v362 = vpaddq_s64((int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v361)), (int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v358)));
      int64x2_t v363 = vpaddq_s64(v361, v358);
      unint64_t v364 = (v362.i64[0] << v350) | v349;
      if (v363.i64[0] + (v350 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v237 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v364;
        if ((v350 & 0x3F) != 0) {
          unint64_t v364 = (unint64_t)v362.i64[0] >> -(v350 & 0x3F);
        }
        else {
          unint64_t v364 = 0;
        }
      }
      unint64_t v365 = v363.i64[0] + v350;
      unint64_t v366 = v364 | (v362.i64[1] << v365);
      if ((v365 & 0x3F) + v363.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
        unint64_t v366 = (unint64_t)v362.i64[1] >> -(v365 & 0x3F);
        if ((v365 & 0x3F) == 0) {
          unint64_t v366 = 0;
        }
      }
      unint64_t v367 = v365 + v363.i64[1];
      if ((v367 & 0x3F) != 0) {
        *(void *)((char *)v237 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
      }
      unint64_t v160 = (v367 - v238 + 7) >> 3;
      char v159 = *a2 | (v160 - 1);
    }
  }
  else
  {
    a1->i16[0] = a3->i16[0];
    char v159 = 1;
    unint64_t v160 = 2;
  }
  *a2 = v159;
  return v160;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int16x8_t *a3, char *a4, int a5, int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, int16x4_t a14)
{
  uint64_t v17 = a3;
  int32x4_t v19 = (int32x4_t *)result;
  if (a5 >= 8) {
    unsigned int v20 = 8;
  }
  else {
    unsigned int v20 = a5;
  }
  if (a6 >= 4) {
    unsigned int v21 = 4;
  }
  else {
    unsigned int v21 = a6;
  }
  if (v20 && v21)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v20, v21, a7, a8, a9, a10, a11, a12, a13, a14);
    uint64_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v22 = 4 * a2;
  int16x8_t v23 = a4 + 1;
  if (a6 <= 4) {
    int v24 = 4;
  }
  else {
    int v24 = a6;
  }
  unsigned int v25 = v24 - 4;
  if (v25 >= 4) {
    int v26 = 4;
  }
  else {
    int v26 = v25;
  }
  if (v20 && v26)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v23, (int32x4_t *)((char *)v19 + v22), a2, v20, v26, a7, a8, a9, a10, a11, a12, a13, a14);
    uint64_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    *int16x8_t v23 = 0;
  }
  int16x8_t v27 = a4 + 2;
  if (a5 <= 8) {
    int v28 = 8;
  }
  else {
    int v28 = a5;
  }
  unsigned int v29 = v28 - 8;
  if (v29 >= 8) {
    int v30 = 8;
  }
  else {
    int v30 = v29;
  }
  if (v30 && v21)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v27, v19 + 1, a2, v30, v21, a7, a8, a9, a10, a11, a12, a13, a14);
    uint64_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v31 = a4 + 3;
  }
  else
  {
    *int16x8_t v27 = 0;
    int16x8_t v31 = a4 + 3;
    if (!v30) {
      goto LABEL_33;
    }
  }
  if (v26)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v31, (int32x4_t *)((char *)v19 + v22 + 16), a2, v30, v26, a7, a8, a9, a10, a11, a12, a13, a14);
    uint64_t v17 = (int16x8_t *)((char *)v17 + result);
    goto LABEL_34;
  }
LABEL_33:
  *int16x8_t v31 = 0;
LABEL_34:
  int16x8_t v32 = a4 + 4;
  if (a6 <= 8) {
    int v33 = 8;
  }
  else {
    int v33 = a6;
  }
  unsigned int v34 = v33 - 8;
  if (v34 >= 4) {
    int v35 = 4;
  }
  else {
    int v35 = v34;
  }
  if (v20 && v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v32, (int32x4_t *)((char *)v19 + 8 * a2), a2, v20, v35, a7, a8, a9, a10, a11, a12, a13, a14);
    uint64_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    *int16x8_t v32 = 0;
  }
  int16x8_t v36 = a4 + 5;
  if (a6 <= 12) {
    int v37 = 12;
  }
  else {
    int v37 = a6;
  }
  unsigned int v38 = v37 - 12;
  if (v38 >= 4) {
    int v39 = 4;
  }
  else {
    int v39 = v38;
  }
  if (v20 && v39)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v36, (int32x4_t *)((char *)v19 + 12 * a2), a2, v20, v39, a7, a8, a9, a10, a11, a12, a13, a14);
    uint64_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  else
  {
    *int16x8_t v36 = 0;
    int16x8_t v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  if (v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v40, (int32x4_t *)((char *)v19 + 8 * a2 + 16), a2, v30, v35, a7, a8, a9, a10, a11, a12, a13, a14);
    uint64_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v41 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int16x8_t v40 = 0;
  int16x8_t v41 = a4 + 7;
  if (!v30)
  {
LABEL_62:
    *int16x8_t v41 = 0;
    return result;
  }
LABEL_58:
  if (!v39) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v41, (int32x4_t *)((char *)v19 + 12 * a2 + 16), a2, v30, v39, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int64x2_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, double a5, double a6, double a7, int8x8_t a8)
{
  unint64_t v8 = 8 * (a3 & 7);
  unint64_t v9 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 + 22;
  unint64_t v11 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v8;
  if (v8 >= 0x2B) {
    v11 |= *(void *)(v9 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v12 = (8 * (a3 & 7)) | 0x200;
  int v13 = (a4 >> 6) | (4 * v11);
  uint16x8_t v14 = (uint16x8_t)vdupq_n_s16(v13 & 0xF);
  a8.i32[0] = v13 & 0xF;
  v15.i64[0] = 0x3000300030003;
  v15.i64[1] = 0x3000300030003;
  int16x8_t v16 = (int16x8_t)vbicq_s8((int8x16_t)vdupq_n_s16(((v11 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v15));
  int8x16_t v17 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v18.i64[0] = 0x202020202020202;
  v18.i64[1] = 0x202020202020202;
  int8x16_t v19 = vandq_s8(v17, v18);
  if (vmaxvq_s8(v19) < 1)
  {
    int v29 = 0;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    int16x8_t v31 = v16;
    int16x8_t v32 = v16;
    int16x8_t v33 = v16;
    v34.i64[0] = -1;
    v34.i64[1] = -1;
    int8x16_t v35 = (int8x16_t)v16;
    v36.i64[0] = -1;
    v36.i64[1] = -1;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
  }
  else
  {
    int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v19, v19));
    int32x4_t v21 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v20, v20));
    unint64_t v22 = vpaddq_s32(v21, v21).u64[0];
    v23.i64[0] = v22;
    v23.i64[1] = HIDWORD(v22);
    int64x2_t v24 = v23;
    unint64_t v25 = vaddvq_s64(v23);
    unint64_t v26 = v25 + v10;
    if (v25 <= 0x80 && v12 >= v26)
    {
      int64x2_t v38 = vaddq_s64(vzip1q_s64((int64x2_t)0, v24), vdupq_n_s64(v10 & 0x3E));
      int v39 = (int64x2_t *)(v9 + ((v10 >> 3) & 8));
      int32x4_t v28 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v39, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39->i64[0], 0), (uint64x2_t)vnegq_s64(v38)));
      if (v25 + (v10 & 0x3E) < 0x81)
      {
        int v29 = 0;
      }
      else
      {
        int v29 = 0;
        int32x4_t v28 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v39[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v38))), (int8x16_t)v28);
      }
      unint64_t v10 = v26;
    }
    else
    {
      int32x4_t v28 = 0uLL;
      int v29 = 1;
    }
    int32x2_t v40 = vzip1_s32(*(int32x2_t *)v21.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL));
    v41.i64[0] = v40.u32[0];
    v41.i64[1] = v40.u32[1];
    int32x4_t v42 = (int32x4_t)vshlq_u64((uint64x2_t)v28, (uint64x2_t)vnegq_s64(v41));
    *(int32x2_t *)v28.i8 = vmovn_s64((int64x2_t)v28);
    *(int32x2_t *)v42.i8 = vmovn_s64((int64x2_t)v42);
    int16x8_t v43 = (int16x8_t)vzip1q_s32(v28, v42);
    int16x8_t v44 = (int16x8_t)vshlq_u32((uint32x4_t)v43, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v20.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v20, (int8x16_t)v20, 8uLL)))));
    *(int16x4_t *)v43.i8 = vmovn_s32((int32x4_t)v43);
    *(int16x4_t *)v44.i8 = vmovn_s32((int32x4_t)v44);
    int16x8_t v45 = vzip1q_s16(v43, v44);
    *(int8x8_t *)v45.i8 = vzip1_s8(vmovn_s16(v45), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v45, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v19.i8, *(int8x8_t *)v14.i8))))));
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    int8x16_t v46 = vshlq_s8((int8x16_t)v43, v19);
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v46.i32[0] = vandq_s8((int8x16_t)v45, vaddq_s8(v46, (int8x16_t)v43)).u32[0];
    int16x8_t v47 = vdupq_n_s16(v46.i8[0]);
    int16x8_t v48 = vdupq_n_s16(v46.i8[1]);
    int16x8_t v49 = vdupq_n_s16(v46.i8[2]);
    int16x8_t v50 = vdupq_n_s16(v46.i8[3]);
    int8x16_t v35 = (int8x16_t)vsubq_s16(v16, v47);
    int16x8_t v33 = vsubq_s16(v16, v48);
    int16x8_t v32 = vsubq_s16(v16, v49);
    int16x8_t v31 = vsubq_s16(v16, v50);
    int8x16_t v37 = (int8x16_t)vceqzq_s16(v47);
    int8x16_t v36 = (int8x16_t)vceqzq_s16(v48);
    int8x16_t v34 = (int8x16_t)vceqzq_s16(v49);
    int8x16_t v30 = (int8x16_t)vceqzq_s16(v50);
  }
  v51.i64[0] = 0x7000700070007;
  v51.i64[1] = 0x7000700070007;
  int32x4_t v52 = 0uLL;
  int16x8_t v53 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v14, v51), (int8x16_t)0, 0xEuLL), (int8x16_t)v16);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v53, v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  if (v58 <= 0x80 && v12 >= v58 + v10)
  {
    int64x2_t v60 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v10 & 0x3F));
    int16x8_t v61 = (int64x2_t *)(v9 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v61, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61->i64[0], 0), (uint64x2_t)vnegq_s64(v60)));
    if (v58 + (v10 & 0x3F) >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v61[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v60))), (int8x16_t)v52);
    }
    v10 += v58;
  }
  else
  {
    int v29 = 1;
  }
  int v62 = a4 >> 6;
  if (v62 != 2)
  {
    LODWORD(v65) = 0;
    LODWORD(v64) = 0;
    unint64_t v66 = v10;
    goto LABEL_34;
  }
  unint64_t v63 = v10 + 8;
  if (v12 < v10 + 8)
  {
    LODWORD(v64) = 0;
    unint64_t v63 = v10;
LABEL_33:
    LODWORD(v65) = 0;
    int v29 = 1;
    unint64_t v66 = v63;
    goto LABEL_34;
  }
  uint64_t v64 = *(void *)(v9 + 8 * (v10 >> 6)) >> v10;
  if ((v10 & 0x3F) >= 0x39) {
    v64 |= *(void *)(v9 + 8 * (v10 >> 6) + 8) << -(v10 & 0x3F);
  }
  unint64_t v66 = v10 + 16;
  LODWORD(v64) = (char)v64;
  if (v12 < v10 + 16) {
    goto LABEL_33;
  }
  uint64_t v65 = *(void *)(v9 + 8 * (v63 >> 6)) >> v63;
  if ((v63 & 0x3F) >= 0x39) {
    v65 |= *(void *)(v9 + 8 * (v63 >> 6) + 8) << -(v63 & 0x3F);
  }
  LODWORD(v65) = (char)v65;
LABEL_34:
  int16x8_t v67 = 0uLL;
  int16x8_t v68 = (int16x8_t)vextq_s8((int8x16_t)0, v35, 0xEuLL);
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v66;
  if (v73 <= 0x80 && v12 >= v74)
  {
    unint64_t v77 = v66 & 0x3F;
    int64x2_t v78 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v77));
    int16x8_t v79 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
    int32x4_t v76 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v78)));
    if (v73 + v77 >= 0x81) {
      int32x4_t v76 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v78))), (int8x16_t)v76);
    }
    unint64_t v66 = v74;
  }
  else
  {
    int v29 = 1;
    int32x4_t v76 = 0uLL;
  }
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v33, v33));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  if (v84 < 0x81)
  {
    int32x2_t v85 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
    v86.i64[0] = v85.u32[0];
    v86.i64[1] = v85.u32[1];
    int64x2_t v87 = v86;
    int32x4_t v88 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL)));
    unint64_t v89 = v84 + v66;
    if (v12 >= v84 + v66)
    {
      unint64_t v90 = v66 & 0x3F;
      int64x2_t v91 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v90));
      int16x8_t v92 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int16x8_t v67 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
      if (v84 + v90 >= 0x81) {
        int16x8_t v67 = (int16x8_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), (int8x16_t)v67);
      }
      unint64_t v66 = v89;
    }
    else
    {
      int v29 = 1;
    }
    int32x4_t v93 = (int32x4_t)vshlq_u64((uint64x2_t)v67, (uint64x2_t)vnegq_s64(v87));
    *(int32x2_t *)v67.i8 = vmovn_s64((int64x2_t)v67);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    int16x8_t v94 = (int16x8_t)vzip1q_s32((int32x4_t)v67, v93);
    int16x8_t v95 = (int16x8_t)vshlq_u32((uint32x4_t)v94, (uint32x4_t)vnegq_s32(v88));
    *(int16x4_t *)v94.i8 = vmovn_s32((int32x4_t)v94);
    *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v95);
    int16x8_t v67 = vzip1q_s16(v94, v95);
  }
  else
  {
    int v29 = 1;
  }
  int32x4_t v96 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
  unint64_t v97 = vpaddq_s32(v96, v96).u64[0];
  v98.i64[0] = v97;
  v98.i64[1] = HIDWORD(v97);
  int64x2_t v99 = v98;
  unint64_t v100 = vaddvq_s64(v98);
  if (v100 <= 0x80)
  {
    int32x2_t v102 = vzip1_s32(*(int32x2_t *)v96.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v96, (int8x16_t)v96, 8uLL));
    v103.i64[0] = v102.u32[0];
    v103.i64[1] = v102.u32[1];
    int64x2_t v104 = v103;
    int32x4_t v105 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL)));
    unint64_t v106 = v100 + v66;
    if (v12 >= v100 + v66)
    {
      unint64_t v108 = v66 & 0x3F;
      int64x2_t v109 = vaddq_s64(vzip1q_s64((int64x2_t)0, v99), vdupq_n_s64(v108));
      int8x16_t v110 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int32x4_t v107 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v110, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
      if (v100 + v108 >= 0x81) {
        int32x4_t v107 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v110[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), (int8x16_t)v107);
      }
      unint64_t v66 = v106;
    }
    else
    {
      int32x4_t v107 = 0uLL;
      int v29 = 1;
    }
    int32x4_t v111 = (int32x4_t)vshlq_u64((uint64x2_t)v107, (uint64x2_t)vnegq_s64(v104));
    *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    int16x8_t v112 = (int16x8_t)vzip1q_s32(v107, v111);
    int16x8_t v113 = (int16x8_t)vshlq_u32((uint32x4_t)v112, (uint32x4_t)vnegq_s32(v105));
    *(int16x4_t *)v112.i8 = vmovn_s32((int32x4_t)v112);
    *(int16x4_t *)v113.i8 = vmovn_s32((int32x4_t)v113);
    int16x8_t v101 = vzip1q_s16(v112, v113);
  }
  else
  {
    int v29 = 1;
    int16x8_t v101 = 0uLL;
  }
  int32x4_t v114 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v31, v31));
  unint64_t v115 = vpaddq_s32(v114, v114).u64[0];
  v116.i64[0] = v115;
  v116.i64[1] = HIDWORD(v115);
  int64x2_t v117 = v116;
  unint64_t v118 = vaddvq_s64(v116);
  if (v118 > 0x80 || v12 < v118 + v66) {
    goto LABEL_64;
  }
  int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v117), vdupq_n_s64(v66 & 0x3F));
  int8x16_t v120 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
  int64x2_t v121 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
  if (v118 + (v66 & 0x3F) >= 0x81) {
    int64x2_t v121 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), (int8x16_t)v121);
  }
  if (v29 || (uint64_t v122 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v122) - (v118 + v66) >= 9))
  {
LABEL_64:
    uint64_t v122 = 0;
    v176 |= 0xFFFFLL << ((8 * (&v176 + 6)) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 2 * a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 3 * a2) = 0;
  }
  else
  {
    int32x2_t v124 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
    int32x2_t v125 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v126.i64[0] = v124.u32[0];
    v126.i64[1] = v124.u32[1];
    int64x2_t v127 = v126;
    v126.i64[0] = v125.u32[0];
    v126.i64[1] = v125.u32[1];
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v52, (uint64x2_t)vnegq_s64(v127));
    int32x4_t v129 = (int32x4_t)vshlq_u64((uint64x2_t)v76, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    *(int32x2_t *)v76.i8 = vmovn_s64((int64x2_t)v76);
    *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
    int16x8_t v130 = (int16x8_t)vzip1q_s32(v52, v128);
    int16x8_t v131 = (int16x8_t)vzip1q_s32(v76, v129);
    int16x8_t v132 = (int16x8_t)vshlq_u32((uint32x4_t)v130, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL)))));
    int16x8_t v133 = (int16x8_t)vshlq_u32((uint32x4_t)v131, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    *(int16x4_t *)v132.i8 = vmovn_s32((int32x4_t)v132);
    *(int16x4_t *)v131.i8 = vmovn_s32((int32x4_t)v131);
    *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v133);
    v134.i64[0] = 0x10001000100010;
    v134.i64[1] = 0x10001000100010;
    v135.i64[0] = 0x10001000100010;
    v135.i64[1] = 0x10001000100010;
    unint64_t v136 = v11 >> 6;
    int16x8_t v137 = vzip1q_s16(v130, v132);
    v132.i64[0] = 0xF000F000F000FLL;
    v132.i64[1] = 0xF000F000F000FLL;
    int16x8_t v138 = vsubq_s16(v134, v53);
    int16x8_t v139 = vzip1q_s16(v131, v133);
    v133.i64[0] = 0xF000F000F000FLL;
    v133.i64[1] = 0xF000F000F000FLL;
    int32x2_t v140 = vzip1_s32(*(int32x2_t *)v114.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v114, (int8x16_t)v114, 8uLL));
    v141.i64[0] = 0xF000F000F000FLL;
    v141.i64[1] = 0xF000F000F000FLL;
    v142.i64[0] = 0x10001000100010;
    v142.i64[1] = 0x10001000100010;
    int16x8_t v143 = vaddq_s16(v53, v132);
    int16x8_t v144 = vaddq_s16(v68, v133);
    int16x8_t v145 = vshlq_s16(v139, vsubq_s16(v135, v68));
    v126.i64[0] = v140.u32[0];
    v126.i64[1] = v140.u32[1];
    int8x16_t v146 = (int8x16_t)vshlq_s16(vshlq_s16(v137, v138), v143);
    int16x8_t v147 = vshlq_s16(v145, v144);
    int16x8_t v148 = vshlq_s16(vshlq_s16(v67, vsubq_s16(v135, v33)), vaddq_s16(v33, v133));
    int16x8_t v149 = vshlq_s16(vshlq_s16(v101, vsubq_s16(v135, v32)), vaddq_s16(v32, v133));
    int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v121, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v145.i8 = vmovn_s64(v121);
    *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
    int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v145, v150);
    int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v151, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v31.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL)))));
    *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v151);
    *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
    int16x8_t v153 = vshlq_s16(vshlq_s16(vzip1q_s16(v151, v152), vsubq_s16(v142, v31)), vaddq_s16(v31, v141));
    if (v62 == 2)
    {
      v154.i64[0] = 0xFFFFFFFF00000000;
      v154.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v155 = vmlal_s8((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v65), v154), vdup_n_s8(v64), (int8x8_t)0x302030201000100);
      int16x8_t v147 = vaddq_s16(v147, v155);
      int16x8_t v148 = vaddq_s16(vaddq_s16(vdupq_n_s16(2 * (int)v65), v155), v148);
      int16x8_t v149 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64), v155), v149);
      int16x8_t v153 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64 + 2 * (int)v65), v155), v153);
    }
    int16x8_t v156 = vdupq_n_s16(v136);
    int16x8_t v157 = vaddq_s16((int16x8_t)vandq_s8(v146, v37), v147);
    int8x16_t v158 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v146.i8, 0);
    int16x8_t v159 = vsubq_s16(v157, (int16x8_t)vandq_s8(v158, v37));
    int16x8_t v160 = vsubq_s16(v148, (int16x8_t)vandq_s8(v158, v36));
    int16x8_t v161 = vsubq_s16(v149, (int16x8_t)vandq_s8(v158, v34));
    int16x8_t v162 = vsubq_s16(v153, (int16x8_t)vandq_s8(v158, v30));
    v163.i64[0] = 0x1000100010001;
    v163.i64[1] = 0x1000100010001;
    if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v163)))
    {
      int8x16_t v164 = (int8x16_t)v159;
      v164.i16[0] = v159.i16[7];
      v164.i16[7] = v159.i16[0];
      int8x16_t v165 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
      int16x8_t v166 = (int16x8_t)vbslq_s8(v165, v164, (int8x16_t)v159);
      int16x8_t v167 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v166, (int8x16_t)xmmword_242EA7480), v165), v166);
      int16x8_t v159 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v167, (int8x16_t)xmmword_242EA7490), v165), v167);
      int16x8_t v168 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v160, (int8x16_t)xmmword_242EA74A0), v165), v160);
      int16x8_t v160 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v168, (int8x16_t)xmmword_242EA74B0), v165), v168);
      int16x8_t v169 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v161, (int8x16_t)xmmword_242EA74C0), v165), v161);
      int16x8_t v161 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_242EA74D0), v165), v169);
      int16x8_t v170 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v162, (int8x16_t)xmmword_242EA74E0), v165), v162);
      int16x8_t v162 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_242EA74F0), v165), v170);
    }
    int64x2_t v171 = (int64x2_t)vaddq_s16(v156, v159);
    int64x2_t v172 = (int64x2_t)vaddq_s16(v160, v156);
    int64x2_t v173 = (int64x2_t)vaddq_s16(v161, v156);
    int64x2_t v174 = (int64x2_t)vaddq_s16(v162, v156);
    *a1 = vzip1q_s64(v171, v172);
    *(int64x2_t *)((char *)a1 + a2) = vzip2q_s64(v171, v172);
    int16x8_t v175 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int16x8_t v175 = vzip1q_s64(v173, v174);
    *(int64x2_t *)((char *)v175 + a2) = vzip2q_s64(v173, v174);
  }
  return v122;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, __n128 a4, int64x2_t a5, __n128 a6, __n128 a7)
{
  unsigned int v10 = *a3;
  if (v10 == 63)
  {
    int64x2_t v12 = *(int64x2_t *)a2;
    a5 = *(int64x2_t *)(a2 + 16);
    int v13 = (const double *)(a2 + 32);
    *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v13);
    *(int64x2_t *)a1 = vzip1q_s64(*(int64x2_t *)a2, a5);
    a4 = (__n128)vzip2q_s64(v12, a5);
    *(__n128 *)(a1 + 64) = a4;
    *(__n128 *)(a1 + 128) = a6;
    *(__n128 *)(a1 + 192) = a7;
    uint64_t v11 = 64;
  }
  else if (v10 == 1)
  {
    a4 = (__n128)vld1q_dup_s16((const __int16 *)a2);
    *(__n128 *)a1 = a4;
    *(__n128 *)(a1 + 64) = a4;
    *(__n128 *)(a1 + 128) = a4;
    *(__n128 *)(a1 + 192) = a4;
    uint64_t v11 = 2;
  }
  else if (*a3)
  {
    uint64_t v11 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)a1, 64, a2, v10, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
  }
  else
  {
    uint64_t v11 = 0;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 192) = 0;
    *(void *)(a1 + 200) = 0;
  }
  uint64_t v14 = a2 + v11;
  unsigned int v15 = a3[1];
  if (a3[1])
  {
    if (v15 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v14);
      *(__n128 *)(a1 + 16) = a4;
      *(__n128 *)(a1 + 80) = a4;
      *(__n128 *)(a1 + 144) = a4;
      *(__n128 *)(a1 + 208) = a4;
      uint64_t v18 = 2;
    }
    else if (v15 == 63)
    {
      int64x2_t v16 = *(int64x2_t *)v14;
      a5 = *(int64x2_t *)(v14 + 16);
      int8x16_t v17 = (const double *)(v14 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v17);
      *(int64x2_t *)(a1 + 16) = vzip1q_s64(*(int64x2_t *)v14, a5);
      a4 = (__n128)vzip2q_s64(v16, a5);
      *(__n128 *)(a1 + 80) = a4;
      *(__n128 *)(a1 + 144) = a6;
      *(__n128 *)(a1 + 208) = a7;
      uint64_t v18 = 64;
    }
    else
    {
      uint64_t v18 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 16), 64, v14, v15, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v18 = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
  }
  uint64_t v19 = v14 + v18;
  unsigned int v20 = a3[2];
  if (a3[2])
  {
    if (v20 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v19);
      *(__n128 *)(a1 + 256) = a4;
      *(__n128 *)(a1 + 320) = a4;
      *(__n128 *)(a1 + 384) = a4;
      *(__n128 *)(a1 + 448) = a4;
      uint64_t v23 = 2;
    }
    else if (v20 == 63)
    {
      int64x2_t v21 = *(int64x2_t *)v19;
      a5 = *(int64x2_t *)(v19 + 16);
      unint64_t v22 = (const double *)(v19 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v22);
      *(int64x2_t *)(a1 + 256) = vzip1q_s64(*(int64x2_t *)v19, a5);
      a4 = (__n128)vzip2q_s64(v21, a5);
      *(__n128 *)(a1 + 320) = a4;
      *(__n128 *)(a1 + 384) = a6;
      *(__n128 *)(a1 + 448) = a7;
      uint64_t v23 = 64;
    }
    else
    {
      uint64_t v23 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 256), 64, v19, v20, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v23 = 0;
    *(void *)(a1 + 256) = 0;
    *(void *)(a1 + 264) = 0;
    *(void *)(a1 + 320) = 0;
    *(void *)(a1 + 328) = 0;
    *(void *)(a1 + 384) = 0;
    *(void *)(a1 + 392) = 0;
    *(void *)(a1 + 448) = 0;
    *(void *)(a1 + 456) = 0;
  }
  uint64_t v24 = v19 + v23;
  unsigned int v25 = a3[3];
  if (a3[3])
  {
    if (v25 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v24);
      *(__n128 *)(a1 + 272) = a4;
      *(__n128 *)(a1 + 336) = a4;
      *(__n128 *)(a1 + 400) = a4;
      *(__n128 *)(a1 + 464) = a4;
      uint64_t v28 = 2;
    }
    else if (v25 == 63)
    {
      int64x2_t v26 = *(int64x2_t *)v24;
      a5 = *(int64x2_t *)(v24 + 16);
      int16x8_t v27 = (const double *)(v24 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v27);
      *(int64x2_t *)(a1 + 272) = vzip1q_s64(*(int64x2_t *)v24, a5);
      a4 = (__n128)vzip2q_s64(v26, a5);
      *(__n128 *)(a1 + 336) = a4;
      *(__n128 *)(a1 + 400) = a6;
      *(__n128 *)(a1 + 464) = a7;
      uint64_t v28 = 64;
    }
    else
    {
      uint64_t v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 272), 64, v24, v25, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v28 = 0;
    *(void *)(a1 + 272) = 0;
    *(void *)(a1 + 280) = 0;
    *(void *)(a1 + 336) = 0;
    *(void *)(a1 + 344) = 0;
    *(void *)(a1 + 400) = 0;
    *(void *)(a1 + 408) = 0;
    *(void *)(a1 + 464) = 0;
    *(void *)(a1 + 472) = 0;
  }
  uint64_t v29 = v24 + v28;
  unsigned int v30 = a3[4];
  if (a3[4])
  {
    if (v30 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v29);
      *(__n128 *)(a1 + 32) = a4;
      *(__n128 *)(a1 + 96) = a4;
      *(__n128 *)(a1 + 160) = a4;
      *(__n128 *)(a1 + 224) = a4;
      uint64_t v33 = 2;
    }
    else if (v30 == 63)
    {
      int64x2_t v31 = *(int64x2_t *)v29;
      a5 = *(int64x2_t *)(v29 + 16);
      int16x8_t v32 = (const double *)(v29 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v32);
      *(int64x2_t *)(a1 + 32) = vzip1q_s64(*(int64x2_t *)v29, a5);
      a4 = (__n128)vzip2q_s64(v31, a5);
      *(__n128 *)(a1 + 96) = a4;
      *(__n128 *)(a1 + 160) = a6;
      *(__n128 *)(a1 + 224) = a7;
      uint64_t v33 = 64;
    }
    else
    {
      uint64_t v33 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 32), 64, v29, v30, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v33 = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
  }
  uint64_t v34 = v29 + v33;
  unsigned int v35 = a3[5];
  if (a3[5])
  {
    if (v35 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v34);
      *(__n128 *)(a1 + 48) = a4;
      *(__n128 *)(a1 + 112) = a4;
      *(__n128 *)(a1 + 176) = a4;
      *(__n128 *)(a1 + 240) = a4;
      uint64_t v38 = 2;
    }
    else if (v35 == 63)
    {
      int64x2_t v36 = *(int64x2_t *)v34;
      a5 = *(int64x2_t *)(v34 + 16);
      int8x16_t v37 = (const double *)(v34 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v37);
      *(int64x2_t *)(a1 + 48) = vzip1q_s64(*(int64x2_t *)v34, a5);
      a4 = (__n128)vzip2q_s64(v36, a5);
      *(__n128 *)(a1 + 112) = a4;
      *(__n128 *)(a1 + 176) = a6;
      *(__n128 *)(a1 + 240) = a7;
      uint64_t v38 = 64;
    }
    else
    {
      uint64_t v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 48), 64, v34, v35, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v38 = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 240) = 0;
    *(void *)(a1 + 248) = 0;
  }
  uint64_t v39 = v34 + v38;
  unsigned int v40 = a3[6];
  if (a3[6])
  {
    if (v40 == 1)
    {
      a4 = (__n128)vld1q_dup_s16((const __int16 *)v39);
      *(__n128 *)(a1 + 288) = a4;
      *(__n128 *)(a1 + 352) = a4;
      *(__n128 *)(a1 + 416) = a4;
      *(__n128 *)(a1 + 480) = a4;
      uint64_t result = 2;
    }
    else if (v40 == 63)
    {
      int64x2_t v41 = *(int64x2_t *)v39;
      a5 = *(int64x2_t *)(v39 + 16);
      int32x4_t v42 = (const double *)(v39 + 32);
      *(float64x2x2_t *)a6.n128_u64 = vld2q_f64(v42);
      *(int64x2_t *)(a1 + 288) = vzip1q_s64(*(int64x2_t *)v39, a5);
      a4 = (__n128)vzip2q_s64(v41, a5);
      *(__n128 *)(a1 + 352) = a4;
      *(__n128 *)(a1 + 416) = a6;
      *(__n128 *)(a1 + 480) = a7;
      uint64_t result = 64;
    }
    else
    {
      uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 288), 64, v39, v40, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t result = 0;
    *(void *)(a1 + 288) = 0;
    *(void *)(a1 + 296) = 0;
    *(void *)(a1 + 352) = 0;
    *(void *)(a1 + 360) = 0;
    *(void *)(a1 + 416) = 0;
    *(void *)(a1 + 424) = 0;
    *(void *)(a1 + 480) = 0;
    *(void *)(a1 + 488) = 0;
  }
  unsigned int v44 = a3[7];
  if (a3[7])
  {
    uint64_t v45 = v39 + result;
    if (v44 == 1)
    {
      int16x8_t v49 = vld1q_dup_s16((const __int16 *)v45);
      *(int16x8_t *)(a1 + 304) = v49;
      *(int16x8_t *)(a1 + 368) = v49;
      *(int16x8_t *)(a1 + 432) = v49;
      *(int16x8_t *)(a1 + 496) = v49;
    }
    else if (v44 == 63)
    {
      int64x2_t v46 = *(int64x2_t *)v45;
      int64x2_t v47 = *(int64x2_t *)(v45 + 16);
      int16x8_t v48 = (const double *)(v45 + 32);
      float64x2x2_t v51 = vld2q_f64(v48);
      *(int64x2_t *)(a1 + 304) = vzip1q_s64(*(int64x2_t *)v45, v47);
      *(int64x2_t *)(a1 + 368) = vzip2q_s64(v46, v47);
      *(float64x2_t *)(a1 + 432) = v51.val[0];
      *(float64x2_t *)(a1 + 496) = v51.val[1];
    }
    else
    {
      return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int64x2_t *)(a1 + 304), 64, v45, v44, a4.n128_f64[0], *(double *)a5.i64, a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    *(void *)(a1 + 304) = 0;
    *(void *)(a1 + 312) = 0;
    *(void *)(a1 + 368) = 0;
    *(void *)(a1 + 376) = 0;
    *(void *)(a1 + 432) = 0;
    *(void *)(a1 + 440) = 0;
    *(void *)(a1 + 496) = 0;
    *(void *)(a1 + 504) = 0;
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int16x8_t *a1, char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, int16x4_t a14)
{
  int64x2_t v14 = *(int64x2_t *)((char *)a3 + a4);
  int16x8_t v15 = (int16x8_t)vzip1q_s64(*a3, v14);
  int16x8_t v16 = (int16x8_t)vzip2q_s64(*a3, v14);
  int8x16_t v17 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v18 = *v17;
  int64x2_t v19 = *(int64x2_t *)((char *)v17 + a4);
  int16x8_t v20 = (int16x8_t)vzip1q_s64(*v17, v19);
  int16x8_t v21 = (int16x8_t)vzip2q_s64(*v17, v19);
  int16x8_t v22 = vdupq_lane_s16(*(int16x4_t *)v15.i8, 0);
  int16x8_t v23 = vsubq_s16(v15, v22);
  int16x8_t v24 = vsubq_s16(v16, v22);
  int16x8_t v25 = vsubq_s16(v20, v22);
  int16x8_t v26 = vsubq_s16(v21, v22);
  v18.i16[0] = vmaxvq_s16(v23);
  v19.i16[0] = vminvq_s16(v23);
  int16x8_t v27 = vdupq_lane_s16(*(int16x4_t *)v18.i8, 0);
  int16x8_t v28 = vdupq_lane_s16(*(int16x4_t *)v19.i8, 0);
  v29.i64[0] = 0x8000800080008000;
  v29.i64[1] = 0x8000800080008000;
  int16x8_t v30 = vmaxq_s16(v27, v29);
  v31.i64[0] = 0x8000800080008000;
  v31.i64[1] = 0x8000800080008000;
  int16x8_t v32 = vminq_s16(v28, v31);
  int16x8_t v33 = vzip1q_s16(v27, v28);
  int8x16_t v34 = (int8x16_t)vceqzq_s16(v33);
  v35.i64[0] = 0x10001000100010;
  v35.i64[1] = 0x10001000100010;
  int16x8_t v36 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v33)), v34);
  v34.i16[0] = vmaxvq_s16(v24);
  a14.i16[0] = vminvq_s16(v24);
  int16x8_t v37 = vdupq_lane_s16(*(int16x4_t *)v34.i8, 0);
  int16x8_t v38 = vdupq_lane_s16(a14, 0);
  int16x8_t v39 = vpmaxq_s16(v36, v36);
  int16x8_t v40 = vmaxq_s16(v30, v37);
  int16x8_t v41 = vminq_s16(v32, v38);
  int16x8_t v42 = vzip1q_s16(v37, v38);
  int8x16_t v43 = (int8x16_t)vceqzq_s16(v42);
  int16x8_t v44 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v42)), v43);
  int16x8_t v45 = vpmaxq_s16(v44, v44);
  v43.i16[0] = vmaxvq_s16(v25);
  int16x8_t v46 = vdupq_lane_s16(*(int16x4_t *)v43.i8, 0);
  v37.i16[0] = vminvq_s16(v25);
  int16x8_t v47 = vdupq_lane_s16(*(int16x4_t *)v37.i8, 0);
  int16x8_t v48 = vmaxq_s16(v40, v46);
  int16x8_t v49 = vminq_s16(v41, v47);
  int16x8_t v50 = vzip1q_s16(v46, v47);
  int8x16_t v51 = (int8x16_t)vceqzq_s16(v50);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v50)), v51);
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  v51.i16[0] = vmaxvq_s16(v26);
  v47.i16[0] = vminvq_s16(v26);
  int16x8_t v54 = vdupq_lane_s16(*(int16x4_t *)v51.i8, 0);
  int16x8_t v55 = vdupq_lane_s16(*(int16x4_t *)v47.i8, 0);
  int16x8_t v56 = vmaxq_s16(v48, v54);
  int16x8_t v57 = vminq_s16(v49, v55);
  int16x8_t v58 = vzip1q_s16(v54, v55);
  int16x8_t v59 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v35, vclsq_s16(v58)), (int8x16_t)vceqzq_s16(v58));
  int16x8_t v60 = vpmaxq_s16(v59, v59);
  int16x8_t v61 = vmaxq_s16(vmaxq_s16(v39, v45), vmaxq_s16(v53, v60));
  int16x8_t v62 = vclzq_s16(vsubq_s16(v56, v57));
  int16x8_t v63 = vsubq_s16(v35, v62);
  int8x16_t v64 = (int8x16_t)vcgtq_s16(v61, v63);
  int16x8_t v65 = (int16x8_t)vbslq_s8(v64, (int8x16_t)v63, (int8x16_t)v61);
  if (vmaxvq_s16(v65))
  {
    char v66 = 0;
    unint64_t v67 = 0;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    v69.i64[0] = 0xF000F000F000FLL;
    v69.i64[1] = 0xF000F000F000FLL;
    int8x16_t v70 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v68, vsubq_s16(v69, v62)), v57), v64);
    v71.i64[0] = 0x8000800080008;
    v71.i64[1] = 0x8000800080008;
    v68.i64[0] = 0x3000300030003;
    v68.i64[1] = 0x3000300030003;
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v39), v68), (int16x8_t)0);
    int16x8_t v73 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v45), v68), (int16x8_t)0);
    int16x8_t v74 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v53), v68), (int16x8_t)0);
    int16x8_t v75 = vmaxq_s16(vminq_s16(vsubq_s16(v65, v60), v68), (int16x8_t)0);
    int16x8_t v76 = vsubq_s16(v65, v72);
    int16x8_t v77 = vsubq_s16(v65, v73);
    int16x8_t v78 = vsubq_s16(v65, v74);
    int16x8_t v79 = vsubq_s16(v65, v75);
    int8x16_t v80 = (int8x16_t)vceqq_s16(vaddq_s16(v75, v74), vnegq_s16(vaddq_s16(v72, v73)));
    v73.i64[0] = 0x4000400040004;
    v73.i64[1] = 0x4000400040004;
    int16x8_t v81 = (int16x8_t)vbicq_s8((int8x16_t)v73, v80);
    int16x8_t v82 = (int16x8_t)vorrq_s8((int8x16_t)v81, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v65), (int8x16_t)v68), vandq_s8(v64, v71)));
    if (a5 >= 2 && a6 >= 2)
    {
      int16x8_t v376 = v16;
      int16x8_t v377 = v21;
      int16x8_t v378 = v20;
      int8x16_t v375 = v70;
      v83.i32[0] = v15.u16[2];
      v83.i32[1] = v15.u16[1];
      int32x2_t v84 = vshl_n_s32(vsub_s32(v83, vdup_n_s32(v15.u16[0])), 0x18uLL);
      int v85 = v84.i32[1] >> 24;
      int16x4_t v86 = (int16x4_t)vshl_s32(v84, (int32x2_t)0xFFFFFFEAFFFFFFE9);
      unsigned __int32 v87 = v84.i32[0];
      v88.i64[0] = 0xFFFFFFFF00000000;
      v88.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v89 = vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v84.i32[0] >> 24), v88), vdupq_n_s16(v84.i32[1] >> 24), (int16x8_t)xmmword_242EA76B0);
      int16x8_t v90 = vsubq_s16(v23, v89);
      int16x8_t v91 = vsubq_s16(vaddq_s16(vdupq_n_s16(-v86.i32[0]), v24), v89);
      int16x8_t v92 = vsubq_s16(vaddq_s16(vdupq_n_s16(-v86.i32[1]), v25), v89);
      int16x8_t v93 = vaddq_s16(vdupq_n_s16(-v86.i32[0] - v86.i32[1]), v26);
      int16x8_t v94 = vsubq_s16(v93, v89);
      v93.i16[0] = vmaxvq_s16(v90);
      v86.i16[0] = vminvq_s16(v90);
      int16x8_t v95 = vdupq_lane_s16(*(int16x4_t *)v93.i8, 0);
      int16x8_t v96 = vdupq_lane_s16(v86, 0);
      v97.i64[0] = 0x8000800080008000;
      v97.i64[1] = 0x8000800080008000;
      int16x8_t v98 = vmaxq_s16(v95, v97);
      v97.i64[0] = 0x8000800080008000;
      v97.i64[1] = 0x8000800080008000;
      int8x16_t v379 = (int8x16_t)v26;
      int16x8_t v99 = vminq_s16(v96, v97);
      int16x8_t v100 = vzip1q_s16(v95, v96);
      int8x16_t v101 = (int8x16_t)vceqzq_s16(v100);
      v102.i64[0] = 0x10001000100010;
      v102.i64[1] = 0x10001000100010;
      int16x8_t v103 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v100)), v101);
      int16x8_t v104 = vpmaxq_s16(v103, v103);
      v101.i16[0] = vmaxvq_s16(v91);
      v20.i16[0] = vminvq_s16(v91);
      int16x8_t v105 = vdupq_lane_s16(*(int16x4_t *)v101.i8, 0);
      int16x8_t v106 = vdupq_lane_s16(*(int16x4_t *)v20.i8, 0);
      int16x8_t v107 = vmaxq_s16(v98, v105);
      int16x8_t v108 = vminq_s16(v99, v106);
      int16x8_t v109 = vzip1q_s16(v105, v106);
      int8x16_t v110 = (int8x16_t)vceqzq_s16(v109);
      int16x8_t v111 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v109)), v110);
      v110.i16[0] = vmaxvq_s16(v92);
      int8x16_t v112 = (int8x16_t)v25;
      int16x8_t v113 = v79;
      v79.i16[0] = vminvq_s16(v92);
      int16x8_t v114 = vdupq_lane_s16(*(int16x4_t *)v110.i8, 0);
      int16x8_t v115 = vdupq_lane_s16(*(int16x4_t *)v79.i8, 0);
      int16x8_t v116 = vpmaxq_s16(v111, v111);
      int16x8_t v117 = vmaxq_s16(v107, v114);
      int16x8_t v118 = vminq_s16(v108, v115);
      int16x8_t v119 = vzip1q_s16(v114, v115);
      int8x16_t v120 = (int8x16_t)vceqzq_s16(v119);
      int16x8_t v121 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v119)), v120);
      int8x16_t v122 = (int8x16_t)v23;
      int16x8_t v123 = v78;
      int16x8_t v124 = vpmaxq_s16(v121, v121);
      v121.i16[0] = vmaxvq_s16(v94);
      int16x8_t v125 = vdupq_lane_s16(*(int16x4_t *)v121.i8, 0);
      v120.i16[0] = vminvq_s16(v94);
      int16x8_t v126 = vdupq_lane_s16(*(int16x4_t *)v120.i8, 0);
      int16x8_t v127 = vminq_s16(v118, v126);
      int16x8_t v128 = vzip1q_s16(v125, v126);
      int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
      int16x8_t v130 = vpmaxq_s16(v129, v129);
      int16x8_t v131 = vmaxq_s16(vmaxq_s16(v104, v116), vmaxq_s16(v124, v130));
      int16x8_t v132 = vclzq_s16(vsubq_s16(vmaxq_s16(v117, v125), v127));
      int16x8_t v133 = vsubq_s16(v102, v132);
      int8x16_t v134 = (int8x16_t)vcgtq_s16(v131, v133);
      int16x8_t v135 = (int16x8_t)vbslq_s8(v134, (int8x16_t)v133, (int8x16_t)v131);
      v131.i64[0] = 0x1000100010001;
      v131.i64[1] = 0x1000100010001;
      int16x8_t v136 = vmaxq_s16(v135, v131);
      v135.i64[0] = 0x3000300030003;
      v135.i64[1] = 0x3000300030003;
      int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v104), v135), (int16x8_t)0);
      int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v116), v135), (int16x8_t)0);
      int16x8_t v139 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v124), v135), (int16x8_t)0);
      int16x8_t v140 = vmaxq_s16(vminq_s16(vsubq_s16(v136, v130), v135), (int16x8_t)0);
      int16x8_t v141 = vsubq_s16(v136, v137);
      int16x8_t v142 = vsubq_s16(v136, v138);
      int16x8_t v143 = vsubq_s16(v136, v139);
      int16x8_t v144 = vsubq_s16(v136, v140);
      int8x16_t v145 = (int8x16_t)vceqq_s16(vaddq_s16(v140, v139), vnegq_s16(vaddq_s16(v137, v138)));
      v140.i64[0] = 0x4000400040004;
      v140.i64[1] = 0x4000400040004;
      int16x8_t v146 = (int16x8_t)vbicq_s8((int8x16_t)v140, v145);
      v147.i64[0] = 0x7000700070007;
      v147.i64[1] = 0x7000700070007;
      int16x8_t v148 = (int16x8_t)vandq_s8((int8x16_t)v63, v64);
      int16x8_t v149 = vmulq_s16(v76, v147);
      int16x8_t v150 = vshlq_n_s16(vaddq_s16(vaddq_s16(v123, v77), v113), 3uLL);
      int16x8_t v151 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v149, v148), v150), vaddq_s16(v81, v81)), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbslq_s8(v134, (int8x16_t)vaddq_s16(v136, v102), (int8x16_t)v102), v141, v147), vshlq_n_s16(vaddq_s16(vaddq_s16(v143, v142), v144), 3uLL)), vaddq_s16(v146, v146))), 0);
      v140.i16[0] = vaddvq_s16(v151);
      int v152 = v140.u16[0];
      unint64_t v67 = v85 | HIWORD(v87);
      if (v140.i16[0])
      {
        v153.i64[0] = 0x2000200020002;
        v153.i64[1] = 0x2000200020002;
        v154.i64[0] = 0xA000A000A000ALL;
        v154.i64[1] = 0xA000A000A000ALL;
        int16x8_t v155 = (int16x8_t)vbslq_s8(v134, v154, v153);
        v154.i64[0] = -1;
        v154.i64[1] = -1;
        int8x16_t v156 = vorrq_s8((int8x16_t)v146, (int8x16_t)v155);
        v155.i64[0] = 0xF000F000F000FLL;
        v155.i64[1] = 0xF000F000F000FLL;
        int8x16_t v157 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v154, vsubq_s16(v155, v132)), v127), v134);
        int8x16_t v158 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v151, 0xFuLL));
        int8x16_t v371 = vbslq_s8(v158, (int8x16_t)v91, (int8x16_t)v24);
        int8x16_t v373 = vbslq_s8(v158, (int8x16_t)v92, v112);
        int8x16_t v379 = vbslq_s8(v158, (int8x16_t)v94, v379);
        int16x8_t v77 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v142, (int8x16_t)v77);
        int8x16_t v70 = vbslq_s8(v158, v157, v375);
        int16x8_t v65 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v136, (int8x16_t)v65);
        int16x8_t v82 = (int16x8_t)vbslq_s8(v158, v156, (int8x16_t)v82);
        int8x16_t v369 = vbslq_s8(v158, (int8x16_t)v90, v122);
        int16x8_t v370 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v141, (int8x16_t)v76);
        int16x8_t v149 = vmulq_s16(v370, v147);
        int16x8_t v372 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v143, (int8x16_t)v123);
        int16x8_t v374 = (int16x8_t)vbslq_s8(v158, (int8x16_t)v144, (int8x16_t)v113);
        int16x8_t v150 = vshlq_n_s16(vaddq_s16(vaddq_s16(v372, v77), v374), 3uLL);
      }
      else
      {
        int8x16_t v369 = v122;
        int16x8_t v370 = v76;
        int8x16_t v371 = (int8x16_t)v24;
        int16x8_t v372 = v123;
        int8x16_t v373 = v112;
        int16x8_t v374 = v113;
        int8x16_t v70 = v375;
      }
      int16x4_t v161 = *(int16x4_t *)v377.i8;
      v162.i64[0] = 0x8000800080008000;
      v162.i64[1] = 0x8000800080008000;
      v163.i64[0] = 0x8000800080008000;
      v163.i64[1] = 0x8000800080008000;
      v164.i64[0] = 0x7000700070007;
      v164.i64[1] = 0x7000700070007;
      v165.i64[0] = 0x3000300030003;
      v165.i64[1] = 0x3000300030003;
      int16x8_t v166 = vsubq_s16(v15, (int16x8_t)vqtbl1q_s8((int8x16_t)v15, (int8x16_t)xmmword_242EA7520));
      int8x16_t v167 = (int8x16_t)v376;
      v167.i16[7] = v15.i16[7];
      int16x8_t v168 = vsubq_s16(v376, (int16x8_t)vqtbl1q_s8(v167, (int8x16_t)xmmword_242EA7530));
      int8x16_t v169 = (int8x16_t)v378;
      v169.i16[7] = v15.i16[7];
      int16x8_t v170 = vsubq_s16(v378, (int16x8_t)vqtbl1q_s8(v169, (int8x16_t)xmmword_242EA7540));
      int8x16_t v171 = (int8x16_t)v377;
      v171.i16[7] = v15.i16[7];
      int16x4_t v172 = (int16x4_t)0x100010001000F0ELL;
      int16x8_t v173 = v166;
      v173.i16[0] = v166.i16[7];
      v173.i16[7] = v166.i16[0];
      v166.i16[0] = vmaxvq_s16(v173);
      v172.i16[0] = vminvq_s16(v173);
      int16x8_t v174 = vdupq_lane_s16(*(int16x4_t *)v166.i8, 0);
      int16x8_t v175 = vdupq_lane_s16(v172, 0);
      int16x8_t v176 = vsubq_s16(v377, (int16x8_t)vqtbl1q_s8(v171, (int8x16_t)xmmword_242EA7550));
      int16x8_t v177 = vmaxq_s16(v174, v162);
      int16x8_t v178 = vminq_s16(v175, v163);
      int16x8_t v179 = vzip1q_s16(v174, v175);
      int8x16_t v180 = (int8x16_t)vceqzq_s16(v179);
      int16x8_t v181 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v179)), v180);
      int16x8_t v182 = vpmaxq_s16(v181, v181);
      v180.i16[0] = vmaxvq_s16(v168);
      int16x8_t v183 = vdupq_lane_s16(*(int16x4_t *)v180.i8, 0);
      v161.i16[0] = vminvq_s16(v168);
      int16x8_t v184 = vdupq_lane_s16(v161, 0);
      int16x8_t v185 = vmaxq_s16(v177, v183);
      int16x8_t v186 = vminq_s16(v178, v184);
      int16x8_t v187 = vzip1q_s16(v183, v184);
      int8x16_t v188 = (int8x16_t)vceqzq_s16(v187);
      int16x8_t v189 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v187)), v188);
      int16x8_t v190 = vpmaxq_s16(v189, v189);
      v188.i16[0] = vmaxvq_s16(v170);
      v162.i16[0] = vminvq_s16(v170);
      int16x8_t v191 = vdupq_lane_s16(*(int16x4_t *)v188.i8, 0);
      int16x8_t v192 = vdupq_lane_s16(*(int16x4_t *)v162.i8, 0);
      int16x8_t v193 = vmaxq_s16(v185, v191);
      int16x8_t v194 = vminq_s16(v186, v192);
      int16x8_t v195 = vzip1q_s16(v191, v192);
      int8x16_t v196 = (int8x16_t)vceqzq_s16(v195);
      int16x8_t v197 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v195)), v196);
      v196.i16[0] = vmaxvq_s16(v176);
      v134.i16[0] = vminvq_s16(v176);
      int16x8_t v198 = vdupq_lane_s16(*(int16x4_t *)v196.i8, 0);
      int16x8_t v199 = vdupq_lane_s16(*(int16x4_t *)v134.i8, 0);
      int16x8_t v200 = vpmaxq_s16(v197, v197);
      int16x8_t v201 = vmaxq_s16(v193, v198);
      int16x8_t v202 = vminq_s16(v194, v199);
      int16x8_t v203 = vzip1q_s16(v198, v199);
      int16x8_t v204 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v102, vclsq_s16(v203)), (int8x16_t)vceqzq_s16(v203));
      int16x8_t v205 = vpmaxq_s16(v204, v204);
      int16x8_t v206 = vmaxq_s16(vmaxq_s16(v182, v190), vmaxq_s16(v200, v205));
      int16x8_t v207 = vclzq_s16(vsubq_s16(v201, v202));
      int16x8_t v208 = vsubq_s16(v102, v207);
      int8x16_t v209 = (int8x16_t)vcgtq_s16(v206, v208);
      int16x8_t v210 = (int16x8_t)vbslq_s8(v209, (int8x16_t)v208, (int8x16_t)v206);
      int16x8_t v211 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v182), v165), (int16x8_t)0);
      int16x8_t v212 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v190), v165), (int16x8_t)0);
      int16x8_t v213 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v200), v165), (int16x8_t)0);
      int16x8_t v214 = vmaxq_s16(vminq_s16(vsubq_s16(v210, v205), v165), (int16x8_t)0);
      int16x8_t v215 = vsubq_s16(v210, v211);
      int16x8_t v216 = vsubq_s16(v210, v212);
      int16x8_t v217 = vsubq_s16(v210, v213);
      int16x8_t v218 = vsubq_s16(v210, v214);
      int8x16_t v219 = (int8x16_t)vceqq_s16(vaddq_s16(v214, v213), vnegq_s16(vaddq_s16(v211, v212)));
      v212.i64[0] = 0x4000400040004;
      v212.i64[1] = 0x4000400040004;
      int16x8_t v220 = (int16x8_t)vbicq_s8((int8x16_t)v212, v219);
      v213.i64[0] = 0x8000800080008;
      v213.i64[1] = 0x8000800080008;
      int16x8_t v221 = (int16x8_t)vandq_s8((int8x16_t)v82, (int8x16_t)v165);
      v222.i64[0] = 0x2000200020002;
      v222.i64[1] = 0x2000200020002;
      int16x8_t v223 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)v65, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8((int8x16_t)v82, (int8x16_t)v213))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16(v82, v82), (int8x16_t)v213)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v221, v222), (int8x16_t)v102), v149)), v150), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)v208, v209), v215, v164), vshlq_n_s16(vaddq_s16(vaddq_s16(v217, v216), v218), 3uLL)), vaddq_s16(v220, v220))),
               0);
      v213.i16[0] = vaddvq_s16(v223);
      int v224 = v213.u16[0];
      if (v213.i16[0])
      {
        v225.i64[0] = 0x9000900090009;
        v225.i64[1] = 0x9000900090009;
        v226.i64[0] = -1;
        v226.i64[1] = -1;
        int8x16_t v227 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v210), (int8x16_t)v222), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v209, v225), (int16x8_t)vmvnq_s8(v209))), (int8x16_t)v220);
        v228.i64[0] = 0xF000F000F000FLL;
        v228.i64[1] = 0xF000F000F000FLL;
        int8x16_t v229 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v226, vsubq_s16(v228, v207)), v202), v209);
        int8x16_t v230 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v223, 0xFuLL));
        v22.i16[0] = vbslq_s8(v230, vextq_s8((int8x16_t)v15, (int8x16_t)v15, 0xEuLL), (int8x16_t)v22).u16[0];
        int16x8_t v23 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v173, v369);
        int16x8_t v24 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v168, v371);
        int16x8_t v25 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v170, v373);
        int16x8_t v26 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v176, v379);
        int16x8_t v76 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v215, (int8x16_t)v370);
        int16x8_t v77 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v216, (int8x16_t)v77);
        int16x8_t v78 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v217, (int8x16_t)v372);
        int16x8_t v79 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v218, (int8x16_t)v374);
        int8x16_t v70 = vbslq_s8(v230, v229, v70);
        int16x8_t v65 = (int16x8_t)vbslq_s8(v230, (int8x16_t)v210, (int8x16_t)v65);
        int16x8_t v82 = (int16x8_t)vbslq_s8(v230, v227, (int8x16_t)v82);
      }
      else
      {
        int16x8_t v26 = (int16x8_t)v379;
        int16x8_t v25 = (int16x8_t)v373;
        int16x8_t v79 = v374;
        int16x8_t v24 = (int16x8_t)v371;
        int16x8_t v78 = v372;
        int16x8_t v23 = (int16x8_t)v369;
        int16x8_t v76 = v370;
      }
      int16x8_t v21 = v377;
      int16x8_t v20 = v378;
      int16x8_t v16 = v376;
      if (v152) {
        BOOL v231 = v224 == 0;
      }
      else {
        BOOL v231 = 0;
      }
      char v66 = v231;
    }
    v232.i64[0] = 0x8000800080008;
    v232.i64[1] = 0x8000800080008;
    int16x8_t v233 = (int16x8_t)vandq_s8((int8x16_t)v82, v232);
    v234.i64[0] = 0x3000300030003;
    v234.i64[1] = 0x3000300030003;
    v235.i64[0] = 0x2000200020002;
    v235.i64[1] = 0x2000200020002;
    int8x16_t v236 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8((int8x16_t)v82, v234), v235);
    v235.i64[0] = 0x10001000100010;
    v235.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(7 * v76.i16[0]
                                    + 8 * vaddq_s16(v78, vaddq_s16(v77, v79)).u16[0]
                                    + ((2 * v82.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)v65, (int8x16_t)vceqzq_s16(v233)).u16[0]
                                    + vandq_s8(v236, (int8x16_t)v235).u16[0])
                          + 29) >= 0x200)
    {
      *a1 = v15;
      a1[1] = v16;
      char v159 = 63;
      unint64_t v160 = 64;
      a1[2] = v20;
      a1[3] = v21;
    }
    else
    {
      int8x16_t v237 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v238 = 8 * (a1 & 7);
      if (v238) {
        uint64_t v239 = *v237 & ~(-1 << v238);
      }
      else {
        uint64_t v239 = 0;
      }
      if (v65.i16[0]) {
        uint64_t v240 = (16 * v65.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v240 = 0;
      }
      *a2 = v82.i8[0] << 6;
      unint64_t v241 = (v240 & 0xFFFFFFFFFF0000F0 | ((unint64_t)v22.u16[0] << 8) | v82.i8[0] & 0xF) >> 2;
      unint64_t v242 = (v241 << v238) | v239;
      if (v238 >= 0x2A)
      {
        *int8x16_t v237 = v242;
        unint64_t v242 = v241 >> (-8 * (a1 & 7u));
      }
      unint64_t v243 = v238 + 22;
      int8x16_t v244 = (int8x16_t)vsubq_s16(v65, v76);
      int8x16_t v245 = (int8x16_t)vsubq_s16(v65, v77);
      int8x16_t v246 = (int8x16_t)vsubq_s16(v65, v78);
      int8x16_t v247 = (int8x16_t)vsubq_s16(v65, v79);
      *(uint8x8_t *)v244.i8 = vqmovn_u16((uint16x8_t)v244);
      *(uint8x8_t *)v245.i8 = vqmovn_u16((uint16x8_t)v245);
      *(uint8x8_t *)v246.i8 = vqmovn_u16((uint16x8_t)v246);
      *(uint8x8_t *)v247.i8 = vqmovn_u16((uint16x8_t)v247);
      v244.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v244, v245), (int16x8_t)vzip1q_s8(v246, v247)).u32[0];
      v246.i64[0] = 0x202020202020202;
      v246.i64[1] = 0x202020202020202;
      int8x16_t v248 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v82.i8, (int8x8_t)0x4000400040004)))), v246);
      v246.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v246.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v247.i64[0] = -1;
      v247.i64[1] = -1;
      uint8x16_t v249 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v247, (uint8x16_t)vorrq_s8(v248, v246)), (int8x16_t)v244.u32[0]);
      int16x8_t v250 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v248.i8);
      uint16x8_t v251 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v249.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v250)), (int16x8_t)vmovl_high_u8(v249));
      uint16x8_t v252 = (uint16x8_t)vpaddq_s16(v250, (int16x8_t)vmovl_high_u8((uint8x16_t)v248));
      int32x4_t v253 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v252.i8);
      int32x4_t v254 = (int32x4_t)vmovl_high_u16(v252);
      int32x4_t v255 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v251.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v253)), (int32x4_t)vshlq_u32(vmovl_high_u16(v251), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v254)));
      int32x4_t v256 = vpaddq_s32(v253, v254);
      v257.i64[0] = v255.u32[0];
      v257.i64[1] = v255.u32[1];
      uint64x2_t v258 = (uint64x2_t)v257;
      v257.i64[0] = v255.u32[2];
      v257.i64[1] = v255.u32[3];
      uint64x2_t v259 = (uint64x2_t)v257;
      v257.i64[0] = v256.u32[0];
      v257.i64[1] = v256.u32[1];
      int64x2_t v260 = v257;
      v257.i64[0] = v256.u32[2];
      v257.i64[1] = v256.u32[3];
      int64x2_t v261 = vpaddq_s64((int64x2_t)vshlq_u64(v258, (uint64x2_t)vzip1q_s64((int64x2_t)0, v260)), (int64x2_t)vshlq_u64(v259, (uint64x2_t)vzip1q_s64((int64x2_t)0, v257)));
      int64x2_t v262 = vpaddq_s64(v260, v257);
      uint64_t v263 = (v238 + 22) & 0x3E;
      unint64_t v264 = (v261.i64[0] << v263) | v242;
      if ((unint64_t)(v262.i64[0] + v263) >= 0x40)
      {
        *(void *)((char *)v237 + ((v243 >> 3) & 8)) = v264;
        unint64_t v264 = (unint64_t)v261.i64[0] >> -(char)v263;
      }
      unint64_t v265 = v262.i64[0] + v243;
      unint64_t v266 = v264 | (v261.i64[1] << v265);
      if ((v265 & 0x3F) + v262.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v265 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v266;
        unint64_t v266 = (unint64_t)v261.i64[1] >> -(v265 & 0x3F);
        if ((v265 & 0x3F) == 0) {
          unint64_t v266 = 0;
        }
      }
      int8x16_t v267 = (int8x16_t)vceqq_s16(v65, v76);
      unint64_t v268 = v265 + v262.i64[1];
      v269.i64[0] = -1;
      v269.i64[1] = -1;
      int16x8_t v270 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v233, v233), (int8x16_t)0, 0xEuLL), (int8x16_t)v65);
      v271.i64[0] = 0xF000F000F000FLL;
      v271.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v272 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v269, (uint16x8_t)vaddq_s16(v270, v271)), v70);
      int32x4_t v273 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v270.i8);
      int32x4_t v274 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v272.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v273)), (int32x4_t)vmovl_high_u16(v272));
      int32x4_t v275 = vpaddq_s32(v273, (int32x4_t)vmovl_high_u16((uint16x8_t)v270));
      v276.i64[0] = v274.u32[0];
      v276.i64[1] = v274.u32[1];
      uint64x2_t v277 = (uint64x2_t)v276;
      v276.i64[0] = v274.u32[2];
      v276.i64[1] = v274.u32[3];
      uint64x2_t v278 = (uint64x2_t)v276;
      v276.i64[0] = v275.u32[0];
      v276.i64[1] = v275.u32[1];
      int64x2_t v279 = v276;
      v276.i64[0] = v275.u32[2];
      v276.i64[1] = v275.u32[3];
      int64x2_t v280 = vpaddq_s64((int64x2_t)vshlq_u64(v277, (uint64x2_t)vzip1q_s64((int64x2_t)0, v279)), (int64x2_t)vshlq_u64(v278, (uint64x2_t)vzip1q_s64((int64x2_t)0, v276)));
      int64x2_t v281 = vpaddq_s64(v279, v276);
      unint64_t v282 = (v280.i64[0] << v268) | v266;
      if (v281.i64[0] + (v268 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v268 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v282;
        unint64_t v282 = (unint64_t)v280.i64[0] >> -(v268 & 0x3F);
        if ((v268 & 0x3F) == 0) {
          unint64_t v282 = 0;
        }
      }
      int16x8_t v283 = (int16x8_t)vandq_s8(v70, v267);
      uint64_t v284 = v281.i64[1];
      unint64_t v285 = v281.i64[0] + v268;
      unint64_t v286 = v282 | (v280.i64[1] << v285);
      if ((v285 & 0x3F) + v281.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
        unint64_t v286 = (unint64_t)v280.i64[1] >> -(v285 & 0x3F);
        if ((v285 & 0x3F) == 0) {
          unint64_t v286 = 0;
        }
      }
      int8x16_t v287 = (int8x16_t)vceqq_s16(v65, v77);
      int8x16_t v288 = (int8x16_t)vaddq_s16(v283, v23);
      unint64_t v289 = v285 + v284;
      if (v66)
      {
        v286 |= v67 << v289;
        if ((v289 & 0x3F) >= 0x30)
        {
          *(void *)((char *)v237 + ((v289 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
          unint64_t v286 = v67 >> -(v289 & 0x3F);
        }
        v289 += 16;
      }
      int16x8_t v290 = (int16x8_t)vandq_s8(v70, v287);
      int16x8_t v291 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v76, 0xEuLL);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      v293.i64[0] = -1;
      v293.i64[1] = -1;
      uint16x8_t v294 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v293, (uint16x8_t)vaddq_s16(v291, v292)), v288);
      int32x4_t v295 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v296 = (int32x4_t)vmovl_high_u16((uint16x8_t)v291);
      int32x4_t v297 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v294.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v295)), (int32x4_t)vshlq_u32(vmovl_high_u16(v294), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v296)));
      int32x4_t v298 = vpaddq_s32(v295, v296);
      v299.i64[0] = v297.u32[0];
      v299.i64[1] = v297.u32[1];
      uint64x2_t v300 = (uint64x2_t)v299;
      v299.i64[0] = v297.u32[2];
      v299.i64[1] = v297.u32[3];
      uint64x2_t v301 = (uint64x2_t)v299;
      v299.i64[0] = v298.u32[0];
      v299.i64[1] = v298.u32[1];
      int64x2_t v302 = v299;
      v299.i64[0] = v298.u32[2];
      v299.i64[1] = v298.u32[3];
      int64x2_t v303 = vpaddq_s64((int64x2_t)vshlq_u64(v300, (uint64x2_t)vzip1q_s64((int64x2_t)0, v302)), (int64x2_t)vshlq_u64(v301, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)));
      int64x2_t v304 = vpaddq_s64(v302, v299);
      unint64_t v305 = (v303.i64[0] << v289) | v286;
      if (v304.i64[0] + (v289 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v289 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v303.i64[0] >> -(v289 & 0x3F);
        if ((v289 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      int8x16_t v306 = (int8x16_t)vceqq_s16(v65, v78);
      int8x16_t v307 = (int8x16_t)vaddq_s16(v24, v290);
      unint64_t v308 = v304.i64[0] + v289;
      uint64_t v309 = (v304.i64[0] + v289) & 0x3F;
      unint64_t v310 = v305 | (v303.i64[1] << v308);
      if ((v308 & 0x3F) + v304.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v308 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v310;
        unint64_t v310 = (unint64_t)v303.i64[1] >> -(char)v309;
        if (!v309) {
          unint64_t v310 = 0;
        }
      }
      int16x8_t v311 = (int16x8_t)vandq_s8(v70, v306);
      unint64_t v312 = v308 + v304.i64[1];
      v313.i64[0] = 0xF000F000F000FLL;
      v313.i64[1] = 0xF000F000F000FLL;
      v314.i64[0] = -1;
      v314.i64[1] = -1;
      uint16x8_t v315 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v314, (uint16x8_t)vaddq_s16(v77, v313)), v307);
      int32x4_t v316 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v317 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v318 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v315.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v316)), (int32x4_t)vshlq_u32(vmovl_high_u16(v315), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v317)));
      int32x4_t v319 = vpaddq_s32(v316, v317);
      v320.i64[0] = v318.u32[0];
      v320.i64[1] = v318.u32[1];
      uint64x2_t v321 = (uint64x2_t)v320;
      v320.i64[0] = v318.u32[2];
      v320.i64[1] = v318.u32[3];
      uint64x2_t v322 = (uint64x2_t)v320;
      v320.i64[0] = v319.u32[0];
      v320.i64[1] = v319.u32[1];
      int64x2_t v323 = v320;
      v320.i64[0] = v319.u32[2];
      v320.i64[1] = v319.u32[3];
      int64x2_t v324 = vpaddq_s64((int64x2_t)vshlq_u64(v321, (uint64x2_t)vzip1q_s64((int64x2_t)0, v323)), (int64x2_t)vshlq_u64(v322, (uint64x2_t)vzip1q_s64((int64x2_t)0, v320)));
      int64x2_t v325 = vpaddq_s64(v323, v320);
      unint64_t v326 = (v324.i64[0] << v312) | v310;
      if (v325.i64[0] + (v312 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v312 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v326;
        unint64_t v326 = (unint64_t)v324.i64[0] >> -(v312 & 0x3F);
        if ((v312 & 0x3F) == 0) {
          unint64_t v326 = 0;
        }
      }
      int8x16_t v327 = (int8x16_t)vceqq_s16(v65, v79);
      int8x16_t v328 = (int8x16_t)vaddq_s16(v25, v311);
      unint64_t v329 = v325.i64[0] + v312;
      unint64_t v330 = v326 | (v324.i64[1] << v329);
      if ((v329 & 0x3F) + v325.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v329 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v330;
        unint64_t v330 = (unint64_t)v324.i64[1] >> -(v329 & 0x3F);
        if ((v329 & 0x3F) == 0) {
          unint64_t v330 = 0;
        }
      }
      int16x8_t v331 = (int16x8_t)vandq_s8(v70, v327);
      unint64_t v332 = v329 + v325.i64[1];
      v333.i64[0] = 0xF000F000F000FLL;
      v333.i64[1] = 0xF000F000F000FLL;
      v334.i64[0] = -1;
      v334.i64[1] = -1;
      uint16x8_t v335 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v334, (uint16x8_t)vaddq_s16(v78, v333)), v328);
      int32x4_t v336 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8);
      int32x4_t v337 = (int32x4_t)vmovl_high_u16((uint16x8_t)v78);
      int32x4_t v338 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v335.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v336)), (int32x4_t)vshlq_u32(vmovl_high_u16(v335), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v337)));
      int32x4_t v339 = vpaddq_s32(v336, v337);
      v340.i64[0] = v338.u32[0];
      v340.i64[1] = v338.u32[1];
      uint64x2_t v341 = (uint64x2_t)v340;
      v340.i64[0] = v338.u32[2];
      v340.i64[1] = v338.u32[3];
      uint64x2_t v342 = (uint64x2_t)v340;
      v340.i64[0] = v339.u32[0];
      v340.i64[1] = v339.u32[1];
      int64x2_t v343 = v340;
      v340.i64[0] = v339.u32[2];
      v340.i64[1] = v339.u32[3];
      int64x2_t v344 = vpaddq_s64((int64x2_t)vshlq_u64(v341, (uint64x2_t)vzip1q_s64((int64x2_t)0, v343)), (int64x2_t)vshlq_u64(v342, (uint64x2_t)vzip1q_s64((int64x2_t)0, v340)));
      int64x2_t v345 = vpaddq_s64(v343, v340);
      unint64_t v346 = (v344.i64[0] << v332) | v330;
      if (v345.i64[0] + (v332 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v237 + ((v332 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v346;
        unint64_t v346 = (unint64_t)v344.i64[0] >> -(v332 & 0x3F);
        if ((v332 & 0x3F) == 0) {
          unint64_t v346 = 0;
        }
      }
      int8x16_t v347 = (int8x16_t)vaddq_s16(v26, v331);
      unint64_t v348 = v345.i64[0] + v332;
      unint64_t v349 = v346 | (v344.i64[1] << v348);
      if ((v348 & 0x3F) + v345.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v348 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v349;
        unint64_t v349 = (unint64_t)v344.i64[1] >> -(v348 & 0x3F);
        if ((v348 & 0x3F) == 0) {
          unint64_t v349 = 0;
        }
      }
      unint64_t v350 = v348 + v345.i64[1];
      v351.i64[0] = 0xF000F000F000FLL;
      v351.i64[1] = 0xF000F000F000FLL;
      v352.i64[0] = -1;
      v352.i64[1] = -1;
      uint16x8_t v353 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v352, (uint16x8_t)vaddq_s16(v79, v351)), v347);
      int32x4_t v354 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8);
      int32x4_t v355 = (int32x4_t)vmovl_high_u16((uint16x8_t)v79);
      int32x4_t v356 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v353.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v354)), (int32x4_t)vshlq_u32(vmovl_high_u16(v353), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v355)));
      int32x4_t v357 = vpaddq_s32(v354, v355);
      v358.i64[0] = v356.u32[0];
      v358.i64[1] = v356.u32[1];
      uint64x2_t v359 = (uint64x2_t)v358;
      v358.i64[0] = v356.u32[2];
      v358.i64[1] = v356.u32[3];
      uint64x2_t v360 = (uint64x2_t)v358;
      v358.i64[0] = v357.u32[0];
      v358.i64[1] = v357.u32[1];
      int64x2_t v361 = v358;
      v358.i64[0] = v357.u32[2];
      v358.i64[1] = v357.u32[3];
      int64x2_t v362 = vpaddq_s64((int64x2_t)vshlq_u64(v359, (uint64x2_t)vzip1q_s64((int64x2_t)0, v361)), (int64x2_t)vshlq_u64(v360, (uint64x2_t)vzip1q_s64((int64x2_t)0, v358)));
      int64x2_t v363 = vpaddq_s64(v361, v358);
      unint64_t v364 = (v362.i64[0] << v350) | v349;
      if (v363.i64[0] + (v350 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v237 + ((v350 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v364;
        if ((v350 & 0x3F) != 0) {
          unint64_t v364 = (unint64_t)v362.i64[0] >> -(v350 & 0x3F);
        }
        else {
          unint64_t v364 = 0;
        }
      }
      unint64_t v365 = v363.i64[0] + v350;
      unint64_t v366 = v364 | (v362.i64[1] << v365);
      if ((v365 & 0x3F) + v363.i64[1] >= 0x40)
      {
        *(void *)((char *)v237 + ((v365 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
        unint64_t v366 = (unint64_t)v362.i64[1] >> -(v365 & 0x3F);
        if ((v365 & 0x3F) == 0) {
          unint64_t v366 = 0;
        }
      }
      unint64_t v367 = v365 + v363.i64[1];
      if ((v367 & 0x3F) != 0) {
        *(void *)((char *)v237 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
      }
      unint64_t v160 = (v367 - v238 + 7) >> 3;
      char v159 = *a2 | (v160 - 1);
    }
  }
  else
  {
    a1->i16[0] = a3->i16[0];
    char v159 = 1;
    unint64_t v160 = 2;
  }
  *a2 = v159;
  return v160;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int16x8_t *a3, char *a4, int a5, int a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, int16x4_t a14)
{
  int8x16_t v17 = a3;
  int64x2_t v19 = (int64x2_t *)result;
  if (a5 >= 4) {
    unsigned int v20 = 4;
  }
  else {
    unsigned int v20 = a5;
  }
  if (a6 >= 4) {
    unsigned int v21 = 4;
  }
  else {
    unsigned int v21 = a6;
  }
  if (v20 && v21)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v20, v21, a7, a8, a9, a10, a11, a12, a13, a14);
    int8x16_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    *a4 = 0;
  }
  int16x8_t v22 = a4 + 1;
  if (a5 <= 4) {
    int v23 = 4;
  }
  else {
    int v23 = a5;
  }
  unsigned int v24 = v23 - 4;
  if (v24 >= 4) {
    int v25 = 4;
  }
  else {
    int v25 = v24;
  }
  if (v25) {
    BOOL v26 = v21 == 0;
  }
  else {
    BOOL v26 = 1;
  }
  if (v26)
  {
    *int16x8_t v22 = 0;
  }
  else
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v22, v19 + 1, a2, v25, v21, a7, a8, a9, a10, a11, a12, a13, a14);
    int8x16_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  uint64_t v27 = 4 * a2;
  int16x8_t v28 = a4 + 2;
  if (a6 <= 4) {
    int v29 = 4;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 4;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v20 && v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v28, (int64x2_t *)((char *)v19 + v27), a2, v20, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    int8x16_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v32 = a4 + 3;
    if (!v25) {
      goto LABEL_36;
    }
  }
  else
  {
    *int16x8_t v28 = 0;
    int16x8_t v32 = a4 + 3;
    if (!v25) {
      goto LABEL_36;
    }
  }
  if (v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v32, (int64x2_t *)((char *)v19 + v27 + 16), a2, v25, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    int8x16_t v17 = (int16x8_t *)((char *)v17 + result);
    goto LABEL_37;
  }
LABEL_36:
  *int16x8_t v32 = 0;
LABEL_37:
  int16x8_t v33 = a4 + 4;
  if (a5 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a5;
  }
  unsigned int v35 = v34 - 8;
  if (v35 >= 4) {
    int v36 = 4;
  }
  else {
    int v36 = v35;
  }
  if (v36 && v21)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v33, v19 + 2, a2, v36, v21, a7, a8, a9, a10, a11, a12, a13, a14);
    int8x16_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    char *v33 = 0;
  }
  int16x8_t v37 = a4 + 5;
  if (a5 <= 12) {
    int v38 = 12;
  }
  else {
    int v38 = a5;
  }
  unsigned int v39 = v38 - 12;
  if (v39 >= 4) {
    int v40 = 4;
  }
  else {
    int v40 = v39;
  }
  if (v40 && v21)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v37, v19 + 3, a2, v40, v21, a7, a8, a9, a10, a11, a12, a13, a14);
    int8x16_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v41 = a4 + 6;
    if (!v36) {
      goto LABEL_61;
    }
  }
  else
  {
    *int16x8_t v37 = 0;
    int16x8_t v41 = a4 + 6;
    if (!v36) {
      goto LABEL_61;
    }
  }
  if (v31)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v41, (int64x2_t *)((char *)v19 + v27 + 32), a2, v36, v31, a7, a8, a9, a10, a11, a12, a13, a14);
    int8x16_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v42 = a4 + 7;
    if (!v40) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *int16x8_t v41 = 0;
  int16x8_t v42 = a4 + 7;
  if (!v40)
  {
LABEL_66:
    *int16x8_t v42 = 0;
    return result;
  }
LABEL_62:
  if (!v31) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v42, (int64x2_t *)((char *)v19 + v27 + 48), a2, v40, v31, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int16x8_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, double a5, double a6, double a7, int8x8_t a8)
{
  unint64_t v8 = 8 * (a3 & 7);
  unint64_t v9 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 + 22;
  unint64_t v11 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v8;
  if (v8 >= 0x2B) {
    v11 |= *(void *)(v9 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v12 = (8 * (a3 & 7)) | 0x200;
  int v13 = (a4 >> 6) | (4 * v11);
  uint16x8_t v14 = (uint16x8_t)vdupq_n_s16(v13 & 0xF);
  a8.i32[0] = v13 & 0xF;
  v15.i64[0] = 0x3000300030003;
  v15.i64[1] = 0x3000300030003;
  int16x8_t v16 = (int16x8_t)vbicq_s8((int8x16_t)vdupq_n_s16(((v11 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v15));
  int8x16_t v17 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v18.i64[0] = 0x202020202020202;
  v18.i64[1] = 0x202020202020202;
  int8x16_t v19 = vandq_s8(v17, v18);
  if (vmaxvq_s8(v19) < 1)
  {
    int v29 = 0;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    int16x8_t v31 = v16;
    int16x8_t v32 = v16;
    int16x8_t v33 = v16;
    v34.i64[0] = -1;
    v34.i64[1] = -1;
    int8x16_t v35 = (int8x16_t)v16;
    v36.i64[0] = -1;
    v36.i64[1] = -1;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
  }
  else
  {
    int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v19, v19));
    int32x4_t v21 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v20, v20));
    unint64_t v22 = vpaddq_s32(v21, v21).u64[0];
    v23.i64[0] = v22;
    v23.i64[1] = HIDWORD(v22);
    int64x2_t v24 = v23;
    unint64_t v25 = vaddvq_s64(v23);
    unint64_t v26 = v25 + v10;
    if (v25 <= 0x80 && v12 >= v26)
    {
      int64x2_t v38 = vaddq_s64(vzip1q_s64((int64x2_t)0, v24), vdupq_n_s64(v10 & 0x3E));
      unsigned int v39 = (int64x2_t *)(v9 + ((v10 >> 3) & 8));
      int32x4_t v28 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v39, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39->i64[0], 0), (uint64x2_t)vnegq_s64(v38)));
      if (v25 + (v10 & 0x3E) < 0x81)
      {
        int v29 = 0;
      }
      else
      {
        int v29 = 0;
        int32x4_t v28 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v39[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v38))), (int8x16_t)v28);
      }
      unint64_t v10 = v26;
    }
    else
    {
      int32x4_t v28 = 0uLL;
      int v29 = 1;
    }
    int32x2_t v40 = vzip1_s32(*(int32x2_t *)v21.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL));
    v41.i64[0] = v40.u32[0];
    v41.i64[1] = v40.u32[1];
    int32x4_t v42 = (int32x4_t)vshlq_u64((uint64x2_t)v28, (uint64x2_t)vnegq_s64(v41));
    *(int32x2_t *)v28.i8 = vmovn_s64((int64x2_t)v28);
    *(int32x2_t *)v42.i8 = vmovn_s64((int64x2_t)v42);
    int16x8_t v43 = (int16x8_t)vzip1q_s32(v28, v42);
    int16x8_t v44 = (int16x8_t)vshlq_u32((uint32x4_t)v43, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v20.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v20, (int8x16_t)v20, 8uLL)))));
    *(int16x4_t *)v43.i8 = vmovn_s32((int32x4_t)v43);
    *(int16x4_t *)v44.i8 = vmovn_s32((int32x4_t)v44);
    int16x8_t v45 = vzip1q_s16(v43, v44);
    *(int8x8_t *)v45.i8 = vzip1_s8(vmovn_s16(v45), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v45, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v19.i8, *(int8x8_t *)v14.i8))))));
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    int8x16_t v46 = vshlq_s8((int8x16_t)v43, v19);
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v46.i32[0] = vandq_s8((int8x16_t)v45, vaddq_s8(v46, (int8x16_t)v43)).u32[0];
    int16x8_t v47 = vdupq_n_s16(v46.i8[0]);
    int16x8_t v48 = vdupq_n_s16(v46.i8[1]);
    int16x8_t v49 = vdupq_n_s16(v46.i8[2]);
    int16x8_t v50 = vdupq_n_s16(v46.i8[3]);
    int8x16_t v35 = (int8x16_t)vsubq_s16(v16, v47);
    int16x8_t v33 = vsubq_s16(v16, v48);
    int16x8_t v32 = vsubq_s16(v16, v49);
    int16x8_t v31 = vsubq_s16(v16, v50);
    int8x16_t v37 = (int8x16_t)vceqzq_s16(v47);
    int8x16_t v36 = (int8x16_t)vceqzq_s16(v48);
    int8x16_t v34 = (int8x16_t)vceqzq_s16(v49);
    int8x16_t v30 = (int8x16_t)vceqzq_s16(v50);
  }
  v51.i64[0] = 0x7000700070007;
  v51.i64[1] = 0x7000700070007;
  int32x4_t v52 = 0uLL;
  int16x8_t v53 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v14, v51), (int8x16_t)0, 0xEuLL), (int8x16_t)v16);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v53, v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  if (v58 <= 0x80 && v12 >= v58 + v10)
  {
    int64x2_t v60 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v10 & 0x3F));
    int16x8_t v61 = (int64x2_t *)(v9 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v61, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61->i64[0], 0), (uint64x2_t)vnegq_s64(v60)));
    if (v58 + (v10 & 0x3F) >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v61[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v60))), (int8x16_t)v52);
    }
    v10 += v58;
  }
  else
  {
    int v29 = 1;
  }
  int v62 = a4 >> 6;
  if (v62 != 2)
  {
    LODWORD(v65) = 0;
    LODWORD(v64) = 0;
    unint64_t v66 = v10;
    goto LABEL_34;
  }
  unint64_t v63 = v10 + 8;
  if (v12 < v10 + 8)
  {
    LODWORD(v64) = 0;
    unint64_t v63 = v10;
LABEL_33:
    LODWORD(v65) = 0;
    int v29 = 1;
    unint64_t v66 = v63;
    goto LABEL_34;
  }
  uint64_t v64 = *(void *)(v9 + 8 * (v10 >> 6)) >> v10;
  if ((v10 & 0x3F) >= 0x39) {
    v64 |= *(void *)(v9 + 8 * (v10 >> 6) + 8) << -(v10 & 0x3F);
  }
  unint64_t v66 = v10 + 16;
  LODWORD(v64) = (char)v64;
  if (v12 < v10 + 16) {
    goto LABEL_33;
  }
  uint64_t v65 = *(void *)(v9 + 8 * (v63 >> 6)) >> v63;
  if ((v63 & 0x3F) >= 0x39) {
    v65 |= *(void *)(v9 + 8 * (v63 >> 6) + 8) << -(v63 & 0x3F);
  }
  LODWORD(v65) = (char)v65;
LABEL_34:
  int16x8_t v67 = 0uLL;
  int16x8_t v68 = (int16x8_t)vextq_s8((int8x16_t)0, v35, 0xEuLL);
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v66;
  if (v73 <= 0x80 && v12 >= v74)
  {
    unint64_t v77 = v66 & 0x3F;
    int64x2_t v78 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v77));
    int16x8_t v79 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
    int32x4_t v76 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v78)));
    if (v73 + v77 >= 0x81) {
      int32x4_t v76 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v78))), (int8x16_t)v76);
    }
    unint64_t v66 = v74;
  }
  else
  {
    int v29 = 1;
    int32x4_t v76 = 0uLL;
  }
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v33, v33));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  if (v84 < 0x81)
  {
    int32x2_t v85 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
    v86.i64[0] = v85.u32[0];
    v86.i64[1] = v85.u32[1];
    int64x2_t v87 = v86;
    int32x4_t v88 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL)));
    unint64_t v89 = v84 + v66;
    if (v12 >= v84 + v66)
    {
      unint64_t v90 = v66 & 0x3F;
      int64x2_t v91 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v90));
      int16x8_t v92 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int16x8_t v67 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
      if (v84 + v90 >= 0x81) {
        int16x8_t v67 = (int16x8_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), (int8x16_t)v67);
      }
      unint64_t v66 = v89;
    }
    else
    {
      int v29 = 1;
    }
    int32x4_t v93 = (int32x4_t)vshlq_u64((uint64x2_t)v67, (uint64x2_t)vnegq_s64(v87));
    *(int32x2_t *)v67.i8 = vmovn_s64((int64x2_t)v67);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    int16x8_t v94 = (int16x8_t)vzip1q_s32((int32x4_t)v67, v93);
    int16x8_t v95 = (int16x8_t)vshlq_u32((uint32x4_t)v94, (uint32x4_t)vnegq_s32(v88));
    *(int16x4_t *)v94.i8 = vmovn_s32((int32x4_t)v94);
    *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v95);
    int16x8_t v67 = vzip1q_s16(v94, v95);
  }
  else
  {
    int v29 = 1;
  }
  int32x4_t v96 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
  unint64_t v97 = vpaddq_s32(v96, v96).u64[0];
  v98.i64[0] = v97;
  v98.i64[1] = HIDWORD(v97);
  int64x2_t v99 = v98;
  unint64_t v100 = vaddvq_s64(v98);
  if (v100 <= 0x80)
  {
    int32x2_t v102 = vzip1_s32(*(int32x2_t *)v96.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v96, (int8x16_t)v96, 8uLL));
    v103.i64[0] = v102.u32[0];
    v103.i64[1] = v102.u32[1];
    int64x2_t v104 = v103;
    int32x4_t v105 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL)));
    unint64_t v106 = v100 + v66;
    if (v12 >= v100 + v66)
    {
      unint64_t v108 = v66 & 0x3F;
      int64x2_t v109 = vaddq_s64(vzip1q_s64((int64x2_t)0, v99), vdupq_n_s64(v108));
      int8x16_t v110 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int32x4_t v107 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v110, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
      if (v100 + v108 >= 0x81) {
        int32x4_t v107 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v110[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), (int8x16_t)v107);
      }
      unint64_t v66 = v106;
    }
    else
    {
      int32x4_t v107 = 0uLL;
      int v29 = 1;
    }
    int32x4_t v111 = (int32x4_t)vshlq_u64((uint64x2_t)v107, (uint64x2_t)vnegq_s64(v104));
    *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    int16x8_t v112 = (int16x8_t)vzip1q_s32(v107, v111);
    int16x8_t v113 = (int16x8_t)vshlq_u32((uint32x4_t)v112, (uint32x4_t)vnegq_s32(v105));
    *(int16x4_t *)v112.i8 = vmovn_s32((int32x4_t)v112);
    *(int16x4_t *)v113.i8 = vmovn_s32((int32x4_t)v113);
    int16x8_t v101 = vzip1q_s16(v112, v113);
  }
  else
  {
    int v29 = 1;
    int16x8_t v101 = 0uLL;
  }
  int32x4_t v114 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v31, v31));
  unint64_t v115 = vpaddq_s32(v114, v114).u64[0];
  v116.i64[0] = v115;
  v116.i64[1] = HIDWORD(v115);
  int64x2_t v117 = v116;
  unint64_t v118 = vaddvq_s64(v116);
  if (v118 > 0x80 || v12 < v118 + v66) {
    goto LABEL_64;
  }
  int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v117), vdupq_n_s64(v66 & 0x3F));
  int8x16_t v120 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
  int64x2_t v121 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
  if (v118 + (v66 & 0x3F) >= 0x81) {
    int64x2_t v121 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), (int8x16_t)v121);
  }
  if (v29 || (uint64_t v122 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v122) - (v118 + v66) >= 9))
  {
LABEL_64:
    uint64_t v122 = 0;
    v172 |= 0xFFFFLL << ((8 * (&v172 + 6)) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
  }
  else
  {
    int32x2_t v124 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
    int32x2_t v125 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v126.i64[0] = v124.u32[0];
    v126.i64[1] = v124.u32[1];
    int64x2_t v127 = v126;
    v126.i64[0] = v125.u32[0];
    v126.i64[1] = v125.u32[1];
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v52, (uint64x2_t)vnegq_s64(v127));
    int32x4_t v129 = (int32x4_t)vshlq_u64((uint64x2_t)v76, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    *(int32x2_t *)v76.i8 = vmovn_s64((int64x2_t)v76);
    *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
    int16x8_t v130 = (int16x8_t)vzip1q_s32(v52, v128);
    int16x8_t v131 = (int16x8_t)vzip1q_s32(v76, v129);
    int16x8_t v132 = (int16x8_t)vshlq_u32((uint32x4_t)v130, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL)))));
    int16x8_t v133 = (int16x8_t)vshlq_u32((uint32x4_t)v131, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    *(int16x4_t *)v132.i8 = vmovn_s32((int32x4_t)v132);
    *(int16x4_t *)v131.i8 = vmovn_s32((int32x4_t)v131);
    *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v133);
    v134.i64[0] = 0x10001000100010;
    v134.i64[1] = 0x10001000100010;
    v135.i64[0] = 0x10001000100010;
    v135.i64[1] = 0x10001000100010;
    unint64_t v136 = v11 >> 6;
    int16x8_t v137 = vzip1q_s16(v130, v132);
    v132.i64[0] = 0xF000F000F000FLL;
    v132.i64[1] = 0xF000F000F000FLL;
    int16x8_t v138 = vsubq_s16(v134, v53);
    int16x8_t v139 = vzip1q_s16(v131, v133);
    v133.i64[0] = 0xF000F000F000FLL;
    v133.i64[1] = 0xF000F000F000FLL;
    int32x2_t v140 = vzip1_s32(*(int32x2_t *)v114.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v114, (int8x16_t)v114, 8uLL));
    v141.i64[0] = 0xF000F000F000FLL;
    v141.i64[1] = 0xF000F000F000FLL;
    v142.i64[0] = 0x10001000100010;
    v142.i64[1] = 0x10001000100010;
    int16x8_t v143 = vaddq_s16(v53, v132);
    int16x8_t v144 = vaddq_s16(v68, v133);
    int16x8_t v145 = vshlq_s16(v139, vsubq_s16(v135, v68));
    v126.i64[0] = v140.u32[0];
    v126.i64[1] = v140.u32[1];
    int8x16_t v146 = (int8x16_t)vshlq_s16(vshlq_s16(v137, v138), v143);
    int16x8_t v147 = vshlq_s16(v145, v144);
    int16x8_t v148 = vshlq_s16(vshlq_s16(v67, vsubq_s16(v135, v33)), vaddq_s16(v33, v133));
    int16x8_t v149 = vshlq_s16(vshlq_s16(v101, vsubq_s16(v135, v32)), vaddq_s16(v32, v133));
    int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v121, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v145.i8 = vmovn_s64(v121);
    *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
    int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v145, v150);
    int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v151, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v31.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL)))));
    *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v151);
    *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
    int16x8_t v153 = vshlq_s16(vshlq_s16(vzip1q_s16(v151, v152), vsubq_s16(v142, v31)), vaddq_s16(v31, v141));
    if (v62 == 2)
    {
      v154.i64[0] = 0xFFFFFFFF00000000;
      v154.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v155 = vmlal_s8((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v65), v154), vdup_n_s8(v64), (int8x8_t)0x302030201000100);
      int16x8_t v147 = vaddq_s16(v147, v155);
      int16x8_t v148 = vaddq_s16(vaddq_s16(vdupq_n_s16(2 * (int)v65), v155), v148);
      int16x8_t v149 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64), v155), v149);
      int16x8_t v153 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64 + 2 * (int)v65), v155), v153);
    }
    int16x8_t v156 = vdupq_n_s16(v136);
    int16x8_t v157 = vaddq_s16((int16x8_t)vandq_s8(v146, v37), v147);
    int8x16_t v158 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v146.i8, 0);
    int16x8_t v159 = vsubq_s16(v157, (int16x8_t)vandq_s8(v158, v37));
    int16x8_t v160 = vsubq_s16(v148, (int16x8_t)vandq_s8(v158, v36));
    int16x8_t v161 = vsubq_s16(v149, (int16x8_t)vandq_s8(v158, v34));
    int16x8_t v162 = vsubq_s16(v153, (int16x8_t)vandq_s8(v158, v30));
    v163.i64[0] = 0x1000100010001;
    v163.i64[1] = 0x1000100010001;
    if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v163)))
    {
      int8x16_t v164 = (int8x16_t)v159;
      v164.i16[0] = v159.i16[7];
      v164.i16[7] = v159.i16[0];
      int8x16_t v165 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
      int16x8_t v166 = (int16x8_t)vbslq_s8(v165, v164, (int8x16_t)v159);
      int16x8_t v167 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v166, (int8x16_t)xmmword_242EA7480), v165), v166);
      int16x8_t v159 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v167, (int8x16_t)xmmword_242EA7490), v165), v167);
      int16x8_t v168 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v160, (int8x16_t)xmmword_242EA74A0), v165), v160);
      int16x8_t v160 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v168, (int8x16_t)xmmword_242EA74B0), v165), v168);
      int16x8_t v169 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v161, (int8x16_t)xmmword_242EA74C0), v165), v161);
      int16x8_t v161 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_242EA74D0), v165), v169);
      int16x8_t v170 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v162, (int8x16_t)xmmword_242EA74E0), v165), v162);
      int16x8_t v162 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_242EA74F0), v165), v170);
    }
    *a1 = vaddq_s16(v156, v159);
    a1[1] = vaddq_s16(v161, v156);
    int8x16_t v171 = (int16x8_t *)((char *)a1 + a2);
    *int8x16_t v171 = vaddq_s16(v160, v156);
    v171[1] = vaddq_s16(v162, v156);
  }
  return v122;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, __n128 *a2, unsigned __int8 *a3, double a4, __n128 a5, __n128 a6, __n128 a7)
{
  unsigned int v10 = *a3;
  if (v10 == 63)
  {
    int16x8_t v12 = *(int16x8_t *)a2;
    a5 = a2[1];
    a6 = a2[2];
    a7 = a2[3];
    *(__n128 *)a1 = *a2;
    *(__n128 *)(a1 + 16) = a6;
    *(__n128 *)(a1 + 64) = a5;
    *(__n128 *)(a1 + 80) = a7;
    uint64_t v11 = 64;
  }
  else if (v10 == 1)
  {
    int16x8_t v12 = vld1q_dup_s16((const __int16 *)a2);
    *(int16x8_t *)a1 = v12;
    *(int16x8_t *)(a1 + 16) = v12;
    *(int16x8_t *)(a1 + 64) = v12;
    *(int16x8_t *)(a1 + 80) = v12;
    uint64_t v11 = 2;
  }
  else if (*a3)
  {
    uint64_t v11 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)a1, 64, (uint64_t)a2, v10, a4, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
  }
  else
  {
    uint64_t v11 = 0;
    v12.i64[0] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
  }
  int v13 = (__n128 *)((char *)a2 + v11);
  unsigned int v14 = a3[1];
  if (a3[1])
  {
    if (v14 == 1)
    {
      int16x8_t v15 = vld1q_dup_s16((const __int16 *)v13);
      *(int16x8_t *)(a1 + 128) = v15;
      *(int16x8_t *)(a1 + 144) = v15;
      *(int16x8_t *)(a1 + 192) = v15;
      *(int16x8_t *)(a1 + 208) = v15;
      uint64_t v16 = 2;
    }
    else if (v14 == 63)
    {
      int16x8_t v15 = *(int16x8_t *)v13;
      a5 = v13[1];
      a6 = v13[2];
      a7 = v13[3];
      *(__n128 *)(a1 + 128) = *v13;
      *(__n128 *)(a1 + 144) = a6;
      *(__n128 *)(a1 + 192) = a5;
      *(__n128 *)(a1 + 208) = a7;
      uint64_t v16 = 64;
    }
    else
    {
      uint64_t v16 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)(a1 + 128), 64, (uint64_t)v13, v14, *(double *)v12.i64, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v16 = 0;
    v15.i64[0] = 0;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
    *(_OWORD *)(a1 + 208) = 0u;
  }
  int8x16_t v17 = (__n128 *)((char *)v13 + v16);
  unsigned int v18 = a3[2];
  if (a3[2])
  {
    if (v18 == 1)
    {
      int16x8_t v19 = vld1q_dup_s16((const __int16 *)v17);
      *(int16x8_t *)(a1 + 32) = v19;
      *(int16x8_t *)(a1 + 48) = v19;
      *(int16x8_t *)(a1 + 96) = v19;
      *(int16x8_t *)(a1 + 112) = v19;
      uint64_t v20 = 2;
    }
    else if (v18 == 63)
    {
      int16x8_t v19 = *(int16x8_t *)v17;
      a5 = v17[1];
      a6 = v17[2];
      a7 = v17[3];
      *(__n128 *)(a1 + 32) = *v17;
      *(__n128 *)(a1 + 48) = a6;
      *(__n128 *)(a1 + 96) = a5;
      *(__n128 *)(a1 + 112) = a7;
      uint64_t v20 = 64;
    }
    else
    {
      uint64_t v20 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)(a1 + 32), 64, (uint64_t)v17, v18, *(double *)v15.i64, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v20 = 0;
    v19.i64[0] = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
  }
  int32x4_t v21 = (__n128 *)((char *)v17 + v20);
  unsigned int v22 = a3[3];
  if (a3[3])
  {
    if (v22 == 1)
    {
      int16x8_t v23 = vld1q_dup_s16((const __int16 *)v21);
      *(int16x8_t *)(a1 + 160) = v23;
      *(int16x8_t *)(a1 + 176) = v23;
      *(int16x8_t *)(a1 + 224) = v23;
      *(int16x8_t *)(a1 + 240) = v23;
      uint64_t v24 = 2;
    }
    else if (v22 == 63)
    {
      int16x8_t v23 = *(int16x8_t *)v21;
      a5 = v21[1];
      a6 = v21[2];
      a7 = v21[3];
      *(__n128 *)(a1 + 160) = *v21;
      *(__n128 *)(a1 + 176) = a6;
      *(__n128 *)(a1 + 224) = a5;
      *(__n128 *)(a1 + 240) = a7;
      uint64_t v24 = 64;
    }
    else
    {
      uint64_t v24 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)(a1 + 160), 64, (uint64_t)v21, v22, *(double *)v19.i64, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v24 = 0;
    v23.i64[0] = 0;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 224) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
  }
  unint64_t v25 = (__n128 *)((char *)v21 + v24);
  unsigned int v26 = a3[4];
  if (a3[4])
  {
    if (v26 == 1)
    {
      int16x8_t v27 = vld1q_dup_s16((const __int16 *)v25);
      *(int16x8_t *)(a1 + 256) = v27;
      *(int16x8_t *)(a1 + 272) = v27;
      *(int16x8_t *)(a1 + 320) = v27;
      *(int16x8_t *)(a1 + 336) = v27;
      uint64_t v28 = 2;
    }
    else if (v26 == 63)
    {
      int16x8_t v27 = *(int16x8_t *)v25;
      a5 = v25[1];
      a6 = v25[2];
      a7 = v25[3];
      *(__n128 *)(a1 + 256) = *v25;
      *(__n128 *)(a1 + 272) = a6;
      *(__n128 *)(a1 + 320) = a5;
      *(__n128 *)(a1 + 336) = a7;
      uint64_t v28 = 64;
    }
    else
    {
      uint64_t v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)(a1 + 256), 64, (uint64_t)v25, v26, *(double *)v23.i64, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v28 = 0;
    v27.i64[0] = 0;
    *(_OWORD *)(a1 + 256) = 0u;
    *(_OWORD *)(a1 + 272) = 0u;
    *(_OWORD *)(a1 + 320) = 0u;
    *(_OWORD *)(a1 + 336) = 0u;
  }
  int v29 = (__n128 *)((char *)v25 + v28);
  unsigned int v30 = a3[5];
  if (a3[5])
  {
    if (v30 == 1)
    {
      int16x8_t v31 = vld1q_dup_s16((const __int16 *)v29);
      *(int16x8_t *)(a1 + 384) = v31;
      *(int16x8_t *)(a1 + 400) = v31;
      *(int16x8_t *)(a1 + 448) = v31;
      *(int16x8_t *)(a1 + 464) = v31;
      uint64_t v32 = 2;
    }
    else if (v30 == 63)
    {
      int16x8_t v31 = *(int16x8_t *)v29;
      a5 = v29[1];
      a6 = v29[2];
      a7 = v29[3];
      *(__n128 *)(a1 + 384) = *v29;
      *(__n128 *)(a1 + 400) = a6;
      *(__n128 *)(a1 + 448) = a5;
      *(__n128 *)(a1 + 464) = a7;
      uint64_t v32 = 64;
    }
    else
    {
      uint64_t v32 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)(a1 + 384), 64, (uint64_t)v29, v30, *(double *)v27.i64, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t v32 = 0;
    v31.i64[0] = 0;
    *(_OWORD *)(a1 + 384) = 0u;
    *(_OWORD *)(a1 + 400) = 0u;
    *(_OWORD *)(a1 + 448) = 0u;
    *(_OWORD *)(a1 + 464) = 0u;
  }
  int16x8_t v33 = (__n128 *)((char *)v29 + v32);
  unsigned int v34 = a3[6];
  if (a3[6])
  {
    if (v34 == 1)
    {
      int16x8_t v35 = vld1q_dup_s16((const __int16 *)v33);
      *(int16x8_t *)(a1 + 288) = v35;
      *(int16x8_t *)(a1 + 304) = v35;
      *(int16x8_t *)(a1 + 352) = v35;
      *(int16x8_t *)(a1 + 368) = v35;
      uint64_t result = 2;
    }
    else if (v34 == 63)
    {
      int16x8_t v35 = *(int16x8_t *)v33;
      a5 = v33[1];
      a6 = v33[2];
      a7 = v33[3];
      *(__n128 *)(a1 + 288) = *v33;
      *(__n128 *)(a1 + 304) = a6;
      *(__n128 *)(a1 + 352) = a5;
      *(__n128 *)(a1 + 368) = a7;
      uint64_t result = 64;
    }
    else
    {
      uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)(a1 + 288), 64, (uint64_t)v33, v34, *(double *)v31.i64, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
    }
  }
  else
  {
    uint64_t result = 0;
    v35.i64[0] = 0;
    *(_OWORD *)(a1 + 288) = 0u;
    *(_OWORD *)(a1 + 304) = 0u;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 368) = 0u;
  }
  unsigned int v37 = a3[7];
  if (!a3[7])
  {
    int16x8_t v42 = 0uLL;
    *(_OWORD *)(a1 + 416) = 0u;
    *(_OWORD *)(a1 + 432) = 0u;
LABEL_56:
    *(int16x8_t *)(a1 + 480) = v42;
    *(int16x8_t *)(a1 + 496) = v42;
    return result;
  }
  uint64_t v38 = (uint64_t)v33 + result;
  if (v37 == 1)
  {
    int16x8_t v42 = vld1q_dup_s16((const __int16 *)v38);
    *(int16x8_t *)(a1 + 416) = v42;
    *(int16x8_t *)(a1 + 432) = v42;
    goto LABEL_56;
  }
  if (v37 == 63)
  {
    long long v39 = *(_OWORD *)(v38 + 16);
    long long v40 = *(_OWORD *)(v38 + 32);
    long long v41 = *(_OWORD *)(v38 + 48);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)v38;
    *(_OWORD *)(a1 + 432) = v40;
    *(_OWORD *)(a1 + 480) = v39;
    *(_OWORD *)(a1 + 496) = v41;
  }
  else
  {
    return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)(a1 + 416), 64, v38, v37, *(double *)v35.i64, a5.n128_f64[0], a6.n128_f64[0], (int8x8_t)a7.n128_u64[0]);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int16x8_t *a1, char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, int16x4_t a6, int16x4_t a7, double a8, double a9, double a10, double a11, double a12, int16x4_t a13)
{
  int16x8_t v13 = *a3;
  int16x8_t v14 = a3[1];
  int16x8_t v15 = *(int16x8_t *)((char *)a3 + a4);
  int16x8_t v16 = *(int16x8_t *)((char *)&a3[1] + a4);
  int16x8_t v17 = vdupq_lane_s16(*(int16x4_t *)a3->i8, 0);
  int16x8_t v18 = vsubq_s16(*a3, v17);
  int16x8_t v19 = vsubq_s16(v15, v17);
  int16x8_t v20 = vsubq_s16(v14, v17);
  int16x8_t v21 = vsubq_s16(v16, v17);
  a6.i16[0] = vmaxvq_s16(v18);
  a7.i16[0] = vminvq_s16(v18);
  int16x8_t v22 = vdupq_lane_s16(a6, 0);
  int16x8_t v23 = vdupq_lane_s16(a7, 0);
  v24.i64[0] = 0x8000800080008000;
  v24.i64[1] = 0x8000800080008000;
  int16x8_t v25 = vmaxq_s16(v22, v24);
  v26.i64[0] = 0x8000800080008000;
  v26.i64[1] = 0x8000800080008000;
  int16x8_t v27 = vminq_s16(v23, v26);
  int16x8_t v28 = vzip1q_s16(v22, v23);
  int8x16_t v29 = (int8x16_t)vceqzq_s16(v28);
  v30.i64[0] = 0x10001000100010;
  v30.i64[1] = 0x10001000100010;
  int16x8_t v31 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v30, vclsq_s16(v28)), v29);
  v29.i16[0] = vmaxvq_s16(v19);
  a13.i16[0] = vminvq_s16(v19);
  int16x8_t v32 = vdupq_lane_s16(*(int16x4_t *)v29.i8, 0);
  int16x8_t v33 = vdupq_lane_s16(a13, 0);
  int16x8_t v34 = vpmaxq_s16(v31, v31);
  int16x8_t v35 = vmaxq_s16(v25, v32);
  int16x8_t v36 = vminq_s16(v27, v33);
  int16x8_t v37 = vzip1q_s16(v32, v33);
  int8x16_t v38 = (int8x16_t)vceqzq_s16(v37);
  int16x8_t v39 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v30, vclsq_s16(v37)), v38);
  int16x8_t v40 = vpmaxq_s16(v39, v39);
  v38.i16[0] = vmaxvq_s16(v20);
  int16x8_t v41 = vdupq_lane_s16(*(int16x4_t *)v38.i8, 0);
  v32.i16[0] = vminvq_s16(v20);
  int16x8_t v42 = vdupq_lane_s16(*(int16x4_t *)v32.i8, 0);
  int16x8_t v43 = vmaxq_s16(v35, v41);
  int16x8_t v44 = vminq_s16(v36, v42);
  int16x8_t v45 = vzip1q_s16(v41, v42);
  int8x16_t v46 = (int8x16_t)vceqzq_s16(v45);
  int16x8_t v47 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v30, vclsq_s16(v45)), v46);
  int16x8_t v48 = vpmaxq_s16(v47, v47);
  v46.i16[0] = vmaxvq_s16(v21);
  v42.i16[0] = vminvq_s16(v21);
  int16x8_t v49 = vdupq_lane_s16(*(int16x4_t *)v46.i8, 0);
  int16x8_t v50 = vdupq_lane_s16(*(int16x4_t *)v42.i8, 0);
  int16x8_t v51 = vmaxq_s16(v43, v49);
  int16x8_t v52 = vminq_s16(v44, v50);
  int16x8_t v53 = vzip1q_s16(v49, v50);
  int16x8_t v54 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v30, vclsq_s16(v53)), (int8x16_t)vceqzq_s16(v53));
  int16x8_t v55 = vpmaxq_s16(v54, v54);
  int16x8_t v56 = vmaxq_s16(vmaxq_s16(v34, v40), vmaxq_s16(v48, v55));
  int16x8_t v57 = vclzq_s16(vsubq_s16(v51, v52));
  int16x8_t v58 = vsubq_s16(v30, v57);
  int8x16_t v59 = (int8x16_t)vcgtq_s16(v56, v58);
  int16x8_t v60 = (int16x8_t)vbslq_s8(v59, (int8x16_t)v58, (int8x16_t)v56);
  if (vmaxvq_s16(v60))
  {
    v61.i64[0] = -1;
    v61.i64[1] = -1;
    v62.i64[0] = 0xF000F000F000FLL;
    v62.i64[1] = 0xF000F000F000FLL;
    int8x16_t v63 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v61, vsubq_s16(v62, v57)), v52), v59);
    v64.i64[0] = 0x8000800080008;
    v64.i64[1] = 0x8000800080008;
    v61.i64[0] = 0x3000300030003;
    v61.i64[1] = 0x3000300030003;
    int16x8_t v65 = vmaxq_s16(vminq_s16(vsubq_s16(v60, v34), v61), (int16x8_t)0);
    int16x8_t v66 = vmaxq_s16(vminq_s16(vsubq_s16(v60, v40), v61), (int16x8_t)0);
    int16x8_t v67 = vmaxq_s16(vminq_s16(vsubq_s16(v60, v48), v61), (int16x8_t)0);
    int16x8_t v68 = vmaxq_s16(vminq_s16(vsubq_s16(v60, v55), v61), (int16x8_t)0);
    int16x8_t v69 = vsubq_s16(v60, v65);
    int16x8_t v70 = vsubq_s16(v60, v66);
    int16x8_t v71 = vsubq_s16(v60, v67);
    int16x8_t v72 = vsubq_s16(v60, v68);
    int8x16_t v73 = (int8x16_t)vceqq_s16(vaddq_s16(v68, v67), vnegq_s16(vaddq_s16(v65, v66)));
    v66.i64[0] = 0x4000400040004;
    v66.i64[1] = 0x4000400040004;
    int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)v66, v73);
    int16x8_t v75 = (int16x8_t)vorrq_s8((int8x16_t)v74, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v60), (int8x16_t)v61), vandq_s8(v59, v64)));
    if (a5 >= 2)
    {
      int8x16_t v370 = v63;
      v80.i32[0] = v13.u16[2];
      v80.i32[1] = v13.u16[1];
      int32x2_t v81 = vshl_n_s32(vsub_s32(v80, vdup_n_s32(v13.u16[0])), 0x18uLL);
      int v82 = v81.i32[1] >> 24;
      int16x4_t v83 = (int16x4_t)vshl_s32(v81, (int32x2_t)0xFFFFFFEAFFFFFFE9);
      unsigned __int32 v84 = v81.i32[0];
      v85.i64[0] = 0xFFFFFFFF00000000;
      v85.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v86 = vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v81.i32[0] >> 24), v85), vdupq_n_s16(v81.i32[1] >> 24), (int16x8_t)xmmword_242EA76B0);
      int16x8_t v87 = vsubq_s16(v18, v86);
      int16x8_t v88 = vsubq_s16(vaddq_s16(vdupq_n_s16(-v83.i32[0]), v19), v86);
      int16x8_t v89 = vsubq_s16(vaddq_s16(vdupq_n_s16(-v83.i32[1]), v20), v86);
      int16x8_t v90 = vaddq_s16(vdupq_n_s16(-v83.i32[0] - v83.i32[1]), v21);
      int16x8_t v91 = vsubq_s16(v90, v86);
      v90.i16[0] = vmaxvq_s16(v87);
      v83.i16[0] = vminvq_s16(v87);
      int16x8_t v92 = vdupq_lane_s16(*(int16x4_t *)v90.i8, 0);
      int16x8_t v93 = vdupq_lane_s16(v83, 0);
      v94.i64[0] = 0x8000800080008000;
      v94.i64[1] = 0x8000800080008000;
      int16x8_t v95 = vmaxq_s16(v92, v94);
      v94.i64[0] = 0x8000800080008000;
      v94.i64[1] = 0x8000800080008000;
      int8x16_t v371 = (int8x16_t)v21;
      int16x8_t v96 = vminq_s16(v93, v94);
      int16x8_t v97 = vzip1q_s16(v92, v93);
      int8x16_t v98 = (int8x16_t)vceqzq_s16(v97);
      v99.i64[0] = 0x10001000100010;
      v99.i64[1] = 0x10001000100010;
      int16x8_t v100 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v97)), v98);
      int16x8_t v101 = vpmaxq_s16(v100, v100);
      v98.i16[0] = vmaxvq_s16(v88);
      v16.i16[0] = vminvq_s16(v88);
      int16x8_t v102 = vdupq_lane_s16(*(int16x4_t *)v98.i8, 0);
      int16x8_t v103 = vdupq_lane_s16(*(int16x4_t *)v16.i8, 0);
      int16x8_t v104 = vmaxq_s16(v95, v102);
      int16x8_t v105 = vminq_s16(v96, v103);
      int16x8_t v106 = vzip1q_s16(v102, v103);
      int8x16_t v107 = (int8x16_t)vceqzq_s16(v106);
      int16x8_t v108 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v106)), v107);
      v107.i16[0] = vmaxvq_s16(v89);
      int8x16_t v109 = (int8x16_t)v18;
      int16x8_t v110 = v69;
      int8x16_t v111 = (int8x16_t)v20;
      int16x8_t v112 = v72;
      v72.i16[0] = vminvq_s16(v89);
      int16x8_t v113 = vdupq_lane_s16(*(int16x4_t *)v107.i8, 0);
      int16x8_t v114 = vdupq_lane_s16(*(int16x4_t *)v72.i8, 0);
      int16x8_t v115 = vpmaxq_s16(v108, v108);
      int16x8_t v116 = vmaxq_s16(v104, v113);
      int16x8_t v117 = vminq_s16(v105, v114);
      int16x8_t v118 = vzip1q_s16(v113, v114);
      int8x16_t v119 = (int8x16_t)vceqzq_s16(v118);
      int16x8_t v120 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v118)), v119);
      int16x8_t v121 = vpmaxq_s16(v120, v120);
      v120.i16[0] = vmaxvq_s16(v91);
      int16x8_t v122 = vdupq_lane_s16(*(int16x4_t *)v120.i8, 0);
      v119.i16[0] = vminvq_s16(v91);
      int16x8_t v123 = vdupq_lane_s16(*(int16x4_t *)v119.i8, 0);
      int16x8_t v124 = vminq_s16(v117, v123);
      int16x8_t v125 = vzip1q_s16(v122, v123);
      int16x8_t v126 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v125)), (int8x16_t)vceqzq_s16(v125));
      int16x8_t v127 = v71;
      int16x8_t v128 = vpmaxq_s16(v126, v126);
      int16x8_t v129 = vmaxq_s16(vmaxq_s16(v101, v115), vmaxq_s16(v121, v128));
      int16x8_t v130 = vclzq_s16(vsubq_s16(vmaxq_s16(v116, v122), v124));
      int16x8_t v131 = vsubq_s16(v99, v130);
      int8x16_t v132 = (int8x16_t)vcgtq_s16(v129, v131);
      int16x8_t v133 = (int16x8_t)vbslq_s8(v132, (int8x16_t)v131, (int8x16_t)v129);
      v129.i64[0] = 0x1000100010001;
      v129.i64[1] = 0x1000100010001;
      int16x8_t v134 = vmaxq_s16(v133, v129);
      v133.i64[0] = 0x3000300030003;
      v133.i64[1] = 0x3000300030003;
      int16x8_t v135 = vmaxq_s16(vminq_s16(vsubq_s16(v134, v101), v133), (int16x8_t)0);
      int16x8_t v136 = vmaxq_s16(vminq_s16(vsubq_s16(v134, v115), v133), (int16x8_t)0);
      int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16(v134, v121), v133), (int16x8_t)0);
      int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16(v134, v128), v133), (int16x8_t)0);
      int16x8_t v139 = vsubq_s16(v134, v135);
      int16x8_t v140 = vsubq_s16(v134, v136);
      int16x8_t v141 = vsubq_s16(v134, v137);
      int16x8_t v142 = vsubq_s16(v134, v138);
      int8x16_t v143 = (int8x16_t)vceqq_s16(vaddq_s16(v138, v137), vnegq_s16(vaddq_s16(v135, v136)));
      v138.i64[0] = 0x4000400040004;
      v138.i64[1] = 0x4000400040004;
      int16x8_t v144 = (int16x8_t)vbicq_s8((int8x16_t)v138, v143);
      v145.i64[0] = 0x7000700070007;
      v145.i64[1] = 0x7000700070007;
      int16x8_t v146 = (int16x8_t)vandq_s8((int8x16_t)v58, v59);
      int16x8_t v147 = vmulq_s16(v110, v145);
      int16x8_t v148 = vshlq_n_s16(vaddq_s16(vaddq_s16(v127, v70), v112), 3uLL);
      int16x8_t v149 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v147, v146), v148), vaddq_s16(v74, v74)), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbslq_s8(v132, (int8x16_t)vaddq_s16(v134, v99), (int8x16_t)v99), v139, v145), vshlq_n_s16(vaddq_s16(vaddq_s16(v141, v140), v142), 3uLL)), vaddq_s16(v144, v144))), 0);
      v138.i16[0] = vaddvq_s16(v149);
      int v150 = v138.u16[0];
      unint64_t v76 = v82 | HIWORD(v84);
      if (v138.i16[0])
      {
        v151.i64[0] = 0x2000200020002;
        v151.i64[1] = 0x2000200020002;
        v152.i64[0] = 0xA000A000A000ALL;
        v152.i64[1] = 0xA000A000A000ALL;
        int16x8_t v153 = (int16x8_t)vbslq_s8(v132, v152, v151);
        v152.i64[0] = -1;
        v152.i64[1] = -1;
        int8x16_t v154 = vorrq_s8((int8x16_t)v144, (int8x16_t)v153);
        v153.i64[0] = 0xF000F000F000FLL;
        v153.i64[1] = 0xF000F000F000FLL;
        int8x16_t v155 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v152, vsubq_s16(v153, v130)), v124), v132);
        int8x16_t v156 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v149, 0xFuLL));
        int8x16_t v365 = vbslq_s8(v156, (int8x16_t)v87, v109);
        int8x16_t v366 = vbslq_s8(v156, (int8x16_t)v88, (int8x16_t)v19);
        int16x8_t v110 = (int16x8_t)vbslq_s8(v156, (int8x16_t)v139, (int8x16_t)v110);
        int16x8_t v70 = (int16x8_t)vbslq_s8(v156, (int8x16_t)v140, (int8x16_t)v70);
        int8x16_t v370 = vbslq_s8(v156, v155, v370);
        int8x16_t v371 = vbslq_s8(v156, (int8x16_t)v91, v371);
        int16x8_t v60 = (int16x8_t)vbslq_s8(v156, (int8x16_t)v134, (int8x16_t)v60);
        int16x8_t v75 = (int16x8_t)vbslq_s8(v156, v154, (int8x16_t)v75);
        int16x8_t v147 = vmulq_s16(v110, v145);
        int16x8_t v367 = (int16x8_t)vbslq_s8(v156, (int8x16_t)v141, (int8x16_t)v127);
        int8x16_t v368 = vbslq_s8(v156, (int8x16_t)v89, v111);
        int16x8_t v369 = (int16x8_t)vbslq_s8(v156, (int8x16_t)v142, (int8x16_t)v112);
        int16x8_t v148 = vshlq_n_s16(vaddq_s16(vaddq_s16(v367, v70), v369), 3uLL);
      }
      else
      {
        int8x16_t v365 = v109;
        int8x16_t v366 = (int8x16_t)v19;
        int16x8_t v367 = v127;
        int8x16_t v368 = v111;
        int16x8_t v369 = v112;
      }
      int16x8_t v69 = v110;
      int16x8_t v14 = a3[1];
      int16x4_t v157 = *(int16x4_t *)&a3->i8[a4];
      v158.i64[0] = 0x8000800080008000;
      v158.i64[1] = 0x8000800080008000;
      v159.i64[0] = 0x8000800080008000;
      v159.i64[1] = 0x8000800080008000;
      v160.i64[0] = 0x7000700070007;
      v160.i64[1] = 0x7000700070007;
      v161.i64[0] = 0x3000300030003;
      v161.i64[1] = 0x3000300030003;
      int16x8_t v162 = vsubq_s16(v13, (int16x8_t)vqtbl1q_s8((int8x16_t)v13, (int8x16_t)xmmword_242EA7520));
      int8x16_t v163 = *(int8x16_t *)((char *)a3 + a4);
      v163.i16[7] = HIWORD(*(unsigned long long *)a3);
      int16x8_t v164 = vsubq_s16(*(int16x8_t *)((char *)a3 + a4), (int16x8_t)vqtbl1q_s8(v163, (int8x16_t)xmmword_242EA7530));
      int8x16_t v165 = (int8x16_t)v14;
      v165.i16[7] = HIWORD(*(unsigned long long *)a3);
      int16x8_t v166 = vsubq_s16(v14, (int16x8_t)vqtbl1q_s8(v165, (int8x16_t)xmmword_242EA7540));
      int8x16_t v167 = *(int8x16_t *)((char *)&a3[1] + a4);
      v167.i16[7] = HIWORD(*(unsigned long long *)a3);
      int16x4_t v168 = (int16x4_t)0x100010001000F0ELL;
      int16x8_t v169 = v162;
      v169.i16[0] = v162.i16[7];
      v169.i16[7] = v162.i16[0];
      v162.i16[0] = vmaxvq_s16(v169);
      v168.i16[0] = vminvq_s16(v169);
      int16x8_t v170 = vdupq_lane_s16(*(int16x4_t *)v162.i8, 0);
      int16x8_t v171 = vdupq_lane_s16(v168, 0);
      int16x8_t v172 = vsubq_s16(*(int16x8_t *)((char *)&a3[1] + a4), (int16x8_t)vqtbl1q_s8(v167, (int8x16_t)xmmword_242EA7550));
      int16x8_t v173 = vmaxq_s16(v170, v158);
      int16x8_t v174 = vminq_s16(v171, v159);
      int16x8_t v175 = vzip1q_s16(v170, v171);
      int8x16_t v176 = (int8x16_t)vceqzq_s16(v175);
      int16x8_t v177 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v175)), v176);
      int16x8_t v178 = vpmaxq_s16(v177, v177);
      v176.i16[0] = vmaxvq_s16(v164);
      int16x8_t v179 = vdupq_lane_s16(*(int16x4_t *)v176.i8, 0);
      v157.i16[0] = vminvq_s16(v164);
      int16x8_t v180 = vdupq_lane_s16(v157, 0);
      int16x8_t v181 = vmaxq_s16(v173, v179);
      int16x8_t v182 = vminq_s16(v174, v180);
      int16x8_t v183 = vzip1q_s16(v179, v180);
      int8x16_t v184 = (int8x16_t)vceqzq_s16(v183);
      int16x8_t v185 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v183)), v184);
      int16x8_t v186 = vpmaxq_s16(v185, v185);
      v184.i16[0] = vmaxvq_s16(v166);
      v159.i16[0] = vminvq_s16(v166);
      int16x8_t v187 = vdupq_lane_s16(*(int16x4_t *)v184.i8, 0);
      int16x8_t v188 = vdupq_lane_s16(*(int16x4_t *)v159.i8, 0);
      int16x8_t v189 = vmaxq_s16(v181, v187);
      int16x8_t v190 = vminq_s16(v182, v188);
      int16x8_t v191 = vzip1q_s16(v187, v188);
      int8x16_t v192 = (int8x16_t)vceqzq_s16(v191);
      int16x8_t v193 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v191)), v192);
      v192.i16[0] = vmaxvq_s16(v172);
      v132.i16[0] = vminvq_s16(v172);
      int16x8_t v194 = vdupq_lane_s16(*(int16x4_t *)v192.i8, 0);
      int16x8_t v195 = vdupq_lane_s16(*(int16x4_t *)v132.i8, 0);
      int16x8_t v196 = vpmaxq_s16(v193, v193);
      int16x8_t v197 = vmaxq_s16(v189, v194);
      int16x8_t v198 = vminq_s16(v190, v195);
      int16x8_t v199 = vzip1q_s16(v194, v195);
      int16x8_t v200 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v99, vclsq_s16(v199)), (int8x16_t)vceqzq_s16(v199));
      int16x8_t v201 = vpmaxq_s16(v200, v200);
      int16x8_t v202 = vmaxq_s16(vmaxq_s16(v178, v186), vmaxq_s16(v196, v201));
      int16x8_t v203 = vclzq_s16(vsubq_s16(v197, v198));
      int16x8_t v204 = vsubq_s16(v99, v203);
      int8x16_t v205 = (int8x16_t)vcgtq_s16(v202, v204);
      int16x8_t v206 = (int16x8_t)vbslq_s8(v205, (int8x16_t)v204, (int8x16_t)v202);
      int16x8_t v207 = vmaxq_s16(vminq_s16(vsubq_s16(v206, v178), v161), (int16x8_t)0);
      int16x8_t v208 = vmaxq_s16(vminq_s16(vsubq_s16(v206, v186), v161), (int16x8_t)0);
      int16x8_t v209 = vmaxq_s16(vminq_s16(vsubq_s16(v206, v196), v161), (int16x8_t)0);
      int16x8_t v210 = vmaxq_s16(vminq_s16(vsubq_s16(v206, v201), v161), (int16x8_t)0);
      int16x8_t v211 = vsubq_s16(v206, v207);
      int16x8_t v212 = vsubq_s16(v206, v208);
      int16x8_t v213 = vsubq_s16(v206, v209);
      int16x8_t v214 = vsubq_s16(v206, v210);
      int8x16_t v215 = (int8x16_t)vceqq_s16(vaddq_s16(v210, v209), vnegq_s16(vaddq_s16(v207, v208)));
      v208.i64[0] = 0x4000400040004;
      v208.i64[1] = 0x4000400040004;
      int16x8_t v216 = (int16x8_t)vbicq_s8((int8x16_t)v208, v215);
      v209.i64[0] = 0x8000800080008;
      v209.i64[1] = 0x8000800080008;
      int16x8_t v217 = (int16x8_t)vandq_s8((int8x16_t)v75, (int8x16_t)v161);
      v218.i64[0] = 0x2000200020002;
      v218.i64[1] = 0x2000200020002;
      int16x8_t v219 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8((int8x16_t)v60, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8((int8x16_t)v75, (int8x16_t)v209))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16(v75, v75), (int8x16_t)v209)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16(v217, v218), (int8x16_t)v99), v147)), v148), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)v204, v205), v211, v160), vshlq_n_s16(vaddq_s16(vaddq_s16(v213, v212), v214), 3uLL)), vaddq_s16(v216, v216))),
               0);
      v209.i16[0] = vaddvq_s16(v219);
      int v220 = v209.u16[0];
      if (v209.i16[0])
      {
        v221.i64[0] = 0x9000900090009;
        v221.i64[1] = 0x9000900090009;
        v222.i64[0] = -1;
        v222.i64[1] = -1;
        int8x16_t v223 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v206), (int8x16_t)v218), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v205, v221), (int16x8_t)vmvnq_s8(v205))), (int8x16_t)v216);
        v224.i64[0] = 0xF000F000F000FLL;
        v224.i64[1] = 0xF000F000F000FLL;
        int8x16_t v225 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v222, vsubq_s16(v224, v203)), v198), v205);
        int8x16_t v226 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v219, 0xFuLL));
        v17.i16[0] = vbslq_s8(v226, vextq_s8((int8x16_t)v13, (int8x16_t)v13, 0xEuLL), (int8x16_t)v17).u16[0];
        int16x8_t v18 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v169, v365);
        int16x8_t v19 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v164, v366);
        int16x8_t v20 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v166, v368);
        int16x8_t v21 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v172, v371);
        int16x8_t v69 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v211, (int8x16_t)v69);
        int16x8_t v70 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v212, (int8x16_t)v70);
        int16x8_t v71 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v213, (int8x16_t)v367);
        int16x8_t v72 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v214, (int8x16_t)v369);
        int8x16_t v63 = vbslq_s8(v226, v225, v370);
        int16x8_t v60 = (int16x8_t)vbslq_s8(v226, (int8x16_t)v206, (int8x16_t)v60);
        int16x8_t v75 = (int16x8_t)vbslq_s8(v226, v223, (int8x16_t)v75);
      }
      else
      {
        int8x16_t v63 = v370;
        int16x8_t v21 = (int16x8_t)v371;
        int16x8_t v20 = (int16x8_t)v368;
        int16x8_t v72 = v369;
        int16x8_t v19 = (int16x8_t)v366;
        int16x8_t v71 = v367;
        int16x8_t v18 = (int16x8_t)v365;
      }
      int16x8_t v15 = *(int16x8_t *)((char *)a3 + a4);
      int16x8_t v16 = *(int16x8_t *)((char *)&a3[1] + a4);
      if (v150) {
        BOOL v227 = v220 == 0;
      }
      else {
        BOOL v227 = 0;
      }
      char v77 = v227;
    }
    else
    {
      unint64_t v76 = 0;
      char v77 = 0;
    }
    v228.i64[0] = 0x8000800080008;
    v228.i64[1] = 0x8000800080008;
    int16x8_t v229 = (int16x8_t)vandq_s8((int8x16_t)v75, v228);
    v230.i64[0] = 0x3000300030003;
    v230.i64[1] = 0x3000300030003;
    v231.i64[0] = 0x2000200020002;
    v231.i64[1] = 0x2000200020002;
    int8x16_t v232 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8((int8x16_t)v75, v230), v231);
    v231.i64[0] = 0x10001000100010;
    v231.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(7 * v69.i16[0]
                                    + 8 * vaddq_s16(v71, vaddq_s16(v70, v72)).u16[0]
                                    + ((2 * v75.i16[0]) & 8)
                                    + vbicq_s8((int8x16_t)v60, (int8x16_t)vceqzq_s16(v229)).u16[0]
                                    + vandq_s8(v232, (int8x16_t)v231).u16[0])
                          + 29) >= 0x200)
    {
      *a1 = v13;
      a1[1] = v15;
      char v78 = 63;
      unint64_t v79 = 64;
      a1[2] = v14;
      a1[3] = v16;
    }
    else
    {
      int16x8_t v233 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v234 = 8 * (a1 & 7);
      if (v234) {
        uint64_t v235 = *v233 & ~(-1 << v234);
      }
      else {
        uint64_t v235 = 0;
      }
      if (v60.i16[0]) {
        uint64_t v236 = (16 * v60.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v236 = 0;
      }
      *a2 = v75.i8[0] << 6;
      unint64_t v237 = (v236 & 0xFFFFFFFFFF0000F0 | ((unint64_t)v17.u16[0] << 8) | v75.i8[0] & 0xF) >> 2;
      unint64_t v238 = (v237 << v234) | v235;
      if (v234 >= 0x2A)
      {
        *int16x8_t v233 = v238;
        unint64_t v238 = v237 >> (-8 * (a1 & 7u));
      }
      unint64_t v239 = v234 + 22;
      int8x16_t v240 = (int8x16_t)vsubq_s16(v60, v69);
      int8x16_t v241 = (int8x16_t)vsubq_s16(v60, v70);
      int8x16_t v242 = (int8x16_t)vsubq_s16(v60, v71);
      int8x16_t v243 = (int8x16_t)vsubq_s16(v60, v72);
      *(uint8x8_t *)v240.i8 = vqmovn_u16((uint16x8_t)v240);
      *(uint8x8_t *)v241.i8 = vqmovn_u16((uint16x8_t)v241);
      *(uint8x8_t *)v242.i8 = vqmovn_u16((uint16x8_t)v242);
      *(uint8x8_t *)v243.i8 = vqmovn_u16((uint16x8_t)v243);
      v240.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v240, v241), (int16x8_t)vzip1q_s8(v242, v243)).u32[0];
      v242.i64[0] = 0x202020202020202;
      v242.i64[1] = 0x202020202020202;
      int8x16_t v244 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v75.i8, (int8x8_t)0x4000400040004)))), v242);
      v242.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v242.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v243.i64[0] = -1;
      v243.i64[1] = -1;
      uint8x16_t v245 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v243, (uint8x16_t)vorrq_s8(v244, v242)), (int8x16_t)v240.u32[0]);
      int16x8_t v246 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v244.i8);
      uint16x8_t v247 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v245.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v246)), (int16x8_t)vmovl_high_u8(v245));
      uint16x8_t v248 = (uint16x8_t)vpaddq_s16(v246, (int16x8_t)vmovl_high_u8((uint8x16_t)v244));
      int32x4_t v249 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v248.i8);
      int32x4_t v250 = (int32x4_t)vmovl_high_u16(v248);
      int32x4_t v251 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v247.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v249)), (int32x4_t)vshlq_u32(vmovl_high_u16(v247), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v250)));
      int32x4_t v252 = vpaddq_s32(v249, v250);
      v253.i64[0] = v251.u32[0];
      v253.i64[1] = v251.u32[1];
      uint64x2_t v254 = (uint64x2_t)v253;
      v253.i64[0] = v251.u32[2];
      v253.i64[1] = v251.u32[3];
      uint64x2_t v255 = (uint64x2_t)v253;
      v253.i64[0] = v252.u32[0];
      v253.i64[1] = v252.u32[1];
      int64x2_t v256 = v253;
      v253.i64[0] = v252.u32[2];
      v253.i64[1] = v252.u32[3];
      int64x2_t v257 = vpaddq_s64((int64x2_t)vshlq_u64(v254, (uint64x2_t)vzip1q_s64((int64x2_t)0, v256)), (int64x2_t)vshlq_u64(v255, (uint64x2_t)vzip1q_s64((int64x2_t)0, v253)));
      int64x2_t v258 = vpaddq_s64(v256, v253);
      uint64_t v259 = (v234 + 22) & 0x3E;
      unint64_t v260 = (v257.i64[0] << v259) | v238;
      if ((unint64_t)(v258.i64[0] + v259) >= 0x40)
      {
        *(void *)((char *)v233 + ((v239 >> 3) & 8)) = v260;
        unint64_t v260 = (unint64_t)v257.i64[0] >> -(char)v259;
      }
      unint64_t v261 = v258.i64[0] + v239;
      unint64_t v262 = v260 | (v257.i64[1] << v261);
      if ((v261 & 0x3F) + v258.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v261 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v262;
        unint64_t v262 = (unint64_t)v257.i64[1] >> -(v261 & 0x3F);
        if ((v261 & 0x3F) == 0) {
          unint64_t v262 = 0;
        }
      }
      int8x16_t v263 = (int8x16_t)vceqq_s16(v60, v69);
      unint64_t v264 = v261 + v258.i64[1];
      v265.i64[0] = -1;
      v265.i64[1] = -1;
      int16x8_t v266 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v229, v229), (int8x16_t)0, 0xEuLL), (int8x16_t)v60);
      v267.i64[0] = 0xF000F000F000FLL;
      v267.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v268 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v265, (uint16x8_t)vaddq_s16(v266, v267)), v63);
      int32x4_t v269 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v266.i8);
      int32x4_t v270 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v268.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v269)), (int32x4_t)vmovl_high_u16(v268));
      int32x4_t v271 = vpaddq_s32(v269, (int32x4_t)vmovl_high_u16((uint16x8_t)v266));
      v272.i64[0] = v270.u32[0];
      v272.i64[1] = v270.u32[1];
      uint64x2_t v273 = (uint64x2_t)v272;
      v272.i64[0] = v270.u32[2];
      v272.i64[1] = v270.u32[3];
      uint64x2_t v274 = (uint64x2_t)v272;
      v272.i64[0] = v271.u32[0];
      v272.i64[1] = v271.u32[1];
      int64x2_t v275 = v272;
      v272.i64[0] = v271.u32[2];
      v272.i64[1] = v271.u32[3];
      int64x2_t v276 = vpaddq_s64((int64x2_t)vshlq_u64(v273, (uint64x2_t)vzip1q_s64((int64x2_t)0, v275)), (int64x2_t)vshlq_u64(v274, (uint64x2_t)vzip1q_s64((int64x2_t)0, v272)));
      int64x2_t v277 = vpaddq_s64(v275, v272);
      unint64_t v278 = (v276.i64[0] << v264) | v262;
      if (v277.i64[0] + (v264 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v233 + ((v264 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v278;
        unint64_t v278 = (unint64_t)v276.i64[0] >> -(v264 & 0x3F);
        if ((v264 & 0x3F) == 0) {
          unint64_t v278 = 0;
        }
      }
      int16x8_t v279 = (int16x8_t)vandq_s8(v63, v263);
      uint64_t v280 = v277.i64[1];
      unint64_t v281 = v277.i64[0] + v264;
      unint64_t v282 = v278 | (v276.i64[1] << v281);
      if ((v281 & 0x3F) + v277.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v281 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v282;
        unint64_t v282 = (unint64_t)v276.i64[1] >> -(v281 & 0x3F);
        if ((v281 & 0x3F) == 0) {
          unint64_t v282 = 0;
        }
      }
      int8x16_t v283 = (int8x16_t)vceqq_s16(v60, v70);
      int8x16_t v284 = (int8x16_t)vaddq_s16(v279, v18);
      unint64_t v285 = v281 + v280;
      if (v77)
      {
        v282 |= v76 << v285;
        if ((v285 & 0x3F) >= 0x30)
        {
          *(void *)((char *)v233 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v282;
          unint64_t v282 = v76 >> -(v285 & 0x3F);
        }
        v285 += 16;
      }
      int16x8_t v286 = (int16x8_t)vandq_s8(v63, v283);
      int16x8_t v287 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v69, 0xEuLL);
      v288.i64[0] = 0xF000F000F000FLL;
      v288.i64[1] = 0xF000F000F000FLL;
      v289.i64[0] = -1;
      v289.i64[1] = -1;
      uint16x8_t v290 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v289, (uint16x8_t)vaddq_s16(v287, v288)), v284);
      int32x4_t v291 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v287.i8);
      int32x4_t v292 = (int32x4_t)vmovl_high_u16((uint16x8_t)v287);
      int32x4_t v293 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v290.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v291)), (int32x4_t)vshlq_u32(vmovl_high_u16(v290), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)));
      int32x4_t v294 = vpaddq_s32(v291, v292);
      v295.i64[0] = v293.u32[0];
      v295.i64[1] = v293.u32[1];
      uint64x2_t v296 = (uint64x2_t)v295;
      v295.i64[0] = v293.u32[2];
      v295.i64[1] = v293.u32[3];
      uint64x2_t v297 = (uint64x2_t)v295;
      v295.i64[0] = v294.u32[0];
      v295.i64[1] = v294.u32[1];
      int64x2_t v298 = v295;
      v295.i64[0] = v294.u32[2];
      v295.i64[1] = v294.u32[3];
      int64x2_t v299 = vpaddq_s64((int64x2_t)vshlq_u64(v296, (uint64x2_t)vzip1q_s64((int64x2_t)0, v298)), (int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v295)));
      int64x2_t v300 = vpaddq_s64(v298, v295);
      unint64_t v301 = (v299.i64[0] << v285) | v282;
      if (v300.i64[0] + (v285 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v233 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v301;
        unint64_t v301 = (unint64_t)v299.i64[0] >> -(v285 & 0x3F);
        if ((v285 & 0x3F) == 0) {
          unint64_t v301 = 0;
        }
      }
      int8x16_t v302 = (int8x16_t)vceqq_s16(v60, v71);
      int8x16_t v303 = (int8x16_t)vaddq_s16(v19, v286);
      unint64_t v304 = v300.i64[0] + v285;
      uint64_t v305 = (v300.i64[0] + v285) & 0x3F;
      unint64_t v306 = v301 | (v299.i64[1] << v304);
      if ((v304 & 0x3F) + v300.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v304 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v306;
        unint64_t v306 = (unint64_t)v299.i64[1] >> -(char)v305;
        if (!v305) {
          unint64_t v306 = 0;
        }
      }
      int16x8_t v307 = (int16x8_t)vandq_s8(v63, v302);
      unint64_t v308 = v304 + v300.i64[1];
      v309.i64[0] = 0xF000F000F000FLL;
      v309.i64[1] = 0xF000F000F000FLL;
      v310.i64[0] = -1;
      v310.i64[1] = -1;
      uint16x8_t v311 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v310, (uint16x8_t)vaddq_s16(v70, v309)), v303);
      int32x4_t v312 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v70.i8);
      int32x4_t v313 = (int32x4_t)vmovl_high_u16((uint16x8_t)v70);
      int32x4_t v314 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v311.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v312)), (int32x4_t)vshlq_u32(vmovl_high_u16(v311), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v313)));
      int32x4_t v315 = vpaddq_s32(v312, v313);
      v316.i64[0] = v314.u32[0];
      v316.i64[1] = v314.u32[1];
      uint64x2_t v317 = (uint64x2_t)v316;
      v316.i64[0] = v314.u32[2];
      v316.i64[1] = v314.u32[3];
      uint64x2_t v318 = (uint64x2_t)v316;
      v316.i64[0] = v315.u32[0];
      v316.i64[1] = v315.u32[1];
      int64x2_t v319 = v316;
      v316.i64[0] = v315.u32[2];
      v316.i64[1] = v315.u32[3];
      int64x2_t v320 = vpaddq_s64((int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v319)), (int64x2_t)vshlq_u64(v318, (uint64x2_t)vzip1q_s64((int64x2_t)0, v316)));
      int64x2_t v321 = vpaddq_s64(v319, v316);
      unint64_t v322 = (v320.i64[0] << v308) | v306;
      if (v321.i64[0] + (v308 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v233 + ((v308 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v322;
        unint64_t v322 = (unint64_t)v320.i64[0] >> -(v308 & 0x3F);
        if ((v308 & 0x3F) == 0) {
          unint64_t v322 = 0;
        }
      }
      int8x16_t v323 = (int8x16_t)vceqq_s16(v60, v72);
      int8x16_t v324 = (int8x16_t)vaddq_s16(v20, v307);
      unint64_t v325 = v321.i64[0] + v308;
      unint64_t v326 = v322 | (v320.i64[1] << v325);
      if ((v325 & 0x3F) + v321.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v325 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v326;
        unint64_t v326 = (unint64_t)v320.i64[1] >> -(v325 & 0x3F);
        if ((v325 & 0x3F) == 0) {
          unint64_t v326 = 0;
        }
      }
      int16x8_t v327 = (int16x8_t)vandq_s8(v63, v323);
      unint64_t v328 = v325 + v321.i64[1];
      v329.i64[0] = 0xF000F000F000FLL;
      v329.i64[1] = 0xF000F000F000FLL;
      v330.i64[0] = -1;
      v330.i64[1] = -1;
      uint16x8_t v331 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v330, (uint16x8_t)vaddq_s16(v71, v329)), v324);
      int32x4_t v332 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v71.i8);
      int32x4_t v333 = (int32x4_t)vmovl_high_u16((uint16x8_t)v71);
      int32x4_t v334 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v331.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v332)), (int32x4_t)vshlq_u32(vmovl_high_u16(v331), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v333)));
      int32x4_t v335 = vpaddq_s32(v332, v333);
      v336.i64[0] = v334.u32[0];
      v336.i64[1] = v334.u32[1];
      uint64x2_t v337 = (uint64x2_t)v336;
      v336.i64[0] = v334.u32[2];
      v336.i64[1] = v334.u32[3];
      uint64x2_t v338 = (uint64x2_t)v336;
      v336.i64[0] = v335.u32[0];
      v336.i64[1] = v335.u32[1];
      int64x2_t v339 = v336;
      v336.i64[0] = v335.u32[2];
      v336.i64[1] = v335.u32[3];
      int64x2_t v340 = vpaddq_s64((int64x2_t)vshlq_u64(v337, (uint64x2_t)vzip1q_s64((int64x2_t)0, v339)), (int64x2_t)vshlq_u64(v338, (uint64x2_t)vzip1q_s64((int64x2_t)0, v336)));
      int64x2_t v341 = vpaddq_s64(v339, v336);
      unint64_t v342 = (v340.i64[0] << v328) | v326;
      if (v341.i64[0] + (v328 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v233 + ((v328 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
        unint64_t v342 = (unint64_t)v340.i64[0] >> -(v328 & 0x3F);
        if ((v328 & 0x3F) == 0) {
          unint64_t v342 = 0;
        }
      }
      int8x16_t v343 = (int8x16_t)vaddq_s16(v21, v327);
      unint64_t v344 = v341.i64[0] + v328;
      unint64_t v345 = v342 | (v340.i64[1] << v344);
      if ((v344 & 0x3F) + v341.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v345;
        unint64_t v345 = (unint64_t)v340.i64[1] >> -(v344 & 0x3F);
        if ((v344 & 0x3F) == 0) {
          unint64_t v345 = 0;
        }
      }
      unint64_t v346 = v344 + v341.i64[1];
      v347.i64[0] = 0xF000F000F000FLL;
      v347.i64[1] = 0xF000F000F000FLL;
      v348.i64[0] = -1;
      v348.i64[1] = -1;
      uint16x8_t v349 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v348, (uint16x8_t)vaddq_s16(v72, v347)), v343);
      int32x4_t v350 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v72.i8);
      int32x4_t v351 = (int32x4_t)vmovl_high_u16((uint16x8_t)v72);
      int32x4_t v352 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v349.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v350)), (int32x4_t)vshlq_u32(vmovl_high_u16(v349), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v351)));
      int32x4_t v353 = vpaddq_s32(v350, v351);
      v354.i64[0] = v352.u32[0];
      v354.i64[1] = v352.u32[1];
      uint64x2_t v355 = (uint64x2_t)v354;
      v354.i64[0] = v352.u32[2];
      v354.i64[1] = v352.u32[3];
      uint64x2_t v356 = (uint64x2_t)v354;
      v354.i64[0] = v353.u32[0];
      v354.i64[1] = v353.u32[1];
      int64x2_t v357 = v354;
      v354.i64[0] = v353.u32[2];
      v354.i64[1] = v353.u32[3];
      int64x2_t v358 = vpaddq_s64((int64x2_t)vshlq_u64(v355, (uint64x2_t)vzip1q_s64((int64x2_t)0, v357)), (int64x2_t)vshlq_u64(v356, (uint64x2_t)vzip1q_s64((int64x2_t)0, v354)));
      int64x2_t v359 = vpaddq_s64(v357, v354);
      unint64_t v360 = (v358.i64[0] << v346) | v345;
      if (v359.i64[0] + (v346 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v233 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
        if ((v346 & 0x3F) != 0) {
          unint64_t v360 = (unint64_t)v358.i64[0] >> -(v346 & 0x3F);
        }
        else {
          unint64_t v360 = 0;
        }
      }
      unint64_t v361 = v359.i64[0] + v346;
      unint64_t v362 = v360 | (v358.i64[1] << v361);
      if ((v361 & 0x3F) + v359.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v361 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v362;
        unint64_t v362 = (unint64_t)v358.i64[1] >> -(v361 & 0x3F);
        if ((v361 & 0x3F) == 0) {
          unint64_t v362 = 0;
        }
      }
      unint64_t v363 = v361 + v359.i64[1];
      if ((v363 & 0x3F) != 0) {
        *(void *)((char *)v233 + ((v363 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v362;
      }
      unint64_t v79 = (v363 - v234 + 7) >> 3;
      char v78 = *a2 | (v79 - 1);
    }
  }
  else
  {
    a1->i16[0] = a3->i16[0];
    char v78 = 1;
    unint64_t v79 = 2;
  }
  *a2 = v78;
  return v79;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int16x8_t *a3, char *a4, int a5, int a6, int16x4_t a7, int16x4_t a8, double a9, double a10, double a11, double a12, double a13, int16x4_t a14)
{
  int16x8_t v17 = a3;
  int16x8_t v19 = (int16x8_t *)result;
  if (a5 >= 4) {
    unsigned int v20 = 4;
  }
  else {
    unsigned int v20 = a5;
  }
  if (a6 >= 2) {
    int v21 = 2;
  }
  else {
    int v21 = a6;
  }
  if (v20 && v21)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v20, a7, a8, a9, a10, a11, a12, a13, a14);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v22 = 2 * a2;
  int16x8_t v23 = a4 + 1;
  if (a6 <= 2) {
    int v24 = 2;
  }
  else {
    int v24 = a6;
  }
  unsigned int v25 = v24 - 2;
  if (v25 >= 2) {
    int v26 = 2;
  }
  else {
    int v26 = v25;
  }
  if (v20 && v26)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v23, (int16x8_t *)((char *)v19 + v22), a2, v20, a7, a8, a9, a10, a11, a12, a13, a14);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    *int16x8_t v23 = 0;
  }
  int16x8_t v27 = a4 + 2;
  if (a5 <= 4) {
    int v28 = 4;
  }
  else {
    int v28 = a5;
  }
  unsigned int v29 = v28 - 4;
  if (v29 >= 4) {
    int v30 = 4;
  }
  else {
    int v30 = v29;
  }
  if (v30 && v21)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v27, v19 + 2, a2, v30, a7, a8, a9, a10, a11, a12, a13, a14);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v31 = a4 + 3;
  }
  else
  {
    *int16x8_t v27 = 0;
    int16x8_t v31 = a4 + 3;
    if (!v30) {
      goto LABEL_33;
    }
  }
  if (v26)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v31, (int16x8_t *)((char *)v19 + v22 + 32), a2, v30, a7, a8, a9, a10, a11, a12, a13, a14);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + result);
    goto LABEL_34;
  }
LABEL_33:
  *int16x8_t v31 = 0;
LABEL_34:
  int16x8_t v32 = a4 + 4;
  if (a6 <= 4) {
    int v33 = 4;
  }
  else {
    int v33 = a6;
  }
  unsigned int v34 = v33 - 4;
  if (v34 >= 2) {
    int v35 = 2;
  }
  else {
    int v35 = v34;
  }
  if (v20 && v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v32, (int16x8_t *)((char *)v19 + 4 * a2), a2, v20, a7, a8, a9, a10, a11, a12, a13, a14);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + result);
  }
  else
  {
    *int16x8_t v32 = 0;
  }
  int16x8_t v36 = a4 + 5;
  if (a6 <= 6) {
    int v37 = 6;
  }
  else {
    int v37 = a6;
  }
  unsigned int v38 = v37 - 6;
  if (v38 >= 2) {
    int v39 = 2;
  }
  else {
    int v39 = v38;
  }
  if (v20 && v39)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v36, (int16x8_t *)((char *)v19 + 6 * a2), a2, v20, a7, a8, a9, a10, a11, a12, a13, a14);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  else
  {
    *int16x8_t v36 = 0;
    int16x8_t v40 = a4 + 6;
    if (!v30) {
      goto LABEL_57;
    }
  }
  if (v35)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v40, (int16x8_t *)((char *)v19 + 4 * a2 + 32), a2, v30, a7, a8, a9, a10, a11, a12, a13, a14);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + result);
    int16x8_t v41 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int16x8_t v40 = 0;
  int16x8_t v41 = a4 + 7;
  if (!v30)
  {
LABEL_62:
    *int16x8_t v41 = 0;
    return result;
  }
LABEL_58:
  if (!v39) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v17, v41, (int16x8_t *)((char *)v19 + 6 * a2 + 32), a2, v30, a7, a8, a9, a10, a11, a12, a13, a14);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int32x4_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, int16x4_t a12)
{
  int32x4_t v13 = *(int32x4_t *)((char *)a3 + a4);
  int8x16_t v14 = (int8x16_t)vzip1q_s32(*a3, v13);
  int16x8_t v15 = (int16x8_t)vzip2q_s32(*a3, v13);
  int16x8_t v16 = (int32x4_t *)((char *)a3 + 2 * a4);
  int32x4_t v17 = *v16;
  int32x4_t v18 = *(int32x4_t *)((char *)v16 + a4);
  int16x8_t v19 = (int16x8_t)vzip1q_s32(*v16, v18);
  int16x8_t v20 = (int16x8_t)vzip2q_s32(*v16, v18);
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v14.i8, 0);
  int8x16_t v22 = (int8x16_t)vsubq_s16((int16x8_t)v14, (int16x8_t)v21);
  int16x8_t v23 = vsubq_s16(v19, (int16x8_t)v21);
  int16x8_t v24 = vsubq_s16(v15, (int16x8_t)v21);
  int8x16_t v25 = (int8x16_t)vsubq_s16(v20, (int16x8_t)v21);
  v17.i16[0] = vmaxvq_s16((int16x8_t)v22);
  v18.i16[0] = vminvq_s16((int16x8_t)v22);
  int16x8_t v26 = vdupq_lane_s16(*(int16x4_t *)v17.i8, 0);
  int16x8_t v27 = vdupq_lane_s16(*(int16x4_t *)v18.i8, 0);
  v28.i64[0] = 0x8000800080008000;
  v28.i64[1] = 0x8000800080008000;
  int16x8_t v29 = vmaxq_s16(v26, v28);
  v30.i64[0] = 0x8000800080008000;
  v30.i64[1] = 0x8000800080008000;
  int16x8_t v31 = vminq_s16(v27, v30);
  int16x8_t v32 = vzip1q_s16(v26, v27);
  int8x16_t v33 = (int8x16_t)vceqzq_s16(v32);
  v34.i64[0] = 0x10001000100010;
  v34.i64[1] = 0x10001000100010;
  int16x8_t v35 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v32)), v33);
  v33.i16[0] = vmaxvq_s16(v23);
  a12.i16[0] = vminvq_s16(v23);
  int16x8_t v36 = vdupq_lane_s16(*(int16x4_t *)v33.i8, 0);
  int16x8_t v37 = vdupq_lane_s16(a12, 0);
  int16x8_t v38 = vpmaxq_s16(v35, v35);
  int16x8_t v39 = vmaxq_s16(v29, v36);
  int16x8_t v40 = vminq_s16(v31, v37);
  int16x8_t v41 = vzip1q_s16(v36, v37);
  int16x8_t v42 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v41)), (int8x16_t)vceqzq_s16(v41));
  int16x8_t v43 = vpmaxq_s16(v42, v42);
  v42.i16[0] = vmaxvq_s16(v24);
  int16x8_t v44 = vdupq_lane_s16(*(int16x4_t *)v42.i8, 0);
  v36.i16[0] = vminvq_s16(v24);
  int16x8_t v45 = vdupq_lane_s16(*(int16x4_t *)v36.i8, 0);
  int16x8_t v46 = vmaxq_s16(v39, v44);
  int16x8_t v47 = vminq_s16(v40, v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int8x16_t v49 = (int8x16_t)vceqzq_s16(v48);
  int16x8_t v50 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v48)), v49);
  int16x8_t v51 = vpmaxq_s16(v50, v50);
  v49.i16[0] = vmaxvq_s16((int16x8_t)v25);
  v45.i16[0] = vminvq_s16((int16x8_t)v25);
  int16x8_t v52 = vdupq_lane_s16(*(int16x4_t *)v49.i8, 0);
  int16x8_t v53 = vdupq_lane_s16(*(int16x4_t *)v45.i8, 0);
  int16x8_t v54 = vmaxq_s16(v46, v52);
  int16x8_t v55 = vminq_s16(v47, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int16x8_t v58 = vpmaxq_s16(v57, v57);
  int8x16_t v59 = (int8x16_t)vmaxq_s16(vmaxq_s16(v38, v43), vmaxq_s16(v51, v58));
  int16x8_t v60 = vclzq_s16(vsubq_s16(v54, v55));
  int8x16_t v61 = (int8x16_t)vsubq_s16(v34, v60);
  int8x16_t v62 = (int8x16_t)vcgtq_s16((int16x8_t)v59, (int16x8_t)v61);
  int8x16_t v63 = vbslq_s8(v62, v61, v59);
  if (vmaxvq_s16((int16x8_t)v63))
  {
    char v64 = 0;
    unint64_t v65 = 0;
    v66.i64[0] = -1;
    v66.i64[1] = -1;
    v67.i64[0] = 0xF000F000F000FLL;
    v67.i64[1] = 0xF000F000F000FLL;
    int8x16_t v68 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v66, vsubq_s16(v67, v60)), v55), v62);
    v69.i64[0] = 0x8000800080008;
    v69.i64[1] = 0x8000800080008;
    v66.i64[0] = 0x3000300030003;
    v66.i64[1] = 0x3000300030003;
    int16x8_t v70 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v38), v66), (int16x8_t)0);
    int16x8_t v71 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v43), v66), (int16x8_t)0);
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v51), v66), (int16x8_t)0);
    int8x16_t v73 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v58), v66), (int16x8_t)0);
    int8x16_t v74 = (int8x16_t)vsubq_s16((int16x8_t)v63, v70);
    int8x16_t v75 = (int8x16_t)vsubq_s16((int16x8_t)v63, v71);
    int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v63, v72);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v73);
    int8x16_t v78 = (int8x16_t)vceqq_s16(vaddq_s16((int16x8_t)v73, v72), vnegq_s16(vaddq_s16(v70, v71)));
    v73.i64[0] = 0x4000400040004;
    v73.i64[1] = 0x4000400040004;
    int8x16_t v79 = vbicq_s8(v73, v78);
    int8x16_t v80 = vorrq_s8(v79, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v63), (int8x16_t)v66), vandq_s8(v62, v69)));
    if (a5 >= 4 && a6 >= 2)
    {
      int16x8_t v367 = v15;
      int16x8_t v368 = v20;
      int8x16_t v366 = v68;
      v81.i32[0] = v14.u16[2];
      v81.i32[1] = v14.u16[1];
      int32x2_t v82 = vshl_n_s32(vsub_s32(v81, vdup_n_s32(v14.u16[0])), 0x18uLL);
      int v83 = v82.i32[1] >> 24;
      int16x4_t v84 = (int16x4_t)vshl_s32(v82, (int32x2_t)0xFFFFFFEAFFFFFFE9);
      unsigned __int32 v85 = v82.i32[0];
      v86.i64[0] = 0xFFFFFFFF00000000;
      v86.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v87 = vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v82.i32[0] >> 24), v86), vdupq_n_s16(v82.i32[1] >> 24), (int16x8_t)xmmword_242EA76B0);
      int16x8_t v88 = vsubq_s16((int16x8_t)v22, v87);
      int8x16_t v369 = (int8x16_t)v23;
      int8x16_t v89 = (int8x16_t)vsubq_s16(vaddq_s16(vdupq_n_s16(-v84.i32[0]), v23), v87);
      int8x16_t v90 = (int8x16_t)vsubq_s16(vaddq_s16(vdupq_n_s16(-v84.i32[1]), v24), v87);
      int16x8_t v91 = vaddq_s16(vdupq_n_s16(-v84.i32[0] - v84.i32[1]), (int16x8_t)v25);
      int8x16_t v92 = (int8x16_t)vsubq_s16(v91, v87);
      v91.i16[0] = vmaxvq_s16(v88);
      int8x16_t v364 = (int8x16_t)v88;
      v84.i16[0] = vminvq_s16(v88);
      int16x8_t v93 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v94 = vdupq_lane_s16(v84, 0);
      v88.i64[0] = 0x8000800080008000;
      v88.i64[1] = 0x8000800080008000;
      int16x8_t v95 = vmaxq_s16(v93, v88);
      v88.i64[0] = 0x8000800080008000;
      v88.i64[1] = 0x8000800080008000;
      int16x8_t v96 = vminq_s16(v94, v88);
      int16x8_t v97 = vzip1q_s16(v93, v94);
      int8x16_t v98 = (int8x16_t)vceqzq_s16(v97);
      v99.i64[0] = 0x10001000100010;
      v99.i64[1] = 0x10001000100010;
      int16x8_t v100 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v97)), v98);
      int16x8_t v101 = vpmaxq_s16(v100, v100);
      v98.i16[0] = vmaxvq_s16((int16x8_t)v89);
      v12.i16[0] = vminvq_s16((int16x8_t)v89);
      int16x8_t v102 = vdupq_lane_s16(*(int16x4_t *)v98.i8, 0);
      int16x8_t v103 = vdupq_lane_s16(v12, 0);
      int16x8_t v104 = vmaxq_s16(v95, v102);
      int16x8_t v105 = vminq_s16(v96, v103);
      int16x8_t v106 = vzip1q_s16(v102, v103);
      int8x16_t v107 = (int8x16_t)vceqzq_s16(v106);
      int16x8_t v108 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v106)), v107);
      v107.i16[0] = vmaxvq_s16((int16x8_t)v90);
      int8x16_t v109 = (int8x16_t)v24;
      v24.i16[0] = vminvq_s16((int16x8_t)v90);
      int16x8_t v110 = vdupq_lane_s16(*(int16x4_t *)v107.i8, 0);
      int16x8_t v111 = vdupq_lane_s16(*(int16x4_t *)v24.i8, 0);
      int16x8_t v112 = vpmaxq_s16(v108, v108);
      int16x8_t v113 = vmaxq_s16(v104, v110);
      int16x8_t v114 = vminq_s16(v105, v111);
      int16x8_t v115 = vzip1q_s16(v110, v111);
      int8x16_t v116 = (int8x16_t)vceqzq_s16(v115);
      int16x8_t v117 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v115)), v116);
      int8x16_t v118 = v77;
      int16x8_t v119 = vpmaxq_s16(v117, v117);
      v117.i16[0] = vmaxvq_s16((int16x8_t)v92);
      int16x8_t v120 = vdupq_lane_s16(*(int16x4_t *)v117.i8, 0);
      v116.i16[0] = vminvq_s16((int16x8_t)v92);
      int16x8_t v121 = vdupq_lane_s16(*(int16x4_t *)v116.i8, 0);
      int16x8_t v122 = vminq_s16(v114, v121);
      int16x8_t v123 = vzip1q_s16(v120, v121);
      int16x8_t v124 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v123)), (int8x16_t)vceqzq_s16(v123));
      int16x8_t v125 = vpmaxq_s16(v124, v124);
      int8x16_t v126 = (int8x16_t)vmaxq_s16(vmaxq_s16(v101, v112), vmaxq_s16(v119, v125));
      int16x8_t v127 = vclzq_s16(vsubq_s16(vmaxq_s16(v113, v120), v122));
      int8x16_t v128 = (int8x16_t)vsubq_s16((int16x8_t)v99, v127);
      int8x16_t v129 = (int8x16_t)vcgtq_s16((int16x8_t)v126, (int16x8_t)v128);
      int16x8_t v130 = (int16x8_t)vbslq_s8(v129, v128, v126);
      v126.i64[0] = 0x1000100010001;
      v126.i64[1] = 0x1000100010001;
      int8x16_t v131 = v74;
      int8x16_t v132 = (int8x16_t)vmaxq_s16(v130, (int16x8_t)v126);
      v126.i64[0] = 0x3000300030003;
      v126.i64[1] = 0x3000300030003;
      int8x16_t v133 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v101), (int16x8_t)v126), (int16x8_t)0);
      int16x8_t v134 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v112), (int16x8_t)v126), (int16x8_t)0);
      int16x8_t v135 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v119), (int16x8_t)v126), (int16x8_t)0);
      int16x8_t v136 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v125), (int16x8_t)v126), (int16x8_t)0);
      int8x16_t v137 = (int8x16_t)vsubq_s16((int16x8_t)v132, (int16x8_t)v133);
      int8x16_t v138 = (int8x16_t)vsubq_s16((int16x8_t)v132, v134);
      int8x16_t v139 = (int8x16_t)vsubq_s16((int16x8_t)v132, v135);
      int8x16_t v140 = (int8x16_t)vsubq_s16((int16x8_t)v132, v136);
      int8x16_t v141 = (int8x16_t)vceqq_s16(vaddq_s16(v136, v135), vnegq_s16(vaddq_s16((int16x8_t)v133, v134)));
      v133.i64[0] = 0x4000400040004;
      v133.i64[1] = 0x4000400040004;
      int8x16_t v142 = vbicq_s8(v133, v141);
      v126.i64[0] = 0x7000700070007;
      v126.i64[1] = 0x7000700070007;
      int16x8_t v143 = (int16x8_t)vandq_s8(v61, v62);
      int16x8_t v144 = vaddq_s16((int16x8_t)v79, (int16x8_t)v79);
      int16x8_t v145 = vmulq_s16((int16x8_t)v131, (int16x8_t)v126);
      int16x8_t v146 = vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v76, (int16x8_t)v75), (int16x8_t)v118), 3uLL);
      int8x16_t v147 = (int8x16_t)vaddq_s16(vaddq_s16(vaddq_s16(v145, v143), v146), v144);
      int16x8_t v148 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16((int16x8_t)v147, vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbslq_s8(v129, (int8x16_t)vaddq_s16((int16x8_t)v132, (int16x8_t)v99), v99), (int16x8_t)v137, (int16x8_t)v126), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v139, (int16x8_t)v138), (int16x8_t)v140), 3uLL)), vaddq_s16((int16x8_t)v142, (int16x8_t)v142))), 0);
      v141.i16[0] = vaddvq_s16(v148);
      int v149 = v141.u16[0];
      unint64_t v65 = v83 | HIWORD(v85);
      if (v141.i16[0])
      {
        v150.i64[0] = 0x2000200020002;
        v150.i64[1] = 0x2000200020002;
        v151.i64[0] = 0xA000A000A000ALL;
        v151.i64[1] = 0xA000A000A000ALL;
        int8x16_t v152 = vbslq_s8(v129, v151, v150);
        v151.i64[0] = -1;
        v151.i64[1] = -1;
        int8x16_t v153 = vorrq_s8(v142, v152);
        v154.i64[0] = 0xF000F000F000FLL;
        v154.i64[1] = 0xF000F000F000FLL;
        int8x16_t v155 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v151, vsubq_s16(v154, v127)), v122), v129);
        int8x16_t v147 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v148, 0xFuLL));
        v144.i64[0] = v364.i64[0];
        int8x16_t v362 = vbslq_s8(v147, v364, v22);
        int8x16_t v369 = vbslq_s8(v147, v89, v369);
        int8x16_t v363 = vbslq_s8(v147, v90, v109);
        int8x16_t v365 = vbslq_s8(v147, v92, v25);
        int8x16_t v131 = vbslq_s8(v147, v137, v131);
        int8x16_t v75 = vbslq_s8(v147, v138, v75);
        int8x16_t v76 = vbslq_s8(v147, v139, v76);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v147, v140, v118);
        int8x16_t v68 = vbslq_s8(v147, v155, v366);
        int8x16_t v63 = vbslq_s8(v147, v132, v63);
        int8x16_t v80 = vbslq_s8(v147, v153, v80);
        v157.i64[0] = 0x7000700070007;
        v157.i64[1] = 0x7000700070007;
        int16x8_t v145 = vmulq_s16((int16x8_t)v131, v157);
        int16x8_t v146 = vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v76, (int16x8_t)v75), v156), 3uLL);
        int8x16_t v77 = (int8x16_t)v156;
      }
      else
      {
        int8x16_t v362 = v22;
        int8x16_t v363 = v109;
        int8x16_t v365 = v25;
        int8x16_t v77 = v118;
        int8x16_t v68 = v366;
      }
      int8x16_t v74 = v131;
      int16x8_t v159 = vsubq_s16((int16x8_t)v14, (int16x8_t)vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7520));
      int8x16_t v160 = (int8x16_t)v19;
      v160.i16[7] = v14.i16[7];
      int8x16_t v161 = (int8x16_t)vsubq_s16(v19, (int16x8_t)vqtbl1q_s8(v160, (int8x16_t)xmmword_242EA7530));
      int8x16_t v162 = (int8x16_t)v367;
      v162.i16[7] = v14.i16[7];
      int8x16_t v163 = (int8x16_t)vsubq_s16(v367, (int16x8_t)vqtbl1q_s8(v162, (int8x16_t)xmmword_242EA7540));
      int8x16_t v164 = (int8x16_t)v368;
      v164.i16[7] = v14.i16[7];
      int16x4_t v165 = (int16x4_t)0x100010001000F0ELL;
      int8x16_t v166 = (int8x16_t)v159;
      v166.i16[0] = v159.i16[7];
      v166.i16[7] = v159.i16[0];
      v159.i16[0] = vmaxvq_s16((int16x8_t)v166);
      v165.i16[0] = vminvq_s16((int16x8_t)v166);
      int16x8_t v167 = vdupq_lane_s16(*(int16x4_t *)v159.i8, 0);
      int16x8_t v168 = vdupq_lane_s16(v165, 0);
      int8x16_t v169 = (int8x16_t)vsubq_s16(v368, (int16x8_t)vqtbl1q_s8(v164, (int8x16_t)xmmword_242EA7550));
      v164.i64[0] = 0x8000800080008000;
      v164.i64[1] = 0x8000800080008000;
      int16x8_t v170 = vmaxq_s16(v167, (int16x8_t)v164);
      v171.i64[0] = 0x8000800080008000;
      v171.i64[1] = 0x8000800080008000;
      int16x8_t v172 = vminq_s16(v168, v171);
      int16x8_t v173 = vzip1q_s16(v167, v168);
      int8x16_t v174 = (int8x16_t)vceqzq_s16(v173);
      int16x8_t v175 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v173)), v174);
      int16x8_t v176 = vpmaxq_s16(v175, v175);
      v174.i16[0] = vmaxvq_s16((int16x8_t)v161);
      int16x8_t v177 = vdupq_lane_s16(*(int16x4_t *)v174.i8, 0);
      v147.i16[0] = vminvq_s16((int16x8_t)v161);
      int16x8_t v178 = vdupq_lane_s16(*(int16x4_t *)v147.i8, 0);
      int16x8_t v179 = vmaxq_s16(v170, v177);
      int16x8_t v180 = vminq_s16(v172, v178);
      int16x8_t v181 = vzip1q_s16(v177, v178);
      int8x16_t v182 = (int8x16_t)vceqzq_s16(v181);
      int16x8_t v183 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v181)), v182);
      int16x8_t v184 = vpmaxq_s16(v183, v183);
      v182.i16[0] = vmaxvq_s16((int16x8_t)v163);
      v144.i16[0] = vminvq_s16((int16x8_t)v163);
      int16x8_t v185 = vdupq_lane_s16(*(int16x4_t *)v182.i8, 0);
      int16x8_t v186 = vdupq_lane_s16(*(int16x4_t *)v144.i8, 0);
      int16x8_t v187 = vmaxq_s16(v179, v185);
      int16x8_t v188 = vminq_s16(v180, v186);
      int16x8_t v189 = vzip1q_s16(v185, v186);
      int8x16_t v190 = (int8x16_t)vceqzq_s16(v189);
      int16x8_t v191 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v189)), v190);
      v190.i16[0] = vmaxvq_s16((int16x8_t)v169);
      v129.i16[0] = vminvq_s16((int16x8_t)v169);
      int16x8_t v192 = vdupq_lane_s16(*(int16x4_t *)v190.i8, 0);
      int16x8_t v193 = vdupq_lane_s16(*(int16x4_t *)v129.i8, 0);
      int16x8_t v194 = vpmaxq_s16(v191, v191);
      int16x8_t v195 = vmaxq_s16(v187, v192);
      int16x8_t v196 = vminq_s16(v188, v193);
      int16x8_t v197 = vzip1q_s16(v192, v193);
      int16x8_t v198 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v197)), (int8x16_t)vceqzq_s16(v197));
      int16x8_t v199 = vpmaxq_s16(v198, v198);
      int8x16_t v200 = (int8x16_t)vmaxq_s16(vmaxq_s16(v176, v184), vmaxq_s16(v194, v199));
      int16x8_t v201 = vclzq_s16(vsubq_s16(v195, v196));
      int8x16_t v202 = (int8x16_t)vsubq_s16((int16x8_t)v99, v201);
      int8x16_t v203 = (int8x16_t)vcgtq_s16((int16x8_t)v200, (int16x8_t)v202);
      int8x16_t v204 = vbslq_s8(v203, v202, v200);
      v205.i64[0] = 0x3000300030003;
      v205.i64[1] = 0x3000300030003;
      int16x8_t v206 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v176), v205), (int16x8_t)0);
      int8x16_t v207 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v184), v205), (int16x8_t)0);
      int16x8_t v208 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v194), v205), (int16x8_t)0);
      int16x8_t v209 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v199), v205), (int16x8_t)0);
      int8x16_t v210 = (int8x16_t)vsubq_s16((int16x8_t)v204, v206);
      int8x16_t v211 = (int8x16_t)vsubq_s16((int16x8_t)v204, (int16x8_t)v207);
      int8x16_t v212 = (int8x16_t)vsubq_s16((int16x8_t)v204, v208);
      int8x16_t v213 = (int8x16_t)vsubq_s16((int16x8_t)v204, v209);
      int8x16_t v214 = (int8x16_t)vceqq_s16(vaddq_s16(v209, v208), vnegq_s16(vaddq_s16(v206, (int16x8_t)v207)));
      v207.i64[0] = 0x4000400040004;
      v207.i64[1] = 0x4000400040004;
      int8x16_t v215 = vbicq_s8(v207, v214);
      v208.i64[0] = 0x7000700070007;
      v208.i64[1] = 0x7000700070007;
      v207.i64[0] = 0x8000800080008;
      v207.i64[1] = 0x8000800080008;
      v216.i64[0] = 0x2000200020002;
      v216.i64[1] = 0x2000200020002;
      int16x8_t v217 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v63, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v80, v207))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v80, (int16x8_t)v80), v207)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v80, (int8x16_t)v205), (int16x8_t)v216), v99), v145)), v146), vaddq_s16(
                                          vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v202, v203), (int16x8_t)v210, v208), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v212, (int16x8_t)v211), (int16x8_t)v213), 3uLL)), vaddq_s16((int16x8_t)v215, (int16x8_t)v215))), 0);
      v202.i16[0] = vaddvq_s16(v217);
      int v218 = v202.u16[0];
      if (v202.i16[0])
      {
        int8x16_t v219 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v204), v216);
        v220.i64[0] = 0x9000900090009;
        v220.i64[1] = 0x9000900090009;
        v221.i64[0] = -1;
        v221.i64[1] = -1;
        int8x16_t v222 = vorrq_s8(vorrq_s8(v219, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v203, v220), (int16x8_t)vmvnq_s8(v203))), v215);
        v219.i64[0] = 0xF000F000F000FLL;
        v219.i64[1] = 0xF000F000F000FLL;
        int8x16_t v223 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v221, vsubq_s16((int16x8_t)v219, v201)), v196), v203);
        int8x16_t v224 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v217, 0xFuLL));
        v21.i16[0] = vbslq_s8(v224, vextq_s8(v14, v14, 0xEuLL), v21).u16[0];
        int8x16_t v22 = vbslq_s8(v224, v166, v362);
        int16x8_t v23 = (int16x8_t)vbslq_s8(v224, v161, v369);
        int16x8_t v24 = (int16x8_t)vbslq_s8(v224, v163, v363);
        int8x16_t v25 = vbslq_s8(v224, v169, v365);
        int8x16_t v74 = vbslq_s8(v224, v210, v74);
        int8x16_t v75 = vbslq_s8(v224, v211, v75);
        int8x16_t v76 = vbslq_s8(v224, v212, v76);
        int8x16_t v77 = vbslq_s8(v224, v213, v77);
        int8x16_t v68 = vbslq_s8(v224, v223, v68);
        int8x16_t v63 = vbslq_s8(v224, v204, v63);
        int8x16_t v80 = vbslq_s8(v224, v222, v80);
      }
      else
      {
        int16x8_t v24 = (int16x8_t)v363;
        int8x16_t v25 = v365;
        int16x8_t v23 = (int16x8_t)v369;
        int8x16_t v22 = v362;
      }
      if (v149) {
        BOOL v225 = v218 == 0;
      }
      else {
        BOOL v225 = 0;
      }
      char v64 = v225;
    }
    v226.i64[0] = 0x8000800080008;
    v226.i64[1] = 0x8000800080008;
    int16x8_t v227 = (int16x8_t)vandq_s8(v80, v226);
    v228.i64[0] = 0x3000300030003;
    v228.i64[1] = 0x3000300030003;
    v229.i64[0] = 0x2000200020002;
    v229.i64[1] = 0x2000200020002;
    int8x16_t v230 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v80, v228), v229);
    v229.i64[0] = 0x10001000100010;
    v229.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(7 * v74.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v76, vaddq_s16((int16x8_t)v75, (int16x8_t)v77)).u16[0]
                                    + ((2 * v80.i16[0]) & 8)
                                    + vbicq_s8(v63, (int8x16_t)vceqzq_s16(v227)).u16[0]
                                    + vandq_s8(v230, (int8x16_t)v229).u16[0])
                          - 235) <= 0xFFFFFFFFFFFFFEF7)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 32;
    }
    else
    {
      int16x8_t v231 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v232 = 8 * (a1 & 7);
      if (v232) {
        uint64_t v233 = *v231 & ~(-1 << v232);
      }
      else {
        uint64_t v233 = 0;
      }
      if (v63.i16[0]) {
        uint64_t v234 = (16 * v63.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v234 = 0;
      }
      *a2 = v80.i8[0] << 6;
      unint64_t v235 = (v234 & 0xFFFFFFFFFF0000F0 | ((unint64_t)v21.u16[0] << 8) | v80.i8[0] & 0xF) >> 2;
      unint64_t v236 = (v235 << v232) | v233;
      if (v232 >= 0x2A)
      {
        *int16x8_t v231 = v236;
        unint64_t v236 = v235 >> (-8 * (a1 & 7u));
      }
      unint64_t v237 = v232 + 22;
      int8x16_t v238 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v74);
      int8x16_t v239 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v75);
      int8x16_t v240 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v76);
      int8x16_t v241 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v77);
      *(uint8x8_t *)v238.i8 = vqmovn_u16((uint16x8_t)v238);
      *(uint8x8_t *)v239.i8 = vqmovn_u16((uint16x8_t)v239);
      *(uint8x8_t *)v240.i8 = vqmovn_u16((uint16x8_t)v240);
      *(uint8x8_t *)v241.i8 = vqmovn_u16((uint16x8_t)v241);
      v238.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v238, v239), (int16x8_t)vzip1q_s8(v240, v241)).u32[0];
      v240.i64[0] = 0x202020202020202;
      v240.i64[1] = 0x202020202020202;
      int8x16_t v242 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v80.i8, (int8x8_t)0x4000400040004)))), v240);
      v240.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v240.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v241.i64[0] = -1;
      v241.i64[1] = -1;
      uint8x16_t v243 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v241, (uint8x16_t)vorrq_s8(v242, v240)), (int8x16_t)v238.u32[0]);
      int16x8_t v244 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v242.i8);
      uint16x8_t v245 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v243.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v244)), (int16x8_t)vmovl_high_u8(v243));
      uint16x8_t v246 = (uint16x8_t)vpaddq_s16(v244, (int16x8_t)vmovl_high_u8((uint8x16_t)v242));
      int32x4_t v247 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v246.i8);
      int32x4_t v248 = (int32x4_t)vmovl_high_u16(v246);
      int32x4_t v249 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v245.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v247)), (int32x4_t)vshlq_u32(vmovl_high_u16(v245), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v248)));
      int32x4_t v250 = vpaddq_s32(v247, v248);
      v251.i64[0] = v249.u32[0];
      v251.i64[1] = v249.u32[1];
      uint64x2_t v252 = (uint64x2_t)v251;
      v251.i64[0] = v249.u32[2];
      v251.i64[1] = v249.u32[3];
      uint64x2_t v253 = (uint64x2_t)v251;
      v251.i64[0] = v250.u32[0];
      v251.i64[1] = v250.u32[1];
      int64x2_t v254 = v251;
      v251.i64[0] = v250.u32[2];
      v251.i64[1] = v250.u32[3];
      int64x2_t v255 = vpaddq_s64((int64x2_t)vshlq_u64(v252, (uint64x2_t)vzip1q_s64((int64x2_t)0, v254)), (int64x2_t)vshlq_u64(v253, (uint64x2_t)vzip1q_s64((int64x2_t)0, v251)));
      int64x2_t v256 = vpaddq_s64(v254, v251);
      uint64_t v257 = (v232 + 22) & 0x3E;
      unint64_t v258 = (v255.i64[0] << v257) | v236;
      if ((unint64_t)(v256.i64[0] + v257) >= 0x40)
      {
        *(void *)((char *)v231 + ((v237 >> 3) & 8)) = v258;
        unint64_t v258 = (unint64_t)v255.i64[0] >> -(char)v257;
      }
      unint64_t v259 = v256.i64[0] + v237;
      unint64_t v260 = v258 | (v255.i64[1] << v259);
      if ((v259 & 0x3F) + v256.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v259 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v260;
        unint64_t v260 = (unint64_t)v255.i64[1] >> -(v259 & 0x3F);
        if ((v259 & 0x3F) == 0) {
          unint64_t v260 = 0;
        }
      }
      int8x16_t v261 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v74);
      unint64_t v262 = v259 + v256.i64[1];
      v263.i64[0] = -1;
      v263.i64[1] = -1;
      int16x8_t v264 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v227, v227), (int8x16_t)0, 0xEuLL), v63);
      v265.i64[0] = 0xF000F000F000FLL;
      v265.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v266 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v263, (uint16x8_t)vaddq_s16(v264, v265)), v68);
      int32x4_t v267 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v264.i8);
      int32x4_t v268 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v266.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v267)), (int32x4_t)vmovl_high_u16(v266));
      int32x4_t v269 = vpaddq_s32(v267, (int32x4_t)vmovl_high_u16((uint16x8_t)v264));
      v270.i64[0] = v268.u32[0];
      v270.i64[1] = v268.u32[1];
      uint64x2_t v271 = (uint64x2_t)v270;
      v270.i64[0] = v268.u32[2];
      v270.i64[1] = v268.u32[3];
      uint64x2_t v272 = (uint64x2_t)v270;
      v270.i64[0] = v269.u32[0];
      v270.i64[1] = v269.u32[1];
      int64x2_t v273 = v270;
      v270.i64[0] = v269.u32[2];
      v270.i64[1] = v269.u32[3];
      int64x2_t v274 = vpaddq_s64((int64x2_t)vshlq_u64(v271, (uint64x2_t)vzip1q_s64((int64x2_t)0, v273)), (int64x2_t)vshlq_u64(v272, (uint64x2_t)vzip1q_s64((int64x2_t)0, v270)));
      int64x2_t v275 = vpaddq_s64(v273, v270);
      unint64_t v276 = (v274.i64[0] << v262) | v260;
      if (v275.i64[0] + (v262 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v262 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v276;
        unint64_t v276 = (unint64_t)v274.i64[0] >> -(v262 & 0x3F);
        if ((v262 & 0x3F) == 0) {
          unint64_t v276 = 0;
        }
      }
      int16x8_t v277 = (int16x8_t)vandq_s8(v68, v261);
      uint64_t v278 = v275.i64[1];
      unint64_t v279 = v275.i64[0] + v262;
      unint64_t v280 = v276 | (v274.i64[1] << v279);
      if ((v279 & 0x3F) + v275.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v279 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
        unint64_t v280 = (unint64_t)v274.i64[1] >> -(v279 & 0x3F);
        if ((v279 & 0x3F) == 0) {
          unint64_t v280 = 0;
        }
      }
      int8x16_t v281 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v75);
      int8x16_t v282 = (int8x16_t)vaddq_s16(v277, (int16x8_t)v22);
      unint64_t v283 = v279 + v278;
      if (v64)
      {
        v280 |= v65 << v283;
        if ((v283 & 0x3F) >= 0x30)
        {
          *(void *)((char *)v231 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
          unint64_t v280 = v65 >> -(v283 & 0x3F);
        }
        v283 += 16;
      }
      int16x8_t v284 = (int16x8_t)vandq_s8(v68, v281);
      int16x8_t v285 = (int16x8_t)vextq_s8((int8x16_t)0, v74, 0xEuLL);
      v286.i64[0] = 0xF000F000F000FLL;
      v286.i64[1] = 0xF000F000F000FLL;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      uint16x8_t v288 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v287, (uint16x8_t)vaddq_s16(v285, v286)), v282);
      int32x4_t v289 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v285.i8);
      int32x4_t v290 = (int32x4_t)vmovl_high_u16((uint16x8_t)v285);
      int32x4_t v291 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v288.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v289)), (int32x4_t)vshlq_u32(vmovl_high_u16(v288), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v290)));
      int32x4_t v292 = vpaddq_s32(v289, v290);
      v293.i64[0] = v291.u32[0];
      v293.i64[1] = v291.u32[1];
      uint64x2_t v294 = (uint64x2_t)v293;
      v293.i64[0] = v291.u32[2];
      v293.i64[1] = v291.u32[3];
      uint64x2_t v295 = (uint64x2_t)v293;
      v293.i64[0] = v292.u32[0];
      v293.i64[1] = v292.u32[1];
      int64x2_t v296 = v293;
      v293.i64[0] = v292.u32[2];
      v293.i64[1] = v292.u32[3];
      int64x2_t v297 = vpaddq_s64((int64x2_t)vshlq_u64(v294, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)), (int64x2_t)vshlq_u64(v295, (uint64x2_t)vzip1q_s64((int64x2_t)0, v293)));
      int64x2_t v298 = vpaddq_s64(v296, v293);
      unint64_t v299 = (v297.i64[0] << v283) | v280;
      if (v298.i64[0] + (v283 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v299;
        unint64_t v299 = (unint64_t)v297.i64[0] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v299 = 0;
        }
      }
      int8x16_t v300 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v76);
      int8x16_t v301 = (int8x16_t)vaddq_s16(v23, v284);
      unint64_t v302 = v298.i64[0] + v283;
      uint64_t v303 = (v298.i64[0] + v283) & 0x3F;
      unint64_t v304 = v299 | (v297.i64[1] << v302);
      if ((v302 & 0x3F) + v298.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v302 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v304;
        unint64_t v304 = (unint64_t)v297.i64[1] >> -(char)v303;
        if (!v303) {
          unint64_t v304 = 0;
        }
      }
      int16x8_t v305 = (int16x8_t)vandq_s8(v68, v300);
      unint64_t v306 = v302 + v298.i64[1];
      v307.i64[0] = 0xF000F000F000FLL;
      v307.i64[1] = 0xF000F000F000FLL;
      v308.i64[0] = -1;
      v308.i64[1] = -1;
      uint16x8_t v309 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v308, (uint16x8_t)vaddq_s16((int16x8_t)v75, v307)), v301);
      int32x4_t v310 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v75.i8);
      int32x4_t v311 = (int32x4_t)vmovl_high_u16((uint16x8_t)v75);
      int32x4_t v312 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v309.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v310)), (int32x4_t)vshlq_u32(vmovl_high_u16(v309), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v311)));
      int32x4_t v313 = vpaddq_s32(v310, v311);
      v314.i64[0] = v312.u32[0];
      v314.i64[1] = v312.u32[1];
      uint64x2_t v315 = (uint64x2_t)v314;
      v314.i64[0] = v312.u32[2];
      v314.i64[1] = v312.u32[3];
      uint64x2_t v316 = (uint64x2_t)v314;
      v314.i64[0] = v313.u32[0];
      v314.i64[1] = v313.u32[1];
      int64x2_t v317 = v314;
      v314.i64[0] = v313.u32[2];
      v314.i64[1] = v313.u32[3];
      int64x2_t v318 = vpaddq_s64((int64x2_t)vshlq_u64(v315, (uint64x2_t)vzip1q_s64((int64x2_t)0, v317)), (int64x2_t)vshlq_u64(v316, (uint64x2_t)vzip1q_s64((int64x2_t)0, v314)));
      int64x2_t v319 = vpaddq_s64(v317, v314);
      unint64_t v320 = (v318.i64[0] << v306) | v304;
      if (v319.i64[0] + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v320;
        unint64_t v320 = (unint64_t)v318.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v320 = 0;
        }
      }
      int8x16_t v321 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v77);
      int8x16_t v322 = (int8x16_t)vaddq_s16(v24, v305);
      unint64_t v323 = v319.i64[0] + v306;
      unint64_t v324 = v320 | (v318.i64[1] << v323);
      if ((v323 & 0x3F) + v319.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v318.i64[1] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v324 = 0;
        }
      }
      int16x8_t v325 = (int16x8_t)vandq_s8(v68, v321);
      unint64_t v326 = v323 + v319.i64[1];
      v327.i64[0] = 0xF000F000F000FLL;
      v327.i64[1] = 0xF000F000F000FLL;
      v328.i64[0] = -1;
      v328.i64[1] = -1;
      uint16x8_t v329 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v328, (uint16x8_t)vaddq_s16((int16x8_t)v76, v327)), v322);
      int32x4_t v330 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v76.i8);
      int32x4_t v331 = (int32x4_t)vmovl_high_u16((uint16x8_t)v76);
      int32x4_t v332 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v329.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)), (int32x4_t)vshlq_u32(vmovl_high_u16(v329), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)));
      int32x4_t v333 = vpaddq_s32(v330, v331);
      v334.i64[0] = v332.u32[0];
      v334.i64[1] = v332.u32[1];
      uint64x2_t v335 = (uint64x2_t)v334;
      v334.i64[0] = v332.u32[2];
      v334.i64[1] = v332.u32[3];
      uint64x2_t v336 = (uint64x2_t)v334;
      v334.i64[0] = v333.u32[0];
      v334.i64[1] = v333.u32[1];
      int64x2_t v337 = v334;
      v334.i64[0] = v333.u32[2];
      v334.i64[1] = v333.u32[3];
      int64x2_t v338 = vpaddq_s64((int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v337)), (int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)));
      int64x2_t v339 = vpaddq_s64(v337, v334);
      unint64_t v340 = (v338.i64[0] << v326) | v324;
      if (v339.i64[0] + (v326 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v326 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v340;
        unint64_t v340 = (unint64_t)v338.i64[0] >> -(v326 & 0x3F);
        if ((v326 & 0x3F) == 0) {
          unint64_t v340 = 0;
        }
      }
      int8x16_t v341 = (int8x16_t)vaddq_s16((int16x8_t)v25, v325);
      unint64_t v342 = v339.i64[0] + v326;
      unint64_t v343 = v340 | (v338.i64[1] << v342);
      if ((v342 & 0x3F) + v339.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v343;
        unint64_t v343 = (unint64_t)v338.i64[1] >> -(v342 & 0x3F);
        if ((v342 & 0x3F) == 0) {
          unint64_t v343 = 0;
        }
      }
      unint64_t v344 = v342 + v339.i64[1];
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      v346.i64[0] = -1;
      v346.i64[1] = -1;
      uint16x8_t v347 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v346, (uint16x8_t)vaddq_s16((int16x8_t)v77, v345)), v341);
      int32x4_t v348 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v349 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v350 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v347.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)), (int32x4_t)vshlq_u32(vmovl_high_u16(v347), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v349)));
      int32x4_t v351 = vpaddq_s32(v348, v349);
      v352.i64[0] = v350.u32[0];
      v352.i64[1] = v350.u32[1];
      uint64x2_t v353 = (uint64x2_t)v352;
      v352.i64[0] = v350.u32[2];
      v352.i64[1] = v350.u32[3];
      uint64x2_t v354 = (uint64x2_t)v352;
      v352.i64[0] = v351.u32[0];
      v352.i64[1] = v351.u32[1];
      int64x2_t v355 = v352;
      v352.i64[0] = v351.u32[2];
      v352.i64[1] = v351.u32[3];
      int64x2_t v356 = vpaddq_s64((int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v355)), (int64x2_t)vshlq_u64(v354, (uint64x2_t)vzip1q_s64((int64x2_t)0, v352)));
      int64x2_t v357 = vpaddq_s64(v355, v352);
      unint64_t v358 = (v356.i64[0] << v344) | v343;
      if (v357.i64[0] + (v344 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v231 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v358;
        if ((v344 & 0x3F) != 0) {
          unint64_t v358 = (unint64_t)v356.i64[0] >> -(v344 & 0x3F);
        }
        else {
          unint64_t v358 = 0;
        }
      }
      unint64_t v359 = v357.i64[0] + v344;
      unint64_t v360 = v358 | (v356.i64[1] << v359);
      if ((v359 & 0x3F) + v357.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v359 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
        unint64_t v360 = (unint64_t)v356.i64[1] >> -(v359 & 0x3F);
        if ((v359 & 0x3F) == 0) {
          unint64_t v360 = 0;
        }
      }
      unint64_t v361 = v359 + v357.i64[1];
      if ((v361 & 0x3F) != 0) {
        *(void *)((char *)v231 + ((v361 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
      }
      unint64_t result = (v361 - v232 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = a3->i16[0];
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  long long v63 = 0u;
  long long v64 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  if (a5 > 1)
  {
    uint64_t v19 = a5 & 0xFE;
    if (a5 == v19)
    {
      uint64_t v20 = 0;
      int8x16_t v21 = (__int16 *)(a3 + 2);
      int8x16_t v22 = (char *)&v61 + 8;
      do
      {
        int16x8_t v23 = v22;
        int16x8_t v24 = v21;
        uint64_t v25 = a5;
        do
        {
          __int16 v26 = *(v24 - 1);
          __int16 v27 = *v24;
          v24 += 2;
          *(v23 - 4) = v26;
          *int16x8_t v23 = v27;
          v23 += 8;
          v25 -= 2;
        }
        while (v25);
        ++v20;
        int8x16_t v21 = (__int16 *)((char *)v21 + a4);
        v22 += 2;
      }
      while (v20 != a6);
    }
    else
    {
      uint64_t v28 = 0;
      int16x8_t v29 = (__int16 *)(a3 + 2);
      int16x8_t v30 = (char *)&v61 + 8;
      int16x8_t v31 = (char *)&v61 + ((8 * a5) & 0x7F0);
      do
      {
        int16x8_t v32 = v30;
        int8x16_t v33 = v29;
        uint64_t v34 = a5 & 0xFE;
        do
        {
          __int16 v35 = *(v33 - 1);
          __int16 v36 = *v33;
          v33 += 2;
          *(v32 - 4) = v35;
          *int16x8_t v32 = v36;
          v32 += 8;
          v34 -= 2;
        }
        while (v34);
        int16x8_t v37 = (__int16 *)(a3 + v28 * a4 + 2 * v19);
        int16x8_t v38 = v31;
        uint64_t v39 = a5 - v19;
        do
        {
          __int16 v40 = *v37++;
          *int16x8_t v38 = v40;
          v38 += 4;
          --v39;
        }
        while (v39);
        ++v28;
        int16x8_t v29 = (__int16 *)((char *)v29 + a4);
        v30 += 2;
        v31 += 2;
      }
      while (v28 != a6);
    }
  }
  else
  {
    uint64_t v10 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v10 = a6 & 0xFE;
    uint64_t v11 = (__int16 *)(a3 + 1);
    int16x4_t v12 = (_WORD *)&v61 + 1;
    uint64_t v13 = v10;
    do
    {
      __int16 v14 = *(__int16 *)((char *)v11 - 1);
      __int16 v15 = *v11++;
      *(v12 - 1) = v14;
      *int16x4_t v12 = v15;
      v12 += 2;
      v13 -= 2;
    }
    while (v13);
    if (v10 != a6)
    {
LABEL_7:
      uint64_t v16 = a6 - v10;
      int32x4_t v17 = (_WORD *)&v61 + v10;
      int32x4_t v18 = (_WORD *)(a3 + v10 * a4);
      do
      {
        *v17++ = *v18;
        int32x4_t v18 = (_WORD *)((char *)v18 + a4);
        --v16;
      }
      while (v16);
    }
  }
  v56.i32[0] = (unsigned __int16)v61;
  v56.i32[1] = WORD4(v61);
  v56.i32[2] = WORD1(v61);
  v56.i32[3] = WORD5(v61);
  int v57 = (unsigned __int16)v62;
  int v58 = WORD4(v62);
  if (a5 >= 4) {
    unsigned int v41 = 4;
  }
  else {
    unsigned int v41 = a5;
  }
  if (a5 >= 4) {
    unsigned int v42 = a5 - 4;
  }
  else {
    unsigned int v42 = 0;
  }
  int v59 = WORD1(v62);
  int v60 = WORD5(v62);
  if (a6 >= 2) {
    unsigned int v43 = 2;
  }
  else {
    unsigned int v43 = a6;
  }
  if (a6 >= 2) {
    unsigned int v44 = a6 - 2;
  }
  else {
    unsigned int v44 = 0;
  }
  char v46 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v56, a7, v41, v43);
  v56.i32[0] = WORD2(v61);
  v56.i32[1] = WORD6(v61);
  v56.i32[2] = WORD3(v61);
  v56.i32[3] = HIWORD(v61);
  int v57 = WORD2(v62);
  int v58 = WORD6(v62);
  int v59 = WORD3(v62);
  int v60 = HIWORD(v62);
  if (a6 >= 4) {
    unsigned int v47 = 2;
  }
  else {
    unsigned int v47 = v44;
  }
  int v48 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, &v56, a7, v41, v47);
  v56.i32[0] = (unsigned __int16)v63;
  v56.i32[1] = WORD4(v63);
  v56.i32[2] = WORD1(v63);
  v56.i32[3] = WORD5(v63);
  int v57 = (unsigned __int16)v64;
  int v58 = WORD4(v64);
  if (a5 >= 8) {
    unsigned int v49 = 4;
  }
  else {
    unsigned int v49 = v42;
  }
  int v59 = WORD1(v64);
  int v60 = WORD5(v64);
  int v50 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, &v56, a7, v49, v43);
  v56.i32[0] = WORD2(v63);
  v56.i32[1] = WORD6(v63);
  v56.i32[2] = WORD3(v63);
  v56.i32[3] = HIWORD(v63);
  int v57 = WORD2(v64);
  int v58 = WORD6(v64);
  int v59 = WORD3(v64);
  int v60 = HIWORD(v64);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, &v56, a7, v49, v47);
  if (v50) {
    char v52 = 4;
  }
  else {
    char v52 = 0;
  }
  if (v48) {
    char v53 = 2;
  }
  else {
    char v53 = 0;
  }
  if (result) {
    char v54 = -8;
  }
  else {
    char v54 = -16;
  }
  *a2 = v54 | v52 | v46 | v53;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, int8x16_t *a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v124 = *MEMORY[0x263EF8340];
  if (a3 == 1)
  {
    v8.i64[0] = 0x800000008000;
    v8.i64[1] = 0x800000008000;
    int32x4_t v9 = (int32x4_t)veorq_s8(*a2, v8);
    v10.i64[0] = 0x100000001;
    v10.i64[1] = 0x100000001;
    int8x16_t v6 = vbicq_s8((int8x16_t)v9, (int8x16_t)vceqq_s32(v9, v10));
    int32x4_t v11 = (int32x4_t)veorq_s8(a2[1], v8);
    int8x16_t v7 = vbicq_s8((int8x16_t)v11, (int8x16_t)vceqq_s32(v11, v10));
    goto LABEL_5;
  }
  if (a3 == 3)
  {
    v5.i64[0] = 0x800000008000;
    v5.i64[1] = 0x800000008000;
    int8x16_t v6 = veorq_s8(*a2, v5);
    int8x16_t v7 = veorq_s8(a2[1], v5);
LABEL_5:
    int8x16_t v122 = v6;
    int8x16_t v123 = v7;
    unsigned int v12 = v6.i32[0];
    goto LABEL_7;
  }
  int8x16_t v13 = a2[1];
  int8x16_t v122 = *a2;
  int8x16_t v123 = v13;
  unsigned int v12 = v122.i32[0];
LABEL_7:
  if (a5) {
    BOOL v14 = a4 >= 2;
  }
  else {
    BOOL v14 = 0;
  }
  int v15 = !v14;
  if (v14)
  {
    unsigned int v17 = v122.u32[1];
    unsigned int v16 = v122.i32[1] < v12;
    if (v122.i32[1] >= v12) {
      unsigned int v18 = v12;
    }
    else {
      unsigned int v18 = v122.u32[1];
    }
    if (v12 > v122.i32[1]) {
      unsigned int v17 = v12;
    }
  }
  else
  {
    unsigned int v16 = 0;
    unsigned int v17 = v12;
    unsigned int v18 = v12;
  }
  BOOL v19 = a5 < 2 || a4 == 0;
  int v20 = v19;
  if (!v19)
  {
    if (v122.i32[2] < v18)
    {
      unsigned int v16 = 2;
      unsigned int v18 = v122.u32[2];
    }
    if (v17 <= v122.i32[2]) {
      unsigned int v17 = v122.u32[2];
    }
  }
  BOOL v21 = a5 >= 2 && a4 >= 2;
  int v22 = !v21;
  if (v21)
  {
    if (v122.i32[3] < v18)
    {
      unsigned int v16 = 3;
      unsigned int v18 = v122.u32[3];
    }
    if (v17 <= v122.i32[3]) {
      unsigned int v17 = v122.u32[3];
    }
  }
  if (a5) {
    BOOL v23 = a4 >= 3;
  }
  else {
    BOOL v23 = 0;
  }
  int v24 = !v23;
  if (v23)
  {
    if (v123.i32[0] < v18)
    {
      unsigned int v16 = 4;
      unsigned int v18 = v123.i32[0];
    }
    if (v17 <= v123.i32[0]) {
      unsigned int v17 = v123.i32[0];
    }
  }
  if (a5) {
    BOOL v25 = a4 >= 4;
  }
  else {
    BOOL v25 = 0;
  }
  int v26 = !v25;
  if (v25)
  {
    if (v123.i32[1] < v18)
    {
      unsigned int v16 = 5;
      unsigned int v18 = v123.u32[1];
    }
    if (v17 <= v123.i32[1]) {
      unsigned int v17 = v123.u32[1];
    }
  }
  BOOL v27 = a5 >= 2 && a4 >= 3;
  int v28 = !v27;
  if (v27)
  {
    if (v123.i32[2] < v18)
    {
      unsigned int v16 = 6;
      unsigned int v18 = v123.u32[2];
    }
    if (v17 <= v123.i32[2]) {
      unsigned int v17 = v123.u32[2];
    }
  }
  BOOL v29 = a5 >= 2 && a4 >= 4;
  int v30 = !v29;
  if (v29)
  {
    if (v123.i32[3] < v18)
    {
      unsigned int v16 = 7;
      unsigned int v18 = v123.u32[3];
    }
    if (v17 <= v123.i32[3]) {
      unsigned int v17 = v123.u32[3];
    }
  }
  unsigned int v31 = v17 - v18;
  unsigned int v32 = __clz(v17 - v18);
  int v33 = 32 - v32;
  if ((int)(32 - v32) <= 1) {
    int v33 = 1;
  }
  unsigned int v34 = v33 - 1;
  if (v17 == 0xFFFF && v32 == 31) {
    unsigned int v34 = 1;
  }
  if ((a3 | 2) == 3)
  {
    BOOL v36 = 0;
    if (!(v18 >> 15) && v17 >= 0x8000) {
      BOOL v36 = kDQuadParamTable[10 * v34 + 488] == 0;
    }
  }
  else
  {
    BOOL v36 = 0;
  }
  if (v34 > 0xC || v36)
  {
    unsigned int v38 = kDQuadParamTable[10 * v34 + 484];
    int v39 = v36 ? 0 : -2;
    int v40 = v38 >= 0x10 ? 0 : v18 & ~(-1 << (16 - v38));
    int v41 = v40 + v39;
    if (v41 >= 1 && __clz(v41 + v31) < v32) {
      ++v34;
    }
  }
  uint64_t v44 = (uint64_t)&kDQuadParamTable[10 * v34];
  unint64_t v42 = *(void *)(v44 + 1928);
  LODWORD(v43) = *(_DWORD *)(v44 + 1936);
  LODWORD(v44) = *(_DWORD *)(v44 + 1940);
  if (a4) {
    BOOL v45 = a5 == 0;
  }
  else {
    BOOL v45 = 1;
  }
  int v46 = v45;
  if (v42 >> v44 > 0x100) {
    int v47 = 1;
  }
  else {
    int v47 = v46;
  }
  if (a3 != 4)
  {
    BOOL v48 = 0;
    goto LABEL_156;
  }
  if (v46)
  {
    BOOL v48 = 0;
    if (v15) {
      goto LABEL_144;
    }
  }
  else
  {
    BOOL v48 = (~v12 & 0x7C00) == 0 || v12 == 0x8000;
    if (v15) {
      goto LABEL_144;
    }
  }
  if ((~v122.i32[1] & 0x7C00) == 0 || v122.i32[1] == 0x8000) {
    BOOL v48 = 1;
  }
LABEL_144:
  if (v20)
  {
    if (v22) {
      goto LABEL_146;
    }
  }
  else
  {
    if ((~v122.i32[2] & 0x7C00) == 0 || v122.i32[2] == 0x8000) {
      BOOL v48 = 1;
    }
    if (v22)
    {
LABEL_146:
      if (v24) {
        goto LABEL_147;
      }
      goto LABEL_251;
    }
  }
  if ((~v122.i32[3] & 0x7C00) == 0 || v122.i32[3] == 0x8000) {
    BOOL v48 = 1;
  }
  if (v24)
  {
LABEL_147:
    if (v26) {
      goto LABEL_148;
    }
    goto LABEL_258;
  }
LABEL_251:
  if ((~v123.i32[0] & 0x7C00) == 0 || v123.i32[0] == 0x8000) {
    BOOL v48 = 1;
  }
  if (v26)
  {
LABEL_148:
    if (v28) {
      goto LABEL_149;
    }
    goto LABEL_265;
  }
LABEL_258:
  if ((~v123.i32[1] & 0x7C00) == 0 || v123.i32[1] == 0x8000) {
    BOOL v48 = 1;
  }
  if (v28)
  {
LABEL_149:
    if (v30) {
      goto LABEL_156;
    }
    goto LABEL_150;
  }
LABEL_265:
  if ((~v123.i32[2] & 0x7C00) == 0 || v123.i32[2] == 0x8000) {
    BOOL v48 = 1;
  }
  if ((v30 & 1) == 0)
  {
LABEL_150:
    if ((~v123.i32[3] & 0x7C00) == 0 || v123.i32[3] == 0x8000) {
      BOOL v48 = 1;
    }
  }
LABEL_156:
  unint64_t v52 = 0;
  unsigned int v53 = 0;
  memset(v119, 0, sizeof(v119));
  int v120 = 0;
  if (v44 >= 0x10) {
    uint64_t v44 = 16;
  }
  else {
    uint64_t v44 = v44;
  }
  if (v43 >= 0x10) {
    uint64_t v43 = 16;
  }
  else {
    uint64_t v43 = v43;
  }
  unsigned int v54 = v18 & (-1 << (16 - v43));
  unint64_t v55 = v16;
  unint64_t v56 = v42 >> v44;
  unsigned int v57 = v12 - v54;
  if (v46) {
    unsigned int v57 = 0;
  }
  BOOL v19 = v15 == 0;
  unsigned __int32 v58 = v122.i32[1] - v54;
  if (!v19) {
    unsigned __int32 v58 = 0;
  }
  v121[0] = v57;
  v121[1] = v58;
  unsigned __int32 v59 = v122.i32[2] - v54;
  if (v20) {
    unsigned __int32 v59 = 0;
  }
  unsigned __int32 v60 = v122.i32[3] - v54;
  if (v22) {
    unsigned __int32 v60 = 0;
  }
  v121[2] = v59;
  v121[3] = v60;
  unsigned __int32 v61 = v123.i32[0] - v54;
  if (v24) {
    unsigned __int32 v61 = 0;
  }
  unsigned __int32 v62 = v123.i32[1] - v54;
  if (v26) {
    unsigned __int32 v62 = 0;
  }
  v121[4] = v61;
  v121[5] = v62;
  unsigned __int32 v63 = v123.i32[2] - v54;
  if (v28) {
    unsigned __int32 v63 = 0;
  }
  unsigned __int32 v64 = v123.i32[3] - v54;
  if (v30) {
    unsigned __int32 v64 = 0;
  }
  v121[6] = v63;
  v121[7] = v64;
  if (v56 <= 1) {
    unint64_t v65 = 1;
  }
  else {
    unint64_t v65 = v56;
  }
  uint64_t v66 = 4 * v16;
  int16x8_t v67 = &byte_242EA911D;
  do
  {
    if (v66 != v52)
    {
      if (v44) {
        unint64_t v68 = v121[v52 / 4] / v65;
      }
      else {
        LODWORD(v68) = 0;
      }
      *((_DWORD *)v119 + v53) = v68;
      if (v56 >= 2)
      {
        unint64_t v69 = v121[v52 / 4];
        if (v69)
        {
          if (v69 / v65 * v65 == v69 && ((v69 / v65) & 1) != 0)
          {
            if (v54 || v68 != 1)
            {
              if ((a3 | 2) != 3
                || (uint64_t v71 = v122.u32[v52 / 4], v71 != 0x8000) && ((a3 | 2) != 3 || v65 + 0x8000 != v71))
              {
                LODWORD(v68) = v68 - 1;
                *((_DWORD *)v119 + v53) = v68;
              }
            }
            else
            {
              LODWORD(v68) = 1;
            }
          }
        }
      }
      if ((unint64_t)v68 >> v44 || v122.i32[v52 / 4] == 0xFFFF) {
        *((_DWORD *)v119 + v53) = ~(-1 << v44);
      }
      if (*v67 >= a5 || *(v67 - 1) >= a4) {
        *((_DWORD *)v119 + v53) = 0;
      }
      ++v53;
    }
    v52 += 4;
    v67 += 2;
  }
  while (v52 != 32);
  uint64_t v72 = v47 | v48;
  int8x16_t v73 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v74 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  if (v72 == 1)
  {
    uint64_t v75 = 0;
    uint64_t v76 = 0;
    uint64_t v77 = 8 * (a1 & 7);
    do
    {
      int8x16_t v78 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v75;
      if (v78[1] >= a5 || *v78 >= a4) {
        unint64_t v80 = 0;
      }
      else {
        unint64_t v80 = (unint64_t)v122.u32[v75] >> 8;
      }
      if ((unint64_t)(v77 - v74 + (v76 << 6) - 57) >= 0xFFFFFFFFFFFFFFBFLL)
      {
        uint64_t v81 = 0;
        unint64_t v82 = 8;
        do
        {
          unint64_t v83 = 64 - v77;
          if (64 - v77 >= v82) {
            unint64_t v83 = v82;
          }
          v73[v76] |= ((v80 >> v81) & ~(-1 << v83)) << v77;
          v81 += v83;
          unint64_t v84 = v83 + v77;
          v76 += v84 >> 6;
          uint64_t v77 = v84 & 0x3F;
          v82 -= v83;
        }
        while (v82);
      }
      ++v75;
    }
    while (v75 != 8);
  }
  else
  {
    uint64_t v85 = 0;
    *v73 |= (unint64_t)(v34 & 0xF) << v74;
    uint64_t v86 = v74 | 4;
    if (v43 && (unint64_t)(v43 - v74 + v86) <= 0x40)
    {
      uint64_t v85 = 0;
      uint64_t v87 = 0;
      unint64_t v88 = v43;
      do
      {
        unint64_t v89 = 64 - v86;
        if (64 - v86 >= v88) {
          unint64_t v89 = v88;
        }
        v73[v85] |= (((unint64_t)(v54 >> (16 - v43)) >> v87) & ~(-1 << v89)) << v86;
        v87 += v89;
        unint64_t v90 = v89 + v86;
        v85 += v90 >> 6;
        uint64_t v86 = v90 & 0x3F;
        v88 -= v89;
      }
      while (v88);
    }
    if (v44)
    {
      if ((unint64_t)(v86 - v74 + (v85 << 6) + 3) <= 0x40)
      {
        uint64_t v91 = 0;
        unint64_t v92 = 3;
        do
        {
          unint64_t v93 = 64 - v86;
          if (64 - v86 >= v92) {
            unint64_t v93 = v92;
          }
          v73[v85] |= ((v55 >> v91) & ~(-1 << v93)) << v86;
          v91 += v93;
          unint64_t v94 = v93 + v86;
          v85 += v94 >> 6;
          uint64_t v86 = v94 & 0x3F;
          v92 -= v93;
        }
        while (v92);
      }
      int v95 = v43 + 7;
    }
    else
    {
      int v95 = v43 + 4;
    }
    int v101 = 64 - v95;
    unsigned int v102 = (((37 * v101) >> 8)
          + (((v101 - ((unsigned __int16)(37 * v101) >> 8)) & 0xFE) >> 1)) >> 2;
    unint64_t v103 = -7 * v102 + v101;
    if ((v103 - 257) >= 0xFFFFFF00 && v86 - v74 + (v85 << 6) + v103 <= 0x40)
    {
      do
      {
        unint64_t v104 = 64 - v86;
        if (64 - v86 >= v103) {
          unint64_t v104 = v103;
        }
        unint64_t v105 = v104 + v86;
        v85 += v105 >> 6;
        uint64_t v86 = v105 & 0x3F;
        v103 -= v104;
      }
      while (v103);
    }
    uint64_t v106 = 0;
    unint64_t v107 = v102 - v44;
    if (v107) {
      BOOL v108 = v107 > 0x100;
    }
    else {
      BOOL v108 = 1;
    }
    char v109 = v108;
    do
    {
      if (v44 && (unint64_t)(v44 - v74 + v86 + (v85 << 6)) <= 0x40)
      {
        uint64_t v110 = 0;
        unint64_t v111 = *((unsigned int *)v119 + v106);
        unint64_t v112 = v44;
        do
        {
          unint64_t v113 = 64 - v86;
          if (64 - v86 >= v112) {
            unint64_t v113 = v112;
          }
          v73[v85] |= ((v111 >> v110) & ~(-1 << v113)) << v86;
          v110 += v113;
          unint64_t v114 = v113 + v86;
          v85 += v114 >> 6;
          uint64_t v86 = v114 & 0x3F;
          v112 -= v113;
        }
        while (v112);
      }
      if ((v109 & 1) == 0 && v86 - v74 + (v85 << 6) + v107 <= 0x40)
      {
        unint64_t v115 = v107;
        do
        {
          unint64_t v116 = 64 - v86;
          if (64 - v86 >= v115) {
            unint64_t v116 = v115;
          }
          unint64_t v117 = v116 + v86;
          v85 += v117 >> 6;
          uint64_t v86 = v117 & 0x3F;
          v115 -= v116;
        }
        while (v115);
      }
      ++v106;
    }
    while (v106 != 7);
  }
  return v72;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int32x4_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, double a5, double a6, double a7, int8x8_t a8)
{
  unint64_t v8 = 8 * (a3 & 7);
  unint64_t v9 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 + 22;
  unint64_t v11 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v8;
  if (v8 >= 0x2B) {
    v11 |= *(void *)(v9 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v12 = (8 * (a3 & 7)) | 0x100;
  int v13 = (a4 >> 6) | (4 * v11);
  uint16x8_t v14 = (uint16x8_t)vdupq_n_s16(v13 & 0xF);
  a8.i32[0] = v13 & 0xF;
  v15.i64[0] = 0x3000300030003;
  v15.i64[1] = 0x3000300030003;
  int16x8_t v16 = (int16x8_t)vbicq_s8((int8x16_t)vdupq_n_s16(((v11 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v15));
  int8x16_t v17 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v18.i64[0] = 0x202020202020202;
  v18.i64[1] = 0x202020202020202;
  int8x16_t v19 = vandq_s8(v17, v18);
  if (vmaxvq_s8(v19) < 1)
  {
    int v29 = 0;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    int16x8_t v31 = v16;
    int16x8_t v32 = v16;
    int16x8_t v33 = v16;
    v34.i64[0] = -1;
    v34.i64[1] = -1;
    int8x16_t v35 = (int8x16_t)v16;
    v36.i64[0] = -1;
    v36.i64[1] = -1;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
  }
  else
  {
    int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v19, v19));
    int32x4_t v21 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v20, v20));
    unint64_t v22 = vpaddq_s32(v21, v21).u64[0];
    v23.i64[0] = v22;
    v23.i64[1] = HIDWORD(v22);
    int64x2_t v24 = v23;
    unint64_t v25 = vaddvq_s64(v23);
    unint64_t v26 = v25 + v10;
    if (v25 <= 0x80 && v12 >= v26)
    {
      int64x2_t v38 = vaddq_s64(vzip1q_s64((int64x2_t)0, v24), vdupq_n_s64(v10 & 0x3E));
      int v39 = (int64x2_t *)(v9 + ((v10 >> 3) & 8));
      int32x4_t v28 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v39, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39->i64[0], 0), (uint64x2_t)vnegq_s64(v38)));
      if (v25 + (v10 & 0x3E) < 0x81)
      {
        int v29 = 0;
      }
      else
      {
        int v29 = 0;
        int32x4_t v28 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v39[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v38))), (int8x16_t)v28);
      }
      unint64_t v10 = v26;
    }
    else
    {
      int32x4_t v28 = 0uLL;
      int v29 = 1;
    }
    int32x2_t v40 = vzip1_s32(*(int32x2_t *)v21.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL));
    v41.i64[0] = v40.u32[0];
    v41.i64[1] = v40.u32[1];
    int32x4_t v42 = (int32x4_t)vshlq_u64((uint64x2_t)v28, (uint64x2_t)vnegq_s64(v41));
    *(int32x2_t *)v28.i8 = vmovn_s64((int64x2_t)v28);
    *(int32x2_t *)v42.i8 = vmovn_s64((int64x2_t)v42);
    int16x8_t v43 = (int16x8_t)vzip1q_s32(v28, v42);
    int16x8_t v44 = (int16x8_t)vshlq_u32((uint32x4_t)v43, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v20.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v20, (int8x16_t)v20, 8uLL)))));
    *(int16x4_t *)v43.i8 = vmovn_s32((int32x4_t)v43);
    *(int16x4_t *)v44.i8 = vmovn_s32((int32x4_t)v44);
    int16x8_t v45 = vzip1q_s16(v43, v44);
    *(int8x8_t *)v45.i8 = vzip1_s8(vmovn_s16(v45), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v45, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v19.i8, *(int8x8_t *)v14.i8))))));
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    int8x16_t v46 = vshlq_s8((int8x16_t)v43, v19);
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v46.i32[0] = vandq_s8((int8x16_t)v45, vaddq_s8(v46, (int8x16_t)v43)).u32[0];
    int16x8_t v47 = vdupq_n_s16(v46.i8[0]);
    int16x8_t v48 = vdupq_n_s16(v46.i8[1]);
    int16x8_t v49 = vdupq_n_s16(v46.i8[2]);
    int16x8_t v50 = vdupq_n_s16(v46.i8[3]);
    int8x16_t v35 = (int8x16_t)vsubq_s16(v16, v47);
    int16x8_t v33 = vsubq_s16(v16, v48);
    int16x8_t v32 = vsubq_s16(v16, v49);
    int16x8_t v31 = vsubq_s16(v16, v50);
    int8x16_t v37 = (int8x16_t)vceqzq_s16(v47);
    int8x16_t v36 = (int8x16_t)vceqzq_s16(v48);
    int8x16_t v34 = (int8x16_t)vceqzq_s16(v49);
    int8x16_t v30 = (int8x16_t)vceqzq_s16(v50);
  }
  v51.i64[0] = 0x7000700070007;
  v51.i64[1] = 0x7000700070007;
  int32x4_t v52 = 0uLL;
  int16x8_t v53 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v14, v51), (int8x16_t)0, 0xEuLL), (int8x16_t)v16);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v53, v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  if (v58 <= 0x80 && v12 >= v58 + v10)
  {
    int64x2_t v60 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v10 & 0x3F));
    unsigned __int32 v61 = (int64x2_t *)(v9 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v61, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61->i64[0], 0), (uint64x2_t)vnegq_s64(v60)));
    if (v58 + (v10 & 0x3F) >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v61[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v60))), (int8x16_t)v52);
    }
    v10 += v58;
  }
  else
  {
    int v29 = 1;
  }
  int v62 = a4 >> 6;
  if (v62 != 2)
  {
    LODWORD(v65) = 0;
    LODWORD(v64) = 0;
    unint64_t v66 = v10;
    goto LABEL_34;
  }
  unint64_t v63 = v10 + 8;
  if (v12 < v10 + 8)
  {
    LODWORD(v64) = 0;
    unint64_t v63 = v10;
LABEL_33:
    LODWORD(v65) = 0;
    int v29 = 1;
    unint64_t v66 = v63;
    goto LABEL_34;
  }
  uint64_t v64 = *(void *)(v9 + 8 * (v10 >> 6)) >> v10;
  if ((v10 & 0x3F) >= 0x39) {
    v64 |= *(void *)(v9 + 8 * (v10 >> 6) + 8) << -(v10 & 0x3F);
  }
  unint64_t v66 = v10 + 16;
  LODWORD(v64) = (char)v64;
  if (v12 < v10 + 16) {
    goto LABEL_33;
  }
  uint64_t v65 = *(void *)(v9 + 8 * (v63 >> 6)) >> v63;
  if ((v63 & 0x3F) >= 0x39) {
    v65 |= *(void *)(v9 + 8 * (v63 >> 6) + 8) << -(v63 & 0x3F);
  }
  LODWORD(v65) = (char)v65;
LABEL_34:
  int16x8_t v67 = 0uLL;
  int16x8_t v68 = (int16x8_t)vextq_s8((int8x16_t)0, v35, 0xEuLL);
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v66;
  if (v73 <= 0x80 && v12 >= v74)
  {
    unint64_t v77 = v66 & 0x3F;
    int64x2_t v78 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v77));
    int8x16_t v79 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
    int32x4_t v76 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v78)));
    if (v73 + v77 >= 0x81) {
      int32x4_t v76 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v78))), (int8x16_t)v76);
    }
    unint64_t v66 = v74;
  }
  else
  {
    int v29 = 1;
    int32x4_t v76 = 0uLL;
  }
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v33, v33));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  if (v84 < 0x81)
  {
    int32x2_t v85 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
    v86.i64[0] = v85.u32[0];
    v86.i64[1] = v85.u32[1];
    int64x2_t v87 = v86;
    int32x4_t v88 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL)));
    unint64_t v89 = v84 + v66;
    if (v12 >= v84 + v66)
    {
      unint64_t v90 = v66 & 0x3F;
      int64x2_t v91 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v90));
      unint64_t v92 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int16x8_t v67 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
      if (v84 + v90 >= 0x81) {
        int16x8_t v67 = (int16x8_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), (int8x16_t)v67);
      }
      unint64_t v66 = v89;
    }
    else
    {
      int v29 = 1;
    }
    int32x4_t v93 = (int32x4_t)vshlq_u64((uint64x2_t)v67, (uint64x2_t)vnegq_s64(v87));
    *(int32x2_t *)v67.i8 = vmovn_s64((int64x2_t)v67);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    int16x8_t v94 = (int16x8_t)vzip1q_s32((int32x4_t)v67, v93);
    int16x8_t v95 = (int16x8_t)vshlq_u32((uint32x4_t)v94, (uint32x4_t)vnegq_s32(v88));
    *(int16x4_t *)v94.i8 = vmovn_s32((int32x4_t)v94);
    *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v95);
    int16x8_t v67 = vzip1q_s16(v94, v95);
  }
  else
  {
    int v29 = 1;
  }
  int32x4_t v96 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
  unint64_t v97 = vpaddq_s32(v96, v96).u64[0];
  v98.i64[0] = v97;
  v98.i64[1] = HIDWORD(v97);
  int64x2_t v99 = v98;
  unint64_t v100 = vaddvq_s64(v98);
  if (v100 <= 0x80)
  {
    int32x2_t v102 = vzip1_s32(*(int32x2_t *)v96.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v96, (int8x16_t)v96, 8uLL));
    v103.i64[0] = v102.u32[0];
    v103.i64[1] = v102.u32[1];
    int64x2_t v104 = v103;
    int32x4_t v105 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL)));
    unint64_t v106 = v100 + v66;
    if (v12 >= v100 + v66)
    {
      unint64_t v108 = v66 & 0x3F;
      int64x2_t v109 = vaddq_s64(vzip1q_s64((int64x2_t)0, v99), vdupq_n_s64(v108));
      uint64_t v110 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int32x4_t v107 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v110, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
      if (v100 + v108 >= 0x81) {
        int32x4_t v107 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v110[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), (int8x16_t)v107);
      }
      unint64_t v66 = v106;
    }
    else
    {
      int32x4_t v107 = 0uLL;
      int v29 = 1;
    }
    int32x4_t v111 = (int32x4_t)vshlq_u64((uint64x2_t)v107, (uint64x2_t)vnegq_s64(v104));
    *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    int16x8_t v112 = (int16x8_t)vzip1q_s32(v107, v111);
    int16x8_t v113 = (int16x8_t)vshlq_u32((uint32x4_t)v112, (uint32x4_t)vnegq_s32(v105));
    *(int16x4_t *)v112.i8 = vmovn_s32((int32x4_t)v112);
    *(int16x4_t *)v113.i8 = vmovn_s32((int32x4_t)v113);
    int16x8_t v101 = vzip1q_s16(v112, v113);
  }
  else
  {
    int v29 = 1;
    int16x8_t v101 = 0uLL;
  }
  int32x4_t v114 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v31, v31));
  unint64_t v115 = vpaddq_s32(v114, v114).u64[0];
  v116.i64[0] = v115;
  v116.i64[1] = HIDWORD(v115);
  int64x2_t v117 = v116;
  unint64_t v118 = vaddvq_s64(v116);
  if (v118 > 0x80 || v12 < v118 + v66) {
    goto LABEL_64;
  }
  int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v117), vdupq_n_s64(v66 & 0x3F));
  int v120 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
  int64x2_t v121 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
  if (v118 + (v66 & 0x3F) >= 0x81) {
    int64x2_t v121 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), (int8x16_t)v121);
  }
  if (v29 || (uint64_t v122 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v122) - (v118 + v66) >= 9))
  {
LABEL_64:
    uint64_t v122 = 0;
    v179 |= 0xFFFFLL << ((8 * (&v179 + 6)) & 0x30);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int8x16_t v123 = (uint64_t *)((char *)a1->i64 + a2);
    uint64_t v124 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *int8x16_t v123 = 0;
    v123[1] = 0;
    int16x8_t v125 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *uint64_t v124 = 0;
    v124[1] = 0;
    *int16x8_t v125 = 0;
    v125[1] = 0;
  }
  else
  {
    int32x2_t v127 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
    int32x2_t v128 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v129.i64[0] = v127.u32[0];
    v129.i64[1] = v127.u32[1];
    int64x2_t v130 = v129;
    v129.i64[0] = v128.u32[0];
    v129.i64[1] = v128.u32[1];
    int32x4_t v131 = (int32x4_t)vshlq_u64((uint64x2_t)v52, (uint64x2_t)vnegq_s64(v130));
    int32x4_t v132 = (int32x4_t)vshlq_u64((uint64x2_t)v76, (uint64x2_t)vnegq_s64(v129));
    *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
    *(int32x2_t *)v131.i8 = vmovn_s64((int64x2_t)v131);
    *(int32x2_t *)v76.i8 = vmovn_s64((int64x2_t)v76);
    *(int32x2_t *)v132.i8 = vmovn_s64((int64x2_t)v132);
    int16x8_t v133 = (int16x8_t)vzip1q_s32(v52, v131);
    int16x8_t v134 = (int16x8_t)vzip1q_s32(v76, v132);
    int16x8_t v135 = (int16x8_t)vshlq_u32((uint32x4_t)v133, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL)))));
    int16x8_t v136 = (int16x8_t)vshlq_u32((uint32x4_t)v134, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v133);
    *(int16x4_t *)v135.i8 = vmovn_s32((int32x4_t)v135);
    *(int16x4_t *)v134.i8 = vmovn_s32((int32x4_t)v134);
    *(int16x4_t *)v136.i8 = vmovn_s32((int32x4_t)v136);
    v137.i64[0] = 0x10001000100010;
    v137.i64[1] = 0x10001000100010;
    v138.i64[0] = 0x10001000100010;
    v138.i64[1] = 0x10001000100010;
    unint64_t v139 = v11 >> 6;
    int16x8_t v140 = vzip1q_s16(v133, v135);
    v135.i64[0] = 0xF000F000F000FLL;
    v135.i64[1] = 0xF000F000F000FLL;
    int16x8_t v141 = vsubq_s16(v137, v53);
    int16x8_t v142 = vzip1q_s16(v134, v136);
    v136.i64[0] = 0xF000F000F000FLL;
    v136.i64[1] = 0xF000F000F000FLL;
    int32x2_t v143 = vzip1_s32(*(int32x2_t *)v114.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v114, (int8x16_t)v114, 8uLL));
    v144.i64[0] = 0xF000F000F000FLL;
    v144.i64[1] = 0xF000F000F000FLL;
    v145.i64[0] = 0x10001000100010;
    v145.i64[1] = 0x10001000100010;
    int16x8_t v146 = vaddq_s16(v53, v135);
    int16x8_t v147 = vaddq_s16(v68, v136);
    int16x8_t v148 = vshlq_s16(v142, vsubq_s16(v138, v68));
    v129.i64[0] = v143.u32[0];
    v129.i64[1] = v143.u32[1];
    int8x16_t v149 = (int8x16_t)vshlq_s16(vshlq_s16(v140, v141), v146);
    int16x8_t v150 = vshlq_s16(v148, v147);
    int16x8_t v151 = vshlq_s16(vshlq_s16(v67, vsubq_s16(v138, v33)), vaddq_s16(v33, v136));
    int16x8_t v152 = vshlq_s16(vshlq_s16(v101, vsubq_s16(v138, v32)), vaddq_s16(v32, v136));
    int32x4_t v153 = (int32x4_t)vshlq_u64((uint64x2_t)v121, (uint64x2_t)vnegq_s64(v129));
    *(int32x2_t *)v148.i8 = vmovn_s64(v121);
    *(int32x2_t *)v153.i8 = vmovn_s64((int64x2_t)v153);
    int16x8_t v154 = (int16x8_t)vzip1q_s32((int32x4_t)v148, v153);
    int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v154, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v31.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL)))));
    *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
    *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
    int16x8_t v156 = vshlq_s16(vshlq_s16(vzip1q_s16(v154, v155), vsubq_s16(v145, v31)), vaddq_s16(v31, v144));
    if (v62 == 2)
    {
      v157.i64[0] = 0xFFFFFFFF00000000;
      v157.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v158 = vmlal_s8((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v65), v157), vdup_n_s8(v64), (int8x8_t)0x302030201000100);
      int16x8_t v150 = vaddq_s16(v150, v158);
      int16x8_t v151 = vaddq_s16(vaddq_s16(vdupq_n_s16(2 * (int)v65), v158), v151);
      int16x8_t v152 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64), v158), v152);
      int16x8_t v156 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64 + 2 * (int)v65), v158), v156);
    }
    int16x8_t v159 = vdupq_n_s16(v139);
    int16x8_t v160 = vaddq_s16((int16x8_t)vandq_s8(v149, v37), v150);
    int8x16_t v161 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v149.i8, 0);
    int16x8_t v162 = vsubq_s16(v160, (int16x8_t)vandq_s8(v161, v37));
    int16x8_t v163 = vsubq_s16(v151, (int16x8_t)vandq_s8(v161, v36));
    int16x8_t v164 = vsubq_s16(v152, (int16x8_t)vandq_s8(v161, v34));
    int16x8_t v165 = vsubq_s16(v156, (int16x8_t)vandq_s8(v161, v30));
    v166.i64[0] = 0x1000100010001;
    v166.i64[1] = 0x1000100010001;
    if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v166)))
    {
      int8x16_t v167 = (int8x16_t)v162;
      v167.i16[0] = v162.i16[7];
      v167.i16[7] = v162.i16[0];
      int8x16_t v168 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
      int16x8_t v169 = (int16x8_t)vbslq_s8(v168, v167, (int8x16_t)v162);
      int16x8_t v170 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_242EA7480), v168), v169);
      int16x8_t v162 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_242EA7490), v168), v170);
      int16x8_t v171 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v163, (int8x16_t)xmmword_242EA74A0), v168), v163);
      int16x8_t v163 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v171, (int8x16_t)xmmword_242EA74B0), v168), v171);
      int16x8_t v172 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v164, (int8x16_t)xmmword_242EA74C0), v168), v164);
      int16x8_t v164 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v172, (int8x16_t)xmmword_242EA74D0), v168), v172);
      int16x8_t v173 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v165, (int8x16_t)xmmword_242EA74E0), v168), v165);
      int16x8_t v165 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v173, (int8x16_t)xmmword_242EA74F0), v168), v173);
    }
    int32x4_t v174 = (int32x4_t)vaddq_s16(v159, v162);
    int32x4_t v175 = (int32x4_t)vaddq_s16(v163, v159);
    int32x4_t v176 = (int32x4_t)vaddq_s16(v164, v159);
    int32x4_t v177 = (int32x4_t)vaddq_s16(v165, v159);
    *a1 = vuzp1q_s32(v174, v176);
    *(int32x4_t *)((char *)a1 + a2) = vuzp2q_s32(v174, v176);
    int16x8_t v178 = (int32x4_t *)((char *)a1 + 2 * a2);
    *int16x8_t v178 = vuzp1q_s32(v175, v177);
    *(int32x4_t *)((char *)v178 + a2) = vuzp2q_s32(v175, v177);
  }
  return v122;
}

_WORD *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(_WORD *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v5 = 0;
  uint64_t v195 = *MEMORY[0x263EF8340];
  unsigned int v6 = a5 & 0xFFFFFFFD;
  unsigned int v184 = a4;
  uint64_t v183 = a3;
  do
  {
    uint64_t v24 = a3 + 8 * v5;
    unint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = 8 * (v24 & 7);
    if ((a4 >> v5))
    {
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = v26;
      do
      {
        if ((unint64_t)(v29 - v26 + (v28 << 6) - 57) < 0xFFFFFFFFFFFFFFBFLL)
        {
          unsigned __int8 v30 = 0;
        }
        else
        {
          unsigned __int8 v30 = 0;
          uint64_t v34 = 0;
          unint64_t v35 = 8;
          do
          {
            unint64_t v36 = 64 - v29;
            if (64 - v29 >= v35) {
              unint64_t v36 = v35;
            }
            v30 |= (unint64_t)((v25[v28] >> v29) & ~(-1 << v36)) << v34;
            v34 += v36;
            unint64_t v37 = v36 + v29;
            v28 += v37 >> 6;
            uint64_t v29 = v37 & 0x3F;
            v35 -= v36;
          }
          while (v35);
        }
        int v31 = v30 << 8;
        int v32 = v31 - (v30 & 1) + 128;
        if (v31 == 65280) {
          int v32 = 0xFFFF;
        }
        if (!v31) {
          int v32 = 0;
        }
        if (v31 == 0x8000 && v6 == 1) {
          int v32 = v31;
        }
        if (a5 == 4) {
          int v32 = v31;
        }
        v185.i32[v27++] = v32 ^ (((a5 & 0xFFFFFFFD) == 1) << 15);
      }
      while (v27 != 8);
      LOWORD(v8) = v185.i16[0];
      LOWORD(v7) = v185.i16[2];
      LOWORD(v10) = v185.i16[4];
      LOWORD(v9) = v185.i16[6];
      LOWORD(v12) = v186;
      LOWORD(v11) = v187;
      LOWORD(v14) = v188;
      __int16 v13 = v189;
      goto LABEL_3;
    }
    uint64_t v38 = (*v25 >> v26) & 0xFLL;
    uint64_t v39 = v26 | 4;
    int32x2_t v40 = &kDQuadParamTable[10 * v38];
    unsigned int v41 = v40[484];
    unsigned int v42 = v40[485];
    if (v41 >= 0x10) {
      uint64_t v43 = 16;
    }
    else {
      uint64_t v43 = v41;
    }
    if (v42 >= 0x10) {
      uint64_t v44 = 16;
    }
    else {
      uint64_t v44 = v42;
    }
    if (v43)
    {
      if ((unint64_t)(v43 - v26 + v39) <= 0x40)
      {
        int v46 = 0;
        uint64_t v45 = 0;
        uint64_t v49 = 0;
        unint64_t v50 = v43;
        do
        {
          unint64_t v51 = 64 - v39;
          if (64 - v39 >= v50) {
            unint64_t v51 = v50;
          }
          v46 |= (unint64_t)((v25[v45] >> v39) & ~(-1 << v51)) << v49;
          v49 += v51;
          unint64_t v52 = v51 + v39;
          v45 += v52 >> 6;
          uint64_t v39 = v52 & 0x3F;
          v50 -= v51;
        }
        while (v50);
        int v47 = v43 + 4;
        if (!v44)
        {
LABEL_43:
          int v48 = 0;
          uint64_t v53 = 0;
          uint64_t v191 = 0;
          uint64_t v192 = 0;
          int v194 = 0;
          uint64_t v193 = 0;
          goto LABEL_96;
        }
      }
      else
      {
        uint64_t v45 = 0;
        int v46 = 0;
        int v47 = v43 + 4;
        if (!v44) {
          goto LABEL_43;
        }
      }
    }
    else
    {
      int v46 = 0;
      uint64_t v45 = 0;
      int v47 = 4;
      if (!v44) {
        goto LABEL_43;
      }
    }
    if ((unint64_t)(v39 - v26 + (v45 << 6) + 3) <= 0x40)
    {
      int v48 = 0;
      uint64_t v54 = 0;
      unint64_t v55 = 3;
      do
      {
        unint64_t v56 = 64 - v39;
        if (64 - v39 >= v55) {
          unint64_t v56 = v55;
        }
        v48 |= (unint64_t)((v25[v45] >> v39) & ~(-1 << v56)) << v54;
        v54 += v56;
        unint64_t v57 = v56 + v39;
        v45 += v57 >> 6;
        uint64_t v39 = v57 & 0x3F;
        v55 -= v56;
      }
      while (v55);
    }
    else
    {
      int v48 = 0;
    }
    uint64_t v191 = 0;
    uint64_t v192 = 0;
    int v194 = 0;
    uint64_t v193 = 0;
    unsigned int v58 = 61 - v47;
    unsigned int v59 = (61 - v47) / 7u;
    uint64_t v60 = v44 - v26;
    unint64_t v61 = (v39 | (v45 << 6)) + v58 % 7;
    unint64_t v62 = v61 & 0x3F;
    if (v60 + v62 + (v61 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      uint64_t v53 = 0;
      uint64_t v63 = 0;
      unint64_t v64 = v61 >> 6;
      unint64_t v65 = v44;
      do
      {
        unint64_t v66 = 64 - v62;
        if (64 - v62 >= v65) {
          unint64_t v66 = v65;
        }
        v53 |= ((unint64_t)((v25[v64] >> v62) & ~(-1 << v66)) << v63);
        v63 += v66;
        unint64_t v67 = v66 + v62;
        v64 += v67 >> 6;
        unint64_t v62 = v67 & 0x3F;
        v65 -= v66;
      }
      while (v65);
      LODWORD(v191) = v53;
      unint64_t v61 = v62 | (v64 << 6);
    }
    else
    {
      uint64_t v53 = 0;
    }
    uint64_t v68 = v59 - v44;
    unint64_t v69 = v61 + v68;
    uint64_t v70 = (v61 + v68) & 0x3F;
    if (v60 + v70 + ((v61 + v68) & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v71 = 0;
      uint64_t v72 = 0;
      unint64_t v73 = v69 >> 6;
      unint64_t v74 = v44;
      do
      {
        unint64_t v75 = 64 - v70;
        if (64 - v70 >= v74) {
          unint64_t v75 = v74;
        }
        v71 |= (unint64_t)((v25[v73] >> v70) & ~(-1 << v75)) << v72;
        v72 += v75;
        unint64_t v76 = v75 + v70;
        v73 += v76 >> 6;
        uint64_t v70 = v76 & 0x3F;
        v74 -= v75;
      }
      while (v74);
      HIDWORD(v191) = v71;
      unint64_t v69 = v70 | (v73 << 6);
    }
    else
    {
      HIDWORD(v191) = 0;
    }
    unint64_t v77 = v69 + v68;
    uint64_t v78 = v77 & 0x3F;
    if (v60 + v78 + (v77 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v79 = 0;
      uint64_t v80 = 0;
      unint64_t v81 = v77 >> 6;
      unint64_t v82 = v44;
      do
      {
        unint64_t v83 = 64 - v78;
        if (64 - v78 >= v82) {
          unint64_t v83 = v82;
        }
        v79 |= (unint64_t)((v25[v81] >> v78) & ~(-1 << v83)) << v80;
        v80 += v83;
        unint64_t v84 = v83 + v78;
        v81 += v84 >> 6;
        uint64_t v78 = v84 & 0x3F;
        v82 -= v83;
      }
      while (v82);
      LODWORD(v192) = v79;
      unint64_t v77 = v78 | (v81 << 6);
    }
    else
    {
      LODWORD(v192) = 0;
    }
    unint64_t v85 = v77 + v68;
    uint64_t v86 = v85 & 0x3F;
    if (v60 + v86 + (v85 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v87 = 0;
      uint64_t v88 = 0;
      unint64_t v89 = v85 >> 6;
      unint64_t v90 = v44;
      do
      {
        unint64_t v91 = 64 - v86;
        if (64 - v86 >= v90) {
          unint64_t v91 = v90;
        }
        v87 |= (unint64_t)((v25[v89] >> v86) & ~(-1 << v91)) << v88;
        v88 += v91;
        unint64_t v92 = v91 + v86;
        v89 += v92 >> 6;
        uint64_t v86 = v92 & 0x3F;
        v90 -= v91;
      }
      while (v90);
      HIDWORD(v192) = v87;
      unint64_t v85 = v86 | (v89 << 6);
    }
    else
    {
      HIDWORD(v192) = 0;
    }
    unint64_t v93 = v85 + v68;
    uint64_t v94 = v93 & 0x3F;
    if (v60 + v94 + (v93 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v95 = 0;
      uint64_t v96 = 0;
      unint64_t v97 = v93 >> 6;
      unint64_t v98 = v44;
      do
      {
        unint64_t v99 = 64 - v94;
        if (64 - v94 >= v98) {
          unint64_t v99 = v98;
        }
        v95 |= (unint64_t)((v25[v97] >> v94) & ~(-1 << v99)) << v96;
        v96 += v99;
        unint64_t v100 = v99 + v94;
        v97 += v100 >> 6;
        uint64_t v94 = v100 & 0x3F;
        v98 -= v99;
      }
      while (v98);
      LODWORD(v193) = v95;
      unint64_t v93 = v94 | (v97 << 6);
    }
    else
    {
      LODWORD(v193) = 0;
    }
    unint64_t v101 = (v93 + v68) >> 6;
    uint64_t v102 = (v93 + v68) & 0x3F;
    if (v60 + v102 + ((v93 + v68) & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v103 = 0;
      uint64_t v104 = 0;
      unint64_t v105 = v44;
      do
      {
        unint64_t v106 = 64 - v102;
        if (64 - v102 >= v105) {
          unint64_t v106 = v105;
        }
        v103 |= (unint64_t)((v25[v101] >> v102) & ~(-1 << v106)) << v104;
        v104 += v106;
        unint64_t v107 = v106 + v102;
        v101 += v107 >> 6;
        uint64_t v102 = v107 & 0x3F;
        v105 -= v106;
      }
      while (v105);
    }
    else
    {
      int v103 = 0;
    }
    HIDWORD(v193) = v103;
    unint64_t v108 = (v102 | (v101 << 6)) + v68;
    uint64_t v109 = v108 & 0x3F;
    if (v60 + v109 + (v108 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v110 = 0;
      uint64_t v111 = 0;
      unint64_t v112 = v108 >> 6;
      unint64_t v113 = v44;
      do
      {
        unint64_t v114 = 64 - v109;
        if (64 - v109 >= v113) {
          unint64_t v114 = v113;
        }
        v110 |= (unint64_t)((v25[v112] >> v109) & ~(-1 << v114)) << v111;
        v111 += v114;
        unint64_t v115 = v114 + v109;
        v112 += v115 >> 6;
        uint64_t v109 = v115 & 0x3F;
        v113 -= v114;
      }
      while (v113);
    }
    else
    {
      int v110 = 0;
    }
    int v194 = v110;
LABEL_96:
    char v116 = 16 - v43;
    uint64_t v117 = (v46 << (16 - v43));
    unint64_t v118 = *(void *)&kDQuadParamTable[10 * v38 + 482];
    if (v118 >> v44 <= 1) {
      unint64_t v119 = 1;
    }
    else {
      unint64_t v119 = v118 >> v44;
    }
    unint64_t v120 = v119 >> 1;
    unint64_t v121 = (unint64_t)(1 << v116) >> 1;
    if (v119 >> 1 < v121) {
      unint64_t v121 = v119 >> 1;
    }
    unint64_t v122 = 0x8000 - v117;
    if (!v117) {
      unint64_t v121 = 0;
    }
    BOOL v123 = v117 == 0x8000;
    if (v117 >= 0xFFFF) {
      int v124 = 0xFFFF;
    }
    else {
      int v124 = v117;
    }
    unsigned int v125 = v124 ^ 0x8000;
    if (v119 <= v122)
    {
      __int16 v126 = -1025;
    }
    else
    {
      unsigned int v125 = 0;
      __int16 v126 = 0;
    }
    if (v6 == 1)
    {
      __int16 v13 = v126;
    }
    else
    {
      unsigned int v125 = v124;
      __int16 v13 = 31743;
    }
    if (v44)
    {
      unint64_t v127 = v118 + v117;
      uint64_t v128 = ~(-1 << v44);
      unint64_t v129 = v122 / v119;
      if (v48)
      {
        BOOL v130 = v129 == v53;
        if (v117 || v53)
        {
          if (v127 >= 0x10000 && v53 == v128)
          {
            uint64_t v131 = 1;
            uint64_t v53 = 0xFFFFLL;
LABEL_134:
            unint64_t v134 = v53 + v117;
            if (a5 == 4)
            {
              unint64_t v135 = v134 & 0xFFFFFFFFFFFFFE00;
              if ((v134 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v134 = 31743;
              }
              else if (v135 == 32256)
              {
                unint64_t v134 = 0x8000;
              }
              else if (v135 == 64512)
              {
                unint64_t v134 = 64511;
              }
            }
            if (v134 >= 0xFFFF) {
              LODWORD(v134) = 0xFFFF;
            }
            if (v130) {
              __int32 v136 = 0;
            }
            else {
              __int32 v136 = v134 ^ 0x8000;
            }
            if (v6 == 1) {
              __int32 v8 = v136;
            }
            else {
              __int32 v8 = v134;
            }
            v185.i32[0] = v8;
            if (v48 == 1)
            {
              uint64_t v137 = v121;
              BOOL v138 = v117 == 0x8000;
            }
            else
            {
              uint64_t v139 = *(unsigned int *)((unint64_t)&v191 | (4 * v131));
              BOOL v138 = v129 == v139;
              if (v117 | v139)
              {
                if (v127 >= 0x10000 && v139 == v128) {
                  uint64_t v137 = 0xFFFFLL;
                }
                else {
                  uint64_t v137 = v120 + v119 * v139;
                }
              }
              else
              {
                uint64_t v137 = 0;
              }
              ++v131;
            }
            unint64_t v140 = v137 + v117;
            if (a5 == 4)
            {
              unint64_t v141 = v140 & 0xFFFFFFFFFFFFFE00;
              if ((v140 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v140 = 31743;
              }
              else if (v141 == 32256)
              {
                unint64_t v140 = 0x8000;
              }
              else if (v141 == 64512)
              {
                unint64_t v140 = 64511;
              }
            }
            if (v140 >= 0xFFFF) {
              LODWORD(v140) = 0xFFFF;
            }
            if (v138) {
              __int32 v7 = 0;
            }
            else {
              __int32 v7 = v140 ^ 0x8000;
            }
            if (v6 != 1) {
              __int32 v7 = v140;
            }
            v185.i32[1] = v7;
            if (v48 == 2)
            {
              uint64_t v142 = v121;
              BOOL v143 = v117 == 0x8000;
            }
            else
            {
              uint64_t v144 = *((unsigned int *)&v191 + v131);
              BOOL v143 = v129 == v144;
              if (v117 | v144)
              {
                if (v127 >= 0x10000 && v144 == v128) {
                  uint64_t v142 = 0xFFFFLL;
                }
                else {
                  uint64_t v142 = v120 + v119 * v144;
                }
              }
              else
              {
                uint64_t v142 = 0;
              }
              ++v131;
            }
            unint64_t v145 = v142 + v117;
            if (a5 == 4)
            {
              unint64_t v146 = v145 & 0xFFFFFFFFFFFFFE00;
              if ((v145 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v145 = 31743;
              }
              else if (v146 == 32256)
              {
                unint64_t v145 = 0x8000;
              }
              else if (v146 == 64512)
              {
                unint64_t v145 = 64511;
              }
            }
            if (v145 >= 0xFFFF) {
              int v147 = 0xFFFF;
            }
            else {
              int v147 = v145;
            }
            if (v143) {
              int v148 = 0;
            }
            else {
              int v148 = v147 ^ 0x8000;
            }
            if (v6 == 1) {
              int v10 = v148;
            }
            else {
              int v10 = v147;
            }
            v185.i32[2] = v10;
            if (v48 == 3)
            {
              uint64_t v149 = v121;
              BOOL v150 = v117 == 0x8000;
            }
            else
            {
              uint64_t v151 = *((unsigned int *)&v191 + v131);
              BOOL v150 = v129 == v151;
              if (v117 | v151)
              {
                if (v127 >= 0x10000 && v151 == v128) {
                  uint64_t v149 = 0xFFFFLL;
                }
                else {
                  uint64_t v149 = v120 + v119 * v151;
                }
              }
              else
              {
                uint64_t v149 = 0;
              }
              ++v131;
            }
            unint64_t v152 = v149 + v117;
            if (a5 == 4)
            {
              unint64_t v153 = v152 & 0xFFFFFFFFFFFFFE00;
              if ((v152 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v152 = 31743;
              }
              else if (v153 == 32256)
              {
                unint64_t v152 = 0x8000;
              }
              else if (v153 == 64512)
              {
                unint64_t v152 = 64511;
              }
            }
            if (v152 >= 0xFFFF) {
              int v154 = 0xFFFF;
            }
            else {
              int v154 = v152;
            }
            if (v150) {
              int v155 = 0;
            }
            else {
              int v155 = v154 ^ 0x8000;
            }
            if (v6 == 1) {
              int v9 = v155;
            }
            else {
              int v9 = v154;
            }
            v185.i32[3] = v9;
            if (v48 == 4)
            {
              uint64_t v156 = v121;
              BOOL v157 = v117 == 0x8000;
            }
            else
            {
              uint64_t v158 = *((unsigned int *)&v191 + v131);
              BOOL v157 = v129 == v158;
              if (v117 | v158)
              {
                if (v127 >= 0x10000 && v158 == v128) {
                  uint64_t v156 = 0xFFFFLL;
                }
                else {
                  uint64_t v156 = v120 + v119 * v158;
                }
              }
              else
              {
                uint64_t v156 = 0;
              }
              ++v131;
            }
            unint64_t v159 = v156 + v117;
            if (a5 == 4)
            {
              unint64_t v160 = v159 & 0xFFFFFFFFFFFFFE00;
              if ((v159 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v159 = 31743;
              }
              else if (v160 == 32256)
              {
                unint64_t v159 = 0x8000;
              }
              else if (v160 == 64512)
              {
                unint64_t v159 = 64511;
              }
            }
            if (v159 >= 0xFFFF) {
              int v161 = 0xFFFF;
            }
            else {
              int v161 = v159;
            }
            if (v157) {
              int v162 = 0;
            }
            else {
              int v162 = v161 ^ 0x8000;
            }
            if (v6 == 1) {
              int v12 = v162;
            }
            else {
              int v12 = v161;
            }
            int v186 = v12;
            if (v48 == 5)
            {
              uint64_t v163 = v121;
              BOOL v164 = v117 == 0x8000;
            }
            else
            {
              uint64_t v165 = *((unsigned int *)&v191 + v131);
              BOOL v164 = v129 == v165;
              if (v117 | v165)
              {
                if (v127 >= 0x10000 && v165 == v128) {
                  uint64_t v163 = 0xFFFFLL;
                }
                else {
                  uint64_t v163 = v120 + v119 * v165;
                }
              }
              else
              {
                uint64_t v163 = 0;
              }
              ++v131;
            }
            unint64_t v166 = v163 + v117;
            if (a5 == 4)
            {
              unint64_t v167 = v166 & 0xFFFFFFFFFFFFFE00;
              if ((v166 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v166 = 31743;
              }
              else if (v167 == 32256)
              {
                unint64_t v166 = 0x8000;
              }
              else if (v167 == 64512)
              {
                unint64_t v166 = 64511;
              }
            }
            if (v166 >= 0xFFFF) {
              int v168 = 0xFFFF;
            }
            else {
              int v168 = v166;
            }
            if (v164) {
              int v11 = 0;
            }
            else {
              int v11 = v168 ^ 0x8000;
            }
            if (v6 != 1) {
              int v11 = v168;
            }
            int v187 = v11;
            if (v48 == 6)
            {
              uint64_t v169 = v121;
              BOOL v170 = v117 == 0x8000;
            }
            else
            {
              uint64_t v171 = *((unsigned int *)&v191 + v131);
              BOOL v170 = v129 == v171;
              if (v117 | v171)
              {
                if (v127 >= 0x10000 && v171 == v128) {
                  uint64_t v169 = 0xFFFFLL;
                }
                else {
                  uint64_t v169 = v120 + v119 * v171;
                }
              }
              else
              {
                uint64_t v169 = 0;
              }
              ++v131;
            }
            unint64_t v172 = v169 + v117;
            if (a5 == 4)
            {
              unint64_t v173 = v172 & 0xFFFFFFFFFFFFFE00;
              if ((v172 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v172 = 31743;
              }
              else if (v173 == 32256)
              {
                unint64_t v172 = 0x8000;
              }
              else if (v173 == 64512)
              {
                unint64_t v172 = 64511;
              }
            }
            if (v172 >= 0xFFFF) {
              int v174 = 0xFFFF;
            }
            else {
              int v174 = v172;
            }
            if (v170) {
              int v14 = 0;
            }
            else {
              int v14 = v174 ^ 0x8000;
            }
            if (v6 != 1) {
              int v14 = v174;
            }
            int v188 = v14;
            if (v48 != 7)
            {
              uint64_t v175 = *((unsigned int *)&v191 + v131);
              BOOL v123 = v129 == v175;
              if (v117 | v175)
              {
                if (v127 >= 0x10000 && v175 == v128) {
                  unint64_t v121 = 0xFFFFLL;
                }
                else {
                  unint64_t v121 = v120 + v119 * v175;
                }
              }
              else
              {
                unint64_t v121 = 0;
              }
            }
            unint64_t v176 = v121 + v117;
            a4 = v184;
            a3 = v183;
            if (a5 == 4)
            {
              unint64_t v177 = v176 & 0xFFFFFFFFFFFFFE00;
              if ((v176 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v176 = 31743;
              }
              else if (v177 == 32256)
              {
                unint64_t v176 = 0x8000;
              }
              else if (v177 == 64512)
              {
                unint64_t v176 = 64511;
              }
            }
            if (v176 >= 0xFFFF) {
              LOWORD(v176) = -1;
            }
            __int16 v13 = v176 ^ 0x8000;
            if (v123) {
              __int16 v13 = 0;
            }
            if (v6 != 1) {
              __int16 v13 = v176;
            }
            goto LABEL_3;
          }
          uint64_t v53 = v120 + v119 * v53;
        }
        uint64_t v131 = 1;
        goto LABEL_134;
      }
      uint64_t v131 = 0;
      uint64_t v53 = v121;
      BOOL v130 = v117 == 0x8000;
      goto LABEL_134;
    }
    if (v119 <= v122) {
      __int16 v132 = 31743;
    }
    else {
      __int16 v132 = 0;
    }
    if (v6 == 1) {
      LOWORD(v14) = v132;
    }
    else {
      LOWORD(v14) = -1025;
    }
    if (a5 == 4)
    {
      int v133 = v117 & 0xFFFFFE00;
      a4 = v184;
      a3 = v183;
      if ((v117 & 0xFFFFFE00) == 0x7C00)
      {
        LOWORD(v14) = v13;
        LOWORD(v11) = v13;
        LOWORD(v12) = v13;
        LOWORD(v9) = v13;
        LOWORD(v10) = v13;
        LOWORD(v7) = v13;
        LOWORD(v8) = v13;
      }
      else if (v133 == 64512)
      {
        __int16 v13 = v14;
        LOWORD(v11) = v14;
        LOWORD(v12) = v14;
        LOWORD(v9) = v14;
        LOWORD(v10) = v14;
        LOWORD(v7) = v14;
        LOWORD(v8) = v14;
      }
      else
      {
        LOWORD(v8) = ((a5 & 0xFFFFFFFD) != 1) << 15;
        __int16 v13 = v8;
        LOWORD(v14) = v8;
        LOWORD(v11) = v8;
        LOWORD(v12) = v8;
        LOWORD(v9) = v8;
        LOWORD(v10) = v8;
        LOWORD(v7) = v8;
        if (v133 != 32256)
        {
          __int16 v13 = v125;
          LOWORD(v14) = v125;
          LOWORD(v11) = v125;
          LOWORD(v12) = v125;
          LOWORD(v9) = v125;
          LOWORD(v10) = v125;
          LOWORD(v7) = v125;
          LOWORD(v8) = v125;
        }
      }
    }
    else
    {
      __int16 v13 = v125;
      LOWORD(v14) = v125;
      LOWORD(v11) = v125;
      LOWORD(v12) = v125;
      int32x4_t v185 = vdupq_n_s32(v125);
      LOWORD(v9) = v125;
      LOWORD(v10) = v125;
      LOWORD(v7) = v125;
      LOWORD(v8) = v125;
      a4 = v184;
      a3 = v183;
    }
LABEL_3:
    int16x8_t v15 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v5;
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t result = &v190[4 * v16];
    uint64_t v19 = v17;
    result[v19] = v8;
    int16x8_t v20 = &v190[4 * (v16 + 1)];
    v20[v19] = v7;
    uint64_t v21 = (v17 + 1);
    result[v21] = v10;
    v20[v21] = v9;
    unint64_t v22 = &v190[4 * (v16 + 2)];
    v22[v19] = v12;
    int64x2_t v23 = &v190[4 * (v16 + 3)];
    v23[v19] = v11;
    v22[v21] = v14;
    v23[v21] = v13;
    ++v5;
  }
  while (v5 != 4);
  *a1 = v190[0];
  a1[1] = v190[4];
  a1[2] = v190[8];
  a1[3] = v190[12];
  a1[4] = v190[16];
  a1[5] = v190[20];
  a1[6] = v190[24];
  a1[7] = v190[28];
  int16x8_t v178 = (_WORD *)((char *)a1 + a2);
  *int16x8_t v178 = v190[1];
  v178[1] = v190[5];
  v178[2] = v190[9];
  v178[3] = v190[13];
  v178[4] = v190[17];
  v178[5] = v190[21];
  v178[6] = v190[25];
  v178[7] = v190[29];
  uint64_t v179 = (_WORD *)((char *)a1 + a2 + a2);
  *uint64_t v179 = v190[2];
  v179[1] = v190[6];
  v179[2] = v190[10];
  v179[3] = v190[14];
  v179[4] = v190[18];
  v179[5] = v190[22];
  v179[6] = v190[26];
  v179[7] = v190[30];
  int16x8_t v180 = (_WORD *)((char *)v179 + a2);
  *int16x8_t v180 = v190[3];
  v180[1] = v190[7];
  v180[2] = v190[11];
  v180[3] = v190[15];
  v180[4] = v190[19];
  v180[5] = v190[23];
  v180[6] = v190[27];
  v180[7] = v190[31];
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7, double a8, double a9, double a10, double a11, int16x4_t a12)
{
  unint64_t v15 = a3;
  if (a5 >= 8) {
    unsigned int v17 = 8;
  }
  else {
    unsigned int v17 = a5;
  }
  if (a6 >= 4) {
    unsigned int v18 = 4;
  }
  else {
    unsigned int v18 = a6;
  }
  if (v17 && v18)
  {
    uint64_t v19 = (int32x4_t *)result;
    int v20 = a7;
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int32x4_t *)result, a2, v17, v18, a7, a8, a9, a10, a11, a12);
    v15 += result;
  }
  else
  {
    uint64_t v19 = (int32x4_t *)result;
    int v20 = a7;
    *a4 = 0;
  }
  uint64_t v40 = 4 * a2;
  uint64_t v21 = a4 + 1;
  if (a6 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v17 && v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v21, (int32x4_t *)((char *)v19 + v40), a2, v17, v24, v20, a8, a9, a10, a11, a12);
    v15 += result;
  }
  else
  {
    *uint64_t v21 = 0;
  }
  unint64_t v25 = a4 + 2;
  if (a5 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a5;
  }
  unsigned int v27 = v26 - 8;
  if (v27 >= 8) {
    int v28 = 8;
  }
  else {
    int v28 = v27;
  }
  if (v28 && v18)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v25, v19 + 1, a2, v28, v18, v20, a8, a9, a10, a11, a12);
    v15 += result;
    uint64_t v29 = a4 + 3;
  }
  else
  {
    *unint64_t v25 = 0;
    uint64_t v29 = a4 + 3;
    if (!v28) {
      goto LABEL_33;
    }
  }
  if (v24)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v29, (int32x4_t *)((char *)v19 + v40 + 16), a2, v28, v24, v20, a8, a9, a10, a11, a12);
    v15 += result;
    goto LABEL_34;
  }
LABEL_33:
  *uint64_t v29 = 0;
LABEL_34:
  unsigned __int8 v30 = a4 + 4;
  if (a6 <= 8) {
    int v31 = 8;
  }
  else {
    int v31 = a6;
  }
  unsigned int v32 = v31 - 8;
  if (v32 >= 4) {
    int v33 = 4;
  }
  else {
    int v33 = v32;
  }
  if (v17 && v33)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v30, (int32x4_t *)((char *)v19 + 8 * a2), a2, v17, v33, v20, a8, a9, a10, a11, a12);
    v15 += result;
  }
  else
  {
    *unsigned __int8 v30 = 0;
  }
  uint64_t v34 = a4 + 5;
  if (a6 <= 12) {
    int v35 = 12;
  }
  else {
    int v35 = a6;
  }
  unsigned int v36 = v35 - 12;
  if (v36 >= 4) {
    int v37 = 4;
  }
  else {
    int v37 = v36;
  }
  if (v17 && v37)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v34, (int32x4_t *)((char *)v19 + 12 * a2), a2, v17, v37, v20, a8, a9, a10, a11, a12);
    v15 += result;
    uint64_t v38 = a4 + 6;
    if (!v28) {
      goto LABEL_57;
    }
  }
  else
  {
    *uint64_t v34 = 0;
    uint64_t v38 = a4 + 6;
    if (!v28) {
      goto LABEL_57;
    }
  }
  if (v33)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v38, (int32x4_t *)((char *)v19 + 8 * a2 + 16), a2, v28, v33, v20, a8, a9, a10, a11, a12);
    v15 += result;
    uint64_t v39 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *uint64_t v38 = 0;
  uint64_t v39 = a4 + 7;
  if (!v28)
  {
LABEL_62:
    *uint64_t v39 = 0;
    return result;
  }
LABEL_58:
  if (!v37) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v39, (int32x4_t *)((char *)v19 + 12 * a2 + 16), a2, v28, v37, v20, a8, a9, a10, a11, a12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, double a8, double a9, double a10, double a11, int16x4_t a12)
{
  int64x2_t v13 = *(int64x2_t *)((char *)a3 + a4);
  int8x16_t v14 = (int8x16_t)vzip1q_s64(*a3, v13);
  int16x8_t v15 = (int16x8_t)vzip2q_s64(*a3, v13);
  uint64_t v16 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v17 = *v16;
  int64x2_t v18 = *(int64x2_t *)((char *)v16 + a4);
  int16x8_t v19 = (int16x8_t)vzip1q_s64(*v16, v18);
  int16x8_t v20 = (int16x8_t)vzip2q_s64(*v16, v18);
  int8x16_t v21 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v14.i8, 0);
  int8x16_t v22 = (int8x16_t)vsubq_s16((int16x8_t)v14, (int16x8_t)v21);
  int16x8_t v23 = vsubq_s16(v15, (int16x8_t)v21);
  int16x8_t v24 = vsubq_s16(v19, (int16x8_t)v21);
  int8x16_t v25 = (int8x16_t)vsubq_s16(v20, (int16x8_t)v21);
  v17.i16[0] = vmaxvq_s16((int16x8_t)v22);
  v18.i16[0] = vminvq_s16((int16x8_t)v22);
  int16x8_t v26 = vdupq_lane_s16(*(int16x4_t *)v17.i8, 0);
  int16x8_t v27 = vdupq_lane_s16(*(int16x4_t *)v18.i8, 0);
  v28.i64[0] = 0x8000800080008000;
  v28.i64[1] = 0x8000800080008000;
  int16x8_t v29 = vmaxq_s16(v26, v28);
  v30.i64[0] = 0x8000800080008000;
  v30.i64[1] = 0x8000800080008000;
  int16x8_t v31 = vminq_s16(v27, v30);
  int16x8_t v32 = vzip1q_s16(v26, v27);
  int8x16_t v33 = (int8x16_t)vceqzq_s16(v32);
  v34.i64[0] = 0x10001000100010;
  v34.i64[1] = 0x10001000100010;
  int16x8_t v35 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v32)), v33);
  v33.i16[0] = vmaxvq_s16(v23);
  a12.i16[0] = vminvq_s16(v23);
  int16x8_t v36 = vdupq_lane_s16(*(int16x4_t *)v33.i8, 0);
  int16x8_t v37 = vdupq_lane_s16(a12, 0);
  int16x8_t v38 = vpmaxq_s16(v35, v35);
  int16x8_t v39 = vmaxq_s16(v29, v36);
  int16x8_t v40 = vminq_s16(v31, v37);
  int16x8_t v41 = vzip1q_s16(v36, v37);
  int16x8_t v42 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v41)), (int8x16_t)vceqzq_s16(v41));
  int16x8_t v43 = vpmaxq_s16(v42, v42);
  v42.i16[0] = vmaxvq_s16(v24);
  int16x8_t v44 = vdupq_lane_s16(*(int16x4_t *)v42.i8, 0);
  v36.i16[0] = vminvq_s16(v24);
  int16x8_t v45 = vdupq_lane_s16(*(int16x4_t *)v36.i8, 0);
  int16x8_t v46 = vmaxq_s16(v39, v44);
  int16x8_t v47 = vminq_s16(v40, v45);
  int16x8_t v48 = vzip1q_s16(v44, v45);
  int8x16_t v49 = (int8x16_t)vceqzq_s16(v48);
  int16x8_t v50 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v48)), v49);
  int16x8_t v51 = vpmaxq_s16(v50, v50);
  v49.i16[0] = vmaxvq_s16((int16x8_t)v25);
  v45.i16[0] = vminvq_s16((int16x8_t)v25);
  int16x8_t v52 = vdupq_lane_s16(*(int16x4_t *)v49.i8, 0);
  int16x8_t v53 = vdupq_lane_s16(*(int16x4_t *)v45.i8, 0);
  int16x8_t v54 = vmaxq_s16(v46, v52);
  int16x8_t v55 = vminq_s16(v47, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v34, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int16x8_t v58 = vpmaxq_s16(v57, v57);
  int8x16_t v59 = (int8x16_t)vmaxq_s16(vmaxq_s16(v38, v43), vmaxq_s16(v51, v58));
  int16x8_t v60 = vclzq_s16(vsubq_s16(v54, v55));
  int8x16_t v61 = (int8x16_t)vsubq_s16(v34, v60);
  int8x16_t v62 = (int8x16_t)vcgtq_s16((int16x8_t)v59, (int16x8_t)v61);
  int8x16_t v63 = vbslq_s8(v62, v61, v59);
  if (vmaxvq_s16((int16x8_t)v63))
  {
    char v64 = 0;
    unint64_t v65 = 0;
    v66.i64[0] = -1;
    v66.i64[1] = -1;
    v67.i64[0] = 0xF000F000F000FLL;
    v67.i64[1] = 0xF000F000F000FLL;
    int8x16_t v68 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v66, vsubq_s16(v67, v60)), v55), v62);
    v69.i64[0] = 0x8000800080008;
    v69.i64[1] = 0x8000800080008;
    v66.i64[0] = 0x3000300030003;
    v66.i64[1] = 0x3000300030003;
    int16x8_t v70 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v38), v66), (int16x8_t)0);
    int16x8_t v71 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v43), v66), (int16x8_t)0);
    int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v51), v66), (int16x8_t)0);
    int8x16_t v73 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v63, v58), v66), (int16x8_t)0);
    int8x16_t v74 = (int8x16_t)vsubq_s16((int16x8_t)v63, v70);
    int8x16_t v75 = (int8x16_t)vsubq_s16((int16x8_t)v63, v71);
    int8x16_t v76 = (int8x16_t)vsubq_s16((int16x8_t)v63, v72);
    int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v73);
    int8x16_t v78 = (int8x16_t)vceqq_s16(vaddq_s16((int16x8_t)v73, v72), vnegq_s16(vaddq_s16(v70, v71)));
    v73.i64[0] = 0x4000400040004;
    v73.i64[1] = 0x4000400040004;
    int8x16_t v79 = vbicq_s8(v73, v78);
    int8x16_t v80 = vorrq_s8(v79, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v63), (int8x16_t)v66), vandq_s8(v62, v69)));
    if (a5 >= 2 && a6 >= 2)
    {
      int16x8_t v367 = v19;
      int16x8_t v368 = v20;
      int8x16_t v366 = v68;
      v81.i32[0] = v14.u16[2];
      v81.i32[1] = v14.u16[1];
      int32x2_t v82 = vshl_n_s32(vsub_s32(v81, vdup_n_s32(v14.u16[0])), 0x18uLL);
      int v83 = v82.i32[1] >> 24;
      int16x4_t v84 = (int16x4_t)vshl_s32(v82, (int32x2_t)0xFFFFFFEAFFFFFFE9);
      unsigned __int32 v85 = v82.i32[0];
      v86.i64[0] = 0xFFFFFFFF00000000;
      v86.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v87 = vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v82.i32[0] >> 24), v86), vdupq_n_s16(v82.i32[1] >> 24), (int16x8_t)xmmword_242EA76B0);
      int16x8_t v88 = vsubq_s16((int16x8_t)v22, v87);
      int8x16_t v369 = (int8x16_t)v23;
      int8x16_t v89 = (int8x16_t)vsubq_s16(vaddq_s16(vdupq_n_s16(-v84.i32[0]), v23), v87);
      int8x16_t v90 = (int8x16_t)vsubq_s16(vaddq_s16(vdupq_n_s16(-v84.i32[1]), v24), v87);
      int16x8_t v91 = vaddq_s16(vdupq_n_s16(-v84.i32[0] - v84.i32[1]), (int16x8_t)v25);
      int8x16_t v92 = (int8x16_t)vsubq_s16(v91, v87);
      v91.i16[0] = vmaxvq_s16(v88);
      int8x16_t v364 = (int8x16_t)v88;
      v84.i16[0] = vminvq_s16(v88);
      int16x8_t v93 = vdupq_lane_s16(*(int16x4_t *)v91.i8, 0);
      int16x8_t v94 = vdupq_lane_s16(v84, 0);
      v88.i64[0] = 0x8000800080008000;
      v88.i64[1] = 0x8000800080008000;
      int16x8_t v95 = vmaxq_s16(v93, v88);
      v88.i64[0] = 0x8000800080008000;
      v88.i64[1] = 0x8000800080008000;
      int16x8_t v96 = vminq_s16(v94, v88);
      int16x8_t v97 = vzip1q_s16(v93, v94);
      int8x16_t v98 = (int8x16_t)vceqzq_s16(v97);
      v99.i64[0] = 0x10001000100010;
      v99.i64[1] = 0x10001000100010;
      int16x8_t v100 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v97)), v98);
      int16x8_t v101 = vpmaxq_s16(v100, v100);
      v98.i16[0] = vmaxvq_s16((int16x8_t)v89);
      v12.i16[0] = vminvq_s16((int16x8_t)v89);
      int16x8_t v102 = vdupq_lane_s16(*(int16x4_t *)v98.i8, 0);
      int16x8_t v103 = vdupq_lane_s16(v12, 0);
      int16x8_t v104 = vmaxq_s16(v95, v102);
      int16x8_t v105 = vminq_s16(v96, v103);
      int16x8_t v106 = vzip1q_s16(v102, v103);
      int8x16_t v107 = (int8x16_t)vceqzq_s16(v106);
      int16x8_t v108 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v106)), v107);
      v107.i16[0] = vmaxvq_s16((int16x8_t)v90);
      int8x16_t v109 = (int8x16_t)v24;
      v24.i16[0] = vminvq_s16((int16x8_t)v90);
      int16x8_t v110 = vdupq_lane_s16(*(int16x4_t *)v107.i8, 0);
      int16x8_t v111 = vdupq_lane_s16(*(int16x4_t *)v24.i8, 0);
      int16x8_t v112 = vpmaxq_s16(v108, v108);
      int16x8_t v113 = vmaxq_s16(v104, v110);
      int16x8_t v114 = vminq_s16(v105, v111);
      int16x8_t v115 = vzip1q_s16(v110, v111);
      int8x16_t v116 = (int8x16_t)vceqzq_s16(v115);
      int16x8_t v117 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v115)), v116);
      int8x16_t v118 = v77;
      int16x8_t v119 = vpmaxq_s16(v117, v117);
      v117.i16[0] = vmaxvq_s16((int16x8_t)v92);
      int16x8_t v120 = vdupq_lane_s16(*(int16x4_t *)v117.i8, 0);
      v116.i16[0] = vminvq_s16((int16x8_t)v92);
      int16x8_t v121 = vdupq_lane_s16(*(int16x4_t *)v116.i8, 0);
      int16x8_t v122 = vminq_s16(v114, v121);
      int16x8_t v123 = vzip1q_s16(v120, v121);
      int16x8_t v124 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v123)), (int8x16_t)vceqzq_s16(v123));
      int16x8_t v125 = vpmaxq_s16(v124, v124);
      int8x16_t v126 = (int8x16_t)vmaxq_s16(vmaxq_s16(v101, v112), vmaxq_s16(v119, v125));
      int16x8_t v127 = vclzq_s16(vsubq_s16(vmaxq_s16(v113, v120), v122));
      int8x16_t v128 = (int8x16_t)vsubq_s16((int16x8_t)v99, v127);
      int8x16_t v129 = (int8x16_t)vcgtq_s16((int16x8_t)v126, (int16x8_t)v128);
      int16x8_t v130 = (int16x8_t)vbslq_s8(v129, v128, v126);
      v126.i64[0] = 0x1000100010001;
      v126.i64[1] = 0x1000100010001;
      int8x16_t v131 = v74;
      int8x16_t v132 = (int8x16_t)vmaxq_s16(v130, (int16x8_t)v126);
      v126.i64[0] = 0x3000300030003;
      v126.i64[1] = 0x3000300030003;
      int8x16_t v133 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v101), (int16x8_t)v126), (int16x8_t)0);
      int16x8_t v134 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v112), (int16x8_t)v126), (int16x8_t)0);
      int16x8_t v135 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v119), (int16x8_t)v126), (int16x8_t)0);
      int16x8_t v136 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v132, v125), (int16x8_t)v126), (int16x8_t)0);
      int8x16_t v137 = (int8x16_t)vsubq_s16((int16x8_t)v132, (int16x8_t)v133);
      int8x16_t v138 = (int8x16_t)vsubq_s16((int16x8_t)v132, v134);
      int8x16_t v139 = (int8x16_t)vsubq_s16((int16x8_t)v132, v135);
      int8x16_t v140 = (int8x16_t)vsubq_s16((int16x8_t)v132, v136);
      int8x16_t v141 = (int8x16_t)vceqq_s16(vaddq_s16(v136, v135), vnegq_s16(vaddq_s16((int16x8_t)v133, v134)));
      v133.i64[0] = 0x4000400040004;
      v133.i64[1] = 0x4000400040004;
      int8x16_t v142 = vbicq_s8(v133, v141);
      v126.i64[0] = 0x7000700070007;
      v126.i64[1] = 0x7000700070007;
      int16x8_t v143 = (int16x8_t)vandq_s8(v61, v62);
      int16x8_t v144 = vaddq_s16((int16x8_t)v79, (int16x8_t)v79);
      int16x8_t v145 = vmulq_s16((int16x8_t)v131, (int16x8_t)v126);
      int16x8_t v146 = vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v76, (int16x8_t)v75), (int16x8_t)v118), 3uLL);
      int8x16_t v147 = (int8x16_t)vaddq_s16(vaddq_s16(vaddq_s16(v145, v143), v146), v144);
      int16x8_t v148 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16((int16x8_t)v147, vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbslq_s8(v129, (int8x16_t)vaddq_s16((int16x8_t)v132, (int16x8_t)v99), v99), (int16x8_t)v137, (int16x8_t)v126), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v139, (int16x8_t)v138), (int16x8_t)v140), 3uLL)), vaddq_s16((int16x8_t)v142, (int16x8_t)v142))), 0);
      v141.i16[0] = vaddvq_s16(v148);
      int v149 = v141.u16[0];
      unint64_t v65 = v83 | HIWORD(v85);
      if (v141.i16[0])
      {
        v150.i64[0] = 0x2000200020002;
        v150.i64[1] = 0x2000200020002;
        v151.i64[0] = 0xA000A000A000ALL;
        v151.i64[1] = 0xA000A000A000ALL;
        int8x16_t v152 = vbslq_s8(v129, v151, v150);
        v151.i64[0] = -1;
        v151.i64[1] = -1;
        int8x16_t v153 = vorrq_s8(v142, v152);
        v154.i64[0] = 0xF000F000F000FLL;
        v154.i64[1] = 0xF000F000F000FLL;
        int8x16_t v155 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v151, vsubq_s16(v154, v127)), v122), v129);
        int8x16_t v147 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v148, 0xFuLL));
        v144.i64[0] = v364.i64[0];
        int8x16_t v362 = vbslq_s8(v147, v364, v22);
        int8x16_t v369 = vbslq_s8(v147, v89, v369);
        int8x16_t v363 = vbslq_s8(v147, v90, v109);
        int8x16_t v365 = vbslq_s8(v147, v92, v25);
        int8x16_t v131 = vbslq_s8(v147, v137, v131);
        int8x16_t v75 = vbslq_s8(v147, v138, v75);
        int8x16_t v76 = vbslq_s8(v147, v139, v76);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v147, v140, v118);
        int8x16_t v68 = vbslq_s8(v147, v155, v366);
        int8x16_t v63 = vbslq_s8(v147, v132, v63);
        int8x16_t v80 = vbslq_s8(v147, v153, v80);
        v157.i64[0] = 0x7000700070007;
        v157.i64[1] = 0x7000700070007;
        int16x8_t v145 = vmulq_s16((int16x8_t)v131, v157);
        int16x8_t v146 = vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v76, (int16x8_t)v75), v156), 3uLL);
        int8x16_t v77 = (int8x16_t)v156;
      }
      else
      {
        int8x16_t v362 = v22;
        int8x16_t v363 = v109;
        int8x16_t v365 = v25;
        int8x16_t v77 = v118;
        int8x16_t v68 = v366;
      }
      int8x16_t v74 = v131;
      int16x8_t v159 = vsubq_s16((int16x8_t)v14, (int16x8_t)vqtbl1q_s8(v14, (int8x16_t)xmmword_242EA7520));
      int8x16_t v160 = (int8x16_t)v15;
      v160.i16[7] = v14.i16[7];
      int8x16_t v161 = (int8x16_t)vsubq_s16(v15, (int16x8_t)vqtbl1q_s8(v160, (int8x16_t)xmmword_242EA7530));
      int8x16_t v162 = (int8x16_t)v367;
      v162.i16[7] = v14.i16[7];
      int8x16_t v163 = (int8x16_t)vsubq_s16(v367, (int16x8_t)vqtbl1q_s8(v162, (int8x16_t)xmmword_242EA7540));
      int8x16_t v164 = (int8x16_t)v368;
      v164.i16[7] = v14.i16[7];
      int16x4_t v165 = (int16x4_t)0x100010001000F0ELL;
      int8x16_t v166 = (int8x16_t)v159;
      v166.i16[0] = v159.i16[7];
      v166.i16[7] = v159.i16[0];
      v159.i16[0] = vmaxvq_s16((int16x8_t)v166);
      v165.i16[0] = vminvq_s16((int16x8_t)v166);
      int16x8_t v167 = vdupq_lane_s16(*(int16x4_t *)v159.i8, 0);
      int16x8_t v168 = vdupq_lane_s16(v165, 0);
      int8x16_t v169 = (int8x16_t)vsubq_s16(v368, (int16x8_t)vqtbl1q_s8(v164, (int8x16_t)xmmword_242EA7550));
      v164.i64[0] = 0x8000800080008000;
      v164.i64[1] = 0x8000800080008000;
      int16x8_t v170 = vmaxq_s16(v167, (int16x8_t)v164);
      v171.i64[0] = 0x8000800080008000;
      v171.i64[1] = 0x8000800080008000;
      int16x8_t v172 = vminq_s16(v168, v171);
      int16x8_t v173 = vzip1q_s16(v167, v168);
      int8x16_t v174 = (int8x16_t)vceqzq_s16(v173);
      int16x8_t v175 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v173)), v174);
      int16x8_t v176 = vpmaxq_s16(v175, v175);
      v174.i16[0] = vmaxvq_s16((int16x8_t)v161);
      int16x8_t v177 = vdupq_lane_s16(*(int16x4_t *)v174.i8, 0);
      v147.i16[0] = vminvq_s16((int16x8_t)v161);
      int16x8_t v178 = vdupq_lane_s16(*(int16x4_t *)v147.i8, 0);
      int16x8_t v179 = vmaxq_s16(v170, v177);
      int16x8_t v180 = vminq_s16(v172, v178);
      int16x8_t v181 = vzip1q_s16(v177, v178);
      int8x16_t v182 = (int8x16_t)vceqzq_s16(v181);
      int16x8_t v183 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v181)), v182);
      int16x8_t v184 = vpmaxq_s16(v183, v183);
      v182.i16[0] = vmaxvq_s16((int16x8_t)v163);
      v144.i16[0] = vminvq_s16((int16x8_t)v163);
      int16x8_t v185 = vdupq_lane_s16(*(int16x4_t *)v182.i8, 0);
      int16x8_t v186 = vdupq_lane_s16(*(int16x4_t *)v144.i8, 0);
      int16x8_t v187 = vmaxq_s16(v179, v185);
      int16x8_t v188 = vminq_s16(v180, v186);
      int16x8_t v189 = vzip1q_s16(v185, v186);
      int8x16_t v190 = (int8x16_t)vceqzq_s16(v189);
      int16x8_t v191 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v189)), v190);
      v190.i16[0] = vmaxvq_s16((int16x8_t)v169);
      v129.i16[0] = vminvq_s16((int16x8_t)v169);
      int16x8_t v192 = vdupq_lane_s16(*(int16x4_t *)v190.i8, 0);
      int16x8_t v193 = vdupq_lane_s16(*(int16x4_t *)v129.i8, 0);
      int16x8_t v194 = vpmaxq_s16(v191, v191);
      int16x8_t v195 = vmaxq_s16(v187, v192);
      int16x8_t v196 = vminq_s16(v188, v193);
      int16x8_t v197 = vzip1q_s16(v192, v193);
      int16x8_t v198 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v99, vclsq_s16(v197)), (int8x16_t)vceqzq_s16(v197));
      int16x8_t v199 = vpmaxq_s16(v198, v198);
      int8x16_t v200 = (int8x16_t)vmaxq_s16(vmaxq_s16(v176, v184), vmaxq_s16(v194, v199));
      int16x8_t v201 = vclzq_s16(vsubq_s16(v195, v196));
      int8x16_t v202 = (int8x16_t)vsubq_s16((int16x8_t)v99, v201);
      int8x16_t v203 = (int8x16_t)vcgtq_s16((int16x8_t)v200, (int16x8_t)v202);
      int8x16_t v204 = vbslq_s8(v203, v202, v200);
      v205.i64[0] = 0x3000300030003;
      v205.i64[1] = 0x3000300030003;
      int16x8_t v206 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v176), v205), (int16x8_t)0);
      int8x16_t v207 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v184), v205), (int16x8_t)0);
      int16x8_t v208 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v194), v205), (int16x8_t)0);
      int16x8_t v209 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v204, v199), v205), (int16x8_t)0);
      int8x16_t v210 = (int8x16_t)vsubq_s16((int16x8_t)v204, v206);
      int8x16_t v211 = (int8x16_t)vsubq_s16((int16x8_t)v204, (int16x8_t)v207);
      int8x16_t v212 = (int8x16_t)vsubq_s16((int16x8_t)v204, v208);
      int8x16_t v213 = (int8x16_t)vsubq_s16((int16x8_t)v204, v209);
      int8x16_t v214 = (int8x16_t)vceqq_s16(vaddq_s16(v209, v208), vnegq_s16(vaddq_s16(v206, (int16x8_t)v207)));
      v207.i64[0] = 0x4000400040004;
      v207.i64[1] = 0x4000400040004;
      int8x16_t v215 = vbicq_s8(v207, v214);
      v208.i64[0] = 0x7000700070007;
      v208.i64[1] = 0x7000700070007;
      v207.i64[0] = 0x8000800080008;
      v207.i64[1] = 0x8000800080008;
      v216.i64[0] = 0x2000200020002;
      v216.i64[1] = 0x2000200020002;
      int16x8_t v217 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v63, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v80, v207))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v80, (int16x8_t)v80), v207)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v80, (int8x16_t)v205), (int16x8_t)v216), v99), v145)), v146), vaddq_s16(
                                          vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v202, v203), (int16x8_t)v210, v208), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v212, (int16x8_t)v211), (int16x8_t)v213), 3uLL)), vaddq_s16((int16x8_t)v215, (int16x8_t)v215))), 0);
      v202.i16[0] = vaddvq_s16(v217);
      int v218 = v202.u16[0];
      if (v202.i16[0])
      {
        int8x16_t v219 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v204), v216);
        v220.i64[0] = 0x9000900090009;
        v220.i64[1] = 0x9000900090009;
        v221.i64[0] = -1;
        v221.i64[1] = -1;
        int8x16_t v222 = vorrq_s8(vorrq_s8(v219, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v203, v220), (int16x8_t)vmvnq_s8(v203))), v215);
        v219.i64[0] = 0xF000F000F000FLL;
        v219.i64[1] = 0xF000F000F000FLL;
        int8x16_t v223 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v221, vsubq_s16((int16x8_t)v219, v201)), v196), v203);
        int8x16_t v224 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v217, 0xFuLL));
        v21.i16[0] = vbslq_s8(v224, vextq_s8(v14, v14, 0xEuLL), v21).u16[0];
        int8x16_t v22 = vbslq_s8(v224, v166, v362);
        int16x8_t v23 = (int16x8_t)vbslq_s8(v224, v161, v369);
        int16x8_t v24 = (int16x8_t)vbslq_s8(v224, v163, v363);
        int8x16_t v25 = vbslq_s8(v224, v169, v365);
        int8x16_t v74 = vbslq_s8(v224, v210, v74);
        int8x16_t v75 = vbslq_s8(v224, v211, v75);
        int8x16_t v76 = vbslq_s8(v224, v212, v76);
        int8x16_t v77 = vbslq_s8(v224, v213, v77);
        int8x16_t v68 = vbslq_s8(v224, v223, v68);
        int8x16_t v63 = vbslq_s8(v224, v204, v63);
        int8x16_t v80 = vbslq_s8(v224, v222, v80);
      }
      else
      {
        int16x8_t v24 = (int16x8_t)v363;
        int8x16_t v25 = v365;
        int16x8_t v23 = (int16x8_t)v369;
        int8x16_t v22 = v362;
      }
      if (v149) {
        BOOL v225 = v218 == 0;
      }
      else {
        BOOL v225 = 0;
      }
      char v64 = v225;
    }
    v226.i64[0] = 0x8000800080008;
    v226.i64[1] = 0x8000800080008;
    int16x8_t v227 = (int16x8_t)vandq_s8(v80, v226);
    v228.i64[0] = 0x3000300030003;
    v228.i64[1] = 0x3000300030003;
    v229.i64[0] = 0x2000200020002;
    v229.i64[1] = 0x2000200020002;
    int8x16_t v230 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v80, v228), v229);
    v229.i64[0] = 0x10001000100010;
    v229.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(7 * v74.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v76, vaddq_s16((int16x8_t)v75, (int16x8_t)v77)).u16[0]
                                    + ((2 * v80.i16[0]) & 8)
                                    + vbicq_s8(v63, (int8x16_t)vceqzq_s16(v227)).u16[0]
                                    + vandq_s8(v230, (int8x16_t)v229).u16[0])
                          - 235) <= 0xFFFFFFFFFFFFFEF7)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, (uint64_t)a3, a4, a5, a6, a7);
      return 32;
    }
    else
    {
      int16x8_t v231 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v232 = 8 * (a1 & 7);
      if (v232) {
        uint64_t v233 = *v231 & ~(-1 << v232);
      }
      else {
        uint64_t v233 = 0;
      }
      if (v63.i16[0]) {
        uint64_t v234 = (16 * v63.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v234 = 0;
      }
      *a2 = v80.i8[0] << 6;
      unint64_t v235 = (v234 & 0xFFFFFFFFFF0000F0 | ((unint64_t)v21.u16[0] << 8) | v80.i8[0] & 0xF) >> 2;
      unint64_t v236 = (v235 << v232) | v233;
      if (v232 >= 0x2A)
      {
        *int16x8_t v231 = v236;
        unint64_t v236 = v235 >> (-8 * (a1 & 7u));
      }
      unint64_t v237 = v232 + 22;
      int8x16_t v238 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v74);
      int8x16_t v239 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v75);
      int8x16_t v240 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v76);
      int8x16_t v241 = (int8x16_t)vsubq_s16((int16x8_t)v63, (int16x8_t)v77);
      *(uint8x8_t *)v238.i8 = vqmovn_u16((uint16x8_t)v238);
      *(uint8x8_t *)v239.i8 = vqmovn_u16((uint16x8_t)v239);
      *(uint8x8_t *)v240.i8 = vqmovn_u16((uint16x8_t)v240);
      *(uint8x8_t *)v241.i8 = vqmovn_u16((uint16x8_t)v241);
      v238.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v238, v239), (int16x8_t)vzip1q_s8(v240, v241)).u32[0];
      v240.i64[0] = 0x202020202020202;
      v240.i64[1] = 0x202020202020202;
      int8x16_t v242 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v80.i8, (int8x8_t)0x4000400040004)))), v240);
      v240.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v240.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v241.i64[0] = -1;
      v241.i64[1] = -1;
      uint8x16_t v243 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v241, (uint8x16_t)vorrq_s8(v242, v240)), (int8x16_t)v238.u32[0]);
      int16x8_t v244 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v242.i8);
      uint16x8_t v245 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v243.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v244)), (int16x8_t)vmovl_high_u8(v243));
      uint16x8_t v246 = (uint16x8_t)vpaddq_s16(v244, (int16x8_t)vmovl_high_u8((uint8x16_t)v242));
      int32x4_t v247 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v246.i8);
      int32x4_t v248 = (int32x4_t)vmovl_high_u16(v246);
      int32x4_t v249 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v245.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v247)), (int32x4_t)vshlq_u32(vmovl_high_u16(v245), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v248)));
      int32x4_t v250 = vpaddq_s32(v247, v248);
      v251.i64[0] = v249.u32[0];
      v251.i64[1] = v249.u32[1];
      uint64x2_t v252 = (uint64x2_t)v251;
      v251.i64[0] = v249.u32[2];
      v251.i64[1] = v249.u32[3];
      uint64x2_t v253 = (uint64x2_t)v251;
      v251.i64[0] = v250.u32[0];
      v251.i64[1] = v250.u32[1];
      int64x2_t v254 = v251;
      v251.i64[0] = v250.u32[2];
      v251.i64[1] = v250.u32[3];
      int64x2_t v255 = vpaddq_s64((int64x2_t)vshlq_u64(v252, (uint64x2_t)vzip1q_s64((int64x2_t)0, v254)), (int64x2_t)vshlq_u64(v253, (uint64x2_t)vzip1q_s64((int64x2_t)0, v251)));
      int64x2_t v256 = vpaddq_s64(v254, v251);
      uint64_t v257 = (v232 + 22) & 0x3E;
      unint64_t v258 = (v255.i64[0] << v257) | v236;
      if ((unint64_t)(v256.i64[0] + v257) >= 0x40)
      {
        *(void *)((char *)v231 + ((v237 >> 3) & 8)) = v258;
        unint64_t v258 = (unint64_t)v255.i64[0] >> -(char)v257;
      }
      unint64_t v259 = v256.i64[0] + v237;
      unint64_t v260 = v258 | (v255.i64[1] << v259);
      if ((v259 & 0x3F) + v256.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v259 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v260;
        unint64_t v260 = (unint64_t)v255.i64[1] >> -(v259 & 0x3F);
        if ((v259 & 0x3F) == 0) {
          unint64_t v260 = 0;
        }
      }
      int8x16_t v261 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v74);
      unint64_t v262 = v259 + v256.i64[1];
      v263.i64[0] = -1;
      v263.i64[1] = -1;
      int16x8_t v264 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v227, v227), (int8x16_t)0, 0xEuLL), v63);
      v265.i64[0] = 0xF000F000F000FLL;
      v265.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v266 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v263, (uint16x8_t)vaddq_s16(v264, v265)), v68);
      int32x4_t v267 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v264.i8);
      int32x4_t v268 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v266.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v267)), (int32x4_t)vmovl_high_u16(v266));
      int32x4_t v269 = vpaddq_s32(v267, (int32x4_t)vmovl_high_u16((uint16x8_t)v264));
      v270.i64[0] = v268.u32[0];
      v270.i64[1] = v268.u32[1];
      uint64x2_t v271 = (uint64x2_t)v270;
      v270.i64[0] = v268.u32[2];
      v270.i64[1] = v268.u32[3];
      uint64x2_t v272 = (uint64x2_t)v270;
      v270.i64[0] = v269.u32[0];
      v270.i64[1] = v269.u32[1];
      int64x2_t v273 = v270;
      v270.i64[0] = v269.u32[2];
      v270.i64[1] = v269.u32[3];
      int64x2_t v274 = vpaddq_s64((int64x2_t)vshlq_u64(v271, (uint64x2_t)vzip1q_s64((int64x2_t)0, v273)), (int64x2_t)vshlq_u64(v272, (uint64x2_t)vzip1q_s64((int64x2_t)0, v270)));
      int64x2_t v275 = vpaddq_s64(v273, v270);
      unint64_t v276 = (v274.i64[0] << v262) | v260;
      if (v275.i64[0] + (v262 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v262 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v276;
        unint64_t v276 = (unint64_t)v274.i64[0] >> -(v262 & 0x3F);
        if ((v262 & 0x3F) == 0) {
          unint64_t v276 = 0;
        }
      }
      int16x8_t v277 = (int16x8_t)vandq_s8(v68, v261);
      uint64_t v278 = v275.i64[1];
      unint64_t v279 = v275.i64[0] + v262;
      unint64_t v280 = v276 | (v274.i64[1] << v279);
      if ((v279 & 0x3F) + v275.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v279 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
        unint64_t v280 = (unint64_t)v274.i64[1] >> -(v279 & 0x3F);
        if ((v279 & 0x3F) == 0) {
          unint64_t v280 = 0;
        }
      }
      int8x16_t v281 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v75);
      int8x16_t v282 = (int8x16_t)vaddq_s16(v277, (int16x8_t)v22);
      unint64_t v283 = v279 + v278;
      if (v64)
      {
        v280 |= v65 << v283;
        if ((v283 & 0x3F) >= 0x30)
        {
          *(void *)((char *)v231 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v280;
          unint64_t v280 = v65 >> -(v283 & 0x3F);
        }
        v283 += 16;
      }
      int16x8_t v284 = (int16x8_t)vandq_s8(v68, v281);
      int16x8_t v285 = (int16x8_t)vextq_s8((int8x16_t)0, v74, 0xEuLL);
      v286.i64[0] = 0xF000F000F000FLL;
      v286.i64[1] = 0xF000F000F000FLL;
      v287.i64[0] = -1;
      v287.i64[1] = -1;
      uint16x8_t v288 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v287, (uint16x8_t)vaddq_s16(v285, v286)), v282);
      int32x4_t v289 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v285.i8);
      int32x4_t v290 = (int32x4_t)vmovl_high_u16((uint16x8_t)v285);
      int32x4_t v291 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v288.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v289)), (int32x4_t)vshlq_u32(vmovl_high_u16(v288), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v290)));
      int32x4_t v292 = vpaddq_s32(v289, v290);
      v293.i64[0] = v291.u32[0];
      v293.i64[1] = v291.u32[1];
      uint64x2_t v294 = (uint64x2_t)v293;
      v293.i64[0] = v291.u32[2];
      v293.i64[1] = v291.u32[3];
      uint64x2_t v295 = (uint64x2_t)v293;
      v293.i64[0] = v292.u32[0];
      v293.i64[1] = v292.u32[1];
      int64x2_t v296 = v293;
      v293.i64[0] = v292.u32[2];
      v293.i64[1] = v292.u32[3];
      int64x2_t v297 = vpaddq_s64((int64x2_t)vshlq_u64(v294, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)), (int64x2_t)vshlq_u64(v295, (uint64x2_t)vzip1q_s64((int64x2_t)0, v293)));
      int64x2_t v298 = vpaddq_s64(v296, v293);
      unint64_t v299 = (v297.i64[0] << v283) | v280;
      if (v298.i64[0] + (v283 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v283 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v299;
        unint64_t v299 = (unint64_t)v297.i64[0] >> -(v283 & 0x3F);
        if ((v283 & 0x3F) == 0) {
          unint64_t v299 = 0;
        }
      }
      int8x16_t v300 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v76);
      int8x16_t v301 = (int8x16_t)vaddq_s16(v23, v284);
      unint64_t v302 = v298.i64[0] + v283;
      uint64_t v303 = (v298.i64[0] + v283) & 0x3F;
      unint64_t v304 = v299 | (v297.i64[1] << v302);
      if ((v302 & 0x3F) + v298.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v302 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v304;
        unint64_t v304 = (unint64_t)v297.i64[1] >> -(char)v303;
        if (!v303) {
          unint64_t v304 = 0;
        }
      }
      int16x8_t v305 = (int16x8_t)vandq_s8(v68, v300);
      unint64_t v306 = v302 + v298.i64[1];
      v307.i64[0] = 0xF000F000F000FLL;
      v307.i64[1] = 0xF000F000F000FLL;
      v308.i64[0] = -1;
      v308.i64[1] = -1;
      uint16x8_t v309 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v308, (uint16x8_t)vaddq_s16((int16x8_t)v75, v307)), v301);
      int32x4_t v310 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v75.i8);
      int32x4_t v311 = (int32x4_t)vmovl_high_u16((uint16x8_t)v75);
      int32x4_t v312 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v309.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v310)), (int32x4_t)vshlq_u32(vmovl_high_u16(v309), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v311)));
      int32x4_t v313 = vpaddq_s32(v310, v311);
      v314.i64[0] = v312.u32[0];
      v314.i64[1] = v312.u32[1];
      uint64x2_t v315 = (uint64x2_t)v314;
      v314.i64[0] = v312.u32[2];
      v314.i64[1] = v312.u32[3];
      uint64x2_t v316 = (uint64x2_t)v314;
      v314.i64[0] = v313.u32[0];
      v314.i64[1] = v313.u32[1];
      int64x2_t v317 = v314;
      v314.i64[0] = v313.u32[2];
      v314.i64[1] = v313.u32[3];
      int64x2_t v318 = vpaddq_s64((int64x2_t)vshlq_u64(v315, (uint64x2_t)vzip1q_s64((int64x2_t)0, v317)), (int64x2_t)vshlq_u64(v316, (uint64x2_t)vzip1q_s64((int64x2_t)0, v314)));
      int64x2_t v319 = vpaddq_s64(v317, v314);
      unint64_t v320 = (v318.i64[0] << v306) | v304;
      if (v319.i64[0] + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v320;
        unint64_t v320 = (unint64_t)v318.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v320 = 0;
        }
      }
      int8x16_t v321 = (int8x16_t)vceqq_s16((int16x8_t)v63, (int16x8_t)v77);
      int8x16_t v322 = (int8x16_t)vaddq_s16(v24, v305);
      unint64_t v323 = v319.i64[0] + v306;
      unint64_t v324 = v320 | (v318.i64[1] << v323);
      if ((v323 & 0x3F) + v319.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v323 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v324;
        unint64_t v324 = (unint64_t)v318.i64[1] >> -(v323 & 0x3F);
        if ((v323 & 0x3F) == 0) {
          unint64_t v324 = 0;
        }
      }
      int16x8_t v325 = (int16x8_t)vandq_s8(v68, v321);
      unint64_t v326 = v323 + v319.i64[1];
      v327.i64[0] = 0xF000F000F000FLL;
      v327.i64[1] = 0xF000F000F000FLL;
      v328.i64[0] = -1;
      v328.i64[1] = -1;
      uint16x8_t v329 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v328, (uint16x8_t)vaddq_s16((int16x8_t)v76, v327)), v322);
      int32x4_t v330 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v76.i8);
      int32x4_t v331 = (int32x4_t)vmovl_high_u16((uint16x8_t)v76);
      int32x4_t v332 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v329.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v330)), (int32x4_t)vshlq_u32(vmovl_high_u16(v329), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)));
      int32x4_t v333 = vpaddq_s32(v330, v331);
      v334.i64[0] = v332.u32[0];
      v334.i64[1] = v332.u32[1];
      uint64x2_t v335 = (uint64x2_t)v334;
      v334.i64[0] = v332.u32[2];
      v334.i64[1] = v332.u32[3];
      uint64x2_t v336 = (uint64x2_t)v334;
      v334.i64[0] = v333.u32[0];
      v334.i64[1] = v333.u32[1];
      int64x2_t v337 = v334;
      v334.i64[0] = v333.u32[2];
      v334.i64[1] = v333.u32[3];
      int64x2_t v338 = vpaddq_s64((int64x2_t)vshlq_u64(v335, (uint64x2_t)vzip1q_s64((int64x2_t)0, v337)), (int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v334)));
      int64x2_t v339 = vpaddq_s64(v337, v334);
      unint64_t v340 = (v338.i64[0] << v326) | v324;
      if (v339.i64[0] + (v326 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v231 + ((v326 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v340;
        unint64_t v340 = (unint64_t)v338.i64[0] >> -(v326 & 0x3F);
        if ((v326 & 0x3F) == 0) {
          unint64_t v340 = 0;
        }
      }
      int8x16_t v341 = (int8x16_t)vaddq_s16((int16x8_t)v25, v325);
      unint64_t v342 = v339.i64[0] + v326;
      unint64_t v343 = v340 | (v338.i64[1] << v342);
      if ((v342 & 0x3F) + v339.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v343;
        unint64_t v343 = (unint64_t)v338.i64[1] >> -(v342 & 0x3F);
        if ((v342 & 0x3F) == 0) {
          unint64_t v343 = 0;
        }
      }
      unint64_t v344 = v342 + v339.i64[1];
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      v346.i64[0] = -1;
      v346.i64[1] = -1;
      uint16x8_t v347 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v346, (uint16x8_t)vaddq_s16((int16x8_t)v77, v345)), v341);
      int32x4_t v348 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8);
      int32x4_t v349 = (int32x4_t)vmovl_high_u16((uint16x8_t)v77);
      int32x4_t v350 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v347.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v348)), (int32x4_t)vshlq_u32(vmovl_high_u16(v347), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v349)));
      int32x4_t v351 = vpaddq_s32(v348, v349);
      v352.i64[0] = v350.u32[0];
      v352.i64[1] = v350.u32[1];
      uint64x2_t v353 = (uint64x2_t)v352;
      v352.i64[0] = v350.u32[2];
      v352.i64[1] = v350.u32[3];
      uint64x2_t v354 = (uint64x2_t)v352;
      v352.i64[0] = v351.u32[0];
      v352.i64[1] = v351.u32[1];
      int64x2_t v355 = v352;
      v352.i64[0] = v351.u32[2];
      v352.i64[1] = v351.u32[3];
      int64x2_t v356 = vpaddq_s64((int64x2_t)vshlq_u64(v353, (uint64x2_t)vzip1q_s64((int64x2_t)0, v355)), (int64x2_t)vshlq_u64(v354, (uint64x2_t)vzip1q_s64((int64x2_t)0, v352)));
      int64x2_t v357 = vpaddq_s64(v355, v352);
      unint64_t v358 = (v356.i64[0] << v344) | v343;
      if (v357.i64[0] + (v344 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v231 + ((v344 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v358;
        if ((v344 & 0x3F) != 0) {
          unint64_t v358 = (unint64_t)v356.i64[0] >> -(v344 & 0x3F);
        }
        else {
          unint64_t v358 = 0;
        }
      }
      unint64_t v359 = v357.i64[0] + v344;
      unint64_t v360 = v358 | (v356.i64[1] << v359);
      if ((v359 & 0x3F) + v357.i64[1] >= 0x40)
      {
        *(void *)((char *)v231 + ((v359 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
        unint64_t v360 = (unint64_t)v356.i64[1] >> -(v359 & 0x3F);
        if ((v359 & 0x3F) == 0) {
          unint64_t v360 = 0;
        }
      }
      unint64_t v361 = v359 + v357.i64[1];
      if ((v361 & 0x3F) != 0) {
        *(void *)((char *)v231 + ((v361 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
      }
      unint64_t result = (v361 - v232 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = a3->i16[0];
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v10 = a6;
  if (a5 > 3)
  {
    uint64_t v16 = a5 & 0xFC;
    uint64_t v17 = a5 - v16;
    if (a5 == v16)
    {
      unsigned __int8 v18 = 0;
      do
      {
        int16x8_t v19 = (char *)&v55 + 8 * v18 + 8;
        int16x8_t v20 = (const __int16 *)a3;
        uint64_t v21 = a5;
        do
        {
          int16x4x2_t v60 = vld2_s16(v20);
          v20 += 8;
          *(int16x4x2_t *)(v19 - 8) = v60;
          v19 += 8;
          v21 -= 4;
        }
        while (v21);
        ++v17;
        v18 += 2;
        a3 += a4;
      }
      while (v17 != a6);
    }
    else
    {
      unsigned __int8 v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = (2 * a5) & 0x1F8;
      do
      {
        uint64_t v25 = 8 * v22;
        int16x8_t v26 = (char *)&v55 + v25;
        int16x8_t v27 = (char *)&v55 + v25 + 8;
        int16x8_t v28 = (const __int16 *)a3;
        uint64_t v29 = a5 & 0xFC;
        do
        {
          int16x4x2_t v61 = vld2_s16(v28);
          v28 += 8;
          *(int16x4x2_t *)(v27 - 8) = v61;
          v27 += 8;
          v29 -= 4;
        }
        while (v29);
        uint64_t v30 = v24;
        uint64_t v31 = a5 - v16;
        do
        {
          int16x8_t v32 = (_WORD *)(a3 + 2 * v30);
          int8x16_t v33 = &v26[v30];
          *(_WORD *)int8x16_t v33 = *v32;
          *((_WORD *)v33 + 4) = v32[1];
          v30 += 2;
          --v31;
        }
        while (v31);
        ++v23;
        v22 += 2;
        a3 += a4;
      }
      while (v23 != v10);
    }
  }
  else
  {
    uint64_t v11 = 0;
    int16x4_t v12 = (_WORD *)(a3 + 6);
    do
    {
      *((_WORD *)&v55 + 8 * (v11 & 0x7F)) = *(v12 - 3);
      uint64_t v13 = (2 * v11) | 1u;
      *((_WORD *)&v55 + 4 * v13) = *(v12 - 2);
      if (a5 != 1)
      {
        int8x16_t v14 = &v55 + (v11 & 0x7F);
        *((_WORD *)v14 + 1) = *(v12 - 1);
        int16x8_t v15 = (char *)&v55 + 8 * v13;
        *((_WORD *)v15 + 1) = *v12;
        if (a5 != 2)
        {
          *((_WORD *)v14 + 2) = v12[1];
          *((_WORD *)v15 + 2) = v12[2];
        }
      }
      ++v11;
      int16x4_t v12 = (_WORD *)((char *)v12 + a4);
    }
    while (a6 != v11);
  }
  unsigned int v34 = 2 * (a5 & 0x7F);
  v50.i32[0] = (unsigned __int16)v55;
  v50.i32[1] = WORD4(v55);
  v50.i32[2] = WORD1(v55);
  v50.i32[3] = WORD5(v55);
  int v51 = (unsigned __int16)v56;
  int v52 = WORD4(v56);
  if (v34 >= 4) {
    unsigned int v35 = 4;
  }
  else {
    unsigned int v35 = 2 * (a5 & 0x7F);
  }
  if (v34 >= 4) {
    unsigned int v36 = v34 - 4;
  }
  else {
    unsigned int v36 = 0;
  }
  int v53 = WORD1(v56);
  int v54 = WORD5(v56);
  if (a6 >= 2) {
    unsigned int v37 = 2;
  }
  else {
    unsigned int v37 = a6;
  }
  if (a6 >= 2) {
    unsigned int v38 = a6 - 2;
  }
  else {
    unsigned int v38 = 0;
  }
  char v40 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v50, a7, v35, v37);
  v50.i32[0] = WORD2(v55);
  v50.i32[1] = WORD6(v55);
  v50.i32[2] = WORD3(v55);
  v50.i32[3] = HIWORD(v55);
  int v51 = WORD2(v56);
  int v52 = WORD6(v56);
  int v53 = WORD3(v56);
  int v54 = HIWORD(v56);
  if (a6 >= 4) {
    unsigned int v41 = 2;
  }
  else {
    unsigned int v41 = v38;
  }
  int v42 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, &v50, a7, v35, v41);
  v50.i32[0] = (unsigned __int16)v57;
  v50.i32[1] = WORD4(v57);
  v50.i32[2] = WORD1(v57);
  v50.i32[3] = WORD5(v57);
  int v51 = (unsigned __int16)v58;
  int v52 = WORD4(v58);
  if (a5 >= 4) {
    unsigned int v43 = 4;
  }
  else {
    unsigned int v43 = v36;
  }
  int v53 = WORD1(v58);
  int v54 = WORD5(v58);
  int v44 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, &v50, a7, v43, v37);
  v50.i32[0] = WORD2(v57);
  v50.i32[1] = WORD6(v57);
  v50.i32[2] = WORD3(v57);
  v50.i32[3] = HIWORD(v57);
  int v51 = WORD2(v58);
  int v52 = WORD6(v58);
  int v53 = WORD3(v58);
  int v54 = HIWORD(v58);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, &v50, a7, v43, v41);
  if (v44) {
    char v46 = 4;
  }
  else {
    char v46 = 0;
  }
  if (v42) {
    char v47 = 2;
  }
  else {
    char v47 = 0;
  }
  if (result) {
    char v48 = -8;
  }
  else {
    char v48 = -16;
  }
  *a2 = v48 | v46 | v40 | v47;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int64x2_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, double a5, double a6, double a7, int8x8_t a8)
{
  unint64_t v8 = 8 * (a3 & 7);
  unint64_t v9 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 + 22;
  unint64_t v11 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v8;
  if (v8 >= 0x2B) {
    v11 |= *(void *)(v9 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v12 = (8 * (a3 & 7)) | 0x100;
  int v13 = (a4 >> 6) | (4 * v11);
  uint16x8_t v14 = (uint16x8_t)vdupq_n_s16(v13 & 0xF);
  a8.i32[0] = v13 & 0xF;
  v15.i64[0] = 0x3000300030003;
  v15.i64[1] = 0x3000300030003;
  int16x8_t v16 = (int16x8_t)vbicq_s8((int8x16_t)vdupq_n_s16(((v11 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v15));
  int8x16_t v17 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v18.i64[0] = 0x202020202020202;
  v18.i64[1] = 0x202020202020202;
  int8x16_t v19 = vandq_s8(v17, v18);
  if (vmaxvq_s8(v19) < 1)
  {
    int v29 = 0;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    int16x8_t v31 = v16;
    int16x8_t v32 = v16;
    int16x8_t v33 = v16;
    v34.i64[0] = -1;
    v34.i64[1] = -1;
    int8x16_t v35 = (int8x16_t)v16;
    v36.i64[0] = -1;
    v36.i64[1] = -1;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
  }
  else
  {
    int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v19, v19));
    int32x4_t v21 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v20, v20));
    unint64_t v22 = vpaddq_s32(v21, v21).u64[0];
    v23.i64[0] = v22;
    v23.i64[1] = HIDWORD(v22);
    int64x2_t v24 = v23;
    unint64_t v25 = vaddvq_s64(v23);
    unint64_t v26 = v25 + v10;
    if (v25 <= 0x80 && v12 >= v26)
    {
      int64x2_t v38 = vaddq_s64(vzip1q_s64((int64x2_t)0, v24), vdupq_n_s64(v10 & 0x3E));
      int16x8_t v39 = (int64x2_t *)(v9 + ((v10 >> 3) & 8));
      int32x4_t v28 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v39, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39->i64[0], 0), (uint64x2_t)vnegq_s64(v38)));
      if (v25 + (v10 & 0x3E) < 0x81)
      {
        int v29 = 0;
      }
      else
      {
        int v29 = 0;
        int32x4_t v28 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v39[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v38))), (int8x16_t)v28);
      }
      unint64_t v10 = v26;
    }
    else
    {
      int32x4_t v28 = 0uLL;
      int v29 = 1;
    }
    int32x2_t v40 = vzip1_s32(*(int32x2_t *)v21.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL));
    v41.i64[0] = v40.u32[0];
    v41.i64[1] = v40.u32[1];
    int32x4_t v42 = (int32x4_t)vshlq_u64((uint64x2_t)v28, (uint64x2_t)vnegq_s64(v41));
    *(int32x2_t *)v28.i8 = vmovn_s64((int64x2_t)v28);
    *(int32x2_t *)v42.i8 = vmovn_s64((int64x2_t)v42);
    int16x8_t v43 = (int16x8_t)vzip1q_s32(v28, v42);
    int16x8_t v44 = (int16x8_t)vshlq_u32((uint32x4_t)v43, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v20.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v20, (int8x16_t)v20, 8uLL)))));
    *(int16x4_t *)v43.i8 = vmovn_s32((int32x4_t)v43);
    *(int16x4_t *)v44.i8 = vmovn_s32((int32x4_t)v44);
    int16x8_t v45 = vzip1q_s16(v43, v44);
    *(int8x8_t *)v45.i8 = vzip1_s8(vmovn_s16(v45), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v45, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v19.i8, *(int8x8_t *)v14.i8))))));
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    int8x16_t v46 = vshlq_s8((int8x16_t)v43, v19);
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v46.i32[0] = vandq_s8((int8x16_t)v45, vaddq_s8(v46, (int8x16_t)v43)).u32[0];
    int16x8_t v47 = vdupq_n_s16(v46.i8[0]);
    int16x8_t v48 = vdupq_n_s16(v46.i8[1]);
    int16x8_t v49 = vdupq_n_s16(v46.i8[2]);
    int16x8_t v50 = vdupq_n_s16(v46.i8[3]);
    int8x16_t v35 = (int8x16_t)vsubq_s16(v16, v47);
    int16x8_t v33 = vsubq_s16(v16, v48);
    int16x8_t v32 = vsubq_s16(v16, v49);
    int16x8_t v31 = vsubq_s16(v16, v50);
    int8x16_t v37 = (int8x16_t)vceqzq_s16(v47);
    int8x16_t v36 = (int8x16_t)vceqzq_s16(v48);
    int8x16_t v34 = (int8x16_t)vceqzq_s16(v49);
    int8x16_t v30 = (int8x16_t)vceqzq_s16(v50);
  }
  v51.i64[0] = 0x7000700070007;
  v51.i64[1] = 0x7000700070007;
  int32x4_t v52 = 0uLL;
  int16x8_t v53 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v14, v51), (int8x16_t)0, 0xEuLL), (int8x16_t)v16);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v53, v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  if (v58 <= 0x80 && v12 >= v58 + v10)
  {
    int64x2_t v60 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v10 & 0x3F));
    int16x4x2_t v61 = (int64x2_t *)(v9 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v61, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61->i64[0], 0), (uint64x2_t)vnegq_s64(v60)));
    if (v58 + (v10 & 0x3F) >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v61[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v60))), (int8x16_t)v52);
    }
    v10 += v58;
  }
  else
  {
    int v29 = 1;
  }
  int v62 = a4 >> 6;
  if (v62 != 2)
  {
    LODWORD(v65) = 0;
    LODWORD(v64) = 0;
    unint64_t v66 = v10;
    goto LABEL_34;
  }
  unint64_t v63 = v10 + 8;
  if (v12 < v10 + 8)
  {
    LODWORD(v64) = 0;
    unint64_t v63 = v10;
LABEL_33:
    LODWORD(v65) = 0;
    int v29 = 1;
    unint64_t v66 = v63;
    goto LABEL_34;
  }
  uint64_t v64 = *(void *)(v9 + 8 * (v10 >> 6)) >> v10;
  if ((v10 & 0x3F) >= 0x39) {
    v64 |= *(void *)(v9 + 8 * (v10 >> 6) + 8) << -(v10 & 0x3F);
  }
  unint64_t v66 = v10 + 16;
  LODWORD(v64) = (char)v64;
  if (v12 < v10 + 16) {
    goto LABEL_33;
  }
  uint64_t v65 = *(void *)(v9 + 8 * (v63 >> 6)) >> v63;
  if ((v63 & 0x3F) >= 0x39) {
    v65 |= *(void *)(v9 + 8 * (v63 >> 6) + 8) << -(v63 & 0x3F);
  }
  LODWORD(v65) = (char)v65;
LABEL_34:
  int16x8_t v67 = 0uLL;
  int16x8_t v68 = (int16x8_t)vextq_s8((int8x16_t)0, v35, 0xEuLL);
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v66;
  if (v73 <= 0x80 && v12 >= v74)
  {
    unint64_t v77 = v66 & 0x3F;
    int64x2_t v78 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v77));
    int8x16_t v79 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
    int32x4_t v76 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v78)));
    if (v73 + v77 >= 0x81) {
      int32x4_t v76 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v78))), (int8x16_t)v76);
    }
    unint64_t v66 = v74;
  }
  else
  {
    int v29 = 1;
    int32x4_t v76 = 0uLL;
  }
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v33, v33));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  if (v84 < 0x81)
  {
    int32x2_t v85 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
    v86.i64[0] = v85.u32[0];
    v86.i64[1] = v85.u32[1];
    int64x2_t v87 = v86;
    int32x4_t v88 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL)));
    unint64_t v89 = v84 + v66;
    if (v12 >= v84 + v66)
    {
      unint64_t v90 = v66 & 0x3F;
      int64x2_t v91 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v90));
      int8x16_t v92 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int16x8_t v67 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
      if (v84 + v90 >= 0x81) {
        int16x8_t v67 = (int16x8_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), (int8x16_t)v67);
      }
      unint64_t v66 = v89;
    }
    else
    {
      int v29 = 1;
    }
    int32x4_t v93 = (int32x4_t)vshlq_u64((uint64x2_t)v67, (uint64x2_t)vnegq_s64(v87));
    *(int32x2_t *)v67.i8 = vmovn_s64((int64x2_t)v67);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    int16x8_t v94 = (int16x8_t)vzip1q_s32((int32x4_t)v67, v93);
    int16x8_t v95 = (int16x8_t)vshlq_u32((uint32x4_t)v94, (uint32x4_t)vnegq_s32(v88));
    *(int16x4_t *)v94.i8 = vmovn_s32((int32x4_t)v94);
    *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v95);
    int16x8_t v67 = vzip1q_s16(v94, v95);
  }
  else
  {
    int v29 = 1;
  }
  int32x4_t v96 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
  unint64_t v97 = vpaddq_s32(v96, v96).u64[0];
  v98.i64[0] = v97;
  v98.i64[1] = HIDWORD(v97);
  int64x2_t v99 = v98;
  unint64_t v100 = vaddvq_s64(v98);
  if (v100 <= 0x80)
  {
    int32x2_t v102 = vzip1_s32(*(int32x2_t *)v96.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v96, (int8x16_t)v96, 8uLL));
    v103.i64[0] = v102.u32[0];
    v103.i64[1] = v102.u32[1];
    int64x2_t v104 = v103;
    int32x4_t v105 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL)));
    unint64_t v106 = v100 + v66;
    if (v12 >= v100 + v66)
    {
      unint64_t v108 = v66 & 0x3F;
      int64x2_t v109 = vaddq_s64(vzip1q_s64((int64x2_t)0, v99), vdupq_n_s64(v108));
      int16x8_t v110 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int32x4_t v107 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v110, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
      if (v100 + v108 >= 0x81) {
        int32x4_t v107 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v110[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), (int8x16_t)v107);
      }
      unint64_t v66 = v106;
    }
    else
    {
      int32x4_t v107 = 0uLL;
      int v29 = 1;
    }
    int32x4_t v111 = (int32x4_t)vshlq_u64((uint64x2_t)v107, (uint64x2_t)vnegq_s64(v104));
    *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    int16x8_t v112 = (int16x8_t)vzip1q_s32(v107, v111);
    int16x8_t v113 = (int16x8_t)vshlq_u32((uint32x4_t)v112, (uint32x4_t)vnegq_s32(v105));
    *(int16x4_t *)v112.i8 = vmovn_s32((int32x4_t)v112);
    *(int16x4_t *)v113.i8 = vmovn_s32((int32x4_t)v113);
    int16x8_t v101 = vzip1q_s16(v112, v113);
  }
  else
  {
    int v29 = 1;
    int16x8_t v101 = 0uLL;
  }
  int32x4_t v114 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v31, v31));
  unint64_t v115 = vpaddq_s32(v114, v114).u64[0];
  v116.i64[0] = v115;
  v116.i64[1] = HIDWORD(v115);
  int64x2_t v117 = v116;
  unint64_t v118 = vaddvq_s64(v116);
  if (v118 > 0x80 || v12 < v118 + v66) {
    goto LABEL_64;
  }
  int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v117), vdupq_n_s64(v66 & 0x3F));
  int16x8_t v120 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
  int64x2_t v121 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
  if (v118 + (v66 & 0x3F) >= 0x81) {
    int64x2_t v121 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), (int8x16_t)v121);
  }
  if (v29 || (uint64_t v122 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v122) - (v118 + v66) >= 9))
  {
LABEL_64:
    uint64_t v122 = 0;
    v176 |= 0xFFFFLL << ((8 * (&v176 + 6)) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 2 * a2) = 0;
    *(uint64_t *)((char *)a1->i64 + 3 * a2) = 0;
  }
  else
  {
    int32x2_t v124 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
    int32x2_t v125 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v126.i64[0] = v124.u32[0];
    v126.i64[1] = v124.u32[1];
    int64x2_t v127 = v126;
    v126.i64[0] = v125.u32[0];
    v126.i64[1] = v125.u32[1];
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v52, (uint64x2_t)vnegq_s64(v127));
    int32x4_t v129 = (int32x4_t)vshlq_u64((uint64x2_t)v76, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    *(int32x2_t *)v76.i8 = vmovn_s64((int64x2_t)v76);
    *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
    int16x8_t v130 = (int16x8_t)vzip1q_s32(v52, v128);
    int16x8_t v131 = (int16x8_t)vzip1q_s32(v76, v129);
    int16x8_t v132 = (int16x8_t)vshlq_u32((uint32x4_t)v130, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL)))));
    int16x8_t v133 = (int16x8_t)vshlq_u32((uint32x4_t)v131, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    *(int16x4_t *)v132.i8 = vmovn_s32((int32x4_t)v132);
    *(int16x4_t *)v131.i8 = vmovn_s32((int32x4_t)v131);
    *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v133);
    v134.i64[0] = 0x10001000100010;
    v134.i64[1] = 0x10001000100010;
    v135.i64[0] = 0x10001000100010;
    v135.i64[1] = 0x10001000100010;
    unint64_t v136 = v11 >> 6;
    int16x8_t v137 = vzip1q_s16(v130, v132);
    v132.i64[0] = 0xF000F000F000FLL;
    v132.i64[1] = 0xF000F000F000FLL;
    int16x8_t v138 = vsubq_s16(v134, v53);
    int16x8_t v139 = vzip1q_s16(v131, v133);
    v133.i64[0] = 0xF000F000F000FLL;
    v133.i64[1] = 0xF000F000F000FLL;
    int32x2_t v140 = vzip1_s32(*(int32x2_t *)v114.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v114, (int8x16_t)v114, 8uLL));
    v141.i64[0] = 0xF000F000F000FLL;
    v141.i64[1] = 0xF000F000F000FLL;
    v142.i64[0] = 0x10001000100010;
    v142.i64[1] = 0x10001000100010;
    int16x8_t v143 = vaddq_s16(v53, v132);
    int16x8_t v144 = vaddq_s16(v68, v133);
    int16x8_t v145 = vshlq_s16(v139, vsubq_s16(v135, v68));
    v126.i64[0] = v140.u32[0];
    v126.i64[1] = v140.u32[1];
    int8x16_t v146 = (int8x16_t)vshlq_s16(vshlq_s16(v137, v138), v143);
    int16x8_t v147 = vshlq_s16(v145, v144);
    int16x8_t v148 = vshlq_s16(vshlq_s16(v67, vsubq_s16(v135, v33)), vaddq_s16(v33, v133));
    int16x8_t v149 = vshlq_s16(vshlq_s16(v101, vsubq_s16(v135, v32)), vaddq_s16(v32, v133));
    int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v121, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v145.i8 = vmovn_s64(v121);
    *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
    int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v145, v150);
    int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v151, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v31.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL)))));
    *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v151);
    *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
    int16x8_t v153 = vshlq_s16(vshlq_s16(vzip1q_s16(v151, v152), vsubq_s16(v142, v31)), vaddq_s16(v31, v141));
    if (v62 == 2)
    {
      v154.i64[0] = 0xFFFFFFFF00000000;
      v154.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v155 = vmlal_s8((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v65), v154), vdup_n_s8(v64), (int8x8_t)0x302030201000100);
      int16x8_t v147 = vaddq_s16(v147, v155);
      int16x8_t v148 = vaddq_s16(vaddq_s16(vdupq_n_s16(2 * (int)v65), v155), v148);
      int16x8_t v149 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64), v155), v149);
      int16x8_t v153 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64 + 2 * (int)v65), v155), v153);
    }
    int16x8_t v156 = vdupq_n_s16(v136);
    int16x8_t v157 = vaddq_s16((int16x8_t)vandq_s8(v146, v37), v147);
    int8x16_t v158 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v146.i8, 0);
    int16x8_t v159 = vsubq_s16(v157, (int16x8_t)vandq_s8(v158, v37));
    int16x8_t v160 = vsubq_s16(v148, (int16x8_t)vandq_s8(v158, v36));
    int16x8_t v161 = vsubq_s16(v149, (int16x8_t)vandq_s8(v158, v34));
    int16x8_t v162 = vsubq_s16(v153, (int16x8_t)vandq_s8(v158, v30));
    v163.i64[0] = 0x1000100010001;
    v163.i64[1] = 0x1000100010001;
    if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v163)))
    {
      int8x16_t v164 = (int8x16_t)v159;
      v164.i16[0] = v159.i16[7];
      v164.i16[7] = v159.i16[0];
      int8x16_t v165 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
      int16x8_t v166 = (int16x8_t)vbslq_s8(v165, v164, (int8x16_t)v159);
      int16x8_t v167 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v166, (int8x16_t)xmmword_242EA7480), v165), v166);
      int16x8_t v159 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v167, (int8x16_t)xmmword_242EA7490), v165), v167);
      int16x8_t v168 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v160, (int8x16_t)xmmword_242EA74A0), v165), v160);
      int16x8_t v160 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v168, (int8x16_t)xmmword_242EA74B0), v165), v168);
      int16x8_t v169 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v161, (int8x16_t)xmmword_242EA74C0), v165), v161);
      int16x8_t v161 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_242EA74D0), v165), v169);
      int16x8_t v170 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v162, (int8x16_t)xmmword_242EA74E0), v165), v162);
      int16x8_t v162 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_242EA74F0), v165), v170);
    }
    int64x2_t v171 = (int64x2_t)vaddq_s16(v156, v159);
    int64x2_t v172 = (int64x2_t)vaddq_s16(v160, v156);
    int64x2_t v173 = (int64x2_t)vaddq_s16(v161, v156);
    int64x2_t v174 = (int64x2_t)vaddq_s16(v162, v156);
    *a1 = vzip1q_s64(v171, v172);
    *(int64x2_t *)((char *)a1 + a2) = vzip2q_s64(v171, v172);
    int16x8_t v175 = (int64x2_t *)((char *)a1 + 2 * a2);
    *int16x8_t v175 = vzip1q_s64(v173, v174);
    *(int64x2_t *)((char *)v175 + a2) = vzip2q_s64(v173, v174);
  }
  return v122;
}

char *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(__int16 *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v5 = 0;
  uint64_t v205 = *MEMORY[0x263EF8340];
  unsigned int v6 = a5 & 0xFFFFFFFD;
  unsigned int v194 = a4;
  uint64_t v193 = a3;
  do
  {
    uint64_t v24 = a3 + 8 * v5;
    unint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = 8 * (v24 & 7);
    if ((a4 >> v5))
    {
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = v26;
      do
      {
        if ((unint64_t)(v29 - v26 + (v28 << 6) - 57) < 0xFFFFFFFFFFFFFFBFLL)
        {
          unsigned __int8 v30 = 0;
        }
        else
        {
          unsigned __int8 v30 = 0;
          uint64_t v34 = 0;
          unint64_t v35 = 8;
          do
          {
            unint64_t v36 = 64 - v29;
            if (64 - v29 >= v35) {
              unint64_t v36 = v35;
            }
            v30 |= (unint64_t)((v25[v28] >> v29) & ~(-1 << v36)) << v34;
            v34 += v36;
            unint64_t v37 = v36 + v29;
            v28 += v37 >> 6;
            uint64_t v29 = v37 & 0x3F;
            v35 -= v36;
          }
          while (v35);
        }
        int v31 = v30 << 8;
        int v32 = v31 - (v30 & 1) + 128;
        if (v31 == 65280) {
          int v32 = 0xFFFF;
        }
        if (!v31) {
          int v32 = 0;
        }
        if (v31 == 0x8000 && v6 == 1) {
          int v32 = v31;
        }
        if (a5 == 4) {
          int v32 = v31;
        }
        v195.i32[v27++] = v32 ^ (((a5 & 0xFFFFFFFD) == 1) << 15);
      }
      while (v27 != 8);
      LOWORD(v8) = v195.i16[0];
      LOWORD(v7) = v195.i16[2];
      LOWORD(v10) = v195.i16[4];
      LOWORD(v9) = v195.i16[6];
      LOWORD(v12) = v196;
      LOWORD(v11) = v197;
      LOWORD(v14) = v198;
      LOWORD(v13) = v199;
      goto LABEL_3;
    }
    uint64_t v38 = (*v25 >> v26) & 0xFLL;
    uint64_t v39 = v26 | 4;
    int32x2_t v40 = &kDQuadParamTable[10 * v38];
    unsigned int v41 = v40[484];
    unsigned int v42 = v40[485];
    if (v41 >= 0x10) {
      uint64_t v43 = 16;
    }
    else {
      uint64_t v43 = v41;
    }
    if (v42 >= 0x10) {
      uint64_t v44 = 16;
    }
    else {
      uint64_t v44 = v42;
    }
    if (v43)
    {
      if ((unint64_t)(v43 - v26 + v39) <= 0x40)
      {
        int v46 = 0;
        uint64_t v45 = 0;
        uint64_t v49 = 0;
        unint64_t v50 = v43;
        do
        {
          unint64_t v51 = 64 - v39;
          if (64 - v39 >= v50) {
            unint64_t v51 = v50;
          }
          v46 |= (unint64_t)((v25[v45] >> v39) & ~(-1 << v51)) << v49;
          v49 += v51;
          unint64_t v52 = v51 + v39;
          v45 += v52 >> 6;
          uint64_t v39 = v52 & 0x3F;
          v50 -= v51;
        }
        while (v50);
        int v47 = v43 + 4;
        if (!v44)
        {
LABEL_43:
          int v48 = 0;
          uint64_t v53 = 0;
          uint64_t v201 = 0;
          uint64_t v202 = 0;
          int v204 = 0;
          uint64_t v203 = 0;
          goto LABEL_96;
        }
      }
      else
      {
        uint64_t v45 = 0;
        int v46 = 0;
        int v47 = v43 + 4;
        if (!v44) {
          goto LABEL_43;
        }
      }
    }
    else
    {
      int v46 = 0;
      uint64_t v45 = 0;
      int v47 = 4;
      if (!v44) {
        goto LABEL_43;
      }
    }
    if ((unint64_t)(v39 - v26 + (v45 << 6) + 3) <= 0x40)
    {
      int v48 = 0;
      uint64_t v54 = 0;
      unint64_t v55 = 3;
      do
      {
        unint64_t v56 = 64 - v39;
        if (64 - v39 >= v55) {
          unint64_t v56 = v55;
        }
        v48 |= (unint64_t)((v25[v45] >> v39) & ~(-1 << v56)) << v54;
        v54 += v56;
        unint64_t v57 = v56 + v39;
        v45 += v57 >> 6;
        uint64_t v39 = v57 & 0x3F;
        v55 -= v56;
      }
      while (v55);
    }
    else
    {
      int v48 = 0;
    }
    uint64_t v201 = 0;
    uint64_t v202 = 0;
    int v204 = 0;
    uint64_t v203 = 0;
    unsigned int v58 = 61 - v47;
    unsigned int v59 = (61 - v47) / 7u;
    uint64_t v60 = v44 - v26;
    unint64_t v61 = (v39 | (v45 << 6)) + v58 % 7;
    unint64_t v62 = v61 & 0x3F;
    if (v60 + v62 + (v61 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      uint64_t v53 = 0;
      uint64_t v63 = 0;
      unint64_t v64 = v61 >> 6;
      unint64_t v65 = v44;
      do
      {
        unint64_t v66 = 64 - v62;
        if (64 - v62 >= v65) {
          unint64_t v66 = v65;
        }
        v53 |= ((unint64_t)((v25[v64] >> v62) & ~(-1 << v66)) << v63);
        v63 += v66;
        unint64_t v67 = v66 + v62;
        v64 += v67 >> 6;
        unint64_t v62 = v67 & 0x3F;
        v65 -= v66;
      }
      while (v65);
      LODWORD(v201) = v53;
      unint64_t v61 = v62 | (v64 << 6);
    }
    else
    {
      uint64_t v53 = 0;
    }
    uint64_t v68 = v59 - v44;
    unint64_t v69 = v61 + v68;
    uint64_t v70 = (v61 + v68) & 0x3F;
    if (v60 + v70 + ((v61 + v68) & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v71 = 0;
      uint64_t v72 = 0;
      unint64_t v73 = v69 >> 6;
      unint64_t v74 = v44;
      do
      {
        unint64_t v75 = 64 - v70;
        if (64 - v70 >= v74) {
          unint64_t v75 = v74;
        }
        v71 |= (unint64_t)((v25[v73] >> v70) & ~(-1 << v75)) << v72;
        v72 += v75;
        unint64_t v76 = v75 + v70;
        v73 += v76 >> 6;
        uint64_t v70 = v76 & 0x3F;
        v74 -= v75;
      }
      while (v74);
      HIDWORD(v201) = v71;
      unint64_t v69 = v70 | (v73 << 6);
    }
    else
    {
      HIDWORD(v201) = 0;
    }
    unint64_t v77 = v69 + v68;
    uint64_t v78 = v77 & 0x3F;
    if (v60 + v78 + (v77 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v79 = 0;
      uint64_t v80 = 0;
      unint64_t v81 = v77 >> 6;
      unint64_t v82 = v44;
      do
      {
        unint64_t v83 = 64 - v78;
        if (64 - v78 >= v82) {
          unint64_t v83 = v82;
        }
        v79 |= (unint64_t)((v25[v81] >> v78) & ~(-1 << v83)) << v80;
        v80 += v83;
        unint64_t v84 = v83 + v78;
        v81 += v84 >> 6;
        uint64_t v78 = v84 & 0x3F;
        v82 -= v83;
      }
      while (v82);
      LODWORD(v202) = v79;
      unint64_t v77 = v78 | (v81 << 6);
    }
    else
    {
      LODWORD(v202) = 0;
    }
    unint64_t v85 = v77 + v68;
    uint64_t v86 = v85 & 0x3F;
    if (v60 + v86 + (v85 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v87 = 0;
      uint64_t v88 = 0;
      unint64_t v89 = v85 >> 6;
      unint64_t v90 = v44;
      do
      {
        unint64_t v91 = 64 - v86;
        if (64 - v86 >= v90) {
          unint64_t v91 = v90;
        }
        v87 |= (unint64_t)((v25[v89] >> v86) & ~(-1 << v91)) << v88;
        v88 += v91;
        unint64_t v92 = v91 + v86;
        v89 += v92 >> 6;
        uint64_t v86 = v92 & 0x3F;
        v90 -= v91;
      }
      while (v90);
      HIDWORD(v202) = v87;
      unint64_t v85 = v86 | (v89 << 6);
    }
    else
    {
      HIDWORD(v202) = 0;
    }
    unint64_t v93 = v85 + v68;
    uint64_t v94 = v93 & 0x3F;
    if (v60 + v94 + (v93 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v95 = 0;
      uint64_t v96 = 0;
      unint64_t v97 = v93 >> 6;
      unint64_t v98 = v44;
      do
      {
        unint64_t v99 = 64 - v94;
        if (64 - v94 >= v98) {
          unint64_t v99 = v98;
        }
        v95 |= (unint64_t)((v25[v97] >> v94) & ~(-1 << v99)) << v96;
        v96 += v99;
        unint64_t v100 = v99 + v94;
        v97 += v100 >> 6;
        uint64_t v94 = v100 & 0x3F;
        v98 -= v99;
      }
      while (v98);
      LODWORD(v203) = v95;
      unint64_t v93 = v94 | (v97 << 6);
    }
    else
    {
      LODWORD(v203) = 0;
    }
    unint64_t v101 = (v93 + v68) >> 6;
    uint64_t v102 = (v93 + v68) & 0x3F;
    if (v60 + v102 + ((v93 + v68) & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v103 = 0;
      uint64_t v104 = 0;
      unint64_t v105 = v44;
      do
      {
        unint64_t v106 = 64 - v102;
        if (64 - v102 >= v105) {
          unint64_t v106 = v105;
        }
        v103 |= (unint64_t)((v25[v101] >> v102) & ~(-1 << v106)) << v104;
        v104 += v106;
        unint64_t v107 = v106 + v102;
        v101 += v107 >> 6;
        uint64_t v102 = v107 & 0x3F;
        v105 -= v106;
      }
      while (v105);
    }
    else
    {
      int v103 = 0;
    }
    HIDWORD(v203) = v103;
    unint64_t v108 = (v102 | (v101 << 6)) + v68;
    uint64_t v109 = v108 & 0x3F;
    if (v60 + v109 + (v108 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v110 = 0;
      uint64_t v111 = 0;
      unint64_t v112 = v108 >> 6;
      unint64_t v113 = v44;
      do
      {
        unint64_t v114 = 64 - v109;
        if (64 - v109 >= v113) {
          unint64_t v114 = v113;
        }
        v110 |= (unint64_t)((v25[v112] >> v109) & ~(-1 << v114)) << v111;
        v111 += v114;
        unint64_t v115 = v114 + v109;
        v112 += v115 >> 6;
        uint64_t v109 = v115 & 0x3F;
        v113 -= v114;
      }
      while (v113);
    }
    else
    {
      int v110 = 0;
    }
    int v204 = v110;
LABEL_96:
    char v116 = 16 - v43;
    uint64_t v117 = (v46 << (16 - v43));
    unint64_t v118 = *(void *)&kDQuadParamTable[10 * v38 + 482];
    if (v118 >> v44 <= 1) {
      unint64_t v119 = 1;
    }
    else {
      unint64_t v119 = v118 >> v44;
    }
    unint64_t v120 = v119 >> 1;
    unint64_t v121 = (unint64_t)(1 << v116) >> 1;
    if (v119 >> 1 < v121) {
      unint64_t v121 = v119 >> 1;
    }
    unint64_t v122 = 0x8000 - v117;
    if (v117) {
      uint64_t v123 = v121;
    }
    else {
      uint64_t v123 = 0;
    }
    BOOL v124 = v117 == 0x8000;
    if (v117 >= 0xFFFF) {
      LODWORD(v13) = 0xFFFF;
    }
    else {
      LODWORD(v13) = v117;
    }
    unsigned int v125 = v13 ^ 0x8000;
    if (v119 <= v122)
    {
      __int16 v126 = -1025;
    }
    else
    {
      unsigned int v125 = 0;
      __int16 v126 = 0;
    }
    if (v6 == 1)
    {
      LOWORD(v13) = v126;
    }
    else
    {
      unsigned int v125 = v13;
      LOWORD(v13) = 31743;
    }
    if (v44)
    {
      unint64_t v127 = v118 + v117;
      uint64_t v128 = ~(-1 << v44);
      unint64_t v129 = v122 / v119;
      if (v48)
      {
        BOOL v130 = v129 == v53;
        if (v117 || v53)
        {
          if (v127 >= 0x10000 && v53 == v128)
          {
            uint64_t v131 = 1;
            uint64_t v53 = 0xFFFFLL;
LABEL_135:
            unint64_t v134 = v53 + v117;
            if (a5 == 4)
            {
              unint64_t v135 = v134 & 0xFFFFFFFFFFFFFE00;
              if ((v134 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v134 = 31743;
              }
              else if (v135 == 32256)
              {
                unint64_t v134 = 0x8000;
              }
              else if (v135 == 64512)
              {
                unint64_t v134 = 64511;
              }
            }
            if (v134 >= 0xFFFF) {
              LODWORD(v134) = 0xFFFF;
            }
            if (v130) {
              __int32 v136 = 0;
            }
            else {
              __int32 v136 = v134 ^ 0x8000;
            }
            if (v6 == 1) {
              __int32 v8 = v136;
            }
            else {
              __int32 v8 = v134;
            }
            v195.i32[0] = v8;
            if (v48 == 1)
            {
              uint64_t v137 = v123;
              BOOL v138 = v117 == 0x8000;
            }
            else
            {
              uint64_t v139 = *(unsigned int *)((unint64_t)&v201 | (4 * v131));
              BOOL v138 = v129 == v139;
              if (v117 | v139)
              {
                if (v127 >= 0x10000 && v139 == v128) {
                  uint64_t v137 = 0xFFFFLL;
                }
                else {
                  uint64_t v137 = v120 + v119 * v139;
                }
              }
              else
              {
                uint64_t v137 = 0;
              }
              ++v131;
            }
            unint64_t v140 = v137 + v117;
            if (a5 == 4)
            {
              unint64_t v141 = v140 & 0xFFFFFFFFFFFFFE00;
              if ((v140 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v140 = 31743;
              }
              else if (v141 == 32256)
              {
                unint64_t v140 = 0x8000;
              }
              else if (v141 == 64512)
              {
                unint64_t v140 = 64511;
              }
            }
            if (v140 >= 0xFFFF) {
              LODWORD(v140) = 0xFFFF;
            }
            if (v138) {
              __int32 v7 = 0;
            }
            else {
              __int32 v7 = v140 ^ 0x8000;
            }
            if (v6 != 1) {
              __int32 v7 = v140;
            }
            v195.i32[1] = v7;
            if (v48 == 2)
            {
              uint64_t v142 = v123;
              BOOL v143 = v117 == 0x8000;
            }
            else
            {
              uint64_t v144 = *((unsigned int *)&v201 + v131);
              BOOL v143 = v129 == v144;
              if (v117 | v144)
              {
                if (v127 >= 0x10000 && v144 == v128) {
                  uint64_t v142 = 0xFFFFLL;
                }
                else {
                  uint64_t v142 = v120 + v119 * v144;
                }
              }
              else
              {
                uint64_t v142 = 0;
              }
              ++v131;
            }
            unint64_t v145 = v142 + v117;
            if (a5 == 4)
            {
              unint64_t v146 = v145 & 0xFFFFFFFFFFFFFE00;
              if ((v145 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v145 = 31743;
              }
              else if (v146 == 32256)
              {
                unint64_t v145 = 0x8000;
              }
              else if (v146 == 64512)
              {
                unint64_t v145 = 64511;
              }
            }
            if (v145 >= 0xFFFF) {
              int v147 = 0xFFFF;
            }
            else {
              int v147 = v145;
            }
            if (v143) {
              int v148 = 0;
            }
            else {
              int v148 = v147 ^ 0x8000;
            }
            if (v6 == 1) {
              int v10 = v148;
            }
            else {
              int v10 = v147;
            }
            v195.i32[2] = v10;
            if (v48 == 3)
            {
              uint64_t v149 = v123;
              BOOL v150 = v117 == 0x8000;
            }
            else
            {
              uint64_t v151 = *((unsigned int *)&v201 + v131);
              BOOL v150 = v129 == v151;
              if (v117 | v151)
              {
                if (v127 >= 0x10000 && v151 == v128) {
                  uint64_t v149 = 0xFFFFLL;
                }
                else {
                  uint64_t v149 = v120 + v119 * v151;
                }
              }
              else
              {
                uint64_t v149 = 0;
              }
              ++v131;
            }
            unint64_t v152 = v149 + v117;
            if (a5 == 4)
            {
              unint64_t v153 = v152 & 0xFFFFFFFFFFFFFE00;
              if ((v152 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v152 = 31743;
              }
              else if (v153 == 32256)
              {
                unint64_t v152 = 0x8000;
              }
              else if (v153 == 64512)
              {
                unint64_t v152 = 64511;
              }
            }
            if (v152 >= 0xFFFF) {
              int v154 = 0xFFFF;
            }
            else {
              int v154 = v152;
            }
            if (v150) {
              int v155 = 0;
            }
            else {
              int v155 = v154 ^ 0x8000;
            }
            if (v6 == 1) {
              int v9 = v155;
            }
            else {
              int v9 = v154;
            }
            v195.i32[3] = v9;
            if (v48 == 4)
            {
              uint64_t v156 = v123;
              BOOL v157 = v117 == 0x8000;
            }
            else
            {
              uint64_t v158 = *((unsigned int *)&v201 + v131);
              BOOL v157 = v129 == v158;
              if (v117 | v158)
              {
                if (v127 >= 0x10000 && v158 == v128) {
                  uint64_t v156 = 0xFFFFLL;
                }
                else {
                  uint64_t v156 = v120 + v119 * v158;
                }
              }
              else
              {
                uint64_t v156 = 0;
              }
              ++v131;
            }
            unint64_t v159 = v156 + v117;
            if (a5 == 4)
            {
              unint64_t v160 = v159 & 0xFFFFFFFFFFFFFE00;
              if ((v159 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v159 = 31743;
              }
              else if (v160 == 32256)
              {
                unint64_t v159 = 0x8000;
              }
              else if (v160 == 64512)
              {
                unint64_t v159 = 64511;
              }
            }
            if (v159 >= 0xFFFF) {
              int v161 = 0xFFFF;
            }
            else {
              int v161 = v159;
            }
            if (v157) {
              int v162 = 0;
            }
            else {
              int v162 = v161 ^ 0x8000;
            }
            if (v6 == 1) {
              int v12 = v162;
            }
            else {
              int v12 = v161;
            }
            int v196 = v12;
            if (v48 == 5)
            {
              uint64_t v163 = v123;
              BOOL v164 = v117 == 0x8000;
            }
            else
            {
              uint64_t v165 = *((unsigned int *)&v201 + v131);
              BOOL v164 = v129 == v165;
              if (v117 | v165)
              {
                if (v127 >= 0x10000 && v165 == v128) {
                  uint64_t v163 = 0xFFFFLL;
                }
                else {
                  uint64_t v163 = v120 + v119 * v165;
                }
              }
              else
              {
                uint64_t v163 = 0;
              }
              ++v131;
            }
            unint64_t v166 = v163 + v117;
            if (a5 == 4)
            {
              unint64_t v167 = v166 & 0xFFFFFFFFFFFFFE00;
              if ((v166 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v166 = 31743;
              }
              else if (v167 == 32256)
              {
                unint64_t v166 = 0x8000;
              }
              else if (v167 == 64512)
              {
                unint64_t v166 = 64511;
              }
            }
            if (v166 >= 0xFFFF) {
              int v168 = 0xFFFF;
            }
            else {
              int v168 = v166;
            }
            if (v164) {
              int v11 = 0;
            }
            else {
              int v11 = v168 ^ 0x8000;
            }
            if (v6 != 1) {
              int v11 = v168;
            }
            int v197 = v11;
            if (v48 == 6)
            {
              uint64_t v169 = v123;
              BOOL v170 = v117 == 0x8000;
            }
            else
            {
              uint64_t v171 = *((unsigned int *)&v201 + v131);
              BOOL v170 = v129 == v171;
              if (v117 | v171)
              {
                if (v127 >= 0x10000 && v171 == v128) {
                  uint64_t v169 = 0xFFFFLL;
                }
                else {
                  uint64_t v169 = v120 + v119 * v171;
                }
              }
              else
              {
                uint64_t v169 = 0;
              }
              ++v131;
            }
            unint64_t v172 = v169 + v117;
            if (a5 == 4)
            {
              unint64_t v173 = v172 & 0xFFFFFFFFFFFFFE00;
              if ((v172 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v172 = 31743;
              }
              else if (v173 == 32256)
              {
                unint64_t v172 = 0x8000;
              }
              else if (v173 == 64512)
              {
                unint64_t v172 = 64511;
              }
            }
            if (v172 >= 0xFFFF) {
              int v174 = 0xFFFF;
            }
            else {
              int v174 = v172;
            }
            if (v170) {
              int v14 = 0;
            }
            else {
              int v14 = v174 ^ 0x8000;
            }
            if (v6 != 1) {
              int v14 = v174;
            }
            int v198 = v14;
            if (v48 != 7)
            {
              uint64_t v175 = *((unsigned int *)&v201 + v131);
              BOOL v124 = v129 == v175;
              if (v117 | v175)
              {
                if (v127 >= 0x10000 && v175 == v128) {
                  uint64_t v123 = 0xFFFFLL;
                }
                else {
                  uint64_t v123 = v120 + v119 * v175;
                }
              }
              else
              {
                uint64_t v123 = 0;
              }
            }
            unint64_t v13 = v123 + v117;
            a4 = v194;
            a3 = v193;
            if (a5 == 4)
            {
              unint64_t v176 = v13 & 0xFFFFFFFFFFFFFE00;
              if ((v13 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v13 = 31743;
              }
              else if (v176 == 32256)
              {
                unint64_t v13 = 0x8000;
              }
              else if (v176 == 64512)
              {
                unint64_t v13 = 64511;
              }
            }
            if (v13 >= 0xFFFF) {
              LOWORD(v13) = -1;
            }
            __int16 v177 = v13 ^ 0x8000;
            if (v124) {
              __int16 v177 = 0;
            }
            if (v6 == 1) {
              LOWORD(v13) = v177;
            }
            goto LABEL_3;
          }
          uint64_t v53 = v120 + v119 * v53;
        }
        uint64_t v131 = 1;
        goto LABEL_135;
      }
      uint64_t v131 = 0;
      uint64_t v53 = v123;
      BOOL v130 = v117 == 0x8000;
      goto LABEL_135;
    }
    if (v119 <= v122) {
      __int16 v132 = 31743;
    }
    else {
      __int16 v132 = 0;
    }
    if (v6 == 1) {
      LOWORD(v14) = v132;
    }
    else {
      LOWORD(v14) = -1025;
    }
    if (a5 == 4)
    {
      int v133 = v117 & 0xFFFFFE00;
      a4 = v194;
      a3 = v193;
      if ((v117 & 0xFFFFFE00) == 0x7C00)
      {
        LOWORD(v14) = v13;
        LOWORD(v11) = v13;
        LOWORD(v12) = v13;
        LOWORD(v9) = v13;
        LOWORD(v10) = v13;
        LOWORD(v7) = v13;
        LOWORD(v8) = v13;
      }
      else if (v133 == 64512)
      {
        LOWORD(v13) = v14;
        LOWORD(v11) = v14;
        LOWORD(v12) = v14;
        LOWORD(v9) = v14;
        LOWORD(v10) = v14;
        LOWORD(v7) = v14;
        LOWORD(v8) = v14;
      }
      else
      {
        LOWORD(v8) = ((a5 & 0xFFFFFFFD) != 1) << 15;
        LOWORD(v13) = v8;
        LOWORD(v14) = v8;
        LOWORD(v11) = v8;
        LOWORD(v12) = v8;
        LOWORD(v9) = v8;
        LOWORD(v10) = v8;
        LOWORD(v7) = v8;
        if (v133 != 32256)
        {
          LOWORD(v13) = v125;
          LOWORD(v14) = v125;
          LOWORD(v11) = v125;
          LOWORD(v12) = v125;
          LOWORD(v9) = v125;
          LOWORD(v10) = v125;
          LOWORD(v7) = v125;
          LOWORD(v8) = v125;
        }
      }
    }
    else
    {
      LOWORD(v13) = v125;
      LOWORD(v14) = v125;
      LOWORD(v11) = v125;
      LOWORD(v12) = v125;
      int32x4_t v195 = vdupq_n_s32(v125);
      LOWORD(v9) = v125;
      LOWORD(v10) = v125;
      LOWORD(v7) = v125;
      LOWORD(v8) = v125;
      a4 = v194;
      a3 = v193;
    }
LABEL_3:
    int16x8_t v15 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v5;
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t result = (char *)v200 + 8 * v16;
    uint64_t v19 = 2 * v17;
    *(_WORD *)&result[v19] = v8;
    int16x8_t v20 = (char *)v200 + 8 * (v16 + 1);
    *(_WORD *)&v20[v19] = v7;
    uint64_t v21 = 2 * (v17 + 1);
    *(_WORD *)&result[v21] = v10;
    *(_WORD *)&v20[v21] = v9;
    unint64_t v22 = (char *)v200 + 8 * (v16 + 2);
    *(_WORD *)&v22[v19] = v12;
    int64x2_t v23 = (char *)v200 + 8 * (v16 + 3);
    *(_WORD *)&v23[v19] = v11;
    *(_WORD *)&v22[v21] = v14;
    *(_WORD *)&v23[v21] = v13;
    ++v5;
  }
  while (v5 != 4);
  int16x4x2_t v178 = (int16x4x2_t)v200[0];
  unint64_t v179 = vextq_s8((int8x16_t)v178, (int8x16_t)v178, 8uLL).u64[0];
  uint64_t v181 = a2;
  int16x8_t v180 = a1;
  vst2_s16(v180, v178);
  int8x16_t v182 = (__int16 *)((char *)v180 + v181);
  int16x4x2_t v183 = (int16x4x2_t)v200[1];
  unint64_t v184 = vextq_s8((int8x16_t)v183, (int8x16_t)v183, 8uLL).u64[0];
  vst2_s16(v182, v183);
  int16x8_t v185 = (__int16 *)((char *)v182 + v181);
  int16x4x2_t v186 = (int16x4x2_t)v200[2];
  unint64_t v187 = vextq_s8((int8x16_t)v186, (int8x16_t)v186, 8uLL).u64[0];
  vst2_s16(v185, v186);
  int16x8_t v188 = (__int16 *)((char *)v185 + v181);
  int16x4x2_t v189 = (int16x4x2_t)v200[3];
  unint64_t v190 = vextq_s8((int8x16_t)v189, (int8x16_t)v189, 8uLL).u64[0];
  vst2_s16(v188, v189);
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(unint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7, double a8, double a9, double a10, double a11, int16x4_t a12)
{
  unint64_t v16 = a3;
  int8x16_t v18 = (int64x2_t *)result;
  if (a5 >= 4) {
    unsigned int v19 = 4;
  }
  else {
    unsigned int v19 = a5;
  }
  if (a6 >= 4) {
    unsigned int v20 = 4;
  }
  else {
    unsigned int v20 = a6;
  }
  if (v19 && v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v19, v20, a7, a8, a9, a10, a11, a12);
    v16 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v21 = a4 + 1;
  if (a5 <= 4) {
    int v22 = 4;
  }
  else {
    int v22 = a5;
  }
  unsigned int v23 = v22 - 4;
  if (v23 >= 4) {
    int v24 = 4;
  }
  else {
    int v24 = v23;
  }
  if (v24) {
    BOOL v25 = v20 == 0;
  }
  else {
    BOOL v25 = 1;
  }
  if (v25)
  {
    *uint64_t v21 = 0;
  }
  else
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v16, v21, v18 + 1, a2, v24, v20, a7, a8, a9, a10, a11, a12);
    v16 += result;
  }
  uint64_t v41 = 4 * a2;
  uint64_t v26 = a4 + 2;
  if (a6 <= 4) {
    int v27 = 4;
  }
  else {
    int v27 = a6;
  }
  unsigned int v28 = v27 - 4;
  if (v28 >= 4) {
    int v29 = 4;
  }
  else {
    int v29 = v28;
  }
  if (v19 && v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v16, v26, (int64x2_t *)((char *)v18 + v41), a2, v19, v29, a7, a8, a9, a10, a11, a12);
    v16 += result;
    unsigned __int8 v30 = a4 + 3;
    if (!v24) {
      goto LABEL_36;
    }
  }
  else
  {
    *uint64_t v26 = 0;
    unsigned __int8 v30 = a4 + 3;
    if (!v24) {
      goto LABEL_36;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v16, v30, (int64x2_t *)((char *)v18 + v41 + 16), a2, v24, v29, a7, a8, a9, a10, a11, a12);
    v16 += result;
    goto LABEL_37;
  }
LABEL_36:
  *unsigned __int8 v30 = 0;
LABEL_37:
  int v31 = a4 + 4;
  if (a5 <= 8) {
    int v32 = 8;
  }
  else {
    int v32 = a5;
  }
  unsigned int v33 = v32 - 8;
  if (v33 >= 4) {
    int v34 = 4;
  }
  else {
    int v34 = v33;
  }
  if (v34 && v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v16, v31, v18 + 2, a2, v34, v20, a7, a8, a9, a10, a11, a12);
    v16 += result;
  }
  else
  {
    *int v31 = 0;
  }
  unint64_t v35 = a4 + 5;
  if (a5 <= 12) {
    int v36 = 12;
  }
  else {
    int v36 = a5;
  }
  unsigned int v37 = v36 - 12;
  if (v37 >= 4) {
    int v38 = 4;
  }
  else {
    int v38 = v37;
  }
  if (v38 && v20)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v16, v35, v18 + 3, a2, v38, v20, a7, a8, a9, a10, a11, a12);
    v16 += result;
    uint64_t v39 = a4 + 6;
    if (!v34) {
      goto LABEL_61;
    }
  }
  else
  {
    *unint64_t v35 = 0;
    uint64_t v39 = a4 + 6;
    if (!v34) {
      goto LABEL_61;
    }
  }
  if (v29)
  {
    uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v16, v39, (int64x2_t *)((char *)v18 + v41 + 32), a2, v34, v29, a7, a8, a9, a10, a11, a12);
    v16 += result;
    int32x2_t v40 = a4 + 7;
    if (!v38) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  *uint64_t v39 = 0;
  int32x2_t v40 = a4 + 7;
  if (!v38)
  {
LABEL_66:
    *int32x2_t v40 = 0;
    return result;
  }
LABEL_62:
  if (!v29) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v16, v40, (int64x2_t *)((char *)v18 + v41 + 48), a2, v38, v29, a7, a8, a9, a10, a11, a12);
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7, int16x4_t a8, int16x4_t a9, double a10, double a11, int16x4_t a12)
{
  int8x16_t v13 = *(int8x16_t *)a3;
  int16x8_t v14 = *(int16x8_t *)(a3 + 16);
  int16x8_t v15 = *(int16x8_t *)(a3 + a4);
  int8x16_t v16 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a3, 0);
  int8x16_t v17 = (int8x16_t)vsubq_s16(*(int16x8_t *)a3, (int16x8_t)v16);
  int16x8_t v18 = vsubq_s16(v15, (int16x8_t)v16);
  int16x8_t v19 = vsubq_s16(v14, (int16x8_t)v16);
  int16x8_t v20 = vsubq_s16(*(int16x8_t *)(a3 + a4 + 16), (int16x8_t)v16);
  a8.i16[0] = vmaxvq_s16((int16x8_t)v17);
  a9.i16[0] = vminvq_s16((int16x8_t)v17);
  int16x8_t v21 = vdupq_lane_s16(a8, 0);
  int16x8_t v22 = vdupq_lane_s16(a9, 0);
  v23.i64[0] = 0x8000800080008000;
  v23.i64[1] = 0x8000800080008000;
  int16x8_t v24 = vmaxq_s16(v21, v23);
  v25.i64[0] = 0x8000800080008000;
  v25.i64[1] = 0x8000800080008000;
  int16x8_t v26 = vminq_s16(v22, v25);
  int16x8_t v27 = vzip1q_s16(v21, v22);
  int8x16_t v28 = (int8x16_t)vceqzq_s16(v27);
  v29.i64[0] = 0x10001000100010;
  v29.i64[1] = 0x10001000100010;
  int16x8_t v30 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, vclsq_s16(v27)), v28);
  v28.i16[0] = vmaxvq_s16(v18);
  a12.i16[0] = vminvq_s16(v18);
  int16x8_t v31 = vdupq_lane_s16(*(int16x4_t *)v28.i8, 0);
  int16x8_t v32 = vdupq_lane_s16(a12, 0);
  int16x8_t v33 = vpmaxq_s16(v30, v30);
  int16x8_t v34 = vmaxq_s16(v24, v31);
  int16x8_t v35 = vminq_s16(v26, v32);
  int16x8_t v36 = vzip1q_s16(v31, v32);
  int16x8_t v37 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, vclsq_s16(v36)), (int8x16_t)vceqzq_s16(v36));
  int16x8_t v38 = vpmaxq_s16(v37, v37);
  v37.i16[0] = vmaxvq_s16(v19);
  int16x8_t v39 = vdupq_lane_s16(*(int16x4_t *)v37.i8, 0);
  v31.i16[0] = vminvq_s16(v19);
  int16x8_t v40 = vdupq_lane_s16(*(int16x4_t *)v31.i8, 0);
  int16x8_t v41 = vmaxq_s16(v34, v39);
  int16x8_t v42 = vminq_s16(v35, v40);
  int16x8_t v43 = vzip1q_s16(v39, v40);
  int8x16_t v44 = (int8x16_t)vceqzq_s16(v43);
  int16x8_t v45 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, vclsq_s16(v43)), v44);
  int16x8_t v46 = vpmaxq_s16(v45, v45);
  v44.i16[0] = vmaxvq_s16(v20);
  v40.i16[0] = vminvq_s16(v20);
  int16x8_t v47 = vdupq_lane_s16(*(int16x4_t *)v44.i8, 0);
  int16x8_t v48 = vdupq_lane_s16(*(int16x4_t *)v40.i8, 0);
  int16x8_t v49 = vmaxq_s16(v41, v47);
  int16x8_t v50 = vminq_s16(v42, v48);
  int16x8_t v51 = vzip1q_s16(v47, v48);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v29, vclsq_s16(v51)), (int8x16_t)vceqzq_s16(v51));
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  int8x16_t v54 = (int8x16_t)vmaxq_s16(vmaxq_s16(v33, v38), vmaxq_s16(v46, v53));
  int16x8_t v55 = vclzq_s16(vsubq_s16(v49, v50));
  int8x16_t v56 = (int8x16_t)vsubq_s16(v29, v55);
  int8x16_t v57 = (int8x16_t)vcgtq_s16((int16x8_t)v54, (int16x8_t)v56);
  int8x16_t v58 = vbslq_s8(v57, v56, v54);
  if (vmaxvq_s16((int16x8_t)v58))
  {
    v59.i64[0] = -1;
    v59.i64[1] = -1;
    v60.i64[0] = 0xF000F000F000FLL;
    v60.i64[1] = 0xF000F000F000FLL;
    int8x16_t v61 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v59, vsubq_s16(v60, v55)), v50), v57);
    v62.i64[0] = 0x8000800080008;
    v62.i64[1] = 0x8000800080008;
    v59.i64[0] = 0x3000300030003;
    v59.i64[1] = 0x3000300030003;
    int16x8_t v63 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v58, v33), v59), (int16x8_t)0);
    int16x8_t v64 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v58, v38), v59), (int16x8_t)0);
    int16x8_t v65 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v58, v46), v59), (int16x8_t)0);
    int8x16_t v66 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v58, v53), v59), (int16x8_t)0);
    int8x16_t v67 = (int8x16_t)vsubq_s16((int16x8_t)v58, v63);
    int8x16_t v68 = (int8x16_t)vsubq_s16((int16x8_t)v58, v64);
    int8x16_t v69 = (int8x16_t)vsubq_s16((int16x8_t)v58, v65);
    int8x16_t v70 = (int8x16_t)vsubq_s16((int16x8_t)v58, (int16x8_t)v66);
    int8x16_t v71 = (int8x16_t)vceqq_s16(vaddq_s16((int16x8_t)v66, v65), vnegq_s16(vaddq_s16(v63, v64)));
    v66.i64[0] = 0x4000400040004;
    v66.i64[1] = 0x4000400040004;
    int8x16_t v72 = vbicq_s8(v66, v71);
    int8x16_t v73 = vorrq_s8(v72, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v58), (int8x16_t)v59), vandq_s8(v57, v62)));
    if (a5 >= 2)
    {
      int8x16_t v363 = v61;
      v77.i32[0] = v13.u16[2];
      v77.i32[1] = v13.u16[1];
      int32x2_t v78 = vshl_n_s32(vsub_s32(v77, vdup_n_s32(v13.u16[0])), 0x18uLL);
      int v79 = v78.i32[1] >> 24;
      int16x4_t v80 = (int16x4_t)vshl_s32(v78, (int32x2_t)0xFFFFFFEAFFFFFFE9);
      unsigned __int32 v81 = v78.i32[0];
      v82.i64[0] = 0xFFFFFFFF00000000;
      v82.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v83 = vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v78.i32[0] >> 24), v82), vdupq_n_s16(v78.i32[1] >> 24), (int16x8_t)xmmword_242EA76B0);
      int16x8_t v84 = vsubq_s16((int16x8_t)v17, v83);
      int8x16_t v364 = (int8x16_t)v18;
      int8x16_t v365 = (int8x16_t)v20;
      int8x16_t v85 = (int8x16_t)vsubq_s16(vaddq_s16(vdupq_n_s16(-v80.i32[0]), v18), v83);
      int8x16_t v86 = (int8x16_t)vsubq_s16(vaddq_s16(vdupq_n_s16(-v80.i32[1]), v19), v83);
      int16x8_t v87 = vaddq_s16(vdupq_n_s16(-v80.i32[0] - v80.i32[1]), v20);
      int8x16_t v88 = (int8x16_t)vsubq_s16(v87, v83);
      v87.i16[0] = vmaxvq_s16(v84);
      int8x16_t v361 = (int8x16_t)v84;
      v80.i16[0] = vminvq_s16(v84);
      int16x8_t v89 = vdupq_lane_s16(*(int16x4_t *)v87.i8, 0);
      int16x8_t v90 = vdupq_lane_s16(v80, 0);
      v84.i64[0] = 0x8000800080008000;
      v84.i64[1] = 0x8000800080008000;
      int16x8_t v91 = vmaxq_s16(v89, v84);
      v84.i64[0] = 0x8000800080008000;
      v84.i64[1] = 0x8000800080008000;
      int16x8_t v92 = vminq_s16(v90, v84);
      int16x8_t v93 = vzip1q_s16(v89, v90);
      int8x16_t v94 = (int8x16_t)vceqzq_s16(v93);
      v95.i64[0] = 0x10001000100010;
      v95.i64[1] = 0x10001000100010;
      int16x8_t v96 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v95, vclsq_s16(v93)), v94);
      int16x8_t v97 = vpmaxq_s16(v96, v96);
      v94.i16[0] = vmaxvq_s16((int16x8_t)v85);
      v12.i16[0] = vminvq_s16((int16x8_t)v85);
      int16x8_t v98 = vdupq_lane_s16(*(int16x4_t *)v94.i8, 0);
      int16x8_t v99 = vdupq_lane_s16(v12, 0);
      int16x8_t v100 = vmaxq_s16(v91, v98);
      int16x8_t v101 = vminq_s16(v92, v99);
      int16x8_t v102 = vzip1q_s16(v98, v99);
      int8x16_t v103 = (int8x16_t)vceqzq_s16(v102);
      int16x8_t v104 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v95, vclsq_s16(v102)), v103);
      v103.i16[0] = vmaxvq_s16((int16x8_t)v86);
      int8x16_t v105 = (int8x16_t)v19;
      v19.i16[0] = vminvq_s16((int16x8_t)v86);
      int16x8_t v106 = vdupq_lane_s16(*(int16x4_t *)v103.i8, 0);
      int16x8_t v107 = vdupq_lane_s16(*(int16x4_t *)v19.i8, 0);
      int16x8_t v108 = vpmaxq_s16(v104, v104);
      int16x8_t v109 = vmaxq_s16(v100, v106);
      int16x8_t v110 = vminq_s16(v101, v107);
      int16x8_t v111 = vzip1q_s16(v106, v107);
      int8x16_t v112 = (int8x16_t)vceqzq_s16(v111);
      int16x8_t v113 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v95, vclsq_s16(v111)), v112);
      int8x16_t v114 = v70;
      int16x8_t v115 = vpmaxq_s16(v113, v113);
      v113.i16[0] = vmaxvq_s16((int16x8_t)v88);
      int16x8_t v116 = vdupq_lane_s16(*(int16x4_t *)v113.i8, 0);
      v112.i16[0] = vminvq_s16((int16x8_t)v88);
      int16x8_t v117 = vdupq_lane_s16(*(int16x4_t *)v112.i8, 0);
      int16x8_t v118 = vminq_s16(v110, v117);
      int16x8_t v119 = vzip1q_s16(v116, v117);
      int16x8_t v120 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v95, vclsq_s16(v119)), (int8x16_t)vceqzq_s16(v119));
      int16x8_t v121 = vpmaxq_s16(v120, v120);
      int8x16_t v122 = (int8x16_t)vmaxq_s16(vmaxq_s16(v97, v108), vmaxq_s16(v115, v121));
      int16x8_t v123 = vclzq_s16(vsubq_s16(vmaxq_s16(v109, v116), v118));
      int8x16_t v124 = (int8x16_t)vsubq_s16(v95, v123);
      int8x16_t v125 = (int8x16_t)vcgtq_s16((int16x8_t)v122, (int16x8_t)v124);
      int16x8_t v126 = (int16x8_t)vbslq_s8(v125, v124, v122);
      v122.i64[0] = 0x1000100010001;
      v122.i64[1] = 0x1000100010001;
      int8x16_t v127 = v67;
      int8x16_t v128 = (int8x16_t)vmaxq_s16(v126, (int16x8_t)v122);
      v129.i64[0] = 0x3000300030003;
      v129.i64[1] = 0x3000300030003;
      int8x16_t v130 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v128, v97), (int16x8_t)v129), (int16x8_t)0);
      int16x8_t v131 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v128, v108), (int16x8_t)v129), (int16x8_t)0);
      int16x8_t v132 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v128, v115), (int16x8_t)v129), (int16x8_t)0);
      int16x8_t v133 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v128, v121), (int16x8_t)v129), (int16x8_t)0);
      int8x16_t v134 = (int8x16_t)vsubq_s16((int16x8_t)v128, (int16x8_t)v130);
      int8x16_t v135 = (int8x16_t)vsubq_s16((int16x8_t)v128, v131);
      int8x16_t v136 = (int8x16_t)vsubq_s16((int16x8_t)v128, v132);
      int8x16_t v137 = (int8x16_t)vsubq_s16((int16x8_t)v128, v133);
      int8x16_t v138 = (int8x16_t)vceqq_s16(vaddq_s16(v133, v132), vnegq_s16(vaddq_s16((int16x8_t)v130, v131)));
      v130.i64[0] = 0x4000400040004;
      v130.i64[1] = 0x4000400040004;
      int8x16_t v139 = vbicq_s8(v130, v138);
      int16x8_t v140 = (int16x8_t)vbslq_s8(v125, (int8x16_t)vaddq_s16((int16x8_t)v128, v95), (int8x16_t)v95);
      v141.i64[0] = 0x7000700070007;
      v141.i64[1] = 0x7000700070007;
      int16x8_t v142 = (int16x8_t)vandq_s8(v56, v57);
      int16x8_t v143 = vaddq_s16((int16x8_t)v72, (int16x8_t)v72);
      int16x8_t v144 = vmulq_s16((int16x8_t)v127, v141);
      int16x8_t v145 = vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v69, (int16x8_t)v68), (int16x8_t)v114), 3uLL);
      int8x16_t v146 = (int8x16_t)vaddq_s16(vaddq_s16(vaddq_s16(v144, v142), v145), v143);
      int16x8_t v147 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16((int16x8_t)v146, vaddq_s16(vaddq_s16(vmlaq_s16(v140, (int16x8_t)v134, v141), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v136, (int16x8_t)v135), (int16x8_t)v137), 3uLL)), vaddq_s16((int16x8_t)v139, (int16x8_t)v139))), 0);
      v140.i16[0] = vaddvq_s16(v147);
      int v148 = v140.u16[0];
      unint64_t v74 = v79 | HIWORD(v81);
      if (v140.i16[0])
      {
        v149.i64[0] = 0x2000200020002;
        v149.i64[1] = 0x2000200020002;
        v150.i64[0] = 0xA000A000A000ALL;
        v150.i64[1] = 0xA000A000A000ALL;
        int8x16_t v151 = vbslq_s8(v125, v150, v149);
        v150.i64[0] = -1;
        v150.i64[1] = -1;
        int8x16_t v152 = vorrq_s8(v139, v151);
        v153.i64[0] = 0xF000F000F000FLL;
        v153.i64[1] = 0xF000F000F000FLL;
        int8x16_t v154 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16((int16x8_t)v150, vsubq_s16(v153, v123)), v118), v125);
        int8x16_t v146 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v147, 0xFuLL));
        v143.i64[0] = v361.i64[0];
        int8x16_t v360 = vbslq_s8(v146, v361, v17);
        int8x16_t v364 = vbslq_s8(v146, v85, v364);
        int8x16_t v362 = vbslq_s8(v146, v86, v105);
        int8x16_t v365 = vbslq_s8(v146, v88, v365);
        int8x16_t v127 = vbslq_s8(v146, v134, v127);
        int8x16_t v68 = vbslq_s8(v146, v135, v68);
        int8x16_t v69 = vbslq_s8(v146, v136, v69);
        int16x8_t v155 = (int16x8_t)vbslq_s8(v146, v137, v114);
        int8x16_t v61 = vbslq_s8(v146, v154, v363);
        int8x16_t v58 = vbslq_s8(v146, v128, v58);
        int8x16_t v73 = vbslq_s8(v146, v152, v73);
        int16x8_t v144 = vmulq_s16((int16x8_t)v127, v141);
        int16x8_t v145 = vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v69, (int16x8_t)v68), v155), 3uLL);
        int8x16_t v70 = (int8x16_t)v155;
      }
      else
      {
        int8x16_t v360 = v17;
        int8x16_t v362 = v105;
        int8x16_t v70 = v114;
        int8x16_t v61 = v363;
      }
      int8x16_t v67 = v127;
      v156.i64[0] = 0x7000700070007;
      v156.i64[1] = 0x7000700070007;
      int16x8_t v157 = vsubq_s16((int16x8_t)v13, (int16x8_t)vqtbl1q_s8(v13, (int8x16_t)xmmword_242EA7520));
      int8x16_t v158 = *(int8x16_t *)(a3 + a4);
      v158.i16[7] = HIWORD(*(_OWORD *)a3);
      int8x16_t v159 = (int8x16_t)vsubq_s16(v15, (int16x8_t)vqtbl1q_s8(v158, (int8x16_t)xmmword_242EA7530));
      int8x16_t v160 = *(int8x16_t *)(a3 + 16);
      v160.i16[7] = HIWORD(*(_OWORD *)a3);
      int8x16_t v161 = (int8x16_t)vsubq_s16(v14, (int16x8_t)vqtbl1q_s8(v160, (int8x16_t)xmmword_242EA7540));
      int8x16_t v162 = *(int8x16_t *)(a3 + a4 + 16);
      v162.i16[7] = HIWORD(*(_OWORD *)a3);
      int16x4_t v163 = (int16x4_t)0x100010001000F0ELL;
      int8x16_t v164 = (int8x16_t)v157;
      v164.i16[0] = v157.i16[7];
      v164.i16[7] = v157.i16[0];
      v157.i16[0] = vmaxvq_s16((int16x8_t)v164);
      v163.i16[0] = vminvq_s16((int16x8_t)v164);
      int16x8_t v165 = vdupq_lane_s16(*(int16x4_t *)v157.i8, 0);
      int16x8_t v166 = vdupq_lane_s16(v163, 0);
      int8x16_t v167 = (int8x16_t)vsubq_s16(*(int16x8_t *)(a3 + a4 + 16), (int16x8_t)vqtbl1q_s8(v162, (int8x16_t)xmmword_242EA7550));
      v162.i64[0] = 0x8000800080008000;
      v162.i64[1] = 0x8000800080008000;
      int16x8_t v168 = vmaxq_s16(v165, (int16x8_t)v162);
      v169.i64[0] = 0x8000800080008000;
      v169.i64[1] = 0x8000800080008000;
      int16x8_t v170 = vminq_s16(v166, v169);
      int16x8_t v171 = vzip1q_s16(v165, v166);
      int8x16_t v172 = (int8x16_t)vceqzq_s16(v171);
      v173.i64[0] = 0x10001000100010;
      v173.i64[1] = 0x10001000100010;
      int16x8_t v174 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v173, vclsq_s16(v171)), v172);
      int16x8_t v175 = vpmaxq_s16(v174, v174);
      v172.i16[0] = vmaxvq_s16((int16x8_t)v159);
      int16x8_t v176 = vdupq_lane_s16(*(int16x4_t *)v172.i8, 0);
      v146.i16[0] = vminvq_s16((int16x8_t)v159);
      int16x8_t v177 = vdupq_lane_s16(*(int16x4_t *)v146.i8, 0);
      int16x8_t v178 = vmaxq_s16(v168, v176);
      int16x8_t v179 = vminq_s16(v170, v177);
      int16x8_t v180 = vzip1q_s16(v176, v177);
      int8x16_t v181 = (int8x16_t)vceqzq_s16(v180);
      int16x8_t v182 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v173, vclsq_s16(v180)), v181);
      int16x8_t v183 = vpmaxq_s16(v182, v182);
      v181.i16[0] = vmaxvq_s16((int16x8_t)v161);
      v143.i16[0] = vminvq_s16((int16x8_t)v161);
      int16x8_t v184 = vdupq_lane_s16(*(int16x4_t *)v181.i8, 0);
      int16x8_t v185 = vdupq_lane_s16(*(int16x4_t *)v143.i8, 0);
      int16x8_t v186 = vmaxq_s16(v178, v184);
      int16x8_t v187 = vminq_s16(v179, v185);
      int16x8_t v188 = vzip1q_s16(v184, v185);
      int8x16_t v189 = (int8x16_t)vceqzq_s16(v188);
      int16x8_t v190 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v173, vclsq_s16(v188)), v189);
      v189.i16[0] = vmaxvq_s16((int16x8_t)v167);
      v125.i16[0] = vminvq_s16((int16x8_t)v167);
      int16x8_t v191 = vdupq_lane_s16(*(int16x4_t *)v189.i8, 0);
      int16x8_t v192 = vdupq_lane_s16(*(int16x4_t *)v125.i8, 0);
      int16x8_t v193 = vpmaxq_s16(v190, v190);
      int16x8_t v194 = vmaxq_s16(v186, v191);
      int16x8_t v195 = vminq_s16(v187, v192);
      int16x8_t v196 = vzip1q_s16(v191, v192);
      int16x8_t v197 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v173, vclsq_s16(v196)), (int8x16_t)vceqzq_s16(v196));
      int16x8_t v198 = vpmaxq_s16(v197, v197);
      int8x16_t v199 = (int8x16_t)vmaxq_s16(vmaxq_s16(v175, v183), vmaxq_s16(v193, v198));
      int16x8_t v200 = vclzq_s16(vsubq_s16(v194, v195));
      int8x16_t v201 = (int8x16_t)vsubq_s16(v173, v200);
      int8x16_t v202 = (int8x16_t)vcgtq_s16((int16x8_t)v199, (int16x8_t)v201);
      int8x16_t v203 = vbslq_s8(v202, v201, v199);
      int16x8_t v204 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v203, v175), (int16x8_t)v129), (int16x8_t)0);
      int8x16_t v205 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v203, v183), (int16x8_t)v129), (int16x8_t)0);
      int16x8_t v206 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v203, v193), (int16x8_t)v129), (int16x8_t)0);
      int16x8_t v207 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v203, v198), (int16x8_t)v129), (int16x8_t)0);
      int8x16_t v208 = (int8x16_t)vsubq_s16((int16x8_t)v203, v204);
      int8x16_t v209 = (int8x16_t)vsubq_s16((int16x8_t)v203, (int16x8_t)v205);
      int8x16_t v210 = (int8x16_t)vsubq_s16((int16x8_t)v203, v206);
      int8x16_t v211 = (int8x16_t)vsubq_s16((int16x8_t)v203, v207);
      int8x16_t v212 = (int8x16_t)vceqq_s16(vaddq_s16(v207, v206), vnegq_s16(vaddq_s16(v204, (int16x8_t)v205)));
      v205.i64[0] = 0x4000400040004;
      v205.i64[1] = 0x4000400040004;
      int8x16_t v213 = vbicq_s8(v205, v212);
      v205.i64[0] = 0x8000800080008;
      v205.i64[1] = 0x8000800080008;
      v214.i64[0] = 0x2000200020002;
      v214.i64[1] = 0x2000200020002;
      int16x8_t v215 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v58, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v73, v205))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v73, (int16x8_t)v73), v205)), vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v73, v129), (int16x8_t)v214), (int8x16_t)v173), v144)), v145), vaddq_s16(
                                          vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v201, v202), (int16x8_t)v208, v156), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v210, (int16x8_t)v209), (int16x8_t)v211), 3uLL)), vaddq_s16((int16x8_t)v213, (int16x8_t)v213))), 0);
      v201.i16[0] = vaddvq_s16(v215);
      int v216 = v201.u16[0];
      if (v201.i16[0])
      {
        int8x16_t v217 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v203), v214);
        v218.i64[0] = 0x9000900090009;
        v218.i64[1] = 0x9000900090009;
        v219.i64[0] = -1;
        v219.i64[1] = -1;
        int8x16_t v220 = vorrq_s8(vorrq_s8(v217, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v202, v218), (int16x8_t)vmvnq_s8(v202))), v213);
        v217.i64[0] = 0xF000F000F000FLL;
        v217.i64[1] = 0xF000F000F000FLL;
        int8x16_t v221 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v219, vsubq_s16((int16x8_t)v217, v200)), v195), v202);
        int8x16_t v222 = (int8x16_t)vcltzq_s16(vshlq_n_s16(v215, 0xFuLL));
        v16.i16[0] = vbslq_s8(v222, vextq_s8(v13, v13, 0xEuLL), v16).u16[0];
        int8x16_t v17 = vbslq_s8(v222, v164, v360);
        int16x8_t v18 = (int16x8_t)vbslq_s8(v222, v159, v364);
        int16x8_t v19 = (int16x8_t)vbslq_s8(v222, v161, v362);
        int16x8_t v20 = (int16x8_t)vbslq_s8(v222, v167, v365);
        int8x16_t v67 = vbslq_s8(v222, v208, v67);
        int8x16_t v68 = vbslq_s8(v222, v209, v68);
        int8x16_t v69 = vbslq_s8(v222, v210, v69);
        int8x16_t v70 = vbslq_s8(v222, v211, v70);
        int8x16_t v61 = vbslq_s8(v222, v221, v61);
        int8x16_t v58 = vbslq_s8(v222, v203, v58);
        int8x16_t v73 = vbslq_s8(v222, v220, v73);
      }
      else
      {
        int16x8_t v18 = (int16x8_t)v364;
        int16x8_t v20 = (int16x8_t)v365;
        int8x16_t v17 = v360;
        int16x8_t v19 = (int16x8_t)v362;
      }
      if (v148) {
        BOOL v223 = v216 == 0;
      }
      else {
        BOOL v223 = 0;
      }
      char v75 = v223;
    }
    else
    {
      unint64_t v74 = 0;
      char v75 = 0;
    }
    v224.i64[0] = 0x8000800080008;
    v224.i64[1] = 0x8000800080008;
    int16x8_t v225 = (int16x8_t)vandq_s8(v73, v224);
    v226.i64[0] = 0x3000300030003;
    v226.i64[1] = 0x3000300030003;
    v227.i64[0] = 0x2000200020002;
    v227.i64[1] = 0x2000200020002;
    int8x16_t v228 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v73, v226), v227);
    v227.i64[0] = 0x10001000100010;
    v227.i64[1] = 0x10001000100010;
    if ((unint64_t)((__int16)(7 * v67.i16[0]
                                    + 8 * vaddq_s16((int16x8_t)v69, vaddq_s16((int16x8_t)v68, (int16x8_t)v70)).u16[0]
                                    + ((2 * v73.i16[0]) & 8)
                                    + vbicq_s8(v58, (int8x16_t)vceqzq_s16(v225)).u16[0]
                                    + vandq_s8(v228, (int8x16_t)v227).u16[0])
                          - 235) <= 0xFFFFFFFFFFFFFEF7)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 32;
    }
    else
    {
      int16x8_t v229 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v230 = 8 * (a1 & 7);
      if (v230) {
        uint64_t v231 = *v229 & ~(-1 << v230);
      }
      else {
        uint64_t v231 = 0;
      }
      if (v58.i16[0]) {
        uint64_t v232 = (16 * v58.i8[0] - 16) & 0xF0;
      }
      else {
        uint64_t v232 = 0;
      }
      *a2 = v73.i8[0] << 6;
      unint64_t v233 = (v232 & 0xFFFFFFFFFF0000F0 | ((unint64_t)v16.u16[0] << 8) | v73.i8[0] & 0xF) >> 2;
      unint64_t v234 = (v233 << v230) | v231;
      if (v230 >= 0x2A)
      {
        *int16x8_t v229 = v234;
        unint64_t v234 = v233 >> (-8 * (a1 & 7u));
      }
      unint64_t v235 = v230 + 22;
      int8x16_t v236 = (int8x16_t)vsubq_s16((int16x8_t)v58, (int16x8_t)v67);
      int8x16_t v237 = (int8x16_t)vsubq_s16((int16x8_t)v58, (int16x8_t)v68);
      int8x16_t v238 = (int8x16_t)vsubq_s16((int16x8_t)v58, (int16x8_t)v69);
      int8x16_t v239 = (int8x16_t)vsubq_s16((int16x8_t)v58, (int16x8_t)v70);
      *(uint8x8_t *)v236.i8 = vqmovn_u16((uint16x8_t)v236);
      *(uint8x8_t *)v237.i8 = vqmovn_u16((uint16x8_t)v237);
      *(uint8x8_t *)v238.i8 = vqmovn_u16((uint16x8_t)v238);
      *(uint8x8_t *)v239.i8 = vqmovn_u16((uint16x8_t)v239);
      v236.i32[0] = vzip1q_s16((int16x8_t)vzip1q_s8(v236, v237), (int16x8_t)vzip1q_s8(v238, v239)).u32[0];
      v238.i64[0] = 0x202020202020202;
      v238.i64[1] = 0x202020202020202;
      int8x16_t v240 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v73.i8, (int8x8_t)0x4000400040004)))), v238);
      v238.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v238.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v239.i64[0] = -1;
      v239.i64[1] = -1;
      uint8x16_t v241 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v239, (uint8x16_t)vorrq_s8(v240, v238)), (int8x16_t)v236.u32[0]);
      int16x8_t v242 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v240.i8);
      uint16x8_t v243 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v241.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v242)), (int16x8_t)vmovl_high_u8(v241));
      uint16x8_t v244 = (uint16x8_t)vpaddq_s16(v242, (int16x8_t)vmovl_high_u8((uint8x16_t)v240));
      int32x4_t v245 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v244.i8);
      int32x4_t v246 = (int32x4_t)vmovl_high_u16(v244);
      int32x4_t v247 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v243.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v245)), (int32x4_t)vshlq_u32(vmovl_high_u16(v243), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v246)));
      int32x4_t v248 = vpaddq_s32(v245, v246);
      v249.i64[0] = v247.u32[0];
      v249.i64[1] = v247.u32[1];
      uint64x2_t v250 = (uint64x2_t)v249;
      v249.i64[0] = v247.u32[2];
      v249.i64[1] = v247.u32[3];
      uint64x2_t v251 = (uint64x2_t)v249;
      v249.i64[0] = v248.u32[0];
      v249.i64[1] = v248.u32[1];
      int64x2_t v252 = v249;
      v249.i64[0] = v248.u32[2];
      v249.i64[1] = v248.u32[3];
      int64x2_t v253 = vpaddq_s64((int64x2_t)vshlq_u64(v250, (uint64x2_t)vzip1q_s64((int64x2_t)0, v252)), (int64x2_t)vshlq_u64(v251, (uint64x2_t)vzip1q_s64((int64x2_t)0, v249)));
      int64x2_t v254 = vpaddq_s64(v252, v249);
      uint64_t v255 = (v230 + 22) & 0x3E;
      unint64_t v256 = (v253.i64[0] << v255) | v234;
      if ((unint64_t)(v254.i64[0] + v255) >= 0x40)
      {
        *(void *)((char *)v229 + ((v235 >> 3) & 8)) = v256;
        unint64_t v256 = (unint64_t)v253.i64[0] >> -(char)v255;
      }
      unint64_t v257 = v254.i64[0] + v235;
      unint64_t v258 = v256 | (v253.i64[1] << v257);
      if ((v257 & 0x3F) + v254.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v257 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v258;
        unint64_t v258 = (unint64_t)v253.i64[1] >> -(v257 & 0x3F);
        if ((v257 & 0x3F) == 0) {
          unint64_t v258 = 0;
        }
      }
      int8x16_t v259 = (int8x16_t)vceqq_s16((int16x8_t)v58, (int16x8_t)v67);
      unint64_t v260 = v257 + v254.i64[1];
      v261.i64[0] = -1;
      v261.i64[1] = -1;
      int16x8_t v262 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v225, v225), (int8x16_t)0, 0xEuLL), v58);
      v263.i64[0] = 0xF000F000F000FLL;
      v263.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v264 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v261, (uint16x8_t)vaddq_s16(v262, v263)), v61);
      int32x4_t v265 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v262.i8);
      int32x4_t v266 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v264.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v265)), (int32x4_t)vmovl_high_u16(v264));
      int32x4_t v267 = vpaddq_s32(v265, (int32x4_t)vmovl_high_u16((uint16x8_t)v262));
      v268.i64[0] = v266.u32[0];
      v268.i64[1] = v266.u32[1];
      uint64x2_t v269 = (uint64x2_t)v268;
      v268.i64[0] = v266.u32[2];
      v268.i64[1] = v266.u32[3];
      uint64x2_t v270 = (uint64x2_t)v268;
      v268.i64[0] = v267.u32[0];
      v268.i64[1] = v267.u32[1];
      int64x2_t v271 = v268;
      v268.i64[0] = v267.u32[2];
      v268.i64[1] = v267.u32[3];
      int64x2_t v272 = vpaddq_s64((int64x2_t)vshlq_u64(v269, (uint64x2_t)vzip1q_s64((int64x2_t)0, v271)), (int64x2_t)vshlq_u64(v270, (uint64x2_t)vzip1q_s64((int64x2_t)0, v268)));
      int64x2_t v273 = vpaddq_s64(v271, v268);
      unint64_t v274 = (v272.i64[0] << v260) | v258;
      if (v273.i64[0] + (v260 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v229 + ((v260 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v274;
        unint64_t v274 = (unint64_t)v272.i64[0] >> -(v260 & 0x3F);
        if ((v260 & 0x3F) == 0) {
          unint64_t v274 = 0;
        }
      }
      int16x8_t v275 = (int16x8_t)vandq_s8(v61, v259);
      uint64_t v276 = v273.i64[1];
      unint64_t v277 = v273.i64[0] + v260;
      unint64_t v278 = v274 | (v272.i64[1] << v277);
      if ((v277 & 0x3F) + v273.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v277 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v278;
        unint64_t v278 = (unint64_t)v272.i64[1] >> -(v277 & 0x3F);
        if ((v277 & 0x3F) == 0) {
          unint64_t v278 = 0;
        }
      }
      int8x16_t v279 = (int8x16_t)vceqq_s16((int16x8_t)v58, (int16x8_t)v68);
      int8x16_t v280 = (int8x16_t)vaddq_s16(v275, (int16x8_t)v17);
      unint64_t v281 = v277 + v276;
      if (v75)
      {
        v278 |= v74 << v281;
        if ((v281 & 0x3F) >= 0x30)
        {
          *(void *)((char *)v229 + ((v281 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v278;
          unint64_t v278 = v74 >> -(v281 & 0x3F);
        }
        v281 += 16;
      }
      int16x8_t v282 = (int16x8_t)vandq_s8(v61, v279);
      int16x8_t v283 = (int16x8_t)vextq_s8((int8x16_t)0, v67, 0xEuLL);
      v284.i64[0] = 0xF000F000F000FLL;
      v284.i64[1] = 0xF000F000F000FLL;
      v285.i64[0] = -1;
      v285.i64[1] = -1;
      uint16x8_t v286 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v285, (uint16x8_t)vaddq_s16(v283, v284)), v280);
      int32x4_t v287 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v283.i8);
      int32x4_t v288 = (int32x4_t)vmovl_high_u16((uint16x8_t)v283);
      int32x4_t v289 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v286.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v287)), (int32x4_t)vshlq_u32(vmovl_high_u16(v286), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v288)));
      int32x4_t v290 = vpaddq_s32(v287, v288);
      v291.i64[0] = v289.u32[0];
      v291.i64[1] = v289.u32[1];
      uint64x2_t v292 = (uint64x2_t)v291;
      v291.i64[0] = v289.u32[2];
      v291.i64[1] = v289.u32[3];
      uint64x2_t v293 = (uint64x2_t)v291;
      v291.i64[0] = v290.u32[0];
      v291.i64[1] = v290.u32[1];
      int64x2_t v294 = v291;
      v291.i64[0] = v290.u32[2];
      v291.i64[1] = v290.u32[3];
      int64x2_t v295 = vpaddq_s64((int64x2_t)vshlq_u64(v292, (uint64x2_t)vzip1q_s64((int64x2_t)0, v294)), (int64x2_t)vshlq_u64(v293, (uint64x2_t)vzip1q_s64((int64x2_t)0, v291)));
      int64x2_t v296 = vpaddq_s64(v294, v291);
      unint64_t v297 = (v295.i64[0] << v281) | v278;
      if (v296.i64[0] + (v281 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v229 + ((v281 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v297;
        unint64_t v297 = (unint64_t)v295.i64[0] >> -(v281 & 0x3F);
        if ((v281 & 0x3F) == 0) {
          unint64_t v297 = 0;
        }
      }
      int8x16_t v298 = (int8x16_t)vceqq_s16((int16x8_t)v58, (int16x8_t)v69);
      int8x16_t v299 = (int8x16_t)vaddq_s16(v18, v282);
      unint64_t v300 = v296.i64[0] + v281;
      uint64_t v301 = (v296.i64[0] + v281) & 0x3F;
      unint64_t v302 = v297 | (v295.i64[1] << v300);
      if ((v300 & 0x3F) + v296.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v300 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v295.i64[1] >> -(char)v301;
        if (!v301) {
          unint64_t v302 = 0;
        }
      }
      int16x8_t v303 = (int16x8_t)vandq_s8(v61, v298);
      unint64_t v304 = v300 + v296.i64[1];
      v305.i64[0] = 0xF000F000F000FLL;
      v305.i64[1] = 0xF000F000F000FLL;
      v306.i64[0] = -1;
      v306.i64[1] = -1;
      uint16x8_t v307 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v306, (uint16x8_t)vaddq_s16((int16x8_t)v68, v305)), v299);
      int32x4_t v308 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v68.i8);
      int32x4_t v309 = (int32x4_t)vmovl_high_u16((uint16x8_t)v68);
      int32x4_t v310 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v307.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v308)), (int32x4_t)vshlq_u32(vmovl_high_u16(v307), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v309)));
      int32x4_t v311 = vpaddq_s32(v308, v309);
      v312.i64[0] = v310.u32[0];
      v312.i64[1] = v310.u32[1];
      uint64x2_t v313 = (uint64x2_t)v312;
      v312.i64[0] = v310.u32[2];
      v312.i64[1] = v310.u32[3];
      uint64x2_t v314 = (uint64x2_t)v312;
      v312.i64[0] = v311.u32[0];
      v312.i64[1] = v311.u32[1];
      int64x2_t v315 = v312;
      v312.i64[0] = v311.u32[2];
      v312.i64[1] = v311.u32[3];
      int64x2_t v316 = vpaddq_s64((int64x2_t)vshlq_u64(v313, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)), (int64x2_t)vshlq_u64(v314, (uint64x2_t)vzip1q_s64((int64x2_t)0, v312)));
      int64x2_t v317 = vpaddq_s64(v315, v312);
      unint64_t v318 = (v316.i64[0] << v304) | v302;
      if (v317.i64[0] + (v304 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v229 + ((v304 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v318;
        unint64_t v318 = (unint64_t)v316.i64[0] >> -(v304 & 0x3F);
        if ((v304 & 0x3F) == 0) {
          unint64_t v318 = 0;
        }
      }
      int8x16_t v319 = (int8x16_t)vceqq_s16((int16x8_t)v58, (int16x8_t)v70);
      int8x16_t v320 = (int8x16_t)vaddq_s16(v19, v303);
      unint64_t v321 = v317.i64[0] + v304;
      unint64_t v322 = v318 | (v316.i64[1] << v321);
      if ((v321 & 0x3F) + v317.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v321 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v322;
        unint64_t v322 = (unint64_t)v316.i64[1] >> -(v321 & 0x3F);
        if ((v321 & 0x3F) == 0) {
          unint64_t v322 = 0;
        }
      }
      int16x8_t v323 = (int16x8_t)vandq_s8(v61, v319);
      unint64_t v324 = v321 + v317.i64[1];
      v325.i64[0] = 0xF000F000F000FLL;
      v325.i64[1] = 0xF000F000F000FLL;
      v326.i64[0] = -1;
      v326.i64[1] = -1;
      uint16x8_t v327 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v326, (uint16x8_t)vaddq_s16((int16x8_t)v69, v325)), v320);
      int32x4_t v328 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v69.i8);
      int32x4_t v329 = (int32x4_t)vmovl_high_u16((uint16x8_t)v69);
      int32x4_t v330 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v327.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)), (int32x4_t)vshlq_u32(vmovl_high_u16(v327), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)));
      int32x4_t v331 = vpaddq_s32(v328, v329);
      v332.i64[0] = v330.u32[0];
      v332.i64[1] = v330.u32[1];
      uint64x2_t v333 = (uint64x2_t)v332;
      v332.i64[0] = v330.u32[2];
      v332.i64[1] = v330.u32[3];
      uint64x2_t v334 = (uint64x2_t)v332;
      v332.i64[0] = v331.u32[0];
      v332.i64[1] = v331.u32[1];
      int64x2_t v335 = v332;
      v332.i64[0] = v331.u32[2];
      v332.i64[1] = v331.u32[3];
      int64x2_t v336 = vpaddq_s64((int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)), (int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)));
      int64x2_t v337 = vpaddq_s64(v335, v332);
      unint64_t v338 = (v336.i64[0] << v324) | v322;
      if (v337.i64[0] + (v324 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v229 + ((v324 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v338;
        unint64_t v338 = (unint64_t)v336.i64[0] >> -(v324 & 0x3F);
        if ((v324 & 0x3F) == 0) {
          unint64_t v338 = 0;
        }
      }
      int8x16_t v339 = (int8x16_t)vaddq_s16(v20, v323);
      unint64_t v340 = v337.i64[0] + v324;
      unint64_t v341 = v338 | (v336.i64[1] << v340);
      if ((v340 & 0x3F) + v337.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
        unint64_t v341 = (unint64_t)v336.i64[1] >> -(v340 & 0x3F);
        if ((v340 & 0x3F) == 0) {
          unint64_t v341 = 0;
        }
      }
      unint64_t v342 = v340 + v337.i64[1];
      v343.i64[0] = 0xF000F000F000FLL;
      v343.i64[1] = 0xF000F000F000FLL;
      v344.i64[0] = -1;
      v344.i64[1] = -1;
      uint16x8_t v345 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v344, (uint16x8_t)vaddq_s16((int16x8_t)v70, v343)), v339);
      int32x4_t v346 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v70.i8);
      int32x4_t v347 = (int32x4_t)vmovl_high_u16((uint16x8_t)v70);
      int32x4_t v348 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v345.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v346)), (int32x4_t)vshlq_u32(vmovl_high_u16(v345), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v347)));
      int32x4_t v349 = vpaddq_s32(v346, v347);
      v350.i64[0] = v348.u32[0];
      v350.i64[1] = v348.u32[1];
      uint64x2_t v351 = (uint64x2_t)v350;
      v350.i64[0] = v348.u32[2];
      v350.i64[1] = v348.u32[3];
      uint64x2_t v352 = (uint64x2_t)v350;
      v350.i64[0] = v349.u32[0];
      v350.i64[1] = v349.u32[1];
      int64x2_t v353 = v350;
      v350.i64[0] = v349.u32[2];
      v350.i64[1] = v349.u32[3];
      int64x2_t v354 = vpaddq_s64((int64x2_t)vshlq_u64(v351, (uint64x2_t)vzip1q_s64((int64x2_t)0, v353)), (int64x2_t)vshlq_u64(v352, (uint64x2_t)vzip1q_s64((int64x2_t)0, v350)));
      int64x2_t v355 = vpaddq_s64(v353, v350);
      unint64_t v356 = (v354.i64[0] << v342) | v341;
      if (v355.i64[0] + (v342 & 0x3F) > 0x3F)
      {
        *(void *)((char *)v229 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
        if ((v342 & 0x3F) != 0) {
          unint64_t v356 = (unint64_t)v354.i64[0] >> -(v342 & 0x3F);
        }
        else {
          unint64_t v356 = 0;
        }
      }
      unint64_t v357 = v355.i64[0] + v342;
      unint64_t v358 = v356 | (v354.i64[1] << v357);
      if ((v357 & 0x3F) + v355.i64[1] >= 0x40)
      {
        *(void *)((char *)v229 + ((v357 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v358;
        unint64_t v358 = (unint64_t)v354.i64[1] >> -(v357 & 0x3F);
        if ((v357 & 0x3F) == 0) {
          unint64_t v358 = 0;
        }
      }
      unint64_t v359 = v357 + v355.i64[1];
      if ((v359 & 0x3F) != 0) {
        *(void *)((char *)v229 + ((v359 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v358;
      }
      unint64_t result = (v359 - v230 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a3;
    *a2 = 1;
    return 2;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v11 = 0;
  uint64_t v43 = *MEMORY[0x263EF8340];
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v12 = a5;
  do
  {
    uint64_t v13 = 0;
    int16x8_t v14 = (_WORD *)(a3 + v11 * a4);
    do
    {
      int16x8_t v15 = &v39 + (v13 & 0x7F);
      uint64_t v16 = 4 * (v11 & 0x7F);
      *(_WORD *)((char *)v15 + v16) = *v14;
      int8x16_t v17 = (char *)&v39 + 8 * ((2 * v13) | 1u);
      *(_WORD *)&v17[v16] = v14[1];
      uint64_t v18 = 2 * ((2 * v11) | 1u);
      *(_WORD *)((char *)v15 + v18) = v14[2];
      LOWORD(v15) = v14[3];
      v14 += 4;
      ++v13;
      *(_WORD *)&v17[v18] = (_WORD)v15;
    }
    while (v12 != v13);
    ++v11;
  }
  while (v11 != a6);
  unsigned int v19 = 2 * (a6 & 0x7F);
  unsigned int v20 = 2 * (a5 & 0x7F);
  v34.i32[0] = (unsigned __int16)v39;
  v34.i32[1] = WORD4(v39);
  v34.i32[2] = WORD1(v39);
  v34.i32[3] = WORD5(v39);
  int v35 = (unsigned __int16)v40;
  int v36 = WORD4(v40);
  int v37 = WORD1(v40);
  int v38 = WORD5(v40);
  if (v20 >= 4) {
    unsigned int v21 = 4;
  }
  else {
    unsigned int v21 = 2 * (a5 & 0x7F);
  }
  if (v20 >= 4) {
    unsigned int v22 = v20 - 4;
  }
  else {
    unsigned int v22 = 0;
  }
  char v23 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, &v34, a7, v21, 2u);
  v34.i32[0] = WORD2(v39);
  v34.i32[1] = WORD6(v39);
  v34.i32[2] = WORD3(v39);
  v34.i32[3] = HIWORD(v39);
  int v35 = WORD2(v40);
  int v36 = WORD6(v40);
  unsigned int v24 = v19 - 2;
  if (v19 < 2) {
    unsigned int v24 = 0;
  }
  int v37 = WORD3(v40);
  int v38 = HIWORD(v40);
  if (a6 >= 2) {
    unsigned int v25 = 2;
  }
  else {
    unsigned int v25 = v24;
  }
  int v26 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 8, &v34, a7, v21, v25);
  v34.i32[0] = (unsigned __int16)v41;
  v34.i32[1] = WORD4(v41);
  v34.i32[2] = WORD1(v41);
  v34.i32[3] = WORD5(v41);
  int v35 = (unsigned __int16)v42;
  int v36 = WORD4(v42);
  if (a5 >= 4) {
    unsigned int v27 = 4;
  }
  else {
    unsigned int v27 = v22;
  }
  int v37 = WORD1(v42);
  int v38 = WORD5(v42);
  int v28 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, &v34, a7, v27, 2u);
  v34.i32[0] = WORD2(v41);
  v34.i32[1] = WORD6(v41);
  v34.i32[2] = WORD3(v41);
  v34.i32[3] = HIWORD(v41);
  int v35 = WORD2(v42);
  int v36 = WORD6(v42);
  int v37 = WORD3(v42);
  int v38 = HIWORD(v42);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 24, &v34, a7, v27, v25);
  if (v28) {
    char v30 = 4;
  }
  else {
    char v30 = 0;
  }
  if (v26) {
    char v31 = 2;
  }
  else {
    char v31 = 0;
  }
  if (result) {
    char v32 = -8;
  }
  else {
    char v32 = -16;
  }
  *a2 = v32 | v30 | v23 | v31;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLosslessCompressedSubblock(int16x8_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, double a5, double a6, double a7, int8x8_t a8)
{
  unint64_t v8 = 8 * (a3 & 7);
  unint64_t v9 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 + 22;
  unint64_t v11 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v8;
  if (v8 >= 0x2B) {
    v11 |= *(void *)(v9 + 8) << (-8 * (a3 & 7u));
  }
  unint64_t v12 = (8 * (a3 & 7)) | 0x100;
  int v13 = (a4 >> 6) | (4 * v11);
  uint16x8_t v14 = (uint16x8_t)vdupq_n_s16(v13 & 0xF);
  a8.i32[0] = v13 & 0xF;
  v15.i64[0] = 0x3000300030003;
  v15.i64[1] = 0x3000300030003;
  int16x8_t v16 = (int16x8_t)vbicq_s8((int8x16_t)vdupq_n_s16(((v11 >> 2) & 0xF) + 1), (int8x16_t)vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v15));
  int8x16_t v17 = vbicq_s8((int8x16_t)xmmword_242EA7370, (int8x16_t)vmovl_s16(vceqz_s16(vdup_lane_s16((int16x4_t)vand_s8(a8, (int8x8_t)0x4000400040004), 0))));
  v18.i64[0] = 0x202020202020202;
  v18.i64[1] = 0x202020202020202;
  int8x16_t v19 = vandq_s8(v17, v18);
  if (vmaxvq_s8(v19) < 1)
  {
    int v29 = 0;
    v30.i64[0] = -1;
    v30.i64[1] = -1;
    int16x8_t v31 = v16;
    int16x8_t v32 = v16;
    int16x8_t v33 = v16;
    v34.i64[0] = -1;
    v34.i64[1] = -1;
    int8x16_t v35 = (int8x16_t)v16;
    v36.i64[0] = -1;
    v36.i64[1] = -1;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
  }
  else
  {
    int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v19, v19));
    int32x4_t v21 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v20, v20));
    unint64_t v22 = vpaddq_s32(v21, v21).u64[0];
    v23.i64[0] = v22;
    v23.i64[1] = HIDWORD(v22);
    int64x2_t v24 = v23;
    unint64_t v25 = vaddvq_s64(v23);
    unint64_t v26 = v25 + v10;
    if (v25 <= 0x80 && v12 >= v26)
    {
      int64x2_t v38 = vaddq_s64(vzip1q_s64((int64x2_t)0, v24), vdupq_n_s64(v10 & 0x3E));
      long long v39 = (int64x2_t *)(v9 + ((v10 >> 3) & 8));
      int32x4_t v28 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v39, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39->i64[0], 0), (uint64x2_t)vnegq_s64(v38)));
      if (v25 + (v10 & 0x3E) < 0x81)
      {
        int v29 = 0;
      }
      else
      {
        int v29 = 0;
        int32x4_t v28 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v39[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v38)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v39[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v38))), (int8x16_t)v28);
      }
      unint64_t v10 = v26;
    }
    else
    {
      int32x4_t v28 = 0uLL;
      int v29 = 1;
    }
    int32x2_t v40 = vzip1_s32(*(int32x2_t *)v21.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL));
    v41.i64[0] = v40.u32[0];
    v41.i64[1] = v40.u32[1];
    int32x4_t v42 = (int32x4_t)vshlq_u64((uint64x2_t)v28, (uint64x2_t)vnegq_s64(v41));
    *(int32x2_t *)v28.i8 = vmovn_s64((int64x2_t)v28);
    *(int32x2_t *)v42.i8 = vmovn_s64((int64x2_t)v42);
    int16x8_t v43 = (int16x8_t)vzip1q_s32(v28, v42);
    int16x8_t v44 = (int16x8_t)vshlq_u32((uint32x4_t)v43, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v20.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v20, (int8x16_t)v20, 8uLL)))));
    *(int16x4_t *)v43.i8 = vmovn_s32((int32x4_t)v43);
    *(int16x4_t *)v44.i8 = vmovn_s32((int32x4_t)v44);
    int16x8_t v45 = vzip1q_s16(v43, v44);
    *(int8x8_t *)v45.i8 = vzip1_s8(vmovn_s16(v45), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v45, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v19.i8, *(int8x8_t *)v14.i8))))));
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    int8x16_t v46 = vshlq_s8((int8x16_t)v43, v19);
    v43.i64[0] = -1;
    v43.i64[1] = -1;
    v46.i32[0] = vandq_s8((int8x16_t)v45, vaddq_s8(v46, (int8x16_t)v43)).u32[0];
    int16x8_t v47 = vdupq_n_s16(v46.i8[0]);
    int16x8_t v48 = vdupq_n_s16(v46.i8[1]);
    int16x8_t v49 = vdupq_n_s16(v46.i8[2]);
    int16x8_t v50 = vdupq_n_s16(v46.i8[3]);
    int8x16_t v35 = (int8x16_t)vsubq_s16(v16, v47);
    int16x8_t v33 = vsubq_s16(v16, v48);
    int16x8_t v32 = vsubq_s16(v16, v49);
    int16x8_t v31 = vsubq_s16(v16, v50);
    int8x16_t v37 = (int8x16_t)vceqzq_s16(v47);
    int8x16_t v36 = (int8x16_t)vceqzq_s16(v48);
    int8x16_t v34 = (int8x16_t)vceqzq_s16(v49);
    int8x16_t v30 = (int8x16_t)vceqzq_s16(v50);
  }
  v51.i64[0] = 0x7000700070007;
  v51.i64[1] = 0x7000700070007;
  int32x4_t v52 = 0uLL;
  int16x8_t v53 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vcgtq_u16(v14, v51), (int8x16_t)0, 0xEuLL), (int8x16_t)v16);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v53, v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  if (v58 <= 0x80 && v12 >= v58 + v10)
  {
    int64x2_t v60 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v10 & 0x3F));
    int8x16_t v61 = (int64x2_t *)(v9 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v61, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61->i64[0], 0), (uint64x2_t)vnegq_s64(v60)));
    if (v58 + (v10 & 0x3F) >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v61[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v60)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v61[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v60))), (int8x16_t)v52);
    }
    v10 += v58;
  }
  else
  {
    int v29 = 1;
  }
  int v62 = a4 >> 6;
  if (v62 != 2)
  {
    LODWORD(v65) = 0;
    LODWORD(v64) = 0;
    unint64_t v66 = v10;
    goto LABEL_34;
  }
  unint64_t v63 = v10 + 8;
  if (v12 < v10 + 8)
  {
    LODWORD(v64) = 0;
    unint64_t v63 = v10;
LABEL_33:
    LODWORD(v65) = 0;
    int v29 = 1;
    unint64_t v66 = v63;
    goto LABEL_34;
  }
  uint64_t v64 = *(void *)(v9 + 8 * (v10 >> 6)) >> v10;
  if ((v10 & 0x3F) >= 0x39) {
    v64 |= *(void *)(v9 + 8 * (v10 >> 6) + 8) << -(v10 & 0x3F);
  }
  unint64_t v66 = v10 + 16;
  LODWORD(v64) = (char)v64;
  if (v12 < v10 + 16) {
    goto LABEL_33;
  }
  uint64_t v65 = *(void *)(v9 + 8 * (v63 >> 6)) >> v63;
  if ((v63 & 0x3F) >= 0x39) {
    v65 |= *(void *)(v9 + 8 * (v63 >> 6) + 8) << -(v63 & 0x3F);
  }
  LODWORD(v65) = (char)v65;
LABEL_34:
  int16x8_t v67 = 0uLL;
  int16x8_t v68 = (int16x8_t)vextq_s8((int8x16_t)0, v35, 0xEuLL);
  int32x4_t v69 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v68, v68));
  unint64_t v70 = vpaddq_s32(v69, v69).u64[0];
  v71.i64[0] = v70;
  v71.i64[1] = HIDWORD(v70);
  int64x2_t v72 = v71;
  unint64_t v73 = vaddvq_s64(v71);
  unint64_t v74 = v73 + v66;
  if (v73 <= 0x80 && v12 >= v74)
  {
    unint64_t v77 = v66 & 0x3F;
    int64x2_t v78 = vaddq_s64(vzip1q_s64((int64x2_t)0, v72), vdupq_n_s64(v77));
    int v79 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
    int32x4_t v76 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v79, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79->i64[0], 0), (uint64x2_t)vnegq_s64(v78)));
    if (v73 + v77 >= 0x81) {
      int32x4_t v76 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v79[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v78)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v79[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v78))), (int8x16_t)v76);
    }
    unint64_t v66 = v74;
  }
  else
  {
    int v29 = 1;
    int32x4_t v76 = 0uLL;
  }
  int32x4_t v80 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v33, v33));
  unint64_t v81 = vpaddq_s32(v80, v80).u64[0];
  v82.i64[0] = v81;
  v82.i64[1] = HIDWORD(v81);
  int64x2_t v83 = v82;
  unint64_t v84 = vaddvq_s64(v82);
  if (v84 < 0x81)
  {
    int32x2_t v85 = vzip1_s32(*(int32x2_t *)v80.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v80, (int8x16_t)v80, 8uLL));
    v86.i64[0] = v85.u32[0];
    v86.i64[1] = v85.u32[1];
    int64x2_t v87 = v86;
    int32x4_t v88 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL)));
    unint64_t v89 = v84 + v66;
    if (v12 >= v84 + v66)
    {
      unint64_t v90 = v66 & 0x3F;
      int64x2_t v91 = vaddq_s64(vzip1q_s64((int64x2_t)0, v83), vdupq_n_s64(v90));
      int16x8_t v92 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int16x8_t v67 = (int16x8_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v92, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92->i64[0], 0), (uint64x2_t)vnegq_s64(v91)));
      if (v84 + v90 >= 0x81) {
        int16x8_t v67 = (int16x8_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v92[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v91)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v92[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v91))), (int8x16_t)v67);
      }
      unint64_t v66 = v89;
    }
    else
    {
      int v29 = 1;
    }
    int32x4_t v93 = (int32x4_t)vshlq_u64((uint64x2_t)v67, (uint64x2_t)vnegq_s64(v87));
    *(int32x2_t *)v67.i8 = vmovn_s64((int64x2_t)v67);
    *(int32x2_t *)v93.i8 = vmovn_s64((int64x2_t)v93);
    int16x8_t v94 = (int16x8_t)vzip1q_s32((int32x4_t)v67, v93);
    int16x8_t v95 = (int16x8_t)vshlq_u32((uint32x4_t)v94, (uint32x4_t)vnegq_s32(v88));
    *(int16x4_t *)v94.i8 = vmovn_s32((int32x4_t)v94);
    *(int16x4_t *)v95.i8 = vmovn_s32((int32x4_t)v95);
    int16x8_t v67 = vzip1q_s16(v94, v95);
  }
  else
  {
    int v29 = 1;
  }
  int32x4_t v96 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
  unint64_t v97 = vpaddq_s32(v96, v96).u64[0];
  v98.i64[0] = v97;
  v98.i64[1] = HIDWORD(v97);
  int64x2_t v99 = v98;
  unint64_t v100 = vaddvq_s64(v98);
  if (v100 <= 0x80)
  {
    int32x2_t v102 = vzip1_s32(*(int32x2_t *)v96.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v96, (int8x16_t)v96, 8uLL));
    v103.i64[0] = v102.u32[0];
    v103.i64[1] = v102.u32[1];
    int64x2_t v104 = v103;
    int32x4_t v105 = (int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL)));
    unint64_t v106 = v100 + v66;
    if (v12 >= v100 + v66)
    {
      unint64_t v108 = v66 & 0x3F;
      int64x2_t v109 = vaddq_s64(vzip1q_s64((int64x2_t)0, v99), vdupq_n_s64(v108));
      int16x8_t v110 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
      int32x4_t v107 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v110, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110->i64[0], 0), (uint64x2_t)vnegq_s64(v109)));
      if (v100 + v108 >= 0x81) {
        int32x4_t v107 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v110[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v109)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v110[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v109))), (int8x16_t)v107);
      }
      unint64_t v66 = v106;
    }
    else
    {
      int32x4_t v107 = 0uLL;
      int v29 = 1;
    }
    int32x4_t v111 = (int32x4_t)vshlq_u64((uint64x2_t)v107, (uint64x2_t)vnegq_s64(v104));
    *(int32x2_t *)v107.i8 = vmovn_s64((int64x2_t)v107);
    *(int32x2_t *)v111.i8 = vmovn_s64((int64x2_t)v111);
    int16x8_t v112 = (int16x8_t)vzip1q_s32(v107, v111);
    int16x8_t v113 = (int16x8_t)vshlq_u32((uint32x4_t)v112, (uint32x4_t)vnegq_s32(v105));
    *(int16x4_t *)v112.i8 = vmovn_s32((int32x4_t)v112);
    *(int16x4_t *)v113.i8 = vmovn_s32((int32x4_t)v113);
    int16x8_t v101 = vzip1q_s16(v112, v113);
  }
  else
  {
    int v29 = 1;
    int16x8_t v101 = 0uLL;
  }
  int32x4_t v114 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v31, v31));
  unint64_t v115 = vpaddq_s32(v114, v114).u64[0];
  v116.i64[0] = v115;
  v116.i64[1] = HIDWORD(v115);
  int64x2_t v117 = v116;
  unint64_t v118 = vaddvq_s64(v116);
  if (v118 > 0x80 || v12 < v118 + v66) {
    goto LABEL_64;
  }
  int64x2_t v119 = vaddq_s64(vzip1q_s64((int64x2_t)0, v117), vdupq_n_s64(v66 & 0x3F));
  int16x8_t v120 = (int64x2_t *)(v9 + 8 * (v66 >> 6));
  int64x2_t v121 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v120, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120->i64[0], 0), (uint64x2_t)vnegq_s64(v119)));
  if (v118 + (v66 & 0x3F) >= 0x81) {
    int64x2_t v121 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v120[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v119)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v120[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v119))), (int8x16_t)v121);
  }
  if (v29 || (uint64_t v122 = (a4 & 0x3F) + 1, 8 * ((a3 & 7) + v122) - (v118 + v66) >= 9))
  {
LABEL_64:
    uint64_t v122 = 0;
    v172 |= 0xFFFFLL << ((8 * (&v172 + 6)) & 0x30);
    a1->i64[0] = 0;
    *(uint64_t *)((char *)a1->i64 + a2) = 0;
  }
  else
  {
    int32x2_t v124 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
    int32x2_t v125 = vzip1_s32(*(int32x2_t *)v69.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL));
    v126.i64[0] = v124.u32[0];
    v126.i64[1] = v124.u32[1];
    int64x2_t v127 = v126;
    v126.i64[0] = v125.u32[0];
    v126.i64[1] = v125.u32[1];
    int32x4_t v128 = (int32x4_t)vshlq_u64((uint64x2_t)v52, (uint64x2_t)vnegq_s64(v127));
    int32x4_t v129 = (int32x4_t)vshlq_u64((uint64x2_t)v76, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
    *(int32x2_t *)v128.i8 = vmovn_s64((int64x2_t)v128);
    *(int32x2_t *)v76.i8 = vmovn_s64((int64x2_t)v76);
    *(int32x2_t *)v129.i8 = vmovn_s64((int64x2_t)v129);
    int16x8_t v130 = (int16x8_t)vzip1q_s32(v52, v128);
    int16x8_t v131 = (int16x8_t)vzip1q_s32(v76, v129);
    int16x8_t v132 = (int16x8_t)vshlq_u32((uint32x4_t)v130, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL)))));
    int16x8_t v133 = (int16x8_t)vshlq_u32((uint32x4_t)v131, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v68.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL)))));
    *(int16x4_t *)v130.i8 = vmovn_s32((int32x4_t)v130);
    *(int16x4_t *)v132.i8 = vmovn_s32((int32x4_t)v132);
    *(int16x4_t *)v131.i8 = vmovn_s32((int32x4_t)v131);
    *(int16x4_t *)v133.i8 = vmovn_s32((int32x4_t)v133);
    v134.i64[0] = 0x10001000100010;
    v134.i64[1] = 0x10001000100010;
    v135.i64[0] = 0x10001000100010;
    v135.i64[1] = 0x10001000100010;
    unint64_t v136 = v11 >> 6;
    int16x8_t v137 = vzip1q_s16(v130, v132);
    v132.i64[0] = 0xF000F000F000FLL;
    v132.i64[1] = 0xF000F000F000FLL;
    int16x8_t v138 = vsubq_s16(v134, v53);
    int16x8_t v139 = vzip1q_s16(v131, v133);
    v133.i64[0] = 0xF000F000F000FLL;
    v133.i64[1] = 0xF000F000F000FLL;
    int32x2_t v140 = vzip1_s32(*(int32x2_t *)v114.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v114, (int8x16_t)v114, 8uLL));
    v141.i64[0] = 0xF000F000F000FLL;
    v141.i64[1] = 0xF000F000F000FLL;
    v142.i64[0] = 0x10001000100010;
    v142.i64[1] = 0x10001000100010;
    int16x8_t v143 = vaddq_s16(v53, v132);
    int16x8_t v144 = vaddq_s16(v68, v133);
    int16x8_t v145 = vshlq_s16(v139, vsubq_s16(v135, v68));
    v126.i64[0] = v140.u32[0];
    v126.i64[1] = v140.u32[1];
    int8x16_t v146 = (int8x16_t)vshlq_s16(vshlq_s16(v137, v138), v143);
    int16x8_t v147 = vshlq_s16(v145, v144);
    int16x8_t v148 = vshlq_s16(vshlq_s16(v67, vsubq_s16(v135, v33)), vaddq_s16(v33, v133));
    int16x8_t v149 = vshlq_s16(vshlq_s16(v101, vsubq_s16(v135, v32)), vaddq_s16(v32, v133));
    int32x4_t v150 = (int32x4_t)vshlq_u64((uint64x2_t)v121, (uint64x2_t)vnegq_s64(v126));
    *(int32x2_t *)v145.i8 = vmovn_s64(v121);
    *(int32x2_t *)v150.i8 = vmovn_s64((int64x2_t)v150);
    int16x8_t v151 = (int16x8_t)vzip1q_s32((int32x4_t)v145, v150);
    int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v151, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v31.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL)))));
    *(int16x4_t *)v151.i8 = vmovn_s32((int32x4_t)v151);
    *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
    int16x8_t v153 = vshlq_s16(vshlq_s16(vzip1q_s16(v151, v152), vsubq_s16(v142, v31)), vaddq_s16(v31, v141));
    if (v62 == 2)
    {
      v154.i64[0] = 0xFFFFFFFF00000000;
      v154.i64[1] = 0xFFFFFFFF00000000;
      int16x8_t v155 = vmlal_s8((int16x8_t)vandq_s8((int8x16_t)vdupq_n_s16(v65), v154), vdup_n_s8(v64), (int8x8_t)0x302030201000100);
      int16x8_t v147 = vaddq_s16(v147, v155);
      int16x8_t v148 = vaddq_s16(vaddq_s16(vdupq_n_s16(2 * (int)v65), v155), v148);
      int16x8_t v149 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64), v155), v149);
      int16x8_t v153 = vaddq_s16(vaddq_s16(vdupq_n_s16(4 * (int)v64 + 2 * (int)v65), v155), v153);
    }
    int16x8_t v156 = vdupq_n_s16(v136);
    int16x8_t v157 = vaddq_s16((int16x8_t)vandq_s8(v146, v37), v147);
    int8x16_t v158 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v146.i8, 0);
    int16x8_t v159 = vsubq_s16(v157, (int16x8_t)vandq_s8(v158, v37));
    int16x8_t v160 = vsubq_s16(v148, (int16x8_t)vandq_s8(v158, v36));
    int16x8_t v161 = vsubq_s16(v149, (int16x8_t)vandq_s8(v158, v34));
    int16x8_t v162 = vsubq_s16(v153, (int16x8_t)vandq_s8(v158, v30));
    v163.i64[0] = 0x1000100010001;
    v163.i64[1] = 0x1000100010001;
    if (vaddvq_s16(vceqq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF3FFF3FFF3FFF3, 0xFFF3FFF3FFF3FFF3)), v163)))
    {
      int8x16_t v164 = (int8x16_t)v159;
      v164.i16[0] = v159.i16[7];
      v164.i16[7] = v159.i16[0];
      int8x16_t v165 = (int8x16_t)vnegq_s16((int16x8_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFF1FFF1FFF1FFF1, 0xFFF1FFF1FFF1FFF1)));
      int16x8_t v166 = (int16x8_t)vbslq_s8(v165, v164, (int8x16_t)v159);
      int16x8_t v167 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v166, (int8x16_t)xmmword_242EA7480), v165), v166);
      int16x8_t v159 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v167, (int8x16_t)xmmword_242EA7490), v165), v167);
      int16x8_t v168 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v160, (int8x16_t)xmmword_242EA74A0), v165), v160);
      int16x8_t v160 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v168, (int8x16_t)xmmword_242EA74B0), v165), v168);
      int16x8_t v169 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v161, (int8x16_t)xmmword_242EA74C0), v165), v161);
      int16x8_t v161 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v169, (int8x16_t)xmmword_242EA74D0), v165), v169);
      int16x8_t v170 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v162, (int8x16_t)xmmword_242EA74E0), v165), v162);
      int16x8_t v162 = vaddq_s16((int16x8_t)vandq_s8(vqtbl1q_s8((int8x16_t)v170, (int8x16_t)xmmword_242EA74F0), v165), v170);
    }
    *a1 = vaddq_s16(v156, v159);
    a1[1] = vaddq_s16(v161, v156);
    int16x8_t v171 = (int16x8_t *)((char *)a1 + a2);
    *int16x8_t v171 = vaddq_s16(v160, v156);
    v171[1] = vaddq_s16(v162, v156);
  }
  return v122;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::decompressLossyCompressedSubblock(_WORD *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  unsigned int v5 = a4;
  uint64_t v6 = 0;
  uint64_t v191 = *MEMORY[0x263EF8340];
  unsigned int v7 = a5 & 0xFFFFFFFD;
  uint64_t v180 = a3;
  do
  {
    uint64_t v25 = a3 + 8 * v6;
    unint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = 8 * (v25 & 7);
    if ((v5 >> v6))
    {
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = v27;
      do
      {
        if ((unint64_t)(v30 - v27 + (v29 << 6) - 57) < 0xFFFFFFFFFFFFFFBFLL)
        {
          unsigned __int8 v31 = 0;
        }
        else
        {
          unsigned __int8 v31 = 0;
          uint64_t v35 = 0;
          unint64_t v36 = 8;
          do
          {
            if (64 - v30 >= v36) {
              unint64_t v37 = v36;
            }
            else {
              unint64_t v37 = 64 - v30;
            }
            v31 |= (unint64_t)((v26[v29] >> v30) & ~(-1 << v37)) << v35;
            v35 += v37;
            unint64_t v38 = v37 + v30;
            v29 += v38 >> 6;
            uint64_t v30 = v38 & 0x3F;
            v36 -= v37;
          }
          while (v36);
        }
        int v32 = v31 << 8;
        int v33 = v32 - (v31 & 1) + 128;
        if (v32 == 65280) {
          int v33 = 0xFFFF;
        }
        if (!v32) {
          int v33 = 0;
        }
        if (v32 == 0x8000 && v7 == 1) {
          int v33 = v32;
        }
        if (a5 == 4) {
          int v33 = v32;
        }
        v181.i32[v28++] = v33 ^ (((a5 & 0xFFFFFFFD) == 1) << 15);
      }
      while (v28 != 8);
      LOWORD(v9) = v181.i16[0];
      LOWORD(v8) = v181.i16[2];
      LOWORD(v10) = v181.i16[4];
      LOWORD(v11) = v181.i16[6];
      LOWORD(v13) = v182;
      unint64_t result = v183;
      LOWORD(v15) = v184;
      LOWORD(v14) = v185;
      goto LABEL_3;
    }
    uint64_t v39 = (*v26 >> v27) & 0xFLL;
    uint64_t v40 = v27 | 4;
    int64x2_t v41 = &kDQuadParamTable[10 * v39];
    unsigned int v42 = v41[484];
    unsigned int v43 = v41[485];
    if (v42 >= 0x10) {
      uint64_t v44 = 16;
    }
    else {
      uint64_t v44 = v42;
    }
    if (v43 >= 0x10) {
      uint64_t v45 = 16;
    }
    else {
      uint64_t v45 = v43;
    }
    if (v44)
    {
      if ((unint64_t)(v44 - v27 + v40) <= 0x40)
      {
        int v47 = 0;
        uint64_t v46 = 0;
        uint64_t v50 = 0;
        unint64_t v51 = v44;
        do
        {
          unint64_t v52 = 64 - v40;
          if (64 - v40 >= v51) {
            unint64_t v52 = v51;
          }
          v47 |= (unint64_t)((v26[v46] >> v40) & ~(-1 << v52)) << v50;
          v50 += v52;
          unint64_t v53 = v52 + v40;
          v46 += v53 >> 6;
          uint64_t v40 = v53 & 0x3F;
          v51 -= v52;
        }
        while (v51);
        int v48 = v44 + 4;
        if (!v45)
        {
LABEL_44:
          int v49 = 0;
          uint64_t v54 = 0;
          uint64_t v187 = 0;
          uint64_t v188 = 0;
          int v190 = 0;
          uint64_t v189 = 0;
          goto LABEL_97;
        }
      }
      else
      {
        uint64_t v46 = 0;
        int v47 = 0;
        int v48 = v44 + 4;
        if (!v45) {
          goto LABEL_44;
        }
      }
    }
    else
    {
      int v47 = 0;
      uint64_t v46 = 0;
      int v48 = 4;
      if (!v45) {
        goto LABEL_44;
      }
    }
    if ((unint64_t)(v40 - v27 + (v46 << 6) + 3) <= 0x40)
    {
      int v49 = 0;
      uint64_t v55 = 0;
      unint64_t v56 = 3;
      do
      {
        unint64_t v57 = 64 - v40;
        if (64 - v40 >= v56) {
          unint64_t v57 = v56;
        }
        v49 |= (unint64_t)((v26[v46] >> v40) & ~(-1 << v57)) << v55;
        v55 += v57;
        unint64_t v58 = v57 + v40;
        v46 += v58 >> 6;
        uint64_t v40 = v58 & 0x3F;
        v56 -= v57;
      }
      while (v56);
    }
    else
    {
      int v49 = 0;
    }
    uint64_t v187 = 0;
    uint64_t v188 = 0;
    int v190 = 0;
    uint64_t v189 = 0;
    unsigned int v59 = 61 - v48;
    unsigned int v60 = (61 - v48) / 7u;
    uint64_t v61 = v45 - v27;
    unint64_t v62 = (v40 | (v46 << 6)) + v59 % 7;
    unint64_t v63 = v62 & 0x3F;
    if (v61 + v63 + (v62 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      uint64_t v54 = 0;
      uint64_t v64 = 0;
      unint64_t v65 = v62 >> 6;
      unint64_t v66 = v45;
      do
      {
        unint64_t v67 = 64 - v63;
        if (64 - v63 >= v66) {
          unint64_t v67 = v66;
        }
        v54 |= ((unint64_t)((v26[v65] >> v63) & ~(-1 << v67)) << v64);
        v64 += v67;
        unint64_t v68 = v67 + v63;
        v65 += v68 >> 6;
        unint64_t v63 = v68 & 0x3F;
        v66 -= v67;
      }
      while (v66);
      LODWORD(v187) = v54;
      unint64_t v62 = v63 | (v65 << 6);
    }
    else
    {
      uint64_t v54 = 0;
    }
    uint64_t v69 = v60 - v45;
    unint64_t v70 = v62 + v69;
    uint64_t v71 = (v62 + v69) & 0x3F;
    if (v61 + v71 + ((v62 + v69) & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v72 = 0;
      uint64_t v73 = 0;
      unint64_t v74 = v70 >> 6;
      unint64_t v75 = v45;
      do
      {
        unint64_t v76 = 64 - v71;
        if (64 - v71 >= v75) {
          unint64_t v76 = v75;
        }
        v72 |= (unint64_t)((v26[v74] >> v71) & ~(-1 << v76)) << v73;
        v73 += v76;
        unint64_t v77 = v76 + v71;
        v74 += v77 >> 6;
        uint64_t v71 = v77 & 0x3F;
        v75 -= v76;
      }
      while (v75);
      HIDWORD(v187) = v72;
      unint64_t v70 = v71 | (v74 << 6);
    }
    else
    {
      HIDWORD(v187) = 0;
    }
    unint64_t v78 = v70 + v69;
    uint64_t v79 = v78 & 0x3F;
    if (v61 + v79 + (v78 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v80 = 0;
      uint64_t v81 = 0;
      unint64_t v82 = v78 >> 6;
      unint64_t v83 = v45;
      do
      {
        unint64_t v84 = 64 - v79;
        if (64 - v79 >= v83) {
          unint64_t v84 = v83;
        }
        v80 |= (unint64_t)((v26[v82] >> v79) & ~(-1 << v84)) << v81;
        v81 += v84;
        unint64_t v85 = v84 + v79;
        v82 += v85 >> 6;
        uint64_t v79 = v85 & 0x3F;
        v83 -= v84;
      }
      while (v83);
      LODWORD(v188) = v80;
      unint64_t v78 = v79 | (v82 << 6);
    }
    else
    {
      LODWORD(v188) = 0;
    }
    unint64_t v86 = v78 + v69;
    uint64_t v87 = v86 & 0x3F;
    if (v61 + v87 + (v86 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v88 = 0;
      uint64_t v89 = 0;
      unint64_t v90 = v86 >> 6;
      unint64_t v91 = v45;
      do
      {
        unint64_t v92 = 64 - v87;
        if (64 - v87 >= v91) {
          unint64_t v92 = v91;
        }
        v88 |= (unint64_t)((v26[v90] >> v87) & ~(-1 << v92)) << v89;
        v89 += v92;
        unint64_t v93 = v92 + v87;
        v90 += v93 >> 6;
        uint64_t v87 = v93 & 0x3F;
        v91 -= v92;
      }
      while (v91);
      HIDWORD(v188) = v88;
      unint64_t v86 = v87 | (v90 << 6);
    }
    else
    {
      HIDWORD(v188) = 0;
    }
    unint64_t v94 = v86 + v69;
    uint64_t v95 = v94 & 0x3F;
    if (v61 + v95 + (v94 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v96 = 0;
      uint64_t v97 = 0;
      unint64_t v98 = v94 >> 6;
      unint64_t v99 = v45;
      do
      {
        unint64_t v100 = 64 - v95;
        if (64 - v95 >= v99) {
          unint64_t v100 = v99;
        }
        v96 |= (unint64_t)((v26[v98] >> v95) & ~(-1 << v100)) << v97;
        v97 += v100;
        unint64_t v101 = v100 + v95;
        v98 += v101 >> 6;
        uint64_t v95 = v101 & 0x3F;
        v99 -= v100;
      }
      while (v99);
      LODWORD(v189) = v96;
      unint64_t v94 = v95 | (v98 << 6);
    }
    else
    {
      LODWORD(v189) = 0;
    }
    unint64_t v102 = (v94 + v69) >> 6;
    uint64_t v103 = (v94 + v69) & 0x3F;
    if (v61 + v103 + ((v94 + v69) & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v104 = 0;
      uint64_t v105 = 0;
      unint64_t v106 = v45;
      do
      {
        unint64_t v107 = 64 - v103;
        if (64 - v103 >= v106) {
          unint64_t v107 = v106;
        }
        v104 |= (unint64_t)((v26[v102] >> v103) & ~(-1 << v107)) << v105;
        v105 += v107;
        unint64_t v108 = v107 + v103;
        v102 += v108 >> 6;
        uint64_t v103 = v108 & 0x3F;
        v106 -= v107;
      }
      while (v106);
    }
    else
    {
      int v104 = 0;
    }
    HIDWORD(v189) = v104;
    unint64_t v109 = (v103 | (v102 << 6)) + v69;
    uint64_t v110 = v109 & 0x3F;
    if (v61 + v110 + (v109 & 0xFFFFFFFFFFFFFFC0) <= 0x40)
    {
      int v111 = 0;
      uint64_t v112 = 0;
      unint64_t v113 = v109 >> 6;
      unint64_t v114 = v45;
      do
      {
        unint64_t v115 = 64 - v110;
        if (64 - v110 >= v114) {
          unint64_t v115 = v114;
        }
        v111 |= (unint64_t)((v26[v113] >> v110) & ~(-1 << v115)) << v112;
        v112 += v115;
        unint64_t v116 = v115 + v110;
        v113 += v116 >> 6;
        uint64_t v110 = v116 & 0x3F;
        v114 -= v115;
      }
      while (v114);
    }
    else
    {
      int v111 = 0;
    }
    int v190 = v111;
LABEL_97:
    char v117 = 16 - v44;
    uint64_t v118 = (v47 << (16 - v44));
    unint64_t v119 = *(void *)&kDQuadParamTable[10 * v39 + 482];
    if (v119 >> v45 <= 1) {
      unint64_t v120 = 1;
    }
    else {
      unint64_t v120 = v119 >> v45;
    }
    unint64_t v121 = v120 >> 1;
    unint64_t v122 = (unint64_t)(1 << v117) >> 1;
    if (v120 >> 1 < v122) {
      unint64_t v122 = v120 >> 1;
    }
    unint64_t v123 = 0x8000 - v118;
    if (!v118) {
      unint64_t v122 = 0;
    }
    BOOL v124 = v118 == 0x8000;
    if (v118 >= 0xFFFF) {
      unsigned int v125 = 0xFFFF;
    }
    else {
      unsigned int v125 = v118;
    }
    unsigned int v126 = v125 ^ 0x8000;
    if (v120 <= v123)
    {
      unsigned int v127 = 64511;
    }
    else
    {
      unsigned int v126 = 0;
      unsigned int v127 = 0;
    }
    if (v7 == 1) {
      unint64_t v128 = v126;
    }
    else {
      unint64_t v128 = v125;
    }
    if (v7 == 1) {
      uint64_t v14 = v127;
    }
    else {
      uint64_t v14 = 31743;
    }
    if (v45)
    {
      unint64_t v129 = v119 + v118;
      uint64_t v130 = ~(-1 << v45);
      unint64_t v131 = v123 / v120;
      if (v49)
      {
        BOOL v132 = v131 == v54;
        if (v118 || v54)
        {
          if (v129 >= 0x10000 && v54 == v130)
          {
            uint64_t v133 = 1;
            uint64_t v54 = 0xFFFFLL;
LABEL_138:
            unint64_t v136 = v54 + v118;
            if (a5 == 4)
            {
              unint64_t v137 = v136 & 0xFFFFFFFFFFFFFE00;
              if ((v136 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v136 = 31743;
              }
              else if (v137 == 32256)
              {
                unint64_t v136 = 0x8000;
              }
              else if (v137 == 64512)
              {
                unint64_t v136 = 64511;
              }
            }
            if (v136 >= 0xFFFF) {
              LODWORD(v136) = 0xFFFF;
            }
            if (v132) {
              __int32 v138 = 0;
            }
            else {
              __int32 v138 = v136 ^ 0x8000;
            }
            if (v7 == 1) {
              __int32 v9 = v138;
            }
            else {
              __int32 v9 = v136;
            }
            v181.i32[0] = v9;
            if (v49 == 1)
            {
              uint64_t v139 = v122;
              BOOL v140 = v118 == 0x8000;
            }
            else
            {
              uint64_t v141 = *(unsigned int *)((unint64_t)&v187 | (4 * v133));
              BOOL v140 = v131 == v141;
              if (v118 | v141)
              {
                if (v129 >= 0x10000 && v141 == v130) {
                  uint64_t v139 = 0xFFFFLL;
                }
                else {
                  uint64_t v139 = v121 + v120 * v141;
                }
              }
              else
              {
                uint64_t v139 = 0;
              }
              ++v133;
            }
            unint64_t v142 = v139 + v118;
            if (a5 == 4)
            {
              unint64_t v143 = v142 & 0xFFFFFFFFFFFFFE00;
              if ((v142 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v142 = 31743;
              }
              else if (v143 == 32256)
              {
                unint64_t v142 = 0x8000;
              }
              else if (v143 == 64512)
              {
                unint64_t v142 = 64511;
              }
            }
            if (v142 >= 0xFFFF) {
              LODWORD(v142) = 0xFFFF;
            }
            if (v140) {
              __int32 v8 = 0;
            }
            else {
              __int32 v8 = v142 ^ 0x8000;
            }
            if (v7 != 1) {
              __int32 v8 = v142;
            }
            v181.i32[1] = v8;
            if (v49 == 2)
            {
              uint64_t v144 = v122;
              BOOL v145 = v118 == 0x8000;
            }
            else
            {
              uint64_t v146 = *((unsigned int *)&v187 + v133);
              BOOL v145 = v131 == v146;
              if (v118 | v146)
              {
                if (v129 >= 0x10000 && v146 == v130) {
                  uint64_t v144 = 0xFFFFLL;
                }
                else {
                  uint64_t v144 = v121 + v120 * v146;
                }
              }
              else
              {
                uint64_t v144 = 0;
              }
              ++v133;
            }
            unint64_t v147 = v144 + v118;
            if (a5 == 4)
            {
              unint64_t v148 = v147 & 0xFFFFFFFFFFFFFE00;
              if ((v147 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v147 = 31743;
              }
              else if (v148 == 32256)
              {
                unint64_t v147 = 0x8000;
              }
              else if (v148 == 64512)
              {
                unint64_t v147 = 64511;
              }
            }
            if (v147 >= 0xFFFF) {
              LODWORD(v147) = 0xFFFF;
            }
            if (v145) {
              __int32 v149 = 0;
            }
            else {
              __int32 v149 = v147 ^ 0x8000;
            }
            if (v7 == 1) {
              __int32 v10 = v149;
            }
            else {
              __int32 v10 = v147;
            }
            v181.i32[2] = v10;
            if (v49 == 3)
            {
              uint64_t v150 = v122;
              BOOL v151 = v118 == 0x8000;
            }
            else
            {
              uint64_t v152 = *((unsigned int *)&v187 + v133);
              BOOL v151 = v131 == v152;
              if (v118 | v152)
              {
                if (v129 >= 0x10000 && v152 == v130) {
                  uint64_t v150 = 0xFFFFLL;
                }
                else {
                  uint64_t v150 = v121 + v120 * v152;
                }
              }
              else
              {
                uint64_t v150 = 0;
              }
              ++v133;
            }
            unint64_t v153 = v150 + v118;
            if (a5 == 4)
            {
              unint64_t v154 = v153 & 0xFFFFFFFFFFFFFE00;
              if ((v153 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v153 = 31743;
              }
              else if (v154 == 32256)
              {
                unint64_t v153 = 0x8000;
              }
              else if (v154 == 64512)
              {
                unint64_t v153 = 64511;
              }
            }
            if (v153 >= 0xFFFF) {
              LODWORD(v153) = 0xFFFF;
            }
            if (v151) {
              __int32 v155 = 0;
            }
            else {
              __int32 v155 = v153 ^ 0x8000;
            }
            if (v7 == 1) {
              __int32 v11 = v155;
            }
            else {
              __int32 v11 = v153;
            }
            v181.i32[3] = v11;
            if (v49 == 4)
            {
              uint64_t v156 = v122;
              BOOL v157 = v118 == 0x8000;
            }
            else
            {
              uint64_t v158 = *((unsigned int *)&v187 + v133);
              BOOL v157 = v131 == v158;
              if (v118 | v158)
              {
                if (v129 >= 0x10000 && v158 == v130) {
                  uint64_t v156 = 0xFFFFLL;
                }
                else {
                  uint64_t v156 = v121 + v120 * v158;
                }
              }
              else
              {
                uint64_t v156 = 0;
              }
              ++v133;
            }
            unint64_t v159 = v156 + v118;
            if (a5 == 4)
            {
              unint64_t v160 = v159 & 0xFFFFFFFFFFFFFE00;
              if ((v159 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v159 = 31743;
              }
              else if (v160 == 32256)
              {
                unint64_t v159 = 0x8000;
              }
              else if (v160 == 64512)
              {
                unint64_t v159 = 64511;
              }
            }
            if (v159 >= 0xFFFF) {
              LODWORD(v159) = 0xFFFF;
            }
            if (v157) {
              int v161 = 0;
            }
            else {
              int v161 = v159 ^ 0x8000;
            }
            if (v7 == 1) {
              int v13 = v161;
            }
            else {
              int v13 = v159;
            }
            int v182 = v13;
            if (v49 == 5)
            {
              uint64_t v162 = v122;
              BOOL v163 = v118 == 0x8000;
            }
            else
            {
              uint64_t v164 = *((unsigned int *)&v187 + v133);
              BOOL v163 = v131 == v164;
              if (v118 | v164)
              {
                if (v129 >= 0x10000 && v164 == v130) {
                  uint64_t v162 = 0xFFFFLL;
                }
                else {
                  uint64_t v162 = v121 + v120 * v164;
                }
              }
              else
              {
                uint64_t v162 = 0;
              }
              ++v133;
            }
            unint64_t result = v162 + v118;
            if (a5 == 4)
            {
              unint64_t v165 = result & 0xFFFFFFFFFFFFFE00;
              if ((result & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t result = 31743;
              }
              else if (v165 == 32256)
              {
                unint64_t result = 0x8000;
              }
              else if (v165 == 64512)
              {
                unint64_t result = 64511;
              }
            }
            if (result >= 0xFFFF) {
              LODWORD(result) = 0xFFFF;
            }
            if (v163) {
              unsigned int v166 = 0;
            }
            else {
              unsigned int v166 = result ^ 0x8000;
            }
            if (v7 == 1) {
              unint64_t result = v166;
            }
            else {
              unint64_t result = result;
            }
            unsigned int v183 = result;
            if (v49 == 6)
            {
              uint64_t v167 = v122;
              BOOL v168 = v118 == 0x8000;
            }
            else
            {
              uint64_t v169 = *((unsigned int *)&v187 + v133);
              BOOL v168 = v131 == v169;
              if (v118 | v169)
              {
                if (v129 >= 0x10000 && v169 == v130) {
                  uint64_t v167 = 0xFFFFLL;
                }
                else {
                  uint64_t v167 = v121 + v120 * v169;
                }
              }
              else
              {
                uint64_t v167 = 0;
              }
              ++v133;
            }
            unint64_t v170 = v167 + v118;
            if (a5 == 4)
            {
              unint64_t v171 = v170 & 0xFFFFFFFFFFFFFE00;
              if ((v170 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v170 = 31743;
              }
              else if (v171 == 32256)
              {
                unint64_t v170 = 0x8000;
              }
              else if (v171 == 64512)
              {
                unint64_t v170 = 64511;
              }
            }
            if (v170 >= 0xFFFF) {
              int v172 = 0xFFFF;
            }
            else {
              int v172 = v170;
            }
            if (v168) {
              LODWORD(v15) = 0;
            }
            else {
              LODWORD(v15) = v172 ^ 0x8000;
            }
            if (v7 != 1) {
              LODWORD(v15) = v172;
            }
            int v184 = v15;
            if (v49 != 7)
            {
              uint64_t v173 = *((unsigned int *)&v187 + v133);
              BOOL v124 = v131 == v173;
              if (v118 | v173)
              {
                if (v129 >= 0x10000 && v173 == v130) {
                  unint64_t v122 = 0xFFFFLL;
                }
                else {
                  unint64_t v122 = v121 + v120 * v173;
                }
              }
              else
              {
                unint64_t v122 = 0;
              }
            }
            unint64_t v174 = v122 + v118;
            unsigned int v5 = a4;
            a3 = v180;
            if (a5 == 4)
            {
              unint64_t v175 = v174 & 0xFFFFFFFFFFFFFE00;
              if ((v174 & 0xFFFFFFFFFFFFFE00) == 0x7C00)
              {
                unint64_t v174 = 31743;
              }
              else if (v175 == 32256)
              {
                unint64_t v174 = 0x8000;
              }
              else if (v175 == 64512)
              {
                unint64_t v174 = 64511;
              }
            }
            if (v174 >= 0xFFFF) {
              LOWORD(v174) = -1;
            }
            LOWORD(v14) = v174 ^ 0x8000;
            if (v124) {
              LOWORD(v14) = 0;
            }
            if (v7 != 1) {
              LOWORD(v14) = v174;
            }
            goto LABEL_3;
          }
          uint64_t v54 = v121 + v120 * v54;
        }
        uint64_t v133 = 1;
        goto LABEL_138;
      }
      uint64_t v133 = 0;
      uint64_t v54 = v122;
      BOOL v132 = v118 == 0x8000;
      goto LABEL_138;
    }
    if (v120 <= v123) {
      unsigned int v134 = 31743;
    }
    else {
      unsigned int v134 = 0;
    }
    if (v7 == 1) {
      uint64_t v15 = v134;
    }
    else {
      uint64_t v15 = 64511;
    }
    if (a5 == 4)
    {
      int v135 = v118 & 0xFFFFFE00;
      a3 = v180;
      if ((v118 & 0xFFFFFE00) == 0x7C00)
      {
        LOWORD(v15) = v14;
        unint64_t result = v14;
        LOWORD(v13) = v14;
        LOWORD(v11) = v14;
        LOWORD(v10) = v14;
        LOWORD(v8) = v14;
        LOWORD(v9) = v14;
      }
      else if (v135 == 64512)
      {
        LOWORD(v14) = v15;
        unint64_t result = v15;
        LOWORD(v13) = v15;
        LOWORD(v11) = v15;
        LOWORD(v10) = v15;
        LOWORD(v8) = v15;
        LOWORD(v9) = v15;
      }
      else
      {
        LOWORD(v9) = ((a5 & 0xFFFFFFFD) != 1) << 15;
        LOWORD(v14) = v9;
        LOWORD(v15) = v9;
        unint64_t result = ((a5 & 0xFFFFFFFD) != 1) << 15;
        LOWORD(v13) = v9;
        LOWORD(v11) = v9;
        LOWORD(v10) = v9;
        LOWORD(v8) = v9;
        if (v135 != 32256)
        {
          LOWORD(v14) = v128;
          LOWORD(v15) = v128;
          unint64_t result = v128;
          LOWORD(v13) = v128;
          LOWORD(v11) = v128;
          LOWORD(v10) = v128;
          LOWORD(v8) = v128;
          LOWORD(v9) = v128;
        }
      }
    }
    else
    {
      LOWORD(v14) = v128;
      LOWORD(v15) = v128;
      unint64_t result = v128;
      LOWORD(v13) = v128;
      int32x4_t v181 = vdupq_n_s32(v128);
      LOWORD(v11) = v128;
      LOWORD(v10) = v128;
      LOWORD(v8) = v128;
      LOWORD(v9) = v128;
      a3 = v180;
    }
LABEL_3:
    int16x8_t v16 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kRegionOffset + 2 * v6;
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    int8x16_t v19 = &v186[4 * v17];
    uint64_t v20 = v18;
    v19[v20] = v9;
    int32x4_t v21 = &v186[4 * (v17 + 1)];
    v21[v20] = v8;
    uint64_t v22 = (v18 + 1);
    v19[v22] = v10;
    v21[v22] = v11;
    int64x2_t v23 = &v186[4 * (v17 + 2)];
    v23[v20] = v13;
    int64x2_t v24 = &v186[4 * (v17 + 3)];
    v24[v20] = result;
    v23[v22] = v15;
    v24[v22] = v14;
    ++v6;
  }
  while (v6 != 4);
  *a1 = v186[0];
  a1[1] = v186[4];
  a1[2] = v186[1];
  a1[3] = v186[5];
  a1[4] = v186[8];
  a1[5] = v186[12];
  a1[6] = v186[9];
  a1[7] = v186[13];
  a1[8] = v186[16];
  a1[9] = v186[20];
  a1[10] = v186[17];
  a1[11] = v186[21];
  a1[12] = v186[24];
  a1[13] = v186[28];
  a1[14] = v186[25];
  a1[15] = v186[29];
  int16x8_t v176 = (_WORD *)((char *)a1 + a2);
  *int16x8_t v176 = v186[2];
  v176[1] = v186[6];
  v176[2] = v186[3];
  v176[3] = v186[7];
  v176[4] = v186[10];
  v176[5] = v186[14];
  v176[6] = v186[11];
  v176[7] = v186[15];
  v176[8] = v186[18];
  v176[9] = v186[22];
  v176[10] = v186[19];
  v176[11] = v186[23];
  v176[12] = v186[26];
  v176[13] = v186[30];
  v176[14] = v186[27];
  v176[15] = v186[31];
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, unsigned char *a4, int a5, int a6, int a7, int16x4_t a8, int16x4_t a9, double a10, double a11, int16x4_t a12)
{
  unint64_t v15 = a3;
  if (a5 >= 4) {
    unsigned int v17 = 4;
  }
  else {
    unsigned int v17 = a5;
  }
  if (a6 >= 2) {
    unsigned int v18 = 2;
  }
  else {
    unsigned int v18 = a6;
  }
  if (v17 && v18)
  {
    uint64_t v19 = result;
    int v20 = a7;
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(a3, a4, result, a2, v17, v18, a7, a8, a9, a10, a11, a12);
    v15 += result;
  }
  else
  {
    uint64_t v19 = result;
    int v20 = a7;
    *a4 = 0;
  }
  uint64_t v40 = 2 * a2;
  int32x4_t v21 = a4 + 1;
  if (a6 <= 2) {
    int v22 = 2;
  }
  else {
    int v22 = a6;
  }
  unsigned int v23 = v22 - 2;
  if (v23 >= 2) {
    int v24 = 2;
  }
  else {
    int v24 = v23;
  }
  if (v17 && v24)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v21, v19 + v40, a2, v17, v24, v20, a8, a9, a10, a11, a12);
    v15 += result;
  }
  else
  {
    *int32x4_t v21 = 0;
  }
  uint64_t v25 = a4 + 2;
  if (a5 <= 4) {
    int v26 = 4;
  }
  else {
    int v26 = a5;
  }
  unsigned int v27 = v26 - 4;
  if (v27 >= 4) {
    int v28 = 4;
  }
  else {
    int v28 = v27;
  }
  if (v28 && v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v25, v19 + 32, a2, v28, v18, v20, a8, a9, a10, a11, a12);
    v15 += result;
    uint64_t v29 = a4 + 3;
  }
  else
  {
    *uint64_t v25 = 0;
    uint64_t v29 = a4 + 3;
    if (!v28) {
      goto LABEL_33;
    }
  }
  if (v24)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v29, v19 + v40 + 32, a2, v28, v24, v20, a8, a9, a10, a11, a12);
    v15 += result;
    goto LABEL_34;
  }
LABEL_33:
  *uint64_t v29 = 0;
LABEL_34:
  uint64_t v30 = a4 + 4;
  if (a6 <= 4) {
    int v31 = 4;
  }
  else {
    int v31 = a6;
  }
  unsigned int v32 = v31 - 4;
  if (v32 >= 2) {
    int v33 = 2;
  }
  else {
    int v33 = v32;
  }
  if (v17 && v33)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v30, v19 + 4 * a2, a2, v17, v33, v20, a8, a9, a10, a11, a12);
    v15 += result;
  }
  else
  {
    *uint64_t v30 = 0;
  }
  int8x16_t v34 = a4 + 5;
  if (a6 <= 6) {
    int v35 = 6;
  }
  else {
    int v35 = a6;
  }
  unsigned int v36 = v35 - 6;
  if (v36 >= 2) {
    int v37 = 2;
  }
  else {
    int v37 = v36;
  }
  if (v17 && v37)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v34, v19 + 6 * a2, a2, v17, v37, v20, a8, a9, a10, a11, a12);
    v15 += result;
    unint64_t v38 = a4 + 6;
    if (!v28) {
      goto LABEL_57;
    }
  }
  else
  {
    *int8x16_t v34 = 0;
    unint64_t v38 = a4 + 6;
    if (!v28) {
      goto LABEL_57;
    }
  }
  if (v33)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v38, v19 + 4 * a2 + 32, a2, v28, v33, v20, a8, a9, a10, a11, a12);
    v15 += result;
    uint64_t v39 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *unint64_t v38 = 0;
  uint64_t v39 = a4 + 7;
  if (!v28)
  {
LABEL_62:
    *uint64_t v39 = 0;
    return result;
  }
LABEL_58:
  if (!v37) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)3,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(v15, v39, v19 + 6 * a2 + 32, a2, v28, v37, v20, a8, a9, a10, a11, a12);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(_OWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4, int32x4_t a5, int32x4_t a6)
{
  unint64_t v6 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = v7 + 18;
  uint64_t v9 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x2F) {
    v9 |= *(void *)(v6 + 8) << (-8 * (a3 & 7u));
  }
  a5.i32[0] = v9;
  a5.i32[1] = (unsigned __int16)v9 >> 5;
  *(int8x8_t *)a5.i8 = vand_s8(*(int8x8_t *)a5.i8, (int8x8_t)0x1F0000001FLL);
  *(int16x4_t *)a5.i8 = vmovn_s32(a5);
  a6.i32[0] = (unsigned __int16)v9 >> 10;
  a6.i32[1] = v9 >> 14;
  *(int32x2_t *)a6.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
  *(int16x4_t *)a6.i8 = vmovn_s32(a6);
  unint64_t v10 = v7 + 50;
  unint64_t v11 = v8 >> 6;
  unint64_t v12 = v8 & 0x3A;
  uint64_t v13 = *(void *)(v6 + 8 * (v8 >> 6)) >> (v8 & 0x3A);
  if (v12 >= 0x21) {
    v13 |= *(void *)(v6 + 8 * v11 + 8) << -(char)v12;
  }
  int16x8_t v14 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)a5.i8, 0);
  int8x16_t v15 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
  unint64_t v16 = (8 * (a3 & 7)) | 0x400;
  v17.i64[0] = 0x3000300030003;
  v17.i64[1] = 0x3000300030003;
  int16x8_t v18 = (int16x8_t)vandq_s8((int8x16_t)v14, v17);
  int16x8_t v19 = (int16x8_t)vbicq_s8(v15, (int8x16_t)vceqq_s16(v18, (int16x8_t)v17));
  v17.i64[0] = 0x202020202020202;
  v17.i64[1] = 0x202020202020202;
  int8x16_t v20 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v14.i8, (int8x8_t)0x4000400040004)))), v17);
  if (vmaxvq_s8(v20) < 1)
  {
    int v30 = 0;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
    int16x8_t v32 = v19;
    int16x8_t v33 = v19;
    int16x8_t v34 = v19;
    v35.i64[0] = -1;
    v35.i64[1] = -1;
    int16x8_t v36 = v19;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v38.i64[0] = -1;
    v38.i64[1] = -1;
  }
  else
  {
    int16x8_t v21 = (int16x8_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v20, v20));
    int32x4_t v22 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v21, v21));
    unint64_t v23 = vpaddq_s32(v22, v22).u64[0];
    v24.i64[0] = v23;
    v24.i64[1] = HIDWORD(v23);
    int64x2_t v25 = v24;
    unint64_t v26 = vaddvq_s64(v24);
    unint64_t v27 = v26 + v10;
    if (v26 <= 0x80 && v16 >= v27)
    {
      unint64_t v39 = v10 & 0x3A;
      int64x2_t v40 = vaddq_s64(vzip1q_s64((int64x2_t)0, v25), vdupq_n_s64(v39));
      int64x2_t v41 = (int64x2_t *)(v6 + ((v10 >> 3) & 8));
      int32x4_t v29 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v41, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v40)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41->i64[0], 0), (uint64x2_t)vnegq_s64(v40)));
      if (v26 + v39 < 0x81)
      {
        int v30 = 0;
      }
      else
      {
        int v30 = 0;
        int32x4_t v29 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v40)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v41[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v40))), (int8x16_t)v29);
      }
      unint64_t v10 = v27;
    }
    else
    {
      int32x4_t v29 = 0uLL;
      int v30 = 1;
    }
    int32x2_t v42 = vzip1_s32(*(int32x2_t *)v22.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v22, (int8x16_t)v22, 8uLL));
    v43.i64[0] = v42.u32[0];
    v43.i64[1] = v42.u32[1];
    int32x4_t v44 = (int32x4_t)vshlq_u64((uint64x2_t)v29, (uint64x2_t)vnegq_s64(v43));
    *(int32x2_t *)v29.i8 = vmovn_s64((int64x2_t)v29);
    *(int32x2_t *)v44.i8 = vmovn_s64((int64x2_t)v44);
    int16x8_t v45 = (int16x8_t)vzip1q_s32(v29, v44);
    int16x8_t v46 = (int16x8_t)vshlq_u32((uint32x4_t)v45, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v21.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL)))));
    *(int16x4_t *)v45.i8 = vmovn_s32((int32x4_t)v45);
    *(int16x4_t *)v46.i8 = vmovn_s32((int32x4_t)v46);
    int16x8_t v47 = vzip1q_s16(v45, v46);
    v45.i64[0] = 0x101010101010101;
    v45.i64[1] = 0x101010101010101;
    *(int8x8_t *)v48.i8 = vand_s8(vzip1_s8(vmovn_s16(v47), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v47, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v20.i8, *(int8x8_t *)v14.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8((int8x16_t)v45, v20), (int8x8_t)-1));
    v48.i64[1] = v48.i64[0];
    *(int8x8_t *)v48.i8 = vqtbl1_s8(v48, (int8x8_t)0x703060205010400);
    *(int16x4_t *)v47.i8 = vdup_lane_s16(*(int16x4_t *)v48.i8, 0);
    *(int16x4_t *)v45.i8 = vdup_lane_s16(*(int16x4_t *)v48.i8, 1);
    int8x8_t v49 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v48.i8, 2);
    int8x8_t v50 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v48.i8, 3);
    int16x8_t v36 = vsubw_s8(v19, *(int8x8_t *)v47.i8);
    int16x8_t v32 = vsubw_s8(v19, *(int8x8_t *)v45.i8);
    int16x8_t v33 = vsubw_s8(v19, v49);
    int16x8_t v34 = vsubw_s8(v19, v50);
    int8x16_t v38 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v47.i8));
    int8x16_t v37 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v45.i8));
    int8x16_t v35 = (int8x16_t)vmovl_s8(vceqz_s8(v49));
    int8x16_t v31 = (int8x16_t)vmovl_s8(vceqz_s8(v50));
  }
  v51.i64[0] = 0x8000800080008;
  v51.i64[1] = 0x8000800080008;
  int32x4_t v52 = 0uLL;
  int16x8_t v53 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16(v14, v51), (int8x16_t)0, 0xCuLL), (int8x16_t)v19);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v53, v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  unint64_t v59 = v58 + v10;
  if (v58 <= 0x80 && v16 >= v59)
  {
    unint64_t v61 = v10 & 0x3F;
    int64x2_t v62 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v61));
    unint64_t v63 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v63, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v62)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63->i64[0], 0), (uint64x2_t)vnegq_s64(v62)));
    if (v58 + v61 >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v62)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v63[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v62))), (int8x16_t)v52);
    }
    unint64_t v10 = v59;
  }
  else
  {
    int v30 = 1;
  }
  int v64 = v14.i8[0] & 3;
  if (v64 == 2)
  {
    BOOL v65 = v16 >= v10 + 8;
    if (v16 >= v10 + 8) {
      v10 += 8;
    }
    unint64_t v66 = v10 + 8;
    if (!v65 || v16 < v66) {
      int v30 = 1;
    }
    if (v16 >= v66) {
      v10 += 8;
    }
  }
  int32x4_t v68 = 0uLL;
  int16x8_t v69 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v36, 0xCuLL);
  int32x4_t v70 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v69, v69));
  unint64_t v71 = vpaddq_s32(v70, v70).u64[0];
  v72.i64[0] = v71;
  v72.i64[1] = HIDWORD(v71);
  int64x2_t v73 = v72;
  unint64_t v74 = vaddvq_s64(v72);
  unint64_t v75 = v74 + v10;
  if (v74 <= 0x80 && v16 >= v75)
  {
    unint64_t v78 = v10 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v73), vdupq_n_s64(v78));
    int v80 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v74 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v10 = v75;
  }
  else
  {
    int v30 = 1;
    int32x4_t v77 = 0uLL;
  }
  int32x4_t v81 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v36, v36));
  unint64_t v82 = vpaddq_s32(v81, v81).u64[0];
  v83.i64[0] = v82;
  v83.i64[1] = HIDWORD(v82);
  int64x2_t v84 = v83;
  unint64_t v85 = vaddvq_s64(v83);
  unint64_t v86 = v85 + v10;
  if (v85 <= 0x80 && v16 >= v86)
  {
    unint64_t v88 = v10 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v84), vdupq_n_s64(v88));
    unint64_t v90 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v68 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v85 + v88 >= 0x81) {
      int32x4_t v68 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v68);
    }
    unint64_t v10 = v86;
  }
  else
  {
    int v30 = 1;
  }
  int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v32, v32));
  unint64_t v92 = vpaddq_s32(v91, v91).u64[0];
  v93.i64[0] = v92;
  v93.i64[1] = HIDWORD(v92);
  int64x2_t v94 = v93;
  unint64_t v95 = vaddvq_s64(v93);
  unint64_t v96 = v95 + v10;
  int32x4_t v97 = 0uLL;
  if (v95 <= 0x80 && v16 >= v96)
  {
    unint64_t v100 = v10 & 0x3F;
    int64x2_t v101 = vaddq_s64(vzip1q_s64((int64x2_t)0, v94), vdupq_n_s64(v100));
    unint64_t v102 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v99 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v102, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102->i64[0], 0), (uint64x2_t)vnegq_s64(v101)));
    if (v95 + v100 >= 0x81) {
      int32x4_t v99 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v102[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v101))), (int8x16_t)v99);
    }
    unint64_t v10 = v96;
    if (v95 > 0x80) {
      goto LABEL_63;
    }
  }
  else
  {
    int v30 = 1;
    int32x4_t v99 = 0uLL;
    if (v95 > 0x80) {
      goto LABEL_63;
    }
  }
  unint64_t v103 = v95 + v10;
  if (v16 < v95 + v10)
  {
LABEL_63:
    unint64_t v103 = v10;
    int v30 = 1;
    goto LABEL_64;
  }
  unint64_t v104 = v10 & 0x3F;
  int64x2_t v105 = vaddq_s64(vzip1q_s64((int64x2_t)0, v94), vdupq_n_s64(v104));
  unint64_t v106 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
  int32x4_t v97 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v106, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106->i64[0], 0), (uint64x2_t)vnegq_s64(v105)));
  if (v95 + v104 >= 0x81) {
    int32x4_t v97 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v106[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v105))), (int8x16_t)v97);
  }
LABEL_64:
  int32x4_t v107 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v33, v33));
  unint64_t v108 = vpaddq_s32(v107, v107).u64[0];
  v109.i64[0] = v108;
  v109.i64[1] = HIDWORD(v108);
  int64x2_t v110 = v109;
  unint64_t v111 = vaddvq_s64(v109);
  int32x4_t v112 = 0uLL;
  if (v111 > 0x80 || (unint64_t v113 = v111 + v103, v16 < v111 + v103))
  {
    unint64_t v113 = v103;
    int v30 = 1;
    int32x4_t v116 = 0uLL;
  }
  else
  {
    int64x2_t v114 = vaddq_s64(vzip1q_s64((int64x2_t)0, v110), vdupq_n_s64(v103 & 0x3F));
    unint64_t v115 = (int64x2_t *)(v6 + 8 * (v103 >> 6));
    int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v115, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115->i64[0], 0), (uint64x2_t)vnegq_s64(v114)));
    if (v111 + (v103 & 0x3F) >= 0x81) {
      int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v115[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v114))), (int8x16_t)v116);
    }
  }
  if (v111 > 0x80 || (unint64_t v117 = v111 + v113, v16 < v111 + v113))
  {
    unint64_t v117 = v113;
    int v30 = 1;
  }
  else
  {
    int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v110), vdupq_n_s64(v113 & 0x3F));
    unint64_t v119 = (int64x2_t *)(v6 + 8 * (v113 >> 6));
    int32x4_t v112 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
    if (v111 + (v113 & 0x3F) >= 0x81) {
      int32x4_t v112 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v112);
    }
  }
  int32x4_t v120 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16(v34, v34));
  unint64_t v121 = vpaddq_s32(v120, v120).u64[0];
  v122.i64[0] = v121;
  v122.i64[1] = HIDWORD(v121);
  int64x2_t v123 = v122;
  unint64_t v124 = vaddvq_s64(v122);
  if (v124 > 0x80 || (unint64_t v125 = v124 + v117, v16 < v124 + v117))
  {
    unint64_t v125 = v117;
    int v30 = 1;
    int64x2_t v129 = 0uLL;
  }
  else
  {
    unint64_t v126 = v117 & 0x3F;
    int64x2_t v127 = vaddq_s64(vzip1q_s64((int64x2_t)0, v123), vdupq_n_s64(v126));
    unint64_t v128 = (int64x2_t *)(v6 + 8 * (v117 >> 6));
    int64x2_t v129 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v128, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128->i64[0], 0), (uint64x2_t)vnegq_s64(v127)));
    if (v124 + v126 >= 0x81) {
      int64x2_t v129 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v128[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v127))), (int8x16_t)v129);
    }
  }
  if (v124 > 0x80 || v16 < v124 + v125) {
    goto LABEL_87;
  }
  int64x2_t v130 = vaddq_s64(vzip1q_s64((int64x2_t)0, v123), vdupq_n_s64(v125 & 0x3F));
  unint64_t v131 = (int64x2_t *)(v6 + 8 * (v125 >> 6));
  int64x2_t v132 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v131, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131->i64[0], 0), (uint64x2_t)vnegq_s64(v130)));
  if (v124 + (v125 & 0x3F) >= 0x81) {
    int64x2_t v132 = (int64x2_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v131[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v130))), (int8x16_t)v132);
  }
  if (v30 || (uint64_t v133 = a4 + 1, v16 + 8 * v133 - (v124 + v125) - 1024 >= 9))
  {
LABEL_87:
    uint64_t v133 = 0;
    unint64_t v134 = (unint64_t)&v247;
LABEL_88:
    *(void *)(v134 & 0xFFFFFFFFFFFFFFF8) |= 0xFFFFLL << ((8 * v134) & 0x20);
    *a1 = 0u;
    a1[1] = 0u;
    int v135 = (_OWORD *)((char *)a1 + a2);
    *int v135 = 0u;
    v135[1] = 0u;
    unint64_t v136 = (_OWORD *)((char *)a1 + 2 * a2);
    unint64_t v137 = (_OWORD *)((char *)a1 + 2 * a2 + a2);
    *unint64_t v136 = 0u;
    v136[1] = 0u;
    *unint64_t v137 = 0u;
    v137[1] = 0u;
    return v133;
  }
  if (v64 == 2)
  {
    uint64_t v133 = 0;
    unint64_t v134 = (unint64_t)&v248;
    goto LABEL_88;
  }
  int32x2_t v139 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
  int32x2_t v140 = vzip1_s32(*(int32x2_t *)v91.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL));
  v141.i64[0] = v139.u32[0];
  v141.i64[1] = v139.u32[1];
  int64x2_t v142 = v141;
  v141.i64[0] = v140.u32[0];
  v141.i64[1] = v140.u32[1];
  uint64x2_t v143 = (uint64x2_t)vnegq_s64(v142);
  uint64x2_t v144 = (uint64x2_t)vnegq_s64(v141);
  int32x4_t v145 = (int32x4_t)vshlq_u64((uint64x2_t)v52, v143);
  *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
  *(int32x2_t *)v145.i8 = vmovn_s64((int64x2_t)v145);
  int16x8_t v146 = (int16x8_t)vzip1q_s32(v52, v145);
  int32x4_t v147 = (int32x4_t)vshlq_u64((uint64x2_t)v99, v144);
  *(int32x2_t *)v99.i8 = vmovn_s64((int64x2_t)v99);
  *(int32x2_t *)v147.i8 = vmovn_s64((int64x2_t)v147);
  int16x8_t v148 = (int16x8_t)vzip1q_s32(v99, v147);
  int32x4_t v149 = (int32x4_t)vshlq_u64((uint64x2_t)v97, v144);
  *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
  *(int32x2_t *)v149.i8 = vmovn_s64((int64x2_t)v149);
  int16x8_t v150 = (int16x8_t)vzip1q_s32(v97, v149);
  uint32x4_t v151 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL))));
  int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v146, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v53, (int8x16_t)v53, 8uLL)))));
  *(int16x4_t *)v146.i8 = vmovn_s32((int32x4_t)v146);
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  int16x8_t v153 = vzip1q_s16(v146, v152);
  int16x8_t v154 = (int16x8_t)vshlq_u32((uint32x4_t)v148, v151);
  int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v150, v151);
  *(int16x4_t *)v148.i8 = vmovn_s32((int32x4_t)v148);
  *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
  *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v150);
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  int16x8_t v156 = vzip1q_s16(v148, v154);
  v154.i64[0] = 0x10001000100010;
  v154.i64[1] = 0x10001000100010;
  int16x8_t v157 = vzip1q_s16(v150, v155);
  v155.i64[0] = 0xF000F000F000FLL;
  v155.i64[1] = 0xF000F000F000FLL;
  int16x8_t v158 = vsubq_s16(v154, v53);
  int16x8_t v159 = vaddq_s16(v53, v155);
  v155.i64[0] = 0x10001000100010;
  v155.i64[1] = 0x10001000100010;
  int16x8_t v160 = vshlq_s16(v153, v158);
  v158.i64[0] = 0xF000F000F000FLL;
  v158.i64[1] = 0xF000F000F000FLL;
  int16x8_t v161 = vsubq_s16(v155, v32);
  int16x8_t v162 = vaddq_s16(v32, v158);
  int16x8_t v163 = vshlq_s16(v157, v161);
  int8x16_t v164 = (int8x16_t)vshlq_s16(v160, v159);
  int16x8_t v165 = vshlq_s16(vshlq_s16(v156, v161), v162);
  int8x16_t v166 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v164.i8, 0);
  int16x8_t v167 = (int16x8_t)vandq_s8(v37, v166);
  int16x8_t v168 = vsubq_s16(v165, v167);
  int16x8_t v169 = vsubq_s16(vshlq_s16(v163, v162), v167);
  *(int32x2_t *)v165.i8 = vzip1_s32(*(int32x2_t *)v107.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v107, (int8x16_t)v107, 8uLL));
  *(int32x2_t *)v163.i8 = vzip1_s32(*(int32x2_t *)v120.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v120, (int8x16_t)v120, 8uLL));
  v141.i64[0] = v165.u32[0];
  v141.i64[1] = v165.u32[1];
  int64x2_t v170 = v141;
  v141.i64[0] = v163.u32[0];
  v141.i64[1] = v163.u32[1];
  uint64x2_t v171 = (uint64x2_t)vnegq_s64(v170);
  int32x4_t v172 = (int32x4_t)vshlq_u64((uint64x2_t)v116, v171);
  *(int32x2_t *)v167.i8 = vmovn_s64((int64x2_t)v116);
  *(int32x2_t *)v172.i8 = vmovn_s64((int64x2_t)v172);
  int16x8_t v173 = (int16x8_t)vzip1q_s32((int32x4_t)v167, v172);
  uint64x2_t v174 = (uint64x2_t)vnegq_s64(v141);
  int32x4_t v175 = (int32x4_t)vshlq_u64((uint64x2_t)v112, v171);
  *(int32x2_t *)v112.i8 = vmovn_s64((int64x2_t)v112);
  *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
  int16x8_t v176 = (int16x8_t)vzip1q_s32(v112, v175);
  int32x4_t v177 = (int32x4_t)vshlq_u64((uint64x2_t)v129, v174);
  *(int32x2_t *)v116.i8 = vmovn_s64(v129);
  *(int32x2_t *)v177.i8 = vmovn_s64((int64x2_t)v177);
  uint32x4_t v178 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL))));
  int16x8_t v179 = (int16x8_t)vzip1q_s32(v116, v177);
  int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v173, v178);
  int16x8_t v181 = (int16x8_t)vshlq_u32((uint32x4_t)v176, v178);
  *(int16x4_t *)v173.i8 = vmovn_s32((int32x4_t)v173);
  *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
  *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
  *(int16x4_t *)v181.i8 = vmovn_s32((int32x4_t)v181);
  int16x8_t v182 = vzip1q_s16(v173, v180);
  v180.i64[0] = 0x10001000100010;
  v180.i64[1] = 0x10001000100010;
  int16x8_t v183 = vzip1q_s16(v176, v181);
  v181.i64[0] = 0xF000F000F000FLL;
  v181.i64[1] = 0xF000F000F000FLL;
  int16x8_t v184 = vsubq_s16(v180, v33);
  int16x8_t v185 = vaddq_s16(v33, v181);
  uint32x4_t v186 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v34.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v34, (int8x16_t)v34, 8uLL))));
  int16x8_t v187 = vshlq_s16(vshlq_s16(v182, v184), v185);
  int16x8_t v188 = vshlq_s16(vshlq_s16(v183, v184), v185);
  int16x8_t v189 = (int16x8_t)vandq_s8(v35, v166);
  int16x8_t v190 = vsubq_s16(v187, v189);
  int16x8_t v191 = vsubq_s16(v188, v189);
  int16x8_t v192 = (int16x8_t)vshlq_u32((uint32x4_t)v179, v186);
  *(int16x4_t *)v187.i8 = vmovn_s32((int32x4_t)v179);
  *(int16x4_t *)v192.i8 = vmovn_s32((int32x4_t)v192);
  v179.i64[0] = 0x10001000100010;
  v179.i64[1] = 0x10001000100010;
  int16x8_t v193 = vzip1q_s16(v187, v192);
  v187.i64[0] = 0xF000F000F000FLL;
  v187.i64[1] = 0xF000F000F000FLL;
  int16x8_t v194 = vsubq_s16(v179, v34);
  int16x8_t v195 = vaddq_s16(v34, v187);
  int32x4_t v196 = (int32x4_t)vshlq_u64((uint64x2_t)v132, v174);
  *(int32x2_t *)v187.i8 = vmovn_s64(v132);
  *(int32x2_t *)v196.i8 = vmovn_s64((int64x2_t)v196);
  int16x8_t v197 = (int16x8_t)vzip1q_s32((int32x4_t)v187, v196);
  int16x8_t v198 = (int16x8_t)vshlq_u32((uint32x4_t)v197, v186);
  *(int16x4_t *)v197.i8 = vmovn_s32((int32x4_t)v197);
  *(int16x4_t *)v198.i8 = vmovn_s32((int32x4_t)v198);
  int16x8_t v199 = vshlq_s16(vshlq_s16(vzip1q_s16(v197, v198), v194), v195);
  int16x8_t v200 = (int16x8_t)vandq_s8(v31, v166);
  int16x8_t v201 = vsubq_s16(vshlq_s16(vshlq_s16(v193, v194), v195), v200);
  int16x8_t v202 = vsubq_s16(v199, v200);
  int32x2_t v203 = vzip1_s32(*(int32x2_t *)v70.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v70, (int8x16_t)v70, 8uLL));
  int32x2_t v204 = vzip1_s32(*(int32x2_t *)v81.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v81, (int8x16_t)v81, 8uLL));
  v141.i64[0] = v203.u32[0];
  v141.i64[1] = v203.u32[1];
  int64x2_t v205 = v141;
  v141.i64[0] = v204.u32[0];
  v141.i64[1] = v204.u32[1];
  int32x4_t v206 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v205));
  *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
  *(int32x2_t *)v206.i8 = vmovn_s64((int64x2_t)v206);
  int16x8_t v207 = (int16x8_t)vzip1q_s32(v77, v206);
  int32x4_t v208 = (int32x4_t)vshlq_u64((uint64x2_t)v68, (uint64x2_t)vnegq_s64(v141));
  *(int32x2_t *)v68.i8 = vmovn_s64((int64x2_t)v68);
  *(int32x2_t *)v208.i8 = vmovn_s64((int64x2_t)v208);
  int16x8_t v209 = (int16x8_t)vzip1q_s32(v68, v208);
  int16x8_t v210 = (int16x8_t)vshlq_u32((uint32x4_t)v207, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v69.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL)))));
  int16x8_t v211 = (int16x8_t)vshlq_u32((uint32x4_t)v209, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v36.i8, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v36, (int8x16_t)v36, 8uLL)))));
  *(int16x4_t *)v207.i8 = vmovn_s32((int32x4_t)v207);
  *(int16x4_t *)v210.i8 = vmovn_s32((int32x4_t)v210);
  *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
  *(int16x4_t *)v211.i8 = vmovn_s32((int32x4_t)v211);
  int16x8_t v212 = vzip1q_s16(v207, v210);
  v210.i64[0] = 0x10001000100010;
  v210.i64[1] = 0x10001000100010;
  int16x8_t v213 = vzip1q_s16(v209, v211);
  v211.i64[0] = 0xF000F000F000FLL;
  v211.i64[1] = 0xF000F000F000FLL;
  int16x8_t v214 = vaddq_s16((int16x8_t)vandq_s8(v164, v38), vshlq_s16(vshlq_s16(v212, vsubq_s16(v210, v69)), vaddq_s16(v69, v211)));
  int16x8_t v215 = (int16x8_t)vandq_s8(v38, v166);
  v216.i64[0] = 0x1000100010001;
  v216.i64[1] = 0x1000100010001;
  int16x8_t v217 = vceqq_s16(v18, v216);
  int v218 = (unsigned __int16)vaddvq_s16(v217);
  int16x8_t v219 = vsubq_s16(v214, v215);
  int16x8_t v220 = vsubq_s16(vshlq_s16(vshlq_s16(v213, vsubq_s16(v210, v36)), vaddq_s16(v36, v211)), v215);
  v217.i32[0] = v13;
  int16x8_t v221 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v217.i8, 0);
  if (v218)
  {
    int8x16_t v222 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8((int8x16_t)v14, (int8x16_t)v216));
    int8x16_t v223 = (int8x16_t)v220;
    v223.i32[3] = v219.i32[0];
    int8x16_t v224 = (int8x16_t)v219;
    v224.i32[0] = v220.i32[3];
    v249.val[0] = vbslq_s8(v222, v224, (int8x16_t)v219);
    v249.val[1] = vbslq_s8(v222, v223, (int8x16_t)v220);
    v225.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v225.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v250.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v249, (int8x16_t)xmmword_242EA7570), v222), (int16x8_t)v249.val[0]);
    v250.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v249.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v249, v225), v222));
    int16x8_t v219 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v250, (int8x16_t)xmmword_242EA7580), v222), (int16x8_t)v250.val[0]);
    int16x8_t v220 = vaddq_s16((int16x8_t)v250.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v250, v225), v222));
    v250.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v168.i8, (int8x16_t)xmmword_242EA7590), v222), v168);
    v250.val[1] = (int8x16_t)vaddq_s16(v169, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v168.i8, (int8x16_t)xmmword_242EA75A0), v222));
    int16x8_t v168 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v250, (int8x16_t)xmmword_242EA75B0), v222), (int16x8_t)v250.val[0]);
    int16x8_t v169 = vaddq_s16((int16x8_t)v250.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v250, v225), v222));
    v250.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v190.i8, (int8x16_t)xmmword_242EA75C0), v222), v190);
    v250.val[1] = (int8x16_t)vaddq_s16(v191, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v190.i8, (int8x16_t)xmmword_242EA7570), v222));
    int16x8_t v190 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v250, v225), v222), (int16x8_t)v250.val[0]);
    int16x8_t v191 = vaddq_s16((int16x8_t)v250.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v250, (int8x16_t)xmmword_242EA75D0), v222));
    v249.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v201.i8, (int8x16_t)xmmword_242EA75E0), v222), v201);
    v249.val[1] = (int8x16_t)vaddq_s16(v202, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v201.i8, (int8x16_t)xmmword_242EA7570), v222));
    int16x8_t v201 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v249, v225), v222), (int16x8_t)v249.val[0]);
    int16x8_t v202 = vaddq_s16((int16x8_t)v249.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v249, (int8x16_t)xmmword_242EA75F0), v222));
  }
  int16x8_t v226 = vaddq_s16(v219, v221);
  int16x8_t v227 = vaddq_s16(v220, v221);
  int16x8_t v228 = vaddq_s16(v168, v221);
  int16x8_t v229 = vaddq_s16(v169, v221);
  int16x8_t v230 = vaddq_s16(v190, v221);
  int16x8_t v231 = vaddq_s16(v191, v221);
  int16x8_t v232 = vaddq_s16(v201, v221);
  int16x8_t v233 = vaddq_s16(v202, v221);
  v234.i64[0] = 0x10001000100010;
  v234.i64[1] = 0x10001000100010;
  int8x16_t v235 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8((int8x16_t)v14, v234));
  int64x2_t v236 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v226, (int8x16_t)xmmword_242EA76C0), v235), v226);
  int64x2_t v237 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v227, (int8x16_t)xmmword_242EA76C0), v235), v227);
  int64x2_t v238 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v228, (int8x16_t)xmmword_242EA76C0), v235), v228);
  int64x2_t v239 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v229, (int8x16_t)xmmword_242EA76C0), v235), v229);
  int64x2_t v240 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v230, (int8x16_t)xmmword_242EA76C0), v235), v230);
  int64x2_t v241 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v231, (int8x16_t)xmmword_242EA76C0), v235), v231);
  int16x8_t v242 = (int64x2_t *)((char *)a1 + a2);
  *a1 = vzip1q_s64(v236, v237);
  a1[1] = vzip1q_s64(v240, v241);
  uint16x8_t v243 = (int64x2_t *)((char *)a1 + 2 * a2);
  int64x2_t v244 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v232, (int8x16_t)xmmword_242EA76C0), v235), v232);
  *int16x8_t v242 = vzip2q_s64(v236, v237);
  v242[1] = vzip2q_s64(v240, v241);
  int64x2_t v245 = (int64x2_t)vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8((int8x16_t)v233, (int8x16_t)xmmword_242EA76C0), v235), v233);
  *uint16x8_t v243 = vzip1q_s64(v238, v239);
  v243[1] = vzip1q_s64(v244, v245);
  int32x4_t v246 = (int64x2_t *)((char *)v243 + a2);
  *int32x4_t v246 = vzip2q_s64(v238, v239);
  v246[1] = vzip2q_s64(v244, v245);
  return v133;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int16x8_t *a1, char *a2, int64x2_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  int64x2_t v7 = a3[1];
  unint64_t v6 = (int64x2_t *)((char *)a3 + 2 * a4);
  int64x2_t v8 = *(int64x2_t *)((char *)a3 + a4);
  int64x2_t v9 = *(int64x2_t *)((char *)&a3[1] + a4);
  int16x8_t v10 = (int16x8_t)vzip1q_s64(*a3, v8);
  int16x8_t v11 = (int16x8_t)vzip2q_s64(*a3, v8);
  int16x8_t v12 = (int16x8_t)vzip1q_s64(v7, v9);
  int16x8_t v13 = (int16x8_t)vzip2q_s64(v7, v9);
  int64x2_t v15 = *v6;
  int64x2_t v16 = v6[1];
  int16x8_t v14 = (int64x2_t *)((char *)v6 + a4);
  int64x2_t v17 = v14[1];
  int16x8_t v18 = (int16x8_t)vzip2q_s64(v15, *v14);
  int16x8_t v19 = (int16x8_t)vzip1q_s64(v16, v17);
  int16x8_t v20 = (int16x8_t)vzip2q_s64(v16, v17);
  int16x8_t v21 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v10.i8, 0);
  int16x8_t v22 = vsubq_s16(v10, v21);
  int16x8_t v23 = vsubq_s16(v11, v21);
  int16x8_t v435 = (int16x8_t)vzip1q_s64(v15, *v14);
  int16x8_t v24 = vsubq_s16(v435, v21);
  int16x8_t v431 = v18;
  int16x8_t v25 = vsubq_s16(v18, v21);
  int16x8_t v436 = v12;
  int16x8_t v26 = vsubq_s16(v12, v21);
  int16x8_t v432 = v20;
  int16x8_t v433 = v13;
  int16x8_t v27 = vsubq_s16(v13, v21);
  int16x8_t v28 = vsubq_s16(v19, v21);
  int16x8_t v29 = vsubq_s16(v20, v21);
  int16x8_t v30 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v22, v23), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v22, v23), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v32 = vpmaxq_s16(v30, v30);
  int16x8_t v33 = vpminq_s16(v31, v31);
  int16x8_t v34 = vpmaxq_s16(v32, v32);
  int16x8_t v35 = vpminq_s16(v33, v33);
  v36.i64[0] = 0x8000800080008000;
  v36.i64[1] = 0x8000800080008000;
  int16x8_t v37 = vmaxq_s16(v34, v36);
  v12.i64[0] = 0x8000800080008000;
  v12.i64[1] = 0x8000800080008000;
  int16x8_t v38 = vminq_s16(v35, v12);
  int16x8_t v39 = vzip1q_s16(v34, v35);
  v40.i64[0] = 0x10001000100010;
  v40.i64[1] = 0x10001000100010;
  int16x8_t v41 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v39)), (int8x16_t)vceqzq_s16(v39));
  int16x8_t v42 = vpmaxq_s16(v41, v41);
  int16x8_t v43 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v24, v25), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v44 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v24, v25), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v45 = vpmaxq_s16(v43, v43);
  int16x8_t v46 = vpminq_s16(v44, v44);
  int16x8_t v47 = vpmaxq_s16(v45, v45);
  int16x8_t v48 = vpminq_s16(v46, v46);
  int16x8_t v49 = vmaxq_s16(v37, v47);
  int16x8_t v50 = vminq_s16(v38, v48);
  int16x8_t v51 = vzip1q_s16(v47, v48);
  int16x8_t v52 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v51)), (int8x16_t)vceqzq_s16(v51));
  int16x8_t v53 = vpmaxq_s16(v52, v52);
  int16x8_t v54 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v26, v27), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v55 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v26, v27), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v56 = vpmaxq_s16(v54, v54);
  int16x8_t v57 = vpminq_s16(v55, v55);
  int16x8_t v58 = vpmaxq_s16(v56, v56);
  int16x8_t v59 = vpminq_s16(v57, v57);
  int16x8_t v60 = vmaxq_s16(v49, v58);
  int16x8_t v61 = vminq_s16(v50, v59);
  int16x8_t v62 = vzip1q_s16(v58, v59);
  int16x8_t v63 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v62)), (int8x16_t)vceqzq_s16(v62));
  int16x8_t v64 = vpmaxq_s16(v63, v63);
  int16x8_t v65 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v28, v29), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v66 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v28, v29), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v67 = vpmaxq_s16(v65, v65);
  int16x8_t v68 = vpminq_s16(v66, v66);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int16x8_t v71 = vmaxq_s16(v60, v69);
  int16x8_t v72 = vminq_s16(v61, v70);
  int16x8_t v73 = vzip1q_s16(v69, v70);
  int16x8_t v74 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v73)), (int8x16_t)vceqzq_s16(v73));
  int16x8_t v75 = vpmaxq_s16(v74, v74);
  int16x8_t v76 = vmaxq_s16(vmaxq_s16(v42, v53), vmaxq_s16(v64, v75));
  int16x8_t v77 = vclzq_s16(vsubq_s16(v71, v72));
  int16x8_t v78 = vsubq_s16(v40, v77);
  int8x16_t v79 = (int8x16_t)vcgtq_s16(v76, v78);
  int16x8_t v80 = (int16x8_t)vbslq_s8(v79, (int8x16_t)v78, (int8x16_t)v76);
  v76.i64[0] = 0x8000800080008;
  v76.i64[1] = 0x8000800080008;
  int8x16_t v81 = vandq_s8(v79, (int8x16_t)v76);
  v82.i64[0] = 0x3000300030003;
  v82.i64[1] = 0x3000300030003;
  int16x8_t v83 = vmaxq_s16(vminq_s16(vsubq_s16(v80, v42), v82), (int16x8_t)0);
  int16x8_t v84 = vmaxq_s16(vminq_s16(vsubq_s16(v80, v53), v82), (int16x8_t)0);
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16(v80, v64), v82), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16(v80, v75), v82), (int16x8_t)0);
  v87.i64[0] = 0x4000400040004;
  v87.i64[1] = 0x4000400040004;
  int16x8_t v88 = (int16x8_t)vbicq_s8(v87, (int8x16_t)vceqq_s16(vaddq_s16(v86, v85), vnegq_s16(vaddq_s16(v83, v84))));
  int8x16_t v89 = vorrq_s8((int8x16_t)v88, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v80), (int8x16_t)v82), v81));
  int8x16_t v446 = (int8x16_t)v29;
  int8x16_t v447 = (int8x16_t)v21;
  int16x8_t v437 = v22;
  int8x16_t v439 = (int8x16_t)v23;
  int8x16_t v442 = (int8x16_t)v25;
  int8x16_t v443 = (int8x16_t)v26;
  int8x16_t v444 = (int8x16_t)v27;
  int8x16_t v445 = (int8x16_t)v28;
  v21.i64[0] = 0xF000F000F000FLL;
  v21.i64[1] = 0xF000F000F000FLL;
  int v90 = (unsigned __int16)vmaxvq_s16(v80);
  v22.i64[0] = -1;
  v22.i64[1] = -1;
  int16x8_t v91 = vshlq_s16(v22, vsubq_s16(v21, v77));
  int8x16_t v441 = (int8x16_t)v24;
  int8x16_t v427 = (int8x16_t)v29;
  int8x16_t v429 = (int8x16_t)v27;
  BOOL v93 = a5 < 4 || a6 < 2;
  int8x16_t v453 = (int8x16_t)v80;
  int8x16_t v454 = (int8x16_t)v72;
  int8x16_t v94 = vandq_s8((int8x16_t)vsubq_s16(v91, v72), v79);
  int8x16_t v425 = (int8x16_t)v71;
  int8x16_t v455 = (int8x16_t)v71;
  int8x16_t v456 = v94;
  int16x8_t v95 = vsubq_s16(v80, v83);
  int16x8_t v96 = vsubq_s16(v80, v84);
  int8x16_t v449 = (int8x16_t)v95;
  int8x16_t v450 = (int8x16_t)v96;
  int16x8_t v97 = vsubq_s16(v80, v85);
  int16x8_t v98 = vsubq_s16(v80, v86);
  int8x16_t v451 = (int8x16_t)v97;
  int8x16_t v452 = (int8x16_t)v98;
  int8x16_t v448 = v89;
  if (v90)
  {
    int8x16_t v419 = v94;
    int8x16_t v421 = v89;
    int16x8_t v423 = v10;
    int8x16_t v424 = (int8x16_t)v11;
    int16x8_t v434 = v19;
    int16x8_t v99 = vsubq_s16(v437, (int16x8_t)vqtbl1q_s8((int8x16_t)v437, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v100 = vsubq_s16(v23, (int16x8_t)vqtbl1q_s8((int8x16_t)v23, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v101 = vsubq_s16((int16x8_t)v441, (int16x8_t)vqtbl1q_s8(v441, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v102 = vsubq_s16((int16x8_t)v442, (int16x8_t)vqtbl1q_s8(v442, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v103 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v99, v100), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v104 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v99, v100), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v105 = vpmaxq_s16(v103, v103);
    int16x8_t v106 = vpminq_s16(v104, v104);
    int16x8_t v107 = vpmaxq_s16(v105, v105);
    int16x8_t v108 = vpminq_s16(v106, v106);
    v109.i64[0] = 0x8000800080008000;
    v109.i64[1] = 0x8000800080008000;
    int16x8_t v110 = vmaxq_s16(v107, v109);
    v111.i64[0] = 0x8000800080008000;
    v111.i64[1] = 0x8000800080008000;
    int16x8_t v112 = vminq_s16(v108, v111);
    int16x8_t v113 = vzip1q_s16(v107, v108);
    int16x8_t v114 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v113)), (int8x16_t)vceqzq_s16(v113));
    int16x8_t v115 = vpmaxq_s16(v114, v114);
    int16x8_t v116 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v101, v102), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v117 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v101, v102), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v118 = vpmaxq_s16(v116, v116);
    int16x8_t v119 = vpminq_s16(v117, v117);
    int16x8_t v120 = vpmaxq_s16(v118, v118);
    int16x8_t v121 = vpminq_s16(v119, v119);
    int16x8_t v122 = vmaxq_s16(v110, v120);
    int16x8_t v123 = vminq_s16(v112, v121);
    int16x8_t v124 = vzip1q_s16(v120, v121);
    int16x8_t v125 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v124)), (int8x16_t)vceqzq_s16(v124));
    int16x8_t v126 = vpmaxq_s16(v125, v125);
    int16x8_t v415 = vsubq_s16((int16x8_t)v444, (int16x8_t)vqtbl1q_s8(v444, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v416 = vsubq_s16((int16x8_t)v443, (int16x8_t)vqtbl1q_s8(v443, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v127 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v416, v415), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v128 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v416, v415), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v129 = vpmaxq_s16(v127, v127);
    int16x8_t v130 = vpminq_s16(v128, v128);
    int16x8_t v131 = vpmaxq_s16(v129, v129);
    int16x8_t v132 = vpminq_s16(v130, v130);
    int16x8_t v133 = vmaxq_s16(v122, v131);
    int16x8_t v134 = vminq_s16(v123, v132);
    int16x8_t v135 = vzip1q_s16(v131, v132);
    int16x8_t v136 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v135)), (int8x16_t)vceqzq_s16(v135));
    int16x8_t v137 = vpmaxq_s16(v136, v136);
    int16x8_t v413 = vsubq_s16((int16x8_t)v446, (int16x8_t)vqtbl1q_s8(v446, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v414 = vsubq_s16((int16x8_t)v445, (int16x8_t)vqtbl1q_s8(v445, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v138 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v414, v413), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v139 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v414, v413), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v140 = vpmaxq_s16(v138, v138);
    int16x8_t v141 = vpminq_s16(v139, v139);
    int16x8_t v142 = vpmaxq_s16(v140, v140);
    int16x8_t v143 = vpminq_s16(v141, v141);
    int16x8_t v144 = vmaxq_s16(v133, v142);
    int16x8_t v145 = vminq_s16(v134, v143);
    int16x8_t v146 = vzip1q_s16(v142, v143);
    int16x8_t v147 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v40, vclsq_s16(v146)), (int8x16_t)vceqzq_s16(v146));
    int16x8_t v148 = vpmaxq_s16(v147, v147);
    int16x8_t v149 = vmaxq_s16(vmaxq_s16(v115, v126), vmaxq_s16(v137, v148));
    int8x16_t v412 = (int8x16_t)v144;
    int16x8_t v150 = vclzq_s16(vsubq_s16(v144, v145));
    int16x8_t v151 = vsubq_s16(v40, v150);
    int8x16_t v152 = (int8x16_t)vcgtq_s16(v149, v151);
    int16x8_t v153 = (int16x8_t)vbslq_s8(v152, (int8x16_t)v151, (int8x16_t)v149);
    v149.i64[0] = 0x18001800180018;
    v149.i64[1] = 0x18001800180018;
    int8x16_t v154 = vbslq_s8(v152, (int8x16_t)v149, (int8x16_t)v40);
    int16x8_t v155 = vmaxq_s16(vminq_s16(vsubq_s16(v153, v115), v82), (int16x8_t)0);
    int16x8_t v156 = vmaxq_s16(vminq_s16(vsubq_s16(v153, v126), v82), (int16x8_t)0);
    int16x8_t v157 = vmaxq_s16(vminq_s16(vsubq_s16(v153, v137), v82), (int16x8_t)0);
    int16x8_t v158 = vmaxq_s16(vminq_s16(vsubq_s16(v153, v148), v82), (int16x8_t)0);
    int16x8_t v159 = vsubq_s16(v153, v155);
    int16x8_t v160 = vsubq_s16(v153, v156);
    int16x8_t v161 = vsubq_s16(v153, v157);
    int16x8_t v162 = vsubq_s16(v153, v158);
    int8x16_t v163 = (int8x16_t)vceqq_s16(vaddq_s16(v158, v157), vnegq_s16(vaddq_s16(v155, v156)));
    v157.i64[0] = 0x4000400040004;
    v157.i64[1] = 0x4000400040004;
    int16x8_t v164 = (int16x8_t)vbicq_s8((int8x16_t)v157, v163);
    v156.i64[0] = 0x7000700070007;
    v156.i64[1] = 0x7000700070007;
    int16x8_t v165 = (int16x8_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)v78, v79), v95, v156), vshlq_n_s16(vaddq_s16(vaddq_s16(v97, v96), v98), 3uLL)), vaddq_s16(v88, v88)), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbicq_s8((int8x16_t)v153, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v154 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), v159, v156), vshlq_n_s16(vaddq_s16(vaddq_s16(v161, v160), v162), 3uLL)), vaddq_s16(v164, v164))), 0);
    if (vaddvq_s16(v165))
    {
      int16x8_t v437 = (int16x8_t)vbslq_s8((int8x16_t)v165, (int8x16_t)v99, (int8x16_t)v437);
      int8x16_t v439 = vbslq_s8((int8x16_t)v165, (int8x16_t)v100, v439);
      v166.i64[0] = 0x3000300030003;
      v166.i64[1] = 0x3000300030003;
      int8x16_t v167 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v153), v166), v154), (int8x16_t)v164);
      v168.i64[0] = 0xF000F000F000FLL;
      v168.i64[1] = 0xF000F000F000FLL;
      int16x8_t v169 = vsubq_s16(v168, v150);
      v170.i64[0] = -1;
      v170.i64[1] = -1;
      int8x16_t v441 = vbslq_s8((int8x16_t)v165, (int8x16_t)v101, v441);
      int8x16_t v442 = vbslq_s8((int8x16_t)v165, (int8x16_t)v102, (int8x16_t)v25);
      int8x16_t v443 = vbslq_s8((int8x16_t)v165, (int8x16_t)v416, v443);
      int8x16_t v444 = vbslq_s8((int8x16_t)v165, (int8x16_t)v415, v429);
      int8x16_t v445 = vbslq_s8((int8x16_t)v165, (int8x16_t)v414, v445);
      int8x16_t v446 = vbslq_s8((int8x16_t)v165, (int8x16_t)v413, v427);
      int8x16_t v449 = vbslq_s8((int8x16_t)v165, (int8x16_t)v159, (int8x16_t)v95);
      int8x16_t v450 = vbslq_s8((int8x16_t)v165, (int8x16_t)v160, (int8x16_t)v96);
      int8x16_t v451 = vbslq_s8((int8x16_t)v165, (int8x16_t)v161, (int8x16_t)v97);
      int8x16_t v452 = vbslq_s8((int8x16_t)v165, (int8x16_t)v162, (int8x16_t)v98);
      int8x16_t v455 = vbslq_s8((int8x16_t)v165, v412, v425);
      int8x16_t v456 = vbslq_s8((int8x16_t)v165, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v170, v169), v145), v152), v419);
      int8x16_t v453 = vbslq_s8((int8x16_t)v165, (int8x16_t)v153, (int8x16_t)v80);
      int8x16_t v454 = vbslq_s8((int8x16_t)v165, (int8x16_t)v145, (int8x16_t)v72);
      int8x16_t v447 = vbslq_s8((int8x16_t)v165, (int8x16_t)vsubq_s16((int16x8_t)v447, (int16x8_t)vqtbl1q_s8(v447, (int8x16_t)xmmword_242EA76C0)), v447);
      int8x16_t v448 = vbslq_s8((int8x16_t)v165, v167, v421);
    }
    if (v93)
    {
      int16x8_t v171 = (int16x8_t)v450;
      int16x8_t v172 = (int16x8_t)v451;
      int16x8_t v174 = (int16x8_t)v452;
      int16x8_t v173 = (int16x8_t)v453;
      int8x16_t v175 = v456;
      int16x8_t v177 = v437;
      int16x8_t v176 = (int16x8_t)v439;
      int16x8_t v179 = (int16x8_t)v441;
      int16x8_t v178 = (int16x8_t)v442;
      int16x8_t v181 = (int16x8_t)v443;
      int16x8_t v180 = (int16x8_t)v444;
      int16x8_t v183 = (int16x8_t)v445;
      int16x8_t v182 = (int16x8_t)v446;
      int16x8_t v184 = (int16x8_t)v448;
      int16x8_t v185 = (int16x8_t)v449;
    }
    else
    {
      v458.val[0] = (int8x16_t)v423;
      v458.val[1] = (int8x16_t)v11;
      int16x8_t v197 = vsubq_s16(v423, (int16x8_t)vqtbl2q_s8(v458, (int8x16_t)xmmword_242EA7570));
      int16x8_t v188 = vsubq_s16(v11, (int16x8_t)vqtbl2q_s8(v458, (int8x16_t)xmmword_242EA7620));
      v457.val[0] = (int8x16_t)v435;
      v457.val[1] = (int8x16_t)v431;
      v457.val[1].i32[3] = v11.i32[3];
      int16x8_t v189 = vsubq_s16(v435, (int16x8_t)vqtbl2q_s8(v457, (int8x16_t)xmmword_242EA7590));
      int16x8_t v190 = vsubq_s16(v431, (int16x8_t)vqtbl2q_s8(v457, (int8x16_t)xmmword_242EA7630));
      v457.val[0] = (int8x16_t)v436;
      v457.val[1] = (int8x16_t)v433;
      v457.val[1].i32[3] = v11.i32[3];
      int16x8_t v191 = vsubq_s16(v436, (int16x8_t)vqtbl2q_s8(v457, (int8x16_t)xmmword_242EA7640));
      int16x8_t v192 = vsubq_s16(v433, (int16x8_t)vqtbl2q_s8(v457, (int8x16_t)xmmword_242EA7570));
      int16x8_t v193 = v434;
      v457.val[0] = (int8x16_t)v432;
      v457.val[0].i32[3] = v11.i32[3];
      int16x8_t v194 = vsubq_s16(v434, (int16x8_t)vqtbl2q_s8(v457, (int8x16_t)xmmword_242EA7650));
      int16x8_t v195 = vsubq_s16(v432, (int16x8_t)vqtbl2q_s8(v457, (int8x16_t)xmmword_242EA7570));
      int16x8_t v196 = v188;
      v196.i32[3] = v197.i32[0];
      v197.i32[0] = v188.i32[3];
      int16x8_t v198 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v197, v196), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v199 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v197, v196), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v200 = vpmaxq_s16(v198, v198);
      int16x8_t v201 = vpminq_s16(v199, v199);
      int16x8_t v202 = vpmaxq_s16(v200, v200);
      int16x8_t v203 = vpminq_s16(v201, v201);
      v204.i64[0] = 0x8000800080008000;
      v204.i64[1] = 0x8000800080008000;
      int16x8_t v205 = vmaxq_s16(v202, v204);
      v193.i64[0] = 0x8000800080008000;
      v193.i64[1] = 0x8000800080008000;
      int16x8_t v206 = vzip1q_s16(v202, v203);
      v457.val[0] = (int8x16_t)vceqzq_s16(v206);
      v457.val[1] = (int8x16_t)vclsq_s16(v206);
      v206.i64[0] = 0x10001000100010;
      v206.i64[1] = 0x10001000100010;
      v457.val[0] = vbicq_s8((int8x16_t)vsubq_s16(v206, (int16x8_t)v457.val[1]), v457.val[0]);
      v457.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v457.val[0], (int16x8_t)v457.val[0]);
      v457.val[1] = vqtbl1q_s8((int8x16_t)vmaxq_s16(v189, v190), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v207 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v189, v190), (int8x16_t)xmmword_242EA76D0);
      v457.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v457.val[1], (int16x8_t)v457.val[1]);
      int16x8_t v208 = vpminq_s16(v207, v207);
      v457.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v457.val[1], (int16x8_t)v457.val[1]);
      int16x8_t v209 = vpminq_s16(v208, v208);
      int16x8_t v210 = vmaxq_s16(v205, (int16x8_t)v457.val[1]);
      int16x8_t v211 = vminq_s16(vminq_s16(v203, v193), v209);
      v457.val[1] = (int8x16_t)vzip1q_s16((int16x8_t)v457.val[1], v209);
      v457.val[1] = vbicq_s8((int8x16_t)vsubq_s16(v206, vclsq_s16((int16x8_t)v457.val[1])), (int8x16_t)vceqzq_s16((int16x8_t)v457.val[1]));
      v457.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v457.val[1], (int16x8_t)v457.val[1]);
      int16x8_t v212 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v191, v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v213 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v191, v192), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v214 = vpmaxq_s16(v212, v212);
      int16x8_t v215 = vpminq_s16(v213, v213);
      int16x8_t v216 = vpmaxq_s16(v214, v214);
      int16x8_t v217 = vpminq_s16(v215, v215);
      int16x8_t v218 = vmaxq_s16(v210, v216);
      int16x8_t v219 = vminq_s16(v211, v217);
      int16x8_t v220 = vzip1q_s16(v216, v217);
      int16x8_t v221 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v206, vclsq_s16(v220)), (int8x16_t)vceqzq_s16(v220));
      int16x8_t v222 = vpmaxq_s16(v221, v221);
      int16x8_t v223 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v194, v195), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v224 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v194, v195), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v225 = vpmaxq_s16(v223, v223);
      int16x8_t v226 = vpminq_s16(v224, v224);
      int16x8_t v227 = vpmaxq_s16(v225, v225);
      int16x8_t v228 = vpminq_s16(v226, v226);
      int16x8_t v229 = vmaxq_s16(v218, v227);
      int16x8_t v230 = vminq_s16(v219, v228);
      int16x8_t v231 = vzip1q_s16(v227, v228);
      int16x8_t v232 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v206, vclsq_s16(v231)), (int8x16_t)vceqzq_s16(v231));
      int16x8_t v233 = vpmaxq_s16(v232, v232);
      int16x8_t v234 = vmaxq_s16(vmaxq_s16((int16x8_t)v457.val[0], (int16x8_t)v457.val[1]), vmaxq_s16(v222, v233));
      int16x8_t v430 = v230;
      int16x8_t v235 = vclzq_s16(vsubq_s16(v229, v230));
      int16x8_t v236 = vsubq_s16(v206, v235);
      int8x16_t v237 = (int8x16_t)vcgtq_s16(v234, v236);
      int16x8_t v238 = (int16x8_t)vbslq_s8(v237, (int8x16_t)v236, (int8x16_t)v234);
      int16x8_t v239 = vsubq_s16(v238, (int16x8_t)v457.val[0]);
      v457.val[0].i64[0] = 0x3000300030003;
      v457.val[0].i64[1] = 0x3000300030003;
      int16x8_t v240 = vmaxq_s16(vminq_s16(v239, (int16x8_t)v457.val[0]), (int16x8_t)0);
      v457.val[1] = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16(v238, (int16x8_t)v457.val[1]), (int16x8_t)v457.val[0]), (int16x8_t)0);
      int16x8_t v241 = vmaxq_s16(vminq_s16(vsubq_s16(v238, v222), (int16x8_t)v457.val[0]), (int16x8_t)0);
      int16x8_t v242 = vmaxq_s16(vminq_s16(vsubq_s16(v238, v233), (int16x8_t)v457.val[0]), (int16x8_t)0);
      int16x8_t v243 = vsubq_s16(v238, v240);
      v233.i64[0] = 0x4000400040004;
      v233.i64[1] = 0x4000400040004;
      int16x8_t v244 = (int16x8_t)vbicq_s8((int8x16_t)v233, (int8x16_t)vceqq_s16(vaddq_s16(v242, v241), vnegq_s16(vaddq_s16(v240, (int16x8_t)v457.val[1]))));
      v240.i64[0] = 0x7000700070007;
      v240.i64[1] = 0x7000700070007;
      int16x8_t v426 = vsubq_s16(v238, v241);
      int16x8_t v428 = vsubq_s16(v238, v242);
      int16x8_t v420 = vsubq_s16(v238, (int16x8_t)v457.val[1]);
      int8x16_t v422 = (int8x16_t)v243;
      int16x8_t v245 = vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8((int8x16_t)v236, v237), v243, v240), vshlq_n_s16(vaddq_s16(vaddq_s16(v426, v420), v428), 3uLL)), vaddq_s16(v244, v244));
      v233.i64[0] = 0x8000800080008;
      v233.i64[1] = 0x8000800080008;
      int16x8_t v184 = (int16x8_t)v448;
      int16x8_t v185 = (int16x8_t)v449;
      int16x8_t v174 = (int16x8_t)v452;
      int16x8_t v173 = (int16x8_t)v453;
      v246.i64[0] = 0x2000200020002;
      v246.i64[1] = 0x2000200020002;
      int16x8_t v171 = (int16x8_t)v450;
      int16x8_t v172 = (int16x8_t)v451;
      int16x8_t v247 = (int16x8_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v453, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v448, (int8x16_t)v233))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16(v184, v184), (int8x16_t)v233)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v448, v457.val[0]), v246), (int8x16_t)v206)), (int16x8_t)v449,
                                                       v240),
                                                     vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v451, (int16x8_t)v450), (int16x8_t)v452), 3uLL)), v245), 0);
      int8x16_t v175 = v456;
      int16x8_t v177 = v437;
      int16x8_t v176 = (int16x8_t)v439;
      int16x8_t v179 = (int16x8_t)v441;
      int16x8_t v178 = (int16x8_t)v442;
      int16x8_t v181 = (int16x8_t)v443;
      int16x8_t v180 = (int16x8_t)v444;
      int16x8_t v183 = (int16x8_t)v445;
      int16x8_t v182 = (int16x8_t)v446;
      if (vaddvq_s16(v247))
      {
        int8x16_t v417 = (int8x16_t)v192;
        int8x16_t v418 = (int8x16_t)v229;
        int8x16_t v248 = (int8x16_t)v190;
        int8x16_t v249 = (int8x16_t)v189;
        v250.i64[0] = 0x9000900090009;
        v250.i64[1] = 0x9000900090009;
        int8x16_t v251 = (int8x16_t)v195;
        int8x16_t v252 = (int8x16_t)v194;
        int8x16_t v253 = (int8x16_t)v191;
        v254.i64[0] = -1;
        v254.i64[1] = -1;
        int8x16_t v255 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16(v238), (int8x16_t)v246), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v237, v250), (int16x8_t)vmvnq_s8(v237))), (int8x16_t)v244);
        v256.i64[0] = 0xF000F000F000FLL;
        v256.i64[1] = 0xF000F000F000FLL;
        int16x8_t v177 = (int16x8_t)vbslq_s8((int8x16_t)v247, (int8x16_t)v197, (int8x16_t)v437);
        int16x8_t v176 = (int16x8_t)vbslq_s8((int8x16_t)v247, (int8x16_t)v196, v439);
        int16x8_t v179 = (int16x8_t)vbslq_s8((int8x16_t)v247, v249, v441);
        int16x8_t v178 = (int16x8_t)vbslq_s8((int8x16_t)v247, v248, v442);
        int16x8_t v181 = (int16x8_t)vbslq_s8((int8x16_t)v247, v253, v443);
        int16x8_t v180 = (int16x8_t)vbslq_s8((int8x16_t)v247, v417, v444);
        int16x8_t v183 = (int16x8_t)vbslq_s8((int8x16_t)v247, v252, v445);
        int16x8_t v182 = (int16x8_t)vbslq_s8((int8x16_t)v247, v251, v446);
        int16x8_t v185 = (int16x8_t)vbslq_s8((int8x16_t)v247, v422, v449);
        int16x8_t v171 = (int16x8_t)vbslq_s8((int8x16_t)v247, (int8x16_t)v420, v450);
        int16x8_t v172 = (int16x8_t)vbslq_s8((int8x16_t)v247, (int8x16_t)v426, v451);
        int16x8_t v174 = (int16x8_t)vbslq_s8((int8x16_t)v247, (int8x16_t)v428, v452);
        int8x16_t v175 = vbslq_s8((int8x16_t)v247, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v254, vsubq_s16(v256, v235)), v430), v237), v456);
        int16x8_t v173 = (int16x8_t)vbslq_s8((int8x16_t)v247, (int8x16_t)v238, v453);
        int16x8_t v184 = (int16x8_t)vbslq_s8((int8x16_t)v247, v255, v448);
        int8x16_t v447 = vbslq_s8((int8x16_t)v247, vextq_s8(v424, v424, 0xCuLL), v447);
        int8x16_t v448 = (int8x16_t)v184;
        int8x16_t v454 = vbslq_s8((int8x16_t)v247, (int8x16_t)v430, v454);
        int8x16_t v455 = vbslq_s8((int8x16_t)v247, v418, v455);
        int8x16_t v449 = (int8x16_t)v185;
        int8x16_t v450 = (int8x16_t)v171;
        int8x16_t v451 = (int8x16_t)v172;
        int8x16_t v452 = (int8x16_t)v174;
        int8x16_t v456 = v175;
        int8x16_t v453 = (int8x16_t)v173;
      }
    }
    int16x8_t v257 = (int16x8_t)vandq_s8(v175, (int8x16_t)vceqq_s16(v173, v185));
    int8x16_t v438 = (int8x16_t)vaddq_s16(v257, v177);
    int8x16_t v440 = (int8x16_t)vaddq_s16(v176, v257);
    int16x8_t v258 = (int16x8_t)vandq_s8(v175, (int8x16_t)vceqq_s16(v173, v171));
    int8x16_t v441 = (int8x16_t)vaddq_s16(v179, v258);
    int8x16_t v442 = (int8x16_t)vaddq_s16(v178, v258);
    int16x8_t v259 = (int16x8_t)vandq_s8(v175, (int8x16_t)vceqq_s16(v173, v172));
    int8x16_t v443 = (int8x16_t)vaddq_s16(v181, v259);
    int8x16_t v444 = (int8x16_t)vaddq_s16(v180, v259);
    int16x8_t v260 = (int16x8_t)vandq_s8(v175, (int8x16_t)vceqq_s16(v173, v174));
    int8x16_t v445 = (int8x16_t)vaddq_s16(v183, v260);
    int8x16_t v446 = (int8x16_t)vaddq_s16(v182, v260);
    v260.i64[0] = 0x8000800080008;
    v260.i64[1] = 0x8000800080008;
    v261.i64[0] = 0x3000300030003;
    v261.i64[1] = 0x3000300030003;
    v262.i64[0] = 0x2000200020002;
    v262.i64[1] = 0x2000200020002;
    int8x16_t v263 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8((int8x16_t)v184, v261), v262);
    v262.i64[0] = 0x10001000100010;
    v262.i64[1] = 0x10001000100010;
    int16x8_t v264 = (int16x8_t)vandq_s8(v263, (int8x16_t)v262);
    v262.i64[0] = 0x7000700070007;
    v262.i64[1] = 0x7000700070007;
    int16x8_t v265 = vaddq_s16(vmlaq_s16(vshlq_n_s16(vaddq_s16(v172, vaddq_s16(v171, v174)), 3uLL), v185, v262), vaddq_s16(vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vaddq_s16(v184, v184), (int8x16_t)v260), (int16x8_t)vbicq_s8((int8x16_t)v173, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8((int8x16_t)v184, (int8x16_t)v260)))), v264));
    if ((unint64_t)(vpaddq_s16(v265, v265).i16[0] + 57) > 0x3FF)
    {
      *a1 = v423;
      a1[1] = (int16x8_t)v424;
      a1[2] = v435;
      a1[3] = v431;
      a1[4] = v436;
      a1[5] = v433;
      uint64x2_t v269 = a1 + 6;
      char v186 = 127;
      unint64_t result = 128;
      *uint64x2_t v269 = v434;
      v269[1] = v432;
    }
    else
    {
      int32x4_t v266 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v267 = 8 * (a1 & 7);
      if (v267) {
        uint64_t v268 = *v266 & ~(-1 << v267);
      }
      else {
        uint64_t v268 = 0;
      }
      *a2 = 0;
      v270.i64[0] = v173.u16[1];
      v270.i64[1] = v173.u16[0];
      int64x2_t v271 = vshrq_n_s64(vshlq_n_s64(v270, 0x30uLL), 0x30uLL);
      int64x2_t v272 = (int64x2_t)vandq_s8(vbicq_s8((int8x16_t)vaddq_s64((int64x2_t)vshlq_u64((uint64x2_t)v271, (uint64x2_t)xmmword_242EA76E0), (int64x2_t)xmmword_242EA76F0), (int8x16_t)vceqzq_s64(v271)), (int8x16_t)xmmword_242EA76F0);
      unint64_t v273 = vorrq_s8((int8x16_t)v272, (int8x16_t)vdupq_laneq_s64(v272, 1)).u64[0] | v184.i8[0] & 0x1F | (32 * (v184.i8[2] & 0x1Fu));
      unint64_t v274 = v447.u32[0];
      unint64_t v275 = v268 | (v273 << v267);
      if (v267 >= 0x2E)
      {
        *int32x4_t v266 = v275;
        unint64_t v275 = v273 >> (-8 * (a1 & 7u));
      }
      unint64_t v276 = (v267 + 18) & 0x3A;
      unint64_t v277 = v275 | (v274 << v276);
      if (v276 >= 0x20)
      {
        *(void *)((char *)v266 + (((v267 + 18) >> 3) & 8)) = v277;
        unint64_t v277 = v274 >> -(char)v276;
      }
      unint64_t v278 = v267 + 50;
      int8x16_t v279 = (int8x16_t)vsubq_s16((int16x8_t)v453, (int16x8_t)v449);
      int8x16_t v280 = (int8x16_t)vsubq_s16((int16x8_t)v453, (int16x8_t)v450);
      int8x16_t v281 = (int8x16_t)vsubq_s16((int16x8_t)v453, (int16x8_t)v451);
      int8x16_t v282 = (int8x16_t)vsubq_s16((int16x8_t)v453, (int16x8_t)v452);
      *(uint8x8_t *)v279.i8 = vqmovn_u16((uint16x8_t)v279);
      *(uint8x8_t *)v280.i8 = vqmovn_u16((uint16x8_t)v280);
      *(uint8x8_t *)v281.i8 = vqmovn_u16((uint16x8_t)v281);
      *(uint8x8_t *)v282.i8 = vqmovn_u16((uint16x8_t)v282);
      v282.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v279, v280), (int16x8_t)vzip1q_s8(v281, v282)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v279, v280), (int16x8_t)vtrn2q_s8(v281, v282))).u64[0];
      v280.i64[0] = 0x202020202020202;
      v280.i64[1] = 0x202020202020202;
      int8x16_t v283 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v448.i8, (int8x8_t)0x4000400040004)))), v280);
      v280.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v280.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v281.i64[0] = -1;
      v281.i64[1] = -1;
      uint8x16_t v284 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v281, (uint8x16_t)vorrq_s8(v283, v280)), (int8x16_t)v282.u64[0]);
      int16x8_t v285 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v283.i8);
      uint16x8_t v286 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v284.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v285)), (int16x8_t)vmovl_high_u8(v284));
      uint16x8_t v287 = (uint16x8_t)vpaddq_s16(v285, (int16x8_t)vmovl_high_u8((uint8x16_t)v283));
      int32x4_t v288 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v287.i8);
      int32x4_t v289 = (int32x4_t)vmovl_high_u16(v287);
      int32x4_t v290 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v286.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v288)), (int32x4_t)vshlq_u32(vmovl_high_u16(v286), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v289)));
      int32x4_t v291 = vpaddq_s32(v288, v289);
      v292.i64[0] = v290.u32[0];
      v292.i64[1] = v290.u32[1];
      uint64x2_t v293 = (uint64x2_t)v292;
      v292.i64[0] = v290.u32[2];
      v292.i64[1] = v290.u32[3];
      uint64x2_t v294 = (uint64x2_t)v292;
      v292.i64[0] = v291.u32[0];
      v292.i64[1] = v291.u32[1];
      int64x2_t v295 = v292;
      v292.i64[0] = v291.u32[2];
      v292.i64[1] = v291.u32[3];
      int64x2_t v296 = vpaddq_s64((int64x2_t)vshlq_u64(v293, (uint64x2_t)vzip1q_s64((int64x2_t)0, v295)), (int64x2_t)vshlq_u64(v294, (uint64x2_t)vzip1q_s64((int64x2_t)0, v292)));
      int64x2_t v297 = vpaddq_s64(v295, v292);
      uint64_t v298 = (v267 + 50) & 0x3A;
      unint64_t v299 = (v296.i64[0] << v298) | v277;
      if ((unint64_t)(v297.i64[0] + v298) >= 0x40)
      {
        *(void *)((char *)v266 + ((v278 >> 3) & 8)) = v299;
        unint64_t v299 = (unint64_t)v296.i64[0] >> -(char)v298;
      }
      unint64_t v300 = v297.i64[0] + v278;
      unint64_t v301 = v299 | (v296.i64[1] << v300);
      if ((v300 & 0x3F) + v297.i64[1] >= 0x40)
      {
        *(void *)((char *)v266 + ((v300 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v301;
        unint64_t v301 = (unint64_t)v296.i64[1] >> -(v300 & 0x3F);
        if ((v300 & 0x3F) == 0) {
          unint64_t v301 = 0;
        }
      }
      unint64_t v302 = v300 + v297.i64[1];
      v303.i64[0] = 0x8000800080008;
      v303.i64[1] = 0x8000800080008;
      v304.i64[0] = -1;
      v304.i64[1] = -1;
      int16x8_t v305 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v448, v303), (int8x16_t)0, 0xCuLL), v453);
      v306.i64[0] = 0xF000F000F000FLL;
      v306.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v307 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v304, (uint16x8_t)vaddq_s16(v305, v306)), v456);
      int32x4_t v308 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v305.i8);
      int32x4_t v309 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v307.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v308)), (int32x4_t)vmovl_high_u16(v307));
      int32x4_t v310 = vpaddq_s32(v308, (int32x4_t)vmovl_high_u16((uint16x8_t)v305));
      v311.i64[0] = v309.u32[0];
      v311.i64[1] = v309.u32[1];
      uint64x2_t v312 = (uint64x2_t)v311;
      v311.i64[0] = v309.u32[2];
      v311.i64[1] = v309.u32[3];
      uint64x2_t v313 = (uint64x2_t)v311;
      v311.i64[0] = v310.u32[0];
      v311.i64[1] = v310.u32[1];
      int64x2_t v314 = v311;
      v311.i64[0] = v310.u32[2];
      v311.i64[1] = v310.u32[3];
      int64x2_t v315 = vpaddq_s64((int64x2_t)vshlq_u64(v312, (uint64x2_t)vzip1q_s64((int64x2_t)0, v314)), (int64x2_t)vshlq_u64(v313, (uint64x2_t)vzip1q_s64((int64x2_t)0, v311)));
      int64x2_t v316 = vpaddq_s64(v314, v311);
      unint64_t v317 = (v315.i64[0] << v302) | v301;
      if (v316.i64[0] + (v302 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v266 + ((v302 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v317;
        unint64_t v317 = (unint64_t)v315.i64[0] >> -(v302 & 0x3F);
        if ((v302 & 0x3F) == 0) {
          unint64_t v317 = 0;
        }
      }
      unint64_t v318 = v316.i64[0] + v302;
      unint64_t v319 = v317 | (v315.i64[1] << v318);
      if ((v318 & 0x3F) + v316.i64[1] >= 0x40)
      {
        *(void *)((char *)v266 + ((v318 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v319;
        unint64_t v319 = (unint64_t)v315.i64[1] >> -(v318 & 0x3F);
        if ((v318 & 0x3F) == 0) {
          unint64_t v319 = 0;
        }
      }
      unint64_t v320 = v318 + v316.i64[1];
      int16x8_t v321 = (int16x8_t)vextq_s8((int8x16_t)0, v449, 0xCuLL);
      v322.i64[0] = 0xF000F000F000FLL;
      v322.i64[1] = 0xF000F000F000FLL;
      v323.i64[0] = -1;
      v323.i64[1] = -1;
      uint16x8_t v324 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v323, (uint16x8_t)vaddq_s16(v321, v322)), v438);
      int32x4_t v325 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v321.i8);
      int32x4_t v326 = (int32x4_t)vmovl_high_u16((uint16x8_t)v321);
      int32x4_t v327 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v324.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v325)), (int32x4_t)vshlq_u32(vmovl_high_u16(v324), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v326)));
      int32x4_t v328 = vpaddq_s32(v325, v326);
      v329.i64[0] = v327.u32[0];
      v329.i64[1] = v327.u32[1];
      uint64x2_t v330 = (uint64x2_t)v329;
      v329.i64[0] = v327.u32[2];
      v329.i64[1] = v327.u32[3];
      uint64x2_t v331 = (uint64x2_t)v329;
      v329.i64[0] = v328.u32[0];
      v329.i64[1] = v328.u32[1];
      int64x2_t v332 = v329;
      v329.i64[0] = v328.u32[2];
      v329.i64[1] = v328.u32[3];
      int64x2_t v333 = vpaddq_s64((int64x2_t)vshlq_u64(v330, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)), (int64x2_t)vshlq_u64(v331, (uint64x2_t)vzip1q_s64((int64x2_t)0, v329)));
      int64x2_t v334 = vpaddq_s64(v332, v329);
      unint64_t v335 = (v333.i64[0] << v320) | v319;
      if (v334.i64[0] + (v320 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v266 + ((v320 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v335;
        unint64_t v335 = (unint64_t)v333.i64[0] >> -(v320 & 0x3F);
        if ((v320 & 0x3F) == 0) {
          unint64_t v335 = 0;
        }
      }
      unint64_t v336 = v334.i64[0] + v320;
      unint64_t v337 = v335 | (v333.i64[1] << v336);
      if ((v336 & 0x3F) + v334.i64[1] >= 0x40)
      {
        *(void *)((char *)v266 + ((v336 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v337;
        unint64_t v337 = (unint64_t)v333.i64[1] >> -(v336 & 0x3F);
        if ((v336 & 0x3F) == 0) {
          unint64_t v337 = 0;
        }
      }
      unint64_t v338 = v336 + v334.i64[1];
      v339.i64[0] = 0xF000F000F000FLL;
      v339.i64[1] = 0xF000F000F000FLL;
      v340.i64[0] = -1;
      v340.i64[1] = -1;
      uint16x8_t v341 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v340, (uint16x8_t)vaddq_s16((int16x8_t)v449, v339)), v440);
      int32x4_t v342 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v449.i8);
      int32x4_t v343 = (int32x4_t)vmovl_high_u16((uint16x8_t)v449);
      int32x4_t v344 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v341.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v342)), (int32x4_t)vshlq_u32(vmovl_high_u16(v341), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v343)));
      int32x4_t v345 = vpaddq_s32(v342, v343);
      v346.i64[0] = v344.u32[0];
      v346.i64[1] = v344.u32[1];
      uint64x2_t v347 = (uint64x2_t)v346;
      v346.i64[0] = v344.u32[2];
      v346.i64[1] = v344.u32[3];
      uint64x2_t v348 = (uint64x2_t)v346;
      v346.i64[0] = v345.u32[0];
      v346.i64[1] = v345.u32[1];
      int64x2_t v349 = v346;
      v346.i64[0] = v345.u32[2];
      v346.i64[1] = v345.u32[3];
      int64x2_t v350 = vpaddq_s64((int64x2_t)vshlq_u64(v347, (uint64x2_t)vzip1q_s64((int64x2_t)0, v349)), (int64x2_t)vshlq_u64(v348, (uint64x2_t)vzip1q_s64((int64x2_t)0, v346)));
      int64x2_t v351 = vpaddq_s64(v349, v346);
      unint64_t v352 = (v350.i64[0] << v338) | v337;
      if (v351.i64[0] + (v338 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v266 + ((v338 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v352;
        if ((v338 & 0x3F) != 0) {
          unint64_t v352 = (unint64_t)v350.i64[0] >> -(v338 & 0x3F);
        }
        else {
          unint64_t v352 = 0;
        }
      }
      uint64_t v353 = v351.i64[1];
      unint64_t v354 = v351.i64[0] + v338;
      uint64_t v355 = (v351.i64[0] + v338) & 0x3F;
      unint64_t v356 = v352 | (v350.i64[1] << v354);
      if ((unint64_t)(v355 + v351.i64[1]) >= 0x40)
      {
        *(void *)((char *)v266 + ((v354 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
        unint64_t v356 = (unint64_t)v350.i64[1] >> -(char)v355;
        if (!v355) {
          unint64_t v356 = 0;
        }
      }
      uint64_t v357 = 0;
      v358.i64[0] = 0xF000F000F000FLL;
      v358.i64[1] = 0xF000F000F000FLL;
      v359.i64[0] = -1;
      v359.i64[1] = -1;
      unint64_t v360 = v354 + v353;
      char v361 = 1;
      do
      {
        char v362 = v361;
        uint16x8_t v363 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v359, (uint16x8_t)vaddq_s16((int16x8_t)v450, v358)), *(&v441 + v357));
        int32x4_t v364 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v450.i8);
        int32x4_t v365 = (int32x4_t)vmovl_high_u16((uint16x8_t)v450);
        int32x4_t v366 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v363.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v364)), (int32x4_t)vshlq_u32(vmovl_high_u16(v363), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v365)));
        int32x4_t v367 = vpaddq_s32(v364, v365);
        v368.i64[0] = v366.u32[0];
        v368.i64[1] = v366.u32[1];
        uint64x2_t v369 = (uint64x2_t)v368;
        v368.i64[0] = v366.u32[2];
        v368.i64[1] = v366.u32[3];
        uint64x2_t v370 = (uint64x2_t)v368;
        v368.i64[0] = v367.u32[0];
        v368.i64[1] = v367.u32[1];
        int64x2_t v371 = v368;
        v368.i64[0] = v367.u32[2];
        v368.i64[1] = v367.u32[3];
        int64x2_t v372 = vpaddq_s64((int64x2_t)vshlq_u64(v369, (uint64x2_t)vzip1q_s64((int64x2_t)0, v371)), (int64x2_t)vshlq_u64(v370, (uint64x2_t)vzip1q_s64((int64x2_t)0, v368)));
        int64x2_t v373 = vpaddq_s64(v371, v368);
        unint64_t v374 = (v372.i64[0] << v360) | v356;
        if (v373.i64[0] + (v360 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v266 + ((v360 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v374;
          unint64_t v374 = (unint64_t)v372.i64[0] >> -(v360 & 0x3F);
          if ((v360 & 0x3F) == 0) {
            unint64_t v374 = 0;
          }
        }
        unint64_t v375 = v373.i64[0] + v360;
        unint64_t v356 = v374 | (v372.i64[1] << v375);
        if ((v375 & 0x3F) + v373.i64[1] >= 0x40)
        {
          *(void *)((char *)v266 + ((v375 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
          unint64_t v356 = (unint64_t)v372.i64[1] >> -(v375 & 0x3F);
          if ((v375 & 0x3F) == 0) {
            unint64_t v356 = 0;
          }
        }
        char v361 = 0;
        unint64_t v360 = v375 + v373.i64[1];
        uint64_t v357 = 1;
      }
      while ((v362 & 1) != 0);
      uint64_t v376 = 0;
      char v377 = 1;
      v378.i64[0] = 0xF000F000F000FLL;
      v378.i64[1] = 0xF000F000F000FLL;
      v379.i64[0] = -1;
      v379.i64[1] = -1;
      do
      {
        char v380 = v377;
        uint16x8_t v381 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v379, (uint16x8_t)vaddq_s16((int16x8_t)v451, v378)), *(&v443 + v376));
        int32x4_t v382 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v451.i8);
        int32x4_t v383 = (int32x4_t)vmovl_high_u16((uint16x8_t)v451);
        int32x4_t v384 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v381.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v382)), (int32x4_t)vshlq_u32(vmovl_high_u16(v381), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v383)));
        int32x4_t v385 = vpaddq_s32(v382, v383);
        v386.i64[0] = v384.u32[0];
        v386.i64[1] = v384.u32[1];
        uint64x2_t v387 = (uint64x2_t)v386;
        v386.i64[0] = v384.u32[2];
        v386.i64[1] = v384.u32[3];
        uint64x2_t v388 = (uint64x2_t)v386;
        v386.i64[0] = v385.u32[0];
        v386.i64[1] = v385.u32[1];
        int64x2_t v389 = v386;
        v386.i64[0] = v385.u32[2];
        v386.i64[1] = v385.u32[3];
        int64x2_t v390 = vpaddq_s64((int64x2_t)vshlq_u64(v387, (uint64x2_t)vzip1q_s64((int64x2_t)0, v389)), (int64x2_t)vshlq_u64(v388, (uint64x2_t)vzip1q_s64((int64x2_t)0, v386)));
        int64x2_t v391 = vpaddq_s64(v389, v386);
        unint64_t v392 = (v390.i64[0] << v360) | v356;
        if (v391.i64[0] + (v360 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v266 + ((v360 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v392;
          unint64_t v392 = (unint64_t)v390.i64[0] >> -(v360 & 0x3F);
          if ((v360 & 0x3F) == 0) {
            unint64_t v392 = 0;
          }
        }
        unint64_t v393 = v391.i64[0] + v360;
        unint64_t v356 = v392 | (v390.i64[1] << v393);
        if ((v393 & 0x3F) + v391.i64[1] >= 0x40)
        {
          *(void *)((char *)v266 + ((v393 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
          unint64_t v356 = (unint64_t)v390.i64[1] >> -(v393 & 0x3F);
          if ((v393 & 0x3F) == 0) {
            unint64_t v356 = 0;
          }
        }
        char v377 = 0;
        unint64_t v360 = v393 + v391.i64[1];
        uint64_t v376 = 1;
      }
      while ((v380 & 1) != 0);
      uint64_t v394 = 0;
      char v395 = 1;
      v396.i64[0] = 0xF000F000F000FLL;
      v396.i64[1] = 0xF000F000F000FLL;
      v397.i64[0] = -1;
      v397.i64[1] = -1;
      do
      {
        char v398 = v395;
        uint16x8_t v399 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v397, (uint16x8_t)vaddq_s16((int16x8_t)v452, v396)), *(&v445 + v394));
        int32x4_t v400 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v452.i8);
        int32x4_t v401 = (int32x4_t)vmovl_high_u16((uint16x8_t)v452);
        int32x4_t v402 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v399.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v400)), (int32x4_t)vshlq_u32(vmovl_high_u16(v399), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v401)));
        int32x4_t v403 = vpaddq_s32(v400, v401);
        v404.i64[0] = v402.u32[0];
        v404.i64[1] = v402.u32[1];
        uint64x2_t v405 = (uint64x2_t)v404;
        v404.i64[0] = v402.u32[2];
        v404.i64[1] = v402.u32[3];
        uint64x2_t v406 = (uint64x2_t)v404;
        v404.i64[0] = v403.u32[0];
        v404.i64[1] = v403.u32[1];
        int64x2_t v407 = v404;
        v404.i64[0] = v403.u32[2];
        v404.i64[1] = v403.u32[3];
        int64x2_t v408 = vpaddq_s64((int64x2_t)vshlq_u64(v405, (uint64x2_t)vzip1q_s64((int64x2_t)0, v407)), (int64x2_t)vshlq_u64(v406, (uint64x2_t)vzip1q_s64((int64x2_t)0, v404)));
        int64x2_t v409 = vpaddq_s64(v407, v404);
        unint64_t v410 = (v408.i64[0] << v360) | v356;
        if (v409.i64[0] + (v360 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v266 + ((v360 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v410;
          unint64_t v410 = (unint64_t)v408.i64[0] >> -(v360 & 0x3F);
          if ((v360 & 0x3F) == 0) {
            unint64_t v410 = 0;
          }
        }
        unint64_t v411 = v409.i64[0] + v360;
        unint64_t v356 = v410 | (v408.i64[1] << v411);
        if ((v411 & 0x3F) + v409.i64[1] >= 0x40)
        {
          *(void *)((char *)v266 + ((v411 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
          unint64_t v356 = (unint64_t)v408.i64[1] >> -(v411 & 0x3F);
          if ((v411 & 0x3F) == 0) {
            unint64_t v356 = 0;
          }
        }
        char v395 = 0;
        unint64_t v360 = v411 + v409.i64[1];
        uint64_t v394 = 1;
      }
      while ((v398 & 1) != 0);
      if ((v360 & 0x3F) != 0) {
        *(void *)((char *)v266 + ((v360 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v356;
      }
      unint64_t result = (v360 - v267 + 7) >> 3;
      char v186 = *a2 | (result - 1);
    }
  }
  else
  {
    a1->i32[0] = a3->i32[0];
    char v186 = 3;
    unint64_t result = 4;
  }
  *a2 = v186;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int16x8_t *a3, char *a4, int a5, int a6)
{
  int64x2_t v9 = a3;
  int16x8_t v11 = (int64x2_t *)result;
  if (a5 >= 8) {
    unsigned int v12 = 8;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int64x2_t *)result, a2, v12, v13);
    int64x2_t v9 = (int16x8_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v14 = 4 * a2;
  int64x2_t v15 = a4 + 1;
  if (a6 <= 4) {
    int v16 = 4;
  }
  else {
    int v16 = a6;
  }
  unsigned int v17 = v16 - 4;
  if (v17 >= 4) {
    int v18 = 4;
  }
  else {
    int v18 = v17;
  }
  if (v12 && v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v15, (int64x2_t *)((char *)v11 + v14), a2, v12, v18);
    int64x2_t v9 = (int16x8_t *)((char *)v9 + result);
  }
  else
  {
    *int64x2_t v15 = 0;
  }
  int16x8_t v19 = a4 + 2;
  if (a5 <= 8) {
    int v20 = 8;
  }
  else {
    int v20 = a5;
  }
  unsigned int v21 = v20 - 8;
  if (v21 >= 8) {
    int v22 = 8;
  }
  else {
    int v22 = v21;
  }
  if (v22 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, v11 + 2, a2, v22, v13);
    int64x2_t v9 = (int16x8_t *)((char *)v9 + result);
    int16x8_t v23 = a4 + 3;
  }
  else
  {
    *int16x8_t v19 = 0;
    int16x8_t v23 = a4 + 3;
    if (!v22) {
      goto LABEL_33;
    }
  }
  if (v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, (int64x2_t *)((char *)v11 + v14 + 32), a2, v22, v18);
    int64x2_t v9 = (int16x8_t *)((char *)v9 + result);
    goto LABEL_34;
  }
LABEL_33:
  *int16x8_t v23 = 0;
LABEL_34:
  int16x8_t v24 = a4 + 4;
  if (a6 <= 8) {
    int v25 = 8;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 8;
  if (v26 >= 4) {
    int v27 = 4;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int64x2_t *)((char *)v11 + 8 * a2), a2, v12, v27);
    int64x2_t v9 = (int16x8_t *)((char *)v9 + result);
  }
  else
  {
    *int16x8_t v24 = 0;
  }
  int16x8_t v28 = a4 + 5;
  if (a6 <= 12) {
    int v29 = 12;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 12;
  if (v30 >= 4) {
    int v31 = 4;
  }
  else {
    int v31 = v30;
  }
  if (v12 && v31)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, (int64x2_t *)((char *)v11 + 12 * a2), a2, v12, v31);
    int64x2_t v9 = (int16x8_t *)((char *)v9 + result);
    int16x8_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  else
  {
    *int16x8_t v28 = 0;
    int16x8_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v32, (int64x2_t *)((char *)v11 + 8 * a2 + 32), a2, v22, v27);
    int64x2_t v9 = (int16x8_t *)((char *)v9 + result);
    int16x8_t v33 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int16x8_t v32 = 0;
  int16x8_t v33 = a4 + 7;
  if (!v22)
  {
LABEL_62:
    char *v33 = 0;
    return result;
  }
LABEL_58:
  if (!v31) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int64x2_t *)((char *)v11 + 12 * a2 + 32), a2, v22, v31);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int16x8_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int32x4_t a5, int32x4_t a6)
{
  unint64_t v6 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = v7 + 18;
  uint64_t v9 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x2F) {
    v9 |= *(void *)(v6 + 8) << (-8 * (a3 & 7u));
  }
  a5.i32[0] = v9;
  a5.i32[1] = (unsigned __int16)v9 >> 5;
  *(int8x8_t *)a5.i8 = vand_s8(*(int8x8_t *)a5.i8, (int8x8_t)0x1F0000001FLL);
  *(int16x4_t *)a5.i8 = vmovn_s32(a5);
  a6.i32[0] = (unsigned __int16)v9 >> 10;
  a6.i32[1] = v9 >> 14;
  *(int32x2_t *)a6.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
  *(int16x4_t *)a6.i8 = vmovn_s32(a6);
  unint64_t v10 = v7 + 50;
  unint64_t v11 = v8 >> 6;
  unint64_t v12 = v8 & 0x3A;
  uint64_t v13 = *(void *)(v6 + 8 * (v8 >> 6)) >> (v8 & 0x3A);
  if (v12 >= 0x21) {
    v13 |= *(void *)(v6 + 8 * v11 + 8) << -(char)v12;
  }
  int8x16_t v14 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a5.i8, 0);
  int8x16_t v15 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
  unint64_t v16 = (8 * (a3 & 7)) | 0x400;
  v17.i64[0] = 0x3000300030003;
  v17.i64[1] = 0x3000300030003;
  int16x8_t v18 = (int16x8_t)vandq_s8(v14, v17);
  int8x16_t v19 = vbicq_s8(v15, (int8x16_t)vceqq_s16(v18, (int16x8_t)v17));
  v17.i64[0] = 0x202020202020202;
  v17.i64[1] = 0x202020202020202;
  int8x16_t v20 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v14.i8, (int8x8_t)0x4000400040004)))), v17);
  if (vmaxvq_s8(v20) < 1)
  {
    int v30 = 0;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
    int8x16_t v32 = v19;
    int8x16_t v33 = v19;
    int8x16_t v34 = v19;
    v35.i64[0] = -1;
    v35.i64[1] = -1;
    int8x16_t v36 = v19;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v38.i64[0] = -1;
    v38.i64[1] = -1;
  }
  else
  {
    int8x16_t v21 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v20, v20));
    int32x4_t v22 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v21, (int16x8_t)v21));
    unint64_t v23 = vpaddq_s32(v22, v22).u64[0];
    v24.i64[0] = v23;
    v24.i64[1] = HIDWORD(v23);
    int64x2_t v25 = v24;
    unint64_t v26 = vaddvq_s64(v24);
    unint64_t v27 = v26 + v10;
    if (v26 <= 0x80 && v16 >= v27)
    {
      unint64_t v39 = v10 & 0x3A;
      int64x2_t v40 = vaddq_s64(vzip1q_s64((int64x2_t)0, v25), vdupq_n_s64(v39));
      int16x8_t v41 = (int64x2_t *)(v6 + ((v10 >> 3) & 8));
      int32x4_t v29 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v41, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v40)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41->i64[0], 0), (uint64x2_t)vnegq_s64(v40)));
      if (v26 + v39 < 0x81)
      {
        int v30 = 0;
      }
      else
      {
        int v30 = 0;
        int32x4_t v29 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v40)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v41[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v40))), (int8x16_t)v29);
      }
      unint64_t v10 = v27;
    }
    else
    {
      int32x4_t v29 = 0uLL;
      int v30 = 1;
    }
    int32x2_t v42 = vzip1_s32(*(int32x2_t *)v22.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v22, (int8x16_t)v22, 8uLL));
    v43.i64[0] = v42.u32[0];
    v43.i64[1] = v42.u32[1];
    int32x4_t v44 = (int32x4_t)vshlq_u64((uint64x2_t)v29, (uint64x2_t)vnegq_s64(v43));
    *(int32x2_t *)v29.i8 = vmovn_s64((int64x2_t)v29);
    *(int32x2_t *)v44.i8 = vmovn_s64((int64x2_t)v44);
    int8x16_t v45 = (int8x16_t)vzip1q_s32(v29, v44);
    int16x8_t v46 = (int16x8_t)vshlq_u32((uint32x4_t)v45, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v21.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)))));
    *(int16x4_t *)v45.i8 = vmovn_s32((int32x4_t)v45);
    *(int16x4_t *)v46.i8 = vmovn_s32((int32x4_t)v46);
    int16x8_t v47 = vzip1q_s16((int16x8_t)v45, v46);
    v45.i64[0] = 0x101010101010101;
    v45.i64[1] = 0x101010101010101;
    *(int8x8_t *)v48.i8 = vand_s8(vzip1_s8(vmovn_s16(v47), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v47, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v20.i8, *(int8x8_t *)v14.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v45, v20), (int8x8_t)-1));
    v48.i64[1] = v48.i64[0];
    *(int8x8_t *)v48.i8 = vqtbl1_s8(v48, (int8x8_t)0x703060205010400);
    *(int16x4_t *)v47.i8 = vdup_lane_s16(*(int16x4_t *)v48.i8, 0);
    *(int16x4_t *)v45.i8 = vdup_lane_s16(*(int16x4_t *)v48.i8, 1);
    int8x8_t v49 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v48.i8, 2);
    int8x8_t v50 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v48.i8, 3);
    int8x16_t v36 = (int8x16_t)vsubw_s8((int16x8_t)v19, *(int8x8_t *)v47.i8);
    int8x16_t v32 = (int8x16_t)vsubw_s8((int16x8_t)v19, *(int8x8_t *)v45.i8);
    int8x16_t v33 = (int8x16_t)vsubw_s8((int16x8_t)v19, v49);
    int8x16_t v34 = (int8x16_t)vsubw_s8((int16x8_t)v19, v50);
    int8x16_t v38 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v47.i8));
    int8x16_t v37 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v45.i8));
    int8x16_t v35 = (int8x16_t)vmovl_s8(vceqz_s8(v49));
    int8x16_t v31 = (int8x16_t)vmovl_s8(vceqz_s8(v50));
  }
  v51.i64[0] = 0x8000800080008;
  v51.i64[1] = 0x8000800080008;
  int32x4_t v52 = 0uLL;
  int8x16_t v53 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v14, v51), (int8x16_t)0, 0xCuLL), v19);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v53, (int16x8_t)v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  unint64_t v59 = v58 + v10;
  if (v58 <= 0x80 && v16 >= v59)
  {
    unint64_t v61 = v10 & 0x3F;
    int64x2_t v62 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v61));
    int16x8_t v63 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v63, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v62)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63->i64[0], 0), (uint64x2_t)vnegq_s64(v62)));
    if (v58 + v61 >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v62)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v63[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v62))), (int8x16_t)v52);
    }
    unint64_t v10 = v59;
  }
  else
  {
    int v30 = 1;
  }
  int v64 = v14.i8[0] & 3;
  if (v64 == 2)
  {
    BOOL v65 = v16 >= v10 + 8;
    if (v16 >= v10 + 8) {
      v10 += 8;
    }
    unint64_t v66 = v10 + 8;
    if (!v65 || v16 < v66) {
      int v30 = 1;
    }
    if (v16 >= v66) {
      v10 += 8;
    }
  }
  int32x4_t v68 = 0uLL;
  int8x16_t v69 = vextq_s8((int8x16_t)0, v36, 0xCuLL);
  int32x4_t v70 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v69, (int16x8_t)v69));
  unint64_t v71 = vpaddq_s32(v70, v70).u64[0];
  v72.i64[0] = v71;
  v72.i64[1] = HIDWORD(v71);
  int64x2_t v73 = v72;
  unint64_t v74 = vaddvq_s64(v72);
  unint64_t v75 = v74 + v10;
  if (v74 <= 0x80 && v16 >= v75)
  {
    unint64_t v78 = v10 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v73), vdupq_n_s64(v78));
    int16x8_t v80 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v74 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v10 = v75;
  }
  else
  {
    int v30 = 1;
    int32x4_t v77 = 0uLL;
  }
  int32x4_t v81 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v36, (int16x8_t)v36));
  unint64_t v82 = vpaddq_s32(v81, v81).u64[0];
  v83.i64[0] = v82;
  v83.i64[1] = HIDWORD(v82);
  int64x2_t v84 = v83;
  unint64_t v85 = vaddvq_s64(v83);
  unint64_t v86 = v85 + v10;
  if (v85 <= 0x80 && v16 >= v86)
  {
    unint64_t v88 = v10 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v84), vdupq_n_s64(v88));
    int v90 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v68 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v85 + v88 >= 0x81) {
      int32x4_t v68 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v68);
    }
    unint64_t v10 = v86;
  }
  else
  {
    int v30 = 1;
  }
  int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v32, (int16x8_t)v32));
  unint64_t v92 = vpaddq_s32(v91, v91).u64[0];
  v93.i64[0] = v92;
  v93.i64[1] = HIDWORD(v92);
  int64x2_t v94 = v93;
  unint64_t v95 = vaddvq_s64(v93);
  unint64_t v96 = v95 + v10;
  int32x4_t v97 = 0uLL;
  if (v95 <= 0x80 && v16 >= v96)
  {
    unint64_t v100 = v10 & 0x3F;
    int64x2_t v101 = vaddq_s64(vzip1q_s64((int64x2_t)0, v94), vdupq_n_s64(v100));
    int16x8_t v102 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v99 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v102, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102->i64[0], 0), (uint64x2_t)vnegq_s64(v101)));
    if (v95 + v100 >= 0x81) {
      int32x4_t v99 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v102[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v101))), (int8x16_t)v99);
    }
    unint64_t v10 = v96;
    if (v95 > 0x80) {
      goto LABEL_63;
    }
  }
  else
  {
    int v30 = 1;
    int32x4_t v99 = 0uLL;
    if (v95 > 0x80) {
      goto LABEL_63;
    }
  }
  unint64_t v103 = v95 + v10;
  if (v16 < v95 + v10)
  {
LABEL_63:
    unint64_t v103 = v10;
    int v30 = 1;
    goto LABEL_64;
  }
  unint64_t v104 = v10 & 0x3F;
  int64x2_t v105 = vaddq_s64(vzip1q_s64((int64x2_t)0, v94), vdupq_n_s64(v104));
  int16x8_t v106 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
  int32x4_t v97 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v106, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106->i64[0], 0), (uint64x2_t)vnegq_s64(v105)));
  if (v95 + v104 >= 0x81) {
    int32x4_t v97 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v106[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v105))), (int8x16_t)v97);
  }
LABEL_64:
  int32x4_t v107 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v33, (int16x8_t)v33));
  unint64_t v108 = vpaddq_s32(v107, v107).u64[0];
  v109.i64[0] = v108;
  v109.i64[1] = HIDWORD(v108);
  int64x2_t v110 = v109;
  unint64_t v111 = vaddvq_s64(v109);
  int32x4_t v112 = 0uLL;
  if (v111 > 0x80 || (unint64_t v113 = v111 + v103, v16 < v111 + v103))
  {
    unint64_t v113 = v103;
    int v30 = 1;
    int32x4_t v116 = 0uLL;
  }
  else
  {
    int64x2_t v114 = vaddq_s64(vzip1q_s64((int64x2_t)0, v110), vdupq_n_s64(v103 & 0x3F));
    int16x8_t v115 = (int64x2_t *)(v6 + 8 * (v103 >> 6));
    int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v115, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115->i64[0], 0), (uint64x2_t)vnegq_s64(v114)));
    if (v111 + (v103 & 0x3F) >= 0x81) {
      int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v115[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v114))), (int8x16_t)v116);
    }
  }
  if (v111 > 0x80 || (unint64_t v117 = v111 + v113, v16 < v111 + v113))
  {
    unint64_t v117 = v113;
    int v30 = 1;
  }
  else
  {
    int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v110), vdupq_n_s64(v113 & 0x3F));
    int16x8_t v119 = (int64x2_t *)(v6 + 8 * (v113 >> 6));
    int32x4_t v112 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
    if (v111 + (v113 & 0x3F) >= 0x81) {
      int32x4_t v112 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v112);
    }
  }
  int32x4_t v120 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v34, (int16x8_t)v34));
  unint64_t v121 = vpaddq_s32(v120, v120).u64[0];
  v122.i64[0] = v121;
  v122.i64[1] = HIDWORD(v121);
  int64x2_t v123 = v122;
  unint64_t v124 = vaddvq_s64(v122);
  if (v124 > 0x80 || (unint64_t v125 = v124 + v117, v16 < v124 + v117))
  {
    unint64_t v125 = v117;
    int v30 = 1;
    int8x16_t v129 = 0uLL;
  }
  else
  {
    unint64_t v126 = v117 & 0x3F;
    int64x2_t v127 = vaddq_s64(vzip1q_s64((int64x2_t)0, v123), vdupq_n_s64(v126));
    int16x8_t v128 = (int64x2_t *)(v6 + 8 * (v117 >> 6));
    int8x16_t v129 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v128, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128->i64[0], 0), (uint64x2_t)vnegq_s64(v127)));
    if (v124 + v126 >= 0x81) {
      int8x16_t v129 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v128[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v127))), v129);
    }
  }
  if (v124 > 0x80 || v16 < v124 + v125) {
    goto LABEL_87;
  }
  int64x2_t v130 = vaddq_s64(vzip1q_s64((int64x2_t)0, v123), vdupq_n_s64(v125 & 0x3F));
  int16x8_t v131 = (int64x2_t *)(v6 + 8 * (v125 >> 6));
  int8x16_t v132 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v131, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131->i64[0], 0), (uint64x2_t)vnegq_s64(v130)));
  if (v124 + (v125 & 0x3F) >= 0x81) {
    int8x16_t v132 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v131[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v130))), v132);
  }
  if (v30 || (uint64_t v133 = a4 + 1, v16 + 8 * v133 - (v124 + v125) - 1024 >= 9))
  {
LABEL_87:
    uint64_t v133 = 0;
    unint64_t v134 = (unint64_t)&v239;
LABEL_88:
    *(void *)(v134 & 0xFFFFFFFFFFFFFFF8) |= 0xFFFFLL << ((8 * v134) & 0x20);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int16x8_t v135 = (uint64_t *)((char *)a1->i64 + a2);
    int16x8_t v136 = (uint64_t *)((char *)a1->i64 + 2 * a2);
    *int16x8_t v135 = 0;
    v135[1] = 0;
    int16x8_t v137 = (uint64_t *)((char *)a1->i64 + 2 * a2 + a2);
    *int16x8_t v136 = 0;
    v136[1] = 0;
    *int16x8_t v137 = 0;
    v137[1] = 0;
    return v133;
  }
  if (v64 == 2)
  {
    uint64_t v133 = 0;
    unint64_t v134 = (unint64_t)&v240;
    goto LABEL_88;
  }
  int32x2_t v139 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
  int32x2_t v140 = vzip1_s32(*(int32x2_t *)v91.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL));
  v141.i64[0] = v139.u32[0];
  v141.i64[1] = v139.u32[1];
  int64x2_t v142 = v141;
  v141.i64[0] = v140.u32[0];
  v141.i64[1] = v140.u32[1];
  uint64x2_t v143 = (uint64x2_t)vnegq_s64(v142);
  uint64x2_t v144 = (uint64x2_t)vnegq_s64(v141);
  int32x4_t v145 = (int32x4_t)vshlq_u64((uint64x2_t)v52, v143);
  *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
  *(int32x2_t *)v145.i8 = vmovn_s64((int64x2_t)v145);
  int16x8_t v146 = (int16x8_t)vzip1q_s32(v52, v145);
  int32x4_t v147 = (int32x4_t)vshlq_u64((uint64x2_t)v99, v144);
  *(int32x2_t *)v99.i8 = vmovn_s64((int64x2_t)v99);
  *(int32x2_t *)v147.i8 = vmovn_s64((int64x2_t)v147);
  int16x8_t v148 = (int16x8_t)vzip1q_s32(v99, v147);
  int32x4_t v149 = (int32x4_t)vshlq_u64((uint64x2_t)v97, v144);
  *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
  *(int32x2_t *)v149.i8 = vmovn_s64((int64x2_t)v149);
  int16x8_t v150 = (int16x8_t)vzip1q_s32(v97, v149);
  uint32x4_t v151 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL))));
  int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v146, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL)))));
  *(int16x4_t *)v146.i8 = vmovn_s32((int32x4_t)v146);
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  int16x8_t v153 = vzip1q_s16(v146, v152);
  int16x8_t v154 = (int16x8_t)vshlq_u32((uint32x4_t)v148, v151);
  int16x8_t v155 = (int16x8_t)vshlq_u32((uint32x4_t)v150, v151);
  *(int16x4_t *)v148.i8 = vmovn_s32((int32x4_t)v148);
  *(int16x4_t *)v154.i8 = vmovn_s32((int32x4_t)v154);
  *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v150);
  *(int16x4_t *)v155.i8 = vmovn_s32((int32x4_t)v155);
  int16x8_t v156 = vzip1q_s16(v148, v154);
  v154.i64[0] = 0x10001000100010;
  v154.i64[1] = 0x10001000100010;
  int16x8_t v157 = vzip1q_s16(v150, v155);
  v155.i64[0] = 0xF000F000F000FLL;
  v155.i64[1] = 0xF000F000F000FLL;
  int16x8_t v158 = vsubq_s16(v154, (int16x8_t)v53);
  int16x8_t v159 = vaddq_s16((int16x8_t)v53, v155);
  v155.i64[0] = 0x10001000100010;
  v155.i64[1] = 0x10001000100010;
  int16x8_t v160 = vshlq_s16(v153, v158);
  v158.i64[0] = 0xF000F000F000FLL;
  v158.i64[1] = 0xF000F000F000FLL;
  int16x8_t v161 = vsubq_s16(v155, (int16x8_t)v32);
  int16x8_t v162 = vaddq_s16((int16x8_t)v32, v158);
  int16x8_t v163 = vshlq_s16(v157, v161);
  int8x16_t v164 = (int8x16_t)vshlq_s16(v160, v159);
  int16x8_t v165 = vshlq_s16(vshlq_s16(v156, v161), v162);
  int8x16_t v166 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v164.i8, 0);
  int16x8_t v167 = (int16x8_t)vandq_s8(v37, v166);
  int16x8_t v168 = vsubq_s16(v165, v167);
  int16x8_t v169 = vsubq_s16(vshlq_s16(v163, v162), v167);
  *(int32x2_t *)v165.i8 = vzip1_s32(*(int32x2_t *)v107.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v107, (int8x16_t)v107, 8uLL));
  *(int32x2_t *)v163.i8 = vzip1_s32(*(int32x2_t *)v120.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v120, (int8x16_t)v120, 8uLL));
  v141.i64[0] = v165.u32[0];
  v141.i64[1] = v165.u32[1];
  int64x2_t v170 = v141;
  v141.i64[0] = v163.u32[0];
  v141.i64[1] = v163.u32[1];
  uint64x2_t v171 = (uint64x2_t)vnegq_s64(v170);
  int32x4_t v172 = (int32x4_t)vshlq_u64((uint64x2_t)v116, v171);
  *(int32x2_t *)v167.i8 = vmovn_s64((int64x2_t)v116);
  *(int32x2_t *)v172.i8 = vmovn_s64((int64x2_t)v172);
  int16x8_t v173 = (int16x8_t)vzip1q_s32((int32x4_t)v167, v172);
  uint64x2_t v174 = (uint64x2_t)vnegq_s64(v141);
  int32x4_t v175 = (int32x4_t)vshlq_u64((uint64x2_t)v112, v171);
  *(int32x2_t *)v112.i8 = vmovn_s64((int64x2_t)v112);
  *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
  int16x8_t v176 = (int16x8_t)vzip1q_s32(v112, v175);
  int32x4_t v177 = (int32x4_t)vshlq_u64((uint64x2_t)v129, v174);
  *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v129);
  *(int32x2_t *)v177.i8 = vmovn_s64((int64x2_t)v177);
  uint32x4_t v178 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL))));
  int16x8_t v179 = (int16x8_t)vzip1q_s32(v116, v177);
  int16x8_t v180 = (int16x8_t)vshlq_u32((uint32x4_t)v173, v178);
  int16x8_t v181 = (int16x8_t)vshlq_u32((uint32x4_t)v176, v178);
  *(int16x4_t *)v173.i8 = vmovn_s32((int32x4_t)v173);
  *(int16x4_t *)v180.i8 = vmovn_s32((int32x4_t)v180);
  *(int16x4_t *)v176.i8 = vmovn_s32((int32x4_t)v176);
  *(int16x4_t *)v181.i8 = vmovn_s32((int32x4_t)v181);
  int16x8_t v182 = vzip1q_s16(v173, v180);
  v180.i64[0] = 0x10001000100010;
  v180.i64[1] = 0x10001000100010;
  int16x8_t v183 = vzip1q_s16(v176, v181);
  v181.i64[0] = 0xF000F000F000FLL;
  v181.i64[1] = 0xF000F000F000FLL;
  int16x8_t v184 = vsubq_s16(v180, (int16x8_t)v33);
  int16x8_t v185 = vaddq_s16((int16x8_t)v33, v181);
  uint32x4_t v186 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v34.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL))));
  int16x8_t v187 = vshlq_s16(vshlq_s16(v182, v184), v185);
  int16x8_t v188 = vshlq_s16(vshlq_s16(v183, v184), v185);
  int16x8_t v189 = (int16x8_t)vandq_s8(v35, v166);
  int16x8_t v190 = vsubq_s16(v187, v189);
  int16x8_t v191 = vsubq_s16(v188, v189);
  int16x8_t v192 = (int16x8_t)vshlq_u32((uint32x4_t)v179, v186);
  *(int16x4_t *)v187.i8 = vmovn_s32((int32x4_t)v179);
  *(int16x4_t *)v192.i8 = vmovn_s32((int32x4_t)v192);
  v179.i64[0] = 0x10001000100010;
  v179.i64[1] = 0x10001000100010;
  int16x8_t v193 = vzip1q_s16(v187, v192);
  v187.i64[0] = 0xF000F000F000FLL;
  v187.i64[1] = 0xF000F000F000FLL;
  int16x8_t v194 = vsubq_s16(v179, (int16x8_t)v34);
  int16x8_t v195 = vaddq_s16((int16x8_t)v34, v187);
  int32x4_t v196 = (int32x4_t)vshlq_u64((uint64x2_t)v132, v174);
  *(int32x2_t *)v187.i8 = vmovn_s64((int64x2_t)v132);
  *(int32x2_t *)v196.i8 = vmovn_s64((int64x2_t)v196);
  int16x8_t v197 = (int16x8_t)vzip1q_s32((int32x4_t)v187, v196);
  int16x8_t v198 = (int16x8_t)vshlq_u32((uint32x4_t)v197, v186);
  *(int16x4_t *)v197.i8 = vmovn_s32((int32x4_t)v197);
  *(int16x4_t *)v198.i8 = vmovn_s32((int32x4_t)v198);
  int16x8_t v199 = vshlq_s16(vshlq_s16(vzip1q_s16(v197, v198), v194), v195);
  int16x8_t v200 = (int16x8_t)vandq_s8(v31, v166);
  int16x8_t v201 = vsubq_s16(vshlq_s16(vshlq_s16(v193, v194), v195), v200);
  int16x8_t v202 = vsubq_s16(v199, v200);
  int32x2_t v203 = vzip1_s32(*(int32x2_t *)v70.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v70, (int8x16_t)v70, 8uLL));
  int32x2_t v204 = vzip1_s32(*(int32x2_t *)v81.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v81, (int8x16_t)v81, 8uLL));
  v141.i64[0] = v203.u32[0];
  v141.i64[1] = v203.u32[1];
  int64x2_t v205 = v141;
  v141.i64[0] = v204.u32[0];
  v141.i64[1] = v204.u32[1];
  int32x4_t v206 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v205));
  *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
  *(int32x2_t *)v206.i8 = vmovn_s64((int64x2_t)v206);
  int16x8_t v207 = (int16x8_t)vzip1q_s32(v77, v206);
  int32x4_t v208 = (int32x4_t)vshlq_u64((uint64x2_t)v68, (uint64x2_t)vnegq_s64(v141));
  *(int32x2_t *)v68.i8 = vmovn_s64((int64x2_t)v68);
  *(int32x2_t *)v208.i8 = vmovn_s64((int64x2_t)v208);
  int16x8_t v209 = (int16x8_t)vzip1q_s32(v68, v208);
  int16x8_t v210 = (int16x8_t)vshlq_u32((uint32x4_t)v207, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v69.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL)))));
  int16x8_t v211 = (int16x8_t)vshlq_u32((uint32x4_t)v209, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v36.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)))));
  *(int16x4_t *)v207.i8 = vmovn_s32((int32x4_t)v207);
  *(int16x4_t *)v210.i8 = vmovn_s32((int32x4_t)v210);
  *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
  *(int16x4_t *)v211.i8 = vmovn_s32((int32x4_t)v211);
  int16x8_t v212 = vzip1q_s16(v207, v210);
  v210.i64[0] = 0x10001000100010;
  v210.i64[1] = 0x10001000100010;
  int16x8_t v213 = vzip1q_s16(v209, v211);
  v211.i64[0] = 0xF000F000F000FLL;
  v211.i64[1] = 0xF000F000F000FLL;
  int16x8_t v214 = vaddq_s16((int16x8_t)vandq_s8(v164, v38), vshlq_s16(vshlq_s16(v212, vsubq_s16(v210, (int16x8_t)v69)), vaddq_s16((int16x8_t)v69, v211)));
  int16x8_t v215 = (int16x8_t)vandq_s8(v38, v166);
  v216.i64[0] = 0x1000100010001;
  v216.i64[1] = 0x1000100010001;
  int16x8_t v217 = vceqq_s16(v18, (int16x8_t)v216);
  int v218 = (unsigned __int16)vaddvq_s16(v217);
  int8x16_t v219 = (int8x16_t)vsubq_s16(v214, v215);
  int8x16_t v220 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v213, vsubq_s16(v210, (int16x8_t)v36)), vaddq_s16((int16x8_t)v36, v211)), v215);
  v217.i32[0] = v13;
  int16x8_t v221 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v217.i8, 0);
  if (v218)
  {
    int8x16_t v222 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v14, v216));
    int8x16_t v223 = v220;
    v223.i32[3] = v219.i32[0];
    int8x16_t v224 = v219;
    v224.i32[0] = v220.i32[3];
    v241.val[0] = vbslq_s8(v222, v224, v219);
    v241.val[1] = vbslq_s8(v222, v223, v220);
    v225.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v225.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v242.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v241, (int8x16_t)xmmword_242EA7570), v222), (int16x8_t)v241.val[0]);
    v242.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v241.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v241, v225), v222));
    int8x16_t v219 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v242, (int8x16_t)xmmword_242EA7580), v222), (int16x8_t)v242.val[0]);
    int8x16_t v220 = (int8x16_t)vaddq_s16((int16x8_t)v242.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v242, v225), v222));
    v242.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v168.i8, (int8x16_t)xmmword_242EA7590), v222), v168);
    v242.val[1] = (int8x16_t)vaddq_s16(v169, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v168.i8, (int8x16_t)xmmword_242EA75A0), v222));
    int16x8_t v168 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v242, (int8x16_t)xmmword_242EA75B0), v222), (int16x8_t)v242.val[0]);
    int16x8_t v169 = vaddq_s16((int16x8_t)v242.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v242, v225), v222));
    v242.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v190.i8, (int8x16_t)xmmword_242EA75C0), v222), v190);
    v242.val[1] = (int8x16_t)vaddq_s16(v191, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v190.i8, (int8x16_t)xmmword_242EA7570), v222));
    int16x8_t v190 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v242, v225), v222), (int16x8_t)v242.val[0]);
    int16x8_t v191 = vaddq_s16((int16x8_t)v242.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v242, (int8x16_t)xmmword_242EA75D0), v222));
    v241.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v201.i8, (int8x16_t)xmmword_242EA75E0), v222), v201);
    v241.val[1] = (int8x16_t)vaddq_s16(v202, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v201.i8, (int8x16_t)xmmword_242EA7570), v222));
    int16x8_t v201 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v241, v225), v222), (int16x8_t)v241.val[0]);
    int16x8_t v202 = vaddq_s16((int16x8_t)v241.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v241, (int8x16_t)xmmword_242EA75F0), v222));
  }
  int8x16_t v226 = (int8x16_t)vaddq_s16((int16x8_t)v219, v221);
  int8x16_t v227 = (int8x16_t)vaddq_s16((int16x8_t)v220, v221);
  int8x16_t v228 = (int8x16_t)vaddq_s16(v168, v221);
  int8x16_t v229 = (int8x16_t)vaddq_s16(v169, v221);
  int8x16_t v230 = (int8x16_t)vaddq_s16(v190, v221);
  int8x16_t v231 = (int8x16_t)vaddq_s16(v191, v221);
  int8x16_t v232 = (int8x16_t)vaddq_s16(v201, v221);
  int8x16_t v233 = (int8x16_t)vaddq_s16(v202, v221);
  v234.i64[0] = 0x10001000100010;
  v234.i64[1] = 0x10001000100010;
  int8x16_t v235 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v14, v234));
  int16x8_t v236 = (int16x8_t *)((char *)a1 + a2);
  *a1 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v226, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v226);
  a1[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v228, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v228);
  int8x16_t v237 = (int16x8_t *)((char *)a1 + 2 * a2);
  *int16x8_t v236 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v227, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v227);
  v236[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v229, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v229);
  *int8x16_t v237 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v230, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v230);
  v237[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v232, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v232);
  int16x8_t v238 = (int16x8_t *)((char *)v237 + a2);
  *int16x8_t v238 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v231, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v231);
  v238[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v233, (int8x16_t)xmmword_242EA76C0), v235), (int16x8_t)v233);
  return v133;
}

int16x8_t *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int32x4_t a4, int32x4_t a5)
{
  unsigned int v8 = *a3;
  if (v8 == 127)
  {
    int32x4_t v10 = *(int32x4_t *)a2;
    a5 = *(int32x4_t *)(a2 + 16);
    long long v11 = *(_OWORD *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 48);
    long long v13 = *(_OWORD *)(a2 + 80);
    long long v14 = *(_OWORD *)(a2 + 96);
    long long v15 = *(_OWORD *)(a2 + 112);
    long long v16 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(int32x4_t *)(a1 + 128) = a5;
    *(_OWORD *)(a1 + 144) = v12;
    *(_OWORD *)(a1 + 256) = v16;
    *(_OWORD *)(a1 + 272) = v14;
    *(_OWORD *)(a1 + 384) = v13;
    *(_OWORD *)(a1 + 400) = v15;
    uint64_t v9 = 128;
  }
  else if (v8 == 3)
  {
    int32x4_t v10 = (int32x4_t)vld1q_dup_f32((const float *)a2);
    *(int32x4_t *)a1 = v10;
    *(int32x4_t *)(a1 + 16) = v10;
    *(int32x4_t *)(a1 + 128) = v10;
    *(int32x4_t *)(a1 + 144) = v10;
    *(int32x4_t *)(a1 + 256) = v10;
    *(int32x4_t *)(a1 + 272) = v10;
    *(int32x4_t *)(a1 + 384) = v10;
    *(int32x4_t *)(a1 + 400) = v10;
    uint64_t v9 = 4;
  }
  else if (*a3)
  {
    uint64_t v9 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)a1, 128, a2, v8, a4, a5);
  }
  else
  {
    uint64_t v9 = 0;
    int32x4_t v10 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 256) = 0u;
    *(_OWORD *)(a1 + 272) = 0u;
    *(_OWORD *)(a1 + 384) = 0u;
    *(_OWORD *)(a1 + 400) = 0u;
  }
  uint64_t v17 = a2 + v9;
  int16x8_t v18 = (int16x8_t *)(a1 + 32);
  unsigned int v19 = a3[1];
  if (a3[1])
  {
    if (v19 == 3)
    {
      int32x4_t v20 = (int32x4_t)vld1q_dup_f32((const float *)v17);
      *(int32x4_t *)(a1 + 32) = v20;
      *(int32x4_t *)(a1 + 48) = v20;
      *(int32x4_t *)(a1 + 160) = v20;
      *(int32x4_t *)(a1 + 176) = v20;
      *(int32x4_t *)(a1 + 288) = v20;
      *(int32x4_t *)(a1 + 304) = v20;
      *(int32x4_t *)(a1 + 416) = v20;
      *(int32x4_t *)(a1 + 432) = v20;
      uint64_t v27 = 4;
    }
    else if (v19 == 127)
    {
      int32x4_t v20 = *(int32x4_t *)v17;
      a5 = *(int32x4_t *)(v17 + 16);
      long long v21 = *(_OWORD *)(v17 + 32);
      long long v22 = *(_OWORD *)(v17 + 48);
      long long v23 = *(_OWORD *)(v17 + 80);
      long long v24 = *(_OWORD *)(v17 + 96);
      long long v25 = *(_OWORD *)(v17 + 112);
      long long v26 = *(_OWORD *)(v17 + 64);
      *int16x8_t v18 = *(int16x8_t *)v17;
      *(_OWORD *)(a1 + 48) = v21;
      *(int32x4_t *)(a1 + 160) = a5;
      *(_OWORD *)(a1 + 176) = v22;
      *(_OWORD *)(a1 + 288) = v26;
      *(_OWORD *)(a1 + 304) = v24;
      *(_OWORD *)(a1 + 416) = v23;
      *(_OWORD *)(a1 + 432) = v25;
      uint64_t v27 = 128;
    }
    else
    {
      uint64_t v27 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v18, 128, v17, v19, v10, a5);
    }
  }
  else
  {
    uint64_t v27 = 0;
    int32x4_t v20 = 0uLL;
    *int16x8_t v18 = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 288) = 0u;
    *(_OWORD *)(a1 + 304) = 0u;
    *(_OWORD *)(a1 + 416) = 0u;
    *(_OWORD *)(a1 + 432) = 0u;
  }
  uint64_t v28 = v17 + v27;
  int32x4_t v29 = (int16x8_t *)(a1 + 512);
  unsigned int v30 = a3[2];
  if (a3[2])
  {
    if (v30 == 3)
    {
      int32x4_t v31 = (int32x4_t)vld1q_dup_f32((const float *)v28);
      *(int32x4_t *)(a1 + 512) = v31;
      *(int32x4_t *)(a1 + 528) = v31;
      *(int32x4_t *)(a1 + 640) = v31;
      *(int32x4_t *)(a1 + 656) = v31;
      *(int32x4_t *)(a1 + 768) = v31;
      *(int32x4_t *)(a1 + 784) = v31;
      *(int32x4_t *)(a1 + 896) = v31;
      *(int32x4_t *)(a1 + 912) = v31;
      uint64_t v38 = 4;
    }
    else if (v30 == 127)
    {
      int32x4_t v31 = *(int32x4_t *)v28;
      a5 = *(int32x4_t *)(v28 + 16);
      long long v32 = *(_OWORD *)(v28 + 32);
      long long v33 = *(_OWORD *)(v28 + 48);
      long long v34 = *(_OWORD *)(v28 + 80);
      long long v35 = *(_OWORD *)(v28 + 96);
      long long v36 = *(_OWORD *)(v28 + 112);
      long long v37 = *(_OWORD *)(v28 + 64);
      *int32x4_t v29 = *(int16x8_t *)v28;
      *(_OWORD *)(a1 + 528) = v32;
      *(int32x4_t *)(a1 + 640) = a5;
      *(_OWORD *)(a1 + 656) = v33;
      *(_OWORD *)(a1 + 768) = v37;
      *(_OWORD *)(a1 + 784) = v35;
      *(_OWORD *)(a1 + 896) = v34;
      *(_OWORD *)(a1 + 912) = v36;
      uint64_t v38 = 128;
    }
    else
    {
      uint64_t v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v29, 128, v28, v30, v20, a5);
    }
  }
  else
  {
    uint64_t v38 = 0;
    int32x4_t v31 = 0uLL;
    *int32x4_t v29 = 0u;
    *(_OWORD *)(a1 + 528) = 0u;
    *(_OWORD *)(a1 + 640) = 0u;
    *(_OWORD *)(a1 + 656) = 0u;
    *(_OWORD *)(a1 + 768) = 0u;
    *(_OWORD *)(a1 + 784) = 0u;
    *(_OWORD *)(a1 + 896) = 0u;
    *(_OWORD *)(a1 + 912) = 0u;
  }
  uint64_t v39 = v28 + v38;
  int64x2_t v40 = (int16x8_t *)(a1 + 544);
  unsigned int v41 = a3[3];
  if (a3[3])
  {
    if (v41 == 3)
    {
      int32x4_t v42 = (int32x4_t)vld1q_dup_f32((const float *)v39);
      *(int32x4_t *)(a1 + 544) = v42;
      *(int32x4_t *)(a1 + 560) = v42;
      *(int32x4_t *)(a1 + 672) = v42;
      *(int32x4_t *)(a1 + 688) = v42;
      *(int32x4_t *)(a1 + 800) = v42;
      *(int32x4_t *)(a1 + 816) = v42;
      *(int32x4_t *)(a1 + 928) = v42;
      *(int32x4_t *)(a1 + 944) = v42;
      uint64_t v49 = 4;
    }
    else if (v41 == 127)
    {
      int32x4_t v42 = *(int32x4_t *)v39;
      a5 = *(int32x4_t *)(v39 + 16);
      long long v43 = *(_OWORD *)(v39 + 32);
      long long v44 = *(_OWORD *)(v39 + 48);
      long long v45 = *(_OWORD *)(v39 + 80);
      long long v46 = *(_OWORD *)(v39 + 96);
      long long v47 = *(_OWORD *)(v39 + 112);
      long long v48 = *(_OWORD *)(v39 + 64);
      *int64x2_t v40 = *(int16x8_t *)v39;
      *(_OWORD *)(a1 + 560) = v43;
      *(int32x4_t *)(a1 + 672) = a5;
      *(_OWORD *)(a1 + 688) = v44;
      *(_OWORD *)(a1 + 800) = v48;
      *(_OWORD *)(a1 + 816) = v46;
      *(_OWORD *)(a1 + 928) = v45;
      *(_OWORD *)(a1 + 944) = v47;
      uint64_t v49 = 128;
    }
    else
    {
      uint64_t v49 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v40, 128, v39, v41, v31, a5);
    }
  }
  else
  {
    uint64_t v49 = 0;
    int32x4_t v42 = 0uLL;
    *int64x2_t v40 = 0u;
    *(_OWORD *)(a1 + 560) = 0u;
    *(_OWORD *)(a1 + 672) = 0u;
    *(_OWORD *)(a1 + 688) = 0u;
    *(_OWORD *)(a1 + 800) = 0u;
    *(_OWORD *)(a1 + 816) = 0u;
    *(_OWORD *)(a1 + 928) = 0u;
    *(_OWORD *)(a1 + 944) = 0u;
  }
  uint64_t v50 = v39 + v49;
  int16x8_t v51 = (int16x8_t *)(a1 + 64);
  unsigned int v52 = a3[4];
  if (a3[4])
  {
    if (v52 == 3)
    {
      int32x4_t v53 = (int32x4_t)vld1q_dup_f32((const float *)v50);
      *(int32x4_t *)(a1 + 64) = v53;
      *(int32x4_t *)(a1 + 80) = v53;
      *(int32x4_t *)(a1 + 192) = v53;
      *(int32x4_t *)(a1 + 208) = v53;
      *(int32x4_t *)(a1 + 320) = v53;
      *(int32x4_t *)(a1 + 336) = v53;
      *(int32x4_t *)(a1 + 448) = v53;
      *(int32x4_t *)(a1 + 464) = v53;
      uint64_t v60 = 4;
    }
    else if (v52 == 127)
    {
      int32x4_t v53 = *(int32x4_t *)v50;
      a5 = *(int32x4_t *)(v50 + 16);
      long long v54 = *(_OWORD *)(v50 + 32);
      long long v55 = *(_OWORD *)(v50 + 48);
      long long v56 = *(_OWORD *)(v50 + 80);
      long long v57 = *(_OWORD *)(v50 + 96);
      long long v58 = *(_OWORD *)(v50 + 112);
      long long v59 = *(_OWORD *)(v50 + 64);
      *int16x8_t v51 = *(int16x8_t *)v50;
      *(_OWORD *)(a1 + 80) = v54;
      *(int32x4_t *)(a1 + 192) = a5;
      *(_OWORD *)(a1 + 208) = v55;
      *(_OWORD *)(a1 + 320) = v59;
      *(_OWORD *)(a1 + 336) = v57;
      *(_OWORD *)(a1 + 448) = v56;
      *(_OWORD *)(a1 + 464) = v58;
      uint64_t v60 = 128;
    }
    else
    {
      uint64_t v60 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v51, 128, v50, v52, v42, a5);
    }
  }
  else
  {
    uint64_t v60 = 0;
    int32x4_t v53 = 0uLL;
    *int16x8_t v51 = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
    *(_OWORD *)(a1 + 208) = 0u;
    *(_OWORD *)(a1 + 320) = 0u;
    *(_OWORD *)(a1 + 336) = 0u;
    *(_OWORD *)(a1 + 448) = 0u;
    *(_OWORD *)(a1 + 464) = 0u;
  }
  uint64_t v61 = v50 + v60;
  int64x2_t v62 = (int16x8_t *)(a1 + 96);
  unsigned int v63 = a3[5];
  if (a3[5])
  {
    if (v63 == 3)
    {
      int32x4_t v64 = (int32x4_t)vld1q_dup_f32((const float *)v61);
      *(int32x4_t *)(a1 + 96) = v64;
      *(int32x4_t *)(a1 + 112) = v64;
      *(int32x4_t *)(a1 + 224) = v64;
      *(int32x4_t *)(a1 + 240) = v64;
      *(int32x4_t *)(a1 + 352) = v64;
      *(int32x4_t *)(a1 + 368) = v64;
      *(int32x4_t *)(a1 + 480) = v64;
      *(int32x4_t *)(a1 + 496) = v64;
      uint64_t v71 = 4;
    }
    else if (v63 == 127)
    {
      int32x4_t v64 = *(int32x4_t *)v61;
      a5 = *(int32x4_t *)(v61 + 16);
      long long v65 = *(_OWORD *)(v61 + 32);
      long long v66 = *(_OWORD *)(v61 + 48);
      long long v67 = *(_OWORD *)(v61 + 80);
      long long v68 = *(_OWORD *)(v61 + 96);
      long long v69 = *(_OWORD *)(v61 + 112);
      long long v70 = *(_OWORD *)(v61 + 64);
      *int64x2_t v62 = *(int16x8_t *)v61;
      *(_OWORD *)(a1 + 112) = v65;
      *(int32x4_t *)(a1 + 224) = a5;
      *(_OWORD *)(a1 + 240) = v66;
      *(_OWORD *)(a1 + 352) = v70;
      *(_OWORD *)(a1 + 368) = v68;
      *(_OWORD *)(a1 + 480) = v67;
      *(_OWORD *)(a1 + 496) = v69;
      uint64_t v71 = 128;
    }
    else
    {
      uint64_t v71 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v62, 128, v61, v63, v53, a5);
    }
  }
  else
  {
    uint64_t v71 = 0;
    int32x4_t v64 = 0uLL;
    *int64x2_t v62 = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 224) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 368) = 0u;
    *(_OWORD *)(a1 + 480) = 0u;
    *(_OWORD *)(a1 + 496) = 0u;
  }
  uint64_t v72 = v61 + v71;
  int64x2_t v73 = (int16x8_t *)(a1 + 576);
  unsigned int v74 = a3[6];
  if (a3[6])
  {
    if (v74 == 3)
    {
      int32x4_t v75 = (int32x4_t)vld1q_dup_f32((const float *)v72);
      *(int32x4_t *)(a1 + 576) = v75;
      *(int32x4_t *)(a1 + 592) = v75;
      *(int32x4_t *)(a1 + 704) = v75;
      *(int32x4_t *)(a1 + 720) = v75;
      *(int32x4_t *)(a1 + 832) = v75;
      *(int32x4_t *)(a1 + 848) = v75;
      *(int32x4_t *)(a1 + 960) = v75;
      *(int32x4_t *)(a1 + 976) = v75;
      uint64_t v82 = 4;
    }
    else if (v74 == 127)
    {
      int32x4_t v75 = *(int32x4_t *)v72;
      a5 = *(int32x4_t *)(v72 + 16);
      long long v76 = *(_OWORD *)(v72 + 32);
      long long v77 = *(_OWORD *)(v72 + 48);
      long long v78 = *(_OWORD *)(v72 + 80);
      long long v79 = *(_OWORD *)(v72 + 96);
      long long v80 = *(_OWORD *)(v72 + 112);
      long long v81 = *(_OWORD *)(v72 + 64);
      *int64x2_t v73 = *(int16x8_t *)v72;
      *(_OWORD *)(a1 + 592) = v76;
      *(int32x4_t *)(a1 + 704) = a5;
      *(_OWORD *)(a1 + 720) = v77;
      *(_OWORD *)(a1 + 832) = v81;
      *(_OWORD *)(a1 + 848) = v79;
      *(_OWORD *)(a1 + 960) = v78;
      *(_OWORD *)(a1 + 976) = v80;
      uint64_t v82 = 128;
    }
    else
    {
      uint64_t v82 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v73, 128, v72, v74, v64, a5);
    }
  }
  else
  {
    uint64_t v82 = 0;
    int32x4_t v75 = 0uLL;
    *int64x2_t v73 = 0u;
    *(_OWORD *)(a1 + 592) = 0u;
    *(_OWORD *)(a1 + 704) = 0u;
    *(_OWORD *)(a1 + 720) = 0u;
    *(_OWORD *)(a1 + 832) = 0u;
    *(_OWORD *)(a1 + 848) = 0u;
    *(_OWORD *)(a1 + 960) = 0u;
    *(_OWORD *)(a1 + 976) = 0u;
  }
  unint64_t result = (int16x8_t *)(a1 + 608);
  unsigned int v84 = a3[7];
  if (!a3[7])
  {
    float32x4_t v93 = 0uLL;
    *unint64_t result = 0u;
    *(_OWORD *)(a1 + 624) = 0u;
LABEL_56:
    *(float32x4_t *)(a1 + 736) = v93;
    *(float32x4_t *)(a1 + 752) = v93;
    *(float32x4_t *)(a1 + 864) = v93;
    *(float32x4_t *)(a1 + 880) = v93;
    *(float32x4_t *)(a1 + 992) = v93;
    *(float32x4_t *)(a1 + 1008) = v93;
    return result;
  }
  uint64_t v85 = v72 + v82;
  if (v84 == 3)
  {
    float32x4_t v93 = vld1q_dup_f32((const float *)v85);
    *(float32x4_t *)(a1 + 608) = v93;
    *(float32x4_t *)(a1 + 624) = v93;
    goto LABEL_56;
  }
  if (v84 == 127)
  {
    long long v86 = *(_OWORD *)(v85 + 16);
    long long v87 = *(_OWORD *)(v85 + 32);
    long long v88 = *(_OWORD *)(v85 + 48);
    long long v89 = *(_OWORD *)(v85 + 80);
    long long v90 = *(_OWORD *)(v85 + 96);
    long long v91 = *(_OWORD *)(v85 + 112);
    long long v92 = *(_OWORD *)(v85 + 64);
    *unint64_t result = *(int16x8_t *)v85;
    *(_OWORD *)(a1 + 624) = v87;
    *(_OWORD *)(a1 + 736) = v86;
    *(_OWORD *)(a1 + 752) = v88;
    *(_OWORD *)(a1 + 864) = v92;
    *(_OWORD *)(a1 + 880) = v90;
    *(_OWORD *)(a1 + 992) = v89;
    *(_OWORD *)(a1 + 1008) = v91;
  }
  else
  {
    return (int16x8_t *)AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(result, 128, v85, v84, v75, a5);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(int16x8_t *a1, char *a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  unint64_t v6 = (int16x8_t *)((char *)a3 + 2 * a4);
  int16x8_t v7 = *a3;
  int8x16_t v8 = *(int8x16_t *)((char *)a3 + a4);
  int16x8_t v9 = *(int16x8_t *)((char *)&a3[1] + a4);
  int16x8_t v11 = *v6;
  int16x8_t v12 = v6[1];
  int32x4_t v10 = (int16x8_t *)((char *)v6 + a4);
  int16x8_t v13 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)a3->i8, 0);
  int16x8_t v14 = vsubq_s16(*a3, v13);
  int8x16_t v15 = (int8x16_t)vsubq_s16((int16x8_t)v8, v13);
  int16x8_t v420 = a3[1];
  int16x8_t v16 = vsubq_s16(v420, v13);
  int8x16_t v17 = (int8x16_t)vsubq_s16(v9, v13);
  int16x8_t v419 = v11;
  int16x8_t v18 = vsubq_s16(v11, v13);
  int16x8_t v19 = vsubq_s16(*v10, v13);
  int16x8_t v20 = vsubq_s16(v12, v13);
  int16x8_t v416 = *v10;
  int16x8_t v417 = v10[1];
  int16x8_t v21 = vsubq_s16(v417, v13);
  int16x8_t v22 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v14, (int16x8_t)v15), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v23 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v14, (int16x8_t)v15), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v24 = vpmaxq_s16(v22, v22);
  int16x8_t v25 = vpminq_s16(v23, v23);
  int16x8_t v26 = vpmaxq_s16(v24, v24);
  int16x8_t v27 = vpminq_s16(v25, v25);
  v28.i64[0] = 0x8000800080008000;
  v28.i64[1] = 0x8000800080008000;
  int16x8_t v29 = vmaxq_s16(v26, v28);
  v30.i64[0] = 0x8000800080008000;
  v30.i64[1] = 0x8000800080008000;
  int16x8_t v31 = vminq_s16(v27, v30);
  int16x8_t v32 = vzip1q_s16(v26, v27);
  v33.i64[0] = 0x10001000100010;
  v33.i64[1] = 0x10001000100010;
  int16x8_t v34 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v32)), (int8x16_t)vceqzq_s16(v32));
  int16x8_t v35 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v16, (int16x8_t)v17), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v36 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v16, (int16x8_t)v17), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v37 = vpmaxq_s16(v35, v35);
  int16x8_t v38 = vpminq_s16(v36, v36);
  int16x8_t v39 = vpmaxq_s16(v37, v37);
  int16x8_t v40 = vpminq_s16(v38, v38);
  int16x8_t v41 = vmaxq_s16(v29, v39);
  int16x8_t v42 = vminq_s16(v31, v40);
  int16x8_t v43 = vzip1q_s16(v39, v40);
  int16x8_t v44 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v43)), (int8x16_t)vceqzq_s16(v43));
  int16x8_t v45 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v18, v19), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v46 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v18, v19), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v47 = vpmaxq_s16(v45, v45);
  int16x8_t v48 = vpminq_s16(v46, v46);
  int16x8_t v49 = vpmaxq_s16(v47, v47);
  int16x8_t v50 = vpminq_s16(v48, v48);
  int16x8_t v51 = vmaxq_s16(v41, v49);
  int16x8_t v52 = vminq_s16(v42, v50);
  int16x8_t v53 = vzip1q_s16(v49, v50);
  int16x8_t v54 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v53)), (int8x16_t)vceqzq_s16(v53));
  int16x8_t v55 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v20, v21), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v56 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v20, v21), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v57 = vpmaxq_s16(v55, v55);
  int16x8_t v58 = vpminq_s16(v56, v56);
  int16x8_t v59 = vpmaxq_s16(v57, v57);
  int16x8_t v60 = vpminq_s16(v58, v58);
  int16x8_t v61 = vmaxq_s16(v51, v59);
  int8x16_t v62 = (int8x16_t)vminq_s16(v52, v60);
  int16x8_t v63 = vzip1q_s16(v59, v60);
  int16x8_t v64 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v63)), (int8x16_t)vceqzq_s16(v63));
  int16x8_t v65 = vpmaxq_s16(v34, v34);
  int16x8_t v66 = vpmaxq_s16(v44, v44);
  int16x8_t v67 = vpmaxq_s16(v54, v54);
  int16x8_t v68 = vpmaxq_s16(v64, v64);
  int8x16_t v69 = (int8x16_t)vmaxq_s16(vmaxq_s16(v65, v66), vmaxq_s16(v67, v68));
  int16x8_t v70 = vclzq_s16(vsubq_s16(v61, (int16x8_t)v62));
  int8x16_t v71 = (int8x16_t)vsubq_s16((int16x8_t)v33, v70);
  int8x16_t v72 = (int8x16_t)vcgtq_s16((int16x8_t)v69, (int16x8_t)v71);
  int8x16_t v73 = vbslq_s8(v72, v71, v69);
  v69.i64[0] = 0x8000800080008;
  v69.i64[1] = 0x8000800080008;
  int8x16_t v74 = vandq_s8(v72, v69);
  v75.i64[0] = 0x3000300030003;
  v75.i64[1] = 0x3000300030003;
  int16x8_t v76 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v73, v65), (int16x8_t)v75), (int16x8_t)0);
  int16x8_t v77 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v73, v66), (int16x8_t)v75), (int16x8_t)0);
  int16x8_t v78 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v73, v67), (int16x8_t)v75), (int16x8_t)0);
  int16x8_t v79 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v73, v68), (int16x8_t)v75), (int16x8_t)0);
  v80.i64[0] = 0x4000400040004;
  v80.i64[1] = 0x4000400040004;
  int8x16_t v81 = vbicq_s8(v80, (int8x16_t)vceqq_s16(vaddq_s16(v79, v78), vnegq_s16(vaddq_s16(v76, v77))));
  int8x16_t v82 = vorrq_s8(v81, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v73), v75), v74));
  int8x16_t v430 = (int8x16_t)v21;
  int8x16_t v431 = (int8x16_t)v13;
  int8x16_t v421 = (int8x16_t)v14;
  int8x16_t v423 = v15;
  int16x8_t v426 = (int16x8_t)v17;
  int8x16_t v427 = (int8x16_t)v18;
  int8x16_t v428 = (int8x16_t)v19;
  int8x16_t v429 = (int8x16_t)v20;
  v13.i64[0] = 0xF000F000F000FLL;
  v13.i64[1] = 0xF000F000F000FLL;
  int v83 = (unsigned __int16)vmaxvq_s16((int16x8_t)v73);
  v14.i64[0] = -1;
  v14.i64[1] = -1;
  int16x8_t v84 = vshlq_s16(v14, vsubq_s16(v13, v70));
  int8x16_t v425 = (int8x16_t)v16;
  int8x16_t v412 = (int8x16_t)v21;
  int8x16_t v414 = (int8x16_t)v19;
  BOOL v86 = a5 < 2 || a6 < 2;
  int8x16_t v437 = v73;
  int8x16_t v438 = v62;
  int8x16_t v87 = vandq_s8((int8x16_t)vsubq_s16(v84, (int16x8_t)v62), v72);
  int8x16_t v410 = (int8x16_t)v61;
  int8x16_t v439 = (int8x16_t)v61;
  int8x16_t v440 = v87;
  int8x16_t v88 = (int8x16_t)vsubq_s16((int16x8_t)v73, v76);
  int8x16_t v89 = (int8x16_t)vsubq_s16((int16x8_t)v73, v77);
  int8x16_t v433 = v88;
  int8x16_t v434 = v89;
  int8x16_t v90 = (int8x16_t)vsubq_s16((int16x8_t)v73, v78);
  int8x16_t v91 = (int8x16_t)vsubq_s16((int16x8_t)v73, v79);
  int8x16_t v435 = v90;
  int8x16_t v436 = v91;
  int8x16_t v432 = v82;
  if (v83)
  {
    int8x16_t v406 = v87;
    int8x16_t v408 = v82;
    int16x8_t v418 = v12;
    int8x16_t v92 = (int8x16_t)vsubq_s16((int16x8_t)v15, (int16x8_t)vqtbl1q_s8(v15, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v398 = (int8x16_t)vsubq_s16((int16x8_t)v421, (int16x8_t)vqtbl1q_s8(v421, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v93 = (int8x16_t)vsubq_s16((int16x8_t)v425, (int16x8_t)vqtbl1q_s8(v425, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v94 = (int8x16_t)vsubq_s16(v426, (int16x8_t)vqtbl1q_s8((int8x16_t)v426, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v95 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v398, (int16x8_t)v92), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v96 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v398, (int16x8_t)v92), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v97 = vpmaxq_s16(v95, v95);
    int16x8_t v98 = vpminq_s16(v96, v96);
    int16x8_t v99 = vpmaxq_s16(v97, v97);
    int16x8_t v100 = vpminq_s16(v98, v98);
    v101.i64[0] = 0x8000800080008000;
    v101.i64[1] = 0x8000800080008000;
    int16x8_t v102 = vmaxq_s16(v99, v101);
    v101.i64[0] = 0x8000800080008000;
    v101.i64[1] = 0x8000800080008000;
    int16x8_t v103 = vminq_s16(v100, v101);
    int16x8_t v104 = vzip1q_s16(v99, v100);
    int16x8_t v105 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v104)), (int8x16_t)vceqzq_s16(v104));
    int16x8_t v106 = vpmaxq_s16(v105, v105);
    int16x8_t v107 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v93, (int16x8_t)v94), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v108 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v93, (int16x8_t)v94), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v109 = vpmaxq_s16(v107, v107);
    int16x8_t v110 = vpminq_s16(v108, v108);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vmaxq_s16(v102, v111);
    int16x8_t v114 = vminq_s16(v103, v112);
    int16x8_t v115 = vzip1q_s16(v111, v112);
    int16x8_t v116 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v115)), (int8x16_t)vceqzq_s16(v115));
    int16x8_t v117 = vpmaxq_s16(v116, v116);
    int8x16_t v401 = (int8x16_t)vsubq_s16((int16x8_t)v428, (int16x8_t)vqtbl1q_s8(v428, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v402 = (int8x16_t)vsubq_s16((int16x8_t)v427, (int16x8_t)vqtbl1q_s8(v427, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v118 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v402, (int16x8_t)v401), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v402, (int16x8_t)v401), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v120 = vpmaxq_s16(v118, v118);
    int16x8_t v121 = vpminq_s16(v119, v119);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vmaxq_s16(v113, v122);
    int16x8_t v125 = vminq_s16(v114, v123);
    int16x8_t v126 = vzip1q_s16(v122, v123);
    int16x8_t v127 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v126)), (int8x16_t)vceqzq_s16(v126));
    int16x8_t v128 = vpmaxq_s16(v127, v127);
    int8x16_t v399 = (int8x16_t)vsubq_s16((int16x8_t)v430, (int16x8_t)vqtbl1q_s8(v430, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v400 = (int8x16_t)vsubq_s16((int16x8_t)v429, (int16x8_t)vqtbl1q_s8(v429, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v400, (int16x8_t)v399), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v130 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v400, (int16x8_t)v399), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v131 = vpmaxq_s16(v129, v129);
    int16x8_t v132 = vpminq_s16(v130, v130);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int8x16_t v135 = (int8x16_t)vmaxq_s16(v124, v133);
    int8x16_t v136 = (int8x16_t)vminq_s16(v125, v134);
    int16x8_t v137 = vzip1q_s16(v133, v134);
    int16x8_t v138 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v33, vclsq_s16(v137)), (int8x16_t)vceqzq_s16(v137));
    int16x8_t v139 = vpmaxq_s16(v138, v138);
    int8x16_t v140 = (int8x16_t)vmaxq_s16(vmaxq_s16(v106, v117), vmaxq_s16(v128, v139));
    int16x8_t v141 = vclzq_s16(vsubq_s16((int16x8_t)v135, (int16x8_t)v136));
    int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v33, v141);
    int8x16_t v143 = (int8x16_t)vcgtq_s16((int16x8_t)v140, (int16x8_t)v142);
    int8x16_t v144 = vbslq_s8(v143, v142, v140);
    v142.i64[0] = 0x18001800180018;
    v142.i64[1] = 0x18001800180018;
    int8x16_t v145 = vbslq_s8(v143, v142, v33);
    int16x8_t v146 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v106), (int16x8_t)v75), (int16x8_t)0);
    int16x8_t v147 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v117), (int16x8_t)v75), (int16x8_t)0);
    int16x8_t v148 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v128), (int16x8_t)v75), (int16x8_t)0);
    int8x16_t v149 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v144, v139), (int16x8_t)v75), (int16x8_t)0);
    int8x16_t v150 = (int8x16_t)vsubq_s16((int16x8_t)v144, v146);
    int8x16_t v151 = (int8x16_t)vsubq_s16((int16x8_t)v144, v147);
    int8x16_t v152 = (int8x16_t)vsubq_s16((int16x8_t)v144, v148);
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v144, (int16x8_t)v149);
    int8x16_t v154 = (int8x16_t)vceqq_s16(vaddq_s16((int16x8_t)v149, v148), vnegq_s16(vaddq_s16(v146, v147)));
    v149.i64[0] = 0x4000400040004;
    v149.i64[1] = 0x4000400040004;
    int8x16_t v155 = vbicq_s8(v149, v154);
    v149.i64[0] = 0x7000700070007;
    v149.i64[1] = 0x7000700070007;
    int8x16_t v156 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v71, v72), (int16x8_t)v88, (int16x8_t)v149), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v90, (int16x8_t)v89), (int16x8_t)v91), 3uLL)), vaddq_s16((int16x8_t)v81, (int16x8_t)v81)), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbicq_s8(v144, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v145 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))),
                                                       (int16x8_t)v150,
                                                       (int16x8_t)v149),
                                                     vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v152, (int16x8_t)v151), (int16x8_t)v153), 3uLL)), vaddq_s16((int16x8_t)v155, (int16x8_t)v155))), 0);
    if (vaddvq_s16((int16x8_t)v156))
    {
      int8x16_t v421 = vbslq_s8(v156, v398, v421);
      int8x16_t v423 = vbslq_s8(v156, v92, v423);
      int8x16_t v157 = vbslq_s8(v156, v94, v17);
      v158.i64[0] = 0x3000300030003;
      v158.i64[1] = 0x3000300030003;
      int8x16_t v159 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v144), v158), v145), v155);
      v160.i64[0] = 0xF000F000F000FLL;
      v160.i64[1] = 0xF000F000F000FLL;
      v161.i64[0] = -1;
      v161.i64[1] = -1;
      int8x16_t v425 = vbslq_s8(v156, v93, v425);
      int16x8_t v426 = (int16x8_t)v157;
      int8x16_t v427 = vbslq_s8(v156, v402, v427);
      int8x16_t v428 = vbslq_s8(v156, v401, v414);
      int8x16_t v429 = vbslq_s8(v156, v400, v429);
      int8x16_t v430 = vbslq_s8(v156, v399, v412);
      int8x16_t v433 = vbslq_s8(v156, v150, v88);
      int8x16_t v434 = vbslq_s8(v156, v151, v89);
      int8x16_t v435 = vbslq_s8(v156, v152, v90);
      int8x16_t v436 = vbslq_s8(v156, v153, v91);
      int8x16_t v439 = vbslq_s8(v156, v135, v410);
      int8x16_t v440 = vbslq_s8(v156, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v161, vsubq_s16(v160, v141)), (int16x8_t)v136), v143), v406);
      int8x16_t v437 = vbslq_s8(v156, v144, v73);
      int8x16_t v438 = vbslq_s8(v156, v136, v62);
      int8x16_t v431 = vbslq_s8(v156, (int8x16_t)vsubq_s16((int16x8_t)v431, (int16x8_t)vqtbl1q_s8(v431, (int8x16_t)xmmword_242EA76C0)), v431);
      int8x16_t v432 = vbslq_s8(v156, v159, v408);
    }
    if (v86)
    {
      int16x8_t v163 = (int16x8_t)v434;
      int16x8_t v162 = (int16x8_t)v435;
      int16x8_t v165 = (int16x8_t)v436;
      int8x16_t v164 = v437;
      int8x16_t v166 = v440;
      int16x8_t v168 = (int16x8_t)v421;
      int16x8_t v167 = (int16x8_t)v423;
      int16x8_t v170 = (int16x8_t)v425;
      int16x8_t v169 = v426;
      int16x8_t v172 = (int16x8_t)v427;
      int16x8_t v171 = (int16x8_t)v428;
      int16x8_t v174 = (int16x8_t)v429;
      int16x8_t v173 = (int16x8_t)v430;
      int8x16_t v176 = v432;
      int16x8_t v175 = (int16x8_t)v433;
    }
    else
    {
      int8x16_t v189 = (int8x16_t)vsubq_s16(v7, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v7.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v179 = vsubq_s16((int16x8_t)v8, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v7.i8, (int8x16_t)xmmword_242EA7620));
      v441.val[0] = (int8x16_t)v420;
      v441.val[1] = (int8x16_t)v9;
      v441.val[1].i32[3] = v8.i32[3];
      int16x8_t v180 = vsubq_s16(v420, (int16x8_t)vqtbl2q_s8(v441, (int8x16_t)xmmword_242EA7590));
      int16x8_t v181 = vsubq_s16(v9, (int16x8_t)vqtbl2q_s8(v441, (int8x16_t)xmmword_242EA7630));
      int16x8_t v182 = v11;
      v441.val[0] = (int8x16_t)v416;
      v441.val[0].i32[3] = v8.i32[3];
      int16x8_t v183 = vsubq_s16(v11, (int16x8_t)vqtbl2q_s8(v441, (int8x16_t)xmmword_242EA7640));
      int16x8_t v184 = vsubq_s16(v416, (int16x8_t)vqtbl2q_s8(v441, (int8x16_t)xmmword_242EA7570));
      int16x8_t v185 = v418;
      v441.val[0] = (int8x16_t)v417;
      v441.val[0].i32[3] = v8.i32[3];
      int16x8_t v186 = vsubq_s16(v418, (int16x8_t)vqtbl2q_s8(v441, (int8x16_t)xmmword_242EA7650));
      int16x8_t v187 = vsubq_s16(v417, (int16x8_t)vqtbl2q_s8(v441, (int8x16_t)xmmword_242EA7570));
      int8x16_t v188 = (int8x16_t)v179;
      v188.i32[3] = v189.i32[0];
      v189.i32[0] = v179.i32[3];
      int16x8_t v190 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v189, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v191 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v189, (int16x8_t)v188), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v192 = vpmaxq_s16(v190, v190);
      int16x8_t v193 = vpminq_s16(v191, v191);
      int16x8_t v194 = vpmaxq_s16(v192, v192);
      int16x8_t v195 = vpminq_s16(v193, v193);
      v196.i64[0] = 0x8000800080008000;
      v196.i64[1] = 0x8000800080008000;
      int16x8_t v197 = vmaxq_s16(v194, v196);
      v198.i64[0] = 0x8000800080008000;
      v198.i64[1] = 0x8000800080008000;
      int8x16_t v199 = (int8x16_t)vzip1q_s16(v194, v195);
      int8x16_t v200 = (int8x16_t)vceqzq_s16((int16x8_t)v199);
      v441.val[0] = (int8x16_t)vclsq_s16((int16x8_t)v199);
      v199.i64[0] = 0x10001000100010;
      v199.i64[1] = 0x10001000100010;
      int16x8_t v201 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v199, (int16x8_t)v441.val[0]), v200);
      int8x16_t v202 = (int8x16_t)vpmaxq_s16(v201, v201);
      v441.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16(v180, v181), (int8x16_t)xmmword_242EA76D0);
      v441.val[1] = vqtbl1q_s8((int8x16_t)vminq_s16(v180, v181), (int8x16_t)xmmword_242EA76D0);
      v441.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v441.val[0], (int16x8_t)v441.val[0]);
      v441.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v441.val[1], (int16x8_t)v441.val[1]);
      v441.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v441.val[0], (int16x8_t)v441.val[0]);
      v441.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v441.val[1], (int16x8_t)v441.val[1]);
      int16x8_t v203 = vmaxq_s16(v197, (int16x8_t)v441.val[0]);
      int16x8_t v204 = vminq_s16(vminq_s16(v195, v198), (int16x8_t)v441.val[1]);
      v441.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v441.val[0], (int16x8_t)v441.val[1]);
      v441.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v199, vclsq_s16((int16x8_t)v441.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v441.val[0]));
      v441.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v441.val[0], (int16x8_t)v441.val[0]);
      v441.val[1] = vqtbl1q_s8((int8x16_t)vmaxq_s16(v183, v184), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v205 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v183, v184), (int8x16_t)xmmword_242EA76D0);
      v441.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v441.val[1], (int16x8_t)v441.val[1]);
      int16x8_t v206 = vpminq_s16(v205, v205);
      v441.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v441.val[1], (int16x8_t)v441.val[1]);
      int16x8_t v207 = vpminq_s16(v206, v206);
      int16x8_t v208 = vmaxq_s16(v203, (int16x8_t)v441.val[1]);
      int16x8_t v209 = vminq_s16(v204, v207);
      v441.val[1] = (int8x16_t)vzip1q_s16((int16x8_t)v441.val[1], v207);
      v441.val[1] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v199, vclsq_s16((int16x8_t)v441.val[1])), (int8x16_t)vceqzq_s16((int16x8_t)v441.val[1]));
      v441.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v441.val[1], (int16x8_t)v441.val[1]);
      int16x8_t v210 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v186, v187), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v211 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v186, v187), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v212 = vpmaxq_s16(v210, v210);
      int16x8_t v213 = vpminq_s16(v211, v211);
      int16x8_t v214 = vpmaxq_s16(v212, v212);
      int16x8_t v215 = vpminq_s16(v213, v213);
      int16x8_t v216 = vmaxq_s16(v208, v214);
      int16x8_t v217 = vminq_s16(v209, v215);
      int16x8_t v218 = vzip1q_s16(v214, v215);
      int16x8_t v219 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v199, vclsq_s16(v218)), (int8x16_t)vceqzq_s16(v218));
      int8x16_t v220 = (int8x16_t)vpmaxq_s16(v219, v219);
      int8x16_t v221 = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v202, (int16x8_t)v441.val[0]), vmaxq_s16((int16x8_t)v441.val[1], (int16x8_t)v220));
      int8x16_t v413 = (int8x16_t)v217;
      int8x16_t v415 = (int8x16_t)v216;
      int16x8_t v222 = vclzq_s16(vsubq_s16(v216, v217));
      int8x16_t v223 = (int8x16_t)vsubq_s16((int16x8_t)v199, v222);
      int8x16_t v224 = (int8x16_t)vcgtq_s16((int16x8_t)v221, (int16x8_t)v223);
      int8x16_t v225 = vbslq_s8(v224, v223, v221);
      int16x8_t v226 = vsubq_s16((int16x8_t)v225, (int16x8_t)v202);
      v202.i64[0] = 0x3000300030003;
      v202.i64[1] = 0x3000300030003;
      int16x8_t v227 = vmaxq_s16(vminq_s16(v226, (int16x8_t)v202), (int16x8_t)0);
      v441.val[0] = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v225, (int16x8_t)v441.val[0]), (int16x8_t)v202), (int16x8_t)0);
      v441.val[1] = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v225, (int16x8_t)v441.val[1]), (int16x8_t)v202), (int16x8_t)0);
      int16x8_t v228 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v225, (int16x8_t)v220), (int16x8_t)v202), (int16x8_t)0);
      int16x8_t v229 = vsubq_s16((int16x8_t)v225, v227);
      v220.i64[0] = 0x4000400040004;
      v220.i64[1] = 0x4000400040004;
      int8x16_t v230 = vbicq_s8(v220, (int8x16_t)vceqq_s16(vaddq_s16(v228, (int16x8_t)v441.val[1]), vnegq_s16(vaddq_s16(v227, (int16x8_t)v441.val[0]))));
      v227.i64[0] = 0x7000700070007;
      v227.i64[1] = 0x7000700070007;
      int8x16_t v409 = (int8x16_t)vsubq_s16((int16x8_t)v225, (int16x8_t)v441.val[1]);
      int8x16_t v411 = (int8x16_t)vsubq_s16((int16x8_t)v225, v228);
      int8x16_t v405 = (int8x16_t)vsubq_s16((int16x8_t)v225, (int16x8_t)v441.val[0]);
      int8x16_t v407 = (int8x16_t)v229;
      int16x8_t v231 = vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v223, v224), v229, v227), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v409, (int16x8_t)v405), (int16x8_t)v411), 3uLL)), vaddq_s16((int16x8_t)v230, (int16x8_t)v230));
      v220.i64[0] = 0x8000800080008;
      v220.i64[1] = 0x8000800080008;
      int8x16_t v176 = v432;
      int16x8_t v175 = (int16x8_t)v433;
      int16x8_t v165 = (int16x8_t)v436;
      int8x16_t v164 = v437;
      v232.i64[0] = 0x2000200020002;
      v232.i64[1] = 0x2000200020002;
      int16x8_t v163 = (int16x8_t)v434;
      int16x8_t v162 = (int16x8_t)v435;
      int8x16_t v233 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v437, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v432, v220))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v176, (int16x8_t)v176), v220)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v432, v202), (int16x8_t)v232), v199)), (int16x8_t)v433,
                                                       v227),
                                                     vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v435, (int16x8_t)v434), (int16x8_t)v436), 3uLL)), v231), 0);
      int8x16_t v166 = v440;
      int16x8_t v168 = (int16x8_t)v421;
      int16x8_t v167 = (int16x8_t)v423;
      int16x8_t v170 = (int16x8_t)v425;
      int16x8_t v169 = v426;
      int16x8_t v172 = (int16x8_t)v427;
      int16x8_t v171 = (int16x8_t)v428;
      int16x8_t v174 = (int16x8_t)v429;
      int16x8_t v173 = (int16x8_t)v430;
      if (vaddvq_s16((int16x8_t)v233))
      {
        int8x16_t v403 = (int8x16_t)v187;
        int8x16_t v404 = (int8x16_t)v180;
        int8x16_t v234 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v225), v232);
        v235.i64[0] = 0x9000900090009;
        v235.i64[1] = 0x9000900090009;
        int8x16_t v236 = (int8x16_t)v186;
        int8x16_t v237 = (int8x16_t)v184;
        int8x16_t v238 = (int8x16_t)v183;
        int8x16_t v239 = (int8x16_t)v181;
        v240.i64[0] = -1;
        v240.i64[1] = -1;
        int8x16_t v241 = vorrq_s8(vorrq_s8(v234, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v224, v235), (int16x8_t)vmvnq_s8(v224))), v230);
        v242.i64[0] = 0xF000F000F000FLL;
        v242.i64[1] = 0xF000F000F000FLL;
        int16x8_t v168 = (int16x8_t)vbslq_s8(v233, v189, v421);
        int16x8_t v167 = (int16x8_t)vbslq_s8(v233, v188, v423);
        int16x8_t v170 = (int16x8_t)vbslq_s8(v233, v404, v425);
        int16x8_t v169 = (int16x8_t)vbslq_s8(v233, v239, (int8x16_t)v426);
        int16x8_t v172 = (int16x8_t)vbslq_s8(v233, v238, v427);
        int16x8_t v171 = (int16x8_t)vbslq_s8(v233, v237, v428);
        int16x8_t v174 = (int16x8_t)vbslq_s8(v233, v236, v429);
        int16x8_t v173 = (int16x8_t)vbslq_s8(v233, v403, v430);
        int16x8_t v175 = (int16x8_t)vbslq_s8(v233, v407, v433);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v233, v405, v434);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v233, v409, v435);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v233, v411, v436);
        int8x16_t v166 = vbslq_s8(v233, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v240, vsubq_s16(v242, v222)), (int16x8_t)v413), v224), v440);
        int8x16_t v164 = vbslq_s8(v233, v225, v437);
        int8x16_t v176 = vbslq_s8(v233, v241, v432);
        int8x16_t v431 = vbslq_s8(v233, vextq_s8(v8, v8, 0xCuLL), v431);
        int8x16_t v432 = v176;
        int8x16_t v438 = vbslq_s8(v233, v413, v438);
        int8x16_t v439 = vbslq_s8(v233, v415, v439);
        int8x16_t v433 = (int8x16_t)v175;
        int8x16_t v434 = (int8x16_t)v163;
        int8x16_t v435 = (int8x16_t)v162;
        int8x16_t v436 = (int8x16_t)v165;
        int8x16_t v440 = v166;
        int8x16_t v437 = v164;
      }
    }
    int16x8_t v243 = (int16x8_t)vandq_s8(v166, (int8x16_t)vceqq_s16((int16x8_t)v164, v175));
    int8x16_t v422 = (int8x16_t)vaddq_s16(v243, v168);
    int8x16_t v424 = (int8x16_t)vaddq_s16(v167, v243);
    int16x8_t v244 = (int16x8_t)vandq_s8(v166, (int8x16_t)vceqq_s16((int16x8_t)v164, v163));
    int8x16_t v425 = (int8x16_t)vaddq_s16(v170, v244);
    int16x8_t v426 = vaddq_s16(v169, v244);
    int16x8_t v245 = (int16x8_t)vandq_s8(v166, (int8x16_t)vceqq_s16((int16x8_t)v164, v162));
    int8x16_t v427 = (int8x16_t)vaddq_s16(v172, v245);
    int8x16_t v428 = (int8x16_t)vaddq_s16(v171, v245);
    int8x16_t v246 = vandq_s8(v166, (int8x16_t)vceqq_s16((int16x8_t)v164, v165));
    int8x16_t v429 = (int8x16_t)vaddq_s16(v174, (int16x8_t)v246);
    int8x16_t v430 = (int8x16_t)vaddq_s16(v173, (int16x8_t)v246);
    v246.i64[0] = 0x8000800080008;
    v246.i64[1] = 0x8000800080008;
    v247.i64[0] = 0x3000300030003;
    v247.i64[1] = 0x3000300030003;
    v248.i64[0] = 0x2000200020002;
    v248.i64[1] = 0x2000200020002;
    int8x16_t v249 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v176, v247), v248);
    v248.i64[0] = 0x10001000100010;
    v248.i64[1] = 0x10001000100010;
    int16x8_t v250 = (int16x8_t)vandq_s8(v249, (int8x16_t)v248);
    v248.i64[0] = 0x7000700070007;
    v248.i64[1] = 0x7000700070007;
    int16x8_t v251 = vaddq_s16(vmlaq_s16(vshlq_n_s16(vaddq_s16(v162, vaddq_s16(v163, v165)), 3uLL), v175, v248), vaddq_s16(vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v176, (int16x8_t)v176), v246), (int16x8_t)vbicq_s8(v164, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v176, v246)))), v250));
    if ((unint64_t)(vpaddq_s16(v251, v251).i16[0] + 57) > 0x3FF)
    {
      *a1 = v7;
      a1[1] = (int16x8_t)v8;
      a1[2] = v420;
      a1[3] = v9;
      a1[4] = v419;
      a1[5] = v416;
      int8x16_t v255 = a1 + 6;
      char v177 = 127;
      unint64_t result = 128;
      *int8x16_t v255 = v418;
      v255[1] = v417;
    }
    else
    {
      int8x16_t v252 = (void *)((unint64_t)a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v253 = 8 * (a1 & 7);
      if (v253) {
        uint64_t v254 = *v252 & ~(-1 << v253);
      }
      else {
        uint64_t v254 = 0;
      }
      *a2 = 0;
      v256.i64[0] = v164.u16[1];
      v256.i64[1] = v164.u16[0];
      int64x2_t v257 = vshrq_n_s64(vshlq_n_s64(v256, 0x30uLL), 0x30uLL);
      int8x16_t v258 = vandq_s8(vbicq_s8((int8x16_t)vaddq_s64((int64x2_t)vshlq_u64((uint64x2_t)v257, (uint64x2_t)xmmword_242EA76E0), (int64x2_t)xmmword_242EA76F0), (int8x16_t)vceqzq_s64(v257)), (int8x16_t)xmmword_242EA76F0);
      unint64_t v259 = vorrq_s8(v258, (int8x16_t)vdupq_laneq_s64((int64x2_t)v258, 1)).u64[0] | v176.i8[0] & 0x1F | (32 * (v176.i8[2] & 0x1Fu));
      unint64_t v260 = v431.u32[0];
      unint64_t v261 = v254 | (v259 << v253);
      if (v253 >= 0x2E)
      {
        *int8x16_t v252 = v261;
        unint64_t v261 = v259 >> (-8 * (a1 & 7u));
      }
      unint64_t v262 = (v253 + 18) & 0x3A;
      unint64_t v263 = v261 | (v260 << v262);
      if (v262 >= 0x20)
      {
        *(void *)((char *)v252 + (((v253 + 18) >> 3) & 8)) = v263;
        unint64_t v263 = v260 >> -(char)v262;
      }
      unint64_t v264 = v253 + 50;
      int8x16_t v265 = (int8x16_t)vsubq_s16((int16x8_t)v437, (int16x8_t)v433);
      int8x16_t v266 = (int8x16_t)vsubq_s16((int16x8_t)v437, (int16x8_t)v434);
      int8x16_t v267 = (int8x16_t)vsubq_s16((int16x8_t)v437, (int16x8_t)v435);
      int8x16_t v268 = (int8x16_t)vsubq_s16((int16x8_t)v437, (int16x8_t)v436);
      *(uint8x8_t *)v265.i8 = vqmovn_u16((uint16x8_t)v265);
      *(uint8x8_t *)v266.i8 = vqmovn_u16((uint16x8_t)v266);
      *(uint8x8_t *)v267.i8 = vqmovn_u16((uint16x8_t)v267);
      *(uint8x8_t *)v268.i8 = vqmovn_u16((uint16x8_t)v268);
      v268.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v265, v266), (int16x8_t)vzip1q_s8(v267, v268)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v265, v266), (int16x8_t)vtrn2q_s8(v267, v268))).u64[0];
      v266.i64[0] = 0x202020202020202;
      v266.i64[1] = 0x202020202020202;
      int8x16_t v269 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v432.i8, (int8x8_t)0x4000400040004)))), v266);
      v266.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v266.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v267.i64[0] = -1;
      v267.i64[1] = -1;
      uint8x16_t v270 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v267, (uint8x16_t)vorrq_s8(v269, v266)), (int8x16_t)v268.u64[0]);
      int16x8_t v271 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v269.i8);
      uint16x8_t v272 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v270.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v271)), (int16x8_t)vmovl_high_u8(v270));
      uint16x8_t v273 = (uint16x8_t)vpaddq_s16(v271, (int16x8_t)vmovl_high_u8((uint8x16_t)v269));
      int32x4_t v274 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v273.i8);
      int32x4_t v275 = (int32x4_t)vmovl_high_u16(v273);
      int32x4_t v276 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v272.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v274)), (int32x4_t)vshlq_u32(vmovl_high_u16(v272), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v275)));
      int32x4_t v277 = vpaddq_s32(v274, v275);
      v278.i64[0] = v276.u32[0];
      v278.i64[1] = v276.u32[1];
      uint64x2_t v279 = (uint64x2_t)v278;
      v278.i64[0] = v276.u32[2];
      v278.i64[1] = v276.u32[3];
      uint64x2_t v280 = (uint64x2_t)v278;
      v278.i64[0] = v277.u32[0];
      v278.i64[1] = v277.u32[1];
      int64x2_t v281 = v278;
      v278.i64[0] = v277.u32[2];
      v278.i64[1] = v277.u32[3];
      int64x2_t v282 = vpaddq_s64((int64x2_t)vshlq_u64(v279, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)), (int64x2_t)vshlq_u64(v280, (uint64x2_t)vzip1q_s64((int64x2_t)0, v278)));
      int64x2_t v283 = vpaddq_s64(v281, v278);
      uint64_t v284 = (v253 + 50) & 0x3A;
      unint64_t v285 = (v282.i64[0] << v284) | v263;
      if ((unint64_t)(v283.i64[0] + v284) >= 0x40)
      {
        *(void *)((char *)v252 + ((v264 >> 3) & 8)) = v285;
        unint64_t v285 = (unint64_t)v282.i64[0] >> -(char)v284;
      }
      unint64_t v286 = v283.i64[0] + v264;
      unint64_t v287 = v285 | (v282.i64[1] << v286);
      if ((v286 & 0x3F) + v283.i64[1] >= 0x40)
      {
        *(void *)((char *)v252 + ((v286 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v287;
        unint64_t v287 = (unint64_t)v282.i64[1] >> -(v286 & 0x3F);
        if ((v286 & 0x3F) == 0) {
          unint64_t v287 = 0;
        }
      }
      unint64_t v288 = v286 + v283.i64[1];
      v289.i64[0] = 0x8000800080008;
      v289.i64[1] = 0x8000800080008;
      v290.i64[0] = -1;
      v290.i64[1] = -1;
      int16x8_t v291 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v432, v289), (int8x16_t)0, 0xCuLL), v437);
      v292.i64[0] = 0xF000F000F000FLL;
      v292.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v293 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v290, (uint16x8_t)vaddq_s16(v291, v292)), v440);
      int32x4_t v294 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v291.i8);
      int32x4_t v295 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v293.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v294)), (int32x4_t)vmovl_high_u16(v293));
      int32x4_t v296 = vpaddq_s32(v294, (int32x4_t)vmovl_high_u16((uint16x8_t)v291));
      v297.i64[0] = v295.u32[0];
      v297.i64[1] = v295.u32[1];
      uint64x2_t v298 = (uint64x2_t)v297;
      v297.i64[0] = v295.u32[2];
      v297.i64[1] = v295.u32[3];
      uint64x2_t v299 = (uint64x2_t)v297;
      v297.i64[0] = v296.u32[0];
      v297.i64[1] = v296.u32[1];
      int64x2_t v300 = v297;
      v297.i64[0] = v296.u32[2];
      v297.i64[1] = v296.u32[3];
      int64x2_t v301 = vpaddq_s64((int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v300)), (int64x2_t)vshlq_u64(v299, (uint64x2_t)vzip1q_s64((int64x2_t)0, v297)));
      int64x2_t v302 = vpaddq_s64(v300, v297);
      unint64_t v303 = (v301.i64[0] << v288) | v287;
      if (v302.i64[0] + (v288 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v252 + ((v288 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v303;
        unint64_t v303 = (unint64_t)v301.i64[0] >> -(v288 & 0x3F);
        if ((v288 & 0x3F) == 0) {
          unint64_t v303 = 0;
        }
      }
      unint64_t v304 = v302.i64[0] + v288;
      unint64_t v305 = v303 | (v301.i64[1] << v304);
      if ((v304 & 0x3F) + v302.i64[1] >= 0x40)
      {
        *(void *)((char *)v252 + ((v304 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v305;
        unint64_t v305 = (unint64_t)v301.i64[1] >> -(v304 & 0x3F);
        if ((v304 & 0x3F) == 0) {
          unint64_t v305 = 0;
        }
      }
      unint64_t v306 = v304 + v302.i64[1];
      int16x8_t v307 = (int16x8_t)vextq_s8((int8x16_t)0, v433, 0xCuLL);
      v308.i64[0] = 0xF000F000F000FLL;
      v308.i64[1] = 0xF000F000F000FLL;
      v309.i64[0] = -1;
      v309.i64[1] = -1;
      uint16x8_t v310 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v309, (uint16x8_t)vaddq_s16(v307, v308)), v422);
      int32x4_t v311 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v307.i8);
      int32x4_t v312 = (int32x4_t)vmovl_high_u16((uint16x8_t)v307);
      int32x4_t v313 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v310.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v311)), (int32x4_t)vshlq_u32(vmovl_high_u16(v310), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v312)));
      int32x4_t v314 = vpaddq_s32(v311, v312);
      v315.i64[0] = v313.u32[0];
      v315.i64[1] = v313.u32[1];
      uint64x2_t v316 = (uint64x2_t)v315;
      v315.i64[0] = v313.u32[2];
      v315.i64[1] = v313.u32[3];
      uint64x2_t v317 = (uint64x2_t)v315;
      v315.i64[0] = v314.u32[0];
      v315.i64[1] = v314.u32[1];
      int64x2_t v318 = v315;
      v315.i64[0] = v314.u32[2];
      v315.i64[1] = v314.u32[3];
      int64x2_t v319 = vpaddq_s64((int64x2_t)vshlq_u64(v316, (uint64x2_t)vzip1q_s64((int64x2_t)0, v318)), (int64x2_t)vshlq_u64(v317, (uint64x2_t)vzip1q_s64((int64x2_t)0, v315)));
      int64x2_t v320 = vpaddq_s64(v318, v315);
      unint64_t v321 = (v319.i64[0] << v306) | v305;
      if (v320.i64[0] + (v306 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v252 + ((v306 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v321;
        unint64_t v321 = (unint64_t)v319.i64[0] >> -(v306 & 0x3F);
        if ((v306 & 0x3F) == 0) {
          unint64_t v321 = 0;
        }
      }
      unint64_t v322 = v320.i64[0] + v306;
      unint64_t v323 = v321 | (v319.i64[1] << v322);
      if ((v322 & 0x3F) + v320.i64[1] >= 0x40)
      {
        *(void *)((char *)v252 + ((v322 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        unint64_t v323 = (unint64_t)v319.i64[1] >> -(v322 & 0x3F);
        if ((v322 & 0x3F) == 0) {
          unint64_t v323 = 0;
        }
      }
      unint64_t v324 = v322 + v320.i64[1];
      v325.i64[0] = 0xF000F000F000FLL;
      v325.i64[1] = 0xF000F000F000FLL;
      v326.i64[0] = -1;
      v326.i64[1] = -1;
      uint16x8_t v327 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v326, (uint16x8_t)vaddq_s16((int16x8_t)v433, v325)), v424);
      int32x4_t v328 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v433.i8);
      int32x4_t v329 = (int32x4_t)vmovl_high_u16((uint16x8_t)v433);
      int32x4_t v330 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v327.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v328)), (int32x4_t)vshlq_u32(vmovl_high_u16(v327), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v329)));
      int32x4_t v331 = vpaddq_s32(v328, v329);
      v332.i64[0] = v330.u32[0];
      v332.i64[1] = v330.u32[1];
      uint64x2_t v333 = (uint64x2_t)v332;
      v332.i64[0] = v330.u32[2];
      v332.i64[1] = v330.u32[3];
      uint64x2_t v334 = (uint64x2_t)v332;
      v332.i64[0] = v331.u32[0];
      v332.i64[1] = v331.u32[1];
      int64x2_t v335 = v332;
      v332.i64[0] = v331.u32[2];
      v332.i64[1] = v331.u32[3];
      int64x2_t v336 = vpaddq_s64((int64x2_t)vshlq_u64(v333, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)), (int64x2_t)vshlq_u64(v334, (uint64x2_t)vzip1q_s64((int64x2_t)0, v332)));
      int64x2_t v337 = vpaddq_s64(v335, v332);
      unint64_t v338 = (v336.i64[0] << v324) | v323;
      if (v337.i64[0] + (v324 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v252 + ((v324 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v338;
        if ((v324 & 0x3F) != 0) {
          unint64_t v338 = (unint64_t)v336.i64[0] >> -(v324 & 0x3F);
        }
        else {
          unint64_t v338 = 0;
        }
      }
      uint64_t v339 = v337.i64[1];
      unint64_t v340 = v337.i64[0] + v324;
      uint64_t v341 = (v337.i64[0] + v324) & 0x3F;
      unint64_t v342 = v338 | (v336.i64[1] << v340);
      if ((unint64_t)(v341 + v337.i64[1]) >= 0x40)
      {
        *(void *)((char *)v252 + ((v340 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
        unint64_t v342 = (unint64_t)v336.i64[1] >> -(char)v341;
        if (!v341) {
          unint64_t v342 = 0;
        }
      }
      uint64_t v343 = 0;
      v344.i64[0] = 0xF000F000F000FLL;
      v344.i64[1] = 0xF000F000F000FLL;
      v345.i64[0] = -1;
      v345.i64[1] = -1;
      unint64_t v346 = v340 + v339;
      char v347 = 1;
      do
      {
        char v348 = v347;
        uint16x8_t v349 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v345, (uint16x8_t)vaddq_s16((int16x8_t)v434, v344)), *(&v425 + v343));
        int32x4_t v350 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v434.i8);
        int32x4_t v351 = (int32x4_t)vmovl_high_u16((uint16x8_t)v434);
        int32x4_t v352 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v349.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v350)), (int32x4_t)vshlq_u32(vmovl_high_u16(v349), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v351)));
        int32x4_t v353 = vpaddq_s32(v350, v351);
        v354.i64[0] = v352.u32[0];
        v354.i64[1] = v352.u32[1];
        uint64x2_t v355 = (uint64x2_t)v354;
        v354.i64[0] = v352.u32[2];
        v354.i64[1] = v352.u32[3];
        uint64x2_t v356 = (uint64x2_t)v354;
        v354.i64[0] = v353.u32[0];
        v354.i64[1] = v353.u32[1];
        int64x2_t v357 = v354;
        v354.i64[0] = v353.u32[2];
        v354.i64[1] = v353.u32[3];
        int64x2_t v358 = vpaddq_s64((int64x2_t)vshlq_u64(v355, (uint64x2_t)vzip1q_s64((int64x2_t)0, v357)), (int64x2_t)vshlq_u64(v356, (uint64x2_t)vzip1q_s64((int64x2_t)0, v354)));
        int64x2_t v359 = vpaddq_s64(v357, v354);
        unint64_t v360 = (v358.i64[0] << v346) | v342;
        if (v359.i64[0] + (v346 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v252 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v360;
          unint64_t v360 = (unint64_t)v358.i64[0] >> -(v346 & 0x3F);
          if ((v346 & 0x3F) == 0) {
            unint64_t v360 = 0;
          }
        }
        unint64_t v361 = v359.i64[0] + v346;
        unint64_t v342 = v360 | (v358.i64[1] << v361);
        if ((v361 & 0x3F) + v359.i64[1] >= 0x40)
        {
          *(void *)((char *)v252 + ((v361 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
          unint64_t v342 = (unint64_t)v358.i64[1] >> -(v361 & 0x3F);
          if ((v361 & 0x3F) == 0) {
            unint64_t v342 = 0;
          }
        }
        char v347 = 0;
        unint64_t v346 = v361 + v359.i64[1];
        uint64_t v343 = 1;
      }
      while ((v348 & 1) != 0);
      uint64_t v362 = 0;
      char v363 = 1;
      v364.i64[0] = 0xF000F000F000FLL;
      v364.i64[1] = 0xF000F000F000FLL;
      v365.i64[0] = -1;
      v365.i64[1] = -1;
      do
      {
        char v366 = v363;
        uint16x8_t v367 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v365, (uint16x8_t)vaddq_s16((int16x8_t)v435, v364)), *(&v427 + v362));
        int32x4_t v368 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v435.i8);
        int32x4_t v369 = (int32x4_t)vmovl_high_u16((uint16x8_t)v435);
        int32x4_t v370 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v367.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v368)), (int32x4_t)vshlq_u32(vmovl_high_u16(v367), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v369)));
        int32x4_t v371 = vpaddq_s32(v368, v369);
        v372.i64[0] = v370.u32[0];
        v372.i64[1] = v370.u32[1];
        uint64x2_t v373 = (uint64x2_t)v372;
        v372.i64[0] = v370.u32[2];
        v372.i64[1] = v370.u32[3];
        uint64x2_t v374 = (uint64x2_t)v372;
        v372.i64[0] = v371.u32[0];
        v372.i64[1] = v371.u32[1];
        int64x2_t v375 = v372;
        v372.i64[0] = v371.u32[2];
        v372.i64[1] = v371.u32[3];
        int64x2_t v376 = vpaddq_s64((int64x2_t)vshlq_u64(v373, (uint64x2_t)vzip1q_s64((int64x2_t)0, v375)), (int64x2_t)vshlq_u64(v374, (uint64x2_t)vzip1q_s64((int64x2_t)0, v372)));
        int64x2_t v377 = vpaddq_s64(v375, v372);
        unint64_t v378 = (v376.i64[0] << v346) | v342;
        if (v377.i64[0] + (v346 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v252 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v378;
          unint64_t v378 = (unint64_t)v376.i64[0] >> -(v346 & 0x3F);
          if ((v346 & 0x3F) == 0) {
            unint64_t v378 = 0;
          }
        }
        unint64_t v379 = v377.i64[0] + v346;
        unint64_t v342 = v378 | (v376.i64[1] << v379);
        if ((v379 & 0x3F) + v377.i64[1] >= 0x40)
        {
          *(void *)((char *)v252 + ((v379 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
          unint64_t v342 = (unint64_t)v376.i64[1] >> -(v379 & 0x3F);
          if ((v379 & 0x3F) == 0) {
            unint64_t v342 = 0;
          }
        }
        char v363 = 0;
        unint64_t v346 = v379 + v377.i64[1];
        uint64_t v362 = 1;
      }
      while ((v366 & 1) != 0);
      uint64_t v380 = 0;
      char v381 = 1;
      v382.i64[0] = 0xF000F000F000FLL;
      v382.i64[1] = 0xF000F000F000FLL;
      v383.i64[0] = -1;
      v383.i64[1] = -1;
      do
      {
        char v384 = v381;
        uint16x8_t v385 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v383, (uint16x8_t)vaddq_s16((int16x8_t)v436, v382)), *(&v429 + v380));
        int32x4_t v386 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v436.i8);
        int32x4_t v387 = (int32x4_t)vmovl_high_u16((uint16x8_t)v436);
        int32x4_t v388 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v385.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v386)), (int32x4_t)vshlq_u32(vmovl_high_u16(v385), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v387)));
        int32x4_t v389 = vpaddq_s32(v386, v387);
        v390.i64[0] = v388.u32[0];
        v390.i64[1] = v388.u32[1];
        uint64x2_t v391 = (uint64x2_t)v390;
        v390.i64[0] = v388.u32[2];
        v390.i64[1] = v388.u32[3];
        uint64x2_t v392 = (uint64x2_t)v390;
        v390.i64[0] = v389.u32[0];
        v390.i64[1] = v389.u32[1];
        int64x2_t v393 = v390;
        v390.i64[0] = v389.u32[2];
        v390.i64[1] = v389.u32[3];
        int64x2_t v394 = vpaddq_s64((int64x2_t)vshlq_u64(v391, (uint64x2_t)vzip1q_s64((int64x2_t)0, v393)), (int64x2_t)vshlq_u64(v392, (uint64x2_t)vzip1q_s64((int64x2_t)0, v390)));
        int64x2_t v395 = vpaddq_s64(v393, v390);
        unint64_t v396 = (v394.i64[0] << v346) | v342;
        if (v395.i64[0] + (v346 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v252 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v396;
          unint64_t v396 = (unint64_t)v394.i64[0] >> -(v346 & 0x3F);
          if ((v346 & 0x3F) == 0) {
            unint64_t v396 = 0;
          }
        }
        unint64_t v397 = v395.i64[0] + v346;
        unint64_t v342 = v396 | (v394.i64[1] << v397);
        if ((v397 & 0x3F) + v395.i64[1] >= 0x40)
        {
          *(void *)((char *)v252 + ((v397 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
          unint64_t v342 = (unint64_t)v394.i64[1] >> -(v397 & 0x3F);
          if ((v397 & 0x3F) == 0) {
            unint64_t v342 = 0;
          }
        }
        char v381 = 0;
        unint64_t v346 = v397 + v395.i64[1];
        uint64_t v380 = 1;
      }
      while ((v384 & 1) != 0);
      if ((v346 & 0x3F) != 0) {
        *(void *)((char *)v252 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v342;
      }
      unint64_t result = (v346 - v253 + 7) >> 3;
      char v177 = *a2 | (result - 1);
    }
  }
  else
  {
    a1->i32[0] = a3->i32[0];
    char v177 = 3;
    unint64_t result = 4;
  }
  *a2 = v177;
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(unint64_t result, uint64_t a2, int16x8_t *a3, char *a4, int a5, int a6)
{
  int16x8_t v9 = a3;
  int16x8_t v11 = (int16x8_t *)result;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 4) {
    unsigned int v13 = 4;
  }
  else {
    unsigned int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, (int16x8_t *)result, a2, v12, v13);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + result);
  }
  else
  {
    *a4 = 0;
  }
  int16x8_t v14 = a4 + 1;
  if (a5 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a5;
  }
  unsigned int v16 = v15 - 4;
  if (v16 >= 4) {
    int v17 = 4;
  }
  else {
    int v17 = v16;
  }
  if (v17) {
    BOOL v18 = v13 == 0;
  }
  else {
    BOOL v18 = 1;
  }
  if (v18)
  {
    *int16x8_t v14 = 0;
  }
  else
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v14, v11 + 2, a2, v17, v13);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + result);
  }
  uint64_t v19 = 4 * a2;
  int16x8_t v20 = a4 + 2;
  if (a6 <= 4) {
    int v21 = 4;
  }
  else {
    int v21 = a6;
  }
  unsigned int v22 = v21 - 4;
  if (v22 >= 4) {
    int v23 = 4;
  }
  else {
    int v23 = v22;
  }
  if (v12 && v23)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v20, (int16x8_t *)((char *)v11 + v19), a2, v12, v23);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + result);
    int16x8_t v24 = a4 + 3;
    if (!v17) {
      goto LABEL_36;
    }
  }
  else
  {
    *int16x8_t v20 = 0;
    int16x8_t v24 = a4 + 3;
    if (!v17) {
      goto LABEL_36;
    }
  }
  if (v23)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, (int16x8_t *)((char *)v11 + v19 + 32), a2, v17, v23);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + result);
    goto LABEL_37;
  }
LABEL_36:
  *int16x8_t v24 = 0;
LABEL_37:
  int16x8_t v25 = a4 + 4;
  if (a5 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a5;
  }
  unsigned int v27 = v26 - 8;
  if (v27 >= 4) {
    int v28 = 4;
  }
  else {
    int v28 = v27;
  }
  if (v28 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v25, v11 + 4, a2, v28, v13);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + result);
  }
  else
  {
    *int16x8_t v25 = 0;
  }
  int16x8_t v29 = a4 + 5;
  if (a5 <= 12) {
    int v30 = 12;
  }
  else {
    int v30 = a5;
  }
  unsigned int v31 = v30 - 12;
  if (v31 >= 4) {
    int v32 = 4;
  }
  else {
    int v32 = v31;
  }
  if (v32 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v29, v11 + 6, a2, v32, v13);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + result);
    int8x16_t v33 = a4 + 6;
    if (!v28) {
      goto LABEL_61;
    }
  }
  else
  {
    *int16x8_t v29 = 0;
    int8x16_t v33 = a4 + 6;
    if (!v28) {
      goto LABEL_61;
    }
  }
  if (v23)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, (int16x8_t *)((char *)v11 + v19 + 64), a2, v28, v23);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + result);
    int16x8_t v34 = a4 + 7;
    if (!v32) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
LABEL_61:
  char *v33 = 0;
  int16x8_t v34 = a4 + 7;
  if (!v32)
  {
LABEL_66:
    *int16x8_t v34 = 0;
    return result;
  }
LABEL_62:
  if (!v23) {
    goto LABEL_66;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,2u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v34, (int16x8_t *)((char *)v11 + v19 + 96), a2, v32, v23);
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(int16x8_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int32x4_t a5, int32x4_t a6)
{
  unint64_t v6 = a3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = 8 * (a3 & 7);
  unint64_t v8 = v7 + 18;
  uint64_t v9 = *(void *)(a3 & 0xFFFFFFFFFFFFFFF8) >> v7;
  if (v7 >= 0x2F) {
    v9 |= *(void *)(v6 + 8) << (-8 * (a3 & 7u));
  }
  a5.i32[0] = v9;
  a5.i32[1] = (unsigned __int16)v9 >> 5;
  *(int8x8_t *)a5.i8 = vand_s8(*(int8x8_t *)a5.i8, (int8x8_t)0x1F0000001FLL);
  *(int16x4_t *)a5.i8 = vmovn_s32(a5);
  a6.i32[0] = (unsigned __int16)v9 >> 10;
  a6.i32[1] = v9 >> 14;
  *(int32x2_t *)a6.i8 = vadd_s32((int32x2_t)vand_s8(*(int8x8_t *)a6.i8, (int8x8_t)0xF0000000FLL), (int32x2_t)0x100000001);
  *(int16x4_t *)a6.i8 = vmovn_s32(a6);
  unint64_t v10 = v7 + 50;
  unint64_t v11 = v8 >> 6;
  unint64_t v12 = v8 & 0x3A;
  uint64_t v13 = *(void *)(v6 + 8 * (v8 >> 6)) >> (v8 & 0x3A);
  if (v12 >= 0x21) {
    v13 |= *(void *)(v6 + 8 * v11 + 8) << -(char)v12;
  }
  int8x16_t v14 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a5.i8, 0);
  int8x16_t v15 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
  unint64_t v16 = (8 * (a3 & 7)) | 0x400;
  v17.i64[0] = 0x3000300030003;
  v17.i64[1] = 0x3000300030003;
  int16x8_t v18 = (int16x8_t)vandq_s8(v14, v17);
  int8x16_t v19 = vbicq_s8(v15, (int8x16_t)vceqq_s16(v18, (int16x8_t)v17));
  v17.i64[0] = 0x202020202020202;
  v17.i64[1] = 0x202020202020202;
  int8x16_t v20 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v14.i8, (int8x8_t)0x4000400040004)))), v17);
  if (vmaxvq_s8(v20) < 1)
  {
    int v30 = 0;
    v31.i64[0] = -1;
    v31.i64[1] = -1;
    int8x16_t v32 = v19;
    int8x16_t v33 = v19;
    int8x16_t v34 = v19;
    v35.i64[0] = -1;
    v35.i64[1] = -1;
    int8x16_t v36 = v19;
    v37.i64[0] = -1;
    v37.i64[1] = -1;
    v38.i64[0] = -1;
    v38.i64[1] = -1;
  }
  else
  {
    int8x16_t v21 = (int8x16_t)vmovl_u8((uint8x8_t)*(_OWORD *)&vpaddq_s8(v20, v20));
    int32x4_t v22 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v21, (int16x8_t)v21));
    unint64_t v23 = vpaddq_s32(v22, v22).u64[0];
    v24.i64[0] = v23;
    v24.i64[1] = HIDWORD(v23);
    int64x2_t v25 = v24;
    unint64_t v26 = vaddvq_s64(v24);
    unint64_t v27 = v26 + v10;
    if (v26 <= 0x80 && v16 >= v27)
    {
      unint64_t v39 = v10 & 0x3A;
      int64x2_t v40 = vaddq_s64(vzip1q_s64((int64x2_t)0, v25), vdupq_n_s64(v39));
      int16x8_t v41 = (int64x2_t *)(v6 + ((v10 >> 3) & 8));
      int32x4_t v29 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v41, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v40)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41->i64[0], 0), (uint64x2_t)vnegq_s64(v40)));
      if (v26 + v39 < 0x81)
      {
        int v30 = 0;
      }
      else
      {
        int v30 = 0;
        int32x4_t v29 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v41[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v40)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v41[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v40))), (int8x16_t)v29);
      }
      unint64_t v10 = v27;
    }
    else
    {
      int32x4_t v29 = 0uLL;
      int v30 = 1;
    }
    int32x2_t v42 = vzip1_s32(*(int32x2_t *)v22.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v22, (int8x16_t)v22, 8uLL));
    v43.i64[0] = v42.u32[0];
    v43.i64[1] = v42.u32[1];
    int32x4_t v44 = (int32x4_t)vshlq_u64((uint64x2_t)v29, (uint64x2_t)vnegq_s64(v43));
    *(int32x2_t *)v29.i8 = vmovn_s64((int64x2_t)v29);
    *(int32x2_t *)v44.i8 = vmovn_s64((int64x2_t)v44);
    int8x16_t v45 = (int8x16_t)vzip1q_s32(v29, v44);
    int16x8_t v46 = (int16x8_t)vshlq_u32((uint32x4_t)v45, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v21.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)))));
    *(int16x4_t *)v45.i8 = vmovn_s32((int32x4_t)v45);
    *(int16x4_t *)v46.i8 = vmovn_s32((int32x4_t)v46);
    int16x8_t v47 = vzip1q_s16((int16x8_t)v45, v46);
    v45.i64[0] = 0x101010101010101;
    v45.i64[1] = 0x101010101010101;
    *(int8x8_t *)v48.i8 = vand_s8(vzip1_s8(vmovn_s16(v47), vmovn_s16((int16x8_t)vshlq_u16((uint16x8_t)v47, (uint16x8_t)vnegq_s16((int16x8_t)vmovl_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)v20.i8, *(int8x8_t *)v14.i8)))))), vadd_s8((int8x8_t)*(_OWORD *)&vshlq_s8(v45, v20), (int8x8_t)-1));
    v48.i64[1] = v48.i64[0];
    *(int8x8_t *)v48.i8 = vqtbl1_s8(v48, (int8x8_t)0x703060205010400);
    *(int16x4_t *)v47.i8 = vdup_lane_s16(*(int16x4_t *)v48.i8, 0);
    *(int16x4_t *)v45.i8 = vdup_lane_s16(*(int16x4_t *)v48.i8, 1);
    int8x8_t v49 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v48.i8, 2);
    int8x8_t v50 = (int8x8_t)vdup_lane_s16(*(int16x4_t *)v48.i8, 3);
    int8x16_t v36 = (int8x16_t)vsubw_s8((int16x8_t)v19, *(int8x8_t *)v47.i8);
    int8x16_t v32 = (int8x16_t)vsubw_s8((int16x8_t)v19, *(int8x8_t *)v45.i8);
    int8x16_t v33 = (int8x16_t)vsubw_s8((int16x8_t)v19, v49);
    int8x16_t v34 = (int8x16_t)vsubw_s8((int16x8_t)v19, v50);
    int8x16_t v38 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v47.i8));
    int8x16_t v37 = (int8x16_t)vmovl_s8(vceqz_s8(*(int8x8_t *)v45.i8));
    int8x16_t v35 = (int8x16_t)vmovl_s8(vceqz_s8(v49));
    int8x16_t v31 = (int8x16_t)vmovl_s8(vceqz_s8(v50));
  }
  v51.i64[0] = 0x8000800080008;
  v51.i64[1] = 0x8000800080008;
  int32x4_t v52 = 0uLL;
  int8x16_t v53 = vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v14, v51), (int8x16_t)0, 0xCuLL), v19);
  int32x4_t v54 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v53, (int16x8_t)v53));
  unint64_t v55 = vpaddq_s32(v54, v54).u64[0];
  v56.i64[0] = v55;
  v56.i64[1] = HIDWORD(v55);
  int64x2_t v57 = v56;
  unint64_t v58 = vaddvq_s64(v56);
  unint64_t v59 = v58 + v10;
  if (v58 <= 0x80 && v16 >= v59)
  {
    unint64_t v61 = v10 & 0x3F;
    int64x2_t v62 = vaddq_s64(vzip1q_s64((int64x2_t)0, v57), vdupq_n_s64(v61));
    int16x8_t v63 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v52 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v63, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v62)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63->i64[0], 0), (uint64x2_t)vnegq_s64(v62)));
    if (v58 + v61 >= 0x81) {
      int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v63[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v62)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v63[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v62))), (int8x16_t)v52);
    }
    unint64_t v10 = v59;
  }
  else
  {
    int v30 = 1;
  }
  int v64 = v14.i8[0] & 3;
  if (v64 == 2)
  {
    BOOL v65 = v16 >= v10 + 8;
    if (v16 >= v10 + 8) {
      v10 += 8;
    }
    unint64_t v66 = v10 + 8;
    if (!v65 || v16 < v66) {
      int v30 = 1;
    }
    if (v16 >= v66) {
      v10 += 8;
    }
  }
  int32x4_t v68 = 0uLL;
  int8x16_t v69 = vextq_s8((int8x16_t)0, v36, 0xCuLL);
  int32x4_t v70 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v69, (int16x8_t)v69));
  unint64_t v71 = vpaddq_s32(v70, v70).u64[0];
  v72.i64[0] = v71;
  v72.i64[1] = HIDWORD(v71);
  int64x2_t v73 = v72;
  unint64_t v74 = vaddvq_s64(v72);
  unint64_t v75 = v74 + v10;
  if (v74 <= 0x80 && v16 >= v75)
  {
    unint64_t v78 = v10 & 0x3F;
    int64x2_t v79 = vaddq_s64(vzip1q_s64((int64x2_t)0, v73), vdupq_n_s64(v78));
    int8x16_t v80 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v77 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v80, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80->i64[0], 0), (uint64x2_t)vnegq_s64(v79)));
    if (v74 + v78 >= 0x81) {
      int32x4_t v77 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v80[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v79)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v80[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v79))), (int8x16_t)v77);
    }
    unint64_t v10 = v75;
  }
  else
  {
    int v30 = 1;
    int32x4_t v77 = 0uLL;
  }
  int32x4_t v81 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v36, (int16x8_t)v36));
  unint64_t v82 = vpaddq_s32(v81, v81).u64[0];
  v83.i64[0] = v82;
  v83.i64[1] = HIDWORD(v82);
  int64x2_t v84 = v83;
  unint64_t v85 = vaddvq_s64(v83);
  unint64_t v86 = v85 + v10;
  if (v85 <= 0x80 && v16 >= v86)
  {
    unint64_t v88 = v10 & 0x3F;
    int64x2_t v89 = vaddq_s64(vzip1q_s64((int64x2_t)0, v84), vdupq_n_s64(v88));
    int8x16_t v90 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v68 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v90, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90->i64[0], 0), (uint64x2_t)vnegq_s64(v89)));
    if (v85 + v88 >= 0x81) {
      int32x4_t v68 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v90[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v89)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v90[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v89))), (int8x16_t)v68);
    }
    unint64_t v10 = v86;
  }
  else
  {
    int v30 = 1;
  }
  int32x4_t v91 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v32, (int16x8_t)v32));
  unint64_t v92 = vpaddq_s32(v91, v91).u64[0];
  v93.i64[0] = v92;
  v93.i64[1] = HIDWORD(v92);
  int64x2_t v94 = v93;
  unint64_t v95 = vaddvq_s64(v93);
  unint64_t v96 = v95 + v10;
  int32x4_t v97 = 0uLL;
  if (v95 <= 0x80 && v16 >= v96)
  {
    unint64_t v100 = v10 & 0x3F;
    int64x2_t v101 = vaddq_s64(vzip1q_s64((int64x2_t)0, v94), vdupq_n_s64(v100));
    int16x8_t v102 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
    int32x4_t v99 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v102, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102->i64[0], 0), (uint64x2_t)vnegq_s64(v101)));
    if (v95 + v100 >= 0x81) {
      int32x4_t v99 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v102[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v101)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v102[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v101))), (int8x16_t)v99);
    }
    unint64_t v10 = v96;
    if (v95 > 0x80) {
      goto LABEL_63;
    }
  }
  else
  {
    int v30 = 1;
    int32x4_t v99 = 0uLL;
    if (v95 > 0x80) {
      goto LABEL_63;
    }
  }
  unint64_t v103 = v95 + v10;
  if (v16 < v95 + v10)
  {
LABEL_63:
    unint64_t v103 = v10;
    int v30 = 1;
    goto LABEL_64;
  }
  unint64_t v104 = v10 & 0x3F;
  int64x2_t v105 = vaddq_s64(vzip1q_s64((int64x2_t)0, v94), vdupq_n_s64(v104));
  int16x8_t v106 = (int64x2_t *)(v6 + 8 * (v10 >> 6));
  int32x4_t v97 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v106, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106->i64[0], 0), (uint64x2_t)vnegq_s64(v105)));
  if (v95 + v104 >= 0x81) {
    int32x4_t v97 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v106[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v105)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v106[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v105))), (int8x16_t)v97);
  }
LABEL_64:
  int32x4_t v107 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v33, (int16x8_t)v33));
  unint64_t v108 = vpaddq_s32(v107, v107).u64[0];
  v109.i64[0] = v108;
  v109.i64[1] = HIDWORD(v108);
  int64x2_t v110 = v109;
  unint64_t v111 = vaddvq_s64(v109);
  int32x4_t v112 = 0uLL;
  if (v111 > 0x80 || (unint64_t v113 = v111 + v103, v16 < v111 + v103))
  {
    unint64_t v113 = v103;
    int v30 = 1;
    int32x4_t v116 = 0uLL;
  }
  else
  {
    int64x2_t v114 = vaddq_s64(vzip1q_s64((int64x2_t)0, v110), vdupq_n_s64(v103 & 0x3F));
    int16x8_t v115 = (int64x2_t *)(v6 + 8 * (v103 >> 6));
    int32x4_t v116 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v115, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115->i64[0], 0), (uint64x2_t)vnegq_s64(v114)));
    if (v111 + (v103 & 0x3F) >= 0x81) {
      int32x4_t v116 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v115[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v114)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v115[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v114))), (int8x16_t)v116);
    }
  }
  if (v111 > 0x80 || (unint64_t v117 = v111 + v113, v16 < v111 + v113))
  {
    unint64_t v117 = v113;
    int v30 = 1;
  }
  else
  {
    int64x2_t v118 = vaddq_s64(vzip1q_s64((int64x2_t)0, v110), vdupq_n_s64(v113 & 0x3F));
    int16x8_t v119 = (int64x2_t *)(v6 + 8 * (v113 >> 6));
    int32x4_t v112 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v119, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119->i64[0], 0), (uint64x2_t)vnegq_s64(v118)));
    if (v111 + (v113 & 0x3F) >= 0x81) {
      int32x4_t v112 = (int32x4_t)vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v119[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v118)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v119[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v118))), (int8x16_t)v112);
    }
  }
  int32x4_t v120 = (int32x4_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vpaddq_s16((int16x8_t)v34, (int16x8_t)v34));
  unint64_t v121 = vpaddq_s32(v120, v120).u64[0];
  v122.i64[0] = v121;
  v122.i64[1] = HIDWORD(v121);
  int64x2_t v123 = v122;
  unint64_t v124 = vaddvq_s64(v122);
  if (v124 > 0x80 || (unint64_t v125 = v124 + v117, v16 < v124 + v117))
  {
    unint64_t v125 = v117;
    int v30 = 1;
    int8x16_t v129 = 0uLL;
  }
  else
  {
    unint64_t v126 = v117 & 0x3F;
    int64x2_t v127 = vaddq_s64(vzip1q_s64((int64x2_t)0, v123), vdupq_n_s64(v126));
    int16x8_t v128 = (int64x2_t *)(v6 + 8 * (v117 >> 6));
    int8x16_t v129 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v128, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128->i64[0], 0), (uint64x2_t)vnegq_s64(v127)));
    if (v124 + v126 >= 0x81) {
      int8x16_t v129 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v128[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v127)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v128[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v127))), v129);
    }
  }
  if (v124 > 0x80 || v16 < v124 + v125) {
    goto LABEL_87;
  }
  int64x2_t v130 = vaddq_s64(vzip1q_s64((int64x2_t)0, v123), vdupq_n_s64(v125 & 0x3F));
  int16x8_t v131 = (int64x2_t *)(v6 + 8 * (v125 >> 6));
  int8x16_t v132 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(*v131, 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x40uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131->i64[0], 0), (uint64x2_t)vnegq_s64(v130)));
  if (v124 + (v125 & 0x3F) >= 0x81) {
    int8x16_t v132 = vorrq_s8(vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_lane_s64(v131[1].i64[0], 0), (uint64x2_t)vsubq_s64(vdupq_n_s64(0x80uLL), v130)), (int8x16_t)vshlq_u64((uint64x2_t)vdupq_laneq_s64(v131[1], 1), (uint64x2_t)vsubq_s64(vdupq_n_s64(0xC0uLL), v130))), v132);
  }
  if (v30 || (uint64_t v133 = a4 + 1, v16 + 8 * v133 - (v124 + v125) - 1024 >= 9))
  {
LABEL_87:
    uint64_t v133 = 0;
    unint64_t v134 = (unint64_t)&v236;
LABEL_88:
    *(void *)(v134 & 0xFFFFFFFFFFFFFFF8) |= 0xFFFFLL << ((8 * v134) & 0x20);
    a1->i64[0] = 0;
    a1->i64[1] = 0;
    int8x16_t v135 = (uint64_t *)((char *)a1->i64 + a2);
    *int8x16_t v135 = 0;
    v135[1] = 0;
    return v133;
  }
  if (v64 == 2)
  {
    uint64_t v133 = 0;
    unint64_t v134 = (unint64_t)&v237;
    goto LABEL_88;
  }
  int32x2_t v137 = vzip1_s32(*(int32x2_t *)v54.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL));
  int32x2_t v138 = vzip1_s32(*(int32x2_t *)v91.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)v91, 8uLL));
  v139.i64[0] = v137.u32[0];
  v139.i64[1] = v137.u32[1];
  int64x2_t v140 = v139;
  v139.i64[0] = v138.u32[0];
  v139.i64[1] = v138.u32[1];
  uint64x2_t v141 = (uint64x2_t)vnegq_s64(v140);
  uint64x2_t v142 = (uint64x2_t)vnegq_s64(v139);
  int32x4_t v143 = (int32x4_t)vshlq_u64((uint64x2_t)v52, v141);
  *(int32x2_t *)v52.i8 = vmovn_s64((int64x2_t)v52);
  *(int32x2_t *)v143.i8 = vmovn_s64((int64x2_t)v143);
  int16x8_t v144 = (int16x8_t)vzip1q_s32(v52, v143);
  int32x4_t v145 = (int32x4_t)vshlq_u64((uint64x2_t)v99, v142);
  *(int32x2_t *)v99.i8 = vmovn_s64((int64x2_t)v99);
  *(int32x2_t *)v145.i8 = vmovn_s64((int64x2_t)v145);
  int16x8_t v146 = (int16x8_t)vzip1q_s32(v99, v145);
  int32x4_t v147 = (int32x4_t)vshlq_u64((uint64x2_t)v97, v142);
  *(int32x2_t *)v97.i8 = vmovn_s64((int64x2_t)v97);
  *(int32x2_t *)v147.i8 = vmovn_s64((int64x2_t)v147);
  int16x8_t v148 = (int16x8_t)vzip1q_s32(v97, v147);
  uint32x4_t v149 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v32.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL))));
  int16x8_t v150 = (int16x8_t)vshlq_u32((uint32x4_t)v144, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v53.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL)))));
  *(int16x4_t *)v144.i8 = vmovn_s32((int32x4_t)v144);
  *(int16x4_t *)v150.i8 = vmovn_s32((int32x4_t)v150);
  int16x8_t v151 = vzip1q_s16(v144, v150);
  int16x8_t v152 = (int16x8_t)vshlq_u32((uint32x4_t)v146, v149);
  int16x8_t v153 = (int16x8_t)vshlq_u32((uint32x4_t)v148, v149);
  *(int16x4_t *)v146.i8 = vmovn_s32((int32x4_t)v146);
  *(int16x4_t *)v152.i8 = vmovn_s32((int32x4_t)v152);
  *(int16x4_t *)v148.i8 = vmovn_s32((int32x4_t)v148);
  *(int16x4_t *)v153.i8 = vmovn_s32((int32x4_t)v153);
  int16x8_t v154 = vzip1q_s16(v146, v152);
  v152.i64[0] = 0x10001000100010;
  v152.i64[1] = 0x10001000100010;
  int16x8_t v155 = vzip1q_s16(v148, v153);
  v153.i64[0] = 0xF000F000F000FLL;
  v153.i64[1] = 0xF000F000F000FLL;
  int16x8_t v156 = vsubq_s16(v152, (int16x8_t)v53);
  int16x8_t v157 = vaddq_s16((int16x8_t)v53, v153);
  v153.i64[0] = 0x10001000100010;
  v153.i64[1] = 0x10001000100010;
  int16x8_t v158 = vshlq_s16(v151, v156);
  v156.i64[0] = 0xF000F000F000FLL;
  v156.i64[1] = 0xF000F000F000FLL;
  int16x8_t v159 = vsubq_s16(v153, (int16x8_t)v32);
  int16x8_t v160 = vaddq_s16((int16x8_t)v32, v156);
  int16x8_t v161 = vshlq_s16(v155, v159);
  int8x16_t v162 = (int8x16_t)vshlq_s16(v158, v157);
  int16x8_t v163 = vshlq_s16(vshlq_s16(v154, v159), v160);
  int8x16_t v164 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v162.i8, 0);
  int16x8_t v165 = (int16x8_t)vandq_s8(v37, v164);
  int16x8_t v166 = vsubq_s16(v163, v165);
  int16x8_t v167 = vsubq_s16(vshlq_s16(v161, v160), v165);
  *(int32x2_t *)v163.i8 = vzip1_s32(*(int32x2_t *)v107.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v107, (int8x16_t)v107, 8uLL));
  *(int32x2_t *)v161.i8 = vzip1_s32(*(int32x2_t *)v120.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v120, (int8x16_t)v120, 8uLL));
  v139.i64[0] = v163.u32[0];
  v139.i64[1] = v163.u32[1];
  int64x2_t v168 = v139;
  v139.i64[0] = v161.u32[0];
  v139.i64[1] = v161.u32[1];
  uint64x2_t v169 = (uint64x2_t)vnegq_s64(v168);
  int32x4_t v170 = (int32x4_t)vshlq_u64((uint64x2_t)v116, v169);
  *(int32x2_t *)v165.i8 = vmovn_s64((int64x2_t)v116);
  *(int32x2_t *)v170.i8 = vmovn_s64((int64x2_t)v170);
  int16x8_t v171 = (int16x8_t)vzip1q_s32((int32x4_t)v165, v170);
  uint64x2_t v172 = (uint64x2_t)vnegq_s64(v139);
  int32x4_t v173 = (int32x4_t)vshlq_u64((uint64x2_t)v112, v169);
  *(int32x2_t *)v112.i8 = vmovn_s64((int64x2_t)v112);
  *(int32x2_t *)v173.i8 = vmovn_s64((int64x2_t)v173);
  int16x8_t v174 = (int16x8_t)vzip1q_s32(v112, v173);
  int32x4_t v175 = (int32x4_t)vshlq_u64((uint64x2_t)v129, v172);
  *(int32x2_t *)v116.i8 = vmovn_s64((int64x2_t)v129);
  *(int32x2_t *)v175.i8 = vmovn_s64((int64x2_t)v175);
  uint32x4_t v176 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v33.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL))));
  int16x8_t v177 = (int16x8_t)vzip1q_s32(v116, v175);
  int16x8_t v178 = (int16x8_t)vshlq_u32((uint32x4_t)v171, v176);
  int16x8_t v179 = (int16x8_t)vshlq_u32((uint32x4_t)v174, v176);
  *(int16x4_t *)v171.i8 = vmovn_s32((int32x4_t)v171);
  *(int16x4_t *)v178.i8 = vmovn_s32((int32x4_t)v178);
  *(int16x4_t *)v174.i8 = vmovn_s32((int32x4_t)v174);
  *(int16x4_t *)v179.i8 = vmovn_s32((int32x4_t)v179);
  int16x8_t v180 = vzip1q_s16(v171, v178);
  v178.i64[0] = 0x10001000100010;
  v178.i64[1] = 0x10001000100010;
  int16x8_t v181 = vzip1q_s16(v174, v179);
  v179.i64[0] = 0xF000F000F000FLL;
  v179.i64[1] = 0xF000F000F000FLL;
  int16x8_t v182 = vsubq_s16(v178, (int16x8_t)v33);
  int16x8_t v183 = vaddq_s16((int16x8_t)v33, v179);
  uint32x4_t v184 = (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v34.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL))));
  int16x8_t v185 = vshlq_s16(vshlq_s16(v180, v182), v183);
  int16x8_t v186 = vshlq_s16(vshlq_s16(v181, v182), v183);
  int16x8_t v187 = (int16x8_t)vandq_s8(v35, v164);
  int16x8_t v188 = vsubq_s16(v185, v187);
  int16x8_t v189 = vsubq_s16(v186, v187);
  int16x8_t v190 = (int16x8_t)vshlq_u32((uint32x4_t)v177, v184);
  *(int16x4_t *)v185.i8 = vmovn_s32((int32x4_t)v177);
  *(int16x4_t *)v190.i8 = vmovn_s32((int32x4_t)v190);
  v177.i64[0] = 0x10001000100010;
  v177.i64[1] = 0x10001000100010;
  int16x8_t v191 = vzip1q_s16(v185, v190);
  v185.i64[0] = 0xF000F000F000FLL;
  v185.i64[1] = 0xF000F000F000FLL;
  int16x8_t v192 = vsubq_s16(v177, (int16x8_t)v34);
  int16x8_t v193 = vaddq_s16((int16x8_t)v34, v185);
  int32x4_t v194 = (int32x4_t)vshlq_u64((uint64x2_t)v132, v172);
  *(int32x2_t *)v185.i8 = vmovn_s64((int64x2_t)v132);
  *(int32x2_t *)v194.i8 = vmovn_s64((int64x2_t)v194);
  int16x8_t v195 = (int16x8_t)vzip1q_s32((int32x4_t)v185, v194);
  int16x8_t v196 = (int16x8_t)vshlq_u32((uint32x4_t)v195, v184);
  *(int16x4_t *)v195.i8 = vmovn_s32((int32x4_t)v195);
  *(int16x4_t *)v196.i8 = vmovn_s32((int32x4_t)v196);
  int16x8_t v197 = vshlq_s16(vshlq_s16(vzip1q_s16(v195, v196), v192), v193);
  int16x8_t v198 = (int16x8_t)vandq_s8(v31, v164);
  int16x8_t v199 = vsubq_s16(vshlq_s16(vshlq_s16(v191, v192), v193), v198);
  int16x8_t v200 = vsubq_s16(v197, v198);
  int32x2_t v201 = vzip1_s32(*(int32x2_t *)v70.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v70, (int8x16_t)v70, 8uLL));
  int32x2_t v202 = vzip1_s32(*(int32x2_t *)v81.i8, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v81, (int8x16_t)v81, 8uLL));
  v139.i64[0] = v201.u32[0];
  v139.i64[1] = v201.u32[1];
  int64x2_t v203 = v139;
  v139.i64[0] = v202.u32[0];
  v139.i64[1] = v202.u32[1];
  int32x4_t v204 = (int32x4_t)vshlq_u64((uint64x2_t)v77, (uint64x2_t)vnegq_s64(v203));
  *(int32x2_t *)v77.i8 = vmovn_s64((int64x2_t)v77);
  *(int32x2_t *)v204.i8 = vmovn_s64((int64x2_t)v204);
  int16x8_t v205 = (int16x8_t)vzip1q_s32(v77, v204);
  int32x4_t v206 = (int32x4_t)vshlq_u64((uint64x2_t)v68, (uint64x2_t)vnegq_s64(v139));
  *(int32x2_t *)v68.i8 = vmovn_s64((int64x2_t)v68);
  *(int32x2_t *)v206.i8 = vmovn_s64((int64x2_t)v206);
  int16x8_t v207 = (int16x8_t)vzip1q_s32(v68, v206);
  int16x8_t v208 = (int16x8_t)vshlq_u32((uint32x4_t)v205, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v69.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL)))));
  int16x8_t v209 = (int16x8_t)vshlq_u32((uint32x4_t)v207, (uint32x4_t)vnegq_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp1_s16(*(int16x4_t *)v36.i8, (int16x4_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)))));
  *(int16x4_t *)v205.i8 = vmovn_s32((int32x4_t)v205);
  *(int16x4_t *)v208.i8 = vmovn_s32((int32x4_t)v208);
  *(int16x4_t *)v207.i8 = vmovn_s32((int32x4_t)v207);
  *(int16x4_t *)v209.i8 = vmovn_s32((int32x4_t)v209);
  int16x8_t v210 = vzip1q_s16(v205, v208);
  v208.i64[0] = 0x10001000100010;
  v208.i64[1] = 0x10001000100010;
  int16x8_t v211 = vzip1q_s16(v207, v209);
  v209.i64[0] = 0xF000F000F000FLL;
  v209.i64[1] = 0xF000F000F000FLL;
  int16x8_t v212 = vaddq_s16((int16x8_t)vandq_s8(v162, v38), vshlq_s16(vshlq_s16(v210, vsubq_s16(v208, (int16x8_t)v69)), vaddq_s16((int16x8_t)v69, v209)));
  int16x8_t v213 = (int16x8_t)vandq_s8(v38, v164);
  v214.i64[0] = 0x1000100010001;
  v214.i64[1] = 0x1000100010001;
  int16x8_t v215 = vceqq_s16(v18, (int16x8_t)v214);
  int v216 = (unsigned __int16)vaddvq_s16(v215);
  int8x16_t v217 = (int8x16_t)vsubq_s16(v212, v213);
  int8x16_t v218 = (int8x16_t)vsubq_s16(vshlq_s16(vshlq_s16(v211, vsubq_s16(v208, (int16x8_t)v36)), vaddq_s16((int16x8_t)v36, v209)), v213);
  v215.i32[0] = v13;
  int16x8_t v219 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v215.i8, 0);
  if (v216)
  {
    int8x16_t v220 = (int8x16_t)vnegq_s16((int16x8_t)vandq_s8(v14, v214));
    int8x16_t v221 = v218;
    v221.i32[3] = v217.i32[0];
    int8x16_t v222 = v217;
    v222.i32[0] = v218.i32[3];
    v238.val[0] = vbslq_s8(v220, v222, v217);
    v238.val[1] = vbslq_s8(v220, v221, v218);
    v223.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v223.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    v239.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v238, (int8x16_t)xmmword_242EA7570), v220), (int16x8_t)v238.val[0]);
    v239.val[1] = (int8x16_t)vaddq_s16((int16x8_t)v238.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v238, v223), v220));
    int8x16_t v217 = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v239, (int8x16_t)xmmword_242EA7580), v220), (int16x8_t)v239.val[0]);
    int8x16_t v218 = (int8x16_t)vaddq_s16((int16x8_t)v239.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v239, v223), v220));
    v239.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v166.i8, (int8x16_t)xmmword_242EA7590), v220), v166);
    v239.val[1] = (int8x16_t)vaddq_s16(v167, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v166.i8, (int8x16_t)xmmword_242EA75A0), v220));
    int16x8_t v166 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v239, (int8x16_t)xmmword_242EA75B0), v220), (int16x8_t)v239.val[0]);
    int16x8_t v167 = vaddq_s16((int16x8_t)v239.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v239, v223), v220));
    v239.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v188.i8, (int8x16_t)xmmword_242EA75C0), v220), v188);
    v239.val[1] = (int8x16_t)vaddq_s16(v189, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v188.i8, (int8x16_t)xmmword_242EA7570), v220));
    int16x8_t v188 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v239, v223), v220), (int16x8_t)v239.val[0]);
    int16x8_t v189 = vaddq_s16((int16x8_t)v239.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v239, (int8x16_t)xmmword_242EA75D0), v220));
    v238.val[0] = (int8x16_t)vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v199.i8, (int8x16_t)xmmword_242EA75E0), v220), v199);
    v238.val[1] = (int8x16_t)vaddq_s16(v200, (int16x8_t)vandq_s8(vqtbl2q_s8(*(int8x16x2_t *)v199.i8, (int8x16_t)xmmword_242EA7570), v220));
    int16x8_t v199 = vaddq_s16((int16x8_t)vandq_s8(vqtbl2q_s8(v238, v223), v220), (int16x8_t)v238.val[0]);
    int16x8_t v200 = vaddq_s16((int16x8_t)v238.val[1], (int16x8_t)vandq_s8(vqtbl2q_s8(v238, (int8x16_t)xmmword_242EA75F0), v220));
  }
  int8x16_t v224 = (int8x16_t)vaddq_s16((int16x8_t)v217, v219);
  int8x16_t v225 = (int8x16_t)vaddq_s16((int16x8_t)v218, v219);
  int8x16_t v226 = (int8x16_t)vaddq_s16(v166, v219);
  int8x16_t v227 = (int8x16_t)vaddq_s16(v167, v219);
  int8x16_t v228 = (int8x16_t)vaddq_s16(v188, v219);
  int8x16_t v229 = (int8x16_t)vaddq_s16(v189, v219);
  int8x16_t v230 = (int8x16_t)vaddq_s16(v199, v219);
  int8x16_t v231 = (int8x16_t)vaddq_s16(v200, v219);
  v232.i64[0] = 0x10001000100010;
  v232.i64[1] = 0x10001000100010;
  int8x16_t v233 = (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v14, v232));
  int8x16_t v234 = a1 + 2;
  *a1 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v224, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v224);
  a1[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v225, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v225);
  int8x16_t v235 = (int16x8_t *)((char *)a1 + a2);
  int16x8_t *v234 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v228, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v228);
  v234[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v229, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v229);
  *int8x16_t v235 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v226, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v226);
  v235[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v227, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v227);
  v235 += 2;
  *int8x16_t v235 = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v230, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v230);
  v235[1] = vaddq_s16((int16x8_t)vbicq_s8(vqtbl1q_s8(v231, (int8x16_t)xmmword_242EA76C0), v233), (int16x8_t)v231);
  return v133;
}

int16x8_t *AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressMacroblock(uint64_t a1, uint64_t a2, unsigned __int8 *a3, int32x4_t a4, int32x4_t a5)
{
  unsigned int v8 = *a3;
  if (v8 == 127)
  {
    int32x4_t v10 = *(int32x4_t *)a2;
    a5 = *(int32x4_t *)(a2 + 16);
    long long v11 = *(_OWORD *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 48);
    long long v13 = *(_OWORD *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 80);
    long long v15 = *(_OWORD *)(a2 + 96);
    long long v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(int32x4_t *)(a1 + 16) = a5;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v14;
    *(_OWORD *)(a1 + 128) = v11;
    *(_OWORD *)(a1 + 144) = v12;
    *(_OWORD *)(a1 + 160) = v15;
    *(_OWORD *)(a1 + 176) = v16;
    uint64_t v9 = 128;
  }
  else if (v8 == 3)
  {
    int32x4_t v10 = (int32x4_t)vld1q_dup_f32((const float *)a2);
    *(int32x4_t *)a1 = v10;
    *(int32x4_t *)(a1 + 16) = v10;
    *(int32x4_t *)(a1 + 32) = v10;
    *(int32x4_t *)(a1 + 48) = v10;
    *(int32x4_t *)(a1 + 128) = v10;
    *(int32x4_t *)(a1 + 144) = v10;
    *(int32x4_t *)(a1 + 160) = v10;
    *(int32x4_t *)(a1 + 176) = v10;
    uint64_t v9 = 4;
  }
  else if (*a3)
  {
    uint64_t v9 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock((int16x8_t *)a1, 128, a2, v8, a4, a5);
  }
  else
  {
    uint64_t v9 = 0;
    int32x4_t v10 = 0uLL;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
  }
  uint64_t v17 = a2 + v9;
  int16x8_t v18 = (int16x8_t *)(a1 + 256);
  unsigned int v19 = a3[1];
  if (a3[1])
  {
    if (v19 == 3)
    {
      int32x4_t v20 = (int32x4_t)vld1q_dup_f32((const float *)v17);
      *(int32x4_t *)(a1 + 256) = v20;
      *(int32x4_t *)(a1 + 272) = v20;
      *(int32x4_t *)(a1 + 288) = v20;
      *(int32x4_t *)(a1 + 304) = v20;
      *(int32x4_t *)(a1 + 384) = v20;
      *(int32x4_t *)(a1 + 400) = v20;
      *(int32x4_t *)(a1 + 416) = v20;
      *(int32x4_t *)(a1 + 432) = v20;
      uint64_t v27 = 4;
    }
    else if (v19 == 127)
    {
      int32x4_t v20 = *(int32x4_t *)v17;
      a5 = *(int32x4_t *)(v17 + 16);
      long long v21 = *(_OWORD *)(v17 + 32);
      long long v22 = *(_OWORD *)(v17 + 48);
      long long v23 = *(_OWORD *)(v17 + 64);
      long long v24 = *(_OWORD *)(v17 + 80);
      long long v25 = *(_OWORD *)(v17 + 96);
      long long v26 = *(_OWORD *)(v17 + 112);
      *int16x8_t v18 = *(int16x8_t *)v17;
      *(int32x4_t *)(a1 + 272) = a5;
      *(_OWORD *)(a1 + 288) = v23;
      *(_OWORD *)(a1 + 304) = v24;
      *(_OWORD *)(a1 + 384) = v21;
      *(_OWORD *)(a1 + 400) = v22;
      *(_OWORD *)(a1 + 416) = v25;
      *(_OWORD *)(a1 + 432) = v26;
      uint64_t v27 = 128;
    }
    else
    {
      uint64_t v27 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v18, 128, v17, v19, v10, a5);
    }
  }
  else
  {
    uint64_t v27 = 0;
    int32x4_t v20 = 0uLL;
    *(_OWORD *)(a1 + 288) = 0u;
    *(_OWORD *)(a1 + 304) = 0u;
    *int16x8_t v18 = 0u;
    *(_OWORD *)(a1 + 272) = 0u;
    *(_OWORD *)(a1 + 384) = 0u;
    *(_OWORD *)(a1 + 400) = 0u;
    *(_OWORD *)(a1 + 416) = 0u;
    *(_OWORD *)(a1 + 432) = 0u;
  }
  uint64_t v28 = v17 + v27;
  int32x4_t v29 = (int16x8_t *)(a1 + 64);
  unsigned int v30 = a3[2];
  if (a3[2])
  {
    if (v30 == 3)
    {
      int32x4_t v31 = (int32x4_t)vld1q_dup_f32((const float *)v28);
      *(int32x4_t *)(a1 + 64) = v31;
      *(int32x4_t *)(a1 + 80) = v31;
      *(int32x4_t *)(a1 + 96) = v31;
      *(int32x4_t *)(a1 + 112) = v31;
      *(int32x4_t *)(a1 + 192) = v31;
      *(int32x4_t *)(a1 + 208) = v31;
      *(int32x4_t *)(a1 + 224) = v31;
      *(int32x4_t *)(a1 + 240) = v31;
      uint64_t v38 = 4;
    }
    else if (v30 == 127)
    {
      int32x4_t v31 = *(int32x4_t *)v28;
      a5 = *(int32x4_t *)(v28 + 16);
      long long v32 = *(_OWORD *)(v28 + 32);
      long long v33 = *(_OWORD *)(v28 + 48);
      long long v34 = *(_OWORD *)(v28 + 64);
      long long v35 = *(_OWORD *)(v28 + 80);
      long long v36 = *(_OWORD *)(v28 + 96);
      long long v37 = *(_OWORD *)(v28 + 112);
      *int32x4_t v29 = *(int16x8_t *)v28;
      *(int32x4_t *)(a1 + 80) = a5;
      *(_OWORD *)(a1 + 96) = v34;
      *(_OWORD *)(a1 + 112) = v35;
      *(_OWORD *)(a1 + 192) = v32;
      *(_OWORD *)(a1 + 208) = v33;
      *(_OWORD *)(a1 + 224) = v36;
      *(_OWORD *)(a1 + 240) = v37;
      uint64_t v38 = 128;
    }
    else
    {
      uint64_t v38 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v29, 128, v28, v30, v20, a5);
    }
  }
  else
  {
    uint64_t v38 = 0;
    int32x4_t v31 = 0uLL;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *int32x4_t v29 = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 192) = 0u;
    *(_OWORD *)(a1 + 208) = 0u;
    *(_OWORD *)(a1 + 224) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
  }
  uint64_t v39 = v28 + v38;
  int64x2_t v40 = (int16x8_t *)(a1 + 320);
  unsigned int v41 = a3[3];
  if (a3[3])
  {
    if (v41 == 3)
    {
      int32x4_t v42 = (int32x4_t)vld1q_dup_f32((const float *)v39);
      *(int32x4_t *)(a1 + 320) = v42;
      *(int32x4_t *)(a1 + 336) = v42;
      *(int32x4_t *)(a1 + 352) = v42;
      *(int32x4_t *)(a1 + 368) = v42;
      *(int32x4_t *)(a1 + 448) = v42;
      *(int32x4_t *)(a1 + 464) = v42;
      *(int32x4_t *)(a1 + 480) = v42;
      *(int32x4_t *)(a1 + 496) = v42;
      uint64_t v49 = 4;
    }
    else if (v41 == 127)
    {
      int32x4_t v42 = *(int32x4_t *)v39;
      a5 = *(int32x4_t *)(v39 + 16);
      long long v43 = *(_OWORD *)(v39 + 32);
      long long v44 = *(_OWORD *)(v39 + 48);
      long long v45 = *(_OWORD *)(v39 + 64);
      long long v46 = *(_OWORD *)(v39 + 80);
      long long v47 = *(_OWORD *)(v39 + 96);
      long long v48 = *(_OWORD *)(v39 + 112);
      *int64x2_t v40 = *(int16x8_t *)v39;
      *(int32x4_t *)(a1 + 336) = a5;
      *(_OWORD *)(a1 + 352) = v45;
      *(_OWORD *)(a1 + 368) = v46;
      *(_OWORD *)(a1 + 448) = v43;
      *(_OWORD *)(a1 + 464) = v44;
      *(_OWORD *)(a1 + 480) = v47;
      *(_OWORD *)(a1 + 496) = v48;
      uint64_t v49 = 128;
    }
    else
    {
      uint64_t v49 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v40, 128, v39, v41, v31, a5);
    }
  }
  else
  {
    uint64_t v49 = 0;
    int32x4_t v42 = 0uLL;
    *(_OWORD *)(a1 + 352) = 0u;
    *(_OWORD *)(a1 + 368) = 0u;
    *int64x2_t v40 = 0u;
    *(_OWORD *)(a1 + 336) = 0u;
    *(_OWORD *)(a1 + 448) = 0u;
    *(_OWORD *)(a1 + 464) = 0u;
    *(_OWORD *)(a1 + 480) = 0u;
    *(_OWORD *)(a1 + 496) = 0u;
  }
  uint64_t v50 = v39 + v49;
  int16x8_t v51 = (int16x8_t *)(a1 + 512);
  unsigned int v52 = a3[4];
  if (a3[4])
  {
    if (v52 == 3)
    {
      int32x4_t v53 = (int32x4_t)vld1q_dup_f32((const float *)v50);
      *(int32x4_t *)(a1 + 512) = v53;
      *(int32x4_t *)(a1 + 528) = v53;
      *(int32x4_t *)(a1 + 544) = v53;
      *(int32x4_t *)(a1 + 560) = v53;
      *(int32x4_t *)(a1 + 640) = v53;
      *(int32x4_t *)(a1 + 656) = v53;
      *(int32x4_t *)(a1 + 672) = v53;
      *(int32x4_t *)(a1 + 688) = v53;
      uint64_t v60 = 4;
    }
    else if (v52 == 127)
    {
      int32x4_t v53 = *(int32x4_t *)v50;
      a5 = *(int32x4_t *)(v50 + 16);
      long long v54 = *(_OWORD *)(v50 + 32);
      long long v55 = *(_OWORD *)(v50 + 48);
      long long v56 = *(_OWORD *)(v50 + 64);
      long long v57 = *(_OWORD *)(v50 + 80);
      long long v58 = *(_OWORD *)(v50 + 96);
      long long v59 = *(_OWORD *)(v50 + 112);
      *int16x8_t v51 = *(int16x8_t *)v50;
      *(int32x4_t *)(a1 + 528) = a5;
      *(_OWORD *)(a1 + 544) = v56;
      *(_OWORD *)(a1 + 560) = v57;
      *(_OWORD *)(a1 + 640) = v54;
      *(_OWORD *)(a1 + 656) = v55;
      *(_OWORD *)(a1 + 672) = v58;
      *(_OWORD *)(a1 + 688) = v59;
      uint64_t v60 = 128;
    }
    else
    {
      uint64_t v60 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v51, 128, v50, v52, v42, a5);
    }
  }
  else
  {
    uint64_t v60 = 0;
    int32x4_t v53 = 0uLL;
    *(_OWORD *)(a1 + 544) = 0u;
    *(_OWORD *)(a1 + 560) = 0u;
    *int16x8_t v51 = 0u;
    *(_OWORD *)(a1 + 528) = 0u;
    *(_OWORD *)(a1 + 640) = 0u;
    *(_OWORD *)(a1 + 656) = 0u;
    *(_OWORD *)(a1 + 672) = 0u;
    *(_OWORD *)(a1 + 688) = 0u;
  }
  uint64_t v61 = v50 + v60;
  int64x2_t v62 = (int16x8_t *)(a1 + 768);
  unsigned int v63 = a3[5];
  if (a3[5])
  {
    if (v63 == 3)
    {
      int32x4_t v64 = (int32x4_t)vld1q_dup_f32((const float *)v61);
      *(int32x4_t *)(a1 + 768) = v64;
      *(int32x4_t *)(a1 + 784) = v64;
      *(int32x4_t *)(a1 + 800) = v64;
      *(int32x4_t *)(a1 + 816) = v64;
      *(int32x4_t *)(a1 + 896) = v64;
      *(int32x4_t *)(a1 + 912) = v64;
      *(int32x4_t *)(a1 + 928) = v64;
      *(int32x4_t *)(a1 + 944) = v64;
      uint64_t v71 = 4;
    }
    else if (v63 == 127)
    {
      int32x4_t v64 = *(int32x4_t *)v61;
      a5 = *(int32x4_t *)(v61 + 16);
      long long v65 = *(_OWORD *)(v61 + 32);
      long long v66 = *(_OWORD *)(v61 + 48);
      long long v67 = *(_OWORD *)(v61 + 64);
      long long v68 = *(_OWORD *)(v61 + 80);
      long long v69 = *(_OWORD *)(v61 + 96);
      long long v70 = *(_OWORD *)(v61 + 112);
      *int64x2_t v62 = *(int16x8_t *)v61;
      *(int32x4_t *)(a1 + 784) = a5;
      *(_OWORD *)(a1 + 800) = v67;
      *(_OWORD *)(a1 + 816) = v68;
      *(_OWORD *)(a1 + 896) = v65;
      *(_OWORD *)(a1 + 912) = v66;
      *(_OWORD *)(a1 + 928) = v69;
      *(_OWORD *)(a1 + 944) = v70;
      uint64_t v71 = 128;
    }
    else
    {
      uint64_t v71 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v62, 128, v61, v63, v53, a5);
    }
  }
  else
  {
    uint64_t v71 = 0;
    int32x4_t v64 = 0uLL;
    *(_OWORD *)(a1 + 800) = 0u;
    *(_OWORD *)(a1 + 816) = 0u;
    *int64x2_t v62 = 0u;
    *(_OWORD *)(a1 + 784) = 0u;
    *(_OWORD *)(a1 + 896) = 0u;
    *(_OWORD *)(a1 + 912) = 0u;
    *(_OWORD *)(a1 + 928) = 0u;
    *(_OWORD *)(a1 + 944) = 0u;
  }
  uint64_t v72 = v61 + v71;
  int64x2_t v73 = (int16x8_t *)(a1 + 576);
  unsigned int v74 = a3[6];
  if (a3[6])
  {
    if (v74 == 3)
    {
      int32x4_t v75 = (int32x4_t)vld1q_dup_f32((const float *)v72);
      *(int32x4_t *)(a1 + 576) = v75;
      *(int32x4_t *)(a1 + 592) = v75;
      *(int32x4_t *)(a1 + 608) = v75;
      *(int32x4_t *)(a1 + 624) = v75;
      *(int32x4_t *)(a1 + 704) = v75;
      *(int32x4_t *)(a1 + 720) = v75;
      *(int32x4_t *)(a1 + 736) = v75;
      *(int32x4_t *)(a1 + 752) = v75;
      uint64_t v82 = 4;
    }
    else if (v74 == 127)
    {
      int32x4_t v75 = *(int32x4_t *)v72;
      a5 = *(int32x4_t *)(v72 + 16);
      long long v76 = *(_OWORD *)(v72 + 32);
      long long v77 = *(_OWORD *)(v72 + 48);
      long long v78 = *(_OWORD *)(v72 + 64);
      long long v79 = *(_OWORD *)(v72 + 80);
      long long v80 = *(_OWORD *)(v72 + 96);
      long long v81 = *(_OWORD *)(v72 + 112);
      *int64x2_t v73 = *(int16x8_t *)v72;
      *(int32x4_t *)(a1 + 592) = a5;
      *(_OWORD *)(a1 + 608) = v78;
      *(_OWORD *)(a1 + 624) = v79;
      *(_OWORD *)(a1 + 704) = v76;
      *(_OWORD *)(a1 + 720) = v77;
      *(_OWORD *)(a1 + 736) = v80;
      *(_OWORD *)(a1 + 752) = v81;
      uint64_t v82 = 128;
    }
    else
    {
      uint64_t v82 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(v73, 128, v72, v74, v64, a5);
    }
  }
  else
  {
    uint64_t v82 = 0;
    int32x4_t v75 = 0uLL;
    *(_OWORD *)(a1 + 608) = 0u;
    *(_OWORD *)(a1 + 624) = 0u;
    *int64x2_t v73 = 0u;
    *(_OWORD *)(a1 + 592) = 0u;
    *(_OWORD *)(a1 + 704) = 0u;
    *(_OWORD *)(a1 + 720) = 0u;
    *(_OWORD *)(a1 + 736) = 0u;
    *(_OWORD *)(a1 + 752) = 0u;
  }
  unint64_t result = (int16x8_t *)(a1 + 832);
  unsigned int v84 = a3[7];
  if (!a3[7])
  {
    float32x4_t v93 = 0uLL;
    *(_OWORD *)(a1 + 864) = 0u;
    *(_OWORD *)(a1 + 880) = 0u;
    *unint64_t result = 0u;
    *(_OWORD *)(a1 + 848) = 0u;
LABEL_56:
    *(float32x4_t *)(a1 + 960) = v93;
    *(float32x4_t *)(a1 + 976) = v93;
    *(float32x4_t *)(a1 + 992) = v93;
    *(float32x4_t *)(a1 + 1008) = v93;
    return result;
  }
  uint64_t v85 = v72 + v82;
  if (v84 == 3)
  {
    float32x4_t v93 = vld1q_dup_f32((const float *)v85);
    *(float32x4_t *)(a1 + 832) = v93;
    *(float32x4_t *)(a1 + 848) = v93;
    *(float32x4_t *)(a1 + 864) = v93;
    *(float32x4_t *)(a1 + 880) = v93;
    goto LABEL_56;
  }
  if (v84 == 127)
  {
    long long v86 = *(_OWORD *)(v85 + 16);
    long long v87 = *(_OWORD *)(v85 + 32);
    long long v88 = *(_OWORD *)(v85 + 48);
    long long v89 = *(_OWORD *)(v85 + 64);
    long long v90 = *(_OWORD *)(v85 + 80);
    long long v91 = *(_OWORD *)(v85 + 96);
    long long v92 = *(_OWORD *)(v85 + 112);
    *unint64_t result = *(int16x8_t *)v85;
    *(_OWORD *)(a1 + 848) = v86;
    *(_OWORD *)(a1 + 864) = v89;
    *(_OWORD *)(a1 + 880) = v90;
    *(_OWORD *)(a1 + 960) = v87;
    *(_OWORD *)(a1 + 976) = v88;
    *(_OWORD *)(a1 + 992) = v91;
    *(_OWORD *)(a1 + 1008) = v92;
  }
  else
  {
    return (int16x8_t *)AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)1,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::decompressLosslessCompressedSubblock(result, 128, v85, v84, v75, a5);
  }
  return result;
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(unint64_t a1, char *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int16x8_t v5 = *(int16x8_t *)(a3 + a4 + 32);
  int16x8_t v6 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)a3, 0);
  int16x8_t v7 = vsubq_s16(*(int16x8_t *)a3, v6);
  v396.val[0] = *(int8x16_t *)a3;
  v396.val[1] = *(int8x16_t *)(a3 + 16);
  int8x16_t v8 = (int8x16_t)vsubq_s16((int16x8_t)v396.val[1], v6);
  int16x8_t v399 = *(int16x8_t *)(a3 + a4);
  int16x8_t v9 = vsubq_s16(v399, v6);
  int16x8_t v394 = *(int16x8_t *)(a3 + a4 + 16);
  int8x16_t v10 = (int8x16_t)vsubq_s16(v394, v6);
  int16x8_t v400 = *(int16x8_t *)(a3 + 32);
  int16x8_t v11 = vsubq_s16(v400, v6);
  int16x8_t v397 = *(int16x8_t *)(a3 + 48);
  int16x8_t v12 = vsubq_s16(v397, v6);
  int16x8_t v13 = vsubq_s16(v5, v6);
  int16x8_t v14 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v7, (int16x8_t)v8), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v15 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v7, (int16x8_t)v8), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v16 = vpmaxq_s16(v14, v14);
  int16x8_t v17 = vpminq_s16(v15, v15);
  int16x8_t v18 = vpmaxq_s16(v16, v16);
  int16x8_t v19 = vpminq_s16(v17, v17);
  v20.i64[0] = 0x8000800080008000;
  v20.i64[1] = 0x8000800080008000;
  int16x8_t v21 = vmaxq_s16(v18, v20);
  v22.i64[0] = 0x8000800080008000;
  v22.i64[1] = 0x8000800080008000;
  int16x8_t v23 = vminq_s16(v19, v22);
  int16x8_t v24 = vzip1q_s16(v18, v19);
  v25.i64[0] = 0x10001000100010;
  v25.i64[1] = 0x10001000100010;
  int16x8_t v26 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v24)), (int8x16_t)vceqzq_s16(v24));
  int16x8_t v27 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v9, (int16x8_t)v10), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v28 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v9, (int16x8_t)v10), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v29 = vpmaxq_s16(v27, v27);
  int16x8_t v30 = vpminq_s16(v28, v28);
  int16x8_t v31 = vpmaxq_s16(v29, v29);
  int16x8_t v32 = vpminq_s16(v30, v30);
  int16x8_t v33 = vmaxq_s16(v21, v31);
  int16x8_t v34 = vminq_s16(v23, v32);
  int16x8_t v35 = vzip1q_s16(v31, v32);
  int16x8_t v36 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v35)), (int8x16_t)vceqzq_s16(v35));
  int16x8_t v37 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v11, v12), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v38 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v11, v12), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v39 = vpmaxq_s16(v37, v37);
  int16x8_t v40 = vpminq_s16(v38, v38);
  int16x8_t v41 = vpmaxq_s16(v39, v39);
  int16x8_t v42 = vpminq_s16(v40, v40);
  int16x8_t v43 = vmaxq_s16(v33, v41);
  int16x8_t v44 = vminq_s16(v34, v42);
  int16x8_t v45 = vzip1q_s16(v41, v42);
  int16x8_t v46 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v45)), (int8x16_t)vceqzq_s16(v45));
  int16x8_t v395 = *(int16x8_t *)(a3 + a4 + 48);
  int8x16_t v47 = (int8x16_t)vsubq_s16(v395, v6);
  int16x8_t v48 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v13, (int16x8_t)v47), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v49 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v13, (int16x8_t)v47), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v50 = vpmaxq_s16(v48, v48);
  int16x8_t v51 = vpminq_s16(v49, v49);
  int16x8_t v52 = vpmaxq_s16(v50, v50);
  int16x8_t v53 = vpminq_s16(v51, v51);
  int16x8_t v54 = vmaxq_s16(v43, v52);
  int8x16_t v55 = (int8x16_t)vminq_s16(v44, v53);
  int16x8_t v56 = vzip1q_s16(v52, v53);
  int16x8_t v57 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v56)), (int8x16_t)vceqzq_s16(v56));
  int16x8_t v58 = vpmaxq_s16(v26, v26);
  int16x8_t v59 = vpmaxq_s16(v36, v36);
  int16x8_t v60 = vpmaxq_s16(v46, v46);
  int16x8_t v61 = vpmaxq_s16(v57, v57);
  int8x16_t v62 = (int8x16_t)vmaxq_s16(vmaxq_s16(v58, v59), vmaxq_s16(v60, v61));
  int16x8_t v63 = vclzq_s16(vsubq_s16(v54, (int16x8_t)v55));
  int8x16_t v64 = (int8x16_t)vsubq_s16((int16x8_t)v25, v63);
  int8x16_t v65 = (int8x16_t)vcgtq_s16((int16x8_t)v62, (int16x8_t)v64);
  int8x16_t v66 = vbslq_s8(v65, v64, v62);
  v62.i64[0] = 0x8000800080008;
  v62.i64[1] = 0x8000800080008;
  int8x16_t v67 = vandq_s8(v65, v62);
  v68.i64[0] = 0x3000300030003;
  v68.i64[1] = 0x3000300030003;
  int16x8_t v69 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v58), (int16x8_t)v68), (int16x8_t)0);
  int16x8_t v70 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v59), (int16x8_t)v68), (int16x8_t)0);
  int16x8_t v71 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v60), (int16x8_t)v68), (int16x8_t)0);
  int16x8_t v72 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v66, v61), (int16x8_t)v68), (int16x8_t)0);
  v73.i64[0] = 0x4000400040004;
  v73.i64[1] = 0x4000400040004;
  int8x16_t v74 = vbicq_s8(v73, (int8x16_t)vceqq_s16(vaddq_s16(v72, v71), vnegq_s16(vaddq_s16(v69, v70))));
  int8x16_t v75 = vorrq_s8(v74, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v66), v68), v67));
  int8x16_t v410 = v47;
  int8x16_t v411 = (int8x16_t)v6;
  int8x16_t v401 = (int8x16_t)v7;
  int8x16_t v403 = v8;
  int8x16_t v406 = v10;
  int8x16_t v407 = (int8x16_t)v11;
  int8x16_t v408 = (int8x16_t)v12;
  int8x16_t v409 = (int8x16_t)v13;
  v6.i64[0] = 0xF000F000F000FLL;
  v6.i64[1] = 0xF000F000F000FLL;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int16x8_t v405 = v9;
  int8x16_t v417 = v66;
  int8x16_t v418 = v55;
  int8x16_t v76 = vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v7, vsubq_s16(v6, v63)), (int16x8_t)v55), v65);
  int8x16_t v419 = (int8x16_t)v54;
  int8x16_t v420 = v76;
  int8x16_t v77 = (int8x16_t)vsubq_s16((int16x8_t)v66, v69);
  int8x16_t v78 = (int8x16_t)vsubq_s16((int16x8_t)v66, v70);
  int8x16_t v413 = v77;
  int8x16_t v414 = v78;
  int8x16_t v79 = (int8x16_t)vsubq_s16((int16x8_t)v66, v71);
  int8x16_t v80 = (int8x16_t)vsubq_s16((int16x8_t)v66, v72);
  int8x16_t v415 = v79;
  int8x16_t v416 = v80;
  int8x16_t v412 = v75;
  if (vmaxvq_s16((int16x8_t)v66))
  {
    int8x16_t v387 = v76;
    int8x16_t v390 = (int8x16_t)v54;
    int8x16_t v392 = (int8x16_t)v12;
    int16x8_t v398 = v5;
    int8x16_t v81 = (int8x16_t)vsubq_s16((int16x8_t)v401, (int16x8_t)vqtbl1q_s8(v401, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v82 = (int8x16_t)vsubq_s16((int16x8_t)v8, (int16x8_t)vqtbl1q_s8(v8, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v83 = (int8x16_t)vsubq_s16(v405, (int16x8_t)vqtbl1q_s8((int8x16_t)v405, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v84 = (int8x16_t)vsubq_s16((int16x8_t)v406, (int16x8_t)vqtbl1q_s8(v406, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v85 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v81, (int16x8_t)v82), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v86 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v81, (int16x8_t)v82), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v87 = vpmaxq_s16(v85, v85);
    int16x8_t v88 = vpminq_s16(v86, v86);
    int16x8_t v89 = vpmaxq_s16(v87, v87);
    int16x8_t v90 = vpminq_s16(v88, v88);
    v91.i64[0] = 0x8000800080008000;
    v91.i64[1] = 0x8000800080008000;
    int16x8_t v92 = vmaxq_s16(v89, v91);
    v93.i64[0] = 0x8000800080008000;
    v93.i64[1] = 0x8000800080008000;
    int16x8_t v94 = vminq_s16(v90, v93);
    int16x8_t v95 = vzip1q_s16(v89, v90);
    int16x8_t v96 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v95)), (int8x16_t)vceqzq_s16(v95));
    int16x8_t v97 = vpmaxq_s16(v96, v96);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v83, (int16x8_t)v84), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v83, (int16x8_t)v84), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v100 = vpmaxq_s16(v98, v98);
    int16x8_t v101 = vpminq_s16(v99, v99);
    int16x8_t v102 = vpmaxq_s16(v100, v100);
    int16x8_t v103 = vpminq_s16(v101, v101);
    int16x8_t v104 = vmaxq_s16(v92, v102);
    int16x8_t v105 = vminq_s16(v94, v103);
    int16x8_t v106 = vzip1q_s16(v102, v103);
    int16x8_t v107 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v106)), (int8x16_t)vceqzq_s16(v106));
    int16x8_t v108 = vpmaxq_s16(v107, v107);
    int8x16_t v382 = (int8x16_t)vsubq_s16((int16x8_t)v408, (int16x8_t)vqtbl1q_s8(v408, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v383 = (int8x16_t)vsubq_s16((int16x8_t)v407, (int16x8_t)vqtbl1q_s8(v407, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v109 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v383, (int16x8_t)v382), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v110 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v383, (int16x8_t)v382), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v111 = vpmaxq_s16(v109, v109);
    int16x8_t v112 = vpminq_s16(v110, v110);
    int16x8_t v113 = vpmaxq_s16(v111, v111);
    int16x8_t v114 = vpminq_s16(v112, v112);
    int16x8_t v115 = vmaxq_s16(v104, v113);
    int16x8_t v116 = vminq_s16(v105, v114);
    int16x8_t v117 = vzip1q_s16(v113, v114);
    int16x8_t v118 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v117)), (int8x16_t)vceqzq_s16(v117));
    int16x8_t v119 = vpmaxq_s16(v118, v118);
    int8x16_t v380 = (int8x16_t)vsubq_s16((int16x8_t)v410, (int16x8_t)vqtbl1q_s8(v410, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v381 = (int8x16_t)vsubq_s16((int16x8_t)v409, (int16x8_t)vqtbl1q_s8(v409, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v120 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v381, (int16x8_t)v380), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v121 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v381, (int16x8_t)v380), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vpmaxq_s16(v122, v122);
    int16x8_t v125 = vpminq_s16(v123, v123);
    int16x8_t v126 = vmaxq_s16(v115, v124);
    int8x16_t v127 = (int8x16_t)vminq_s16(v116, v125);
    int16x8_t v128 = vzip1q_s16(v124, v125);
    int16x8_t v129 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v25, vclsq_s16(v128)), (int8x16_t)vceqzq_s16(v128));
    int16x8_t v130 = vpmaxq_s16(v129, v129);
    int8x16_t v131 = (int8x16_t)vmaxq_s16(vmaxq_s16(v97, v108), vmaxq_s16(v119, v130));
    int8x16_t v379 = (int8x16_t)v126;
    int16x8_t v132 = vclzq_s16(vsubq_s16(v126, (int16x8_t)v127));
    int8x16_t v133 = (int8x16_t)vsubq_s16((int16x8_t)v25, v132);
    int8x16_t v134 = (int8x16_t)vcgtq_s16((int16x8_t)v131, (int16x8_t)v133);
    int8x16_t v135 = vbslq_s8(v134, v133, v131);
    v131.i64[0] = 0x18001800180018;
    v131.i64[1] = 0x18001800180018;
    int8x16_t v136 = vbslq_s8(v134, v131, v25);
    int16x8_t v137 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v97), (int16x8_t)v68), (int16x8_t)0);
    int16x8_t v138 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v108), (int16x8_t)v68), (int16x8_t)0);
    int8x16_t v139 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v119), (int16x8_t)v68), (int16x8_t)0);
    int16x8_t v140 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v135, v130), (int16x8_t)v68), (int16x8_t)0);
    int8x16_t v141 = (int8x16_t)vsubq_s16((int16x8_t)v135, v137);
    int8x16_t v142 = (int8x16_t)vsubq_s16((int16x8_t)v135, v138);
    int8x16_t v143 = (int8x16_t)vsubq_s16((int16x8_t)v135, (int16x8_t)v139);
    int8x16_t v144 = (int8x16_t)vsubq_s16((int16x8_t)v135, v140);
    int8x16_t v145 = (int8x16_t)vceqq_s16(vaddq_s16(v140, (int16x8_t)v139), vnegq_s16(vaddq_s16(v137, v138)));
    v139.i64[0] = 0x4000400040004;
    v139.i64[1] = 0x4000400040004;
    int8x16_t v146 = vbicq_s8(v139, v145);
    v138.i64[0] = 0x7000700070007;
    v138.i64[1] = 0x7000700070007;
    int8x16_t v147 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v64, v65), (int16x8_t)v77, v138), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v79, (int16x8_t)v78), (int16x8_t)v80), 3uLL)), vaddq_s16((int16x8_t)v74, (int16x8_t)v74)), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbicq_s8(v135, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v136 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))), (int16x8_t)v141, v138), vshlq_n_s16(
                                                       vaddq_s16(vaddq_s16((int16x8_t)v143, (int16x8_t)v142), (int16x8_t)v144), 3uLL)), vaddq_s16((int16x8_t)v146, (int16x8_t)v146))), 0);
    if (vaddvq_s16((int16x8_t)v147))
    {
      int8x16_t v401 = vbslq_s8(v147, v81, v401);
      int8x16_t v403 = vbslq_s8(v147, v82, v403);
      int8x16_t v148 = vbslq_s8(v147, v83, (int8x16_t)v405);
      v149.i64[0] = 0x3000300030003;
      v149.i64[1] = 0x3000300030003;
      int8x16_t v150 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v135), v149), v136), v146);
      v151.i64[0] = 0xF000F000F000FLL;
      v151.i64[1] = 0xF000F000F000FLL;
      v152.i64[0] = -1;
      v152.i64[1] = -1;
      int16x8_t v405 = (int16x8_t)v148;
      int8x16_t v406 = vbslq_s8(v147, v84, v10);
      int8x16_t v407 = vbslq_s8(v147, v383, v407);
      int8x16_t v408 = vbslq_s8(v147, v382, v392);
      int8x16_t v409 = vbslq_s8(v147, v381, v409);
      int8x16_t v410 = vbslq_s8(v147, v380, v47);
      int8x16_t v413 = vbslq_s8(v147, v141, v77);
      int8x16_t v414 = vbslq_s8(v147, v142, v78);
      int8x16_t v415 = vbslq_s8(v147, v143, v79);
      int8x16_t v416 = vbslq_s8(v147, v144, v80);
      int8x16_t v419 = vbslq_s8(v147, v379, v390);
      int8x16_t v420 = vbslq_s8(v147, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v152, vsubq_s16(v151, v132)), (int16x8_t)v127), v134), v387);
      int8x16_t v417 = vbslq_s8(v147, v135, v66);
      int8x16_t v418 = vbslq_s8(v147, v127, v55);
      int8x16_t v411 = vbslq_s8(v147, (int8x16_t)vsubq_s16((int16x8_t)v411, (int16x8_t)vqtbl1q_s8(v411, (int8x16_t)xmmword_242EA76C0)), v411);
      int8x16_t v412 = vbslq_s8(v147, v150, v75);
    }
    if (a5 > 1)
    {
      int8x16_t v178 = (int8x16_t)vsubq_s16((int16x8_t)v396.val[0], (int16x8_t)vqtbl2q_s8(v396, (int8x16_t)xmmword_242EA7570));
      int16x8_t v170 = vsubq_s16((int16x8_t)v396.val[1], (int16x8_t)vqtbl2q_s8(v396, (int8x16_t)xmmword_242EA7620));
      v422.val[0] = (int8x16_t)v399;
      v422.val[1] = (int8x16_t)v394;
      v422.val[1].i32[3] = v396.val[1].i32[3];
      int16x8_t v171 = vsubq_s16(v399, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7590));
      int16x8_t v172 = vsubq_s16(v394, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7630));
      v422.val[0] = (int8x16_t)v400;
      v422.val[1] = (int8x16_t)v397;
      v422.val[1].i32[3] = v396.val[1].i32[3];
      int16x8_t v173 = vsubq_s16(v400, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7640));
      int16x8_t v174 = vsubq_s16(v397, (int16x8_t)vqtbl2q_s8(v422, (int8x16_t)xmmword_242EA7570));
      v421.val[0] = (int8x16_t)v5;
      v421.val[1] = (int8x16_t)v395;
      v421.val[1].i32[3] = v396.val[1].i32[3];
      int16x8_t v175 = vsubq_s16(v5, (int16x8_t)vqtbl2q_s8(v421, (int8x16_t)xmmword_242EA7650));
      int16x8_t v176 = vsubq_s16(v395, (int16x8_t)vqtbl2q_s8(v421, (int8x16_t)xmmword_242EA7570));
      int8x16_t v177 = (int8x16_t)v170;
      v177.i32[3] = v178.i32[0];
      v178.i32[0] = v170.i32[3];
      int16x8_t v179 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v178, (int16x8_t)v177), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v180 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v178, (int16x8_t)v177), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v181 = vpmaxq_s16(v179, v179);
      int16x8_t v182 = vpminq_s16(v180, v180);
      int16x8_t v183 = vpmaxq_s16(v181, v181);
      int16x8_t v184 = vpminq_s16(v182, v182);
      v185.i64[0] = 0x8000800080008000;
      v185.i64[1] = 0x8000800080008000;
      int16x8_t v186 = vmaxq_s16(v183, v185);
      v421.val[0].i64[0] = 0x8000800080008000;
      v421.val[0].i64[1] = 0x8000800080008000;
      int8x16_t v187 = (int8x16_t)vzip1q_s16(v183, v184);
      v421.val[1] = (int8x16_t)vceqzq_s16((int16x8_t)v187);
      int16x8_t v188 = vclsq_s16((int16x8_t)v187);
      v187.i64[0] = 0x10001000100010;
      v187.i64[1] = 0x10001000100010;
      v421.val[1] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v187, v188), v421.val[1]);
      v421.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v421.val[1], (int16x8_t)v421.val[1]);
      int16x8_t v189 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v171, v172), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vminq_s16(v171, v172), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v190 = vpmaxq_s16(v189, v189);
      v422.val[0] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v191 = vpmaxq_s16(v190, v190);
      v422.val[0] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      int16x8_t v192 = vmaxq_s16(v186, v191);
      v421.val[0] = (int8x16_t)vminq_s16(vminq_s16(v184, (int16x8_t)v421.val[0]), (int16x8_t)v422.val[0]);
      int16x8_t v193 = vzip1q_s16(v191, (int16x8_t)v422.val[0]);
      int16x8_t v194 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v187, vclsq_s16(v193)), (int8x16_t)vceqzq_s16(v193));
      int16x8_t v195 = vpmaxq_s16(v194, v194);
      v422.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16(v173, v174), (int8x16_t)xmmword_242EA76D0);
      v422.val[1] = vqtbl1q_s8((int8x16_t)vminq_s16(v173, v174), (int8x16_t)xmmword_242EA76D0);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      int16x8_t v196 = vmaxq_s16(v192, (int16x8_t)v422.val[0]);
      v421.val[0] = (int8x16_t)vminq_s16((int16x8_t)v421.val[0], (int16x8_t)v422.val[1]);
      v422.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[1]);
      v422.val[0] = vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v187, vclsq_s16((int16x8_t)v422.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v422.val[0]));
      v422.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v422.val[0]);
      v422.val[1] = vqtbl1q_s8((int8x16_t)vmaxq_s16(v175, v176), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v197 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v175, v176), (int8x16_t)xmmword_242EA76D0);
      v422.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      int16x8_t v198 = vpminq_s16(v197, v197);
      v422.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v422.val[1], (int16x8_t)v422.val[1]);
      int16x8_t v199 = vpminq_s16(v198, v198);
      int16x8_t v200 = vmaxq_s16(v196, (int16x8_t)v422.val[1]);
      int16x8_t v201 = vminq_s16((int16x8_t)v421.val[0], v199);
      int16x8_t v202 = vzip1q_s16((int16x8_t)v422.val[1], v199);
      int16x8_t v203 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v187, vclsq_s16(v202)), (int8x16_t)vceqzq_s16(v202));
      int8x16_t v204 = (int8x16_t)vpmaxq_s16(v203, v203);
      v421.val[0] = (int8x16_t)vmaxq_s16(vmaxq_s16((int16x8_t)v421.val[1], v195), vmaxq_s16((int16x8_t)v422.val[0], (int16x8_t)v204));
      int8x16_t v393 = (int8x16_t)v201;
      int16x8_t v205 = vclzq_s16(vsubq_s16(v200, v201));
      v422.val[1] = (int8x16_t)vsubq_s16((int16x8_t)v187, v205);
      int8x16_t v206 = (int8x16_t)vcgtq_s16((int16x8_t)v421.val[0], (int16x8_t)v422.val[1]);
      int8x16_t v207 = vbslq_s8(v206, v422.val[1], v421.val[0]);
      v421.val[0] = (int8x16_t)vsubq_s16((int16x8_t)v207, (int16x8_t)v421.val[1]);
      v421.val[1].i64[0] = 0x3000300030003;
      v421.val[1].i64[1] = 0x3000300030003;
      v421.val[0] = (int8x16_t)vmaxq_s16(vminq_s16((int16x8_t)v421.val[0], (int16x8_t)v421.val[1]), (int16x8_t)0);
      int16x8_t v208 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v207, v195), (int16x8_t)v421.val[1]), (int16x8_t)0);
      v422.val[0] = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v207, (int16x8_t)v422.val[0]), (int16x8_t)v421.val[1]), (int16x8_t)0);
      int16x8_t v209 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v207, (int16x8_t)v204), (int16x8_t)v421.val[1]), (int16x8_t)0);
      int16x8_t v210 = vsubq_s16((int16x8_t)v207, (int16x8_t)v421.val[0]);
      v204.i64[0] = 0x4000400040004;
      v204.i64[1] = 0x4000400040004;
      int8x16_t v211 = vbicq_s8(v204, (int8x16_t)vceqq_s16(vaddq_s16(v209, (int16x8_t)v422.val[0]), vnegq_s16(vaddq_s16((int16x8_t)v421.val[0], v208))));
      v421.val[0].i64[0] = 0x7000700070007;
      v421.val[0].i64[1] = 0x7000700070007;
      int8x16_t v389 = (int8x16_t)vsubq_s16((int16x8_t)v207, (int16x8_t)v422.val[0]);
      int8x16_t v391 = (int8x16_t)vsubq_s16((int16x8_t)v207, v209);
      int8x16_t v386 = (int8x16_t)vsubq_s16((int16x8_t)v207, v208);
      int8x16_t v388 = (int8x16_t)v210;
      int16x8_t v212 = vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v422.val[1], v206), v210, (int16x8_t)v421.val[0]), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v389, (int16x8_t)v386), (int16x8_t)v391), 3uLL)), vaddq_s16((int16x8_t)v211, (int16x8_t)v211));
      v204.i64[0] = 0x8000800080008;
      v204.i64[1] = 0x8000800080008;
      int8x16_t v167 = v412;
      int16x8_t v166 = (int16x8_t)v413;
      int16x8_t v156 = (int16x8_t)v416;
      int8x16_t v155 = v417;
      v213.i64[0] = 0x2000200020002;
      v213.i64[1] = 0x2000200020002;
      int16x8_t v153 = (int16x8_t)v414;
      int16x8_t v154 = (int16x8_t)v415;
      int8x16_t v214 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16((int16x8_t)vbicq_s8(v417, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v412, v204))), (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v167, (int16x8_t)v167), v204)), (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v412, v421.val[1]), (int16x8_t)v213),
                                                                      v187)),
                                                       (int16x8_t)v413,
                                                       (int16x8_t)v421.val[0]),
                                                     vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v415, (int16x8_t)v414), (int16x8_t)v416), 3uLL)), v212), 0);
      int8x16_t v157 = v420;
      int16x8_t v159 = (int16x8_t)v401;
      int16x8_t v158 = (int16x8_t)v403;
      int16x8_t v161 = v405;
      int16x8_t v160 = (int16x8_t)v406;
      int16x8_t v163 = (int16x8_t)v407;
      int16x8_t v162 = (int16x8_t)v408;
      int16x8_t v165 = (int16x8_t)v409;
      int16x8_t v164 = (int16x8_t)v410;
      if (vaddvq_s16((int16x8_t)v214))
      {
        int8x16_t v384 = (int8x16_t)v200;
        int8x16_t v385 = (int8x16_t)v176;
        int8x16_t v215 = (int8x16_t)v175;
        int8x16_t v216 = (int8x16_t)v172;
        int8x16_t v217 = (int8x16_t)v171;
        v218.i64[0] = 0x9000900090009;
        v218.i64[1] = 0x9000900090009;
        int8x16_t v219 = (int8x16_t)v174;
        int8x16_t v220 = (int8x16_t)v173;
        v221.i64[0] = -1;
        v221.i64[1] = -1;
        int8x16_t v222 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v207), v213), (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v206, v218), (int16x8_t)vmvnq_s8(v206))), v211);
        v223.i64[0] = 0xF000F000F000FLL;
        v223.i64[1] = 0xF000F000F000FLL;
        int16x8_t v159 = (int16x8_t)vbslq_s8(v214, v178, v401);
        int16x8_t v158 = (int16x8_t)vbslq_s8(v214, v177, v403);
        int16x8_t v161 = (int16x8_t)vbslq_s8(v214, v217, (int8x16_t)v405);
        int16x8_t v160 = (int16x8_t)vbslq_s8(v214, v216, v406);
        int16x8_t v163 = (int16x8_t)vbslq_s8(v214, v220, v407);
        int16x8_t v162 = (int16x8_t)vbslq_s8(v214, v219, v408);
        int16x8_t v165 = (int16x8_t)vbslq_s8(v214, v215, v409);
        int16x8_t v164 = (int16x8_t)vbslq_s8(v214, v385, v410);
        int16x8_t v166 = (int16x8_t)vbslq_s8(v214, v388, v413);
        int16x8_t v153 = (int16x8_t)vbslq_s8(v214, v386, v414);
        int16x8_t v154 = (int16x8_t)vbslq_s8(v214, v389, v415);
        int16x8_t v156 = (int16x8_t)vbslq_s8(v214, v391, v416);
        int8x16_t v157 = vbslq_s8(v214, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v221, vsubq_s16(v223, v205)), (int16x8_t)v393), v206), v420);
        int8x16_t v155 = vbslq_s8(v214, v207, v417);
        int8x16_t v167 = vbslq_s8(v214, v222, v412);
        int8x16_t v411 = vbslq_s8(v214, vextq_s8(v396.val[1], v396.val[1], 0xCuLL), v411);
        int8x16_t v412 = v167;
        int8x16_t v418 = vbslq_s8(v214, v393, v418);
        int8x16_t v419 = vbslq_s8(v214, v384, v419);
        int8x16_t v413 = (int8x16_t)v166;
        int8x16_t v414 = (int8x16_t)v153;
        int8x16_t v415 = (int8x16_t)v154;
        int8x16_t v416 = (int8x16_t)v156;
        int8x16_t v420 = v157;
        int8x16_t v417 = v155;
      }
    }
    else
    {
      int16x8_t v153 = (int16x8_t)v414;
      int16x8_t v154 = (int16x8_t)v415;
      int16x8_t v156 = (int16x8_t)v416;
      int8x16_t v155 = v417;
      int8x16_t v157 = v420;
      int16x8_t v159 = (int16x8_t)v401;
      int16x8_t v158 = (int16x8_t)v403;
      int16x8_t v161 = v405;
      int16x8_t v160 = (int16x8_t)v406;
      int16x8_t v163 = (int16x8_t)v407;
      int16x8_t v162 = (int16x8_t)v408;
      int16x8_t v165 = (int16x8_t)v409;
      int16x8_t v164 = (int16x8_t)v410;
      int8x16_t v167 = v412;
      int16x8_t v166 = (int16x8_t)v413;
    }
    int16x8_t v224 = (int16x8_t)vandq_s8(v157, (int8x16_t)vceqq_s16((int16x8_t)v155, v166));
    int8x16_t v402 = (int8x16_t)vaddq_s16(v224, v159);
    int8x16_t v404 = (int8x16_t)vaddq_s16(v158, v224);
    int16x8_t v225 = (int16x8_t)vandq_s8(v157, (int8x16_t)vceqq_s16((int16x8_t)v155, v153));
    int16x8_t v405 = vaddq_s16(v161, v225);
    int8x16_t v406 = (int8x16_t)vaddq_s16(v160, v225);
    int16x8_t v226 = (int16x8_t)vandq_s8(v157, (int8x16_t)vceqq_s16((int16x8_t)v155, v154));
    int8x16_t v407 = (int8x16_t)vaddq_s16(v163, v226);
    int8x16_t v408 = (int8x16_t)vaddq_s16(v162, v226);
    int8x16_t v227 = vandq_s8(v157, (int8x16_t)vceqq_s16((int16x8_t)v155, v156));
    int8x16_t v409 = (int8x16_t)vaddq_s16(v165, (int16x8_t)v227);
    int8x16_t v410 = (int8x16_t)vaddq_s16(v164, (int16x8_t)v227);
    v227.i64[0] = 0x8000800080008;
    v227.i64[1] = 0x8000800080008;
    v228.i64[0] = 0x3000300030003;
    v228.i64[1] = 0x3000300030003;
    v229.i64[0] = 0x2000200020002;
    v229.i64[1] = 0x2000200020002;
    int8x16_t v230 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v167, v228), v229);
    v229.i64[0] = 0x10001000100010;
    v229.i64[1] = 0x10001000100010;
    int16x8_t v231 = (int16x8_t)vandq_s8(v230, (int8x16_t)v229);
    v229.i64[0] = 0x7000700070007;
    v229.i64[1] = 0x7000700070007;
    int16x8_t v232 = vaddq_s16(vmlaq_s16(vshlq_n_s16(vaddq_s16(v154, vaddq_s16(v153, v156)), 3uLL), v166, v229), vaddq_s16(vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v167, (int16x8_t)v167), v227), (int16x8_t)vbicq_s8(v155, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v167, v227)))), v231));
    if ((unint64_t)(vpaddq_s16(v232, v232).i16[0] + 57) > 0x3FF)
    {
      *(int8x16_t *)a1 = v396.val[0];
      *(int8x16_t *)(a1 + 16) = v396.val[1];
      *(int16x8_t *)(a1 + 32) = v399;
      *(int16x8_t *)(a1 + 48) = v394;
      *(int16x8_t *)(a1 + 64) = v400;
      *(int16x8_t *)(a1 + 80) = v397;
      char v236 = (int16x8_t *)(a1 + 96);
      char v168 = 127;
      unint64_t result = 128;
      *char v236 = v398;
      v236[1] = v395;
    }
    else
    {
      int8x16_t v233 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v234 = 8 * (a1 & 7);
      if (v234) {
        uint64_t v235 = *v233 & ~(-1 << v234);
      }
      else {
        uint64_t v235 = 0;
      }
      *a2 = 0;
      v237.i64[0] = v155.u16[1];
      v237.i64[1] = v155.u16[0];
      int64x2_t v238 = vshrq_n_s64(vshlq_n_s64(v237, 0x30uLL), 0x30uLL);
      int8x16_t v239 = vandq_s8(vbicq_s8((int8x16_t)vaddq_s64((int64x2_t)vshlq_u64((uint64x2_t)v238, (uint64x2_t)xmmword_242EA76E0), (int64x2_t)xmmword_242EA76F0), (int8x16_t)vceqzq_s64(v238)), (int8x16_t)xmmword_242EA76F0);
      unint64_t v240 = vorrq_s8(v239, (int8x16_t)vdupq_laneq_s64((int64x2_t)v239, 1)).u64[0] | v167.i8[0] & 0x1F | (32 * (v167.i8[2] & 0x1Fu));
      unint64_t v241 = v411.u32[0];
      unint64_t v242 = v235 | (v240 << v234);
      if (v234 >= 0x2E)
      {
        *int8x16_t v233 = v242;
        unint64_t v242 = v240 >> (-8 * (a1 & 7u));
      }
      unint64_t v243 = (v234 + 18) & 0x3A;
      unint64_t v244 = v242 | (v241 << v243);
      if (v243 >= 0x20)
      {
        *(void *)((char *)v233 + (((v234 + 18) >> 3) & 8)) = v244;
        unint64_t v244 = v241 >> -(char)v243;
      }
      unint64_t v245 = v234 + 50;
      int8x16_t v246 = (int8x16_t)vsubq_s16((int16x8_t)v417, (int16x8_t)v413);
      int8x16_t v247 = (int8x16_t)vsubq_s16((int16x8_t)v417, (int16x8_t)v414);
      int8x16_t v248 = (int8x16_t)vsubq_s16((int16x8_t)v417, (int16x8_t)v415);
      int8x16_t v249 = (int8x16_t)vsubq_s16((int16x8_t)v417, (int16x8_t)v416);
      *(uint8x8_t *)v246.i8 = vqmovn_u16((uint16x8_t)v246);
      *(uint8x8_t *)v247.i8 = vqmovn_u16((uint16x8_t)v247);
      *(uint8x8_t *)v248.i8 = vqmovn_u16((uint16x8_t)v248);
      *(uint8x8_t *)v249.i8 = vqmovn_u16((uint16x8_t)v249);
      v249.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v246, v247), (int16x8_t)vzip1q_s8(v248, v249)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v246, v247), (int16x8_t)vtrn2q_s8(v248, v249))).u64[0];
      v247.i64[0] = 0x202020202020202;
      v247.i64[1] = 0x202020202020202;
      int8x16_t v250 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v412.i8, (int8x8_t)0x4000400040004)))), v247);
      v247.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v247.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v248.i64[0] = -1;
      v248.i64[1] = -1;
      uint8x16_t v251 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v248, (uint8x16_t)vorrq_s8(v250, v247)), (int8x16_t)v249.u64[0]);
      int16x8_t v252 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v250.i8);
      uint16x8_t v253 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v251.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v252)), (int16x8_t)vmovl_high_u8(v251));
      uint16x8_t v254 = (uint16x8_t)vpaddq_s16(v252, (int16x8_t)vmovl_high_u8((uint8x16_t)v250));
      int32x4_t v255 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v254.i8);
      int32x4_t v256 = (int32x4_t)vmovl_high_u16(v254);
      int32x4_t v257 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v253.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v255)), (int32x4_t)vshlq_u32(vmovl_high_u16(v253), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v256)));
      int32x4_t v258 = vpaddq_s32(v255, v256);
      v259.i64[0] = v257.u32[0];
      v259.i64[1] = v257.u32[1];
      uint64x2_t v260 = (uint64x2_t)v259;
      v259.i64[0] = v257.u32[2];
      v259.i64[1] = v257.u32[3];
      uint64x2_t v261 = (uint64x2_t)v259;
      v259.i64[0] = v258.u32[0];
      v259.i64[1] = v258.u32[1];
      int64x2_t v262 = v259;
      v259.i64[0] = v258.u32[2];
      v259.i64[1] = v258.u32[3];
      int64x2_t v263 = vpaddq_s64((int64x2_t)vshlq_u64(v260, (uint64x2_t)vzip1q_s64((int64x2_t)0, v262)), (int64x2_t)vshlq_u64(v261, (uint64x2_t)vzip1q_s64((int64x2_t)0, v259)));
      int64x2_t v264 = vpaddq_s64(v262, v259);
      uint64_t v265 = (v234 + 50) & 0x3A;
      unint64_t v266 = (v263.i64[0] << v265) | v244;
      if ((unint64_t)(v264.i64[0] + v265) >= 0x40)
      {
        *(void *)((char *)v233 + ((v245 >> 3) & 8)) = v266;
        unint64_t v266 = (unint64_t)v263.i64[0] >> -(char)v265;
      }
      unint64_t v267 = v264.i64[0] + v245;
      unint64_t v268 = v266 | (v263.i64[1] << v267);
      if ((v267 & 0x3F) + v264.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v267 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v268;
        unint64_t v268 = (unint64_t)v263.i64[1] >> -(v267 & 0x3F);
        if ((v267 & 0x3F) == 0) {
          unint64_t v268 = 0;
        }
      }
      unint64_t v269 = v267 + v264.i64[1];
      v270.i64[0] = 0x8000800080008;
      v270.i64[1] = 0x8000800080008;
      v271.i64[0] = -1;
      v271.i64[1] = -1;
      int16x8_t v272 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v412, v270), (int8x16_t)0, 0xCuLL), v417);
      v273.i64[0] = 0xF000F000F000FLL;
      v273.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v274 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v271, (uint16x8_t)vaddq_s16(v272, v273)), v420);
      int32x4_t v275 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v272.i8);
      int32x4_t v276 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v274.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v275)), (int32x4_t)vmovl_high_u16(v274));
      int32x4_t v277 = vpaddq_s32(v275, (int32x4_t)vmovl_high_u16((uint16x8_t)v272));
      v278.i64[0] = v276.u32[0];
      v278.i64[1] = v276.u32[1];
      uint64x2_t v279 = (uint64x2_t)v278;
      v278.i64[0] = v276.u32[2];
      v278.i64[1] = v276.u32[3];
      uint64x2_t v280 = (uint64x2_t)v278;
      v278.i64[0] = v277.u32[0];
      v278.i64[1] = v277.u32[1];
      int64x2_t v281 = v278;
      v278.i64[0] = v277.u32[2];
      v278.i64[1] = v277.u32[3];
      int64x2_t v282 = vpaddq_s64((int64x2_t)vshlq_u64(v279, (uint64x2_t)vzip1q_s64((int64x2_t)0, v281)), (int64x2_t)vshlq_u64(v280, (uint64x2_t)vzip1q_s64((int64x2_t)0, v278)));
      int64x2_t v283 = vpaddq_s64(v281, v278);
      unint64_t v284 = (v282.i64[0] << v269) | v268;
      if (v283.i64[0] + (v269 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v233 + ((v269 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v284;
        unint64_t v284 = (unint64_t)v282.i64[0] >> -(v269 & 0x3F);
        if ((v269 & 0x3F) == 0) {
          unint64_t v284 = 0;
        }
      }
      unint64_t v285 = v283.i64[0] + v269;
      unint64_t v286 = v284 | (v282.i64[1] << v285);
      if ((v285 & 0x3F) + v283.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v285 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v286;
        unint64_t v286 = (unint64_t)v282.i64[1] >> -(v285 & 0x3F);
        if ((v285 & 0x3F) == 0) {
          unint64_t v286 = 0;
        }
      }
      unint64_t v287 = v285 + v283.i64[1];
      int16x8_t v288 = (int16x8_t)vextq_s8((int8x16_t)0, v413, 0xCuLL);
      v289.i64[0] = 0xF000F000F000FLL;
      v289.i64[1] = 0xF000F000F000FLL;
      v290.i64[0] = -1;
      v290.i64[1] = -1;
      uint16x8_t v291 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v290, (uint16x8_t)vaddq_s16(v288, v289)), v402);
      int32x4_t v292 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v288.i8);
      int32x4_t v293 = (int32x4_t)vmovl_high_u16((uint16x8_t)v288);
      int32x4_t v294 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v291.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v292)), (int32x4_t)vshlq_u32(vmovl_high_u16(v291), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v293)));
      int32x4_t v295 = vpaddq_s32(v292, v293);
      v296.i64[0] = v294.u32[0];
      v296.i64[1] = v294.u32[1];
      uint64x2_t v297 = (uint64x2_t)v296;
      v296.i64[0] = v294.u32[2];
      v296.i64[1] = v294.u32[3];
      uint64x2_t v298 = (uint64x2_t)v296;
      v296.i64[0] = v295.u32[0];
      v296.i64[1] = v295.u32[1];
      int64x2_t v299 = v296;
      v296.i64[0] = v295.u32[2];
      v296.i64[1] = v295.u32[3];
      int64x2_t v300 = vpaddq_s64((int64x2_t)vshlq_u64(v297, (uint64x2_t)vzip1q_s64((int64x2_t)0, v299)), (int64x2_t)vshlq_u64(v298, (uint64x2_t)vzip1q_s64((int64x2_t)0, v296)));
      int64x2_t v301 = vpaddq_s64(v299, v296);
      unint64_t v302 = (v300.i64[0] << v287) | v286;
      if (v301.i64[0] + (v287 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v233 + ((v287 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v302;
        unint64_t v302 = (unint64_t)v300.i64[0] >> -(v287 & 0x3F);
        if ((v287 & 0x3F) == 0) {
          unint64_t v302 = 0;
        }
      }
      unint64_t v303 = v301.i64[0] + v287;
      unint64_t v304 = v302 | (v300.i64[1] << v303);
      if ((v303 & 0x3F) + v301.i64[1] >= 0x40)
      {
        *(void *)((char *)v233 + ((v303 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v304;
        unint64_t v304 = (unint64_t)v300.i64[1] >> -(v303 & 0x3F);
        if ((v303 & 0x3F) == 0) {
          unint64_t v304 = 0;
        }
      }
      unint64_t v305 = v303 + v301.i64[1];
      v306.i64[0] = 0xF000F000F000FLL;
      v306.i64[1] = 0xF000F000F000FLL;
      v307.i64[0] = -1;
      v307.i64[1] = -1;
      uint16x8_t v308 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v307, (uint16x8_t)vaddq_s16((int16x8_t)v413, v306)), v404);
      int32x4_t v309 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v413.i8);
      int32x4_t v310 = (int32x4_t)vmovl_high_u16((uint16x8_t)v413);
      int32x4_t v311 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v308.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v309)), (int32x4_t)vshlq_u32(vmovl_high_u16(v308), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v310)));
      int32x4_t v312 = vpaddq_s32(v309, v310);
      v313.i64[0] = v311.u32[0];
      v313.i64[1] = v311.u32[1];
      uint64x2_t v314 = (uint64x2_t)v313;
      v313.i64[0] = v311.u32[2];
      v313.i64[1] = v311.u32[3];
      uint64x2_t v315 = (uint64x2_t)v313;
      v313.i64[0] = v312.u32[0];
      v313.i64[1] = v312.u32[1];
      int64x2_t v316 = v313;
      v313.i64[0] = v312.u32[2];
      v313.i64[1] = v312.u32[3];
      int64x2_t v317 = vpaddq_s64((int64x2_t)vshlq_u64(v314, (uint64x2_t)vzip1q_s64((int64x2_t)0, v316)), (int64x2_t)vshlq_u64(v315, (uint64x2_t)vzip1q_s64((int64x2_t)0, v313)));
      int64x2_t v318 = vpaddq_s64(v316, v313);
      unint64_t v319 = (v317.i64[0] << v305) | v304;
      if (v318.i64[0] + (v305 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v233 + ((v305 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v319;
        if ((v305 & 0x3F) != 0) {
          unint64_t v319 = (unint64_t)v317.i64[0] >> -(v305 & 0x3F);
        }
        else {
          unint64_t v319 = 0;
        }
      }
      uint64_t v320 = v318.i64[1];
      unint64_t v321 = v318.i64[0] + v305;
      uint64_t v322 = (v318.i64[0] + v305) & 0x3F;
      unint64_t v323 = v319 | (v317.i64[1] << v321);
      if ((unint64_t)(v322 + v318.i64[1]) >= 0x40)
      {
        *(void *)((char *)v233 + ((v321 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
        unint64_t v323 = (unint64_t)v317.i64[1] >> -(char)v322;
        if (!v322) {
          unint64_t v323 = 0;
        }
      }
      uint64_t v324 = 0;
      v325.i64[0] = 0xF000F000F000FLL;
      v325.i64[1] = 0xF000F000F000FLL;
      v326.i64[0] = -1;
      v326.i64[1] = -1;
      unint64_t v327 = v321 + v320;
      char v328 = 1;
      do
      {
        char v329 = v328;
        uint16x8_t v330 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v326, (uint16x8_t)vaddq_s16((int16x8_t)v414, v325)), *((int8x16_t *)&v405 + v324));
        int32x4_t v331 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v414.i8);
        int32x4_t v332 = (int32x4_t)vmovl_high_u16((uint16x8_t)v414);
        int32x4_t v333 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v330.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v331)), (int32x4_t)vshlq_u32(vmovl_high_u16(v330), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v332)));
        int32x4_t v334 = vpaddq_s32(v331, v332);
        v335.i64[0] = v333.u32[0];
        v335.i64[1] = v333.u32[1];
        uint64x2_t v336 = (uint64x2_t)v335;
        v335.i64[0] = v333.u32[2];
        v335.i64[1] = v333.u32[3];
        uint64x2_t v337 = (uint64x2_t)v335;
        v335.i64[0] = v334.u32[0];
        v335.i64[1] = v334.u32[1];
        int64x2_t v338 = v335;
        v335.i64[0] = v334.u32[2];
        v335.i64[1] = v334.u32[3];
        int64x2_t v339 = vpaddq_s64((int64x2_t)vshlq_u64(v336, (uint64x2_t)vzip1q_s64((int64x2_t)0, v338)), (int64x2_t)vshlq_u64(v337, (uint64x2_t)vzip1q_s64((int64x2_t)0, v335)));
        int64x2_t v340 = vpaddq_s64(v338, v335);
        unint64_t v341 = (v339.i64[0] << v327) | v323;
        if (v340.i64[0] + (v327 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v233 + ((v327 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v341;
          unint64_t v341 = (unint64_t)v339.i64[0] >> -(v327 & 0x3F);
          if ((v327 & 0x3F) == 0) {
            unint64_t v341 = 0;
          }
        }
        unint64_t v342 = v340.i64[0] + v327;
        unint64_t v323 = v341 | (v339.i64[1] << v342);
        if ((v342 & 0x3F) + v340.i64[1] >= 0x40)
        {
          *(void *)((char *)v233 + ((v342 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
          unint64_t v323 = (unint64_t)v339.i64[1] >> -(v342 & 0x3F);
          if ((v342 & 0x3F) == 0) {
            unint64_t v323 = 0;
          }
        }
        char v328 = 0;
        unint64_t v327 = v342 + v340.i64[1];
        uint64_t v324 = 1;
      }
      while ((v329 & 1) != 0);
      uint64_t v343 = 0;
      char v344 = 1;
      v345.i64[0] = 0xF000F000F000FLL;
      v345.i64[1] = 0xF000F000F000FLL;
      v346.i64[0] = -1;
      v346.i64[1] = -1;
      do
      {
        char v347 = v344;
        uint16x8_t v348 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v346, (uint16x8_t)vaddq_s16((int16x8_t)v415, v345)), *(&v407 + v343));
        int32x4_t v349 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v415.i8);
        int32x4_t v350 = (int32x4_t)vmovl_high_u16((uint16x8_t)v415);
        int32x4_t v351 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v348.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v349)), (int32x4_t)vshlq_u32(vmovl_high_u16(v348), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v350)));
        int32x4_t v352 = vpaddq_s32(v349, v350);
        v353.i64[0] = v351.u32[0];
        v353.i64[1] = v351.u32[1];
        uint64x2_t v354 = (uint64x2_t)v353;
        v353.i64[0] = v351.u32[2];
        v353.i64[1] = v351.u32[3];
        uint64x2_t v355 = (uint64x2_t)v353;
        v353.i64[0] = v352.u32[0];
        v353.i64[1] = v352.u32[1];
        int64x2_t v356 = v353;
        v353.i64[0] = v352.u32[2];
        v353.i64[1] = v352.u32[3];
        int64x2_t v357 = vpaddq_s64((int64x2_t)vshlq_u64(v354, (uint64x2_t)vzip1q_s64((int64x2_t)0, v356)), (int64x2_t)vshlq_u64(v355, (uint64x2_t)vzip1q_s64((int64x2_t)0, v353)));
        int64x2_t v358 = vpaddq_s64(v356, v353);
        unint64_t v359 = (v357.i64[0] << v327) | v323;
        if (v358.i64[0] + (v327 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v233 + ((v327 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v359;
          unint64_t v359 = (unint64_t)v357.i64[0] >> -(v327 & 0x3F);
          if ((v327 & 0x3F) == 0) {
            unint64_t v359 = 0;
          }
        }
        unint64_t v360 = v358.i64[0] + v327;
        unint64_t v323 = v359 | (v357.i64[1] << v360);
        if ((v360 & 0x3F) + v358.i64[1] >= 0x40)
        {
          *(void *)((char *)v233 + ((v360 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
          unint64_t v323 = (unint64_t)v357.i64[1] >> -(v360 & 0x3F);
          if ((v360 & 0x3F) == 0) {
            unint64_t v323 = 0;
          }
        }
        char v344 = 0;
        unint64_t v327 = v360 + v358.i64[1];
        uint64_t v343 = 1;
      }
      while ((v347 & 1) != 0);
      uint64_t v361 = 0;
      char v362 = 1;
      v363.i64[0] = 0xF000F000F000FLL;
      v363.i64[1] = 0xF000F000F000FLL;
      v364.i64[0] = -1;
      v364.i64[1] = -1;
      do
      {
        char v365 = v362;
        uint16x8_t v366 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v364, (uint16x8_t)vaddq_s16((int16x8_t)v416, v363)), *(&v409 + v361));
        int32x4_t v367 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v416.i8);
        int32x4_t v368 = (int32x4_t)vmovl_high_u16((uint16x8_t)v416);
        int32x4_t v369 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v366.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v367)), (int32x4_t)vshlq_u32(vmovl_high_u16(v366), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v368)));
        int32x4_t v370 = vpaddq_s32(v367, v368);
        v371.i64[0] = v369.u32[0];
        v371.i64[1] = v369.u32[1];
        uint64x2_t v372 = (uint64x2_t)v371;
        v371.i64[0] = v369.u32[2];
        v371.i64[1] = v369.u32[3];
        uint64x2_t v373 = (uint64x2_t)v371;
        v371.i64[0] = v370.u32[0];
        v371.i64[1] = v370.u32[1];
        int64x2_t v374 = v371;
        v371.i64[0] = v370.u32[2];
        v371.i64[1] = v370.u32[3];
        int64x2_t v375 = vpaddq_s64((int64x2_t)vshlq_u64(v372, (uint64x2_t)vzip1q_s64((int64x2_t)0, v374)), (int64x2_t)vshlq_u64(v373, (uint64x2_t)vzip1q_s64((int64x2_t)0, v371)));
        int64x2_t v376 = vpaddq_s64(v374, v371);
        unint64_t v377 = (v375.i64[0] << v327) | v323;
        if (v376.i64[0] + (v327 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v233 + ((v327 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v377;
          unint64_t v377 = (unint64_t)v375.i64[0] >> -(v327 & 0x3F);
          if ((v327 & 0x3F) == 0) {
            unint64_t v377 = 0;
          }
        }
        unint64_t v378 = v376.i64[0] + v327;
        unint64_t v323 = v377 | (v375.i64[1] << v378);
        if ((v378 & 0x3F) + v376.i64[1] >= 0x40)
        {
          *(void *)((char *)v233 + ((v378 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
          unint64_t v323 = (unint64_t)v375.i64[1] >> -(v378 & 0x3F);
          if ((v378 & 0x3F) == 0) {
            unint64_t v323 = 0;
          }
        }
        char v362 = 0;
        unint64_t v327 = v378 + v376.i64[1];
        uint64_t v361 = 1;
      }
      while ((v365 & 1) != 0);
      if ((v327 & 0x3F) != 0) {
        *(void *)((char *)v233 + ((v327 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v323;
      }
      unint64_t result = (v327 - v234 + 7) >> 3;
      char v168 = *a2 | (result - 1);
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    char v168 = 3;
    unint64_t result = 4;
  }
  *a2 = v168;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressMacroblock(uint64_t result, uint64_t a2, unint64_t a3, char *a4, int a5, int a6)
{
  unint64_t v9 = a3;
  uint64_t v11 = result;
  if (a5 >= 4) {
    unsigned int v12 = 4;
  }
  else {
    unsigned int v12 = a5;
  }
  if (a6 >= 2) {
    int v13 = 2;
  }
  else {
    int v13 = a6;
  }
  if (v12 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(a3, a4, result, a2, v12);
    v9 += result;
  }
  else
  {
    *a4 = 0;
  }
  uint64_t v14 = 2 * a2;
  int16x8_t v15 = a4 + 1;
  if (a6 <= 2) {
    int v16 = 2;
  }
  else {
    int v16 = a6;
  }
  unsigned int v17 = v16 - 2;
  if (v17 >= 2) {
    int v18 = 2;
  }
  else {
    int v18 = v17;
  }
  if (v12 && v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v15, v11 + v14, a2, v12);
    v9 += result;
  }
  else
  {
    *int16x8_t v15 = 0;
  }
  int16x8_t v19 = a4 + 2;
  if (a5 <= 4) {
    int v20 = 4;
  }
  else {
    int v20 = a5;
  }
  unsigned int v21 = v20 - 4;
  if (v21 >= 4) {
    int v22 = 4;
  }
  else {
    int v22 = v21;
  }
  if (v22 && v13)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v19, v11 + 64, a2, v22);
    v9 += result;
    int16x8_t v23 = a4 + 3;
  }
  else
  {
    *int16x8_t v19 = 0;
    int16x8_t v23 = a4 + 3;
    if (!v22) {
      goto LABEL_33;
    }
  }
  if (v18)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v23, v11 + v14 + 64, a2, v22);
    v9 += result;
    goto LABEL_34;
  }
LABEL_33:
  *int16x8_t v23 = 0;
LABEL_34:
  int16x8_t v24 = a4 + 4;
  if (a6 <= 4) {
    int v25 = 4;
  }
  else {
    int v25 = a6;
  }
  unsigned int v26 = v25 - 4;
  if (v26 >= 2) {
    int v27 = 2;
  }
  else {
    int v27 = v26;
  }
  if (v12 && v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v24, v11 + 4 * a2, a2, v12);
    v9 += result;
  }
  else
  {
    *int16x8_t v24 = 0;
  }
  int16x8_t v28 = a4 + 5;
  if (a6 <= 6) {
    int v29 = 6;
  }
  else {
    int v29 = a6;
  }
  unsigned int v30 = v29 - 6;
  if (v30 >= 2) {
    int v31 = 2;
  }
  else {
    int v31 = v30;
  }
  if (v12 && v31)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v28, v11 + 6 * a2, a2, v12);
    v9 += result;
    int16x8_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  else
  {
    *int16x8_t v28 = 0;
    int16x8_t v32 = a4 + 6;
    if (!v22) {
      goto LABEL_57;
    }
  }
  if (v27)
  {
    unint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v32, v11 + 4 * a2 + 64, a2, v22);
    v9 += result;
    int16x8_t v33 = a4 + 7;
    goto LABEL_58;
  }
LABEL_57:
  *int16x8_t v32 = 0;
  int16x8_t v33 = a4 + 7;
  if (!v22)
  {
LABEL_62:
    char *v33 = 0;
    return result;
  }
LABEL_58:
  if (!v31) {
    goto LABEL_62;
  }

  return AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,4u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)0>::compressSubblock(v9, v33, v11 + 6 * a2 + 64, a2, v22);
}

uint64_t AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)3>::computeDquadMode(unsigned int a1, unsigned int a2, int a3, int a4)
{
  int v4 = 1;
  int v5 = a2;
  switch(a1)
  {
    case 2u:
      BOOL v6 = a2 == 1;
      goto LABEL_14;
    case 8u:
      break;
    case 0xAu:
      if (a2 - 1 >= 3) {
        int v5 = a2;
      }
      else {
        int v5 = 3;
      }
      goto LABEL_18;
    case 0xCu:
      if (a2 - 1 >= 4) {
        int v5 = a2;
      }
      else {
        int v5 = 4;
      }
      int v4 = -2;
      break;
    case 0x10u:
      BOOL v6 = a4 == 0xFFFF && a2 == 1;
LABEL_14:
      if (v6) {
        int v5 = 2;
      }
      else {
        int v5 = a2;
      }
      goto LABEL_18;
    case 0x20u:
      int v5 = (a2 & 1) + (a2 >> 1);
LABEL_18:
      int v4 = -1;
      break;
    default:
      int v4 = 0;
      int v5 = a2;
      break;
  }
  unsigned int v7 = (v5 + v4) & ~((v5 + v4) >> 31);
  BOOL v8 = ~(-1 << a1) != a3 || a1 > 0xB;
  if (!a3) {
    BOOL v8 = 0;
  }
  if (v7 > 2) {
    BOOL v8 = v7;
  }
  if (a1 - 8 <= 4) {
    unsigned int v9 = v8;
  }
  else {
    unsigned int v9 = v7;
  }
  if (a2) {
    return v7;
  }
  else {
    return v9;
  }
}

unint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int64x2_t v8 = *(int64x2_t *)(a3 + 16);
  unsigned int v7 = (int64x2_t *)(a3 + 2 * a4);
  int64x2_t v9 = *(int64x2_t *)(a3 + a4);
  int64x2_t v10 = *(int64x2_t *)(a3 + a4 + 16);
  int16x8_t v11 = (int16x8_t)vzip1q_s64(*(int64x2_t *)a3, v9);
  int8x16_t v12 = (int8x16_t)vzip2q_s64(*(int64x2_t *)a3, v9);
  int16x8_t v13 = (int16x8_t)vzip1q_s64(v8, v10);
  int16x8_t v14 = (int16x8_t)vzip2q_s64(v8, v10);
  int64x2_t v16 = *v7;
  int64x2_t v17 = v7[1];
  int16x8_t v15 = (int64x2_t *)((char *)v7 + a4);
  int64x2_t v18 = v15[1];
  int16x8_t v19 = (int16x8_t)vzip2q_s64(v16, *v15);
  int16x8_t v20 = (int16x8_t)vzip1q_s64(v17, v18);
  int16x8_t v21 = (int16x8_t)vzip2q_s64(v17, v18);
  int16x8_t v22 = (int16x8_t)vdupq_lane_s32(*(int32x2_t *)v11.i8, 0);
  int16x8_t v23 = vsubq_s16(v11, v22);
  int8x16_t v24 = (int8x16_t)vsubq_s16((int16x8_t)v12, v22);
  int16x8_t v416 = (int16x8_t)vzip1q_s64(v16, *v15);
  int16x8_t v25 = vsubq_s16(v416, v22);
  int8x16_t v26 = (int8x16_t)vsubq_s16(v19, v22);
  int16x8_t v420 = v13;
  int16x8_t v27 = vsubq_s16(v13, v22);
  int16x8_t v28 = vsubq_s16(v14, v22);
  int16x8_t v418 = v20;
  int16x8_t v29 = vsubq_s16(v20, v22);
  int8x16_t v30 = (int8x16_t)vsubq_s16(v21, v22);
  int16x8_t v31 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v23, (int16x8_t)v24), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v32 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v23, (int16x8_t)v24), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v33 = vpmaxq_s16(v31, v31);
  int16x8_t v34 = vpminq_s16(v32, v32);
  int16x8_t v35 = vpmaxq_s16(v33, v33);
  int16x8_t v36 = vpminq_s16(v34, v34);
  v37.i64[0] = 0x8000800080008000;
  v37.i64[1] = 0x8000800080008000;
  int16x8_t v38 = vmaxq_s16(v35, v37);
  v39.i64[0] = 0x8000800080008000;
  v39.i64[1] = 0x8000800080008000;
  int16x8_t v40 = vminq_s16(v36, v39);
  int16x8_t v41 = vzip1q_s16(v35, v36);
  v42.i64[0] = 0x10001000100010;
  v42.i64[1] = 0x10001000100010;
  int16x8_t v43 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v41)), (int8x16_t)vceqzq_s16(v41));
  int16x8_t v44 = vpmaxq_s16(v43, v43);
  int16x8_t v45 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v25, (int16x8_t)v26), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v46 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v25, (int16x8_t)v26), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v47 = vpmaxq_s16(v45, v45);
  int16x8_t v48 = vpminq_s16(v46, v46);
  int16x8_t v49 = vpmaxq_s16(v47, v47);
  int16x8_t v50 = vpminq_s16(v48, v48);
  int16x8_t v51 = vmaxq_s16(v38, v49);
  int16x8_t v52 = vminq_s16(v40, v50);
  int16x8_t v53 = vzip1q_s16(v49, v50);
  int16x8_t v54 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v53)), (int8x16_t)vceqzq_s16(v53));
  int16x8_t v55 = vpmaxq_s16(v54, v54);
  int16x8_t v56 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v27, v28), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v57 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v27, v28), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v58 = vpmaxq_s16(v56, v56);
  int16x8_t v59 = vpminq_s16(v57, v57);
  int16x8_t v60 = vpmaxq_s16(v58, v58);
  int16x8_t v61 = vpminq_s16(v59, v59);
  int16x8_t v62 = vmaxq_s16(v51, v60);
  int16x8_t v63 = vminq_s16(v52, v61);
  int16x8_t v64 = vzip1q_s16(v60, v61);
  int16x8_t v65 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v64)), (int8x16_t)vceqzq_s16(v64));
  int16x8_t v66 = vpmaxq_s16(v65, v65);
  int16x8_t v67 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v29, (int16x8_t)v30), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v68 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v29, (int16x8_t)v30), (int8x16_t)xmmword_242EA76D0);
  int16x8_t v69 = vpmaxq_s16(v67, v67);
  int16x8_t v70 = vpminq_s16(v68, v68);
  int16x8_t v71 = vpmaxq_s16(v69, v69);
  int16x8_t v72 = vpminq_s16(v70, v70);
  int16x8_t v73 = vmaxq_s16(v62, v71);
  int8x16_t v74 = (int8x16_t)vminq_s16(v63, v72);
  int16x8_t v75 = vzip1q_s16(v71, v72);
  int16x8_t v76 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v75)), (int8x16_t)vceqzq_s16(v75));
  int16x8_t v77 = vpmaxq_s16(v76, v76);
  int8x16_t v78 = (int8x16_t)vmaxq_s16(vmaxq_s16(v44, v55), vmaxq_s16(v66, v77));
  int16x8_t v79 = vclzq_s16(vsubq_s16(v73, (int16x8_t)v74));
  int8x16_t v80 = (int8x16_t)vsubq_s16((int16x8_t)v42, v79);
  int8x16_t v81 = (int8x16_t)vcgtq_s16((int16x8_t)v78, (int16x8_t)v80);
  int8x16_t v82 = vbslq_s8(v81, v80, v78);
  v78.i64[0] = 0x8000800080008;
  v78.i64[1] = 0x8000800080008;
  int8x16_t v83 = vandq_s8(v81, v78);
  v84.i64[0] = 0x3000300030003;
  v84.i64[1] = 0x3000300030003;
  int16x8_t v85 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v82, v44), (int16x8_t)v84), (int16x8_t)0);
  int16x8_t v86 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v82, v55), (int16x8_t)v84), (int16x8_t)0);
  int16x8_t v87 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v82, v66), (int16x8_t)v84), (int16x8_t)0);
  int16x8_t v88 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v82, v77), (int16x8_t)v84), (int16x8_t)0);
  v89.i64[0] = 0x4000400040004;
  v89.i64[1] = 0x4000400040004;
  int8x16_t v90 = vbicq_s8(v89, (int8x16_t)vceqq_s16(vaddq_s16(v88, v87), vnegq_s16(vaddq_s16(v85, v86))));
  int8x16_t v91 = vorrq_s8(v90, vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v82), v84), v83));
  int8x16_t v434 = v30;
  int8x16_t v435 = (int8x16_t)v22;
  int8x16_t v425 = (int8x16_t)v23;
  int8x16_t v427 = v24;
  int8x16_t v430 = v26;
  int8x16_t v431 = (int8x16_t)v27;
  int8x16_t v432 = (int8x16_t)v28;
  int8x16_t v433 = (int8x16_t)v29;
  v22.i64[0] = 0xF000F000F000FLL;
  v22.i64[1] = 0xF000F000F000FLL;
  int v92 = (unsigned __int16)vmaxvq_s16((int16x8_t)v82);
  v23.i64[0] = -1;
  v23.i64[1] = -1;
  int16x8_t v93 = vshlq_s16(v23, vsubq_s16(v22, v79));
  int8x16_t v429 = (int8x16_t)v25;
  int8x16_t v423 = (int8x16_t)v28;
  BOOL v95 = a5 < 4 || a6 < 2;
  int8x16_t v441 = v82;
  int8x16_t v442 = v74;
  int8x16_t v96 = vandq_s8((int8x16_t)vsubq_s16(v93, (int16x8_t)v74), v81);
  int8x16_t v443 = (int8x16_t)v73;
  int8x16_t v444 = v96;
  int8x16_t v97 = (int8x16_t)vsubq_s16((int16x8_t)v82, v85);
  int8x16_t v98 = (int8x16_t)vsubq_s16((int16x8_t)v82, v86);
  int8x16_t v437 = v97;
  int8x16_t v438 = v98;
  int8x16_t v99 = (int8x16_t)vsubq_s16((int16x8_t)v82, v87);
  int8x16_t v100 = (int8x16_t)vsubq_s16((int16x8_t)v82, v88);
  int8x16_t v439 = v99;
  int8x16_t v440 = v100;
  int8x16_t v436 = v91;
  if (v92)
  {
    int8x16_t v412 = v96;
    int8x16_t v413 = v91;
    int8x16_t v415 = (int8x16_t)v73;
    int16x8_t v404 = v19;
    int16x8_t v405 = v21;
    int16x8_t v406 = v14;
    int8x16_t v101 = (int8x16_t)vsubq_s16((int16x8_t)v425, (int16x8_t)vqtbl1q_s8(v425, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v102 = (int8x16_t)vsubq_s16((int16x8_t)v24, (int16x8_t)vqtbl1q_s8(v24, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v103 = (int8x16_t)vsubq_s16((int16x8_t)v429, (int16x8_t)vqtbl1q_s8(v429, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v104 = (int8x16_t)vsubq_s16((int16x8_t)v430, (int16x8_t)vqtbl1q_s8(v430, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v105 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v101, (int16x8_t)v102), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v106 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v101, (int16x8_t)v102), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v107 = vpmaxq_s16(v105, v105);
    int16x8_t v108 = vpminq_s16(v106, v106);
    int16x8_t v109 = vpmaxq_s16(v107, v107);
    int16x8_t v110 = vpminq_s16(v108, v108);
    v111.i64[0] = 0x8000800080008000;
    v111.i64[1] = 0x8000800080008000;
    int16x8_t v112 = vmaxq_s16(v109, v111);
    v113.i64[0] = 0x8000800080008000;
    v113.i64[1] = 0x8000800080008000;
    int16x8_t v114 = vminq_s16(v110, v113);
    int16x8_t v115 = vzip1q_s16(v109, v110);
    int16x8_t v116 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v115)), (int8x16_t)vceqzq_s16(v115));
    int16x8_t v117 = vpmaxq_s16(v116, v116);
    int16x8_t v118 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v103, (int16x8_t)v104), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v119 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v103, (int16x8_t)v104), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v120 = vpmaxq_s16(v118, v118);
    int16x8_t v121 = vpminq_s16(v119, v119);
    int16x8_t v122 = vpmaxq_s16(v120, v120);
    int16x8_t v123 = vpminq_s16(v121, v121);
    int16x8_t v124 = vmaxq_s16(v112, v122);
    int16x8_t v125 = vminq_s16(v114, v123);
    int16x8_t v126 = vzip1q_s16(v122, v123);
    int16x8_t v127 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v126)), (int8x16_t)vceqzq_s16(v126));
    int16x8_t v128 = vpmaxq_s16(v127, v127);
    int8x16_t v410 = (int8x16_t)vsubq_s16((int16x8_t)v432, (int16x8_t)vqtbl1q_s8(v432, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v411 = (int8x16_t)vsubq_s16((int16x8_t)v431, (int16x8_t)vqtbl1q_s8(v431, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v129 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v411, (int16x8_t)v410), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v130 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v411, (int16x8_t)v410), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v131 = vpmaxq_s16(v129, v129);
    int16x8_t v132 = vpminq_s16(v130, v130);
    int16x8_t v133 = vpmaxq_s16(v131, v131);
    int16x8_t v134 = vpminq_s16(v132, v132);
    int16x8_t v135 = vmaxq_s16(v124, v133);
    int16x8_t v136 = vminq_s16(v125, v134);
    int16x8_t v137 = vzip1q_s16(v133, v134);
    int16x8_t v138 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v137)), (int8x16_t)vceqzq_s16(v137));
    int16x8_t v139 = vpmaxq_s16(v138, v138);
    int8x16_t v408 = (int8x16_t)vsubq_s16((int16x8_t)v434, (int16x8_t)vqtbl1q_s8(v434, (int8x16_t)xmmword_242EA76C0));
    int8x16_t v409 = (int8x16_t)vsubq_s16((int16x8_t)v433, (int16x8_t)vqtbl1q_s8(v433, (int8x16_t)xmmword_242EA76C0));
    int16x8_t v140 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v409, (int16x8_t)v408), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v141 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v409, (int16x8_t)v408), (int8x16_t)xmmword_242EA76D0);
    int16x8_t v142 = vpmaxq_s16(v140, v140);
    int16x8_t v143 = vpminq_s16(v141, v141);
    int16x8_t v144 = vpmaxq_s16(v142, v142);
    int16x8_t v145 = vpminq_s16(v143, v143);
    int16x8_t v146 = vmaxq_s16(v135, v144);
    int8x16_t v147 = (int8x16_t)vminq_s16(v136, v145);
    int16x8_t v148 = vzip1q_s16(v144, v145);
    int16x8_t v149 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16((int16x8_t)v42, vclsq_s16(v148)), (int8x16_t)vceqzq_s16(v148));
    int16x8_t v150 = vpmaxq_s16(v149, v149);
    int8x16_t v151 = (int8x16_t)vmaxq_s16(vmaxq_s16(v117, v128), vmaxq_s16(v139, v150));
    int8x16_t v407 = (int8x16_t)v146;
    int16x8_t v152 = vclzq_s16(vsubq_s16(v146, (int16x8_t)v147));
    int8x16_t v153 = (int8x16_t)vsubq_s16((int16x8_t)v42, v152);
    int8x16_t v154 = (int8x16_t)vcgtq_s16((int16x8_t)v151, (int16x8_t)v153);
    int8x16_t v155 = vbslq_s8(v154, v153, v151);
    v153.i64[0] = 0x18001800180018;
    v153.i64[1] = 0x18001800180018;
    int8x16_t v156 = vbslq_s8(v154, v153, v42);
    int16x8_t v157 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v155, v117), (int16x8_t)v84), (int16x8_t)0);
    int16x8_t v158 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v155, v128), (int16x8_t)v84), (int16x8_t)0);
    int8x16_t v159 = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v155, v139), (int16x8_t)v84), (int16x8_t)0);
    int16x8_t v160 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v155, v150), (int16x8_t)v84), (int16x8_t)0);
    int8x16_t v161 = (int8x16_t)vsubq_s16((int16x8_t)v155, v157);
    int8x16_t v162 = (int8x16_t)vsubq_s16((int16x8_t)v155, v158);
    int8x16_t v163 = (int8x16_t)vsubq_s16((int16x8_t)v155, (int16x8_t)v159);
    int8x16_t v164 = (int8x16_t)vsubq_s16((int16x8_t)v155, v160);
    int8x16_t v165 = (int8x16_t)vceqq_s16(vaddq_s16(v160, (int16x8_t)v159), vnegq_s16(vaddq_s16(v157, v158)));
    v159.i64[0] = 0x4000400040004;
    v159.i64[1] = 0x4000400040004;
    int8x16_t v166 = vbicq_s8(v159, v165);
    v159.i64[0] = 0x7000700070007;
    v159.i64[1] = 0x7000700070007;
    int8x16_t v167 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v80, v81), (int16x8_t)v97, (int16x8_t)v159), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v99, (int16x8_t)v98), (int16x8_t)v100), 3uLL)), vaddq_s16((int16x8_t)v90, (int16x8_t)v90)), vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vbicq_s8(v155, (int8x16_t)vceqzq_s16((int16x8_t)(*(_OWORD *)&v156 & __PAIR128__(0xFFEFFFEFFFEFFFEFLL, 0xFFEFFFEFFFEFFFEFLL)))),
                                                       (int16x8_t)v161,
                                                       (int16x8_t)v159),
                                                     vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v163, (int16x8_t)v162), (int16x8_t)v164), 3uLL)), vaddq_s16((int16x8_t)v166, (int16x8_t)v166))), 0);
    if (vaddvq_s16((int16x8_t)v167))
    {
      int8x16_t v425 = vbslq_s8(v167, v101, v425);
      int8x16_t v427 = vbslq_s8(v167, v102, v427);
      v168.i64[0] = 0x3000300030003;
      v168.i64[1] = 0x3000300030003;
      int8x16_t v169 = vorrq_s8(vorrq_s8(vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v155), v168), v156), v166);
      v168.i64[0] = 0xF000F000F000FLL;
      v168.i64[1] = 0xF000F000F000FLL;
      v170.i64[0] = -1;
      v170.i64[1] = -1;
      int8x16_t v429 = vbslq_s8(v167, v103, v429);
      int8x16_t v430 = vbslq_s8(v167, v104, v26);
      int8x16_t v431 = vbslq_s8(v167, v411, v431);
      int8x16_t v432 = vbslq_s8(v167, v410, v423);
      int8x16_t v433 = vbslq_s8(v167, v409, v433);
      int8x16_t v434 = vbslq_s8(v167, v408, v30);
      int8x16_t v437 = vbslq_s8(v167, v161, v97);
      int8x16_t v438 = vbslq_s8(v167, v162, v98);
      int8x16_t v439 = vbslq_s8(v167, v163, v99);
      int8x16_t v440 = vbslq_s8(v167, v164, v100);
      int8x16_t v443 = vbslq_s8(v167, v407, v415);
      int8x16_t v444 = vbslq_s8(v167, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v170, vsubq_s16((int16x8_t)v168, v152)), (int16x8_t)v147), v154), v412);
      int8x16_t v441 = vbslq_s8(v167, v155, v82);
      int8x16_t v442 = vbslq_s8(v167, v147, v74);
      int8x16_t v435 = vbslq_s8(v167, (int8x16_t)vsubq_s16((int16x8_t)v435, (int16x8_t)vqtbl1q_s8(v435, (int8x16_t)xmmword_242EA76C0)), v435);
      int8x16_t v436 = vbslq_s8(v167, v169, v413);
    }
    if (v95)
    {
      int16x8_t v171 = (int16x8_t)v438;
      int16x8_t v172 = (int16x8_t)v439;
      int16x8_t v174 = (int16x8_t)v440;
      int8x16_t v173 = v441;
      int8x16_t v175 = v444;
      int16x8_t v176 = (int16x8_t)v425;
      int16x8_t v177 = (int16x8_t)v427;
      int16x8_t v179 = (int16x8_t)v429;
      int16x8_t v178 = (int16x8_t)v430;
      int16x8_t v181 = (int16x8_t)v431;
      int16x8_t v180 = (int16x8_t)v432;
      int16x8_t v183 = (int16x8_t)v433;
      int16x8_t v182 = (int16x8_t)v434;
      int8x16_t v184 = v436;
      int16x8_t v185 = (int16x8_t)v437;
    }
    else
    {
      int8x16_t v195 = (int8x16_t)vsubq_s16(v11, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7570));
      int16x8_t v187 = vsubq_s16((int16x8_t)v12, (int16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v11.i8, (int8x16_t)xmmword_242EA7620));
      v445.val[0] = (int8x16_t)v416;
      v445.val[1] = (int8x16_t)v404;
      v445.val[1].i32[3] = v12.i32[3];
      int8x16_t v188 = (int8x16_t)vsubq_s16(v416, (int16x8_t)vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7590));
      int8x16_t v189 = (int8x16_t)vsubq_s16(v404, (int16x8_t)vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7630));
      v445.val[0] = (int8x16_t)v420;
      v445.val[1] = (int8x16_t)v406;
      v445.val[1].i32[3] = v12.i32[3];
      int8x16_t v190 = (int8x16_t)vsubq_s16(v420, (int16x8_t)vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7640));
      int16x8_t v191 = vsubq_s16(v406, (int16x8_t)vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7570));
      v445.val[0] = (int8x16_t)v418;
      v445.val[1] = (int8x16_t)v405;
      v445.val[1].i32[3] = v12.i32[3];
      int16x8_t v192 = vsubq_s16(v418, (int16x8_t)vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7650));
      int16x8_t v193 = vsubq_s16(v405, (int16x8_t)vqtbl2q_s8(v445, (int8x16_t)xmmword_242EA7570));
      int8x16_t v194 = (int8x16_t)v187;
      v194.i32[3] = v195.i32[0];
      v195.i32[0] = v187.i32[3];
      int16x8_t v196 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v195, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v197 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v195, (int16x8_t)v194), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v198 = vpmaxq_s16(v196, v196);
      int16x8_t v199 = vpminq_s16(v197, v197);
      int8x16_t v200 = (int8x16_t)vpmaxq_s16(v198, v198);
      int16x8_t v201 = vpminq_s16(v199, v199);
      v202.i64[0] = 0x8000800080008000;
      v202.i64[1] = 0x8000800080008000;
      v203.i64[0] = 0x8000800080008000;
      v203.i64[1] = 0x8000800080008000;
      int16x8_t v204 = vminq_s16(v201, v203);
      int16x8_t v205 = vzip1q_s16((int16x8_t)v200, v201);
      v206.i64[0] = 0x10001000100010;
      v206.i64[1] = 0x10001000100010;
      int16x8_t v207 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v206, vclsq_s16(v205)), (int8x16_t)vceqzq_s16(v205));
      int16x8_t v208 = vpmaxq_s16(v207, v207);
      v445.val[0] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v188, (int16x8_t)v189), (int8x16_t)xmmword_242EA76D0);
      v445.val[1] = vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v188, (int16x8_t)v189), (int8x16_t)xmmword_242EA76D0);
      v445.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v445.val[0], (int16x8_t)v445.val[0]);
      v445.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v445.val[1], (int16x8_t)v445.val[1]);
      v445.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v445.val[0], (int16x8_t)v445.val[0]);
      v445.val[1] = (int8x16_t)vpminq_s16((int16x8_t)v445.val[1], (int16x8_t)v445.val[1]);
      int16x8_t v209 = vmaxq_s16(vmaxq_s16((int16x8_t)v200, v202), (int16x8_t)v445.val[0]);
      int16x8_t v210 = vminq_s16(v204, (int16x8_t)v445.val[1]);
      v445.val[0] = (int8x16_t)vzip1q_s16((int16x8_t)v445.val[0], (int16x8_t)v445.val[1]);
      v445.val[0] = vbicq_s8((int8x16_t)vsubq_s16(v206, vclsq_s16((int16x8_t)v445.val[0])), (int8x16_t)vceqzq_s16((int16x8_t)v445.val[0]));
      v445.val[0] = (int8x16_t)vpmaxq_s16((int16x8_t)v445.val[0], (int16x8_t)v445.val[0]);
      int8x16_t v422 = (int8x16_t)v192;
      int8x16_t v424 = (int8x16_t)v191;
      v445.val[1] = vqtbl1q_s8((int8x16_t)vmaxq_s16((int16x8_t)v190, v191), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v211 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16((int16x8_t)v190, v191), (int8x16_t)xmmword_242EA76D0);
      v445.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v445.val[1], (int16x8_t)v445.val[1]);
      int16x8_t v212 = vpminq_s16(v211, v211);
      v445.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v445.val[1], (int16x8_t)v445.val[1]);
      int16x8_t v213 = vpminq_s16(v212, v212);
      int16x8_t v214 = vmaxq_s16(v209, (int16x8_t)v445.val[1]);
      int16x8_t v215 = vminq_s16(v210, v213);
      v445.val[1] = (int8x16_t)vzip1q_s16((int16x8_t)v445.val[1], v213);
      v445.val[1] = vbicq_s8((int8x16_t)vsubq_s16(v206, vclsq_s16((int16x8_t)v445.val[1])), (int8x16_t)vceqzq_s16((int16x8_t)v445.val[1]));
      v445.val[1] = (int8x16_t)vpmaxq_s16((int16x8_t)v445.val[1], (int16x8_t)v445.val[1]);
      int16x8_t v216 = (int16x8_t)vqtbl1q_s8((int8x16_t)vmaxq_s16(v192, v193), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v217 = (int16x8_t)vqtbl1q_s8((int8x16_t)vminq_s16(v192, v193), (int8x16_t)xmmword_242EA76D0);
      int16x8_t v218 = vpmaxq_s16(v216, v216);
      int16x8_t v219 = vpminq_s16(v217, v217);
      int16x8_t v220 = vpmaxq_s16(v218, v218);
      int16x8_t v221 = vpminq_s16(v219, v219);
      int16x8_t v222 = vmaxq_s16(v214, v220);
      int8x16_t v223 = (int8x16_t)vminq_s16(v215, v221);
      int16x8_t v224 = vzip1q_s16(v220, v221);
      int16x8_t v225 = (int16x8_t)vbicq_s8((int8x16_t)vsubq_s16(v206, vclsq_s16(v224)), (int8x16_t)vceqzq_s16(v224));
      int16x8_t v226 = vpmaxq_s16(v225, v225);
      int8x16_t v227 = (int8x16_t)vmaxq_s16(vmaxq_s16(v208, (int16x8_t)v445.val[0]), vmaxq_s16((int16x8_t)v445.val[1], v226));
      int16x8_t v228 = vclzq_s16(vsubq_s16(v222, (int16x8_t)v223));
      int8x16_t v229 = (int8x16_t)vsubq_s16(v206, v228);
      int8x16_t v230 = (int8x16_t)vcgtq_s16((int16x8_t)v227, (int16x8_t)v229);
      int8x16_t v231 = vbslq_s8(v230, v229, v227);
      v227.i64[0] = 0x3000300030003;
      v227.i64[1] = 0x3000300030003;
      int16x8_t v232 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, v208), (int16x8_t)v227), (int16x8_t)0);
      v445.val[0] = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, (int16x8_t)v445.val[0]), (int16x8_t)v227), (int16x8_t)0);
      v445.val[1] = (int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, (int16x8_t)v445.val[1]), (int16x8_t)v227), (int16x8_t)0);
      int16x8_t v233 = vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v231, v226), (int16x8_t)v227), (int16x8_t)0);
      int16x8_t v234 = vsubq_s16((int16x8_t)v231, v232);
      int8x16_t v235 = (int8x16_t)vsubq_s16((int16x8_t)v231, v233);
      v200.i64[0] = 0x4000400040004;
      v200.i64[1] = 0x4000400040004;
      int8x16_t v236 = vbicq_s8(v200, (int8x16_t)vceqq_s16(vaddq_s16(v233, (int16x8_t)v445.val[1]), vnegq_s16(vaddq_s16(v232, (int16x8_t)v445.val[0]))));
      v237.i64[0] = 0x7000700070007;
      v237.i64[1] = 0x7000700070007;
      int8x16_t v421 = (int8x16_t)vsubq_s16((int16x8_t)v231, (int16x8_t)v445.val[1]);
      int8x16_t v417 = (int8x16_t)vsubq_s16((int16x8_t)v231, (int16x8_t)v445.val[0]);
      int8x16_t v419 = (int8x16_t)v234;
      int16x8_t v238 = vaddq_s16(vaddq_s16(vmlaq_s16((int16x8_t)vandq_s8(v229, v230), v234, v237), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v421, (int16x8_t)v417), (int16x8_t)v235), 3uLL)), vaddq_s16((int16x8_t)v236, (int16x8_t)v236));
      v445.val[0].i64[0] = 0x8000800080008;
      v445.val[0].i64[1] = 0x8000800080008;
      int8x16_t v184 = v436;
      int16x8_t v185 = (int16x8_t)v437;
      int16x8_t v174 = (int16x8_t)v440;
      int8x16_t v173 = v441;
      int16x8_t v239 = (int16x8_t)vbicq_s8(v441, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v436, v445.val[0])));
      int16x8_t v240 = (int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v184, (int16x8_t)v184), v445.val[0]);
      v241.i64[0] = 0x2000200020002;
      v241.i64[1] = 0x2000200020002;
      int16x8_t v242 = (int16x8_t)vandq_s8((int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v436, v227), (int16x8_t)v241), (int8x16_t)v206);
      int16x8_t v171 = (int16x8_t)v438;
      int16x8_t v172 = (int16x8_t)v439;
      int8x16_t v243 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_s16(vaddq_s16(vmlaq_s16(vaddq_s16(vaddq_s16(v239, v240), v242), (int16x8_t)v437, v237), vshlq_n_s16(vaddq_s16(vaddq_s16((int16x8_t)v439, (int16x8_t)v438), (int16x8_t)v440), 3uLL)), v238), 0);
      int8x16_t v175 = v444;
      int16x8_t v176 = (int16x8_t)v425;
      int16x8_t v177 = (int16x8_t)v427;
      int16x8_t v179 = (int16x8_t)v429;
      int16x8_t v178 = (int16x8_t)v430;
      int16x8_t v181 = (int16x8_t)v431;
      int16x8_t v180 = (int16x8_t)v432;
      int16x8_t v183 = (int16x8_t)v433;
      int16x8_t v182 = (int16x8_t)v434;
      if (vaddvq_s16((int16x8_t)v243))
      {
        int8x16_t v414 = (int8x16_t)v222;
        int8x16_t v244 = (int8x16_t)v193;
        int8x16_t v245 = vandq_s8((int8x16_t)vceqzq_s16((int16x8_t)v231), v241);
        v246.i64[0] = 0x9000900090009;
        v246.i64[1] = 0x9000900090009;
        int8x16_t v247 = vorrq_s8(vorrq_s8(v245, (int8x16_t)vsubq_s16((int16x8_t)vandq_s8(v230, v246), (int16x8_t)vmvnq_s8(v230))), v236);
        v245.i64[0] = 0xF000F000F000FLL;
        v245.i64[1] = 0xF000F000F000FLL;
        int16x8_t v248 = vsubq_s16((int16x8_t)v245, v228);
        v249.i64[0] = -1;
        v249.i64[1] = -1;
        int16x8_t v176 = (int16x8_t)vbslq_s8(v243, v195, v425);
        int16x8_t v177 = (int16x8_t)vbslq_s8(v243, v194, v427);
        int16x8_t v179 = (int16x8_t)vbslq_s8(v243, v188, v429);
        int16x8_t v178 = (int16x8_t)vbslq_s8(v243, v189, v430);
        int16x8_t v181 = (int16x8_t)vbslq_s8(v243, v190, v431);
        int16x8_t v180 = (int16x8_t)vbslq_s8(v243, v424, v432);
        int16x8_t v183 = (int16x8_t)vbslq_s8(v243, v422, v433);
        int16x8_t v182 = (int16x8_t)vbslq_s8(v243, v244, v434);
        int16x8_t v185 = (int16x8_t)vbslq_s8(v243, v419, v437);
        int16x8_t v171 = (int16x8_t)vbslq_s8(v243, v417, v438);
        int16x8_t v172 = (int16x8_t)vbslq_s8(v243, v421, v439);
        int16x8_t v174 = (int16x8_t)vbslq_s8(v243, v235, v440);
        int8x16_t v175 = vbslq_s8(v243, vandq_s8((int8x16_t)vsubq_s16(vshlq_s16(v249, v248), (int16x8_t)v223), v230), v444);
        int8x16_t v173 = vbslq_s8(v243, v231, v441);
        int8x16_t v184 = vbslq_s8(v243, v247, v436);
        int8x16_t v435 = vbslq_s8(v243, vextq_s8(v12, v12, 0xCuLL), v435);
        int8x16_t v436 = v184;
        int8x16_t v442 = vbslq_s8(v243, v223, v442);
        int8x16_t v443 = vbslq_s8(v243, v414, v443);
        int8x16_t v437 = (int8x16_t)v185;
        int8x16_t v438 = (int8x16_t)v171;
        int8x16_t v439 = (int8x16_t)v172;
        int8x16_t v440 = (int8x16_t)v174;
        int8x16_t v444 = v175;
        int8x16_t v441 = v173;
      }
    }
    int16x8_t v250 = (int16x8_t)vandq_s8(v175, (int8x16_t)vceqq_s16((int16x8_t)v173, v185));
    int8x16_t v426 = (int8x16_t)vaddq_s16(v250, v176);
    int8x16_t v428 = (int8x16_t)vaddq_s16(v177, v250);
    int16x8_t v251 = (int16x8_t)vandq_s8(v175, (int8x16_t)vceqq_s16((int16x8_t)v173, v171));
    int8x16_t v429 = (int8x16_t)vaddq_s16(v179, v251);
    int8x16_t v430 = (int8x16_t)vaddq_s16(v178, v251);
    int16x8_t v252 = (int16x8_t)vandq_s8(v175, (int8x16_t)vceqq_s16((int16x8_t)v173, v172));
    int8x16_t v431 = (int8x16_t)vaddq_s16(v181, v252);
    int8x16_t v432 = (int8x16_t)vaddq_s16(v180, v252);
    int8x16_t v253 = vandq_s8(v175, (int8x16_t)vceqq_s16((int16x8_t)v173, v174));
    int8x16_t v433 = (int8x16_t)vaddq_s16(v183, (int16x8_t)v253);
    int8x16_t v434 = (int8x16_t)vaddq_s16(v182, (int16x8_t)v253);
    v253.i64[0] = 0x8000800080008;
    v253.i64[1] = 0x8000800080008;
    v254.i64[0] = 0x3000300030003;
    v254.i64[1] = 0x3000300030003;
    v255.i64[0] = 0x2000200020002;
    v255.i64[1] = 0x2000200020002;
    int8x16_t v256 = (int8x16_t)vceqq_s16((int16x8_t)vandq_s8(v184, v254), v255);
    v255.i64[0] = 0x10001000100010;
    v255.i64[1] = 0x10001000100010;
    int16x8_t v257 = (int16x8_t)vandq_s8(v256, (int8x16_t)v255);
    v255.i64[0] = 0x7000700070007;
    v255.i64[1] = 0x7000700070007;
    int16x8_t v258 = vaddq_s16(vmlaq_s16(vshlq_n_s16(vaddq_s16(v172, vaddq_s16(v171, v174)), 3uLL), v185, v255), vaddq_s16(vaddq_s16((int16x8_t)vandq_s8((int8x16_t)vaddq_s16((int16x8_t)v184, (int16x8_t)v184), v253), (int16x8_t)vbicq_s8(v173, (int8x16_t)vceqzq_s16((int16x8_t)vandq_s8(v184, v253)))), v257));
    if ((unint64_t)(vpaddq_s16(v258, v258).i16[0] - 463) < 0xFFFFFFFFFFFFFDF8)
    {
      AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(a1, a2, a3, a4, a5, a6, a7);
      return 64;
    }
    else
    {
      int64x2_t v259 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v260 = 8 * (a1 & 7);
      if (v260) {
        uint64_t v261 = *v259 & ~(-1 << v260);
      }
      else {
        uint64_t v261 = 0;
      }
      *a2 = 0;
      v262.i64[0] = v173.u16[1];
      v262.i64[1] = v173.u16[0];
      int64x2_t v263 = vshrq_n_s64(vshlq_n_s64(v262, 0x30uLL), 0x30uLL);
      int8x16_t v264 = vandq_s8(vbicq_s8((int8x16_t)vaddq_s64((int64x2_t)vshlq_u64((uint64x2_t)v263, (uint64x2_t)xmmword_242EA76E0), (int64x2_t)xmmword_242EA76F0), (int8x16_t)vceqzq_s64(v263)), (int8x16_t)xmmword_242EA76F0);
      unint64_t v265 = vorrq_s8(v264, (int8x16_t)vdupq_laneq_s64((int64x2_t)v264, 1)).u64[0] | v184.i8[0] & 0x1F | (32 * (v184.i8[2] & 0x1Fu));
      unint64_t v266 = v435.u32[0];
      unint64_t v267 = v261 | (v265 << v260);
      if (v260 >= 0x2E)
      {
        *int64x2_t v259 = v267;
        unint64_t v267 = v265 >> (-8 * (a1 & 7u));
      }
      unint64_t v268 = (v260 + 18) & 0x3A;
      unint64_t v269 = v267 | (v266 << v268);
      if (v268 >= 0x20)
      {
        *(void *)((char *)v259 + (((v260 + 18) >> 3) & 8)) = v269;
        unint64_t v269 = v266 >> -(char)v268;
      }
      unint64_t v270 = v260 + 50;
      int8x16_t v271 = (int8x16_t)vsubq_s16((int16x8_t)v441, (int16x8_t)v437);
      int8x16_t v272 = (int8x16_t)vsubq_s16((int16x8_t)v441, (int16x8_t)v438);
      int8x16_t v273 = (int8x16_t)vsubq_s16((int16x8_t)v441, (int16x8_t)v439);
      int8x16_t v274 = (int8x16_t)vsubq_s16((int16x8_t)v441, (int16x8_t)v440);
      *(uint8x8_t *)v271.i8 = vqmovn_u16((uint16x8_t)v271);
      *(uint8x8_t *)v272.i8 = vqmovn_u16((uint16x8_t)v272);
      *(uint8x8_t *)v273.i8 = vqmovn_u16((uint16x8_t)v273);
      *(uint8x8_t *)v274.i8 = vqmovn_u16((uint16x8_t)v274);
      v274.i64[0] = vzip1q_s32((int32x4_t)vzip1q_s16((int16x8_t)vzip1q_s8(v271, v272), (int16x8_t)vzip1q_s8(v273, v274)), (int32x4_t)vzip1q_s16((int16x8_t)vtrn2q_s8(v271, v272), (int16x8_t)vtrn2q_s8(v273, v274))).u64[0];
      v272.i64[0] = 0x202020202020202;
      v272.i64[1] = 0x202020202020202;
      int8x16_t v275 = vandq_s8(vbicq_s8((int8x16_t)xmmword_242EA7390, (int8x16_t)vmovl_s16(vceqz_s16((int16x4_t)vand_s8(*(int8x8_t *)v436.i8, (int8x8_t)0x4000400040004)))), v272);
      v272.i64[0] = 0xF8F8F8F8F8F8F8F8;
      v272.i64[1] = 0xF8F8F8F8F8F8F8F8;
      v273.i64[0] = -1;
      v273.i64[1] = -1;
      uint8x16_t v276 = (uint8x16_t)vandq_s8((int8x16_t)vshlq_u8((uint8x16_t)v273, (uint8x16_t)vorrq_s8(v275, v272)), (int8x16_t)v274.u64[0]);
      int16x8_t v277 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v275.i8);
      uint16x8_t v278 = (uint16x8_t)vpaddq_s16((int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v276.i8), (uint16x8_t)vtrn1q_s16((int16x8_t)0, v277)), (int16x8_t)vmovl_high_u8(v276));
      uint16x8_t v279 = (uint16x8_t)vpaddq_s16(v277, (int16x8_t)vmovl_high_u8((uint8x16_t)v275));
      int32x4_t v280 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v279.i8);
      int32x4_t v281 = (int32x4_t)vmovl_high_u16(v279);
      int32x4_t v282 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v278.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v280)), (int32x4_t)vshlq_u32(vmovl_high_u16(v278), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v281)));
      int32x4_t v283 = vpaddq_s32(v280, v281);
      v284.i64[0] = v282.u32[0];
      v284.i64[1] = v282.u32[1];
      uint64x2_t v285 = (uint64x2_t)v284;
      v284.i64[0] = v282.u32[2];
      v284.i64[1] = v282.u32[3];
      uint64x2_t v286 = (uint64x2_t)v284;
      v284.i64[0] = v283.u32[0];
      v284.i64[1] = v283.u32[1];
      int64x2_t v287 = v284;
      v284.i64[0] = v283.u32[2];
      v284.i64[1] = v283.u32[3];
      int64x2_t v288 = vpaddq_s64((int64x2_t)vshlq_u64(v285, (uint64x2_t)vzip1q_s64((int64x2_t)0, v287)), (int64x2_t)vshlq_u64(v286, (uint64x2_t)vzip1q_s64((int64x2_t)0, v284)));
      int64x2_t v289 = vpaddq_s64(v287, v284);
      uint64_t v290 = (v260 + 50) & 0x3A;
      unint64_t v291 = (v288.i64[0] << v290) | v269;
      if ((unint64_t)(v289.i64[0] + v290) >= 0x40)
      {
        *(void *)((char *)v259 + ((v270 >> 3) & 8)) = v291;
        unint64_t v291 = (unint64_t)v288.i64[0] >> -(char)v290;
      }
      unint64_t v292 = v289.i64[0] + v270;
      unint64_t v293 = v291 | (v288.i64[1] << v292);
      if ((v292 & 0x3F) + v289.i64[1] >= 0x40)
      {
        *(void *)((char *)v259 + ((v292 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v293;
        unint64_t v293 = (unint64_t)v288.i64[1] >> -(v292 & 0x3F);
        if ((v292 & 0x3F) == 0) {
          unint64_t v293 = 0;
        }
      }
      unint64_t v294 = v292 + v289.i64[1];
      v295.i64[0] = 0x8000800080008;
      v295.i64[1] = 0x8000800080008;
      v296.i64[0] = -1;
      v296.i64[1] = -1;
      int16x8_t v297 = (int16x8_t)vandq_s8(vextq_s8((int8x16_t)vtstq_s16((int16x8_t)v436, v295), (int8x16_t)0, 0xCuLL), v441);
      v298.i64[0] = 0xF000F000F000FLL;
      v298.i64[1] = 0xF000F000F000FLL;
      uint16x8_t v299 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v296, (uint16x8_t)vaddq_s16(v297, v298)), v444);
      int32x4_t v300 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v297.i8);
      int32x4_t v301 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v299.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v300)), (int32x4_t)vmovl_high_u16(v299));
      int32x4_t v302 = vpaddq_s32(v300, (int32x4_t)vmovl_high_u16((uint16x8_t)v297));
      v303.i64[0] = v301.u32[0];
      v303.i64[1] = v301.u32[1];
      uint64x2_t v304 = (uint64x2_t)v303;
      v303.i64[0] = v301.u32[2];
      v303.i64[1] = v301.u32[3];
      uint64x2_t v305 = (uint64x2_t)v303;
      v303.i64[0] = v302.u32[0];
      v303.i64[1] = v302.u32[1];
      int64x2_t v306 = v303;
      v303.i64[0] = v302.u32[2];
      v303.i64[1] = v302.u32[3];
      int64x2_t v307 = vpaddq_s64((int64x2_t)vshlq_u64(v304, (uint64x2_t)vzip1q_s64((int64x2_t)0, v306)), (int64x2_t)vshlq_u64(v305, (uint64x2_t)vzip1q_s64((int64x2_t)0, v303)));
      int64x2_t v308 = vpaddq_s64(v306, v303);
      unint64_t v309 = (v307.i64[0] << v294) | v293;
      if (v308.i64[0] + (v294 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v259 + ((v294 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v309;
        unint64_t v309 = (unint64_t)v307.i64[0] >> -(v294 & 0x3F);
        if ((v294 & 0x3F) == 0) {
          unint64_t v309 = 0;
        }
      }
      unint64_t v310 = v308.i64[0] + v294;
      unint64_t v311 = v309 | (v307.i64[1] << v310);
      if ((v310 & 0x3F) + v308.i64[1] >= 0x40)
      {
        *(void *)((char *)v259 + ((v310 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v311;
        unint64_t v311 = (unint64_t)v307.i64[1] >> -(v310 & 0x3F);
        if ((v310 & 0x3F) == 0) {
          unint64_t v311 = 0;
        }
      }
      unint64_t v312 = v310 + v308.i64[1];
      int16x8_t v313 = (int16x8_t)vextq_s8((int8x16_t)0, v437, 0xCuLL);
      v314.i64[0] = 0xF000F000F000FLL;
      v314.i64[1] = 0xF000F000F000FLL;
      v315.i64[0] = -1;
      v315.i64[1] = -1;
      uint16x8_t v316 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v315, (uint16x8_t)vaddq_s16(v313, v314)), v426);
      int32x4_t v317 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v313.i8);
      int32x4_t v318 = (int32x4_t)vmovl_high_u16((uint16x8_t)v313);
      int32x4_t v319 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v316.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v317)), (int32x4_t)vshlq_u32(vmovl_high_u16(v316), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v318)));
      int32x4_t v320 = vpaddq_s32(v317, v318);
      v321.i64[0] = v319.u32[0];
      v321.i64[1] = v319.u32[1];
      uint64x2_t v322 = (uint64x2_t)v321;
      v321.i64[0] = v319.u32[2];
      v321.i64[1] = v319.u32[3];
      uint64x2_t v323 = (uint64x2_t)v321;
      v321.i64[0] = v320.u32[0];
      v321.i64[1] = v320.u32[1];
      int64x2_t v324 = v321;
      v321.i64[0] = v320.u32[2];
      v321.i64[1] = v320.u32[3];
      int64x2_t v325 = vpaddq_s64((int64x2_t)vshlq_u64(v322, (uint64x2_t)vzip1q_s64((int64x2_t)0, v324)), (int64x2_t)vshlq_u64(v323, (uint64x2_t)vzip1q_s64((int64x2_t)0, v321)));
      int64x2_t v326 = vpaddq_s64(v324, v321);
      unint64_t v327 = (v325.i64[0] << v312) | v311;
      if (v326.i64[0] + (v312 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v259 + ((v312 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v327;
        unint64_t v327 = (unint64_t)v325.i64[0] >> -(v312 & 0x3F);
        if ((v312 & 0x3F) == 0) {
          unint64_t v327 = 0;
        }
      }
      unint64_t v328 = v326.i64[0] + v312;
      unint64_t v329 = v327 | (v325.i64[1] << v328);
      if ((v328 & 0x3F) + v326.i64[1] >= 0x40)
      {
        *(void *)((char *)v259 + ((v328 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v329;
        unint64_t v329 = (unint64_t)v325.i64[1] >> -(v328 & 0x3F);
        if ((v328 & 0x3F) == 0) {
          unint64_t v329 = 0;
        }
      }
      unint64_t v330 = v328 + v326.i64[1];
      v331.i64[0] = 0xF000F000F000FLL;
      v331.i64[1] = 0xF000F000F000FLL;
      v332.i64[0] = -1;
      v332.i64[1] = -1;
      uint16x8_t v333 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v332, (uint16x8_t)vaddq_s16((int16x8_t)v437, v331)), v428);
      int32x4_t v334 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v437.i8);
      int32x4_t v335 = (int32x4_t)vmovl_high_u16((uint16x8_t)v437);
      int32x4_t v336 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v333.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v334)), (int32x4_t)vshlq_u32(vmovl_high_u16(v333), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v335)));
      int32x4_t v337 = vpaddq_s32(v334, v335);
      v338.i64[0] = v336.u32[0];
      v338.i64[1] = v336.u32[1];
      uint64x2_t v339 = (uint64x2_t)v338;
      v338.i64[0] = v336.u32[2];
      v338.i64[1] = v336.u32[3];
      uint64x2_t v340 = (uint64x2_t)v338;
      v338.i64[0] = v337.u32[0];
      v338.i64[1] = v337.u32[1];
      int64x2_t v341 = v338;
      v338.i64[0] = v337.u32[2];
      v338.i64[1] = v337.u32[3];
      int64x2_t v342 = vpaddq_s64((int64x2_t)vshlq_u64(v339, (uint64x2_t)vzip1q_s64((int64x2_t)0, v341)), (int64x2_t)vshlq_u64(v340, (uint64x2_t)vzip1q_s64((int64x2_t)0, v338)));
      int64x2_t v343 = vpaddq_s64(v341, v338);
      unint64_t v344 = (v342.i64[0] << v330) | v329;
      if (v343.i64[0] + (v330 & 0x3F) >= 0x40)
      {
        *(void *)((char *)v259 + ((v330 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v344;
        if ((v330 & 0x3F) != 0) {
          unint64_t v344 = (unint64_t)v342.i64[0] >> -(v330 & 0x3F);
        }
        else {
          unint64_t v344 = 0;
        }
      }
      uint64_t v345 = v343.i64[1];
      unint64_t v346 = v343.i64[0] + v330;
      uint64_t v347 = (v343.i64[0] + v330) & 0x3F;
      unint64_t v348 = v344 | (v342.i64[1] << v346);
      if ((unint64_t)(v347 + v343.i64[1]) >= 0x40)
      {
        *(void *)((char *)v259 + ((v346 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v348;
        unint64_t v348 = (unint64_t)v342.i64[1] >> -(char)v347;
        if (!v347) {
          unint64_t v348 = 0;
        }
      }
      uint64_t v349 = 0;
      v350.i64[0] = 0xF000F000F000FLL;
      v350.i64[1] = 0xF000F000F000FLL;
      v351.i64[0] = -1;
      v351.i64[1] = -1;
      unint64_t v352 = v346 + v345;
      char v353 = 1;
      do
      {
        char v354 = v353;
        uint16x8_t v355 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v351, (uint16x8_t)vaddq_s16((int16x8_t)v438, v350)), *(&v429 + v349));
        int32x4_t v356 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v438.i8);
        int32x4_t v357 = (int32x4_t)vmovl_high_u16((uint16x8_t)v438);
        int32x4_t v358 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v355.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v356)), (int32x4_t)vshlq_u32(vmovl_high_u16(v355), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v357)));
        int32x4_t v359 = vpaddq_s32(v356, v357);
        v360.i64[0] = v358.u32[0];
        v360.i64[1] = v358.u32[1];
        uint64x2_t v361 = (uint64x2_t)v360;
        v360.i64[0] = v358.u32[2];
        v360.i64[1] = v358.u32[3];
        uint64x2_t v362 = (uint64x2_t)v360;
        v360.i64[0] = v359.u32[0];
        v360.i64[1] = v359.u32[1];
        int64x2_t v363 = v360;
        v360.i64[0] = v359.u32[2];
        v360.i64[1] = v359.u32[3];
        int64x2_t v364 = vpaddq_s64((int64x2_t)vshlq_u64(v361, (uint64x2_t)vzip1q_s64((int64x2_t)0, v363)), (int64x2_t)vshlq_u64(v362, (uint64x2_t)vzip1q_s64((int64x2_t)0, v360)));
        int64x2_t v365 = vpaddq_s64(v363, v360);
        unint64_t v366 = (v364.i64[0] << v352) | v348;
        if (v365.i64[0] + (v352 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v259 + ((v352 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v366;
          unint64_t v366 = (unint64_t)v364.i64[0] >> -(v352 & 0x3F);
          if ((v352 & 0x3F) == 0) {
            unint64_t v366 = 0;
          }
        }
        unint64_t v367 = v365.i64[0] + v352;
        unint64_t v348 = v366 | (v364.i64[1] << v367);
        if ((v367 & 0x3F) + v365.i64[1] >= 0x40)
        {
          *(void *)((char *)v259 + ((v367 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v348;
          unint64_t v348 = (unint64_t)v364.i64[1] >> -(v367 & 0x3F);
          if ((v367 & 0x3F) == 0) {
            unint64_t v348 = 0;
          }
        }
        char v353 = 0;
        unint64_t v352 = v367 + v365.i64[1];
        uint64_t v349 = 1;
      }
      while ((v354 & 1) != 0);
      uint64_t v368 = 0;
      char v369 = 1;
      v370.i64[0] = 0xF000F000F000FLL;
      v370.i64[1] = 0xF000F000F000FLL;
      v371.i64[0] = -1;
      v371.i64[1] = -1;
      do
      {
        char v372 = v369;
        uint16x8_t v373 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v371, (uint16x8_t)vaddq_s16((int16x8_t)v439, v370)), *(&v431 + v368));
        int32x4_t v374 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v439.i8);
        int32x4_t v375 = (int32x4_t)vmovl_high_u16((uint16x8_t)v439);
        int32x4_t v376 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v373.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v374)), (int32x4_t)vshlq_u32(vmovl_high_u16(v373), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v375)));
        int32x4_t v377 = vpaddq_s32(v374, v375);
        v378.i64[0] = v376.u32[0];
        v378.i64[1] = v376.u32[1];
        uint64x2_t v379 = (uint64x2_t)v378;
        v378.i64[0] = v376.u32[2];
        v378.i64[1] = v376.u32[3];
        uint64x2_t v380 = (uint64x2_t)v378;
        v378.i64[0] = v377.u32[0];
        v378.i64[1] = v377.u32[1];
        int64x2_t v381 = v378;
        v378.i64[0] = v377.u32[2];
        v378.i64[1] = v377.u32[3];
        int64x2_t v382 = vpaddq_s64((int64x2_t)vshlq_u64(v379, (uint64x2_t)vzip1q_s64((int64x2_t)0, v381)), (int64x2_t)vshlq_u64(v380, (uint64x2_t)vzip1q_s64((int64x2_t)0, v378)));
        int64x2_t v383 = vpaddq_s64(v381, v378);
        unint64_t v384 = (v382.i64[0] << v352) | v348;
        if (v383.i64[0] + (v352 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v259 + ((v352 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v384;
          unint64_t v384 = (unint64_t)v382.i64[0] >> -(v352 & 0x3F);
          if ((v352 & 0x3F) == 0) {
            unint64_t v384 = 0;
          }
        }
        unint64_t v385 = v383.i64[0] + v352;
        unint64_t v348 = v384 | (v382.i64[1] << v385);
        if ((v385 & 0x3F) + v383.i64[1] >= 0x40)
        {
          *(void *)((char *)v259 + ((v385 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v348;
          unint64_t v348 = (unint64_t)v382.i64[1] >> -(v385 & 0x3F);
          if ((v385 & 0x3F) == 0) {
            unint64_t v348 = 0;
          }
        }
        char v369 = 0;
        unint64_t v352 = v385 + v383.i64[1];
        uint64_t v368 = 1;
      }
      while ((v372 & 1) != 0);
      uint64_t v386 = 0;
      char v387 = 1;
      v388.i64[0] = 0xF000F000F000FLL;
      v388.i64[1] = 0xF000F000F000FLL;
      v389.i64[0] = -1;
      v389.i64[1] = -1;
      do
      {
        char v390 = v387;
        uint16x8_t v391 = (uint16x8_t)vandq_s8((int8x16_t)vshlq_u16(v389, (uint16x8_t)vaddq_s16((int16x8_t)v440, v388)), *(&v433 + v386));
        int32x4_t v392 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v440.i8);
        int32x4_t v393 = (int32x4_t)vmovl_high_u16((uint16x8_t)v440);
        int32x4_t v394 = vpaddq_s32((int32x4_t)vshlq_u32(vmovl_u16(*(uint16x4_t *)v391.i8), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v392)), (int32x4_t)vshlq_u32(vmovl_high_u16(v391), (uint32x4_t)vtrn1q_s32((int32x4_t)0, v393)));
        int32x4_t v395 = vpaddq_s32(v392, v393);
        v396.i64[0] = v394.u32[0];
        v396.i64[1] = v394.u32[1];
        uint64x2_t v397 = (uint64x2_t)v396;
        v396.i64[0] = v394.u32[2];
        v396.i64[1] = v394.u32[3];
        uint64x2_t v398 = (uint64x2_t)v396;
        v396.i64[0] = v395.u32[0];
        v396.i64[1] = v395.u32[1];
        int64x2_t v399 = v396;
        v396.i64[0] = v395.u32[2];
        v396.i64[1] = v395.u32[3];
        int64x2_t v400 = vpaddq_s64((int64x2_t)vshlq_u64(v397, (uint64x2_t)vzip1q_s64((int64x2_t)0, v399)), (int64x2_t)vshlq_u64(v398, (uint64x2_t)vzip1q_s64((int64x2_t)0, v396)));
        int64x2_t v401 = vpaddq_s64(v399, v396);
        unint64_t v402 = (v400.i64[0] << v352) | v348;
        if (v401.i64[0] + (v352 & 0x3F) >= 0x40)
        {
          *(void *)((char *)v259 + ((v352 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v402;
          unint64_t v402 = (unint64_t)v400.i64[0] >> -(v352 & 0x3F);
          if ((v352 & 0x3F) == 0) {
            unint64_t v402 = 0;
          }
        }
        unint64_t v403 = v401.i64[0] + v352;
        unint64_t v348 = v402 | (v400.i64[1] << v403);
        if ((v403 & 0x3F) + v401.i64[1] >= 0x40)
        {
          *(void *)((char *)v259 + ((v403 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v348;
          unint64_t v348 = (unint64_t)v400.i64[1] >> -(v403 & 0x3F);
          if ((v403 & 0x3F) == 0) {
            unint64_t v348 = 0;
          }
        }
        char v387 = 0;
        unint64_t v352 = v403 + v401.i64[1];
        uint64_t v386 = 1;
      }
      while ((v390 & 1) != 0);
      if ((v352 & 0x3F) != 0) {
        *(void *)((char *)v259 + ((v352 >> 3) & 0x1FFFFFFFFFFFFFF8)) = v348;
      }
      unint64_t result = (v352 - v260 + 7) >> 3;
      *a2 |= (_BYTE)result - 1;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a3;
    *a2 = 3;
    return 4;
  }
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblock(unint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  long long v77 = 0u;
  long long v78 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  uint64_t v11 = a6;
  if (a5 > 1)
  {
    uint64_t v21 = a5 & 0xFE;
    if (a5 == v21)
    {
      uint64_t v22 = 0;
      int16x8_t v23 = (int *)(a3 + 4);
      int8x16_t v24 = &v72;
      do
      {
        int16x8_t v25 = v24;
        int8x16_t v26 = v23;
        uint64_t v27 = a5;
        do
        {
          int v28 = *v26;
          *((_DWORD *)v25 - 4) = *(v26 - 1);
          *(_DWORD *)int16x8_t v25 = v28;
          v25 += 2;
          v26 += 2;
          v27 -= 2;
        }
        while (v27);
        ++v22;
        int16x8_t v23 = (int *)((char *)v23 + a4);
        int8x16_t v24 = (long long *)((char *)v24 + 4);
      }
      while (v22 != a6);
    }
    else
    {
      uint64_t v29 = 0;
      int8x16_t v30 = (int *)(a3 + 4);
      int16x8_t v31 = &v72;
      int16x8_t v32 = (char *)&v71 + ((16 * a5) & 0xFE0);
      do
      {
        int16x8_t v33 = v31;
        int16x8_t v34 = v30;
        uint64_t v35 = a5 & 0xFE;
        do
        {
          int v36 = *v34;
          *((_DWORD *)v33 - 4) = *(v34 - 1);
          *(_DWORD *)int16x8_t v33 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 2;
        }
        while (v35);
        int16x8_t v37 = (int *)(a3 + v29 * a4 + 4 * v21);
        int16x8_t v38 = v32;
        uint64_t v39 = a5 - v21;
        do
        {
          int v40 = *v37++;
          *int16x8_t v38 = v40;
          v38 += 4;
          --v39;
        }
        while (v39);
        ++v29;
        int8x16_t v30 = (int *)((char *)v30 + a4);
        int16x8_t v31 = (long long *)((char *)v31 + 4);
        v32 += 4;
      }
      while (v29 != v11);
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (a6 < 2) {
      goto LABEL_7;
    }
    if (a4 != 1) {
      goto LABEL_7;
    }
    uint64_t v12 = a6 & 0xFE;
    int16x8_t v13 = (int *)(a3 + 1);
    int16x8_t v14 = (_DWORD *)&v71 + 1;
    uint64_t v15 = v12;
    do
    {
      int v16 = *(int *)((char *)v13 - 1);
      int v17 = *v13;
      int16x8_t v13 = (int *)((char *)v13 + 2);
      *(v14 - 1) = v16;
      *int16x8_t v14 = v17;
      v14 += 2;
      v15 -= 2;
    }
    while (v15);
    if (v12 != a6)
    {
LABEL_7:
      uint64_t v18 = a6 - v12;
      int16x8_t v19 = (_DWORD *)&v71 + v12;
      int16x8_t v20 = (_DWORD *)(a3 + v12 * a4);
      do
      {
        *v19++ = *v20;
        int16x8_t v20 = (_DWORD *)((char *)v20 + a4);
        --v18;
      }
      while (v18);
    }
  }
  int v55 = (unsigned __int16)v71;
  int v56 = WORD1(v71);
  int v57 = (unsigned __int16)v72;
  int v58 = WORD1(v72);
  int v59 = WORD2(v71);
  int v60 = WORD3(v71);
  int v61 = WORD2(v72);
  int v62 = WORD3(v72);
  int v63 = (unsigned __int16)v73;
  int v64 = WORD1(v73);
  int v65 = (unsigned __int16)v74;
  int v66 = WORD1(v74);
  int v67 = WORD2(v73);
  int v68 = WORD3(v73);
  if (a5 >= 4) {
    unsigned int v41 = 4;
  }
  else {
    unsigned int v41 = a5;
  }
  if (a5 >= 4) {
    unsigned int v42 = a5 - 4;
  }
  else {
    unsigned int v42 = 0;
  }
  int v69 = WORD2(v74);
  int v70 = WORD3(v74);
  if (a6 >= 2) {
    unsigned int v43 = 2;
  }
  else {
    unsigned int v43 = a6;
  }
  if (a6 >= 2) {
    unsigned int v44 = a6 - 2;
  }
  else {
    unsigned int v44 = 0;
  }
  char v45 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1, (uint64_t)&v55, a7, v41, v43);
  int v55 = WORD4(v71);
  int v56 = WORD5(v71);
  int v57 = WORD4(v72);
  int v58 = WORD5(v72);
  int v59 = WORD6(v71);
  int v60 = HIWORD(v71);
  int v61 = WORD6(v72);
  int v62 = HIWORD(v72);
  int v63 = WORD4(v73);
  int v64 = WORD5(v73);
  int v65 = WORD4(v74);
  int v66 = WORD5(v74);
  int v67 = WORD6(v73);
  int v68 = HIWORD(v73);
  int v69 = WORD6(v74);
  int v70 = HIWORD(v74);
  if (a6 >= 4) {
    unsigned int v46 = 2;
  }
  else {
    unsigned int v46 = v44;
  }
  int v47 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 16, (uint64_t)&v55, a7, v41, v46);
  int v55 = (unsigned __int16)v75;
  int v56 = WORD1(v75);
  int v57 = (unsigned __int16)v76;
  int v58 = WORD1(v76);
  int v59 = WORD2(v75);
  int v60 = WORD3(v75);
  int v61 = WORD2(v76);
  int v62 = WORD3(v76);
  int v63 = (unsigned __int16)v77;
  int v64 = WORD1(v77);
  int v65 = (unsigned __int16)v78;
  int v66 = WORD1(v78);
  int v67 = WORD2(v77);
  int v68 = WORD3(v77);
  if (a5 >= 8) {
    unsigned int v48 = 4;
  }
  else {
    unsigned int v48 = v42;
  }
  int v69 = WORD2(v78);
  int v70 = WORD3(v78);
  int v49 = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 32, (uint64_t)&v55, a7, v48, v43);
  int v55 = WORD4(v75);
  int v56 = WORD5(v75);
  int v57 = WORD4(v76);
  int v58 = WORD5(v76);
  int v59 = WORD6(v75);
  int v60 = HIWORD(v75);
  int v61 = WORD6(v76);
  int v62 = HIWORD(v76);
  int v63 = WORD4(v77);
  int v64 = WORD5(v77);
  int v65 = WORD4(v78);
  int v66 = WORD5(v78);
  int v67 = WORD6(v77);
  int v68 = HIWORD(v77);
  int v69 = WORD6(v78);
  int v70 = HIWORD(v78);
  uint64_t result = AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(a1 + 48, (uint64_t)&v55, a7, v48, v46);
  if (v49) {
    char v51 = 4;
  }
  else {
    char v51 = 0;
  }
  if (v47) {
    char v52 = 2;
  }
  else {
    char v52 = 0;
  }
  if (result) {
    char v53 = -8;
  }
  else {
    char v53 = -16;
  }
  *a2 = v53 | v51 | v45 | v52;
  return result;
}

uint64_t AGX::AppleCompressionGen2::Compressor<(AGX::AppleCompressionGen2::PixelFormat)11,1u,(unsigned char)0,(AGX::AppleCompressionGen2::SubblockOrder)0,(AGXTextureFootprint)3>::compressLossyCompressedSubblockDQuad(unint64_t a1, uint64_t a2, int a3, unsigned int a4, unsigned int a5)
{
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v261 = *MEMORY[0x263EF8340];
  BOOL v8 = a5 < 2;
  BOOL v9 = a4 < 4 || a5 < 2;
  BOOL v225 = v9;
  int v226 = a3;
  BOOL v10 = a4 < 4 || a5 == 0;
  BOOL v224 = v10;
  BOOL v11 = a4 < 3 || a5 < 2;
  BOOL v223 = v11;
  BOOL v12 = a4 < 3 || a5 == 0;
  BOOL v222 = v12;
  if (a4) {
    BOOL v13 = a5 < 2;
  }
  else {
    BOOL v13 = 1;
  }
  if (a4 < 2) {
    BOOL v8 = 1;
  }
  BOOL v220 = v8;
  BOOL v221 = v13;
  BOOL v14 = a4 < 2 || a5 == 0;
  BOOL v219 = v14;
  do
  {
    uint64_t v15 = 0;
    char v16 = v6;
    unsigned int v17 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)3>::compBits[v7];
    *(&v259 + v7) = v17;
    switch(v17)
    {
      case 2u:
        uint64_t v15 = 5;
        break;
      case 0xAu:
        uint64_t v15 = 1;
        break;
      case 0xCu:
        uint64_t v15 = 2;
        break;
      case 0x10u:
        uint64_t v15 = 3;
        break;
      case 0x20u:
        uint64_t v15 = 4;
        break;
      default:
        break;
    }
    unint64_t v18 = 4 * v7;
    *(int *)((char *)&v237 + v18) = v15;
    unsigned int v19 = 1 << (v17 - 1);
    v236[v18 / 4 + 2] = v19;
    if (a3 == 1)
    {
      uint64_t v29 = (_DWORD *)(a2 + v18);
      uint64_t v21 = (unsigned int *)((char *)&v240 + v18);
      if ((*(_DWORD *)(a2 + 4 * v7) ^ v19) == 1) {
        unsigned int v20 = 0;
      }
      else {
        unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      }
      *uint64_t v21 = v20;
      if ((v29[2] ^ v19) == 1) {
        unsigned int v22 = 0;
      }
      else {
        unsigned int v22 = v29[2] ^ v19;
      }
      v21[2] = v22;
      if ((v29[4] ^ v19) == 1) {
        unsigned int v23 = 0;
      }
      else {
        unsigned int v23 = v29[4] ^ v19;
      }
      v21[4] = v23;
      if ((v29[6] ^ v19) == 1) {
        unsigned int v24 = 0;
      }
      else {
        unsigned int v24 = v29[6] ^ v19;
      }
      v21[6] = v24;
      if ((v29[8] ^ v19) == 1) {
        unsigned int v25 = 0;
      }
      else {
        unsigned int v25 = v29[8] ^ v19;
      }
      v21[8] = v25;
      if ((v29[10] ^ v19) == 1) {
        unsigned int v26 = 0;
      }
      else {
        unsigned int v26 = v29[10] ^ v19;
      }
      v21[10] = v26;
      unsigned int v27 = v29[12] ^ v19;
      if (v27 == 1) {
        unsigned int v27 = 0;
      }
      v21[12] = v27;
      unsigned int v28 = v29[14] ^ v19;
      if (v28 == 1) {
        unsigned int v28 = 0;
      }
    }
    else if (a3 == 3)
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7) ^ v19;
      uint64_t v21 = (unsigned int *)((char *)&v240 + v18);
      *uint64_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8) ^ v19;
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16) ^ v19;
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24) ^ v19;
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32) ^ v19;
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40) ^ v19;
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48) ^ v19;
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56) ^ v19;
    }
    else
    {
      unsigned int v20 = *(_DWORD *)(a2 + 4 * v7);
      uint64_t v21 = (unsigned int *)((char *)&v240 + v18);
      *uint64_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(a2 + v18 + 8);
      v21[2] = v22;
      unsigned int v23 = *(_DWORD *)(a2 + v18 + 16);
      v21[4] = v23;
      unsigned int v24 = *(_DWORD *)(a2 + v18 + 24);
      v21[6] = v24;
      unsigned int v25 = *(_DWORD *)(a2 + v18 + 32);
      v21[8] = v25;
      unsigned int v26 = *(_DWORD *)(a2 + v18 + 40);
      v21[10] = v26;
      unsigned int v27 = *(_DWORD *)(a2 + v18 + 48);
      v21[12] = v27;
      unsigned int v28 = *(_DWORD *)(a2 + v18 + 56);
    }
    v21[14] = v28;
    int8x16_t v30 = &v258[v18 / 4 + 2];
    v258[v7 + 2] = v20;
    v258[v7 + 4] = v20;
    v258[v7] = 0;
    if (v219)
    {
      unsigned int v31 = v20;
      if (v221) {
        goto LABEL_58;
      }
    }
    else
    {
      unsigned int v31 = v20;
      if (v22 < v20)
      {
        v258[v7] = 1;
        v258[v7 + 4] = v22;
        unsigned int v31 = v22;
      }
      if (v20 >= v22) {
        int16x8_t v32 = &v258[v18 / 4 + 2];
      }
      else {
        int16x8_t v32 = (unsigned int *)(&v242 + v7);
      }
      unsigned int v20 = *v32;
      *int8x16_t v30 = *v32;
      if (v221)
      {
LABEL_58:
        if (v220) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    if (v23 < v31)
    {
      v258[v7] = 2;
      v258[v7 + 4] = v23;
      unsigned int v31 = v23;
    }
    if (v20 >= v23) {
      int16x8_t v33 = &v258[v18 / 4 + 2];
    }
    else {
      int16x8_t v33 = (unsigned int *)(&v244 + v7);
    }
    unsigned int v20 = *v33;
    *int8x16_t v30 = *v33;
    if (v220)
    {
LABEL_59:
      if (v222) {
        goto LABEL_60;
      }
      goto LABEL_82;
    }
LABEL_76:
    if (v24 < v31)
    {
      v258[v7] = 3;
      v258[v7 + 4] = v24;
      unsigned int v31 = v24;
    }
    if (v20 >= v24) {
      int16x8_t v34 = &v258[v18 / 4 + 2];
    }
    else {
      int16x8_t v34 = (unsigned int *)(&v246 + v7);
    }
    unsigned int v20 = *v34;
    *int8x16_t v30 = *v34;
    if (v222)
    {
LABEL_60:
      if (v224) {
        goto LABEL_61;
      }
      goto LABEL_88;
    }
LABEL_82:
    if (v25 < v31)
    {
      v258[v7] = 4;
      v258[v7 + 4] = v25;
      unsigned int v31 = v25;
    }
    if (v20 >= v25) {
      uint64_t v35 = &v258[v18 / 4 + 2];
    }
    else {
      uint64_t v35 = (unsigned int *)(&v248 + v7);
    }
    unsigned int v20 = *v35;
    *int8x16_t v30 = *v35;
    if (v224)
    {
LABEL_61:
      if (v223) {
        goto LABEL_62;
      }
      goto LABEL_94;
    }
LABEL_88:
    if (v26 < v31)
    {
      v258[v7] = 5;
      v258[v7 + 4] = v26;
      unsigned int v31 = v26;
    }
    if (v20 >= v26) {
      int v36 = &v258[v18 / 4 + 2];
    }
    else {
      int v36 = (unsigned int *)(&v250 + v7);
    }
    unsigned int v20 = *v36;
    *int8x16_t v30 = *v36;
    if (v223)
    {
LABEL_62:
      if (v225) {
        goto LABEL_105;
      }
LABEL_100:
      if (v28 < v31)
      {
        v258[v7] = 7;
        v258[v7 + 4] = v28;
        unsigned int v31 = v28;
      }
      int16x8_t v38 = (unsigned int *)(&v254 + v7);
      if (v20 >= v28) {
        int16x8_t v38 = v30;
      }
      unsigned int v20 = *v38;
      *int8x16_t v30 = *v38;
      goto LABEL_105;
    }
LABEL_94:
    if (v27 < v31)
    {
      v258[v7] = 6;
      v258[v7 + 4] = v27;
      unsigned int v31 = v27;
    }
    if (v20 >= v27) {
      int16x8_t v37 = &v258[v18 / 4 + 2];
    }
    else {
      int16x8_t v37 = (unsigned int *)(&v252 + v7);
    }
    unsigned int v20 = *v37;
    *int8x16_t v30 = *v37;
    if (!v225) {
      goto LABEL_100;
    }
LABEL_105:
    unsigned int v39 = __clz(v20 - v31);
    unsigned int v40 = AGX::AppleCompressionGen2::PixelFormatInfo<(AGX::AppleCompressionGen2::PixelFormat)11,(AGXTextureFootprint)3>::computeDquadMode(v17, 32 - v39, v31, v20);
    *(&v256 + v7) = v40;
    a3 = v226;
    if ((v226 | 2) != 3)
    {
      BOOL v41 = 0;
      uint64_t v42 = v15;
LABEL_110:
      unsigned int v43 = a5;
      goto LABEL_111;
    }
    BOOL v41 = 0;
    uint64_t v42 = v15;
    if (v20 < v19) {
      goto LABEL_110;
    }
    unsigned int v43 = a5;
    if (v31 < v19) {
      BOOL v41 = kDQuadParamTable[160 * v42 + 8 + 10 * v40] == 0;
    }
LABEL_111:
    if (v40 >= kDquadTransition[v42] || v41)
    {
      unsigned int v44 = kDQuadParamTable[160 * v42 + 4 + 10 * v40] - v41;
      if (v41) {
        int v45 = 0;
      }
      else {
        int v45 = -2;
      }
      BOOL v50 = v17 >= v44;
      unsigned int v46 = v17 - v44;
      BOOL v71 = v46 != 0 && v50;
      int v47 = v31 & ~(-1 << v46);
      if (!v71) {
        int v47 = 0;
      }
      int v48 = v47 + v45;
      BOOL v71 = v48 < 1;
      unsigned int v49 = __clz(v48 + v20 - v31);
      BOOL v50 = v71 || v49 >= v39;
      if (v50)
      {
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      else
      {
        *(&v256 + v7) = ++v40;
        if (v17 != 32) {
          goto LABEL_22;
        }
      }
      unsigned int v51 = kDquadMaxMode[v42];
      if (v51 >= v40) {
        unsigned int v51 = v40;
      }
      *(&v256 + v7) = v51;
    }
LABEL_22:
    char v6 = 1;
    uint64_t v7 = 1u;
  }
  while ((v16 & 1) == 0);
  int v53 = v237;
  int v52 = v238;
  unsigned int v54 = v256;
  unsigned int v55 = v257;
  BOOL v57 = v257 >= v256;
  BOOL v58 = v257 < v256;
  int v59 = kDQuadParamTable[160 * v238 + 6 + 10 * v257];
  int v234 = kDQuadParamTable[160 * v237 + 6 + 10 * v256];
  int v56 = v234;
  int v235 = v59;
  v236[0] = v234;
  v236[1] = v59;
  if (*(&v256 + v57) == *(&v256 + v58))
  {
    int v60 = v234;
  }
  else
  {
    int v61 = *(_DWORD *)((unint64_t)v236 | (4 * v58));
    int v60 = v234;
    if (v61 >= 1)
    {
      *(_DWORD *)((unint64_t)&v234 | (4 * v58)) = 0;
      *(_DWORD *)((unint64_t)&v234 | (4 * v57)) += v61;
      int v60 = v234;
    }
  }
  int v62 = &kDQuadParamTable[160 * v53 + 10 * v54];
  unint64_t v63 = *((void *)v62 + 1);
  unsigned int v65 = v62[4];
  unsigned int v64 = v62[5];
  if (a4) {
    BOOL v66 = v43 == 0;
  }
  else {
    BOOL v66 = 1;
  }
  int v67 = v66;
  int v218 = v67;
  unsigned int v232 = v65;
  unsigned int v230 = v64;
  int v68 = v60 - v56;
  if (v68 < 0)
  {
    if (kDQuadParamTable[160 * v53 + 7 + 10 * v54] < -v68)
    {
      unsigned int v230 = --v64;
      if (!kDQuadParamTable[160 * v53 + 8 + 10 * v54])
      {
        int v69 = -1;
LABEL_142:
        unsigned int v232 = v69 + v65;
      }
    }
  }
  else if (v68)
  {
    v64 += v68;
    unsigned int v230 = v64;
    int v69 = v68;
    goto LABEL_142;
  }
  BOOL v71 = v53 == 5 && v54 == 1 && v68 < 2;
  int v72 = v71;
  if (v226 == 4)
  {
    if (v53 == 3) {
      int v73 = 31744;
    }
    else {
      int v73 = 0;
    }
    if (v53 == 4) {
      int v74 = 2139095040;
    }
    else {
      int v74 = v73;
    }
    int v75 = 1 << (v259 - 1);
    if (v67)
    {
      if (v219) {
        goto LABEL_163;
      }
LABEL_310:
      if ((v74 & ~v242) == 0 || v242 == v75) {
        int v72 = 1;
      }
      if (!v221) {
        goto LABEL_317;
      }
LABEL_164:
      if (v220) {
        goto LABEL_165;
      }
LABEL_324:
      if ((v74 & ~v246) == 0 || v246 == v75) {
        int v72 = 1;
      }
      if (!v222) {
        goto LABEL_331;
      }
LABEL_166:
      if (v224) {
        goto LABEL_167;
      }
LABEL_338:
      if ((v74 & ~v250) == 0 || v250 == v75) {
        int v72 = 1;
      }
      if (!v223) {
        goto LABEL_345;
      }
LABEL_168:
      if (!v225) {
        goto LABEL_169;
      }
    }
    else
    {
      if ((v74 & ~v240) == 0 || v240 == v75) {
        int v72 = 1;
      }
      if (!v219) {
        goto LABEL_310;
      }
LABEL_163:
      if (v221) {
        goto LABEL_164;
      }
LABEL_317:
      if ((v74 & ~v244) == 0 || v244 == v75) {
        int v72 = 1;
      }
      if (!v220) {
        goto LABEL_324;
      }
LABEL_165:
      if (v222) {
        goto LABEL_166;
      }
LABEL_331:
      if ((v74 & ~v248) == 0 || v248 == v75) {
        int v72 = 1;
      }
      if (!v224) {
        goto LABEL_338;
      }
LABEL_167:
      if (v223) {
        goto LABEL_168;
      }
LABEL_345:
      if ((v74 & ~v252) == 0 || v252 == v75) {
        int v72 = 1;
      }
      if (!v225)
      {
LABEL_169:
        if ((v74 & ~v254) == 0 || v254 == v75) {
          int v72 = 1;
        }
      }
    }
  }
  BOOL v71 = v63 >> v64 > 0x100;
  int v77 = v67;
  if (v71) {
    int v77 = 1;
  }
  int v78 = v77 | v72;
  uint64_t v79 = &kDQuadParamTable[160 * v52 + 10 * v55];
  unint64_t v80 = *((void *)v79 + 1);
  unsigned int v81 = v79[4];
  unsigned int v82 = v79[5];
  unsigned int v233 = v81;
  unsigned int v231 = v82;
  int v83 = v235 - v59;
  if (v235 - v59 < 0)
  {
    if (kDQuadParamTable[160 * v52 + 7 + 10 * v55] < v59 - v235)
    {
      unsigned int v231 = --v82;
      if (!kDQuadParamTable[160 * v52 + 8 + 10 * v55])
      {
        int v84 = -1;
LABEL_181:
        unsigned int v233 = v84 + v81;
      }
    }
  }
  else if (v235 != v59)
  {
    v82 += v83;
    unsigned int v231 = v82;
    int v84 = v235 - v59;
    goto LABEL_181;
  }
  if (v52 == 5 && v55 == 1 && v83 < 2) {
    int v78 = 1;
  }
  if (v226 == 4)
  {
    if (v52 == 3) {
      int v85 = 31744;
    }
    else {
      int v85 = 0;
    }
    if (v52 == 4) {
      int v85 = 2139095040;
    }
    int v86 = 1 << (v260 - 1);
    if (v67)
    {
      if (v219) {
        goto LABEL_196;
      }
LABEL_360:
      if ((v85 & ~v243) == 0 || v243 == v86) {
        int v78 = 1;
      }
      if (!v221) {
        goto LABEL_367;
      }
LABEL_197:
      if (v220) {
        goto LABEL_198;
      }
LABEL_374:
      if ((v85 & ~v247) == 0 || v247 == v86) {
        int v78 = 1;
      }
      if (!v222) {
        goto LABEL_381;
      }
LABEL_199:
      if (v224) {
        goto LABEL_200;
      }
LABEL_388:
      if ((v85 & ~v251) == 0 || v251 == v86) {
        int v78 = 1;
      }
      if (!v223) {
        goto LABEL_395;
      }
LABEL_201:
      if (!v225) {
        goto LABEL_202;
      }
    }
    else
    {
      if ((v85 & ~v241) == 0 || v241 == v86) {
        int v78 = 1;
      }
      if (!v219) {
        goto LABEL_360;
      }
LABEL_196:
      if (v221) {
        goto LABEL_197;
      }
LABEL_367:
      if ((v85 & ~v245) == 0 || v245 == v86) {
        int v78 = 1;
      }
      if (!v220) {
        goto LABEL_374;
      }
LABEL_198:
      if (v222) {
        goto LABEL_199;
      }
LABEL_381:
      if ((v85 & ~v249) == 0 || v249 == v86) {
        int v78 = 1;
      }
      if (!v224) {
        goto LABEL_388;
      }
LABEL_200:
      if (v223) {
        goto LABEL_201;
      }
LABEL_395:
      if ((v85 & ~v253) == 0 || v253 == v86) {
        int v78 = 1;
      }
      if (!v225)
      {
LABEL_202:
        if ((v85 & ~v255) == 0 || v255 == v86) {
          int v78 = 1;
        }
      }
    }
  }
  char v88 = 0;
  uint64_t v89 = 0;
  int v90 = v67;
  if (v80 >> v82 > 0x100) {
    int v90 = 1;
  }
  int v213 = v90;
  int v214 = v78;
  uint64_t v229 = 0;
  uint64_t v228 = 0;
  memset(v227, 0, sizeof(v227));
  do
  {
    uint64_t v91 = 0;
    unsigned int v92 = 0;
    unsigned int v93 = *(&v259 + v89);
    unsigned int v94 = *(&v232 + v89);
    if (v93 < v94) {
      unsigned int v94 = *(&v259 + v89);
    }
    *(&v232 + v89) = v94;
    BOOL v95 = &kDQuadParamTable[160 * *(&v237 + v89) + 10 * *(&v256 + v89)];
    if (v95[5]) {
      unsigned int v96 = v93;
    }
    else {
      unsigned int v96 = 0;
    }
    if (v96 >= *(&v230 + v89)) {
      int v97 = *(&v230 + v89);
    }
    else {
      int v97 = v96;
    }
    int v98 = v258[v89 + 4] & (-1 << (v93 - v94));
    int8x16_t v99 = &v240 + v89;
    int v100 = *v99 - v98;
    uint64_t v101 = 32 * v89;
    int8x16_t v102 = &v239[32 * v89];
    if (v218) {
      int v100 = 0;
    }
    int v103 = v99[2] - v98;
    if (v219) {
      int v103 = 0;
    }
    *int8x16_t v102 = v100;
    v102[1] = v103;
    int v104 = v99[4] - v98;
    if (v221) {
      int v104 = 0;
    }
    int v105 = v99[6] - v98;
    if (v220) {
      int v105 = 0;
    }
    v102[2] = v104;
    v102[3] = v105;
    int v106 = v99[8] - v98;
    if (v222) {
      int v106 = 0;
    }
    int v107 = v99[10] - v98;
    if (v224) {
      int v107 = 0;
    }
    v102[4] = v106;
    v102[5] = v107;
    int v108 = v99[12] - v98;
    if (v223) {
      int v108 = 0;
    }
    int v109 = v99[14] - v98;
    if (v225) {
      int v109 = 0;
    }
    v102[6] = v108;
    v102[7] = v109;
    char v110 = v88;
    uint64_t v111 = -1 << v93;
    *(&v230 + v89) = v97;
    unint64_t v112 = *((void *)v95 + 1);
    *((_DWORD *)&v229 + v89) = v98;
    unint64_t v113 = v112 >> v97;
    int v114 = ~v111;
    if (v113 <= 1) {
      unint64_t v115 = 1;
    }
    else {
      unint64_t v115 = v113;
    }
    uint64_t v116 = 2 * v258[v89];
    do
    {
      if (v116 != v91)
      {
        if (v97) {
          unint64_t v117 = *(unsigned int *)&v239[v101] / v115;
        }
        else {
          LODWORD(v117) = 0;
        }
        int16x8_t v118 = (int *)v227 + 7 * v89 + v92;
        *int16x8_t v118 = v117;
        if (v113 >= 2)
        {
          unint64_t v119 = *(unsigned int *)&v239[v101];
          if (v119)
          {
            if (v119 / v115 * v115 == v119 && ((v119 / v115) & 1) != 0)
            {
              if (v98 || v117 != 1)
              {
                if ((v226 | 2) != 3
                  || (uint64_t v121 = v99[v91], v122 = v236[v89 + 2], v121 != v122)
                  && ((v226 | 2) != 3 || v115 + v122 != v121))
                {
                  LODWORD(v117) = v117 - 1;
                  *int16x8_t v118 = v117;
                }
              }
              else
              {
                LODWORD(v117) = 1;
              }
            }
          }
        }
        if ((unint64_t)v117 >> v97 || v99[v91] == v114) {
          *int16x8_t v118 = ~(-1 << v97);
        }
        if (*((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91 + 1) >= v43
          || *((unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + v91) >= a4)
        {
          *int16x8_t v118 = 0;
        }
        ++v92;
      }
      v101 += 4;
      v91 += 2;
    }
    while (v91 != 16);
    char v88 = 1;
    uint64_t v89 = 1;
  }
  while ((v110 & 1) == 0);
  uint64_t result = v213 | v214;
  int16x8_t v125 = (void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = 8 * (a1 & 7);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (result == 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    unsigned int v129 = v259;
    unsigned int v130 = v260;
    uint64_t v131 = v259 - 8;
    uint64_t v132 = v260 - 8;
    uint64_t v133 = 8 * (a1 & 7);
    while (1)
    {
      int16x8_t v134 = (unsigned __int8 *)&AGX::AppleCompressionGen2::kSampleOffsets + 2 * v127;
      BOOL v135 = v134[1] >= v43 || *v134 >= a4;
      char v136 = v135;
      if (v135)
      {
        unint64_t v137 = 0;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      else
      {
        unint64_t v137 = (unint64_t)*(&v240 + 2 * v127) >> 8;
        if (v131 > 0x100) {
          goto LABEL_289;
        }
      }
      if (v129 != 8 && (unint64_t)(v133 - v126 + (v128 << 6) + v131) <= 0x80)
      {
        uint64_t v138 = 0;
        unint64_t v139 = v129 - 8;
        do
        {
          unint64_t v140 = 64 - v133;
          if (64 - v133 >= v139) {
            unint64_t v140 = v139;
          }
          v125[v128] |= ((v137 >> v138) & ~(-1 << v140)) << v133;
          v138 += v140;
          unint64_t v141 = v140 + v133;
          v128 += v141 >> 6;
          uint64_t v133 = v141 & 0x3F;
          v139 -= v140;
        }
        while (v139);
      }
LABEL_289:
      if (v136)
      {
        unint64_t v142 = 0;
        if (v132 <= 0x100) {
          goto LABEL_293;
        }
      }
      else
      {
        unint64_t v142 = (unint64_t)*(&v240 + 2 * v127 + 1) >> 8;
        if (v132 <= 0x100)
        {
LABEL_293:
          if (v130 != 8 && (unint64_t)(v133 - v126 + (v128 << 6) + v132) <= 0x80)
          {
            uint64_t v143 = 0;
            unint64_t v144 = v130 - 8;
            do
            {
              unint64_t v145 = 64 - v133;
              if (64 - v133 >= v144) {
                unint64_t v145 = v144;
              }
              v125[v128] |= ((v142 >> v143) & ~(-1 << v145)) << v133;
              v143 += v145;
              unint64_t v146 = v145 + v133;
              v128 += v146 >> 6;
              uint64_t v133 = v146 & 0x3F;
              v144 -= v145;
            }
            while (v144);
          }
        }
      }
      if (++v127 == 8) {
        return result;
      }
    }
  }
  unsigned int v148 = v256;
  unsigned int v147 = v257;
  unint64_t v149 = ((unint64_t)(v256 & 0xF) << v126) | *v125;
  *int16x8_t v125 = v149;
  uint64_t v150 = v126 | 4;
  if ((v126 | 4uLL) - v126 - 125 < 0xFFFFFFFFFFFFFF7FLL)
  {
    unint64_t v151 = 0;
    unsigned int v152 = v259;
    if (!v148) {
      goto LABEL_404;
    }
    goto LABEL_408;
  }
  *int16x8_t v125 = ((unint64_t)(v147 & 0xF) << v150) | v149;
  unint64_t v151 = (unint64_t)(v126 + 8) >> 6;
  uint64_t v150 = (v126 + 8) & 0x38;
  unsigned int v152 = v259;
  if (v148) {
    goto LABEL_408;
  }
LABEL_404:
  if (v152 == 2 || v152 >= 0x10)
  {
LABEL_408:
    unsigned int v169 = v232;
    if (v232 <= 0x100 && v232 && v150 - v126 + (v151 << 6) + v232 <= 0x80)
    {
      uint64_t v170 = 0;
      unint64_t v171 = v229 >> (v152 - v232);
      unint64_t v172 = v232;
      do
      {
        unint64_t v173 = 64 - v150;
        if (64 - v150 >= v172) {
          unint64_t v173 = v172;
        }
        v125[v151] |= ((v171 >> v170) & ~(-1 << v173)) << v150;
        v170 += v173;
        unint64_t v174 = v173 + v150;
        v151 += v174 >> 6;
        uint64_t v150 = v174 & 0x3F;
        v172 -= v173;
      }
      while (v172);
    }
    int v167 = v169 + 8;
    unsigned int v168 = v260;
    if (v147) {
      goto LABEL_416;
    }
LABEL_469:
    if (v168 == 2 || v168 >= 0x10) {
      goto LABEL_416;
    }
  }
  else
  {
    int v167 = 8;
    unsigned int v168 = v260;
    if (!v147) {
      goto LABEL_469;
    }
LABEL_416:
    unsigned int v175 = v233;
    if (v233 <= 0x100 && v233 && v150 - v126 + (v151 << 6) + v233 <= 0x80)
    {
      uint64_t v176 = 0;
      unint64_t v177 = (HIDWORD(v229) >> (v168 - v233));
      unint64_t v178 = v233;
      do
      {
        unint64_t v179 = 64 - v150;
        if (64 - v150 >= v178) {
          unint64_t v179 = v178;
        }
        v125[v151] |= ((v177 >> v176) & ~(-1 << v179)) << v150;
        v176 += v179;
        unint64_t v180 = v179 + v150;
        v151 += v180 >> 6;
        uint64_t v150 = v180 & 0x3F;
        v178 -= v179;
      }
      while (v178);
    }
    v167 += v175;
  }
  unint64_t v181 = v230;
  if (v230)
  {
    if (v150 - v126 + (v151 << 6) + 3 <= 0x80)
    {
      uint64_t v182 = 0;
      unint64_t v183 = v258[0];
      unint64_t v184 = 3;
      do
      {
        unint64_t v185 = 64 - v150;
        if (64 - v150 >= v184) {
          unint64_t v185 = v184;
        }
        v125[v151] |= ((v183 >> v182) & ~(-1 << v185)) << v150;
        v182 += v185;
        unint64_t v186 = v185 + v150;
        v151 += v186 >> 6;
        uint64_t v150 = v186 & 0x3F;
        v184 -= v185;
      }
      while (v184);
    }
    v167 += 3;
  }
  unint64_t v187 = v231;
  if (v231)
  {
    if (v150 - v126 + (v151 << 6) + 3 <= 0x80)
    {
      uint64_t v188 = 0;
      unint64_t v189 = v258[1];
      unint64_t v190 = 3;
      do
      {
        unint64_t v191 = 64 - v150;
        if (64 - v150 >= v190) {
          unint64_t v191 = v190;
        }
        v125[v151] |= ((v189 >> v188) & ~(-1 << v191)) << v150;
        v188 += v191;
        unint64_t v192 = v191 + v150;
        v151 += v192 >> 6;
        uint64_t v150 = v192 & 0x3F;
        v190 -= v191;
      }
      while (v190);
    }
    v167 += 3;
  }
  unsigned int v193 = 128 - v167;
  unsigned int v194 = (128 - v167) / 7u;
  unint64_t v195 = v193 % 7;
  if ((v195 - 257) >= 0xFFFFFF00 && v150 - v126 + (v151 << 6) + v195 <= 0x80)
  {
    do
    {
      unint64_t v196 = 64 - v150;
      if (64 - v150 >= v195) {
        unint64_t v196 = v195;
      }
      unint64_t v197 = v196 + v150;
      v151 += v197 >> 6;
      uint64_t v150 = v197 & 0x3F;
      v195 -= v196;
    }
    while (v195);
  }
  uint64_t v198 = 0;
  int v199 = v187 + v181;
  while (2)
  {
    if (v181 && v181 <= 0x100 && v150 - v126 + (v151 << 6) + v181 <= 0x80)
    {
      uint64_t v200 = 0;
      unint64_t v201 = *((unsigned int *)v227 + v198);
      unint64_t v202 = v181;
      do
      {
        unint64_t v203 = 64 - v150;
        if (64 - v150 >= v202) {
          unint64_t v203 = v202;
        }
        v125[v151] |= ((v201 >> v200) & ~(-1 << v203)) << v150;
        v200 += v203;
        unint64_t v204 = v203 + v150;
        v151 += v204 >> 6;
        uint64_t v150 = v204 & 0x3F;
        v202 -= v203;
      }
      while (v202);
    }
    if (v187)
    {
      if (v187 <= 0x100 && v150 - v126 + (v151 << 6) + v187 <= 0x80)
      {
        uint64_t v205 = 0;
        unint64_t v206 = *((unsigned int *)&v227[1] + v198 + 3);
        unint64_t v207 = v187;
        do
        {
          unint64_t v208 = 64 - v150;
          if (64 - v150 >= v207) {
            unint64_t v208 = v207;
          }
          v125[v151] |= ((v206 >> v205) & ~(-1 << v208)) << v150;
          v205 += v208;
          unint64_t v209 = v208 + v150;
          v151 += v209 >> 6;
          uint64_t v150 = v209 & 0x3F;
          v207 -= v208;
        }
        while (v207);
      }
      unint64_t v210 = v194 - v199;
      if (v194 != v199)
      {
LABEL_462:
        if (v210 <= 0x100 && v150 - v126 + (v151 << 6) + v210 <= 0x80)
        {
          do
          {
            unint64_t v211 = 64 - v150;
            if (64 - v150 >= v210) {
              unint64_t v211 = v210;
            }
            unint64_t v212 = v211 + v150;
            v151 += v212 >> 6;
            uint64_t v150 = v212 & 0x3F;
            v210 -= v211;
          }
          while (v210);
        }
      }
    }
    else
    {
      unint64_t v210 = v194 - v181;
      if (v194 != v181) {
        goto LABEL_462;
      }
    }
    if (++v198 != 7) {
      continue;
    }
    return result;
  }
}